<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_audiostreamplayback.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/AudioStreamPlayback.xml.</comment>
    <target refid="class-audiostreamplayback"></target>
    <section ids="audiostreamplayback class-audiostreamplayback" names="audiostreamplayback class_audiostreamplayback">
        <title>AudioStreamPlayback</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph><strong>派生：</strong> <reference internal="True" refuri="class_audiostreamplaybackpolyphonic#class-audiostreamplaybackpolyphonic"><inline classes="std std-ref">AudioStreamPlaybackPolyphonic</inline></reference>, <reference internal="True" refuri="class_audiostreamplaybackresampled#class-audiostreamplaybackresampled"><inline classes="std std-ref">AudioStreamPlaybackResampled</inline></reference></paragraph>
        <paragraph>播放音频的元类。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>可以播放、循环播放、暂停滚动播放音频。有关用法，请参阅 <reference internal="True" refuri="class_audiostream#class-audiostream"><inline classes="std std-ref">AudioStream</inline></reference> 和 <reference internal="True" refuri="class_audiostreamoggvorbis#class-audiostreamoggvorbis"><inline classes="std std-ref">AudioStreamOggVorbis</inline></reference>。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference name="音频生成器演示" refuri="https://godotengine.org/asset-library/asset/526">音频生成器演示</reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="27"></colspec>
                    <colspec colwidth="169"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplayback-private-method-get-loop-count"><inline classes="std std-ref">_get_loop_count</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplayback-private-method-get-playback-position"><inline classes="std std-ref">_get_playback_position</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplayback-private-method-is-playing"><inline classes="std std-ref">_is_playing</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplayback-private-method-mix"><inline classes="std std-ref">_mix</inline></reference> <strong>(</strong> AudioFrame* buffer, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> rate_scale, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> frames <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplayback-private-method-seek"><inline classes="std std-ref">_seek</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> position <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplayback-private-method-start"><inline classes="std std-ref">_start</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> from_pos <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplayback-private-method-stop"><inline classes="std std-ref">_stop</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplayback-private-method-tag-used-streams"><inline classes="std std-ref">_tag_used_streams</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="方法说明">
            <title>方法说明</title>
            <target refid="class-audiostreamplayback-private-method-get-loop-count"></target>
            <paragraph classes="classref-method" ids="class-audiostreamplayback-private-method-get-loop-count" names="class_audiostreamplayback_private_method__get_loop_count"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>_get_loop_count</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamplayback-private-method-get-playback-position"></target>
            <paragraph classes="classref-method" ids="class-audiostreamplayback-private-method-get-playback-position" names="class_audiostreamplayback_private_method__get_playback_position"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>_get_playback_position</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamplayback-private-method-is-playing"></target>
            <paragraph classes="classref-method" ids="class-audiostreamplayback-private-method-is-playing" names="class_audiostreamplayback_private_method__is_playing"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>_is_playing</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamplayback-private-method-mix"></target>
            <paragraph classes="classref-method" ids="class-audiostreamplayback-private-method-mix" names="class_audiostreamplayback_private_method__mix"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>_mix</strong> <strong>(</strong> AudioFrame* buffer, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> rate_scale, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> frames <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamplayback-private-method-seek"></target>
            <paragraph classes="classref-method" ids="class-audiostreamplayback-private-method-seek" names="class_audiostreamplayback_private_method__seek">void <strong>_seek</strong> <strong>(</strong> <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> position <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamplayback-private-method-start"></target>
            <paragraph classes="classref-method" ids="class-audiostreamplayback-private-method-start" names="class_audiostreamplayback_private_method__start">void <strong>_start</strong> <strong>(</strong> <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> from_pos <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamplayback-private-method-stop"></target>
            <paragraph classes="classref-method" ids="class-audiostreamplayback-private-method-stop" names="class_audiostreamplayback_private_method__stop">void <strong>_stop</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamplayback-private-method-tag-used-streams"></target>
            <paragraph classes="classref-method" ids="class-audiostreamplayback-private-method-tag-used-streams" names="class_audiostreamplayback_private_method__tag_used_streams">void <strong>_tag_used_streams</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，所以可以直接使用类名调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

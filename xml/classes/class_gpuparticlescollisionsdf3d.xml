<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_gpuparticlescollisionsdf3d.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/GPUParticlesCollisionSDF3D.xml.</comment>
    <target refid="class-gpuparticlescollisionsdf3d"></target>
    <section ids="gpuparticlescollisionsdf3d class-gpuparticlescollisionsdf3d" names="gpuparticlescollisionsdf3d class_gpuparticlescollisionsdf3d">
        <title>GPUParticlesCollisionSDF3D</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_gpuparticlescollision3d#class-gpuparticlescollision3d"><inline classes="std std-ref">GPUParticlesCollision3D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_visualinstance3d#class-visualinstance3d"><inline classes="std std-ref">VisualInstance3D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node3d#class-node3d"><inline classes="std std-ref">Node3D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>影响 <reference internal="True" refuri="class_gpuparticles3d#class-gpuparticles3d"><inline classes="std std-ref">GPUParticles3D</inline></reference> 节点的烘焙的带符号距离场 3D 粒子碰撞形状。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>影响 <reference internal="True" refuri="class_gpuparticles3d#class-gpuparticles3d"><inline classes="std std-ref">GPUParticles3D</inline></reference> 节点的烘焙的带符号距离场 3D 粒子碰撞形状。</paragraph>
            <paragraph>有符号的距离场（SDF）允许有效地表示任何形状的凸面和凹面对象的近似碰撞形状。它比 <reference internal="True" refuri="class_gpuparticlescollisionheightfield3d#class-gpuparticlescollisionheightfield3d"><inline classes="std std-ref">GPUParticlesCollisionHeightField3D</inline></reference> 更灵活，但需要一个烘焙步骤。</paragraph>
            <paragraph><strong>烘焙：</strong>可以通过在编辑器中选择 <strong>GPUParticlesCollisionSDF3D</strong> 节点，然后点击 3D 视口顶部的<strong>烘焙 SDF</strong>，来烘焙有符号的距离场纹理。<reference internal="True" refid="class-gpuparticlescollisionsdf3d-property-size"><inline classes="std std-ref">size</inline></reference> 内的任何<emphasis>可见</emphasis> <reference internal="True" refuri="class_meshinstance3d#class-meshinstance3d"><inline classes="std std-ref">MeshInstance3D</inline></reference>，无论它们的 <reference internal="True" refuri="class_geometryinstance3d#class-geometryinstance3d-property-gi-mode"><inline classes="std std-ref">GeometryInstance3D.gi_mode</inline></reference> 如何，都将被考虑用于烘焙。</paragraph>
            <paragraph><strong>注意：</strong>烘焙 <strong>GPUParticlesCollisionSDF3D</strong> 的 <reference internal="True" refid="class-gpuparticlescollisionsdf3d-property-texture"><inline classes="std std-ref">texture</inline></reference> 只能在编辑器中进行，因为没有公开的烘焙方法可用于导出的游戏项目中。但是，在导出的游戏项目中，仍然可以将预先烘焙的 <reference internal="True" refuri="class_texture3d#class-texture3d"><inline classes="std std-ref">Texture3D</inline></reference> 加载到 <reference internal="True" refid="class-gpuparticlescollisionsdf3d-property-texture"><inline classes="std std-ref">texture</inline></reference> 属性中。</paragraph>
            <paragraph><strong>注意：</strong>在 <reference internal="True" refuri="class_gpuparticles3d#class-gpuparticles3d"><inline classes="std std-ref">GPUParticles3D</inline></reference> 的处理材质上，<reference internal="True" refuri="class_particleprocessmaterial#class-particleprocessmaterial-property-collision-mode"><inline classes="std std-ref">ParticleProcessMaterial.collision_mode</inline></reference> 必须是 <reference internal="True" refuri="class_particleprocessmaterial#class-particleprocessmaterial-constant-collision-rigid"><inline classes="std std-ref">ParticleProcessMaterial.COLLISION_RIGID</inline></reference> 或 <reference internal="True" refuri="class_particleprocessmaterial#class-particleprocessmaterial-constant-collision-hide-on-contact"><inline classes="std std-ref">ParticleProcessMaterial.COLLISION_HIDE_ON_CONTACT</inline></reference>，才能使碰撞生效。</paragraph>
            <paragraph><strong>注意：</strong>粒子碰撞只影响 <reference internal="True" refuri="class_gpuparticles3d#class-gpuparticles3d"><inline classes="std std-ref">GPUParticles3D</inline></reference>，不影响 <reference internal="True" refuri="class_cpuparticles3d#class-cpuparticles3d"><inline classes="std std-ref">CPUParticles3D</inline></reference>。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="63"></colspec>
                    <colspec colwidth="73"></colspec>
                    <colspec colwidth="22"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gpuparticlescollisionsdf3d-property-bake-mask"><inline classes="std std-ref">bake_mask</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>4294967295</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-gpuparticlescollisionsdf3d-resolution"><inline classes="std std-ref">Resolution</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gpuparticlescollisionsdf3d-property-resolution"><inline classes="std std-ref">resolution</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>2</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gpuparticlescollisionsdf3d-property-size"><inline classes="std std-ref">size</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Vector3(2, 2, 2)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture3d#class-texture3d"><inline classes="std std-ref">Texture3D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gpuparticlescollisionsdf3d-property-texture"><inline classes="std std-ref">texture</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gpuparticlescollisionsdf3d-property-thickness"><inline classes="std std-ref">thickness</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="25"></colspec>
                    <colspec colwidth="167"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gpuparticlescollisionsdf3d-method-get-bake-mask-value"><inline classes="std std-ref">get_bake_mask_value</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> layer_number <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gpuparticlescollisionsdf3d-method-set-bake-mask-value"><inline classes="std std-ref">set_bake_mask_value</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> layer_number, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> value <strong>)</strong></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="枚举">
            <title>枚举</title>
            <target refid="enum-gpuparticlescollisionsdf3d-resolution"></target>
            <paragraph classes="classref-enumeration" ids="enum-gpuparticlescollisionsdf3d-resolution" names="enum_gpuparticlescollisionsdf3d_resolution">enum <strong>Resolution</strong>:</paragraph>
            <target refid="class-gpuparticlescollisionsdf3d-constant-resolution-16"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-gpuparticlescollisionsdf3d-constant-resolution-16" names="class_gpuparticlescollisionsdf3d_constant_resolution_16"><reference internal="True" refid="enum-gpuparticlescollisionsdf3d-resolution"><inline classes="std std-ref">Resolution</inline></reference> <strong>RESOLUTION_16</strong> = <literal>0</literal></paragraph>
            <paragraph>烘焙 16×16×16 的有符号距离场。这是最快的选项，但也是最不精确的。</paragraph>
            <target refid="class-gpuparticlescollisionsdf3d-constant-resolution-32"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-gpuparticlescollisionsdf3d-constant-resolution-32" names="class_gpuparticlescollisionsdf3d_constant_resolution_32"><reference internal="True" refid="enum-gpuparticlescollisionsdf3d-resolution"><inline classes="std std-ref">Resolution</inline></reference> <strong>RESOLUTION_32</strong> = <literal>1</literal></paragraph>
            <paragraph>烘焙 32×32×32 的有符号距离场。</paragraph>
            <target refid="class-gpuparticlescollisionsdf3d-constant-resolution-64"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-gpuparticlescollisionsdf3d-constant-resolution-64" names="class_gpuparticlescollisionsdf3d_constant_resolution_64"><reference internal="True" refid="enum-gpuparticlescollisionsdf3d-resolution"><inline classes="std std-ref">Resolution</inline></reference> <strong>RESOLUTION_64</strong> = <literal>2</literal></paragraph>
            <paragraph>烘焙 64×64×64 的有符号距离场。</paragraph>
            <target refid="class-gpuparticlescollisionsdf3d-constant-resolution-128"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-gpuparticlescollisionsdf3d-constant-resolution-128" names="class_gpuparticlescollisionsdf3d_constant_resolution_128"><reference internal="True" refid="enum-gpuparticlescollisionsdf3d-resolution"><inline classes="std std-ref">Resolution</inline></reference> <strong>RESOLUTION_128</strong> = <literal>3</literal></paragraph>
            <paragraph>烘焙 128×128×128 的有符号距离场。</paragraph>
            <target refid="class-gpuparticlescollisionsdf3d-constant-resolution-256"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-gpuparticlescollisionsdf3d-constant-resolution-256" names="class_gpuparticlescollisionsdf3d_constant_resolution_256"><reference internal="True" refid="enum-gpuparticlescollisionsdf3d-resolution"><inline classes="std std-ref">Resolution</inline></reference> <strong>RESOLUTION_256</strong> = <literal>4</literal></paragraph>
            <paragraph>烘焙 256×256×256 的有符号距离场。</paragraph>
            <target refid="class-gpuparticlescollisionsdf3d-constant-resolution-512"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-gpuparticlescollisionsdf3d-constant-resolution-512" names="class_gpuparticlescollisionsdf3d_constant_resolution_512"><reference internal="True" refid="enum-gpuparticlescollisionsdf3d-resolution"><inline classes="std std-ref">Resolution</inline></reference> <strong>RESOLUTION_512</strong> = <literal>5</literal></paragraph>
            <paragraph>烘焙 512×512×512 的有符号距离场。这是最慢的选项，但也是最精确的。</paragraph>
            <target refid="class-gpuparticlescollisionsdf3d-constant-resolution-max"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-gpuparticlescollisionsdf3d-constant-resolution-max" names="class_gpuparticlescollisionsdf3d_constant_resolution_max"><reference internal="True" refid="enum-gpuparticlescollisionsdf3d-resolution"><inline classes="std std-ref">Resolution</inline></reference> <strong>RESOLUTION_MAX</strong> = <literal>6</literal></paragraph>
            <paragraph>代表 <reference internal="True" refid="enum-gpuparticlescollisionsdf3d-resolution"><inline classes="std std-ref">Resolution</inline></reference> 枚举的大小。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="属性说明">
            <title>属性说明</title>
            <target refid="class-gpuparticlescollisionsdf3d-property-bake-mask"></target>
            <paragraph classes="classref-property" ids="class-gpuparticlescollisionsdf3d-property-bake-mask" names="class_gpuparticlescollisionsdf3d_property_bake_mask"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>bake_mask</strong> = <literal>4294967295</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_bake_mask</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_bake_mask</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>烘焙粒子碰撞 SDF 时要考虑的可视层。只有其 <reference internal="True" refuri="class_visualinstance3d#class-visualinstance3d-property-layers"><inline classes="std std-ref">VisualInstance3D.layers</inline></reference> 与该 <reference internal="True" refid="class-gpuparticlescollisionsdf3d-property-bake-mask"><inline classes="std std-ref">bake_mask</inline></reference> 匹配的 <reference internal="True" refuri="class_meshinstance3d#class-meshinstance3d"><inline classes="std std-ref">MeshInstance3D</inline></reference>，才会被包含在生成的粒子碰撞 SDF 中。默认情况下，粒子碰撞 SDF 烘焙会考虑所有对象。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gpuparticlescollisionsdf3d-property-resolution"></target>
            <paragraph classes="classref-property" ids="class-gpuparticlescollisionsdf3d-property-resolution" names="class_gpuparticlescollisionsdf3d_property_resolution"><reference internal="True" refid="enum-gpuparticlescollisionsdf3d-resolution"><inline classes="std std-ref">Resolution</inline></reference> <strong>resolution</strong> = <literal>2</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_resolution</strong> <strong>(</strong> <reference internal="True" refid="enum-gpuparticlescollisionsdf3d-resolution"><inline classes="std std-ref">Resolution</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-gpuparticlescollisionsdf3d-resolution"><inline classes="std std-ref">Resolution</inline></reference> <strong>get_resolution</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>用于有符号距离场 <reference internal="True" refid="class-gpuparticlescollisionsdf3d-property-texture"><inline classes="std std-ref">texture</inline></reference> 的烘焙分辨率。必须再次烘焙纹理，才能使 <reference internal="True" refid="class-gpuparticlescollisionsdf3d-property-resolution"><inline classes="std std-ref">resolution</inline></reference> 属性的更改生效。更高的分辨率具有更高的性能成本，并且需要更多的时间来烘焙。更高的分辨率还会产生更大的烘焙纹理，从而增加 VRAM 和存储的空间需求。要提高性能并减少烘焙时间，请为表示碰撞的对象使用尽可能低的分辨率。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gpuparticlescollisionsdf3d-property-size"></target>
            <paragraph classes="classref-property" ids="class-gpuparticlescollisionsdf3d-property-size" names="class_gpuparticlescollisionsdf3d_property_size"><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> <strong>size</strong> = <literal>Vector3(2, 2, 2)</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_size</strong> <strong>(</strong> <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> <strong>get_size</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>碰撞 SDF 的大小，单位为 3D 单位。为了提高 SDF 质量，应在能覆盖需要的场景部分的同时，将 <reference internal="True" refid="class-gpuparticlescollisionsdf3d-property-size"><inline classes="std std-ref">size</inline></reference> 设置得尽可能小。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gpuparticlescollisionsdf3d-property-texture"></target>
            <paragraph classes="classref-property" ids="class-gpuparticlescollisionsdf3d-property-texture" names="class_gpuparticlescollisionsdf3d_property_texture"><reference internal="True" refuri="class_texture3d#class-texture3d"><inline classes="std std-ref">Texture3D</inline></reference> <strong>texture</strong></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_texture</strong> <strong>(</strong> <reference internal="True" refuri="class_texture3d#class-texture3d"><inline classes="std std-ref">Texture3D</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_texture3d#class-texture3d"><inline classes="std std-ref">Texture3D</inline></reference> <strong>get_texture</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>代表有符号距离场的 3D 纹理。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gpuparticlescollisionsdf3d-property-thickness"></target>
            <paragraph classes="classref-property" ids="class-gpuparticlescollisionsdf3d-property-thickness" names="class_gpuparticlescollisionsdf3d_property_thickness"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>thickness</strong> = <literal>1.0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_thickness</strong> <strong>(</strong> <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_thickness</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>碰撞形状的厚度。与其他粒子碰撞器不同，<strong>GPUParticlesCollisionSDF3D</strong> 实际上内部是空心的。可以增加 <reference internal="True" refid="class-gpuparticlescollisionsdf3d-property-thickness"><inline classes="std std-ref">thickness</inline></reference>，以防止粒子在高速运动、或者当 <strong>GPUParticlesCollisionSDF3D</strong> 移动时，穿过碰撞形状。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="方法说明">
            <title>方法说明</title>
            <target refid="class-gpuparticlescollisionsdf3d-method-get-bake-mask-value"></target>
            <paragraph classes="classref-method" ids="class-gpuparticlescollisionsdf3d-method-get-bake-mask-value" names="class_gpuparticlescollisionsdf3d_method_get_bake_mask_value"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_bake_mask_value</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> layer_number <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回是否启用了 <reference internal="True" refid="class-gpuparticlescollisionsdf3d-property-bake-mask"><inline classes="std std-ref">bake_mask</inline></reference> 的指定层，该层由给定的一个介于 1 和 32 之间的 <literal>layer_number</literal> 指定。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gpuparticlescollisionsdf3d-method-set-bake-mask-value"></target>
            <paragraph classes="classref-method" ids="class-gpuparticlescollisionsdf3d-method-set-bake-mask-value" names="class_gpuparticlescollisionsdf3d_method_set_bake_mask_value">void <strong>set_bake_mask_value</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> layer_number, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> value <strong>)</strong></paragraph>
            <paragraph>基于 <literal>value</literal>，启用或禁用 <reference internal="True" refid="class-gpuparticlescollisionsdf3d-property-bake-mask"><inline classes="std std-ref">bake_mask</inline></reference> 中的指定层，该层由给定的一个介于 1 和 32 之间的 <literal>layer_number</literal> 指定。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，所以可以直接使用类名调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_pinjoint2d.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/PinJoint2D.xml.</comment>
    <target refid="class-pinjoint2d"></target>
    <section ids="pinjoint2d class-pinjoint2d" names="pinjoint2d class_pinjoint2d">
        <title>PinJoint2D</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_joint2d#class-joint2d"><inline classes="std std-ref">Joint2D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node2d#class-node2d"><inline classes="std std-ref">Node2D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_canvasitem#class-canvasitem"><inline classes="std std-ref">CanvasItem</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>将两个 2D 物理体通过单点进行连接的物理关节，能够让它们自由旋转。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>将两个 2D 物理体通过单点进行连接的物理关节，能够让它们自由旋转。例如可以将 <reference internal="True" refuri="class_rigidbody2d#class-rigidbody2d"><inline classes="std std-ref">RigidBody2D</inline></reference> 连接到 <reference internal="True" refuri="class_staticbody2d#class-staticbody2d"><inline classes="std std-ref">StaticBody2D</inline></reference> 上，从而创建钟摆或跷跷板。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="27"></colspec>
                    <colspec colwidth="79"></colspec>
                    <colspec colwidth="11"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-pinjoint2d-property-angular-limit-enabled"><inline classes="std std-ref">angular_limit_enabled</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-pinjoint2d-property-angular-limit-lower"><inline classes="std std-ref">angular_limit_lower</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-pinjoint2d-property-angular-limit-upper"><inline classes="std std-ref">angular_limit_upper</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-pinjoint2d-property-motor-enabled"><inline classes="std std-ref">motor_enabled</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-pinjoint2d-property-motor-target-velocity"><inline classes="std std-ref">motor_target_velocity</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-pinjoint2d-property-softness"><inline classes="std std-ref">softness</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="属性说明">
            <title>属性说明</title>
            <target refid="class-pinjoint2d-property-angular-limit-enabled"></target>
            <paragraph classes="classref-property" ids="class-pinjoint2d-property-angular-limit-enabled" names="class_pinjoint2d_property_angular_limit_enabled"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>angular_limit_enabled</strong> = <literal>false</literal> <reference internal="True" refid="class-pinjoint2d-property-angular-limit-enabled"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_angular_limit_enabled</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_angular_limit_enabled</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则应用由 <reference internal="True" refid="class-pinjoint2d-property-angular-limit-lower"><inline classes="std std-ref">angular_limit_lower</inline></reference> 和 <reference internal="True" refid="class-pinjoint2d-property-angular-limit-upper"><inline classes="std std-ref">angular_limit_upper</inline></reference> 定义的销的最大和最小旋转。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-pinjoint2d-property-angular-limit-lower"></target>
            <paragraph classes="classref-property" ids="class-pinjoint2d-property-angular-limit-lower" names="class_pinjoint2d_property_angular_limit_lower"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>angular_limit_lower</strong> = <literal>0.0</literal> <reference internal="True" refid="class-pinjoint2d-property-angular-limit-lower"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_angular_limit_lower</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_angular_limit_lower</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>最小的旋转量。只有在 <reference internal="True" refid="class-pinjoint2d-property-angular-limit-enabled"><inline classes="std std-ref">angular_limit_enabled</inline></reference> 为 <literal>true</literal> 时才有效。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-pinjoint2d-property-angular-limit-upper"></target>
            <paragraph classes="classref-property" ids="class-pinjoint2d-property-angular-limit-upper" names="class_pinjoint2d_property_angular_limit_upper"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>angular_limit_upper</strong> = <literal>0.0</literal> <reference internal="True" refid="class-pinjoint2d-property-angular-limit-upper"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_angular_limit_upper</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_angular_limit_upper</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>最大的旋转量。只有在 <reference internal="True" refid="class-pinjoint2d-property-angular-limit-enabled"><inline classes="std std-ref">angular_limit_enabled</inline></reference> 为 <literal>true</literal> 时才有效。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-pinjoint2d-property-motor-enabled"></target>
            <paragraph classes="classref-property" ids="class-pinjoint2d-property-motor-enabled" names="class_pinjoint2d_property_motor_enabled"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>motor_enabled</strong> = <literal>false</literal> <reference internal="True" refid="class-pinjoint2d-property-motor-enabled"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_motor_enabled</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_motor_enabled</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>激活后，马达会转动该销。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-pinjoint2d-property-motor-target-velocity"></target>
            <paragraph classes="classref-property" ids="class-pinjoint2d-property-motor-target-velocity" names="class_pinjoint2d_property_motor_target_velocity"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>motor_target_velocity</strong> = <literal>0.0</literal> <reference internal="True" refid="class-pinjoint2d-property-motor-target-velocity"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_motor_target_velocity</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_motor_target_velocity</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>马达的目标速度。单位为弧度每秒。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-pinjoint2d-property-softness"></target>
            <paragraph classes="classref-property" ids="class-pinjoint2d-property-softness" names="class_pinjoint2d_property_softness"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>softness</strong> = <literal>0.0</literal> <reference internal="True" refid="class-pinjoint2d-property-softness"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_softness</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_softness</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>这个值越高，与被牵制的两个物体之间的的联系就越灵活。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

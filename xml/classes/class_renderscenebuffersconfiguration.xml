<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_renderscenebuffersconfiguration.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/RenderSceneBuffersConfiguration.xml.</comment>
    <target refid="class-renderscenebuffersconfiguration"></target>
    <section ids="renderscenebuffersconfiguration class-renderscenebuffersconfiguration" names="renderscenebuffersconfiguration class_renderscenebuffersconfiguration">
        <title>RenderSceneBuffersConfiguration</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>用于设置 <reference internal="True" refuri="class_renderscenebuffers#class-renderscenebuffers"><inline classes="std std-ref">RenderSceneBuffers</inline></reference> 对象的配置对象。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>该配置对象由渲染引擎在视口更改时创建和填充，并用于（重新）配置 <reference internal="True" refuri="class_renderscenebuffers#class-renderscenebuffers"><inline classes="std std-ref">RenderSceneBuffers</inline></reference> 对象。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="74"></colspec>
                    <colspec colwidth="96"></colspec>
                    <colspec colwidth="20"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-renderscenebuffersconfiguration-property-fsr-sharpness"><inline classes="std std-ref">fsr_sharpness</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-renderscenebuffersconfiguration-property-internal-size"><inline classes="std std-ref">internal_size</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Vector2i(0, 0)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_renderingserver#enum-renderingserver-viewportmsaa"><inline classes="std std-ref">ViewportMSAA</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-renderscenebuffersconfiguration-property-msaa-3d"><inline classes="std std-ref">msaa_3d</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-renderscenebuffersconfiguration-property-render-target"><inline classes="std std-ref">render_target</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>RID()</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_renderingserver#enum-renderingserver-viewportscaling3dmode"><inline classes="std std-ref">ViewportScaling3DMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-renderscenebuffersconfiguration-property-scaling-3d-mode"><inline classes="std std-ref">scaling_3d_mode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>255</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_renderingserver#enum-renderingserver-viewportscreenspaceaa"><inline classes="std std-ref">ViewportScreenSpaceAA</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-renderscenebuffersconfiguration-property-screen-space-aa"><inline classes="std std-ref">screen_space_aa</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-renderscenebuffersconfiguration-property-target-size"><inline classes="std std-ref">target_size</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Vector2i(0, 0)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-renderscenebuffersconfiguration-property-texture-mipmap-bias"><inline classes="std std-ref">texture_mipmap_bias</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-renderscenebuffersconfiguration-property-view-count"><inline classes="std std-ref">view_count</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="属性说明">
            <title>属性说明</title>
            <target refid="class-renderscenebuffersconfiguration-property-fsr-sharpness"></target>
            <paragraph classes="classref-property" ids="class-renderscenebuffersconfiguration-property-fsr-sharpness" names="class_renderscenebuffersconfiguration_property_fsr_sharpness"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>fsr_sharpness</strong> = <literal>0.0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_fsr_sharpness</strong> <strong>(</strong> <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_fsr_sharpness</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果使用 FSR 放大，则 FSR 锐度适用。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-renderscenebuffersconfiguration-property-internal-size"></target>
            <paragraph classes="classref-property" ids="class-renderscenebuffersconfiguration-property-internal-size" names="class_renderscenebuffersconfiguration_property_internal_size"><reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> <strong>internal_size</strong> = <literal>Vector2i(0, 0)</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_internal_size</strong> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> <strong>get_internal_size</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>用于渲染的 3D 渲染缓冲区的大小。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-renderscenebuffersconfiguration-property-msaa-3d"></target>
            <paragraph classes="classref-property" ids="class-renderscenebuffersconfiguration-property-msaa-3d" names="class_renderscenebuffersconfiguration_property_msaa_3d"><reference internal="True" refuri="class_renderingserver#enum-renderingserver-viewportmsaa"><inline classes="std std-ref">ViewportMSAA</inline></reference> <strong>msaa_3d</strong> = <literal>0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_msaa_3d</strong> <strong>(</strong> <reference internal="True" refuri="class_renderingserver#enum-renderingserver-viewportmsaa"><inline classes="std std-ref">ViewportMSAA</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_renderingserver#enum-renderingserver-viewportmsaa"><inline classes="std std-ref">ViewportMSAA</inline></reference> <strong>get_msaa_3d</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>用于 3D 渲染的 MSAA 模式。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-renderscenebuffersconfiguration-property-render-target"></target>
            <paragraph classes="classref-property" ids="class-renderscenebuffersconfiguration-property-render-target" names="class_renderscenebuffersconfiguration_property_render_target"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>render_target</strong> = <literal>RID()</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_render_target</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>get_render_target</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>与这些缓冲区关联的渲染目标。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-renderscenebuffersconfiguration-property-scaling-3d-mode"></target>
            <paragraph classes="classref-property" ids="class-renderscenebuffersconfiguration-property-scaling-3d-mode" names="class_renderscenebuffersconfiguration_property_scaling_3d_mode"><reference internal="True" refuri="class_renderingserver#enum-renderingserver-viewportscaling3dmode"><inline classes="std std-ref">ViewportScaling3DMode</inline></reference> <strong>scaling_3d_mode</strong> = <literal>255</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_scaling_3d_mode</strong> <strong>(</strong> <reference internal="True" refuri="class_renderingserver#enum-renderingserver-viewportscaling3dmode"><inline classes="std std-ref">ViewportScaling3DMode</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_renderingserver#enum-renderingserver-viewportscaling3dmode"><inline classes="std std-ref">ViewportScaling3DMode</inline></reference> <strong>get_scaling_3d_mode</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果 <reference internal="True" refid="class-renderscenebuffersconfiguration-property-internal-size"><inline classes="std std-ref">internal_size</inline></reference> 和 <reference internal="True" refid="class-renderscenebuffersconfiguration-property-target-size"><inline classes="std std-ref">target_size</inline></reference> 不相等，则将使用所请求的缩放模式进行放大/缩小。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-renderscenebuffersconfiguration-property-screen-space-aa"></target>
            <paragraph classes="classref-property" ids="class-renderscenebuffersconfiguration-property-screen-space-aa" names="class_renderscenebuffersconfiguration_property_screen_space_aa"><reference internal="True" refuri="class_renderingserver#enum-renderingserver-viewportscreenspaceaa"><inline classes="std std-ref">ViewportScreenSpaceAA</inline></reference> <strong>screen_space_aa</strong> = <literal>0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_screen_space_aa</strong> <strong>(</strong> <reference internal="True" refuri="class_renderingserver#enum-renderingserver-viewportscreenspaceaa"><inline classes="std std-ref">ViewportScreenSpaceAA</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_renderingserver#enum-renderingserver-viewportscreenspaceaa"><inline classes="std std-ref">ViewportScreenSpaceAA</inline></reference> <strong>get_screen_space_aa</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>请求在后期处理中应用的屏幕空间抗锯齿。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-renderscenebuffersconfiguration-property-target-size"></target>
            <paragraph classes="classref-property" ids="class-renderscenebuffersconfiguration-property-target-size" names="class_renderscenebuffersconfiguration_property_target_size"><reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> <strong>target_size</strong> = <literal>Vector2i(0, 0)</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_target_size</strong> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> <strong>get_target_size</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>使用缩放时的目标（放大）大小。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-renderscenebuffersconfiguration-property-texture-mipmap-bias"></target>
            <paragraph classes="classref-property" ids="class-renderscenebuffersconfiguration-property-texture-mipmap-bias" names="class_renderscenebuffersconfiguration_property_texture_mipmap_bias"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>texture_mipmap_bias</strong> = <literal>0.0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_texture_mipmap_bias</strong> <strong>(</strong> <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_texture_mipmap_bias</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>应用于 mipmap 的偏置。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-renderscenebuffersconfiguration-property-view-count"></target>
            <paragraph classes="classref-property" ids="class-renderscenebuffersconfiguration-property-view-count" names="class_renderscenebuffersconfiguration_property_view_count"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>view_count</strong> = <literal>1</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_view_count</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_view_count</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>渲染的视图数。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，所以可以直接使用类名调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_skeletonmodification2dtwoboneik.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/SkeletonModification2DTwoBoneIK.xml.</comment>
    <target refid="class-skeletonmodification2dtwoboneik"></target>
    <section ids="skeletonmodification2dtwoboneik class-skeletonmodification2dtwoboneik" names="skeletonmodification2dtwoboneik class_skeletonmodification2dtwoboneik">
        <title>SkeletonModification2DTwoBoneIK</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_skeletonmodification2d#class-skeletonmodification2d"><inline classes="std std-ref">SkeletonModification2D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>这种修改器会让两个骨骼按照余弦定理进行旋转，最终抵达目标。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>这种 <reference internal="True" refuri="class_skeletonmodification2d#class-skeletonmodification2d"><inline classes="std std-ref">SkeletonModification2D</inline></reference> 所使用的算法一般称之为 TwoBoneIK。这种算法的原理是利用余弦定理和骨骼的长度来推算骨骼当前的旋转量和构成三角形所需的旋转量，三角形由第一根骨骼、第二根骨骼以及目标构成。因为这种算法的原理是构成三角形，所以仅能对两根骨骼进行操作。</paragraph>
            <paragraph>TwoBoneIK 适用于手臂、腿部，其实任何能够用两根骨头弯向某个目标来代表的关节均能使用。求解器比 <reference internal="True" refuri="class_skeletonmodification2dfabrik#class-skeletonmodification2dfabrik"><inline classes="std std-ref">SkeletonModification2DFABRIK</inline></reference> 更轻量，但也能得到类似的比较自然的结果。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="33"></colspec>
                    <colspec colwidth="104"></colspec>
                    <colspec colwidth="18"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2dtwoboneik-property-flip-bend-direction"><inline classes="std std-ref">flip_bend_direction</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2dtwoboneik-property-target-maximum-distance"><inline classes="std std-ref">target_maximum_distance</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2dtwoboneik-property-target-minimum-distance"><inline classes="std std-ref">target_minimum_distance</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2dtwoboneik-property-target-nodepath"><inline classes="std std-ref">target_nodepath</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>NodePath("")</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="33"></colspec>
                    <colspec colwidth="162"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2dtwoboneik-method-get-joint-one-bone2d-node"><inline classes="std std-ref">get_joint_one_bone2d_node</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2dtwoboneik-method-get-joint-one-bone-idx"><inline classes="std std-ref">get_joint_one_bone_idx</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2dtwoboneik-method-get-joint-two-bone2d-node"><inline classes="std std-ref">get_joint_two_bone2d_node</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2dtwoboneik-method-get-joint-two-bone-idx"><inline classes="std std-ref">get_joint_two_bone_idx</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2dtwoboneik-method-set-joint-one-bone2d-node"><inline classes="std std-ref">set_joint_one_bone2d_node</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> bone2d_node <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2dtwoboneik-method-set-joint-one-bone-idx"><inline classes="std std-ref">set_joint_one_bone_idx</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> bone_idx <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2dtwoboneik-method-set-joint-two-bone2d-node"><inline classes="std std-ref">set_joint_two_bone2d_node</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> bone2d_node <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2dtwoboneik-method-set-joint-two-bone-idx"><inline classes="std std-ref">set_joint_two_bone_idx</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> bone_idx <strong>)</strong></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="属性说明">
            <title>属性说明</title>
            <target refid="class-skeletonmodification2dtwoboneik-property-flip-bend-direction"></target>
            <paragraph classes="classref-property" ids="class-skeletonmodification2dtwoboneik-property-flip-bend-direction" names="class_skeletonmodification2dtwoboneik_property_flip_bend_direction"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>flip_bend_direction</strong> = <literal>false</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_flip_bend_direction</strong> <strong>(</strong> <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_flip_bend_direction</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则该修改中的骨骼在收缩时将向外弯曲，而不是向内弯曲。如果为 <literal>false</literal>，则骨骼在收缩时会向内弯曲。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2dtwoboneik-property-target-maximum-distance"></target>
            <paragraph classes="classref-property" ids="class-skeletonmodification2dtwoboneik-property-target-maximum-distance" names="class_skeletonmodification2dtwoboneik_property_target_maximum_distance"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>target_maximum_distance</strong> = <literal>0.0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_target_maximum_distance</strong> <strong>(</strong> <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_target_maximum_distance</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>该目标可以到达的最大距离。如果目标比这个距离更远，则该修改将如同它就在这个最大距离处一样求解。当设置为 <literal>0</literal> 时，则该修改将不受距离限制地求解。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2dtwoboneik-property-target-minimum-distance"></target>
            <paragraph classes="classref-property" ids="class-skeletonmodification2dtwoboneik-property-target-minimum-distance" names="class_skeletonmodification2dtwoboneik_property_target_minimum_distance"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>target_minimum_distance</strong> = <literal>0.0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_target_minimum_distance</strong> <strong>(</strong> <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_target_minimum_distance</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>该目标可以到达的最小距离。如果目标比这个距离更近，则该修改将如同它就在这个最小距离处一样求解。当设置为 <literal>0</literal> 时，则该修改将不受距离限制地求解。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2dtwoboneik-property-target-nodepath"></target>
            <paragraph classes="classref-property" ids="class-skeletonmodification2dtwoboneik-property-target-nodepath" names="class_skeletonmodification2dtwoboneik_property_target_nodepath"><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> <strong>target_nodepath</strong> = <literal>NodePath("")</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_target_node</strong> <strong>(</strong> <reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> <strong>get_target_node</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>作为 TwoBoneIK 修改目标的节点的 NodePath。该节点是弯曲 <reference internal="True" refuri="class_bone2d#class-bone2d"><inline classes="std std-ref">Bone2D</inline></reference> 节点时该修改将使用的节点。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="方法说明">
            <title>方法说明</title>
            <target refid="class-skeletonmodification2dtwoboneik-method-get-joint-one-bone2d-node"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodification2dtwoboneik-method-get-joint-one-bone2d-node" names="class_skeletonmodification2dtwoboneik_method_get_joint_one_bone2d_node"><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> <strong>get_joint_one_bone2d_node</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回 TwoBoneIK 修改器中作为第一个骨骼的 <reference internal="True" refuri="class_bone2d#class-bone2d"><inline classes="std std-ref">Bone2D</inline></reference> 节点。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2dtwoboneik-method-get-joint-one-bone-idx"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodification2dtwoboneik-method-get-joint-one-bone-idx" names="class_skeletonmodification2dtwoboneik_method_get_joint_one_bone_idx"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_joint_one_bone_idx</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回 TwoBoneIK 修改器中作为第一个骨骼的 <reference internal="True" refuri="class_bone2d#class-bone2d"><inline classes="std std-ref">Bone2D</inline></reference> 节点的索引。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2dtwoboneik-method-get-joint-two-bone2d-node"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodification2dtwoboneik-method-get-joint-two-bone2d-node" names="class_skeletonmodification2dtwoboneik_method_get_joint_two_bone2d_node"><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> <strong>get_joint_two_bone2d_node</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回 TwoBoneIK 修改器中作为第二个骨骼的 <reference internal="True" refuri="class_bone2d#class-bone2d"><inline classes="std std-ref">Bone2D</inline></reference> 节点。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2dtwoboneik-method-get-joint-two-bone-idx"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodification2dtwoboneik-method-get-joint-two-bone-idx" names="class_skeletonmodification2dtwoboneik_method_get_joint_two_bone_idx"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_joint_two_bone_idx</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回 TwoBoneIK 修改器中作为第二个骨骼的 <reference internal="True" refuri="class_bone2d#class-bone2d"><inline classes="std std-ref">Bone2D</inline></reference> 节点的索引。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2dtwoboneik-method-set-joint-one-bone2d-node"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodification2dtwoboneik-method-set-joint-one-bone2d-node" names="class_skeletonmodification2dtwoboneik_method_set_joint_one_bone2d_node">void <strong>set_joint_one_bone2d_node</strong> <strong>(</strong> <reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> bone2d_node <strong>)</strong></paragraph>
            <paragraph>设置 TwoBoneIK 修改器中作为第一个骨骼的 <reference internal="True" refuri="class_bone2d#class-bone2d"><inline classes="std std-ref">Bone2D</inline></reference> 节点。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2dtwoboneik-method-set-joint-one-bone-idx"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodification2dtwoboneik-method-set-joint-one-bone-idx" names="class_skeletonmodification2dtwoboneik_method_set_joint_one_bone_idx">void <strong>set_joint_one_bone_idx</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> bone_idx <strong>)</strong></paragraph>
            <paragraph>设置 TwoBoneIK 修改器中作为第一个骨骼的 <reference internal="True" refuri="class_bone2d#class-bone2d"><inline classes="std std-ref">Bone2D</inline></reference> 节点的索引。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2dtwoboneik-method-set-joint-two-bone2d-node"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodification2dtwoboneik-method-set-joint-two-bone2d-node" names="class_skeletonmodification2dtwoboneik_method_set_joint_two_bone2d_node">void <strong>set_joint_two_bone2d_node</strong> <strong>(</strong> <reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> bone2d_node <strong>)</strong></paragraph>
            <paragraph>设置 TwoBoneIK 修改器中作为第二个骨骼的 <reference internal="True" refuri="class_bone2d#class-bone2d"><inline classes="std std-ref">Bone2D</inline></reference> 节点。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2dtwoboneik-method-set-joint-two-bone-idx"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodification2dtwoboneik-method-set-joint-two-bone-idx" names="class_skeletonmodification2dtwoboneik_method_set_joint_two_bone_idx">void <strong>set_joint_two_bone_idx</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> bone_idx <strong>)</strong></paragraph>
            <paragraph>设置 TwoBoneIK 修改器中作为第二个骨骼的 <reference internal="True" refuri="class_bone2d#class-bone2d"><inline classes="std std-ref">Bone2D</inline></reference> 节点的索引。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，所以可以直接使用类名调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_resourceimportertexture.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/ResourceImporterTexture.xml.</comment>
    <target refid="class-resourceimportertexture"></target>
    <section ids="resourceimportertexture class-resourceimportertexture" names="resourceimportertexture class_resourceimportertexture">
        <title>ResourceImporterTexture</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_resourceimporter#class-resourceimporter"><inline classes="std std-ref">ResourceImporter</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>导入图像以用于 2D 或 3D 渲染。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>该导入器导入 <reference internal="True" refuri="class_compressedtexture2d#class-compressedtexture2d"><inline classes="std std-ref">CompressedTexture2D</inline></reference> 资源。如果你需要以更方便的方式处理脚本中的图像，请改用 <reference internal="True" refuri="class_resourceimporterimage#class-resourceimporterimage"><inline classes="std std-ref">ResourceImporterImage</inline></reference>。另见 <reference internal="True" refuri="class_resourceimporterlayeredtexture#class-resourceimporterlayeredtexture"><inline classes="std std-ref">ResourceImporterLayeredTexture</inline></reference>。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference internal="True" refuri="../tutorials/assets_pipeline/importing_images"><inline classes="doc">导入图像</inline></reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="29"></colspec>
                    <colspec colwidth="128"></colspec>
                    <colspec colwidth="11"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-resourceimportertexture-property-compress-channel-pack"><inline classes="std std-ref">compress/channel_pack</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-resourceimportertexture-property-compress-hdr-compression"><inline classes="std std-ref">compress/hdr_compression</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-resourceimportertexture-property-compress-high-quality"><inline classes="std std-ref">compress/high_quality</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-resourceimportertexture-property-compress-lossy-quality"><inline classes="std std-ref">compress/lossy_quality</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.7</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-resourceimportertexture-property-compress-mode"><inline classes="std std-ref">compress/mode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-resourceimportertexture-property-compress-normal-map"><inline classes="std std-ref">compress/normal_map</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-resourceimportertexture-property-detect-3d-compress-to"><inline classes="std std-ref">detect_3d/compress_to</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-resourceimportertexture-property-editor-convert-colors-with-editor-theme"><inline classes="std std-ref">editor/convert_colors_with_editor_theme</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-resourceimportertexture-property-editor-scale-with-editor-scale"><inline classes="std std-ref">editor/scale_with_editor_scale</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-resourceimportertexture-property-mipmaps-generate"><inline classes="std std-ref">mipmaps/generate</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-resourceimportertexture-property-mipmaps-limit"><inline classes="std std-ref">mipmaps/limit</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>-1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-resourceimportertexture-property-process-fix-alpha-border"><inline classes="std std-ref">process/fix_alpha_border</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-resourceimportertexture-property-process-hdr-as-srgb"><inline classes="std std-ref">process/hdr_as_srgb</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-resourceimportertexture-property-process-hdr-clamp-exposure"><inline classes="std std-ref">process/hdr_clamp_exposure</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-resourceimportertexture-property-process-normal-map-invert-y"><inline classes="std std-ref">process/normal_map_invert_y</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-resourceimportertexture-property-process-premult-alpha"><inline classes="std std-ref">process/premult_alpha</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-resourceimportertexture-property-process-size-limit"><inline classes="std std-ref">process/size_limit</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-resourceimportertexture-property-roughness-mode"><inline classes="std std-ref">roughness/mode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-resourceimportertexture-property-roughness-src-normal"><inline classes="std std-ref">roughness/src_normal</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>""</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-resourceimportertexture-property-svg-scale"><inline classes="std std-ref">svg/scale</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="属性说明">
            <title>属性说明</title>
            <target refid="class-resourceimportertexture-property-compress-channel-pack"></target>
            <paragraph classes="classref-property" ids="class-resourceimportertexture-property-compress-channel-pack" names="class_resourceimportertexture_property_compress/channel_pack"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>compress/channel_pack</strong> = <literal>0</literal> <reference internal="True" refid="class-resourceimportertexture-property-compress-channel-pack"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>控制在导入的纹理中应如何使用颜色通道。</paragraph>
            <paragraph><strong>sRGB 友好：</strong>阻止使用 RG 颜色格式，因为它不支持 sRGB 颜色。</paragraph>
            <paragraph><strong>优化：</strong>如果纹理不使用蓝色通道，则允许使用 RG 颜色格式。如果可以丢弃纹理的蓝色通道（所有像素的蓝色值必须为 <literal>0</literal>），则可以减少内存占用。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-resourceimportertexture-property-compress-hdr-compression"></target>
            <paragraph classes="classref-property" ids="class-resourceimportertexture-property-compress-hdr-compression" names="class_resourceimportertexture_property_compress/hdr_compression"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>compress/hdr_compression</strong> = <literal>1</literal> <reference internal="True" refid="class-resourceimportertexture-property-compress-hdr-compression"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>控制如何对 HDR 图像执行 VRAM 压缩。</paragraph>
            <paragraph><strong>禁用：</strong>永远不要对 HDR 纹理使用 VRAM 压缩，无论它们是否透明。相反，该纹理会被转换为 RGBE9995（每通道 9 位 + 5 位指数 = 每像素 32 位），与半浮点或单精度浮点图像格式相比，会减少内存使用量。</paragraph>
            <paragraph><strong>仅不透明：</strong>仅对不透明 HDR 纹理使用 VRAM 压缩。这是由于 HDR 格式的限制，因为没有支持 VRAM 压缩且同时支持透明度的 HDR 格式。</paragraph>
            <paragraph><strong>始终：</strong>强制 VRAM 压缩，即使对于具有 Alpha 通道的 HDR 纹理也是如此。为此，在导入时将丢弃 Alpha 通道。</paragraph>
            <paragraph><strong>注意：</strong>仅对 Radiance HDR（<literal>.hdr</literal>）和 OpenEXR（<literal>.exr</literal>）图像有效。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-resourceimportertexture-property-compress-high-quality"></target>
            <paragraph classes="classref-property" ids="class-resourceimportertexture-property-compress-high-quality" names="class_resourceimportertexture_property_compress/high_quality"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>compress/high_quality</strong> = <literal>false</literal> <reference internal="True" refid="class-resourceimportertexture-property-compress-high-quality"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果为 <literal>true</literal>，则在桌面平台上使用 BPTC 压缩，在移动平台上使用 ASTC 压缩。使用 BPTC 时，BC7 被用于 SDR 纹理，BC6H 被用于 HDR 纹理。</paragraph>
            <paragraph>如果为 <literal>false</literal>，则在桌面平台上使用速度更快但质量较低的 S3TC 压缩，在移动/Web 平台上使用 ETC2。使用 S3TC 时，DXT1 (BC1) 被用于不透明纹理，DXT5 (BC3) 被用于透明或法线贴图（RGTC）纹理。</paragraph>
            <paragraph>BPTC 和 ASTC 支持 HDR 纹理的 VRAM 压缩，但 S3TC 和 ETC2 不支持（请参阅 <reference internal="True" refid="class-resourceimportertexture-property-compress-hdr-compression"><inline classes="std std-ref">compress/hdr_compression</inline></reference>）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-resourceimportertexture-property-compress-lossy-quality"></target>
            <paragraph classes="classref-property" ids="class-resourceimportertexture-property-compress-lossy-quality" names="class_resourceimportertexture_property_compress/lossy_quality"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>compress/lossy_quality</strong> = <literal>0.7</literal> <reference internal="True" refid="class-resourceimportertexture-property-compress-lossy-quality"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>使用<strong>有损</strong>压缩模式时使用的质量。值越高，质量越好，但文件大小越大。有损质量不会影响导入纹理的内存使用情况，只会影响它在磁盘上的文件大小。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-resourceimportertexture-property-compress-mode"></target>
            <paragraph classes="classref-property" ids="class-resourceimportertexture-property-compress-mode" names="class_resourceimportertexture_property_compress/mode"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>compress/mode</strong> = <literal>0</literal> <reference internal="True" refid="class-resourceimportertexture-property-compress-mode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>要使用的压缩模式。每种压缩模式都提供不同的权衡：</paragraph>
            <paragraph><strong>无损：</strong>原始质量、高内存占用、高磁盘占用、导入速度快。</paragraph>
            <paragraph><strong>有损：</strong>质量降低、高内存占用、低磁盘占用、导入速度快。</paragraph>
            <paragraph><strong>VRAM 压缩：</strong>质量降低、低内存占用、低磁盘占用、导入速度最慢。仅适用于 3D 场景中的纹理，不适用于 2D 元素。</paragraph>
            <paragraph><strong>VRAM 未压缩：</strong>原始质量、高内存占用、最高磁盘占用、导入速度最快。</paragraph>
            <paragraph><strong>Basis Universal：</strong>质量降低、低内存占用、最低磁盘占用、导入速度慢。仅适用于 3D 场景中的纹理，不适用于 2D 元素。</paragraph>
            <paragraph>有关更多详细信息，请参阅手册中的 <reference name="压缩模式" refuri="../tutorials/assets_pipeline/importing_images.html#compress-mode">压缩模式</reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-resourceimportertexture-property-compress-normal-map"></target>
            <paragraph classes="classref-property" ids="class-resourceimportertexture-property-compress-normal-map" names="class_resourceimportertexture_property_compress/normal_map"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>compress/normal_map</strong> = <literal>0</literal> <reference internal="True" refid="class-resourceimportertexture-property-compress-normal-map"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当使用纹理作为法线贴图时，仅需要红色和绿色通道。鉴于常规纹理压缩算法会产生在法线贴图中看起来不太好的伪像，因此 RGTC 压缩格式最适合该数据。 强制该选项启用将使 Godot 以 RGTC 压缩形式导入图像。默认情况下，它被设置为“检测”。这意味着，如果纹理被检测到用作法线贴图，它将被更改为“启用”并自动重新导入。</paragraph>
            <paragraph>请注意，RGTC 压缩会影响生成的法线贴图图像。你必须调整使用法线贴图的蓝色通道的自定义着色器才能考虑到这一点。内置材质着色器已经忽略法线贴图中的蓝色通道（无论实际法线贴图的内容如何）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-resourceimportertexture-property-detect-3d-compress-to"></target>
            <paragraph classes="classref-property" ids="class-resourceimportertexture-property-detect-3d-compress-to" names="class_resourceimportertexture_property_detect_3d/compress_to"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>detect_3d/compress_to</strong> = <literal>1</literal> <reference internal="True" refid="class-resourceimportertexture-property-detect-3d-compress-to"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>这会更改检测到纹理在 3D 中使用时使用的 <reference internal="True" refid="class-resourceimportertexture-property-compress-mode"><inline classes="std std-ref">compress/mode</inline></reference> 选项。</paragraph>
            <paragraph>仅当检测到纹理正在 3D 中使用时，更改该导入选项才会生效。将其更改为<strong>禁用</strong>，然后重新导入不会更改纹理上的已有压缩模式（如果被检测到在 3D 中使用），但选择 <strong>VRAM 压缩</strong>或 <strong>Basis Universal</strong> 却会。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-resourceimportertexture-property-editor-convert-colors-with-editor-theme"></target>
            <paragraph classes="classref-property" ids="class-resourceimportertexture-property-editor-convert-colors-with-editor-theme" names="class_resourceimportertexture_property_editor/convert_colors_with_editor_theme"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>editor/convert_colors_with_editor_theme</strong> = <literal>false</literal> <reference internal="True" refid="class-resourceimportertexture-property-editor-convert-colors-with-editor-theme"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果为 <literal>true</literal>，则转换导入图像的颜色以匹配 <reference internal="True" refuri="class_editorsettings#class-editorsettings-property-interface-theme-icon-and-font-color"><inline classes="std std-ref">EditorSettings.interface/theme/icon_and_font_color</inline></reference>。这假设该图像使用与 <reference internal="True" refuri="../contributing/development/editor/creating_icons"><inline classes="doc">Godot 自己的编辑器图标调色板</inline></reference>完全相同的颜色，源文件是为深色编辑器主题设计的。应该为编辑器插件图标和自定义类图标启用该功能，否则应保持禁用状态。</paragraph>
            <paragraph><strong>注意：</strong>仅适用于 SVG 图像。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-resourceimportertexture-property-editor-scale-with-editor-scale"></target>
            <paragraph classes="classref-property" ids="class-resourceimportertexture-property-editor-scale-with-editor-scale" names="class_resourceimportertexture_property_editor/scale_with_editor_scale"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>editor/scale_with_editor_scale</strong> = <literal>false</literal> <reference internal="True" refid="class-resourceimportertexture-property-editor-scale-with-editor-scale"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果为 <literal>true</literal>，则缩放导入的图像以匹配 <reference internal="True" refuri="class_editorsettings#class-editorsettings-property-interface-editor-custom-display-scale"><inline classes="std std-ref">EditorSettings.interface/editor/custom_display_scale</inline></reference>。应该为编辑器插件图标和自定义类图标启用该功能，否则应保持禁用状态。</paragraph>
            <paragraph><strong>注意：</strong>仅适用于 SVG 图像。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-resourceimportertexture-property-mipmaps-generate"></target>
            <paragraph classes="classref-property" ids="class-resourceimportertexture-property-mipmaps-generate" names="class_resourceimportertexture_property_mipmaps/generate"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>mipmaps/generate</strong> = <literal>false</literal> <reference internal="True" refid="class-resourceimportertexture-property-mipmaps-generate"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果为 <literal>true</literal>，则在导入时生成较小版本的纹理。例如，64×64 纹理将生成 6 个多级渐远纹理（32×32、16×16、8×8、4×4、2×2、1×1）。这样做有几个好处：</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>纹理在远处（在 3D 中）或由于 <reference internal="True" refuri="class_camera2d#class-camera2d"><inline classes="std std-ref">Camera2D</inline></reference> 缩放或 <reference internal="True" refuri="class_canvasitem#class-canvasitem"><inline classes="std std-ref">CanvasItem</inline></reference> 缩放（在 2D 中）而缩小时不会变得具有颗粒感。</paragraph>
                </list_item>
                <list_item>
                    <paragraph>如果纹理显示在远处，性能将会提高，因为对原始纹理的较小版本进行采样速度更快并且需要更少的内存带宽。</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>多级渐远纹理的缺点是它们会增加大约 33% 的内存占用。</paragraph>
            <paragraph>建议在 3D 中启用多级渐远纹理。但是，在 2D 中，仅当你的项目明显受益于启用多级渐远纹理时才应启用该功能。如果相机从不大幅缩小，启用多级渐远纹理不会有任何好处，但内存占用会增加。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-resourceimportertexture-property-mipmaps-limit"></target>
            <paragraph classes="classref-property" ids="class-resourceimportertexture-property-mipmaps-limit" names="class_resourceimportertexture_property_mipmaps/limit"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>mipmaps/limit</strong> = <literal>-1</literal> <reference internal="True" refid="class-resourceimportertexture-property-mipmaps-limit"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>未实现。目前，更改后没有效果。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-resourceimportertexture-property-process-fix-alpha-border"></target>
            <paragraph classes="classref-property" ids="class-resourceimportertexture-property-process-fix-alpha-border" names="class_resourceimportertexture_property_process/fix_alpha_border"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>process/fix_alpha_border</strong> = <literal>true</literal> <reference internal="True" refid="class-resourceimportertexture-property-process-fix-alpha-border"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果为 <literal>true</literal>，则将相同周围颜色的像素置于从透明区域到不透明区域的过渡中。对于使用双线性过滤显示的纹理，这有助于减轻从图像编辑器导出图像时的轮廓效果。</paragraph>
            <paragraph>建议启用该功能（默认情况下），除非这会导致特定图像出现问题。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-resourceimportertexture-property-process-hdr-as-srgb"></target>
            <paragraph classes="classref-property" ids="class-resourceimportertexture-property-process-hdr-as-srgb" names="class_resourceimportertexture_property_process/hdr_as_srgb"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>process/hdr_as_srgb</strong> = <literal>false</literal> <reference internal="True" refid="class-resourceimportertexture-property-process-hdr-as-srgb"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>你在网上可以找到的一些 HDR 图像可能已损坏并包含 sRGB 颜色数据（而不是线性颜色数据）。建议不要使用这些文件。 如果你一定要这样做，启用 <reference internal="True" refid="class-resourceimportertexture-property-process-hdr-as-srgb"><inline classes="std std-ref">process/hdr_as_srgb</inline></reference> 将使它们看起来正确。</paragraph>
            <paragraph><strong>警告：</strong>在格式良好的 HDR 图像上启用 <reference internal="True" refid="class-resourceimportertexture-property-process-hdr-as-srgb"><inline classes="std std-ref">process/hdr_as_srgb</inline></reference> 将导致生成的图像看起来太暗，因此如果不确定，请将其保留为 <literal>false</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-resourceimportertexture-property-process-hdr-clamp-exposure"></target>
            <paragraph classes="classref-property" ids="class-resourceimportertexture-property-process-hdr-clamp-exposure" names="class_resourceimportertexture_property_process/hdr_clamp_exposure"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>process/hdr_clamp_exposure</strong> = <literal>false</literal> <reference internal="True" refid="class-resourceimportertexture-property-process-hdr-clamp-exposure"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果为 <literal>true</literal>，则使用智能钳制公式钳制导入的高动态范围图像中的曝光（而不引入<emphasis>可见的</emphasis>裁剪）。</paragraph>
            <paragraph>你在网上可以找到的一些 HDR 全景图像可能包含非常明亮的像素，因为这些图像取自现实生活来源，没有任何裁剪。</paragraph>
            <paragraph>虽然这些 HDR 全景图像准确反映现实生活，但这可能会导致 Godot 生成的辐射图在用作背景天空时包含闪光。这可以在材质反射中看到（即使在极端情况下的粗糙材质上）。启用 <reference internal="True" refid="class-resourceimportertexture-property-process-hdr-clamp-exposure"><inline classes="std std-ref">process/hdr_clamp_exposure</inline></reference> 可以解决该问题。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-resourceimportertexture-property-process-normal-map-invert-y"></target>
            <paragraph classes="classref-property" ids="class-resourceimportertexture-property-process-normal-map-invert-y" names="class_resourceimportertexture_property_process/normal_map_invert_y"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>process/normal_map_invert_y</strong> = <literal>false</literal> <reference internal="True" refid="class-resourceimportertexture-property-process-normal-map-invert-y"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果为 <literal>true</literal>，则通过反转其绿色通道将法线贴图从 Y-（DirectX 风格）转换为 Y+（OpenGL 风格）。这是 Godot 所期望的法线贴图约定。</paragraph>
            <paragraph>有关法线贴图（包括流行引擎的坐标顺序表）的更多信息，可以在<reference name="这里" refuri="http://wiki.polycount.com/wiki/Normal_Map_Technical_Details">这里</reference>找到。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-resourceimportertexture-property-process-premult-alpha"></target>
            <paragraph classes="classref-property" ids="class-resourceimportertexture-property-process-premult-alpha" names="class_resourceimportertexture_property_process/premult_alpha"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>process/premult_alpha</strong> = <literal>false</literal> <reference internal="True" refid="class-resourceimportertexture-property-process-premult-alpha"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>使用 <reference internal="True" refid="class-resourceimportertexture-property-process-fix-alpha-border"><inline classes="std std-ref">process/fix_alpha_border</inline></reference> 修复黑色边框的另一种方法是使用预乘 Alpha。通过启用该选项，纹理将被转换为该格式。预乘 Alpha 纹理需要特定材质才能正确显示：</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>在 2D 中，需要创建并配置 <reference internal="True" refuri="class_canvasitemmaterial#class-canvasitemmaterial"><inline classes="std std-ref">CanvasItemMaterial</inline></reference>，以便在使用该纹理的 <reference internal="True" refuri="class_canvasitem#class-canvasitem"><inline classes="std std-ref">CanvasItem</inline></reference> 上使用 <reference internal="True" refuri="class_canvasitemmaterial#class-canvasitemmaterial-constant-blend-mode-premult-alpha"><inline classes="std std-ref">CanvasItemMaterial.BLEND_MODE_PREMULT_ALPHA</inline></reference> 混合模式。</paragraph>
                </list_item>
                <list_item>
                    <paragraph>在 3D 中，尚不支持预乘 Alpha 混合模式，因此该选项仅适用于 2D。</paragraph>
                </list_item>
            </bullet_list>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-resourceimportertexture-property-process-size-limit"></target>
            <paragraph classes="classref-property" ids="class-resourceimportertexture-property-process-size-limit" names="class_resourceimportertexture_property_process/size_limit"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>process/size_limit</strong> = <literal>0</literal> <reference internal="True" refid="class-resourceimportertexture-property-process-size-limit"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果被设置为大于 <literal>0</literal> 的值，则导入时纹理的大小将被限制为小于或等于此处指定的值。对于非方形纹理，大小限制会影响较长的尺寸，而较短的尺寸会被缩放以保持纵横比。调整大小是使用三次插值来执行的。</paragraph>
            <paragraph>这可被用于减少内存占用而不影响源图像，或避免纹理在移动/Web 平台上不显示的问题（因为这些平台通常无法显示大于 4096×4096 的纹理）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-resourceimportertexture-property-roughness-mode"></target>
            <paragraph classes="classref-property" ids="class-resourceimportertexture-property-roughness-mode" names="class_resourceimportertexture_property_roughness/mode"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>roughness/mode</strong> = <literal>0</literal> <reference internal="True" refid="class-resourceimportertexture-property-roughness-mode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将该纹理视为粗糙度贴图的颜色通道。仅当粗糙度 &gt; Src Normal 不为空时才有效。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-resourceimportertexture-property-roughness-src-normal"></target>
            <paragraph classes="classref-property" ids="class-resourceimportertexture-property-roughness-src-normal" names="class_resourceimportertexture_property_roughness/src_normal"><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>roughness/src_normal</strong> = <literal>""</literal> <reference internal="True" refid="class-resourceimportertexture-property-roughness-src-normal"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>纹理的路径被视为导入时粗糙度过滤的法线贴图。指定该项有助于稍微减少 3D 中的镜面锯齿。</paragraph>
            <paragraph>导入时的粗糙度过滤仅被用于 3D 渲染，不适用于 2D。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-resourceimportertexture-property-svg-scale"></target>
            <paragraph classes="classref-property" ids="class-resourceimportertexture-property-svg-scale" names="class_resourceimportertexture_property_svg/scale"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>svg/scale</strong> = <literal>1.0</literal> <reference internal="True" refid="class-resourceimportertexture-property-svg-scale"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>SVG 应渲染的比例，<literal>1.0</literal> 是原始设计尺寸。值越高，图像越大。请注意，与字体过采样不同，这会影响 SVG 在 2D 中渲染的大小。另请参阅 <reference internal="True" refid="class-resourceimportertexture-property-editor-scale-with-editor-scale"><inline classes="std std-ref">editor/scale_with_editor_scale</inline></reference>。</paragraph>
            <paragraph><strong>注意：</strong>仅适用于 SVG 图像。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效运算符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列位标志构成位掩码的整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

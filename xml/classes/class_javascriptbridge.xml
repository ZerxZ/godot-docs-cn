<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_javascriptbridge.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/JavaScriptBridge.xml.</comment>
    <target refid="class-javascriptbridge"></target>
    <section ids="javascriptbridge class-javascriptbridge" names="javascriptbridge class_javascriptbridge">
        <title>JavaScriptBridge</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>单例，在 Web 导出中将引擎与浏览器的 JavaScript 上下文连接。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>JavaScriptBridge 单例仅在 Web 导出中实现。它用于访问浏览器的 JavaScript 上下文。这允许与嵌入页面或调用第三方 JavaScript API 进行交互。</paragraph>
            <paragraph><strong>注意：</strong>可以在构建时禁用该单例以提高安全性。默认情况下，启用 JavaScriptBridge 单例。官方导出模板也启用了 JavaScriptBridge 单例。有关详细信息，请参阅文档中的<reference internal="True" refuri="../contributing/development/compiling/compiling_for_web"><inline classes="doc">《为 Web 平台编译》</inline></reference>。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference name="为 Web 导出：从脚本调用 JavaScript" refuri="../tutorials/export/exporting_for_web.html#calling-javascript-from-script">为 Web 导出：从脚本调用 JavaScript</reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="49"></colspec>
                    <colspec colwidth="234"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_javascriptobject#class-javascriptobject"><inline classes="std std-ref">JavaScriptObject</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-javascriptbridge-method-create-callback"><inline classes="std std-ref">create_callback</inline></reference>(callable: <reference internal="True" refuri="class_callable#class-callable"><inline classes="std std-ref">Callable</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-javascriptbridge-method-create-object"><inline classes="std std-ref">create_object</inline></reference>(object: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, ...) <abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-javascriptbridge-method-download-buffer"><inline classes="std std-ref">download_buffer</inline></reference>(buffer: <reference internal="True" refuri="class_packedbytearray#class-packedbytearray"><inline classes="std std-ref">PackedByteArray</inline></reference>, name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, mime: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> = "application/octet-stream")</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-javascriptbridge-method-eval"><inline classes="std std-ref">eval</inline></reference>(code: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, use_global_execution_context: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = false)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-javascriptbridge-method-force-fs-sync"><inline classes="std std-ref">force_fs_sync</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_javascriptobject#class-javascriptobject"><inline classes="std std-ref">JavaScriptObject</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-javascriptbridge-method-get-interface"><inline classes="std std-ref">get_interface</inline></reference>(interface: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-javascriptbridge-method-pwa-needs-update"><inline classes="std std-ref">pwa_needs_update</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_@globalscope#enum-globalscope-error"><inline classes="std std-ref">Error</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-javascriptbridge-method-pwa-update"><inline classes="std std-ref">pwa_update</inline></reference>()</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="信号">
            <title>信号</title>
            <target refid="class-javascriptbridge-signal-pwa-update-available"></target>
            <paragraph classes="classref-signal" ids="class-javascriptbridge-signal-pwa-update-available" names="class_javascriptbridge_signal_pwa_update_available"><strong>pwa_update_available</strong>() <reference internal="True" refid="class-javascriptbridge-signal-pwa-update-available"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>在检测到该渐进式网络应用程序的更新，但因为存在活动的较早版本而等待激活时触发。要强制立即执行更新，请参阅 <reference internal="True" refid="class-javascriptbridge-method-pwa-update"><inline classes="std std-ref">pwa_update</inline></reference>。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="方法说明">
            <title>方法说明</title>
            <target refid="class-javascriptbridge-method-create-callback"></target>
            <paragraph classes="classref-method" ids="class-javascriptbridge-method-create-callback" names="class_javascriptbridge_method_create_callback"><reference internal="True" refuri="class_javascriptobject#class-javascriptobject"><inline classes="std std-ref">JavaScriptObject</inline></reference> <strong>create_callback</strong>(callable: <reference internal="True" refuri="class_callable#class-callable"><inline classes="std std-ref">Callable</inline></reference>) <reference internal="True" refid="class-javascriptbridge-method-create-callback"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>创建一个对可被 JavaScript 用作回调的 <reference internal="True" refuri="class_callable#class-callable"><inline classes="std std-ref">Callable</inline></reference> 的引用。该引用必须一直保留到回调发生，否则根本不会被调用。有关用法，请参阅 <reference internal="True" refuri="class_javascriptobject#class-javascriptobject"><inline classes="std std-ref">JavaScriptObject</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-javascriptbridge-method-create-object"></target>
            <paragraph classes="classref-method" ids="class-javascriptbridge-method-create-object" names="class_javascriptbridge_method_create_object"><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> <strong>create_object</strong>(object: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, ...) <abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation> <reference internal="True" refid="class-javascriptbridge-method-create-object"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>使用 <literal>new</literal> 构造函数创建一个新的 JavaScript 对象。<literal>object</literal> 必须是 JavaScript <literal>window</literal> 的有效属性。有关用法，请参阅 <reference internal="True" refuri="class_javascriptobject#class-javascriptobject"><inline classes="std std-ref">JavaScriptObject</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-javascriptbridge-method-download-buffer"></target>
            <paragraph classes="classref-method" ids="class-javascriptbridge-method-download-buffer" names="class_javascriptbridge_method_download_buffer"><abbreviation explanation="无返回值。">void</abbreviation> <strong>download_buffer</strong>(buffer: <reference internal="True" refuri="class_packedbytearray#class-packedbytearray"><inline classes="std std-ref">PackedByteArray</inline></reference>, name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, mime: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> = "application/octet-stream") <reference internal="True" refid="class-javascriptbridge-method-download-buffer"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>提示用户下载一个包含指定 <literal>buffer</literal> 的文件。该文件将具有给定的 <literal>name</literal> 和 <literal>mime</literal> 类型。</paragraph>
            <paragraph><strong>注意：</strong>浏览器可能会覆盖根据文件 <literal>name</literal> 的扩展名提供的 <reference name="MIME 类型" refuri="https://en.wikipedia.org/wiki/Media_type">MIME 类型</reference>。</paragraph>
            <paragraph><strong>注意：</strong>如果 <reference internal="True" refid="class-javascriptbridge-method-download-buffer"><inline classes="std std-ref">download_buffer</inline></reference> 不是从用户交互（例如按钮点击）中调用的，浏览器可能会阻止下载。</paragraph>
            <paragraph><strong>注意：</strong>如果快速连续发出多个下载请求，浏览器可能会要求用户同意或阻止下载。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-javascriptbridge-method-eval"></target>
            <paragraph classes="classref-method" ids="class-javascriptbridge-method-eval" names="class_javascriptbridge_method_eval"><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> <strong>eval</strong>(code: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, use_global_execution_context: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = false) <reference internal="True" refid="class-javascriptbridge-method-eval"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>在浏览器窗口中将字符串 <literal>code</literal> 作为 JavaScript 代码执行。这是对实际的全局 JavaScript 函数 <literal>eval()</literal> 的调用。</paragraph>
            <paragraph>如果 <literal>use_global_execution_context</literal> 为 <literal>true</literal>，则代码将在全局执行上下文中被求值。否则，它将在引擎运行时环境中的函数的执行上下文中进行求值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-javascriptbridge-method-force-fs-sync"></target>
            <paragraph classes="classref-method" ids="class-javascriptbridge-method-force-fs-sync" names="class_javascriptbridge_method_force_fs_sync"><abbreviation explanation="无返回值。">void</abbreviation> <strong>force_fs_sync</strong>() <reference internal="True" refid="class-javascriptbridge-method-force-fs-sync"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>强制同步持久化文件系统（当启用时）。</paragraph>
            <paragraph><strong>注意：</strong>这仅对不能使用 <reference internal="True" refuri="class_fileaccess#class-fileaccess"><inline classes="std std-ref">FileAccess</inline></reference> 写入文件的模块或扩展有用。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-javascriptbridge-method-get-interface"></target>
            <paragraph classes="classref-method" ids="class-javascriptbridge-method-get-interface" names="class_javascriptbridge_method_get_interface"><reference internal="True" refuri="class_javascriptobject#class-javascriptobject"><inline classes="std std-ref">JavaScriptObject</inline></reference> <strong>get_interface</strong>(interface: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <reference internal="True" refid="class-javascriptbridge-method-get-interface"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回一个可以被脚本使用的 JavaScript 对象的接口。<literal>interface</literal> 必须是 JavaScript <literal>window</literal> 的有效属性。回调必须接受单个 <reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference> 参数，它将包含 JavaScript <literal>arguments</literal>。有关用法，请参阅 <reference internal="True" refuri="class_javascriptobject#class-javascriptobject"><inline classes="std std-ref">JavaScriptObject</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-javascriptbridge-method-pwa-needs-update"></target>
            <paragraph classes="classref-method" ids="class-javascriptbridge-method-pwa-needs-update" names="class_javascriptbridge_method_pwa_needs_update"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>pwa_needs_update</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-javascriptbridge-method-pwa-needs-update"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果该渐进式网络应用程序有新版本等待激活，则返回 <literal>true</literal>。</paragraph>
            <paragraph><strong>注意：</strong>只在导出为渐进式网络应用程序（Progressive Web App）时相关。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-javascriptbridge-method-pwa-update"></target>
            <paragraph classes="classref-method" ids="class-javascriptbridge-method-pwa-update" names="class_javascriptbridge_method_pwa_update"><reference internal="True" refuri="class_@globalscope#enum-globalscope-error"><inline classes="std std-ref">Error</inline></reference> <strong>pwa_update</strong>() <reference internal="True" refid="class-javascriptbridge-method-pwa-update"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>执行该渐进式网络应用程序的在线更新。强制安装新版本并重新载入该页面。</paragraph>
            <paragraph><strong>注意：</strong>你的应用程序将<strong>在所有浏览器标签页中重新载入</strong>。</paragraph>
            <paragraph><strong>注意：</strong>只在导出为渐进式网络应用程序（Progressive Web App）且 <reference internal="True" refid="class-javascriptbridge-method-pwa-needs-update"><inline classes="std std-ref">pwa_needs_update</inline></reference> 返回 <literal>true</literal> 时相关。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

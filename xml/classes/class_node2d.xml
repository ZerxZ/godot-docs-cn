<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_node2d.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/Node2D.xml.</comment>
    <target refid="class-node2d"></target>
    <section ids="node2d class-node2d" names="node2d class_node2d">
        <title>Node2D</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_canvasitem#class-canvasitem"><inline classes="std std-ref">CanvasItem</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph><strong>派生：</strong> <reference internal="True" refuri="class_animatedsprite2d#class-animatedsprite2d"><inline classes="std std-ref">AnimatedSprite2D</inline></reference>, <reference internal="True" refuri="class_audiolistener2d#class-audiolistener2d"><inline classes="std std-ref">AudioListener2D</inline></reference>, <reference internal="True" refuri="class_audiostreamplayer2d#class-audiostreamplayer2d"><inline classes="std std-ref">AudioStreamPlayer2D</inline></reference>, <reference internal="True" refuri="class_backbuffercopy#class-backbuffercopy"><inline classes="std std-ref">BackBufferCopy</inline></reference>, <reference internal="True" refuri="class_bone2d#class-bone2d"><inline classes="std std-ref">Bone2D</inline></reference>, <reference internal="True" refuri="class_camera2d#class-camera2d"><inline classes="std std-ref">Camera2D</inline></reference>, <reference internal="True" refuri="class_canvasgroup#class-canvasgroup"><inline classes="std std-ref">CanvasGroup</inline></reference>, <reference internal="True" refuri="class_canvasmodulate#class-canvasmodulate"><inline classes="std std-ref">CanvasModulate</inline></reference>, <reference internal="True" refuri="class_collisionobject2d#class-collisionobject2d"><inline classes="std std-ref">CollisionObject2D</inline></reference>, <reference internal="True" refuri="class_collisionpolygon2d#class-collisionpolygon2d"><inline classes="std std-ref">CollisionPolygon2D</inline></reference>, <reference internal="True" refuri="class_collisionshape2d#class-collisionshape2d"><inline classes="std std-ref">CollisionShape2D</inline></reference>, <reference internal="True" refuri="class_cpuparticles2d#class-cpuparticles2d"><inline classes="std std-ref">CPUParticles2D</inline></reference>, <reference internal="True" refuri="class_gpuparticles2d#class-gpuparticles2d"><inline classes="std std-ref">GPUParticles2D</inline></reference>, <reference internal="True" refuri="class_joint2d#class-joint2d"><inline classes="std std-ref">Joint2D</inline></reference>, <reference internal="True" refuri="class_light2d#class-light2d"><inline classes="std std-ref">Light2D</inline></reference>, <reference internal="True" refuri="class_lightoccluder2d#class-lightoccluder2d"><inline classes="std std-ref">LightOccluder2D</inline></reference>, <reference internal="True" refuri="class_line2d#class-line2d"><inline classes="std std-ref">Line2D</inline></reference>, <reference internal="True" refuri="class_marker2d#class-marker2d"><inline classes="std std-ref">Marker2D</inline></reference>, <reference internal="True" refuri="class_meshinstance2d#class-meshinstance2d"><inline classes="std std-ref">MeshInstance2D</inline></reference>, <reference internal="True" refuri="class_multimeshinstance2d#class-multimeshinstance2d"><inline classes="std std-ref">MultiMeshInstance2D</inline></reference>, <reference internal="True" refuri="class_navigationlink2d#class-navigationlink2d"><inline classes="std std-ref">NavigationLink2D</inline></reference>, <reference internal="True" refuri="class_navigationobstacle2d#class-navigationobstacle2d"><inline classes="std std-ref">NavigationObstacle2D</inline></reference>, <reference internal="True" refuri="class_navigationregion2d#class-navigationregion2d"><inline classes="std std-ref">NavigationRegion2D</inline></reference>, <reference internal="True" refuri="class_parallax2d#class-parallax2d"><inline classes="std std-ref">Parallax2D</inline></reference>, <reference internal="True" refuri="class_parallaxlayer#class-parallaxlayer"><inline classes="std std-ref">ParallaxLayer</inline></reference>, <reference internal="True" refuri="class_path2d#class-path2d"><inline classes="std std-ref">Path2D</inline></reference>, <reference internal="True" refuri="class_pathfollow2d#class-pathfollow2d"><inline classes="std std-ref">PathFollow2D</inline></reference>, <reference internal="True" refuri="class_polygon2d#class-polygon2d"><inline classes="std std-ref">Polygon2D</inline></reference>, <reference internal="True" refuri="class_raycast2d#class-raycast2d"><inline classes="std std-ref">RayCast2D</inline></reference>, <reference internal="True" refuri="class_remotetransform2d#class-remotetransform2d"><inline classes="std std-ref">RemoteTransform2D</inline></reference>, <reference internal="True" refuri="class_shapecast2d#class-shapecast2d"><inline classes="std std-ref">ShapeCast2D</inline></reference>, <reference internal="True" refuri="class_skeleton2d#class-skeleton2d"><inline classes="std std-ref">Skeleton2D</inline></reference>, <reference internal="True" refuri="class_sprite2d#class-sprite2d"><inline classes="std std-ref">Sprite2D</inline></reference>, <reference internal="True" refuri="class_tilemap#class-tilemap"><inline classes="std std-ref">TileMap</inline></reference>, <reference internal="True" refuri="class_tilemaplayer#class-tilemaplayer"><inline classes="std std-ref">TileMapLayer</inline></reference>, <reference internal="True" refuri="class_touchscreenbutton#class-touchscreenbutton"><inline classes="std std-ref">TouchScreenButton</inline></reference>, <reference internal="True" refuri="class_visibleonscreennotifier2d#class-visibleonscreennotifier2d"><inline classes="std std-ref">VisibleOnScreenNotifier2D</inline></reference></paragraph>
        <paragraph>2D 游戏对象，被所有 2D 相关的节点继承。具有位置、旋转、缩放和 Z 索引。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>2D 游戏对象，具有变换（位置、旋转、缩放）。所有的 2D 节点，包括物理对象和精灵，都继承自 Node2D。使用 Node2D 作为父节点来移动、缩放和旋转 2D 项目中的子节点。还可以控制节点的渲染顺序。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference internal="True" refuri="../tutorials/2d/custom_drawing_in_2d"><inline classes="doc">2D 中的自定义绘图</inline></reference></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference name="所有 2D 演示" refuri="https://github.com/godotengine/godot-demo-projects/tree/master/2d">所有 2D 演示</reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="39"></colspec>
                    <colspec colwidth="79"></colspec>
                    <colspec colwidth="19"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-node2d-property-global-position"><inline classes="std std-ref">global_position</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-node2d-property-global-rotation"><inline classes="std std-ref">global_rotation</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-node2d-property-global-rotation-degrees"><inline classes="std std-ref">global_rotation_degrees</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-node2d-property-global-scale"><inline classes="std std-ref">global_scale</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-node2d-property-global-skew"><inline classes="std std-ref">global_skew</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-node2d-property-global-transform"><inline classes="std std-ref">global_transform</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-node2d-property-position"><inline classes="std std-ref">position</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Vector2(0, 0)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-node2d-property-rotation"><inline classes="std std-ref">rotation</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-node2d-property-rotation-degrees"><inline classes="std std-ref">rotation_degrees</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-node2d-property-scale"><inline classes="std std-ref">scale</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Vector2(1, 1)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-node2d-property-skew"><inline classes="std std-ref">skew</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-node2d-property-transform"><inline classes="std std-ref">transform</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id4" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="39"></colspec>
                    <colspec colwidth="143"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-node2d-method-apply-scale"><inline classes="std std-ref">apply_scale</inline></reference>(ratio: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-node2d-method-get-angle-to"><inline classes="std std-ref">get_angle_to</inline></reference>(point: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-node2d-method-get-relative-transform-to-parent"><inline classes="std std-ref">get_relative_transform_to_parent</inline></reference>(parent: <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-node2d-method-global-translate"><inline classes="std std-ref">global_translate</inline></reference>(offset: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-node2d-method-look-at"><inline classes="std std-ref">look_at</inline></reference>(point: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-node2d-method-move-local-x"><inline classes="std std-ref">move_local_x</inline></reference>(delta: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>, scaled: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = false)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-node2d-method-move-local-y"><inline classes="std std-ref">move_local_y</inline></reference>(delta: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>, scaled: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = false)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-node2d-method-rotate"><inline classes="std std-ref">rotate</inline></reference>(radians: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-node2d-method-to-global"><inline classes="std std-ref">to_global</inline></reference>(local_point: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-node2d-method-to-local"><inline classes="std std-ref">to_local</inline></reference>(global_point: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-node2d-method-translate"><inline classes="std std-ref">translate</inline></reference>(offset: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>)</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="属性说明">
            <title>属性说明</title>
            <target refid="class-node2d-property-global-position"></target>
            <paragraph classes="classref-property" ids="class-node2d-property-global-position" names="class_node2d_property_global_position"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>global_position</strong> <reference internal="True" refid="class-node2d-property-global-position"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_global_position</strong>(value: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>get_global_position</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>全局位置。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-node2d-property-global-rotation"></target>
            <paragraph classes="classref-property" ids="class-node2d-property-global-rotation" names="class_node2d_property_global_rotation"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>global_rotation</strong> <reference internal="True" refid="class-node2d-property-global-rotation"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_global_rotation</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_global_rotation</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>全局旋转，单位为弧度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-node2d-property-global-rotation-degrees"></target>
            <paragraph classes="classref-property" ids="class-node2d-property-global-rotation-degrees" names="class_node2d_property_global_rotation_degrees"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>global_rotation_degrees</strong> <reference internal="True" refid="class-node2d-property-global-rotation-degrees"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_global_rotation_degrees</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_global_rotation_degrees</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>辅助属性，用于按度数访问 <reference internal="True" refid="class-node2d-property-global-rotation"><inline classes="std std-ref">global_rotation</inline></reference> 而不是弧度数。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-node2d-property-global-scale"></target>
            <paragraph classes="classref-property" ids="class-node2d-property-global-scale" names="class_node2d_property_global_scale"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>global_scale</strong> <reference internal="True" refid="class-node2d-property-global-scale"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_global_scale</strong>(value: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>get_global_scale</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>全局缩放。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-node2d-property-global-skew"></target>
            <paragraph classes="classref-property" ids="class-node2d-property-global-skew" names="class_node2d_property_global_skew"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>global_skew</strong> <reference internal="True" refid="class-node2d-property-global-skew"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_global_skew</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_global_skew</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>全局偏斜，单位为弧度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-node2d-property-global-transform"></target>
            <paragraph classes="classref-property" ids="class-node2d-property-global-transform" names="class_node2d_property_global_transform"><reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference> <strong>global_transform</strong> <reference internal="True" refid="class-node2d-property-global-transform"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_global_transform</strong>(value: <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference> <strong>get_global_transform</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>全局 <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-node2d-property-position"></target>
            <paragraph classes="classref-property" ids="class-node2d-property-position" names="class_node2d_property_position"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>position</strong> = <literal>Vector2(0, 0)</literal> <reference internal="True" refid="class-node2d-property-position"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_position</strong>(value: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>get_position</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>位置，相对于父节点。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-node2d-property-rotation"></target>
            <paragraph classes="classref-property" ids="class-node2d-property-rotation" names="class_node2d_property_rotation"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>rotation</strong> = <literal>0.0</literal> <reference internal="True" refid="class-node2d-property-rotation"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_rotation</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_rotation</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>旋转，单位为弧度，相对于该节点的父节点。</paragraph>
            <paragraph><strong>注意：</strong>这个属性在检查器中是以度数编辑的。如果你想在脚本中使用度数，请使用 <reference internal="True" refid="class-node2d-property-rotation-degrees"><inline classes="std std-ref">rotation_degrees</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-node2d-property-rotation-degrees"></target>
            <paragraph classes="classref-property" ids="class-node2d-property-rotation-degrees" names="class_node2d_property_rotation_degrees"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>rotation_degrees</strong> <reference internal="True" refid="class-node2d-property-rotation-degrees"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_rotation_degrees</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_rotation_degrees</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>辅助属性，用于按度数访问 <reference internal="True" refid="class-node2d-property-rotation"><inline classes="std std-ref">rotation</inline></reference> 而不是弧度数。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-node2d-property-scale"></target>
            <paragraph classes="classref-property" ids="class-node2d-property-scale" names="class_node2d_property_scale"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>scale</strong> = <literal>Vector2(1, 1)</literal> <reference internal="True" refid="class-node2d-property-scale"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_scale</strong>(value: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>get_scale</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>该节点的缩放。未缩放值：<literal>(1, 1)</literal>。</paragraph>
            <paragraph><strong>注意：</strong>2D 中，变换矩阵是无法分解出负数的 X 缩放的。由于 Godot 中使用变换矩阵来表示缩放，X 轴上的负数缩放在分解后会变为 Y 轴的负数缩放和一次 180 度的旋转。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-node2d-property-skew"></target>
            <paragraph classes="classref-property" ids="class-node2d-property-skew" names="class_node2d_property_skew"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>skew</strong> = <literal>0.0</literal> <reference internal="True" refid="class-node2d-property-skew"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_skew</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_skew</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>使该节点发生倾斜。</paragraph>
            <paragraph><strong>注意：</strong>偏斜仅适用于 X 轴。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-node2d-property-transform"></target>
            <paragraph classes="classref-property" ids="class-node2d-property-transform" names="class_node2d_property_transform"><reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference> <strong>transform</strong> <reference internal="True" refid="class-node2d-property-transform"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_transform</strong>(value: <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference> <strong>get_transform</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>局部 <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference>。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="方法说明">
            <title>方法说明</title>
            <target refid="class-node2d-method-apply-scale"></target>
            <paragraph classes="classref-method" ids="class-node2d-method-apply-scale" names="class_node2d_method_apply_scale"><abbreviation explanation="无返回值。">void</abbreviation> <strong>apply_scale</strong>(ratio: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <reference internal="True" refid="class-node2d-method-apply-scale"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将当前缩放乘以比例向量 <literal>ratio</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-node2d-method-get-angle-to"></target>
            <paragraph classes="classref-method" ids="class-node2d-method-get-angle-to" names="class_node2d_method_get_angle_to"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_angle_to</strong>(point: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-node2d-method-get-angle-to"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回该节点和 <literal>point</literal> 之间的夹角，单位为弧度。</paragraph>
            <paragraph><reference name="返回夹角的示意图。" refuri="https://raw.githubusercontent.com/godotengine/godot-docs/master/img/node2d_get_angle_to.png">返回夹角的示意图。</reference></paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-node2d-method-get-relative-transform-to-parent"></target>
            <paragraph classes="classref-method" ids="class-node2d-method-get-relative-transform-to-parent" names="class_node2d_method_get_relative_transform_to_parent"><reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference> <strong>get_relative_transform_to_parent</strong>(parent: <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-node2d-method-get-relative-transform-to-parent"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回相对于此节点的父节点的 <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-node2d-method-global-translate"></target>
            <paragraph classes="classref-method" ids="class-node2d-method-global-translate" names="class_node2d_method_global_translate"><abbreviation explanation="无返回值。">void</abbreviation> <strong>global_translate</strong>(offset: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <reference internal="True" refid="class-node2d-method-global-translate"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将偏移向量 <literal>offset</literal> 添加到该节点的全局位置。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-node2d-method-look-at"></target>
            <paragraph classes="classref-method" ids="class-node2d-method-look-at" names="class_node2d_method_look_at"><abbreviation explanation="无返回值。">void</abbreviation> <strong>look_at</strong>(point: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <reference internal="True" refid="class-node2d-method-look-at"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>旋转该节点，使其局部 X 轴的正方向指向 <literal>point</literal>，该参数应使用全局坐标。</paragraph>
            <paragraph><literal>point</literal> 不应该与该节点的位置相同，否则该节点始终看向右侧。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-node2d-method-move-local-x"></target>
            <paragraph classes="classref-method" ids="class-node2d-method-move-local-x" names="class_node2d_method_move_local_x"><abbreviation explanation="无返回值。">void</abbreviation> <strong>move_local_x</strong>(delta: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>, scaled: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = false) <reference internal="True" refid="class-node2d-method-move-local-x"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>基于 <reference internal="True" refuri="class_node#class-node-private-method-process"><inline classes="std std-ref">Node._process</inline></reference> 的 <literal>delta</literal>，在节点的 X 轴上应用局部平移。如果 <literal>scaled</literal> 为 <literal>false</literal>，则对移动进行归一化。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-node2d-method-move-local-y"></target>
            <paragraph classes="classref-method" ids="class-node2d-method-move-local-y" names="class_node2d_method_move_local_y"><abbreviation explanation="无返回值。">void</abbreviation> <strong>move_local_y</strong>(delta: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>, scaled: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = false) <reference internal="True" refid="class-node2d-method-move-local-y"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>基于 <reference internal="True" refuri="class_node#class-node-private-method-process"><inline classes="std std-ref">Node._process</inline></reference> 的 <literal>delta</literal>，在节点的 Y 轴上应用局部平移。如果 <literal>scaled</literal> 为 <literal>false</literal>，则对移动进行归一化。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-node2d-method-rotate"></target>
            <paragraph classes="classref-method" ids="class-node2d-method-rotate" names="class_node2d_method_rotate"><abbreviation explanation="无返回值。">void</abbreviation> <strong>rotate</strong>(radians: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <reference internal="True" refid="class-node2d-method-rotate"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>从节点的当前旋转开始，以弧度为单位，对节点进行旋转。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-node2d-method-to-global"></target>
            <paragraph classes="classref-method" ids="class-node2d-method-to-global" names="class_node2d_method_to_global"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>to_global</strong>(local_point: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-node2d-method-to-global"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将提供的本地位置转换为全局坐标空间的位置。例如，对子节点的位置应用这个方法将正确地把它们的位置转换到全局坐标空间，但对节点自己的位置应用这个方法将得到一个不正确的结果，因为它将把节点自己的变换纳入它的全局位置。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-node2d-method-to-local"></target>
            <paragraph classes="classref-method" ids="class-node2d-method-to-local" names="class_node2d_method_to_local"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>to_local</strong>(global_point: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-node2d-method-to-local"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将提供的全局位置转换为本地坐标空间的位置。例如，它适合于确定子节点的位置，但不适合于确定其自身相对于父节点的位置。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-node2d-method-translate"></target>
            <paragraph classes="classref-method" ids="class-node2d-method-translate" names="class_node2d_method_translate"><abbreviation explanation="无返回值。">void</abbreviation> <strong>translate</strong>(offset: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <reference internal="True" refid="class-node2d-method-translate"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>在局部坐标系中，将该节点按给定的偏移量 <literal>offset</literal> 进行平移。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

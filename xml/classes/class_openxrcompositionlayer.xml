<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_openxrcompositionlayer.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/modules/openxr/doc_classes/OpenXRCompositionLayer.xml.</comment>
    <target refid="class-openxrcompositionlayer"></target>
    <section ids="openxrcompositionlayer class-openxrcompositionlayer" names="openxrcompositionlayer class_openxrcompositionlayer">
        <title>OpenXRCompositionLayer</title>
        <paragraph><strong>ÂÆûÈ™åÊÄßÔºö</strong> This class may be changed or removed in future versions.</paragraph>
        <paragraph><strong>ÁªßÊâøÔºö</strong> <reference internal="True" refuri="class_node3d#class-node3d"><inline classes="std std-ref">Node3D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph><strong>Ê¥æÁîüÔºö</strong> <reference internal="True" refuri="class_openxrcompositionlayercylinder#class-openxrcompositionlayercylinder"><inline classes="std std-ref">OpenXRCompositionLayerCylinder</inline></reference>, <reference internal="True" refuri="class_openxrcompositionlayerequirect#class-openxrcompositionlayerequirect"><inline classes="std std-ref">OpenXRCompositionLayerEquirect</inline></reference>, <reference internal="True" refuri="class_openxrcompositionlayerquad#class-openxrcompositionlayerquad"><inline classes="std std-ref">OpenXRCompositionLayerQuad</inline></reference></paragraph>
        <paragraph>The parent class of all OpenXR composition layer nodes.</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="ÊèèËø∞">
            <title>ÊèèËø∞</title>
            <paragraph>Composition layers allow 2D viewports to be displayed inside of the headset by the XR compositor through special projections that retain their quality. This allows for rendering clear text while keeping the layer at a native resolution.</paragraph>
            <paragraph><strong>Note:</strong> If the OpenXR runtime doesn't support the given composition layer type, a fallback mesh can be generated with a <reference internal="True" refuri="class_viewporttexture#class-viewporttexture"><inline classes="std std-ref">ViewportTexture</inline></reference>, in order to emulate the composition layer.</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="Â±ûÊÄß">
            <title>Â±ûÊÄß</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="39"></colspec>
                    <colspec colwidth="83"></colspec>
                    <colspec colwidth="11"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-openxrcompositionlayer-property-alpha-blend"><inline classes="std std-ref">alpha_blend</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-openxrcompositionlayer-property-enable-hole-punch"><inline classes="std std-ref">enable_hole_punch</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_subviewport#class-subviewport"><inline classes="std std-ref">SubViewport</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-openxrcompositionlayer-property-layer-viewport"><inline classes="std std-ref">layer_viewport</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-openxrcompositionlayer-property-sort-order"><inline classes="std std-ref">sort_order</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="ÊñπÊ≥ï">
            <title>ÊñπÊ≥ï</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="31"></colspec>
                    <colspec colwidth="172"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-openxrcompositionlayer-method-intersects-ray"><inline classes="std std-ref">intersects_ray</inline></reference>(origin: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>, direction: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>) <abbreviation explanation="Êú¨ÊñπÊ≥ïÊ≤°ÊúâÂâØ‰ΩúÁî®Ôºå‰∏ç‰ºö‰øÆÊîπËØ•ÂÆû‰æãÁöÑ‰ªª‰ΩïÊàêÂëòÂèòÈáè„ÄÇ">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-openxrcompositionlayer-method-is-natively-supported"><inline classes="std std-ref">is_natively_supported</inline></reference>() <abbreviation explanation="Êú¨ÊñπÊ≥ïÊ≤°ÊúâÂâØ‰ΩúÁî®Ôºå‰∏ç‰ºö‰øÆÊîπËØ•ÂÆû‰æãÁöÑ‰ªª‰ΩïÊàêÂëòÂèòÈáè„ÄÇ">const</abbreviation></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="Â±ûÊÄßËØ¥Êòé">
            <title>Â±ûÊÄßËØ¥Êòé</title>
            <target refid="class-openxrcompositionlayer-property-alpha-blend"></target>
            <paragraph classes="classref-property" ids="class-openxrcompositionlayer-property-alpha-blend" names="class_openxrcompositionlayer_property_alpha_blend"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>alpha_blend</strong> = <literal>false</literal> <reference internal="True" refid="class-openxrcompositionlayer-property-alpha-blend"><inline classes="std std-ref">üîó</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="Êó†ËøîÂõûÂÄº„ÄÇ">void</abbreviation> <strong>set_alpha_blend</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_alpha_blend</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>Enables the blending the layer using its alpha channel.</paragraph>
            <paragraph>Can be combined with <reference internal="True" refuri="class_viewport#class-viewport-property-transparent-bg"><inline classes="std std-ref">Viewport.transparent_bg</inline></reference> to give the layer a transparent background.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-openxrcompositionlayer-property-enable-hole-punch"></target>
            <paragraph classes="classref-property" ids="class-openxrcompositionlayer-property-enable-hole-punch" names="class_openxrcompositionlayer_property_enable_hole_punch"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>enable_hole_punch</strong> = <literal>false</literal> <reference internal="True" refid="class-openxrcompositionlayer-property-enable-hole-punch"><inline classes="std std-ref">üîó</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="Êó†ËøîÂõûÂÄº„ÄÇ">void</abbreviation> <strong>set_enable_hole_punch</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_enable_hole_punch</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>Enables a technique called "hole punching", which allows putting the composition layer behind the main projection layer (i.e. setting <reference internal="True" refid="class-openxrcompositionlayer-property-sort-order"><inline classes="std std-ref">sort_order</inline></reference> to a negative value) while "punching a hole" through everything rendered by Godot so that the layer is still visible.</paragraph>
            <paragraph>This can be used to create the illusion that the composition layer exists in the same 3D space as everything rendered by Godot, allowing objects to appear to pass both behind or in front of the composition layer.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-openxrcompositionlayer-property-layer-viewport"></target>
            <paragraph classes="classref-property" ids="class-openxrcompositionlayer-property-layer-viewport" names="class_openxrcompositionlayer_property_layer_viewport"><reference internal="True" refuri="class_subviewport#class-subviewport"><inline classes="std std-ref">SubViewport</inline></reference> <strong>layer_viewport</strong> <reference internal="True" refid="class-openxrcompositionlayer-property-layer-viewport"><inline classes="std std-ref">üîó</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="Êó†ËøîÂõûÂÄº„ÄÇ">void</abbreviation> <strong>set_layer_viewport</strong>(value: <reference internal="True" refuri="class_subviewport#class-subviewport"><inline classes="std std-ref">SubViewport</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_subviewport#class-subviewport"><inline classes="std std-ref">SubViewport</inline></reference> <strong>get_layer_viewport</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>The <reference internal="True" refuri="class_subviewport#class-subviewport"><inline classes="std std-ref">SubViewport</inline></reference> to render on the composition layer.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-openxrcompositionlayer-property-sort-order"></target>
            <paragraph classes="classref-property" ids="class-openxrcompositionlayer-property-sort-order" names="class_openxrcompositionlayer_property_sort_order"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>sort_order</strong> = <literal>1</literal> <reference internal="True" refid="class-openxrcompositionlayer-property-sort-order"><inline classes="std std-ref">üîó</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="Êó†ËøîÂõûÂÄº„ÄÇ">void</abbreviation> <strong>set_sort_order</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_sort_order</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>The sort order for this composition layer. Higher numbers will be shown in front of lower numbers.</paragraph>
            <paragraph><strong>Note:</strong> This will have no effect if a fallback mesh is being used.</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="ÊñπÊ≥ïËØ¥Êòé">
            <title>ÊñπÊ≥ïËØ¥Êòé</title>
            <target refid="class-openxrcompositionlayer-method-intersects-ray"></target>
            <paragraph classes="classref-method" ids="class-openxrcompositionlayer-method-intersects-ray" names="class_openxrcompositionlayer_method_intersects_ray"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>intersects_ray</strong>(origin: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>, direction: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>) <abbreviation explanation="Êú¨ÊñπÊ≥ïÊ≤°ÊúâÂâØ‰ΩúÁî®Ôºå‰∏ç‰ºö‰øÆÊîπËØ•ÂÆû‰æãÁöÑ‰ªª‰ΩïÊàêÂëòÂèòÈáè„ÄÇ">const</abbreviation> <reference internal="True" refid="class-openxrcompositionlayer-method-intersects-ray"><inline classes="std std-ref">üîó</inline></reference></paragraph>
            <paragraph>Returns UV coordinates where the given ray intersects with the composition layer. <literal>origin</literal> and <literal>direction</literal> must be in global space.</paragraph>
            <paragraph>Returns <literal>Vector2(-1.0, -1.0)</literal> if the ray doesn't intersect.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-openxrcompositionlayer-method-is-natively-supported"></target>
            <paragraph classes="classref-method" ids="class-openxrcompositionlayer-method-is-natively-supported" names="class_openxrcompositionlayer_method_is_natively_supported"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_natively_supported</strong>() <abbreviation explanation="Êú¨ÊñπÊ≥ïÊ≤°ÊúâÂâØ‰ΩúÁî®Ôºå‰∏ç‰ºö‰øÆÊîπËØ•ÂÆû‰æãÁöÑ‰ªª‰ΩïÊàêÂëòÂèòÈáè„ÄÇ">const</abbreviation> <reference internal="True" refid="class-openxrcompositionlayer-method-is-natively-supported"><inline classes="std std-ref">üîó</inline></reference></paragraph>
            <paragraph>Returns true if the OpenXR runtime natively supports this composition layer type.</paragraph>
            <paragraph><strong>Note:</strong> This will only return an accurate result after the OpenXR session has started.</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="Êú¨ÊñπÊ≥ïÈÄöÂ∏∏ÈúÄË¶ÅÁî®Êà∑Ë¶ÜÁõñÊâçËÉΩÁîüÊïà„ÄÇ">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="Êú¨ÊñπÊ≥ïÊ≤°ÊúâÂâØ‰ΩúÁî®Ôºå‰∏ç‰ºö‰øÆÊîπËØ•ÂÆû‰æãÁöÑ‰ªª‰ΩïÊàêÂëòÂèòÈáè„ÄÇ">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="Êú¨ÊñπÊ≥ïÈô§‰∫ÜËÉΩÊé•ÂèóÂú®Ê≠§Â§ÑÊèèËø∞ÁöÑÂèÇÊï∞Â§ñÔºåËøòËÉΩÂ§üÁªßÁª≠Êé•Âèó‰ªªÊÑèÊï∞ÈáèÁöÑÂèÇÊï∞„ÄÇ">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="Êú¨ÊñπÊ≥ïÁî®‰∫éÊûÑÈÄ†Êüê‰∏™Á±ªÂûã„ÄÇ">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="Ë∞ÉÁî®Êú¨ÊñπÊ≥ïÊó†ÈúÄÂÆû‰æãÔºåÂèØÁõ¥Êé•‰ΩøÁî®Á±ªÂêçËøõË°åË∞ÉÁî®„ÄÇ">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="Êú¨ÊñπÊ≥ïÊèèËø∞ÁöÑÊòØ‰ΩøÁî®Êú¨Á±ªÂûã‰Ωú‰∏∫Â∑¶Êìç‰ΩúÊï∞ÁöÑÊúâÊïàÊìç‰ΩúÁ¨¶„ÄÇ">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="Ëøô‰∏™ÂÄºÊòØÁî±‰∏ãÂàóÊ†áÂøóÊûÑÊàêÁöÑ‰ΩçÊé©Á†ÅÊï¥Êï∞„ÄÇ">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="Êó†ËøîÂõûÂÄº„ÄÇ">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

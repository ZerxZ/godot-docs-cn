<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_editorselection.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/EditorSelection.xml.</comment>
    <target refid="class-editorselection"></target>
    <section ids="editorselection class-editorselection" names="editorselection class_editorselection">
        <title>EditorSelection</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>管理编辑器中的 SceneTree 选择。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>这个对象管理编辑器中的 SceneTree 选择。</paragraph>
            <paragraph><strong>注意：</strong>这个类不应该直接实例化。相反，使用<reference internal="True" refuri="class_editorinterface#class-editorinterface-method-get-selection"><inline classes="std std-ref">EditorInterface.get_selection</inline></reference>访问单例。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="54"></colspec>
                    <colspec colwidth="110"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorselection-method-add-node"><inline classes="std std-ref">add_node</inline></reference>(node: <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorselection-method-clear"><inline classes="std std-ref">clear</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference>]</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorselection-method-get-selected-nodes"><inline classes="std std-ref">get_selected_nodes</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference>]</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorselection-method-get-transformable-selected-nodes"><inline classes="std std-ref">get_transformable_selected_nodes</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorselection-method-remove-node"><inline classes="std std-ref">remove_node</inline></reference>(node: <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference>)</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="信号">
            <title>信号</title>
            <target refid="class-editorselection-signal-selection-changed"></target>
            <paragraph classes="classref-signal" ids="class-editorselection-signal-selection-changed" names="class_editorselection_signal_selection_changed"><strong>selection_changed</strong>() <reference internal="True" refid="class-editorselection-signal-selection-changed"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>更改选择时发出。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="方法说明">
            <title>方法说明</title>
            <target refid="class-editorselection-method-add-node"></target>
            <paragraph classes="classref-method" ids="class-editorselection-method-add-node" names="class_editorselection_method_add_node"><abbreviation explanation="无返回值。">void</abbreviation> <strong>add_node</strong>(node: <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference>) <reference internal="True" refid="class-editorselection-method-add-node"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将一个节点添加到选择中。</paragraph>
            <paragraph><strong>注意：</strong>新选择的节点不会在检查器中自动被编辑。如果你想编辑一个节点，请使用 <reference internal="True" refuri="class_editorinterface#class-editorinterface-method-edit-node"><inline classes="std std-ref">EditorInterface.edit_node</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorselection-method-clear"></target>
            <paragraph classes="classref-method" ids="class-editorselection-method-clear" names="class_editorselection_method_clear"><abbreviation explanation="无返回值。">void</abbreviation> <strong>clear</strong>() <reference internal="True" refid="class-editorselection-method-clear"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>清除选中项。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorselection-method-get-selected-nodes"></target>
            <paragraph classes="classref-method" ids="class-editorselection-method-get-selected-nodes" names="class_editorselection_method_get_selected_nodes"><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference>] <strong>get_selected_nodes</strong>() <reference internal="True" refid="class-editorselection-method-get-selected-nodes"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回所选节点的列表。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorselection-method-get-transformable-selected-nodes"></target>
            <paragraph classes="classref-method" ids="class-editorselection-method-get-transformable-selected-nodes" names="class_editorselection_method_get_transformable_selected_nodes"><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference>] <strong>get_transformable_selected_nodes</strong>() <reference internal="True" refid="class-editorselection-method-get-transformable-selected-nodes"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回选定节点的列表，针对变换操作（即移动它们、旋转等）进行了优化。该列表可用于避免被选择的节点同时也是子节点/孙节点的情况。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorselection-method-remove-node"></target>
            <paragraph classes="classref-method" ids="class-editorselection-method-remove-node" names="class_editorselection_method_remove_node"><abbreviation explanation="无返回值。">void</abbreviation> <strong>remove_node</strong>(node: <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference>) <reference internal="True" refid="class-editorselection-method-remove-node"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>从选择中删除一个节点。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效运算符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列位标志构成位掩码的整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

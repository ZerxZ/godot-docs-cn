<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_navigationmeshsourcegeometrydata2d.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/NavigationMeshSourceGeometryData2D.xml.</comment>
    <target refid="class-navigationmeshsourcegeometrydata2d"></target>
    <section ids="navigationmeshsourcegeometrydata2d class-navigationmeshsourcegeometrydata2d" names="navigationmeshsourcegeometrydata2d class_navigationmeshsourcegeometrydata2d">
        <title>NavigationMeshSourceGeometryData2D</title>
        <paragraph><strong>实验性：</strong> This class may be changed or removed in future versions.</paragraph>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>存放解析所得的源几何体数据的容器，用于导航网格的烘焙。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>存放解析所得的源几何体数据的容器，用于导航网格的烘焙。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="82"></colspec>
                    <colspec colwidth="224"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-navigationmeshsourcegeometrydata2d-method-add-obstruction-outline"><inline classes="std std-ref">add_obstruction_outline</inline></reference>(shape_outline: <reference internal="True" refuri="class_packedvector2array#class-packedvector2array"><inline classes="std std-ref">PackedVector2Array</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-navigationmeshsourcegeometrydata2d-method-add-projected-obstruction"><inline classes="std std-ref">add_projected_obstruction</inline></reference>(vertices: <reference internal="True" refuri="class_packedvector2array#class-packedvector2array"><inline classes="std std-ref">PackedVector2Array</inline></reference>, carve: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-navigationmeshsourcegeometrydata2d-method-add-traversable-outline"><inline classes="std std-ref">add_traversable_outline</inline></reference>(shape_outline: <reference internal="True" refuri="class_packedvector2array#class-packedvector2array"><inline classes="std std-ref">PackedVector2Array</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-navigationmeshsourcegeometrydata2d-method-append-obstruction-outlines"><inline classes="std std-ref">append_obstruction_outlines</inline></reference>(obstruction_outlines: <reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_packedvector2array#class-packedvector2array"><inline classes="std std-ref">PackedVector2Array</inline></reference>])</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-navigationmeshsourcegeometrydata2d-method-append-traversable-outlines"><inline classes="std std-ref">append_traversable_outlines</inline></reference>(traversable_outlines: <reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_packedvector2array#class-packedvector2array"><inline classes="std std-ref">PackedVector2Array</inline></reference>])</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-navigationmeshsourcegeometrydata2d-method-clear"><inline classes="std std-ref">clear</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-navigationmeshsourcegeometrydata2d-method-clear-projected-obstructions"><inline classes="std std-ref">clear_projected_obstructions</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_packedvector2array#class-packedvector2array"><inline classes="std std-ref">PackedVector2Array</inline></reference>]</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-navigationmeshsourcegeometrydata2d-method-get-obstruction-outlines"><inline classes="std std-ref">get_obstruction_outlines</inline></reference>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-navigationmeshsourcegeometrydata2d-method-get-projected-obstructions"><inline classes="std std-ref">get_projected_obstructions</inline></reference>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_packedvector2array#class-packedvector2array"><inline classes="std std-ref">PackedVector2Array</inline></reference>]</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-navigationmeshsourcegeometrydata2d-method-get-traversable-outlines"><inline classes="std std-ref">get_traversable_outlines</inline></reference>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-navigationmeshsourcegeometrydata2d-method-has-data"><inline classes="std std-ref">has_data</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-navigationmeshsourcegeometrydata2d-method-merge"><inline classes="std std-ref">merge</inline></reference>(other_geometry: <reference internal="True" refid="class-navigationmeshsourcegeometrydata2d"><inline classes="std std-ref">NavigationMeshSourceGeometryData2D</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-navigationmeshsourcegeometrydata2d-method-set-obstruction-outlines"><inline classes="std std-ref">set_obstruction_outlines</inline></reference>(obstruction_outlines: <reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_packedvector2array#class-packedvector2array"><inline classes="std std-ref">PackedVector2Array</inline></reference>])</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-navigationmeshsourcegeometrydata2d-method-set-projected-obstructions"><inline classes="std std-ref">set_projected_obstructions</inline></reference>(projected_obstructions: <reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-navigationmeshsourcegeometrydata2d-method-set-traversable-outlines"><inline classes="std std-ref">set_traversable_outlines</inline></reference>(traversable_outlines: <reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_packedvector2array#class-packedvector2array"><inline classes="std std-ref">PackedVector2Array</inline></reference>])</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="方法说明">
            <title>方法说明</title>
            <target refid="class-navigationmeshsourcegeometrydata2d-method-add-obstruction-outline"></target>
            <paragraph classes="classref-method" ids="class-navigationmeshsourcegeometrydata2d-method-add-obstruction-outline" names="class_navigationmeshsourcegeometrydata2d_method_add_obstruction_outline"><abbreviation explanation="无返回值。">void</abbreviation> <strong>add_obstruction_outline</strong>(shape_outline: <reference internal="True" refuri="class_packedvector2array#class-packedvector2array"><inline classes="std std-ref">PackedVector2Array</inline></reference>) <reference internal="True" refid="class-navigationmeshsourcegeometrydata2d-method-add-obstruction-outline"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>添加形状的轮廓点作为遮挡区域。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-navigationmeshsourcegeometrydata2d-method-add-projected-obstruction"></target>
            <paragraph classes="classref-method" ids="class-navigationmeshsourcegeometrydata2d-method-add-projected-obstruction" names="class_navigationmeshsourcegeometrydata2d_method_add_projected_obstruction"><abbreviation explanation="无返回值。">void</abbreviation> <strong>add_projected_obstruction</strong>(vertices: <reference internal="True" refuri="class_packedvector2array#class-packedvector2array"><inline classes="std std-ref">PackedVector2Array</inline></reference>, carve: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <reference internal="True" refid="class-navigationmeshsourcegeometrydata2d-method-add-projected-obstruction"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将投影的障碍物形状添加到源几何体。如果 <literal>carve</literal> 为 <literal>true</literal>，则雕刻的形状将不会受到导航网格烘焙过程的额外偏移（例如代理半径）的影响。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-navigationmeshsourcegeometrydata2d-method-add-traversable-outline"></target>
            <paragraph classes="classref-method" ids="class-navigationmeshsourcegeometrydata2d-method-add-traversable-outline" names="class_navigationmeshsourcegeometrydata2d_method_add_traversable_outline"><abbreviation explanation="无返回值。">void</abbreviation> <strong>add_traversable_outline</strong>(shape_outline: <reference internal="True" refuri="class_packedvector2array#class-packedvector2array"><inline classes="std std-ref">PackedVector2Array</inline></reference>) <reference internal="True" refid="class-navigationmeshsourcegeometrydata2d-method-add-traversable-outline"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>添加形状的轮廓点作为可遍历区域。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-navigationmeshsourcegeometrydata2d-method-append-obstruction-outlines"></target>
            <paragraph classes="classref-method" ids="class-navigationmeshsourcegeometrydata2d-method-append-obstruction-outlines" names="class_navigationmeshsourcegeometrydata2d_method_append_obstruction_outlines"><abbreviation explanation="无返回值。">void</abbreviation> <strong>append_obstruction_outlines</strong>(obstruction_outlines: <reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_packedvector2array#class-packedvector2array"><inline classes="std std-ref">PackedVector2Array</inline></reference>]) <reference internal="True" refid="class-navigationmeshsourcegeometrydata2d-method-append-obstruction-outlines"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>在已有障碍物轮廓数组的末尾追加另一个 <literal>obstruction_outlines</literal> 数组。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-navigationmeshsourcegeometrydata2d-method-append-traversable-outlines"></target>
            <paragraph classes="classref-method" ids="class-navigationmeshsourcegeometrydata2d-method-append-traversable-outlines" names="class_navigationmeshsourcegeometrydata2d_method_append_traversable_outlines"><abbreviation explanation="无返回值。">void</abbreviation> <strong>append_traversable_outlines</strong>(traversable_outlines: <reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_packedvector2array#class-packedvector2array"><inline classes="std std-ref">PackedVector2Array</inline></reference>]) <reference internal="True" refid="class-navigationmeshsourcegeometrydata2d-method-append-traversable-outlines"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>在已有可遍历轮廓数组的末尾追加另一个 <literal>traversable_outlines</literal> 数组。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-navigationmeshsourcegeometrydata2d-method-clear"></target>
            <paragraph classes="classref-method" ids="class-navigationmeshsourcegeometrydata2d-method-clear" names="class_navigationmeshsourcegeometrydata2d_method_clear"><abbreviation explanation="无返回值。">void</abbreviation> <strong>clear</strong>() <reference internal="True" refid="class-navigationmeshsourcegeometrydata2d-method-clear"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>清除内部数据。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-navigationmeshsourcegeometrydata2d-method-clear-projected-obstructions"></target>
            <paragraph classes="classref-method" ids="class-navigationmeshsourcegeometrydata2d-method-clear-projected-obstructions" names="class_navigationmeshsourcegeometrydata2d_method_clear_projected_obstructions"><abbreviation explanation="无返回值。">void</abbreviation> <strong>clear_projected_obstructions</strong>() <reference internal="True" refid="class-navigationmeshsourcegeometrydata2d-method-clear-projected-obstructions"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>清除所有投射的障碍物。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-navigationmeshsourcegeometrydata2d-method-get-obstruction-outlines"></target>
            <paragraph classes="classref-method" ids="class-navigationmeshsourcegeometrydata2d-method-get-obstruction-outlines" names="class_navigationmeshsourcegeometrydata2d_method_get_obstruction_outlines"><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_packedvector2array#class-packedvector2array"><inline classes="std std-ref">PackedVector2Array</inline></reference>] <strong>get_obstruction_outlines</strong>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-navigationmeshsourcegeometrydata2d-method-get-obstruction-outlines"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回所有遮挡区域轮廓数组。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-navigationmeshsourcegeometrydata2d-method-get-projected-obstructions"></target>
            <paragraph classes="classref-method" ids="class-navigationmeshsourcegeometrydata2d-method-get-projected-obstructions" names="class_navigationmeshsourcegeometrydata2d_method_get_projected_obstructions"><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference> <strong>get_projected_obstructions</strong>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-navigationmeshsourcegeometrydata2d-method-get-projected-obstructions"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将投影的障碍物作为字典的 <reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference> 返回。每个 <reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference> 包含以下条目：</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><literal>vertices</literal> - 定义投影形状轮廓点的 <reference internal="True" refuri="class_packedfloat32array#class-packedfloat32array"><inline classes="std std-ref">PackedFloat32Array</inline></reference>。</paragraph>
                </list_item>
                <list_item>
                    <paragraph><literal>carve</literal> - 定义投影形状如何影响导航网格烘焙的 <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>。如果为 <literal>true</literal>，则投影形状不会受到额外偏移的影响，例如代理半径。</paragraph>
                </list_item>
            </bullet_list>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-navigationmeshsourcegeometrydata2d-method-get-traversable-outlines"></target>
            <paragraph classes="classref-method" ids="class-navigationmeshsourcegeometrydata2d-method-get-traversable-outlines" names="class_navigationmeshsourcegeometrydata2d_method_get_traversable_outlines"><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_packedvector2array#class-packedvector2array"><inline classes="std std-ref">PackedVector2Array</inline></reference>] <strong>get_traversable_outlines</strong>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-navigationmeshsourcegeometrydata2d-method-get-traversable-outlines"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回所有可遍历区域轮廓数组。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-navigationmeshsourcegeometrydata2d-method-has-data"></target>
            <paragraph classes="classref-method" ids="class-navigationmeshsourcegeometrydata2d-method-has-data" names="class_navigationmeshsourcegeometrydata2d_method_has_data"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>has_data</strong>() <reference internal="True" refid="class-navigationmeshsourcegeometrydata2d-method-has-data"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当解析的源几何数据存在时，返回 <literal>true</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-navigationmeshsourcegeometrydata2d-method-merge"></target>
            <paragraph classes="classref-method" ids="class-navigationmeshsourcegeometrydata2d-method-merge" names="class_navigationmeshsourcegeometrydata2d_method_merge"><abbreviation explanation="无返回值。">void</abbreviation> <strong>merge</strong>(other_geometry: <reference internal="True" refid="class-navigationmeshsourcegeometrydata2d"><inline classes="std std-ref">NavigationMeshSourceGeometryData2D</inline></reference>) <reference internal="True" refid="class-navigationmeshsourcegeometrydata2d-method-merge"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将其他 <strong>NavigationMeshSourceGeometryData2D</strong> 的几何体数据添加到导航网格烘焙数据。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-navigationmeshsourcegeometrydata2d-method-set-obstruction-outlines"></target>
            <paragraph classes="classref-method" ids="class-navigationmeshsourcegeometrydata2d-method-set-obstruction-outlines" names="class_navigationmeshsourcegeometrydata2d_method_set_obstruction_outlines"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_obstruction_outlines</strong>(obstruction_outlines: <reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_packedvector2array#class-packedvector2array"><inline classes="std std-ref">PackedVector2Array</inline></reference>]) <reference internal="True" refid="class-navigationmeshsourcegeometrydata2d-method-set-obstruction-outlines"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置所有遮挡区域轮廓数组。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-navigationmeshsourcegeometrydata2d-method-set-projected-obstructions"></target>
            <paragraph classes="classref-method" ids="class-navigationmeshsourcegeometrydata2d-method-set-projected-obstructions" names="class_navigationmeshsourcegeometrydata2d_method_set_projected_obstructions"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_projected_obstructions</strong>(projected_obstructions: <reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>) <reference internal="True" refid="class-navigationmeshsourcegeometrydata2d-method-set-projected-obstructions"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>使用包含以下键值对的字典数组设置投影障碍物：</paragraph>
            <container classes="sphinx-tabs" type="tab-element">
                <div aria-label="Tabbed content" role="tablist">
                    <button aria-controls="panel-0-R0RTY3JpcHQ=" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-0-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tab" tabindex="0">GDScript</button>
                </div>
                <div aria-labelledby="tab-0-R0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-0-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve">"vertices" : PackedFloat32Array
"carve" : bool</literal_block>
                </div>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-navigationmeshsourcegeometrydata2d-method-set-traversable-outlines"></target>
            <paragraph classes="classref-method" ids="class-navigationmeshsourcegeometrydata2d-method-set-traversable-outlines" names="class_navigationmeshsourcegeometrydata2d_method_set_traversable_outlines"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_traversable_outlines</strong>(traversable_outlines: <reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_packedvector2array#class-packedvector2array"><inline classes="std std-ref">PackedVector2Array</inline></reference>]) <reference internal="True" refid="class-navigationmeshsourcegeometrydata2d-method-set-traversable-outlines"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置所有可遍历区域轮廓数组。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效运算符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列位标志构成位掩码的整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

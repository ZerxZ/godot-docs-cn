<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_navigationmeshsourcegeometrydata2d.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/NavigationMeshSourceGeometryData2D.xml.</comment>
    <target refid="class-navigationmeshsourcegeometrydata2d"></target>
    <section ids="navigationmeshsourcegeometrydata2d class-navigationmeshsourcegeometrydata2d" names="navigationmeshsourcegeometrydata2d class_navigationmeshsourcegeometrydata2d">
        <title>NavigationMeshSourceGeometryData2D</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>存放解析所得的源几何体数据的容器，用于导航网格的烘焙。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>存放解析所得的源几何体数据的容器，用于导航网格的烘焙。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="55"></colspec>
                    <colspec colwidth="194"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-navigationmeshsourcegeometrydata2d-method-add-obstruction-outline"><inline classes="std std-ref">add_obstruction_outline</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_packedvector2array#class-packedvector2array"><inline classes="std std-ref">PackedVector2Array</inline></reference> shape_outline <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-navigationmeshsourcegeometrydata2d-method-add-traversable-outline"><inline classes="std std-ref">add_traversable_outline</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_packedvector2array#class-packedvector2array"><inline classes="std std-ref">PackedVector2Array</inline></reference> shape_outline <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-navigationmeshsourcegeometrydata2d-method-clear"><inline classes="std std-ref">clear</inline></reference> <strong>(</strong> <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_packedvector2array#class-packedvector2array"><inline classes="std std-ref">PackedVector2Array[]</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-navigationmeshsourcegeometrydata2d-method-get-obstruction-outlines"><inline classes="std std-ref">get_obstruction_outlines</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_packedvector2array#class-packedvector2array"><inline classes="std std-ref">PackedVector2Array[]</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-navigationmeshsourcegeometrydata2d-method-get-traversable-outlines"><inline classes="std std-ref">get_traversable_outlines</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-navigationmeshsourcegeometrydata2d-method-has-data"><inline classes="std std-ref">has_data</inline></reference> <strong>(</strong> <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-navigationmeshsourcegeometrydata2d-method-set-obstruction-outlines"><inline classes="std std-ref">set_obstruction_outlines</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_packedvector2array#class-packedvector2array"><inline classes="std std-ref">PackedVector2Array[]</inline></reference> obstruction_outlines <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-navigationmeshsourcegeometrydata2d-method-set-traversable-outlines"><inline classes="std std-ref">set_traversable_outlines</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_packedvector2array#class-packedvector2array"><inline classes="std std-ref">PackedVector2Array[]</inline></reference> traversable_outlines <strong>)</strong></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="方法说明">
            <title>方法说明</title>
            <target refid="class-navigationmeshsourcegeometrydata2d-method-add-obstruction-outline"></target>
            <paragraph classes="classref-method" ids="class-navigationmeshsourcegeometrydata2d-method-add-obstruction-outline" names="class_navigationmeshsourcegeometrydata2d_method_add_obstruction_outline">void <strong>add_obstruction_outline</strong> <strong>(</strong> <reference internal="True" refuri="class_packedvector2array#class-packedvector2array"><inline classes="std std-ref">PackedVector2Array</inline></reference> shape_outline <strong>)</strong></paragraph>
            <paragraph>添加形状的轮廓点作为遮挡区域。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-navigationmeshsourcegeometrydata2d-method-add-traversable-outline"></target>
            <paragraph classes="classref-method" ids="class-navigationmeshsourcegeometrydata2d-method-add-traversable-outline" names="class_navigationmeshsourcegeometrydata2d_method_add_traversable_outline">void <strong>add_traversable_outline</strong> <strong>(</strong> <reference internal="True" refuri="class_packedvector2array#class-packedvector2array"><inline classes="std std-ref">PackedVector2Array</inline></reference> shape_outline <strong>)</strong></paragraph>
            <paragraph>添加形状的轮廓点作为可遍历区域。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-navigationmeshsourcegeometrydata2d-method-clear"></target>
            <paragraph classes="classref-method" ids="class-navigationmeshsourcegeometrydata2d-method-clear" names="class_navigationmeshsourcegeometrydata2d_method_clear">void <strong>clear</strong> <strong>(</strong> <strong>)</strong></paragraph>
            <paragraph>清除内部数据。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-navigationmeshsourcegeometrydata2d-method-get-obstruction-outlines"></target>
            <paragraph classes="classref-method" ids="class-navigationmeshsourcegeometrydata2d-method-get-obstruction-outlines" names="class_navigationmeshsourcegeometrydata2d_method_get_obstruction_outlines"><reference internal="True" refuri="class_packedvector2array#class-packedvector2array"><inline classes="std std-ref">PackedVector2Array[]</inline></reference> <strong>get_obstruction_outlines</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回所有遮挡区域轮廓数组。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-navigationmeshsourcegeometrydata2d-method-get-traversable-outlines"></target>
            <paragraph classes="classref-method" ids="class-navigationmeshsourcegeometrydata2d-method-get-traversable-outlines" names="class_navigationmeshsourcegeometrydata2d_method_get_traversable_outlines"><reference internal="True" refuri="class_packedvector2array#class-packedvector2array"><inline classes="std std-ref">PackedVector2Array[]</inline></reference> <strong>get_traversable_outlines</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回所有可遍历区域轮廓数组。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-navigationmeshsourcegeometrydata2d-method-has-data"></target>
            <paragraph classes="classref-method" ids="class-navigationmeshsourcegeometrydata2d-method-has-data" names="class_navigationmeshsourcegeometrydata2d_method_has_data"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>has_data</strong> <strong>(</strong> <strong>)</strong></paragraph>
            <paragraph>当解析的源几何数据存在时，返回 <literal>true</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-navigationmeshsourcegeometrydata2d-method-set-obstruction-outlines"></target>
            <paragraph classes="classref-method" ids="class-navigationmeshsourcegeometrydata2d-method-set-obstruction-outlines" names="class_navigationmeshsourcegeometrydata2d_method_set_obstruction_outlines">void <strong>set_obstruction_outlines</strong> <strong>(</strong> <reference internal="True" refuri="class_packedvector2array#class-packedvector2array"><inline classes="std std-ref">PackedVector2Array[]</inline></reference> obstruction_outlines <strong>)</strong></paragraph>
            <paragraph>设置所有遮挡区域轮廓数组。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-navigationmeshsourcegeometrydata2d-method-set-traversable-outlines"></target>
            <paragraph classes="classref-method" ids="class-navigationmeshsourcegeometrydata2d-method-set-traversable-outlines" names="class_navigationmeshsourcegeometrydata2d_method_set_traversable_outlines">void <strong>set_traversable_outlines</strong> <strong>(</strong> <reference internal="True" refuri="class_packedvector2array#class-packedvector2array"><inline classes="std std-ref">PackedVector2Array[]</inline></reference> traversable_outlines <strong>)</strong></paragraph>
            <paragraph>设置所有可遍历区域轮廓数组。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，所以可以直接使用类名调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

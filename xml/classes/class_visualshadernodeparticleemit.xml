<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_visualshadernodeparticleemit.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/VisualShaderNodeParticleEmit.xml.</comment>
    <target refid="class-visualshadernodeparticleemit"></target>
    <section ids="visualshadernodeparticleemit class-visualshadernodeparticleemit" names="visualshadernodeparticleemit class_visualshadernodeparticleemit">
        <title>VisualShaderNodeParticleEmit</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_visualshadernode#class-visualshadernode"><inline classes="std std-ref">VisualShaderNode</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>一种可视化着色器节点，强制从子发射器中发射一个粒子。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>该节点在内部调用 <literal>emit_subparticle</literal> 着色器方法。它将从配置的子发射器发射一个粒子，还允许自定义其发射方式。需要使用该着色器将子发射器分配给粒子节点。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="63"></colspec>
                    <colspec colwidth="65"></colspec>
                    <colspec colwidth="8"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-visualshadernodeparticleemit-emitflags"><inline classes="std std-ref">EmitFlags</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-visualshadernodeparticleemit-property-flags"><inline classes="std std-ref">flags</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>31</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="枚举">
            <title>枚举</title>
            <target refid="enum-visualshadernodeparticleemit-emitflags"></target>
            <paragraph classes="classref-enumeration" ids="enum-visualshadernodeparticleemit-emitflags" names="enum_visualshadernodeparticleemit_emitflags">enum <strong>EmitFlags</strong>: <reference internal="True" refid="enum-visualshadernodeparticleemit-emitflags"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-visualshadernodeparticleemit-constant-emit-flag-position"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-visualshadernodeparticleemit-constant-emit-flag-position" names="class_visualshadernodeparticleemit_constant_emit_flag_position"><reference internal="True" refid="enum-visualshadernodeparticleemit-emitflags"><inline classes="std std-ref">EmitFlags</inline></reference> <strong>EMIT_FLAG_POSITION</strong> = <literal>1</literal></paragraph>
            <paragraph>如果启用，则粒子从该节点所定义的位置开始。</paragraph>
            <target refid="class-visualshadernodeparticleemit-constant-emit-flag-rot-scale"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-visualshadernodeparticleemit-constant-emit-flag-rot-scale" names="class_visualshadernodeparticleemit_constant_emit_flag_rot_scale"><reference internal="True" refid="enum-visualshadernodeparticleemit-emitflags"><inline classes="std std-ref">EmitFlags</inline></reference> <strong>EMIT_FLAG_ROT_SCALE</strong> = <literal>2</literal></paragraph>
            <paragraph>如果启用，则粒子从该节点所定义的旋转和缩放开始。</paragraph>
            <target refid="class-visualshadernodeparticleemit-constant-emit-flag-velocity"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-visualshadernodeparticleemit-constant-emit-flag-velocity" names="class_visualshadernodeparticleemit_constant_emit_flag_velocity"><reference internal="True" refid="enum-visualshadernodeparticleemit-emitflags"><inline classes="std std-ref">EmitFlags</inline></reference> <strong>EMIT_FLAG_VELOCITY</strong> = <literal>4</literal></paragraph>
            <paragraph>如果启用，则粒子从该节点所定义的速度开始。</paragraph>
            <target refid="class-visualshadernodeparticleemit-constant-emit-flag-color"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-visualshadernodeparticleemit-constant-emit-flag-color" names="class_visualshadernodeparticleemit_constant_emit_flag_color"><reference internal="True" refid="enum-visualshadernodeparticleemit-emitflags"><inline classes="std std-ref">EmitFlags</inline></reference> <strong>EMIT_FLAG_COLOR</strong> = <literal>8</literal></paragraph>
            <paragraph>如果启用，则粒子从该节点所定义的颜色开始。</paragraph>
            <target refid="class-visualshadernodeparticleemit-constant-emit-flag-custom"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-visualshadernodeparticleemit-constant-emit-flag-custom" names="class_visualshadernodeparticleemit_constant_emit_flag_custom"><reference internal="True" refid="enum-visualshadernodeparticleemit-emitflags"><inline classes="std std-ref">EmitFlags</inline></reference> <strong>EMIT_FLAG_CUSTOM</strong> = <literal>16</literal></paragraph>
            <paragraph>如果启用，则粒子从该节点所定义的 <literal>CUSTOM</literal> 自定义数据开始。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="属性说明">
            <title>属性说明</title>
            <target refid="class-visualshadernodeparticleemit-property-flags"></target>
            <paragraph classes="classref-property" ids="class-visualshadernodeparticleemit-property-flags" names="class_visualshadernodeparticleemit_property_flags"><reference internal="True" refid="enum-visualshadernodeparticleemit-emitflags"><inline classes="std std-ref">EmitFlags</inline></reference> <strong>flags</strong> = <literal>31</literal> <reference internal="True" refid="class-visualshadernodeparticleemit-property-flags"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_flags</strong>(value: <reference internal="True" refid="enum-visualshadernodeparticleemit-emitflags"><inline classes="std std-ref">EmitFlags</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-visualshadernodeparticleemit-emitflags"><inline classes="std std-ref">EmitFlags</inline></reference> <strong>get_flags</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>用于覆盖子发射器处理材质中定义的属性的标志。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_scenereplicationconfig.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/4.2/modules/multiplayer/doc_classes/SceneReplicationConfig.xml.</comment>
    <target refid="class-scenereplicationconfig"></target>
    <section ids="scenereplicationconfig class-scenereplicationconfig" names="scenereplicationconfig class_scenereplicationconfig">
        <title>SceneReplicationConfig</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>配置，能够让 <reference internal="True" refuri="class_multiplayersynchronizer#class-multiplayersynchronizer"><inline classes="std std-ref">MultiplayerSynchronizer</inline></reference> 对属性进行同步。</paragraph>
        <section classes="classref-reftable-group" ids="id1" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="69"></colspec>
                    <colspec colwidth="228"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-scenereplicationconfig-method-add-property"><inline classes="std std-ref">add_property</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> path, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index=-1 <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath[]</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-scenereplicationconfig-method-get-properties"><inline classes="std std-ref">get_properties</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-scenereplicationconfig-method-has-property"><inline classes="std std-ref">has_property</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> path <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-scenereplicationconfig-method-property-get-index"><inline classes="std std-ref">property_get_index</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> path <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-scenereplicationconfig-replicationmode"><inline classes="std std-ref">ReplicationMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-scenereplicationconfig-method-property-get-replication-mode"><inline classes="std std-ref">property_get_replication_mode</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> path <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-scenereplicationconfig-method-property-get-spawn"><inline classes="std std-ref">property_get_spawn</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> path <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-scenereplicationconfig-method-property-get-sync"><inline classes="std std-ref">property_get_sync</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> path <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-scenereplicationconfig-method-property-get-watch"><inline classes="std std-ref">property_get_watch</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> path <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-scenereplicationconfig-method-property-set-replication-mode"><inline classes="std std-ref">property_set_replication_mode</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> path, <reference internal="True" refid="enum-scenereplicationconfig-replicationmode"><inline classes="std std-ref">ReplicationMode</inline></reference> mode <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-scenereplicationconfig-method-property-set-spawn"><inline classes="std std-ref">property_set_spawn</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> path, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> enabled <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-scenereplicationconfig-method-property-set-sync"><inline classes="std std-ref">property_set_sync</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> path, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> enabled <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-scenereplicationconfig-method-property-set-watch"><inline classes="std std-ref">property_set_watch</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> path, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> enabled <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-scenereplicationconfig-method-remove-property"><inline classes="std std-ref">remove_property</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> path <strong>)</strong></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id2" names="枚举">
            <title>枚举</title>
            <target refid="enum-scenereplicationconfig-replicationmode"></target>
            <paragraph classes="classref-enumeration" ids="enum-scenereplicationconfig-replicationmode" names="enum_scenereplicationconfig_replicationmode">enum <strong>ReplicationMode</strong>:</paragraph>
            <target refid="class-scenereplicationconfig-constant-replication-mode-never"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-scenereplicationconfig-constant-replication-mode-never" names="class_scenereplicationconfig_constant_replication_mode_never"><reference internal="True" refid="enum-scenereplicationconfig-replicationmode"><inline classes="std std-ref">ReplicationMode</inline></reference> <strong>REPLICATION_MODE_NEVER</strong> = <literal>0</literal></paragraph>
            <paragraph>不要让给定的属性保持同步。</paragraph>
            <target refid="class-scenereplicationconfig-constant-replication-mode-always"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-scenereplicationconfig-constant-replication-mode-always" names="class_scenereplicationconfig_constant_replication_mode_always"><reference internal="True" refid="enum-scenereplicationconfig-replicationmode"><inline classes="std std-ref">ReplicationMode</inline></reference> <strong>REPLICATION_MODE_ALWAYS</strong> = <literal>1</literal></paragraph>
            <paragraph>处理时复制给定的属性，会使用不可靠的传输模式持续发送更新。</paragraph>
            <target refid="class-scenereplicationconfig-constant-replication-mode-on-change"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-scenereplicationconfig-constant-replication-mode-on-change" names="class_scenereplicationconfig_constant_replication_mode_on_change"><reference internal="True" refid="enum-scenereplicationconfig-replicationmode"><inline classes="std std-ref">ReplicationMode</inline></reference> <strong>REPLICATION_MODE_ON_CHANGE</strong> = <literal>2</literal></paragraph>
            <paragraph>处理时复制给定的属性，会使用可靠的传输模式在值发生变化时发送更新。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="方法说明">
            <title>方法说明</title>
            <target refid="class-scenereplicationconfig-method-add-property"></target>
            <paragraph classes="classref-method" ids="class-scenereplicationconfig-method-add-property" names="class_scenereplicationconfig_method_add_property">void <strong>add_property</strong> <strong>(</strong> <reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> path, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index=-1 <strong>)</strong></paragraph>
            <paragraph>将属性添加至同步属性列表，该属性由 <literal>path</literal> 指定，还可以传入索引 <literal>index</literal>。</paragraph>
            <paragraph><strong>注意：</strong>属性同步的限制详见 <reference internal="True" refuri="class_multiplayersynchronizer#class-multiplayersynchronizer"><inline classes="std std-ref">MultiplayerSynchronizer</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-scenereplicationconfig-method-get-properties"></target>
            <paragraph classes="classref-method" ids="class-scenereplicationconfig-method-get-properties" names="class_scenereplicationconfig_method_get_properties"><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath[]</inline></reference> <strong>get_properties</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回同步属性的 <reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> 列表。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-scenereplicationconfig-method-has-property"></target>
            <paragraph classes="classref-method" ids="class-scenereplicationconfig-method-has-property" names="class_scenereplicationconfig_method_has_property"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>has_property</strong> <strong>(</strong> <reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> path <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回给定的 <literal>path</literal> 是否配置为同步。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-scenereplicationconfig-method-property-get-index"></target>
            <paragraph classes="classref-method" ids="class-scenereplicationconfig-method-property-get-index" names="class_scenereplicationconfig_method_property_get_index"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>property_get_index</strong> <strong>(</strong> <reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> path <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>查找给定 <literal>path</literal> 的索引。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-scenereplicationconfig-method-property-get-replication-mode"></target>
            <paragraph classes="classref-method" ids="class-scenereplicationconfig-method-property-get-replication-mode" names="class_scenereplicationconfig_method_property_get_replication_mode"><reference internal="True" refid="enum-scenereplicationconfig-replicationmode"><inline classes="std std-ref">ReplicationMode</inline></reference> <strong>property_get_replication_mode</strong> <strong>(</strong> <reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> path <strong>)</strong></paragraph>
            <paragraph>返回给定 <literal>path</literal> 标识的属性的复制模式。请参阅 <reference internal="True" refid="enum-scenereplicationconfig-replicationmode"><inline classes="std std-ref">ReplicationMode</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-scenereplicationconfig-method-property-get-spawn"></target>
            <paragraph classes="classref-method" ids="class-scenereplicationconfig-method-property-get-spawn" names="class_scenereplicationconfig_method_property_get_spawn"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>property_get_spawn</strong> <strong>(</strong> <reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> path <strong>)</strong></paragraph>
            <paragraph>返回属性是否配置为在出生时同步，该属性由 <literal>path</literal> 指定。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-scenereplicationconfig-method-property-get-sync"></target>
            <paragraph classes="classref-method" ids="class-scenereplicationconfig-method-property-get-sync" names="class_scenereplicationconfig_method_property_get_sync"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>property_get_sync</strong> <strong>(</strong> <reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> path <strong>)</strong></paragraph>
            <paragraph>返回属性是否配置为在处理时同步，该属性由<literal>path</literal> 指定。</paragraph>
            <paragraph><emphasis>已废弃。</emphasis>请改用 <reference internal="True" refid="class-scenereplicationconfig-method-property-get-replication-mode"><inline classes="std std-ref">property_get_replication_mode</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-scenereplicationconfig-method-property-get-watch"></target>
            <paragraph classes="classref-method" ids="class-scenereplicationconfig-method-property-get-watch" names="class_scenereplicationconfig_method_property_get_watch"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>property_get_watch</strong> <strong>(</strong> <reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> path <strong>)</strong></paragraph>
            <paragraph>返回属性是否配置为在处理中检测到变化时进行可靠同步，该属性由 <literal>path</literal> 指定。</paragraph>
            <paragraph><emphasis>已废弃。</emphasis>请改用 <reference internal="True" refid="class-scenereplicationconfig-method-property-get-replication-mode"><inline classes="std std-ref">property_get_replication_mode</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-scenereplicationconfig-method-property-set-replication-mode"></target>
            <paragraph classes="classref-method" ids="class-scenereplicationconfig-method-property-set-replication-mode" names="class_scenereplicationconfig_method_property_set_replication_mode">void <strong>property_set_replication_mode</strong> <strong>(</strong> <reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> path, <reference internal="True" refid="enum-scenereplicationconfig-replicationmode"><inline classes="std std-ref">ReplicationMode</inline></reference> mode <strong>)</strong></paragraph>
            <paragraph>为路径为 <literal>path</literal> 的属性设置同步模式。见 <reference internal="True" refid="enum-scenereplicationconfig-replicationmode"><inline classes="std std-ref">ReplicationMode</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-scenereplicationconfig-method-property-set-spawn"></target>
            <paragraph classes="classref-method" ids="class-scenereplicationconfig-method-property-set-spawn" names="class_scenereplicationconfig_method_property_set_spawn">void <strong>property_set_spawn</strong> <strong>(</strong> <reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> path, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> enabled <strong>)</strong></paragraph>
            <paragraph>设置是否将路径为 <literal>path</literal> 的属性配置为在出生时同步。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-scenereplicationconfig-method-property-set-sync"></target>
            <paragraph classes="classref-method" ids="class-scenereplicationconfig-method-property-set-sync" names="class_scenereplicationconfig_method_property_set_sync">void <strong>property_set_sync</strong> <strong>(</strong> <reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> path, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> enabled <strong>)</strong></paragraph>
            <paragraph>设置是否将路径为 <literal>path</literal> 的属性配置为在处理时同步。</paragraph>
            <paragraph><emphasis>已废弃。</emphasis>请改为使用 <reference internal="True" refid="class-scenereplicationconfig-constant-replication-mode-always"><inline classes="std std-ref">REPLICATION_MODE_ALWAYS</inline></reference> 调用 <reference internal="True" refid="class-scenereplicationconfig-method-property-set-replication-mode"><inline classes="std std-ref">property_set_replication_mode</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-scenereplicationconfig-method-property-set-watch"></target>
            <paragraph classes="classref-method" ids="class-scenereplicationconfig-method-property-set-watch" names="class_scenereplicationconfig_method_property_set_watch">void <strong>property_set_watch</strong> <strong>(</strong> <reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> path, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> enabled <strong>)</strong></paragraph>
            <paragraph>设置是否将路径为 <literal>path</literal> 的属性配置为在处理时检测到变化时进行可靠同步。</paragraph>
            <paragraph><emphasis>已废弃。</emphasis>请改为使用 <reference internal="True" refid="class-scenereplicationconfig-constant-replication-mode-on-change"><inline classes="std std-ref">REPLICATION_MODE_ON_CHANGE</inline></reference> 调用 <reference internal="True" refid="class-scenereplicationconfig-method-property-set-replication-mode"><inline classes="std std-ref">property_set_replication_mode</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-scenereplicationconfig-method-remove-property"></target>
            <paragraph classes="classref-method" ids="class-scenereplicationconfig-method-remove-property" names="class_scenereplicationconfig_method_remove_property">void <strong>remove_property</strong> <strong>(</strong> <reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> path <strong>)</strong></paragraph>
            <paragraph>从配置中移除属性，该属性由 <literal>path</literal> 指定。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，所以可以直接使用类名调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

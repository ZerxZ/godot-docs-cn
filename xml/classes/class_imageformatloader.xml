<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_imageformatloader.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/ImageFormatLoader.xml.</comment>
    <target refid="class-imageformatloader"></target>
    <section ids="imageformatloader class-imageformatloader" names="imageformatloader class_imageformatloader">
        <title>ImageFormatLoader</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph><strong>派生：</strong> <reference internal="True" refuri="class_imageformatloaderextension#class-imageformatloaderextension"><inline classes="std std-ref">ImageFormatLoaderExtension</inline></reference></paragraph>
        <paragraph>用于添加特定图像格式支持的基类。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>该引擎支持多种开箱即用的图像格式（PNG、SVG、JPEG、WebP 等），但也可以选择通过扩展 <reference internal="True" refuri="class_imageformatloaderextension#class-imageformatloaderextension"><inline classes="std std-ref">ImageFormatLoaderExtension</inline></reference>，来实现对其他图像格式的支持。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id2" names="枚举">
            <title>枚举</title>
            <target refid="enum-imageformatloader-loaderflags"></target>
            <paragraph classes="classref-enumeration" ids="enum-imageformatloader-loaderflags" names="enum_imageformatloader_loaderflags">flags <strong>LoaderFlags</strong>: <reference internal="True" refid="enum-imageformatloader-loaderflags"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-imageformatloader-constant-flag-none"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-imageformatloader-constant-flag-none" names="class_imageformatloader_constant_flag_none"><reference internal="True" refid="enum-imageformatloader-loaderflags"><inline classes="std std-ref">LoaderFlags</inline></reference> <strong>FLAG_NONE</strong> = <literal>0</literal></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个枚举的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <target refid="class-imageformatloader-constant-flag-force-linear"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-imageformatloader-constant-flag-force-linear" names="class_imageformatloader_constant_flag_force_linear"><reference internal="True" refid="enum-imageformatloader-loaderflags"><inline classes="std std-ref">LoaderFlags</inline></reference> <strong>FLAG_FORCE_LINEAR</strong> = <literal>1</literal></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个枚举的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <target refid="class-imageformatloader-constant-flag-convert-colors"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-imageformatloader-constant-flag-convert-colors" names="class_imageformatloader_constant_flag_convert_colors"><reference internal="True" refid="enum-imageformatloader-loaderflags"><inline classes="std std-ref">LoaderFlags</inline></reference> <strong>FLAG_CONVERT_COLORS</strong> = <literal>2</literal></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个枚举的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

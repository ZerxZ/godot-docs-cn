<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_boxcontainer.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/BoxContainer.xml.</comment>
    <target refid="class-boxcontainer"></target>
    <section ids="boxcontainer class-boxcontainer" names="boxcontainer class_boxcontainer">
        <title>BoxContainer</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_container#class-container"><inline classes="std std-ref">Container</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_control#class-control"><inline classes="std std-ref">Control</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_canvasitem#class-canvasitem"><inline classes="std std-ref">CanvasItem</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph><strong>派生：</strong> <reference internal="True" refuri="class_hboxcontainer#class-hboxcontainer"><inline classes="std std-ref">HBoxContainer</inline></reference>, <reference internal="True" refuri="class_vboxcontainer#class-vboxcontainer"><inline classes="std std-ref">VBoxContainer</inline></reference></paragraph>
        <paragraph>将子控件横向或纵向排列的容器。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>将子控件横向或纵向排列的容器，会在这些控件的最小尺寸发生改变时自动重排。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference internal="True" refuri="../tutorials/ui/gui_containers"><inline classes="doc">使用容器</inline></reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="55"></colspec>
                    <colspec colwidth="57"></colspec>
                    <colspec colwidth="11"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-boxcontainer-alignmentmode"><inline classes="std std-ref">AlignmentMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-boxcontainer-property-alignment"><inline classes="std std-ref">alignment</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-boxcontainer-property-vertical"><inline classes="std std-ref">vertical</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id4" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="31"></colspec>
                    <colspec colwidth="99"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_control#class-control"><inline classes="std std-ref">Control</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-boxcontainer-method-add-spacer"><inline classes="std std-ref">add_spacer</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> begin <strong>)</strong></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id5" names="主题属性">
            <title>主题属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="23"></colspec>
                    <colspec colwidth="65"></colspec>
                    <colspec colwidth="7"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-boxcontainer-theme-constant-separation"><inline classes="std std-ref">separation</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>4</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="枚举">
            <title>枚举</title>
            <target refid="enum-boxcontainer-alignmentmode"></target>
            <paragraph classes="classref-enumeration" ids="enum-boxcontainer-alignmentmode" names="enum_boxcontainer_alignmentmode">enum <strong>AlignmentMode</strong>:</paragraph>
            <target refid="class-boxcontainer-constant-alignment-begin"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-boxcontainer-constant-alignment-begin" names="class_boxcontainer_constant_alignment_begin"><reference internal="True" refid="enum-boxcontainer-alignmentmode"><inline classes="std std-ref">AlignmentMode</inline></reference> <strong>ALIGNMENT_BEGIN</strong> = <literal>0</literal></paragraph>
            <paragraph>子控件会被排列在该容器的开头，如果是垂直朝向则为顶部，如果是水平朝向则为左侧（RTL 布局时为右侧）。</paragraph>
            <target refid="class-boxcontainer-constant-alignment-center"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-boxcontainer-constant-alignment-center" names="class_boxcontainer_constant_alignment_center"><reference internal="True" refid="enum-boxcontainer-alignmentmode"><inline classes="std std-ref">AlignmentMode</inline></reference> <strong>ALIGNMENT_CENTER</strong> = <literal>1</literal></paragraph>
            <paragraph>子控件会在该容器里居中。</paragraph>
            <target refid="class-boxcontainer-constant-alignment-end"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-boxcontainer-constant-alignment-end" names="class_boxcontainer_constant_alignment_end"><reference internal="True" refid="enum-boxcontainer-alignmentmode"><inline classes="std std-ref">AlignmentMode</inline></reference> <strong>ALIGNMENT_END</strong> = <literal>2</literal></paragraph>
            <paragraph>子控件会被排列在该容器的末尾，如果是垂直朝向则为底部，如果是水平朝向则为右侧（RTL 布局时为左侧）。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id7" names="属性说明">
            <title>属性说明</title>
            <target refid="class-boxcontainer-property-alignment"></target>
            <paragraph classes="classref-property" ids="class-boxcontainer-property-alignment" names="class_boxcontainer_property_alignment"><reference internal="True" refid="enum-boxcontainer-alignmentmode"><inline classes="std std-ref">AlignmentMode</inline></reference> <strong>alignment</strong> = <literal>0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_alignment</strong> <strong>(</strong> <reference internal="True" refid="enum-boxcontainer-alignmentmode"><inline classes="std std-ref">AlignmentMode</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-boxcontainer-alignmentmode"><inline classes="std std-ref">AlignmentMode</inline></reference> <strong>get_alignment</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>该容器子节点的对齐方式（必须是 <reference internal="True" refid="class-boxcontainer-constant-alignment-begin"><inline classes="std std-ref">ALIGNMENT_BEGIN</inline></reference>、<reference internal="True" refid="class-boxcontainer-constant-alignment-center"><inline classes="std std-ref">ALIGNMENT_CENTER</inline></reference>、<reference internal="True" refid="class-boxcontainer-constant-alignment-end"><inline classes="std std-ref">ALIGNMENT_END</inline></reference> 之一）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-boxcontainer-property-vertical"></target>
            <paragraph classes="classref-property" ids="class-boxcontainer-property-vertical" names="class_boxcontainer_property_vertical"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>vertical</strong> = <literal>false</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_vertical</strong> <strong>(</strong> <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_vertical</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则该 <strong>BoxContainer</strong> 会将子节点垂直排列，否则会水平排列。</paragraph>
            <paragraph>使用 <reference internal="True" refuri="class_hboxcontainer#class-hboxcontainer"><inline classes="std std-ref">HBoxContainer</inline></reference> 和 <reference internal="True" refuri="class_vboxcontainer#class-vboxcontainer"><inline classes="std std-ref">VBoxContainer</inline></reference> 时无法改变。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id8" names="方法说明">
            <title>方法说明</title>
            <target refid="class-boxcontainer-method-add-spacer"></target>
            <paragraph classes="classref-method" ids="class-boxcontainer-method-add-spacer" names="class_boxcontainer_method_add_spacer"><reference internal="True" refuri="class_control#class-control"><inline classes="std std-ref">Control</inline></reference> <strong>add_spacer</strong> <strong>(</strong> <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> begin <strong>)</strong></paragraph>
            <paragraph>添加 <reference internal="True" refuri="class_control#class-control"><inline classes="std std-ref">Control</inline></reference> 节点作为间隔。如果 <literal>begin</literal> 为 <literal>true</literal>，则会将该 <reference internal="True" refuri="class_control#class-control"><inline classes="std std-ref">Control</inline></reference> 节点添加到所有其他节点之前。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id9" names="主题属性说明">
            <title>主题属性说明</title>
            <target refid="class-boxcontainer-theme-constant-separation"></target>
            <paragraph classes="classref-themeproperty" ids="class-boxcontainer-theme-constant-separation" names="class_boxcontainer_theme_constant_separation"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>separation</strong> = <literal>4</literal></paragraph>
            <paragraph><strong>BoxContainer</strong> 元素之间的距离，单位为像素。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，所以可以直接使用类名调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_sprite3d.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/Sprite3D.xml.</comment>
    <target refid="class-sprite3d"></target>
    <section ids="sprite3d class-sprite3d" names="sprite3d class_sprite3d">
        <title>Sprite3D</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_spritebase3d#class-spritebase3d"><inline classes="std std-ref">SpriteBase3D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_geometryinstance3d#class-geometryinstance3d"><inline classes="std std-ref">GeometryInstance3D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_visualinstance3d#class-visualinstance3d"><inline classes="std std-ref">VisualInstance3D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node3d#class-node3d"><inline classes="std std-ref">Node3D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>3D 世界中的 2D 精灵节点。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>在 3D 环境中显示 2D 纹理的节点。显示的纹理可以是来自较大图集纹理的区域，也可以是来自精灵表动画的帧。另见 <reference internal="True" refuri="class_spritebase3d#class-spritebase3d"><inline classes="std std-ref">SpriteBase3D</inline></reference>，定义有公告板模式等属性。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="35"></colspec>
                    <colspec colwidth="63"></colspec>
                    <colspec colwidth="23"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-sprite3d-property-frame"><inline classes="std std-ref">frame</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-sprite3d-property-frame-coords"><inline classes="std std-ref">frame_coords</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Vector2i(0, 0)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-sprite3d-property-hframes"><inline classes="std std-ref">hframes</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-sprite3d-property-region-enabled"><inline classes="std std-ref">region_enabled</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rect2#class-rect2"><inline classes="std std-ref">Rect2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-sprite3d-property-region-rect"><inline classes="std std-ref">region_rect</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Rect2(0, 0, 0, 0)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-sprite3d-property-texture"><inline classes="std std-ref">texture</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-sprite3d-property-vframes"><inline classes="std std-ref">vframes</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="信号">
            <title>信号</title>
            <target refid="class-sprite3d-signal-frame-changed"></target>
            <paragraph classes="classref-signal" ids="class-sprite3d-signal-frame-changed" names="class_sprite3d_signal_frame_changed"><strong>frame_changed</strong>() <reference internal="True" refid="class-sprite3d-signal-frame-changed"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当 <reference internal="True" refid="class-sprite3d-property-frame"><inline classes="std std-ref">frame</inline></reference> 更改时发出。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-sprite3d-signal-texture-changed"></target>
            <paragraph classes="classref-signal" ids="class-sprite3d-signal-texture-changed" names="class_sprite3d_signal_texture_changed"><strong>texture_changed</strong>() <reference internal="True" refid="class-sprite3d-signal-texture-changed"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当 <reference internal="True" refid="class-sprite3d-property-texture"><inline classes="std std-ref">texture</inline></reference> 更改时发出。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="属性说明">
            <title>属性说明</title>
            <target refid="class-sprite3d-property-frame"></target>
            <paragraph classes="classref-property" ids="class-sprite3d-property-frame" names="class_sprite3d_property_frame"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>frame</strong> = <literal>0</literal> <reference internal="True" refid="class-sprite3d-property-frame"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_frame</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_frame</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>当前显示的精灵表中的帧。<reference internal="True" refid="class-sprite3d-property-hframes"><inline classes="std std-ref">hframes</inline></reference> 和 <reference internal="True" refid="class-sprite3d-property-vframes"><inline classes="std std-ref">vframes</inline></reference> 必须大于 1。<reference internal="True" refid="class-sprite3d-property-hframes"><inline classes="std std-ref">hframes</inline></reference> 或 <reference internal="True" refid="class-sprite3d-property-vframes"><inline classes="std std-ref">vframes</inline></reference> 发生变化时会自动调整该属性，让它在视觉上保持指向同一帧（同一行、同一列）。 如果无法保持，则会重置为 <literal>0</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-sprite3d-property-frame-coords"></target>
            <paragraph classes="classref-property" ids="class-sprite3d-property-frame-coords" names="class_sprite3d_property_frame_coords"><reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> <strong>frame_coords</strong> = <literal>Vector2i(0, 0)</literal> <reference internal="True" refid="class-sprite3d-property-frame-coords"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_frame_coords</strong>(value: <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> <strong>get_frame_coords</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>显示的帧在精灵表中的坐标。这是 <reference internal="True" refid="class-sprite3d-property-frame"><inline classes="std std-ref">frame</inline></reference> 属性的别名。<reference internal="True" refid="class-sprite3d-property-vframes"><inline classes="std std-ref">vframes</inline></reference> 或 <reference internal="True" refid="class-sprite3d-property-hframes"><inline classes="std std-ref">hframes</inline></reference> 必须大于 1。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-sprite3d-property-hframes"></target>
            <paragraph classes="classref-property" ids="class-sprite3d-property-hframes" names="class_sprite3d_property_hframes"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>hframes</strong> = <literal>1</literal> <reference internal="True" refid="class-sprite3d-property-hframes"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_hframes</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_hframes</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>精灵表中的列数。该属性发生变化时会对 <reference internal="True" refid="class-sprite3d-property-frame"><inline classes="std std-ref">frame</inline></reference> 进行调整，在视觉上维持相同的帧（同一行、同一列）。如果无法维持，则会将 <reference internal="True" refid="class-sprite3d-property-frame"><inline classes="std std-ref">frame</inline></reference> 重置为 <literal>0</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-sprite3d-property-region-enabled"></target>
            <paragraph classes="classref-property" ids="class-sprite3d-property-region-enabled" names="class_sprite3d_property_region_enabled"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>region_enabled</strong> = <literal>false</literal> <reference internal="True" refid="class-sprite3d-property-region-enabled"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_region_enabled</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_region_enabled</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则该精灵会使用 <reference internal="True" refid="class-sprite3d-property-region-rect"><inline classes="std std-ref">region_rect</inline></reference>，只显示纹理中的指定部分。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-sprite3d-property-region-rect"></target>
            <paragraph classes="classref-property" ids="class-sprite3d-property-region-rect" names="class_sprite3d_property_region_rect"><reference internal="True" refuri="class_rect2#class-rect2"><inline classes="std std-ref">Rect2</inline></reference> <strong>region_rect</strong> = <literal>Rect2(0, 0, 0, 0)</literal> <reference internal="True" refid="class-sprite3d-property-region-rect"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_region_rect</strong>(value: <reference internal="True" refuri="class_rect2#class-rect2"><inline classes="std std-ref">Rect2</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_rect2#class-rect2"><inline classes="std std-ref">Rect2</inline></reference> <strong>get_region_rect</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>要显示的图集纹理区域。<reference internal="True" refid="class-sprite3d-property-region-enabled"><inline classes="std std-ref">region_enabled</inline></reference> 必须是 <literal>true</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-sprite3d-property-texture"></target>
            <paragraph classes="classref-property" ids="class-sprite3d-property-texture" names="class_sprite3d_property_texture"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>texture</strong> <reference internal="True" refid="class-sprite3d-property-texture"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_texture</strong>(value: <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>get_texture</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>要绘制的 <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> 对象。如果使用 <reference internal="True" refuri="class_geometryinstance3d#class-geometryinstance3d-property-material-override"><inline classes="std std-ref">GeometryInstance3D.material_override</inline></reference>，则这个属性会被覆盖。仍会使用尺寸信息。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-sprite3d-property-vframes"></target>
            <paragraph classes="classref-property" ids="class-sprite3d-property-vframes" names="class_sprite3d_property_vframes"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>vframes</strong> = <literal>1</literal> <reference internal="True" refid="class-sprite3d-property-vframes"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_vframes</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_vframes</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>精灵表中的行数。该属性发生变化时会对 <reference internal="True" refid="class-sprite3d-property-frame"><inline classes="std std-ref">frame</inline></reference> 进行调整，在视觉上维持相同的帧（同一行、同一列）。如果无法维持，则会将 <reference internal="True" refid="class-sprite3d-property-frame"><inline classes="std std-ref">frame</inline></reference> 重置为 <literal>0</literal>。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

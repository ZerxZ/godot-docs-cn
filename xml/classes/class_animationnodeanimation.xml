<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_animationnodeanimation.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/AnimationNodeAnimation.xml.</comment>
    <target refid="class-animationnodeanimation"></target>
    <section ids="animationnodeanimation class-animationnodeanimation" names="animationnodeanimation class_animationnodeanimation">
        <title>AnimationNodeAnimation</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_animationrootnode#class-animationrootnode"><inline classes="std std-ref">AnimationRootNode</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_animationnode#class-animationnode"><inline classes="std std-ref">AnimationNode</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph><reference internal="True" refuri="class_animationnodeblendtree#class-animationnodeblendtree"><inline classes="std std-ref">AnimationNodeBlendTree</inline></reference> 的输入动画。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>一种添加到 <reference internal="True" refuri="class_animationnodeblendtree#class-animationnodeblendtree"><inline classes="std std-ref">AnimationNodeBlendTree</inline></reference> 的资源。只有一个输出端口，使用的是 <reference internal="True" refid="class-animationnodeanimation-property-animation"><inline classes="std std-ref">animation</inline></reference> 属性。可用作 <reference internal="True" refuri="class_animationnode#class-animationnode"><inline classes="std std-ref">AnimationNode</inline></reference> 的输入，将动画混合在一起。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference internal="True" refuri="../tutorials/animation/animation_tree"><inline classes="doc">使用 AnimationTree</inline></reference></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference name="3D 平台跳跃演示" refuri="https://godotengine.org/asset-library/asset/2748">3D 平台跳跃演示</reference></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference name="第三人称射击（TPS）演示" refuri="https://godotengine.org/asset-library/asset/2710">第三人称射击（TPS）演示</reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="55"></colspec>
                    <colspec colwidth="87"></colspec>
                    <colspec colwidth="11"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-animationnodeanimation-property-animation"><inline classes="std std-ref">animation</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>&amp;""</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_animation#enum-animation-loopmode"><inline classes="std std-ref">LoopMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-animationnodeanimation-property-loop-mode"><inline classes="std std-ref">loop_mode</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-animationnodeanimation-playmode"><inline classes="std std-ref">PlayMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-animationnodeanimation-property-play-mode"><inline classes="std std-ref">play_mode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-animationnodeanimation-property-start-offset"><inline classes="std std-ref">start_offset</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-animationnodeanimation-property-stretch-time-scale"><inline classes="std std-ref">stretch_time_scale</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-animationnodeanimation-property-timeline-length"><inline classes="std std-ref">timeline_length</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-animationnodeanimation-property-use-custom-timeline"><inline classes="std std-ref">use_custom_timeline</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="枚举">
            <title>枚举</title>
            <target refid="enum-animationnodeanimation-playmode"></target>
            <paragraph classes="classref-enumeration" ids="enum-animationnodeanimation-playmode" names="enum_animationnodeanimation_playmode">enum <strong>PlayMode</strong>: <reference internal="True" refid="enum-animationnodeanimation-playmode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-animationnodeanimation-constant-play-mode-forward"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-animationnodeanimation-constant-play-mode-forward" names="class_animationnodeanimation_constant_play_mode_forward"><reference internal="True" refid="enum-animationnodeanimation-playmode"><inline classes="std std-ref">PlayMode</inline></reference> <strong>PLAY_MODE_FORWARD</strong> = <literal>0</literal></paragraph>
            <paragraph>正序播放动画。</paragraph>
            <target refid="class-animationnodeanimation-constant-play-mode-backward"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-animationnodeanimation-constant-play-mode-backward" names="class_animationnodeanimation_constant_play_mode_backward"><reference internal="True" refid="enum-animationnodeanimation-playmode"><inline classes="std std-ref">PlayMode</inline></reference> <strong>PLAY_MODE_BACKWARD</strong> = <literal>1</literal></paragraph>
            <paragraph>逆序播放动画。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="属性说明">
            <title>属性说明</title>
            <target refid="class-animationnodeanimation-property-animation"></target>
            <paragraph classes="classref-property" ids="class-animationnodeanimation-property-animation" names="class_animationnodeanimation_property_animation"><reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference> <strong>animation</strong> = <literal>&amp;""</literal> <reference internal="True" refid="class-animationnodeanimation-property-animation"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_animation</strong>(value: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference> <strong>get_animation</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>作为输出使用的动画。它是 <reference internal="True" refuri="class_animationtree#class-animationtree-property-anim-player"><inline classes="std std-ref">AnimationTree.anim_player</inline></reference> 提供的动画之一。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-animationnodeanimation-property-loop-mode"></target>
            <paragraph classes="classref-property" ids="class-animationnodeanimation-property-loop-mode" names="class_animationnodeanimation_property_loop_mode"><reference internal="True" refuri="class_animation#enum-animation-loopmode"><inline classes="std std-ref">LoopMode</inline></reference> <strong>loop_mode</strong> <reference internal="True" refid="class-animationnodeanimation-property-loop-mode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_loop_mode</strong>(value: <reference internal="True" refuri="class_animation#enum-animation-loopmode"><inline classes="std std-ref">LoopMode</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_animation#enum-animation-loopmode"><inline classes="std std-ref">LoopMode</inline></reference> <strong>get_loop_mode</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果<reference internal="True" refid="class-animationnodeanimation-property-use-custom-timeline"><inline classes="std std-ref">use_custom_timeline</inline></reference>为<literal>true</literal>，则使用该值覆盖原始<reference internal="True" refuri="class_animation#class-animation"><inline classes="std std-ref">Animation</inline></reference>资源的循环设置。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-animationnodeanimation-property-play-mode"></target>
            <paragraph classes="classref-property" ids="class-animationnodeanimation-property-play-mode" names="class_animationnodeanimation_property_play_mode"><reference internal="True" refid="enum-animationnodeanimation-playmode"><inline classes="std std-ref">PlayMode</inline></reference> <strong>play_mode</strong> = <literal>0</literal> <reference internal="True" refid="class-animationnodeanimation-property-play-mode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_play_mode</strong>(value: <reference internal="True" refid="enum-animationnodeanimation-playmode"><inline classes="std std-ref">PlayMode</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-animationnodeanimation-playmode"><inline classes="std std-ref">PlayMode</inline></reference> <strong>get_play_mode</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>确定动画的播放方向。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-animationnodeanimation-property-start-offset"></target>
            <paragraph classes="classref-property" ids="class-animationnodeanimation-property-start-offset" names="class_animationnodeanimation_property_start_offset"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>start_offset</strong> <reference internal="True" refid="class-animationnodeanimation-property-start-offset"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_start_offset</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_start_offset</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果<reference internal="True" refid="class-animationnodeanimation-property-use-custom-timeline"><inline classes="std std-ref">use_custom_timeline</inline></reference>为<literal>true</literal>，则偏移动画的开始位置。</paragraph>
            <paragraph>这对于调整三维行走动画中最先迈出的脚步非常有用。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-animationnodeanimation-property-stretch-time-scale"></target>
            <paragraph classes="classref-property" ids="class-animationnodeanimation-property-stretch-time-scale" names="class_animationnodeanimation_property_stretch_time_scale"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>stretch_time_scale</strong> <reference internal="True" refid="class-animationnodeanimation-property-stretch-time-scale"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_stretch_time_scale</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_stretching_time_scale</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果<literal>true</literal>，则缩放时间，使<reference internal="True" refid="class-animationnodeanimation-property-timeline-length"><inline classes="std std-ref">timeline_length</inline></reference>中指定的长度为一个周期。</paragraph>
            <paragraph>这对于匹配行走和跑步动画的周期非常有用。</paragraph>
            <paragraph>如果<literal>false</literal>，则尊重原始动画长度。如果将循环设置为<reference internal="True" refid="class-animationnodeanimation-property-loop-mode"><inline classes="std std-ref">loop_mode</inline></reference>，动画将在<reference internal="True" refid="class-animationnodeanimation-property-timeline-length"><inline classes="std std-ref">timeline_length</inline></reference>中循环。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-animationnodeanimation-property-timeline-length"></target>
            <paragraph classes="classref-property" ids="class-animationnodeanimation-property-timeline-length" names="class_animationnodeanimation_property_timeline_length"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>timeline_length</strong> <reference internal="True" refid="class-animationnodeanimation-property-timeline-length"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_timeline_length</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_timeline_length</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果 <reference internal="True" refid="class-animationnodeanimation-property-use-custom-timeline"><inline classes="std std-ref">use_custom_timeline</inline></reference> 为 <literal>true</literal>，则会对动画的起始位置进行偏移。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-animationnodeanimation-property-use-custom-timeline"></target>
            <paragraph classes="classref-property" ids="class-animationnodeanimation-property-use-custom-timeline" names="class_animationnodeanimation_property_use_custom_timeline"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>use_custom_timeline</strong> = <literal>false</literal> <reference internal="True" refid="class-animationnodeanimation-property-use-custom-timeline"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_use_custom_timeline</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_using_custom_timeline</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则 <reference internal="True" refuri="class_animationnode#class-animationnode"><inline classes="std std-ref">AnimationNode</inline></reference> 会根据 <reference internal="True" refuri="class_animation#class-animation"><inline classes="std std-ref">Animation</inline></reference> 资源提供动画并调整部分参数。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

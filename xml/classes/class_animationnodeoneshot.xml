<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_animationnodeoneshot.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/AnimationNodeOneShot.xml.</comment>
    <target refid="class-animationnodeoneshot"></target>
    <section ids="animationnodeoneshot class-animationnodeoneshot" names="animationnodeoneshot class_animationnodeoneshot">
        <title>AnimationNodeOneShot</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_animationnodesync#class-animationnodesync"><inline classes="std std-ref">AnimationNodeSync</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_animationnode#class-animationnode"><inline classes="std std-ref">AnimationNode</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>在 <reference internal="True" refuri="class_animationnodeblendtree#class-animationnodeblendtree"><inline classes="std std-ref">AnimationNodeBlendTree</inline></reference> 中播放一次动画。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>添加到 <reference internal="True" refuri="class_animationnodeblendtree#class-animationnodeblendtree"><inline classes="std std-ref">AnimationNodeBlendTree</inline></reference> 的资源。这个动画节点将执行子动画并在完成后返回。可以自定义淡入和淡出的混合时间以及过滤器。</paragraph>
            <paragraph>在设置请求并更改动画播放后，一次性节点会在下一个处理帧中通过将其 <literal>request</literal> 值设置为 <reference internal="True" refid="class-animationnodeoneshot-constant-one-shot-request-none"><inline classes="std std-ref">ONE_SHOT_REQUEST_NONE</inline></reference> 来自动清除请求。</paragraph>
            <container classes="sphinx-tabs" type="tab-element">
                <div aria-label="Tabbed content" role="tablist">
                    <button aria-controls="panel-0-R0RTY3JpcHQ=" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-0-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tab" tabindex="0">GDScript</button>
                    <button aria-controls="panel-0-QyM=" aria-selected="false" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-0-QyM=" name="QyM=" role="tab" tabindex="-1">C#</button>
                </div>
                <div aria-labelledby="tab-0-R0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-0-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve"># 播放连接到 “shot” 端口的子动画。
animation_tree.set("parameters/OneShot/request", AnimationNodeOneShot.ONE_SHOT_REQUEST_FIRE)
# 替代语法（与上述结果相同）。
animation_tree["parameters/OneShot/request"] = AnimationNodeOneShot.ONE_SHOT_REQUEST_FIRE

# 中止连接到 “shot” 端口的子动画。
animation_tree.set("parameters/OneShot/request", AnimationNodeOneShot.ONE_SHOT_REQUEST_ABORT)
# 替代语法（与上述结果相同）。
animation_tree["parameters/OneShot/request"] = AnimationNodeOneShot.ONE_SHOT_REQUEST_FADE_OUT

# 使用淡出的方法中止连接到 “shot”端口的子动画。
animation_tree.set("parameters/OneShot/request", AnimationNodeOneShot.ONE_SHOT_REQUEST_FADE_OUT)
# 替代语法（与上述结果相同）。
animation_tree["parameters/OneShot/request"] = AnimationNodeOneShot.ONE_SHOT_REQUEST_FADE_OUT

# 获取当前状态（只读）。
animation_tree.get("parameters/OneShot/active"))
# 替代语法（与上述结果相同）。
animation_tree["parameters/OneShot/active"]

# 获取当前内部状态（只读）。
animation_tree.get("parameters/OneShot/internal_active")
# 替代语法（与上述结果相同）。
animation_tree["parameters/OneShot/internal_active"]</literal_block>
                </div>
                <div aria-labelledby="tab-0-QyM=" classes="sphinx-tabs-panel code-tab group-tab" hidden="true" ids="panel-0-QyM=" name="QyM=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="csharp" linenos="False" xml:space="preserve">// 播放连接到 “shot” 端口的子动画。
animationTree.Set("parameters/OneShot/request", (int)AnimationNodeOneShot.OneShotRequest.Fire);

// 中止连接到 “shot” 端口的子动画。
animationTree.Set("parameters/OneShot/request", (int)AnimationNodeOneShot.OneShotRequest.Abort);

// 使用淡出的方法中止连接到 “shot”端口的子动画。
animationTree.Set("parameters/OneShot/request", (int)AnimationNodeOneShot.OneShotRequest.FadeOut);

// 获取当前状态（只读）。
animationTree.Get("parameters/OneShot/active");

// 获取当前内部状态（只读）。
animationTree.Get("parameters/OneShot/internal_active");</literal_block>
                </div>
            </container>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference internal="True" refuri="../tutorials/animation/animation_tree"><inline classes="doc">使用 AnimationTree</inline></reference></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference name="第三人称射击演示" refuri="https://godotengine.org/asset-library/asset/678">第三人称射击演示</reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="51"></colspec>
                    <colspec colwidth="95"></colspec>
                    <colspec colwidth="11"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-animationnodeoneshot-property-autorestart"><inline classes="std std-ref">autorestart</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-animationnodeoneshot-property-autorestart-delay"><inline classes="std std-ref">autorestart_delay</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-animationnodeoneshot-property-autorestart-random-delay"><inline classes="std std-ref">autorestart_random_delay</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-animationnodeoneshot-property-fadein-curve"><inline classes="std std-ref">fadein_curve</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-animationnodeoneshot-property-fadein-time"><inline classes="std std-ref">fadein_time</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-animationnodeoneshot-property-fadeout-curve"><inline classes="std std-ref">fadeout_curve</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-animationnodeoneshot-property-fadeout-time"><inline classes="std std-ref">fadeout_time</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-animationnodeoneshot-mixmode"><inline classes="std std-ref">MixMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-animationnodeoneshot-property-mix-mode"><inline classes="std std-ref">mix_mode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="枚举">
            <title>枚举</title>
            <target refid="enum-animationnodeoneshot-oneshotrequest"></target>
            <paragraph classes="classref-enumeration" ids="enum-animationnodeoneshot-oneshotrequest" names="enum_animationnodeoneshot_oneshotrequest">enum <strong>OneShotRequest</strong>:</paragraph>
            <target refid="class-animationnodeoneshot-constant-one-shot-request-none"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-animationnodeoneshot-constant-one-shot-request-none" names="class_animationnodeoneshot_constant_one_shot_request_none"><reference internal="True" refid="enum-animationnodeoneshot-oneshotrequest"><inline classes="std std-ref">OneShotRequest</inline></reference> <strong>ONE_SHOT_REQUEST_NONE</strong> = <literal>0</literal></paragraph>
            <paragraph>请求的默认状态。未完成任何操作。</paragraph>
            <target refid="class-animationnodeoneshot-constant-one-shot-request-fire"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-animationnodeoneshot-constant-one-shot-request-fire" names="class_animationnodeoneshot_constant_one_shot_request_fire"><reference internal="True" refid="enum-animationnodeoneshot-oneshotrequest"><inline classes="std std-ref">OneShotRequest</inline></reference> <strong>ONE_SHOT_REQUEST_FIRE</strong> = <literal>1</literal></paragraph>
            <paragraph>播放连接到“shot”端口的动画的请求。</paragraph>
            <target refid="class-animationnodeoneshot-constant-one-shot-request-abort"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-animationnodeoneshot-constant-one-shot-request-abort" names="class_animationnodeoneshot_constant_one_shot_request_abort"><reference internal="True" refid="enum-animationnodeoneshot-oneshotrequest"><inline classes="std std-ref">OneShotRequest</inline></reference> <strong>ONE_SHOT_REQUEST_ABORT</strong> = <literal>2</literal></paragraph>
            <paragraph>停止连接到“shot”端口的动画的请求。</paragraph>
            <target refid="class-animationnodeoneshot-constant-one-shot-request-fade-out"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-animationnodeoneshot-constant-one-shot-request-fade-out" names="class_animationnodeoneshot_constant_one_shot_request_fade_out"><reference internal="True" refid="enum-animationnodeoneshot-oneshotrequest"><inline classes="std std-ref">OneShotRequest</inline></reference> <strong>ONE_SHOT_REQUEST_FADE_OUT</strong> = <literal>3</literal></paragraph>
            <paragraph>淡出连接到“shot”端口的动画的请求。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-animationnodeoneshot-mixmode"></target>
            <paragraph classes="classref-enumeration" ids="enum-animationnodeoneshot-mixmode" names="enum_animationnodeoneshot_mixmode">enum <strong>MixMode</strong>:</paragraph>
            <target refid="class-animationnodeoneshot-constant-mix-mode-blend"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-animationnodeoneshot-constant-mix-mode-blend" names="class_animationnodeoneshot_constant_mix_mode_blend"><reference internal="True" refid="enum-animationnodeoneshot-mixmode"><inline classes="std std-ref">MixMode</inline></reference> <strong>MIX_MODE_BLEND</strong> = <literal>0</literal></paragraph>
            <paragraph>混合两个动画。另请参见 <reference internal="True" refuri="class_animationnodeblend2#class-animationnodeblend2"><inline classes="std std-ref">AnimationNodeBlend2</inline></reference>。</paragraph>
            <target refid="class-animationnodeoneshot-constant-mix-mode-add"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-animationnodeoneshot-constant-mix-mode-add" names="class_animationnodeoneshot_constant_mix_mode_add"><reference internal="True" refid="enum-animationnodeoneshot-mixmode"><inline classes="std std-ref">MixMode</inline></reference> <strong>MIX_MODE_ADD</strong> = <literal>1</literal></paragraph>
            <paragraph>以相加方式混合两个动画。另请参阅 <reference internal="True" refuri="class_animationnodeadd2#class-animationnodeadd2"><inline classes="std std-ref">AnimationNodeAdd2</inline></reference>。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="属性说明">
            <title>属性说明</title>
            <target refid="class-animationnodeoneshot-property-autorestart"></target>
            <paragraph classes="classref-property" ids="class-animationnodeoneshot-property-autorestart" names="class_animationnodeoneshot_property_autorestart"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>autorestart</strong> = <literal>false</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_autorestart</strong> <strong>(</strong> <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>has_autorestart</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，子动画结束后会自动重新开始。</paragraph>
            <paragraph>换句话说，要开始自动重启，必须使用 <reference internal="True" refid="class-animationnodeoneshot-constant-one-shot-request-fire"><inline classes="std std-ref">ONE_SHOT_REQUEST_FIRE</inline></reference> 请求播放一次动画。<reference internal="True" refid="class-animationnodeoneshot-constant-one-shot-request-abort"><inline classes="std std-ref">ONE_SHOT_REQUEST_ABORT</inline></reference> 请求停止自动重启，但它不会禁用 <reference internal="True" refid="class-animationnodeoneshot-property-autorestart"><inline classes="std std-ref">autorestart</inline></reference> 本身。因此，<reference internal="True" refid="class-animationnodeoneshot-constant-one-shot-request-fire"><inline classes="std std-ref">ONE_SHOT_REQUEST_FIRE</inline></reference> 请求将再次开始自动重启。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-animationnodeoneshot-property-autorestart-delay"></target>
            <paragraph classes="classref-property" ids="class-animationnodeoneshot-property-autorestart-delay" names="class_animationnodeoneshot_property_autorestart_delay"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>autorestart_delay</strong> = <literal>1.0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_autorestart_delay</strong> <strong>(</strong> <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_autorestart_delay</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>触发自动重启的延迟时间，以秒为单位。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-animationnodeoneshot-property-autorestart-random-delay"></target>
            <paragraph classes="classref-property" ids="class-animationnodeoneshot-property-autorestart-random-delay" names="class_animationnodeoneshot_property_autorestart_random_delay"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>autorestart_random_delay</strong> = <literal>0.0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_autorestart_random_delay</strong> <strong>(</strong> <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_autorestart_random_delay</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果 <reference internal="True" refid="class-animationnodeoneshot-property-autorestart"><inline classes="std std-ref">autorestart</inline></reference> 为 <literal>true</literal>，则介于0和此值之间的随机附加延迟（以秒为单位）将添加到 <reference internal="True" refid="class-animationnodeoneshot-property-autorestart-delay"><inline classes="std std-ref">autorestart_delay</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-animationnodeoneshot-property-fadein-curve"></target>
            <paragraph classes="classref-property" ids="class-animationnodeoneshot-property-fadein-curve" names="class_animationnodeoneshot_property_fadein_curve"><reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference> <strong>fadein_curve</strong></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_fadein_curve</strong> <strong>(</strong> <reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference> <strong>get_fadein_curve</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>确定如何缓动动画之间的淡入淡出。如果为空，过渡将是线性的。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-animationnodeoneshot-property-fadein-time"></target>
            <paragraph classes="classref-property" ids="class-animationnodeoneshot-property-fadein-time" names="class_animationnodeoneshot_property_fadein_time"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>fadein_time</strong> = <literal>0.0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_fadein_time</strong> <strong>(</strong> <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_fadein_time</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>淡入持续时间。例如，将此属性设置为 <literal>1.0</literal>，对于 5 秒长的动画，将在动画期间产生从 0 秒开始到 1 秒结束的交叉淡入淡出。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-animationnodeoneshot-property-fadeout-curve"></target>
            <paragraph classes="classref-property" ids="class-animationnodeoneshot-property-fadeout-curve" names="class_animationnodeoneshot_property_fadeout_curve"><reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference> <strong>fadeout_curve</strong></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_fadeout_curve</strong> <strong>(</strong> <reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference> <strong>get_fadeout_curve</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>确定如何缓动动画之间的淡入淡出。如果为空，过渡将是线性的。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-animationnodeoneshot-property-fadeout-time"></target>
            <paragraph classes="classref-property" ids="class-animationnodeoneshot-property-fadeout-time" names="class_animationnodeoneshot_property_fadeout_time"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>fadeout_time</strong> = <literal>0.0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_fadeout_time</strong> <strong>(</strong> <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_fadeout_time</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>淡出持续时间。例如，将此属性设置为 <literal>1.0</literal>，对于 5 秒长的动画，将产生从 4 秒开始到 5 秒结束的交叉淡入淡出。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-animationnodeoneshot-property-mix-mode"></target>
            <paragraph classes="classref-property" ids="class-animationnodeoneshot-property-mix-mode" names="class_animationnodeoneshot_property_mix_mode"><reference internal="True" refid="enum-animationnodeoneshot-mixmode"><inline classes="std std-ref">MixMode</inline></reference> <strong>mix_mode</strong> = <literal>0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_mix_mode</strong> <strong>(</strong> <reference internal="True" refid="enum-animationnodeoneshot-mixmode"><inline classes="std std-ref">MixMode</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-animationnodeoneshot-mixmode"><inline classes="std std-ref">MixMode</inline></reference> <strong>get_mix_mode</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>混合类型。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，所以可以直接使用类名调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

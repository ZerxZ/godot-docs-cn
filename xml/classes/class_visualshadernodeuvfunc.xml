<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_visualshadernodeuvfunc.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/VisualShaderNodeUVFunc.xml.</comment>
    <target refid="class-visualshadernodeuvfunc"></target>
    <section ids="visualshadernodeuvfunc class-visualshadernodeuvfunc" names="visualshadernodeuvfunc class_visualshadernodeuvfunc">
        <title>VisualShaderNodeUVFunc</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_visualshadernode#class-visualshadernode"><inline classes="std std-ref">VisualShaderNode</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>包含一些用于修改纹理坐标（<literal>uv</literal>）的函数，在可视化着色器图中使用。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>UV 函数与 <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> 函数类似，但这个节点的输入端口默认使用着色器的 UV 值。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="55"></colspec>
                    <colspec colwidth="65"></colspec>
                    <colspec colwidth="7"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-visualshadernodeuvfunc-function"><inline classes="std std-ref">Function</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-visualshadernodeuvfunc-property-function"><inline classes="std std-ref">function</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="枚举">
            <title>枚举</title>
            <target refid="enum-visualshadernodeuvfunc-function"></target>
            <paragraph classes="classref-enumeration" ids="enum-visualshadernodeuvfunc-function" names="enum_visualshadernodeuvfunc_function">enum <strong>Function</strong>:</paragraph>
            <target refid="class-visualshadernodeuvfunc-constant-func-panning"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-visualshadernodeuvfunc-constant-func-panning" names="class_visualshadernodeuvfunc_constant_func_panning"><reference internal="True" refid="enum-visualshadernodeuvfunc-function"><inline classes="std std-ref">Function</inline></reference> <strong>FUNC_PANNING</strong> = <literal>0</literal></paragraph>
            <paragraph>使用 <literal>scale</literal> 和 <literal>offset</literal> 值对 <literal>uv</literal> 进行平移，使用的公式如下：<literal>uv = uv + offset * scale</literal>。<literal>uv</literal> 端口默认连接至内置的 <literal>UV</literal>。</paragraph>
            <target refid="class-visualshadernodeuvfunc-constant-func-scaling"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-visualshadernodeuvfunc-constant-func-scaling" names="class_visualshadernodeuvfunc_constant_func_scaling"><reference internal="True" refid="enum-visualshadernodeuvfunc-function"><inline classes="std std-ref">Function</inline></reference> <strong>FUNC_SCALING</strong> = <literal>1</literal></paragraph>
            <paragraph>使用 <literal>scale</literal> 和 <literal>pivot</literal> 值对 <literal>uv</literal> 进行缩放，使用的公式如下：<literal>uv = (uv - pivot) * scale + pivot</literal>。<literal>uv</literal> 端口默认连接至内置的 <literal>UV</literal>。</paragraph>
            <target refid="class-visualshadernodeuvfunc-constant-func-max"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-visualshadernodeuvfunc-constant-func-max" names="class_visualshadernodeuvfunc_constant_func_max"><reference internal="True" refid="enum-visualshadernodeuvfunc-function"><inline classes="std std-ref">Function</inline></reference> <strong>FUNC_MAX</strong> = <literal>2</literal></paragraph>
            <paragraph>代表 <reference internal="True" refid="enum-visualshadernodeuvfunc-function"><inline classes="std std-ref">Function</inline></reference> 枚举的大小。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="属性说明">
            <title>属性说明</title>
            <target refid="class-visualshadernodeuvfunc-property-function"></target>
            <paragraph classes="classref-property" ids="class-visualshadernodeuvfunc-property-function" names="class_visualshadernodeuvfunc_property_function"><reference internal="True" refid="enum-visualshadernodeuvfunc-function"><inline classes="std std-ref">Function</inline></reference> <strong>function</strong> = <literal>0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_function</strong> <strong>(</strong> <reference internal="True" refid="enum-visualshadernodeuvfunc-function"><inline classes="std std-ref">Function</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-visualshadernodeuvfunc-function"><inline classes="std std-ref">Function</inline></reference> <strong>get_function</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>要对纹理坐标应用的函数。选项见 <reference internal="True" refid="enum-visualshadernodeuvfunc-function"><inline classes="std std-ref">Function</inline></reference>。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，所以可以直接使用类名调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

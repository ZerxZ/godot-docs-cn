<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_csgmesh3d.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/4.2/modules/csg/doc_classes/CSGMesh3D.xml.</comment>
    <target refid="class-csgmesh3d"></target>
    <section ids="csgmesh3d class-csgmesh3d" names="csgmesh3d class_csgmesh3d">
        <title>CSGMesh3D</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_csgprimitive3d#class-csgprimitive3d"><inline classes="std std-ref">CSGPrimitive3D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_csgshape3d#class-csgshape3d"><inline classes="std std-ref">CSGShape3D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_geometryinstance3d#class-geometryinstance3d"><inline classes="std std-ref">GeometryInstance3D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_visualinstance3d#class-visualinstance3d"><inline classes="std std-ref">VisualInstance3D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node3d#class-node3d"><inline classes="std std-ref">Node3D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>使用网格资源的 CSG 网格形状。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>此 CSG 节点允许你将任何网格资源用作 CSG 形状，前提是它是闭合的、不自相交、不包含内部面并且没有连接到两个面以上的边。 另请参阅 <reference internal="True" refuri="class_csgpolygon3d#class-csgpolygon3d"><inline classes="std std-ref">CSGPolygon3D</inline></reference>，以绘制 2D 挤出多边形以用作 CSG 节点。</paragraph>
            <paragraph><strong>注意：</strong>CSG 节点旨在用于关卡原型设计。与使用 <reference internal="True" refuri="class_primitivemesh#class-primitivemesh"><inline classes="std std-ref">PrimitiveMesh</inline></reference> 创建 <reference internal="True" refuri="class_meshinstance3d#class-meshinstance3d"><inline classes="std std-ref">MeshInstance3D</inline></reference> 相比，创建 CSG 节点具有显着的 CPU 成本。在另一个 CSG 节点中，移动一个 CSG 节点，也会大量消耗 CPU，因此在游戏过程中，应该避免这种情况。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference internal="True" refuri="../tutorials/3d/csg_tools"><inline classes="doc">使用 CSG 设计关卡原型</inline></reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="33"></colspec>
                    <colspec colwidth="52"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_material#class-material"><inline classes="std std-ref">Material</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-csgmesh3d-property-material"><inline classes="std std-ref">material</inline></reference></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_mesh#class-mesh"><inline classes="std std-ref">Mesh</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-csgmesh3d-property-mesh"><inline classes="std std-ref">mesh</inline></reference></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="属性说明">
            <title>属性说明</title>
            <target refid="class-csgmesh3d-property-material"></target>
            <paragraph classes="classref-property" ids="class-csgmesh3d-property-material" names="class_csgmesh3d_property_material"><reference internal="True" refuri="class_material#class-material"><inline classes="std std-ref">Material</inline></reference> <strong>material</strong></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_material</strong> <strong>(</strong> <reference internal="True" refuri="class_material#class-material"><inline classes="std std-ref">Material</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_material#class-material"><inline classes="std std-ref">Material</inline></reference> <strong>get_material</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>用于绘制 CSG 形状的 <reference internal="True" refuri="class_material#class-material"><inline classes="std std-ref">Material</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-csgmesh3d-property-mesh"></target>
            <paragraph classes="classref-property" ids="class-csgmesh3d-property-mesh" names="class_csgmesh3d_property_mesh"><reference internal="True" refuri="class_mesh#class-mesh"><inline classes="std std-ref">Mesh</inline></reference> <strong>mesh</strong></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_mesh</strong> <strong>(</strong> <reference internal="True" refuri="class_mesh#class-mesh"><inline classes="std std-ref">Mesh</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_mesh#class-mesh"><inline classes="std std-ref">Mesh</inline></reference> <strong>get_mesh</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>用作 CSG 形状的 <reference internal="True" refuri="class_mesh#class-mesh"><inline classes="std std-ref">Mesh</inline></reference> 资源。</paragraph>
            <paragraph><strong>注意：</strong>使用 <reference internal="True" refuri="class_arraymesh#class-arraymesh"><inline classes="std std-ref">ArrayMesh</inline></reference> 时，除 <reference internal="True" refuri="class_mesh#class-mesh-constant-array-vertex"><inline classes="std std-ref">Mesh.ARRAY_VERTEX</inline></reference>、<reference internal="True" refuri="class_mesh#class-mesh-constant-array-normal"><inline classes="std std-ref">Mesh.ARRAY_NORMAL</inline></reference> 和 <reference internal="True" refuri="class_mesh#class-mesh-constant-array-tex-uv"><inline classes="std std-ref">Mesh.ARRAY_TEX_UV</inline></reference> 之外的所有顶点属性均保持未被使用的状态。只有 <reference internal="True" refuri="class_mesh#class-mesh-constant-array-vertex"><inline classes="std std-ref">Mesh.ARRAY_VERTEX</inline></reference> 和 <reference internal="True" refuri="class_mesh#class-mesh-constant-array-tex-uv"><inline classes="std std-ref">Mesh.ARRAY_TEX_UV</inline></reference> 会被传递到 GPU。</paragraph>
            <paragraph><reference internal="True" refuri="class_mesh#class-mesh-constant-array-normal"><inline classes="std std-ref">Mesh.ARRAY_NORMAL</inline></reference> 仅被用于确定哪些面需要使用平直着色。默认情况下，CSGMesh 将忽略该网格的顶点法线，为每个顶点重新计算它们并使用一个平滑着色器。如果面需要平直着色器，请确保面的所有顶点法线大致相等。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，所以可以直接使用类名调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

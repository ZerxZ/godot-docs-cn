<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_graphframe.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/GraphFrame.xml.</comment>
    <target refid="class-graphframe"></target>
    <section ids="graphframe class-graphframe" names="graphframe class_graphframe">
        <title>GraphFrame</title>
        <paragraph><strong>实验性：</strong> This class may be changed or removed in future versions.</paragraph>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_graphelement#class-graphelement"><inline classes="std std-ref">GraphElement</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_container#class-container"><inline classes="std std-ref">Container</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_control#class-control"><inline classes="std std-ref">Control</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_canvasitem#class-canvasitem"><inline classes="std std-ref">CanvasItem</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>GraphFrame 是一种特殊的 <reference internal="True" refuri="class_graphelement#class-graphelement"><inline classes="std std-ref">GraphElement</inline></reference>，可用于组织 <reference internal="True" refuri="class_graphedit#class-graphedit"><inline classes="std std-ref">GraphEdit</inline></reference> 中的其他 <reference internal="True" refuri="class_graphelement#class-graphelement"><inline classes="std std-ref">GraphElement</inline></reference>。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>GraphFrame is a special <reference internal="True" refuri="class_graphelement#class-graphelement"><inline classes="std std-ref">GraphElement</inline></reference> to which other <reference internal="True" refuri="class_graphelement#class-graphelement"><inline classes="std std-ref">GraphElement</inline></reference>s can be attached. It can be configured to automatically resize to enclose all attached <reference internal="True" refuri="class_graphelement#class-graphelement"><inline classes="std std-ref">GraphElement</inline></reference>s. If the frame is moved, all the attached <reference internal="True" refuri="class_graphelement#class-graphelement"><inline classes="std std-ref">GraphElement</inline></reference>s inside it will be moved as well.</paragraph>
            <paragraph>A GraphFrame is always kept behind the connection layer and other <reference internal="True" refuri="class_graphelement#class-graphelement"><inline classes="std std-ref">GraphElement</inline></reference>s inside a <reference internal="True" refuri="class_graphedit#class-graphedit"><inline classes="std std-ref">GraphEdit</inline></reference>.</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="46"></colspec>
                    <colspec colwidth="73"></colspec>
                    <colspec colwidth="71"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-graphframe-property-autoshrink-enabled"><inline classes="std std-ref">autoshrink_enabled</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-graphframe-property-autoshrink-margin"><inline classes="std std-ref">autoshrink_margin</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>40</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-graphframe-property-drag-margin"><inline classes="std std-ref">drag_margin</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>16</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_control#enum-control-mousefilter"><inline classes="std std-ref">MouseFilter</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph>mouse_filter</paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal> (overrides <reference internal="True" refuri="class_control#class-control-property-mouse-filter"><inline classes="std std-ref">Control</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-graphframe-property-tint-color"><inline classes="std std-ref">tint_color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Color(0.3, 0.3, 0.3, 0.75)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-graphframe-property-tint-color-enabled"><inline classes="std std-ref">tint_color_enabled</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-graphframe-property-title"><inline classes="std std-ref">title</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>""</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="43"></colspec>
                    <colspec colwidth="75"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_hboxcontainer#class-hboxcontainer"><inline classes="std std-ref">HBoxContainer</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-graphframe-method-get-titlebar-hbox"><inline classes="std std-ref">get_titlebar_hbox</inline></reference>()</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id4" names="主题属性">
            <title>主题属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="33"></colspec>
                    <colspec colwidth="74"></colspec>
                    <colspec colwidth="35"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-graphframe-theme-color-resizer-color"><inline classes="std std-ref">resizer_color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Color(0.875, 0.875, 0.875, 1)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-graphframe-theme-style-panel"><inline classes="std std-ref">panel</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-graphframe-theme-style-panel-selected"><inline classes="std std-ref">panel_selected</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-graphframe-theme-style-titlebar"><inline classes="std std-ref">titlebar</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-graphframe-theme-style-titlebar-selected"><inline classes="std std-ref">titlebar_selected</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="信号">
            <title>信号</title>
            <target refid="class-graphframe-signal-autoshrink-changed"></target>
            <paragraph classes="classref-signal" ids="class-graphframe-signal-autoshrink-changed" names="class_graphframe_signal_autoshrink_changed"><strong>autoshrink_changed</strong>() <reference internal="True" refid="class-graphframe-signal-autoshrink-changed"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>更改 <reference internal="True" refid="class-graphframe-property-autoshrink-enabled"><inline classes="std std-ref">autoshrink_enabled</inline></reference> 或 <reference internal="True" refid="class-graphframe-property-autoshrink-margin"><inline classes="std std-ref">autoshrink_margin</inline></reference> 时发出。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="属性说明">
            <title>属性说明</title>
            <target refid="class-graphframe-property-autoshrink-enabled"></target>
            <paragraph classes="classref-property" ids="class-graphframe-property-autoshrink-enabled" names="class_graphframe_property_autoshrink_enabled"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>autoshrink_enabled</strong> = <literal>true</literal> <reference internal="True" refid="class-graphframe-property-autoshrink-enabled"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_autoshrink_enabled</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_autoshrink_enabled</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>If <literal>true</literal>, the frame's rect will be adjusted automatically to enclose all attached <reference internal="True" refuri="class_graphelement#class-graphelement"><inline classes="std std-ref">GraphElement</inline></reference>s.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-graphframe-property-autoshrink-margin"></target>
            <paragraph classes="classref-property" ids="class-graphframe-property-autoshrink-margin" names="class_graphframe_property_autoshrink_margin"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>autoshrink_margin</strong> = <literal>40</literal> <reference internal="True" refid="class-graphframe-property-autoshrink-margin"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_autoshrink_margin</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_autoshrink_margin</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>The margin around the attached nodes that is used to calculate the size of the frame when <reference internal="True" refid="class-graphframe-property-autoshrink-enabled"><inline classes="std std-ref">autoshrink_enabled</inline></reference> is <literal>true</literal>.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-graphframe-property-drag-margin"></target>
            <paragraph classes="classref-property" ids="class-graphframe-property-drag-margin" names="class_graphframe_property_drag_margin"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>drag_margin</strong> = <literal>16</literal> <reference internal="True" refid="class-graphframe-property-drag-margin"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_drag_margin</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_drag_margin</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>框架的内部边距，可用于拖拽该框架。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-graphframe-property-tint-color"></target>
            <paragraph classes="classref-property" ids="class-graphframe-property-tint-color" names="class_graphframe_property_tint_color"><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>tint_color</strong> = <literal>Color(0.3, 0.3, 0.3, 0.75)</literal> <reference internal="True" refid="class-graphframe-property-tint-color"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_tint_color</strong>(value: <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>get_tint_color</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>框架在 <reference internal="True" refid="class-graphframe-property-tint-color-enabled"><inline classes="std std-ref">tint_color_enabled</inline></reference> 为 <literal>true</literal> 时的颜色。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-graphframe-property-tint-color-enabled"></target>
            <paragraph classes="classref-property" ids="class-graphframe-property-tint-color-enabled" names="class_graphframe_property_tint_color_enabled"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>tint_color_enabled</strong> = <literal>false</literal> <reference internal="True" refid="class-graphframe-property-tint-color-enabled"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_tint_color_enabled</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_tint_color_enabled</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则会使用着色颜色着色框架。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-graphframe-property-title"></target>
            <paragraph classes="classref-property" ids="class-graphframe-property-title" names="class_graphframe_property_title"><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>title</strong> = <literal>""</literal> <reference internal="True" refid="class-graphframe-property-title"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_title</strong>(value: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>get_title</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>框架的标题。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id7" names="方法说明">
            <title>方法说明</title>
            <target refid="class-graphframe-method-get-titlebar-hbox"></target>
            <paragraph classes="classref-method" ids="class-graphframe-method-get-titlebar-hbox" names="class_graphframe_method_get_titlebar_hbox"><reference internal="True" refuri="class_hboxcontainer#class-hboxcontainer"><inline classes="std std-ref">HBoxContainer</inline></reference> <strong>get_titlebar_hbox</strong>() <reference internal="True" refid="class-graphframe-method-get-titlebar-hbox"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回标题栏所使用的 <reference internal="True" refuri="class_hboxcontainer#class-hboxcontainer"><inline classes="std std-ref">HBoxContainer</inline></reference>，默认只包含一个 <reference internal="True" refuri="class_label#class-label"><inline classes="std std-ref">Label</inline></reference>，用于显示标题。</paragraph>
            <paragraph>可用于向标题栏添加自定义控件，例如选项和关闭按钮等。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id8" names="主题属性说明">
            <title>主题属性说明</title>
            <target refid="class-graphframe-theme-color-resizer-color"></target>
            <paragraph classes="classref-themeproperty" ids="class-graphframe-theme-color-resizer-color" names="class_graphframe_theme_color_resizer_color"><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>resizer_color</strong> = <literal>Color(0.875, 0.875, 0.875, 1)</literal> <reference internal="True" refid="class-graphframe-theme-color-resizer-color"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>应用于调整尺寸大小图标的颜色调制。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-graphframe-theme-style-panel"></target>
            <paragraph classes="classref-themeproperty" ids="class-graphframe-theme-style-panel" names="class_graphframe_theme_style_panel"><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference> <strong>panel</strong> <reference internal="True" refid="class-graphframe-theme-style-panel"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>用于该 <strong>GraphFrame</strong> 背景的默认 <reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-graphframe-theme-style-panel-selected"></target>
            <paragraph classes="classref-themeproperty" ids="class-graphframe-theme-style-panel-selected" names="class_graphframe_theme_style_panel_selected"><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference> <strong>panel_selected</strong> <reference internal="True" refid="class-graphframe-theme-style-panel-selected"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>The <reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference> used for the background of the <strong>GraphFrame</strong> when it is selected.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-graphframe-theme-style-titlebar"></target>
            <paragraph classes="classref-themeproperty" ids="class-graphframe-theme-style-titlebar" names="class_graphframe_theme_style_titlebar"><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference> <strong>titlebar</strong> <reference internal="True" refid="class-graphframe-theme-style-titlebar"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>The <reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference> used for the title bar of the <strong>GraphFrame</strong>.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-graphframe-theme-style-titlebar-selected"></target>
            <paragraph classes="classref-themeproperty" ids="class-graphframe-theme-style-titlebar-selected" names="class_graphframe_theme_style_titlebar_selected"><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference> <strong>titlebar_selected</strong> <reference internal="True" refid="class-graphframe-theme-style-titlebar-selected"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>The <reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference> used for the title bar of the <strong>GraphFrame</strong> when it is selected.</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

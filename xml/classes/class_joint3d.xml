<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_joint3d.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/Joint3D.xml.</comment>
    <target refid="class-joint3d"></target>
    <section ids="joint3d class-joint3d" names="joint3d class_joint3d">
        <title>Joint3D</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_node3d#class-node3d"><inline classes="std std-ref">Node3D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph><strong>派生：</strong> <reference internal="True" refuri="class_conetwistjoint3d#class-conetwistjoint3d"><inline classes="std std-ref">ConeTwistJoint3D</inline></reference>, <reference internal="True" refuri="class_generic6dofjoint3d#class-generic6dofjoint3d"><inline classes="std std-ref">Generic6DOFJoint3D</inline></reference>, <reference internal="True" refuri="class_hingejoint3d#class-hingejoint3d"><inline classes="std std-ref">HingeJoint3D</inline></reference>, <reference internal="True" refuri="class_pinjoint3d#class-pinjoint3d"><inline classes="std std-ref">PinJoint3D</inline></reference>, <reference internal="True" refuri="class_sliderjoint3d#class-sliderjoint3d"><inline classes="std std-ref">SliderJoint3D</inline></reference></paragraph>
        <paragraph>所有 3D 物理关节的抽象基类。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>3D 物理中所有关节的抽象基类。3D 关节将两个物理体（<reference internal="True" refid="class-joint3d-property-node-a"><inline classes="std std-ref">node_a</inline></reference> 和 <reference internal="True" refid="class-joint3d-property-node-b"><inline classes="std std-ref">node_b</inline></reference>）绑定在一起并应用约束。如果仅定义一个物体，则将其附加到固定的 <reference internal="True" refuri="class_staticbody3d#class-staticbody3d"><inline classes="std std-ref">StaticBody3D</inline></reference> 上，而没有碰撞形状。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference name="3D 货车镇演示" refuri="https://godotengine.org/asset-library/asset/2752">3D 货车镇演示</reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="33"></colspec>
                    <colspec colwidth="90"></colspec>
                    <colspec colwidth="18"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-joint3d-property-exclude-nodes-from-collision"><inline classes="std std-ref">exclude_nodes_from_collision</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-joint3d-property-node-a"><inline classes="std std-ref">node_a</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>NodePath("")</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-joint3d-property-node-b"><inline classes="std std-ref">node_b</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>NodePath("")</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-joint3d-property-solver-priority"><inline classes="std std-ref">solver_priority</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id4" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="23"></colspec>
                    <colspec colwidth="60"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-joint3d-method-get-rid"><inline classes="std std-ref">get_rid</inline></reference>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="属性说明">
            <title>属性说明</title>
            <target refid="class-joint3d-property-exclude-nodes-from-collision"></target>
            <paragraph classes="classref-property" ids="class-joint3d-property-exclude-nodes-from-collision" names="class_joint3d_property_exclude_nodes_from_collision"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>exclude_nodes_from_collision</strong> = <literal>true</literal> <reference internal="True" refid="class-joint3d-property-exclude-nodes-from-collision"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_exclude_nodes_from_collision</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_exclude_nodes_from_collision</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则绑定在一起的两个物体不会相互碰撞。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-joint3d-property-node-a"></target>
            <paragraph classes="classref-property" ids="class-joint3d-property-node-a" names="class_joint3d_property_node_a"><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> <strong>node_a</strong> = <literal>NodePath("")</literal> <reference internal="True" refid="class-joint3d-property-node-a"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_node_a</strong>(value: <reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> <strong>get_node_a</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>连接到关节的第一个节点（A）的路径。该节点必须继承自 <reference internal="True" refuri="class_physicsbody3d#class-physicsbody3d"><inline classes="std std-ref">PhysicsBody3D</inline></reference>。</paragraph>
            <paragraph>如果留空且设置了 <reference internal="True" refid="class-joint3d-property-node-b"><inline classes="std std-ref">node_b</inline></reference>，则该物体将连接到固定的 <reference internal="True" refuri="class_staticbody3d#class-staticbody3d"><inline classes="std std-ref">StaticBody3D</inline></reference>，且没有碰撞形状。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-joint3d-property-node-b"></target>
            <paragraph classes="classref-property" ids="class-joint3d-property-node-b" names="class_joint3d_property_node_b"><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> <strong>node_b</strong> = <literal>NodePath("")</literal> <reference internal="True" refid="class-joint3d-property-node-b"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_node_b</strong>(value: <reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> <strong>get_node_b</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>连接到关节的第二个节点（B）的路径。该节点必须继承自 <reference internal="True" refuri="class_physicsbody3d#class-physicsbody3d"><inline classes="std std-ref">PhysicsBody3D</inline></reference>。</paragraph>
            <paragraph>如果留空且设置了 <reference internal="True" refid="class-joint3d-property-node-a"><inline classes="std std-ref">node_a</inline></reference>，则该物体将连接到固定的 <reference internal="True" refuri="class_staticbody3d#class-staticbody3d"><inline classes="std std-ref">StaticBody3D</inline></reference>，且没有碰撞形状。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-joint3d-property-solver-priority"></target>
            <paragraph classes="classref-property" ids="class-joint3d-property-solver-priority" names="class_joint3d_property_solver_priority"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>solver_priority</strong> = <literal>1</literal> <reference internal="True" refid="class-joint3d-property-solver-priority"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_solver_priority</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_solver_priority</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>用于定义哪个解算器在多个关节中被首先执行的优先级。数值越低，优先级越高。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="方法说明">
            <title>方法说明</title>
            <target refid="class-joint3d-method-get-rid"></target>
            <paragraph classes="classref-method" ids="class-joint3d-method-get-rid" names="class_joint3d_method_get_rid"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>get_rid</strong>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-joint3d-method-get-rid"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>从 <reference internal="True" refuri="class_physicsserver3d#class-physicsserver3d"><inline classes="std std-ref">PhysicsServer3D</inline></reference> 返回关节的内部 <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效运算符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列位标志构成位掩码的整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

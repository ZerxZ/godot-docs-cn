<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_audioeffectcapture.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/AudioEffectCapture.xml.</comment>
    <target refid="class-audioeffectcapture"></target>
    <section ids="audioeffectcapture class-audioeffectcapture" names="audioeffectcapture class_audioeffectcapture">
        <title>AudioEffectCapture</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_audioeffect#class-audioeffect"><inline classes="std std-ref">AudioEffect</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>从音频总线上实时捕捉音频。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>AudioEffectCapture 是一种 AudioEffect，可将所有音频帧从附加的音频效果总线复制到其内部的环形缓冲区中。</paragraph>
            <paragraph>应用程序代码应使用 <reference internal="True" refid="class-audioeffectcapture-method-get-buffer"><inline classes="std std-ref">get_buffer</inline></reference> 从该环形缓冲区中消耗这些音频帧，并根据需要对其进行处理，例如从 <reference internal="True" refuri="class_audiostreammicrophone#class-audiostreammicrophone"><inline classes="std std-ref">AudioStreamMicrophone</inline></reference> 捕获数据，实现应用程序定义的效果，或通过网络传输音频。从麦克风捕获音频数据时，样本格式将为立体声 32 位浮点 PCM。</paragraph>
            <paragraph>与 <reference internal="True" refuri="class_audioeffectrecord#class-audioeffectrecord"><inline classes="std std-ref">AudioEffectRecord</inline></reference> 不同，该效果仅返回原始音频样本，而不是将它们编码到 <reference internal="True" refuri="class_audiostream#class-audiostream"><inline classes="std std-ref">AudioStream</inline></reference> 中。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference internal="True" refuri="../tutorials/audio/audio_buses"><inline classes="doc">音频总线</inline></reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="27"></colspec>
                    <colspec colwidth="71"></colspec>
                    <colspec colwidth="9"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audioeffectcapture-property-buffer-length"><inline classes="std std-ref">buffer_length</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.1</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id4" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="53"></colspec>
                    <colspec colwidth="117"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audioeffectcapture-method-can-get-buffer"><inline classes="std std-ref">can_get_buffer</inline></reference>(frames: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audioeffectcapture-method-clear-buffer"><inline classes="std std-ref">clear_buffer</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_packedvector2array#class-packedvector2array"><inline classes="std std-ref">PackedVector2Array</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audioeffectcapture-method-get-buffer"><inline classes="std std-ref">get_buffer</inline></reference>(frames: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audioeffectcapture-method-get-buffer-length-frames"><inline classes="std std-ref">get_buffer_length_frames</inline></reference>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audioeffectcapture-method-get-discarded-frames"><inline classes="std std-ref">get_discarded_frames</inline></reference>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audioeffectcapture-method-get-frames-available"><inline classes="std std-ref">get_frames_available</inline></reference>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audioeffectcapture-method-get-pushed-frames"><inline classes="std std-ref">get_pushed_frames</inline></reference>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="属性说明">
            <title>属性说明</title>
            <target refid="class-audioeffectcapture-property-buffer-length"></target>
            <paragraph classes="classref-property" ids="class-audioeffectcapture-property-buffer-length" names="class_audioeffectcapture_property_buffer_length"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>buffer_length</strong> = <literal>0.1</literal> <reference internal="True" refid="class-audioeffectcapture-property-buffer-length"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_buffer_length</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_buffer_length</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>内部环形缓冲区的长度，单位为秒。如果已经初始化，设置缓冲区长度将没有效果。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="方法说明">
            <title>方法说明</title>
            <target refid="class-audioeffectcapture-method-can-get-buffer"></target>
            <paragraph classes="classref-method" ids="class-audioeffectcapture-method-can-get-buffer" names="class_audioeffectcapture_method_can_get_buffer"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>can_get_buffer</strong>(frames: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-audioeffectcapture-method-can-get-buffer"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果内部环形缓冲区中至少有 <literal>frames</literal> 个音频帧可供读取，则返回 <literal>true</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audioeffectcapture-method-clear-buffer"></target>
            <paragraph classes="classref-method" ids="class-audioeffectcapture-method-clear-buffer" names="class_audioeffectcapture_method_clear_buffer"><abbreviation explanation="无返回值。">void</abbreviation> <strong>clear_buffer</strong>() <reference internal="True" refid="class-audioeffectcapture-method-clear-buffer"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>清空内部环形缓冲。</paragraph>
            <paragraph><strong>注意：</strong>捕获时调用这个方法可能造成样本的丢失，导致播放时产生噪音。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audioeffectcapture-method-get-buffer"></target>
            <paragraph classes="classref-method" ids="class-audioeffectcapture-method-get-buffer" names="class_audioeffectcapture_method_get_buffer"><reference internal="True" refuri="class_packedvector2array#class-packedvector2array"><inline classes="std std-ref">PackedVector2Array</inline></reference> <strong>get_buffer</strong>(frames: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-audioeffectcapture-method-get-buffer"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>从内部环形缓冲区获取后续 <literal>frames</literal> 个音频样本。</paragraph>
            <paragraph>如果足够的话，则返回一个恰好包含 <literal>frames</literal> 个音频样本的 <reference internal="True" refuri="class_packedvector2array#class-packedvector2array"><inline classes="std std-ref">PackedVector2Array</inline></reference>；如果可用数据不足，则返回一个空的 <reference internal="True" refuri="class_packedvector2array#class-packedvector2array"><inline classes="std std-ref">PackedVector2Array</inline></reference>。</paragraph>
            <paragraph>样本是有符号浮点 PCM，在 <literal>-1</literal> 和 <literal>1</literal> 之间。如果想要作为 8 位或 16 位整型样本使用则需要进行缩放。（<literal>v = 0x7fff * samples[0].x</literal>）</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audioeffectcapture-method-get-buffer-length-frames"></target>
            <paragraph classes="classref-method" ids="class-audioeffectcapture-method-get-buffer-length-frames" names="class_audioeffectcapture_method_get_buffer_length_frames"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_buffer_length_frames</strong>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-audioeffectcapture-method-get-buffer-length-frames"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回内部环形缓冲区的总大小，以帧为单位。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audioeffectcapture-method-get-discarded-frames"></target>
            <paragraph classes="classref-method" ids="class-audioeffectcapture-method-get-discarded-frames" names="class_audioeffectcapture_method_get_discarded_frames"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_discarded_frames</strong>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-audioeffectcapture-method-get-discarded-frames"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回由于缓冲区满而从音频总线上丢弃的音频帧的数量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audioeffectcapture-method-get-frames-available"></target>
            <paragraph classes="classref-method" ids="class-audioeffectcapture-method-get-frames-available" names="class_audioeffectcapture_method_get_frames_available"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_frames_available</strong>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-audioeffectcapture-method-get-frames-available"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回可使用 <reference internal="True" refid="class-audioeffectcapture-method-get-buffer"><inline classes="std std-ref">get_buffer</inline></reference> 读取的帧数。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audioeffectcapture-method-get-pushed-frames"></target>
            <paragraph classes="classref-method" ids="class-audioeffectcapture-method-get-pushed-frames" names="class_audioeffectcapture_method_get_pushed_frames"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_pushed_frames</strong>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-audioeffectcapture-method-get-pushed-frames"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回从音频总线插入的音频帧的数量。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效运算符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列位标志构成位掩码的整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

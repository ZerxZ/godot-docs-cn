<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_popupmenu.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/PopupMenu.xml.</comment>
    <target refid="class-popupmenu"></target>
    <section ids="popupmenu class-popupmenu" names="popupmenu class_popupmenu">
        <title>PopupMenu</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_popup#class-popup"><inline classes="std std-ref">Popup</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_window#class-window"><inline classes="std std-ref">Window</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_viewport#class-viewport"><inline classes="std std-ref">Viewport</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>用于显示选项列表的模态窗口。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph><strong>PopupMenu</strong> 是用于显示选项列表的模态窗口，常见于工具栏和上下文菜单。</paragraph>
            <paragraph><strong>PopupMenu</strong> 的大小可以使用 <reference internal="True" refuri="class_window#class-window-property-max-size"><inline classes="std std-ref">Window.max_size</inline></reference> 限制。如果菜单项列表的高度大于 <strong>PopupMenu</strong> 的最大高度，则会在弹出框中使用 <reference internal="True" refuri="class_scrollcontainer#class-scrollcontainer"><inline classes="std std-ref">ScrollContainer</inline></reference> 让用户滚动内容。如果没有设置最大尺寸或者设为了 <literal>0</literal>，则该 <strong>PopupMenu</strong> 的高度会被限制在父级的矩形框之中。</paragraph>
            <paragraph>所有的 <literal>set_*</literal> 方法都允许使用负数菜单项索引，即 <literal>-1</literal> 访问的是最后一个菜单项，<literal>-2</literal> 选择的是倒数第二个菜单项，依次类推。</paragraph>
            <paragraph><strong>增量搜索：</strong>与 <reference internal="True" refuri="class_itemlist#class-itemlist"><inline classes="std std-ref">ItemList</inline></reference> 和 <reference internal="True" refuri="class_tree#class-tree"><inline classes="std std-ref">Tree</inline></reference> 类似，<strong>PopupMenu</strong> 也支持在聚焦控件时在列表中进行搜索。按下与某个条目名称首字母一致的按键，就会选中以该字母开头的第一个条目。在此之后，进行增量搜索的办法有两种：1）在超时前再次按下同一个按键，选中以该字母开头的下一个条目。2）在超时前按下剩余字母对应的按键，直接匹配并选中所需的条目。这两个动作都会在最后一次按键超时后重置回列表顶端。你可以通过 <reference internal="True" refuri="class_projectsettings#class-projectsettings-property-gui-timers-incremental-search-max-interval-msec"><inline classes="std std-ref">ProjectSettings.gui/timers/incremental_search_max_interval_msec</inline></reference> 修改超时时长。</paragraph>
            <paragraph><strong>注意：</strong>菜单项的 ID 有 32 位的限制，不是完整 <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> 的 64 位。取值范围为 <literal>-2^32</literal> 到 <literal>2^32 - 1</literal>，即 <literal>-2147483648</literal> 到 <literal>2147483647</literal>。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="27"></colspec>
                    <colspec colwidth="100"></colspec>
                    <colspec colwidth="11"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-property-allow-search"><inline classes="std std-ref">allow_search</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-property-hide-on-checkable-item-selection"><inline classes="std std-ref">hide_on_checkable_item_selection</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-property-hide-on-item-selection"><inline classes="std std-ref">hide_on_item_selection</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-property-hide-on-state-item-selection"><inline classes="std std-ref">hide_on_state_item_selection</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-property-item-count"><inline classes="std std-ref">item_count</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-property-submenu-popup-delay"><inline classes="std std-ref">submenu_popup_delay</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.3</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="50"></colspec>
                    <colspec colwidth="273"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-activate-item-by-event"><inline classes="std std-ref">activate_item_by_event</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_inputevent#class-inputevent"><inline classes="std std-ref">InputEvent</inline></reference> event, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> for_global_only=false <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-add-check-item"><inline classes="std std-ref">add_check_item</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> label, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id=-1, <reference internal="True" refuri="class_@globalscope#enum-globalscope-key"><inline classes="std std-ref">Key</inline></reference> accel=0 <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-add-check-shortcut"><inline classes="std std-ref">add_check_shortcut</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_shortcut#class-shortcut"><inline classes="std std-ref">Shortcut</inline></reference> shortcut, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id=-1, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> global=false <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-add-icon-check-item"><inline classes="std std-ref">add_icon_check_item</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> texture, <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> label, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id=-1, <reference internal="True" refuri="class_@globalscope#enum-globalscope-key"><inline classes="std std-ref">Key</inline></reference> accel=0 <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-add-icon-check-shortcut"><inline classes="std std-ref">add_icon_check_shortcut</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> texture, <reference internal="True" refuri="class_shortcut#class-shortcut"><inline classes="std std-ref">Shortcut</inline></reference> shortcut, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id=-1, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> global=false <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-add-icon-item"><inline classes="std std-ref">add_icon_item</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> texture, <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> label, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id=-1, <reference internal="True" refuri="class_@globalscope#enum-globalscope-key"><inline classes="std std-ref">Key</inline></reference> accel=0 <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-add-icon-radio-check-item"><inline classes="std std-ref">add_icon_radio_check_item</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> texture, <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> label, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id=-1, <reference internal="True" refuri="class_@globalscope#enum-globalscope-key"><inline classes="std std-ref">Key</inline></reference> accel=0 <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-add-icon-radio-check-shortcut"><inline classes="std std-ref">add_icon_radio_check_shortcut</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> texture, <reference internal="True" refuri="class_shortcut#class-shortcut"><inline classes="std std-ref">Shortcut</inline></reference> shortcut, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id=-1, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> global=false <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-add-icon-shortcut"><inline classes="std std-ref">add_icon_shortcut</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> texture, <reference internal="True" refuri="class_shortcut#class-shortcut"><inline classes="std std-ref">Shortcut</inline></reference> shortcut, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id=-1, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> global=false, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> allow_echo=false <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-add-item"><inline classes="std std-ref">add_item</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> label, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id=-1, <reference internal="True" refuri="class_@globalscope#enum-globalscope-key"><inline classes="std std-ref">Key</inline></reference> accel=0 <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-add-multistate-item"><inline classes="std std-ref">add_multistate_item</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> label, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> max_states, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> default_state=0, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id=-1, <reference internal="True" refuri="class_@globalscope#enum-globalscope-key"><inline classes="std std-ref">Key</inline></reference> accel=0 <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-add-radio-check-item"><inline classes="std std-ref">add_radio_check_item</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> label, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id=-1, <reference internal="True" refuri="class_@globalscope#enum-globalscope-key"><inline classes="std std-ref">Key</inline></reference> accel=0 <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-add-radio-check-shortcut"><inline classes="std std-ref">add_radio_check_shortcut</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_shortcut#class-shortcut"><inline classes="std std-ref">Shortcut</inline></reference> shortcut, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id=-1, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> global=false <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-add-separator"><inline classes="std std-ref">add_separator</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> label="", <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id=-1 <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-add-shortcut"><inline classes="std std-ref">add_shortcut</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_shortcut#class-shortcut"><inline classes="std std-ref">Shortcut</inline></reference> shortcut, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id=-1, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> global=false, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> allow_echo=false <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-add-submenu-item"><inline classes="std std-ref">add_submenu_item</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> label, <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> submenu, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id=-1 <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-clear"><inline classes="std std-ref">clear</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> free_submenus=false <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-get-focused-item"><inline classes="std std-ref">get_focused_item</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_@globalscope#enum-globalscope-key"><inline classes="std std-ref">Key</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-get-item-accelerator"><inline classes="std std-ref">get_item_accelerator</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-get-item-icon"><inline classes="std std-ref">get_item_icon</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-get-item-icon-max-width"><inline classes="std std-ref">get_item_icon_max_width</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-get-item-icon-modulate"><inline classes="std std-ref">get_item_icon_modulate</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-get-item-id"><inline classes="std std-ref">get_item_id</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-get-item-indent"><inline classes="std std-ref">get_item_indent</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-get-item-index"><inline classes="std std-ref">get_item_index</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-get-item-language"><inline classes="std std-ref">get_item_language</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-get-item-metadata"><inline classes="std std-ref">get_item_metadata</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_shortcut#class-shortcut"><inline classes="std std-ref">Shortcut</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-get-item-shortcut"><inline classes="std std-ref">get_item_shortcut</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-get-item-submenu"><inline classes="std std-ref">get_item_submenu</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-get-item-text"><inline classes="std std-ref">get_item_text</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_control#enum-control-textdirection"><inline classes="std std-ref">TextDirection</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-get-item-text-direction"><inline classes="std std-ref">get_item_text_direction</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-get-item-tooltip"><inline classes="std std-ref">get_item_tooltip</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-is-item-checkable"><inline classes="std std-ref">is_item_checkable</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-is-item-checked"><inline classes="std std-ref">is_item_checked</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-is-item-disabled"><inline classes="std std-ref">is_item_disabled</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-is-item-radio-checkable"><inline classes="std std-ref">is_item_radio_checkable</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-is-item-separator"><inline classes="std std-ref">is_item_separator</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-is-item-shortcut-disabled"><inline classes="std std-ref">is_item_shortcut_disabled</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-remove-item"><inline classes="std std-ref">remove_item</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-scroll-to-item"><inline classes="std std-ref">scroll_to_item</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-set-focused-item"><inline classes="std std-ref">set_focused_item</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-set-item-accelerator"><inline classes="std std-ref">set_item_accelerator</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index, <reference internal="True" refuri="class_@globalscope#enum-globalscope-key"><inline classes="std std-ref">Key</inline></reference> accel <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-set-item-as-checkable"><inline classes="std std-ref">set_item_as_checkable</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> enable <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-set-item-as-radio-checkable"><inline classes="std std-ref">set_item_as_radio_checkable</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> enable <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-set-item-as-separator"><inline classes="std std-ref">set_item_as_separator</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> enable <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-set-item-checked"><inline classes="std std-ref">set_item_checked</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> checked <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-set-item-disabled"><inline classes="std std-ref">set_item_disabled</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> disabled <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-set-item-icon"><inline classes="std std-ref">set_item_icon</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index, <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> icon <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-set-item-icon-max-width"><inline classes="std std-ref">set_item_icon_max_width</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> width <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-set-item-icon-modulate"><inline classes="std std-ref">set_item_icon_modulate</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index, <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> modulate <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-set-item-id"><inline classes="std std-ref">set_item_id</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-set-item-indent"><inline classes="std std-ref">set_item_indent</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> indent <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-set-item-language"><inline classes="std std-ref">set_item_language</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index, <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> language <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-set-item-metadata"><inline classes="std std-ref">set_item_metadata</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index, <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> metadata <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-set-item-multistate"><inline classes="std std-ref">set_item_multistate</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> state <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-set-item-shortcut"><inline classes="std std-ref">set_item_shortcut</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index, <reference internal="True" refuri="class_shortcut#class-shortcut"><inline classes="std std-ref">Shortcut</inline></reference> shortcut, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> global=false <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-set-item-shortcut-disabled"><inline classes="std std-ref">set_item_shortcut_disabled</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> disabled <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-set-item-submenu"><inline classes="std std-ref">set_item_submenu</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index, <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> submenu <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-set-item-text"><inline classes="std std-ref">set_item_text</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index, <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> text <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-set-item-text-direction"><inline classes="std std-ref">set_item_text_direction</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index, <reference internal="True" refuri="class_control#enum-control-textdirection"><inline classes="std std-ref">TextDirection</inline></reference> direction <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-set-item-tooltip"><inline classes="std std-ref">set_item_tooltip</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index, <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> tooltip <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-toggle-item-checked"><inline classes="std std-ref">toggle_item_checked</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-method-toggle-item-multistate"><inline classes="std std-ref">toggle_item_multistate</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index <strong>)</strong></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id4" names="主题属性">
            <title>主题属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="35"></colspec>
                    <colspec colwidth="95"></colspec>
                    <colspec colwidth="35"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-theme-color-font-accelerator-color"><inline classes="std std-ref">font_accelerator_color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Color(0.7, 0.7, 0.7, 0.8)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-theme-color-font-color"><inline classes="std std-ref">font_color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Color(0.875, 0.875, 0.875, 1)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-theme-color-font-disabled-color"><inline classes="std std-ref">font_disabled_color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Color(0.4, 0.4, 0.4, 0.8)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-theme-color-font-hover-color"><inline classes="std std-ref">font_hover_color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Color(0.875, 0.875, 0.875, 1)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-theme-color-font-outline-color"><inline classes="std std-ref">font_outline_color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Color(1, 1, 1, 1)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-theme-color-font-separator-color"><inline classes="std std-ref">font_separator_color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Color(0.875, 0.875, 0.875, 1)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-theme-color-font-separator-outline-color"><inline classes="std std-ref">font_separator_outline_color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Color(1, 1, 1, 1)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-theme-constant-h-separation"><inline classes="std std-ref">h_separation</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>4</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-theme-constant-icon-max-width"><inline classes="std std-ref">icon_max_width</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-theme-constant-indent"><inline classes="std std-ref">indent</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>10</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-theme-constant-item-end-padding"><inline classes="std std-ref">item_end_padding</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>2</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-theme-constant-item-start-padding"><inline classes="std std-ref">item_start_padding</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>2</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-theme-constant-outline-size"><inline classes="std std-ref">outline_size</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-theme-constant-separator-outline-size"><inline classes="std std-ref">separator_outline_size</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-theme-constant-v-separation"><inline classes="std std-ref">v_separation</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>4</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_font#class-font"><inline classes="std std-ref">Font</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-theme-font-font"><inline classes="std std-ref">font</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_font#class-font"><inline classes="std std-ref">Font</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-theme-font-font-separator"><inline classes="std std-ref">font_separator</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-theme-font-size-font-separator-size"><inline classes="std std-ref">font_separator_size</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-theme-font-size-font-size"><inline classes="std std-ref">font_size</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-theme-icon-checked"><inline classes="std std-ref">checked</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-theme-icon-checked-disabled"><inline classes="std std-ref">checked_disabled</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-theme-icon-radio-checked"><inline classes="std std-ref">radio_checked</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-theme-icon-radio-checked-disabled"><inline classes="std std-ref">radio_checked_disabled</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-theme-icon-radio-unchecked"><inline classes="std std-ref">radio_unchecked</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-theme-icon-radio-unchecked-disabled"><inline classes="std std-ref">radio_unchecked_disabled</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-theme-icon-submenu"><inline classes="std std-ref">submenu</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-theme-icon-submenu-mirrored"><inline classes="std std-ref">submenu_mirrored</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-theme-icon-unchecked"><inline classes="std std-ref">unchecked</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-theme-icon-unchecked-disabled"><inline classes="std std-ref">unchecked_disabled</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-theme-style-hover"><inline classes="std std-ref">hover</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-theme-style-labeled-separator-left"><inline classes="std std-ref">labeled_separator_left</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-theme-style-labeled-separator-right"><inline classes="std std-ref">labeled_separator_right</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-popupmenu-theme-style-separator"><inline classes="std std-ref">separator</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="信号">
            <title>信号</title>
            <target refid="class-popupmenu-signal-id-focused"></target>
            <paragraph classes="classref-signal" ids="class-popupmenu-signal-id-focused" names="class_popupmenu_signal_id_focused"><strong>id_focused</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id <strong>)</strong></paragraph>
            <paragraph>用户使用 <reference internal="True" refuri="class_projectsettings#class-projectsettings-property-input-ui-up"><inline classes="std std-ref">ProjectSettings.input/ui_up</inline></reference> 或 <reference internal="True" refuri="class_projectsettings#class-projectsettings-property-input-ui-down"><inline classes="std std-ref">ProjectSettings.input/ui_down</inline></reference> 输入动作移动至 ID 为 <literal>id</literal> 的菜单项时发出。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-signal-id-pressed"></target>
            <paragraph classes="classref-signal" ids="class-popupmenu-signal-id-pressed" names="class_popupmenu_signal_id_pressed"><strong>id_pressed</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id <strong>)</strong></paragraph>
            <paragraph>ID 为 <literal>id</literal> 的菜单项被按下或者由快捷键激活时发出。</paragraph>
            <paragraph><strong>注意：</strong>如果 <literal>id</literal> 为负数（无论是明确指定的还是由于溢出导致的），将返回相应的索引来代替。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-signal-index-pressed"></target>
            <paragraph classes="classref-signal" ids="class-popupmenu-signal-index-pressed" names="class_popupmenu_signal_index_pressed"><strong>index_pressed</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index <strong>)</strong></paragraph>
            <paragraph>索引为 <literal>index</literal> 的菜单项被按下或者由快捷键激活时发出。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-signal-menu-changed"></target>
            <paragraph classes="classref-signal" ids="class-popupmenu-signal-menu-changed" names="class_popupmenu_signal_menu_changed"><strong>menu_changed</strong> <strong>(</strong> <strong>)</strong></paragraph>
            <paragraph>发生菜单项的添加、修改、删除时发出。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="属性说明">
            <title>属性说明</title>
            <target refid="class-popupmenu-property-allow-search"></target>
            <paragraph classes="classref-property" ids="class-popupmenu-property-allow-search" names="class_popupmenu_property_allow_search"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>allow_search</strong> = <literal>true</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_allow_search</strong> <strong>(</strong> <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_allow_search</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，允许用字母键导航 <strong>PopupMenu</strong>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-property-hide-on-checkable-item-selection"></target>
            <paragraph classes="classref-property" ids="class-popupmenu-property-hide-on-checkable-item-selection" names="class_popupmenu_property_hide_on_checkable_item_selection"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>hide_on_checkable_item_selection</strong> = <literal>true</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_hide_on_checkable_item_selection</strong> <strong>(</strong> <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_hide_on_checkable_item_selection</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则在选中复选框或单选按钮时隐藏 <strong>PopupMenu</strong>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-property-hide-on-item-selection"></target>
            <paragraph classes="classref-property" ids="class-popupmenu-property-hide-on-item-selection" names="class_popupmenu_property_hide_on_item_selection"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>hide_on_item_selection</strong> = <literal>true</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_hide_on_item_selection</strong> <strong>(</strong> <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_hide_on_item_selection</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，当一个项目被选中时隐藏 <strong>PopupMenu</strong>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-property-hide-on-state-item-selection"></target>
            <paragraph classes="classref-property" ids="class-popupmenu-property-hide-on-state-item-selection" names="class_popupmenu_property_hide_on_state_item_selection"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>hide_on_state_item_selection</strong> = <literal>false</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_hide_on_state_item_selection</strong> <strong>(</strong> <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_hide_on_state_item_selection</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则在选中状态项时隐藏 <strong>PopupMenu</strong>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-property-item-count"></target>
            <paragraph classes="classref-property" ids="class-popupmenu-property-item-count" names="class_popupmenu_property_item_count"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>item_count</strong> = <literal>0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_item_count</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_item_count</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>当前列表中的项目数。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-property-submenu-popup-delay"></target>
            <paragraph classes="classref-property" ids="class-popupmenu-property-submenu-popup-delay" names="class_popupmenu_property_submenu_popup_delay"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>submenu_popup_delay</strong> = <literal>0.3</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_submenu_popup_delay</strong> <strong>(</strong> <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_submenu_popup_delay</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>设置鼠标悬停时子菜单项弹出的延迟时间，以秒为单位。如果弹出菜单被添加为另一个菜单的子菜单（作为子菜单），它将继承父菜单项的延迟时间。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id7" names="方法说明">
            <title>方法说明</title>
            <target refid="class-popupmenu-method-activate-item-by-event"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-activate-item-by-event" names="class_popupmenu_method_activate_item_by_event"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>activate_item_by_event</strong> <strong>(</strong> <reference internal="True" refuri="class_inputevent#class-inputevent"><inline classes="std std-ref">InputEvent</inline></reference> event, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> for_global_only=false <strong>)</strong></paragraph>
            <paragraph>根据 <strong>PopupMenu</strong> 的快捷键和加速器检查提供的 <literal>event</literal>，并激活匹配事件的第一个项目。如果 <literal>for_global_only</literal> 为 <literal>true</literal>，则仅调用 <literal>global</literal> 被设置为 <literal>true</literal> 的快捷键和加速器。</paragraph>
            <paragraph>如果项目已成功激活，则返回 <literal>true</literal>。</paragraph>
            <paragraph><strong>注意：</strong>某些 <reference internal="True" refuri="class_control#class-control"><inline classes="std std-ref">Control</inline></reference>，例如 <reference internal="True" refuri="class_menubutton#class-menubutton"><inline classes="std std-ref">MenuButton</inline></reference>，会自动调用该方法。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-add-check-item"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-add-check-item" names="class_popupmenu_method_add_check_item">void <strong>add_check_item</strong> <strong>(</strong> <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> label, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id=-1, <reference internal="True" refuri="class_@globalscope#enum-globalscope-key"><inline classes="std std-ref">Key</inline></reference> accel=0 <strong>)</strong></paragraph>
            <paragraph>添加一个带有文本 <literal>label</literal> 的新的可勾选项。</paragraph>
            <paragraph>可以选择提供一个 <literal>id</literal> 以及一个加速器（<literal>accel</literal>）。如果未提供 <literal>id</literal>，将从索引中创建一个。如果未提供 <literal>accel</literal>，则默认值 0（对应于 <reference internal="True" refuri="class_@globalscope#class-globalscope-constant-key-none"><inline classes="std std-ref">@GlobalScope.KEY_NONE</inline></reference>）将被分配给该项（这意味着它不会有任何加速器）。有关加速器的更多信息，请参阅 <reference internal="True" refid="class-popupmenu-method-get-item-accelerator"><inline classes="std std-ref">get_item_accelerator</inline></reference>。</paragraph>
            <paragraph><strong>注意：</strong>可勾选的项只显示一个勾选标记，但没有任何内置的勾选行为，必须手动勾选/取消勾选。有关如何控制它的更多信息，请参阅 <reference internal="True" refid="class-popupmenu-method-set-item-checked"><inline classes="std std-ref">set_item_checked</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-add-check-shortcut"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-add-check-shortcut" names="class_popupmenu_method_add_check_shortcut">void <strong>add_check_shortcut</strong> <strong>(</strong> <reference internal="True" refuri="class_shortcut#class-shortcut"><inline classes="std std-ref">Shortcut</inline></reference> shortcut, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id=-1, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> global=false <strong>)</strong></paragraph>
            <paragraph>添加一个新的可勾选项并为其分配指定的 <reference internal="True" refuri="class_shortcut#class-shortcut"><inline classes="std std-ref">Shortcut</inline></reference>。将复选框的标签设置为 <reference internal="True" refuri="class_shortcut#class-shortcut"><inline classes="std std-ref">Shortcut</inline></reference> 的名称。</paragraph>
            <paragraph>可以选择提供一个 <literal>id</literal>。如果未提供 <literal>id</literal>，将从索引中创建一个。</paragraph>
            <paragraph><strong>注意：</strong>可勾选项只显示一个勾选标记，但没有任何内置的勾选行为，必须手动勾选/取消勾选。有关如何控制它的更多信息，请参阅 <reference internal="True" refid="class-popupmenu-method-set-item-checked"><inline classes="std std-ref">set_item_checked</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-add-icon-check-item"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-add-icon-check-item" names="class_popupmenu_method_add_icon_check_item">void <strong>add_icon_check_item</strong> <strong>(</strong> <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> texture, <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> label, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id=-1, <reference internal="True" refuri="class_@globalscope#enum-globalscope-key"><inline classes="std std-ref">Key</inline></reference> accel=0 <strong>)</strong></paragraph>
            <paragraph>添加一个带有文本 <literal>label</literal> 和图标 <literal>texture</literal> 的新的可勾选项。</paragraph>
            <paragraph>可以选择提供一个 <literal>id</literal> 以及一个加速器（<literal>accel</literal>）。如果未提供 <literal>id</literal>，将从索引中创建一个。如果未提供 <literal>accel</literal>，则默认值 0（对应于 <reference internal="True" refuri="class_@globalscope#class-globalscope-constant-key-none"><inline classes="std std-ref">@GlobalScope.KEY_NONE</inline></reference>）将被分配给该项（这意味着它不会有任何加速器）。有关加速器的更多信息，请参阅 <reference internal="True" refid="class-popupmenu-method-get-item-accelerator"><inline classes="std std-ref">get_item_accelerator</inline></reference>。</paragraph>
            <paragraph><strong>注意：</strong>可勾选项只显示一个勾选标记，但没有任何内置的勾选行为，必须手动勾选/取消勾选。有关如何控制它的更多信息，请参阅 <reference internal="True" refid="class-popupmenu-method-set-item-checked"><inline classes="std std-ref">set_item_checked</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-add-icon-check-shortcut"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-add-icon-check-shortcut" names="class_popupmenu_method_add_icon_check_shortcut">void <strong>add_icon_check_shortcut</strong> <strong>(</strong> <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> texture, <reference internal="True" refuri="class_shortcut#class-shortcut"><inline classes="std std-ref">Shortcut</inline></reference> shortcut, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id=-1, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> global=false <strong>)</strong></paragraph>
            <paragraph>添加一个新的可勾选项并为其分配指定的 <reference internal="True" refuri="class_shortcut#class-shortcut"><inline classes="std std-ref">Shortcut</inline></reference> 和图标 <literal>texture</literal>。将复选框的标签设置为 <reference internal="True" refuri="class_shortcut#class-shortcut"><inline classes="std std-ref">Shortcut</inline></reference> 的名称。</paragraph>
            <paragraph>可以选择提供一个 <literal>id</literal>。如果未提供 <literal>id</literal>，将从索引中创建一个。</paragraph>
            <paragraph><strong>注意：</strong>可勾选项只显示一个勾选标记，但没有任何内置的勾选行为，必须手动勾选/取消勾选。有关如何控制它的更多信息，请参阅 <reference internal="True" refid="class-popupmenu-method-set-item-checked"><inline classes="std std-ref">set_item_checked</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-add-icon-item"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-add-icon-item" names="class_popupmenu_method_add_icon_item">void <strong>add_icon_item</strong> <strong>(</strong> <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> texture, <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> label, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id=-1, <reference internal="True" refuri="class_@globalscope#enum-globalscope-key"><inline classes="std std-ref">Key</inline></reference> accel=0 <strong>)</strong></paragraph>
            <paragraph>添加带有文本 <literal>label</literal> 和图标 <literal>texture</literal> 的新菜单项。</paragraph>
            <paragraph>还可以提供 <literal>id</literal> 和快捷键（<literal>accel</literal>）。如果没有提供 <literal>id</literal>，则会根据索引来创建。如果没有提供 <literal>accel</literal>，则会为该菜单项分配默认的 0（对应 <reference internal="True" refuri="class_@globalscope#class-globalscope-constant-key-none"><inline classes="std std-ref">@GlobalScope.KEY_NONE</inline></reference>，在这里表示没有快捷键）。更多快捷键相关的信息见 <reference internal="True" refid="class-popupmenu-method-get-item-accelerator"><inline classes="std std-ref">get_item_accelerator</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-add-icon-radio-check-item"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-add-icon-radio-check-item" names="class_popupmenu_method_add_icon_radio_check_item">void <strong>add_icon_radio_check_item</strong> <strong>(</strong> <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> texture, <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> label, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id=-1, <reference internal="True" refuri="class_@globalscope#enum-globalscope-key"><inline classes="std std-ref">Key</inline></reference> accel=0 <strong>)</strong></paragraph>
            <paragraph>与 <reference internal="True" refid="class-popupmenu-method-add-icon-check-item"><inline classes="std std-ref">add_icon_check_item</inline></reference> 相同，但使用单选按钮。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-add-icon-radio-check-shortcut"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-add-icon-radio-check-shortcut" names="class_popupmenu_method_add_icon_radio_check_shortcut">void <strong>add_icon_radio_check_shortcut</strong> <strong>(</strong> <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> texture, <reference internal="True" refuri="class_shortcut#class-shortcut"><inline classes="std std-ref">Shortcut</inline></reference> shortcut, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id=-1, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> global=false <strong>)</strong></paragraph>
            <paragraph>与 <reference internal="True" refid="class-popupmenu-method-add-icon-check-shortcut"><inline classes="std std-ref">add_icon_check_shortcut</inline></reference> 相同，但使用一个单选按钮。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-add-icon-shortcut"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-add-icon-shortcut" names="class_popupmenu_method_add_icon_shortcut">void <strong>add_icon_shortcut</strong> <strong>(</strong> <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> texture, <reference internal="True" refuri="class_shortcut#class-shortcut"><inline classes="std std-ref">Shortcut</inline></reference> shortcut, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id=-1, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> global=false, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> allow_echo=false <strong>)</strong></paragraph>
            <paragraph>添加新的菜单项，并为其分配指定的 <reference internal="True" refuri="class_shortcut#class-shortcut"><inline classes="std std-ref">Shortcut</inline></reference> 和图标 <literal>texture</literal>。复选框的标签会被设为 <reference internal="True" refuri="class_shortcut#class-shortcut"><inline classes="std std-ref">Shortcut</inline></reference> 的名称。</paragraph>
            <paragraph>还可以提供 <literal>id</literal>。如果没有提供 <literal>id</literal>，则会根据索引来创建。</paragraph>
            <paragraph>如果 <literal>allow_echo</literal> 为 <literal>true</literal>，则快捷键可以被回响事件激活。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-add-item"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-add-item" names="class_popupmenu_method_add_item">void <strong>add_item</strong> <strong>(</strong> <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> label, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id=-1, <reference internal="True" refuri="class_@globalscope#enum-globalscope-key"><inline classes="std std-ref">Key</inline></reference> accel=0 <strong>)</strong></paragraph>
            <paragraph>添加一个带有文本 <literal>label</literal> 的新项。</paragraph>
            <paragraph>可以选择提供一个 <literal>id</literal> 以及一个加速器（<literal>accel</literal>）。如果未提供 <literal>id</literal>，将从索引中创建一个。如果未提供 <literal>accel</literal>，则默认值 0（对应于 <reference internal="True" refuri="class_@globalscope#class-globalscope-constant-key-none"><inline classes="std std-ref">@GlobalScope.KEY_NONE</inline></reference>）将被分配给该项（这意味着它不会有任何加速器）。有关加速器的更多信息，请参阅 <reference internal="True" refid="class-popupmenu-method-get-item-accelerator"><inline classes="std std-ref">get_item_accelerator</inline></reference>。</paragraph>
            <paragraph><strong>注意：</strong>提供的 <literal>id</literal> 仅用于 <reference internal="True" refid="class-popupmenu-signal-id-pressed"><inline classes="std std-ref">id_pressed</inline></reference> 和 <reference internal="True" refid="class-popupmenu-signal-id-focused"><inline classes="std std-ref">id_focused</inline></reference> 信号。它与在函数中，例如在 <reference internal="True" refid="class-popupmenu-method-set-item-checked"><inline classes="std std-ref">set_item_checked</inline></reference> 中的 <literal>index</literal> 参数无关。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-add-multistate-item"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-add-multistate-item" names="class_popupmenu_method_add_multistate_item">void <strong>add_multistate_item</strong> <strong>(</strong> <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> label, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> max_states, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> default_state=0, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id=-1, <reference internal="True" refuri="class_@globalscope#enum-globalscope-key"><inline classes="std std-ref">Key</inline></reference> accel=0 <strong>)</strong></paragraph>
            <paragraph>添加文本为 <literal>label</literal> 的新多状态菜单项。</paragraph>
            <paragraph>与普通的双态菜单项不同，多状态菜单项的状态可以超过两个，数量由 <literal>max_states</literal> 定义。菜单项每按下或激活一次，状态就会加一。默认值由 <literal>default_state</literal> 定义。</paragraph>
            <paragraph>还可以提供 <literal>id</literal> 和快捷键（<literal>accel</literal>）。如果没有提供 <literal>id</literal>，则会根据索引来创建。如果没有提供 <literal>accel</literal>，则会为该菜单项分配默认的 0（对应 <reference internal="True" refuri="class_@globalscope#class-globalscope-constant-key-none"><inline classes="std std-ref">@GlobalScope.KEY_NONE</inline></reference>，在这里表示没有快捷键）。更多快捷键相关的信息见 <reference internal="True" refid="class-popupmenu-method-get-item-accelerator"><inline classes="std std-ref">get_item_accelerator</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-add-radio-check-item"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-add-radio-check-item" names="class_popupmenu_method_add_radio_check_item">void <strong>add_radio_check_item</strong> <strong>(</strong> <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> label, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id=-1, <reference internal="True" refuri="class_@globalscope#enum-globalscope-key"><inline classes="std std-ref">Key</inline></reference> accel=0 <strong>)</strong></paragraph>
            <paragraph>添加一个带有文本 <literal>label</literal> 的新单选勾选按钮。</paragraph>
            <paragraph>可以选择提供一个 <literal>id</literal> 以及一个加速器（<literal>accel</literal>）。如果未提供 <literal>id</literal>，将从索引中创建一个。如果未提供 <literal>accel</literal>，则默认值 0（对应于 <reference internal="True" refuri="class_@globalscope#class-globalscope-constant-key-none"><inline classes="std std-ref">@GlobalScope.KEY_NONE</inline></reference>）将被分配给该项（这意味着它不会有任何加速器）。有关加速器的更多信息，请参阅 <reference internal="True" refid="class-popupmenu-method-get-item-accelerator"><inline classes="std std-ref">get_item_accelerator</inline></reference>。</paragraph>
            <paragraph><strong>注意：</strong>可勾选项只显示一个勾选标记，但没有任何内置的勾选行为，必须手动勾选/取消勾选。有关如何控制它的更多信息，请参阅 <reference internal="True" refid="class-popupmenu-method-set-item-checked"><inline classes="std std-ref">set_item_checked</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-add-radio-check-shortcut"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-add-radio-check-shortcut" names="class_popupmenu_method_add_radio_check_shortcut">void <strong>add_radio_check_shortcut</strong> <strong>(</strong> <reference internal="True" refuri="class_shortcut#class-shortcut"><inline classes="std std-ref">Shortcut</inline></reference> shortcut, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id=-1, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> global=false <strong>)</strong></paragraph>
            <paragraph>添加一个新的单选勾选按钮并为其分配一个 <reference internal="True" refuri="class_shortcut#class-shortcut"><inline classes="std std-ref">Shortcut</inline></reference>。将复选框的标签设置为 <reference internal="True" refuri="class_shortcut#class-shortcut"><inline classes="std std-ref">Shortcut</inline></reference> 的名称。</paragraph>
            <paragraph>可以选择提供一个 <literal>id</literal>。如果未提供 <literal>id</literal>，将从索引中创建一个。</paragraph>
            <paragraph><strong>注意：</strong>可勾选项只显示一个勾选标记，但没有任何内置的勾选行为，必须手动勾选/取消勾选。有关如何控制它的更多信息，请参阅 <reference internal="True" refid="class-popupmenu-method-set-item-checked"><inline classes="std std-ref">set_item_checked</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-add-separator"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-add-separator" names="class_popupmenu_method_add_separator">void <strong>add_separator</strong> <strong>(</strong> <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> label="", <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id=-1 <strong>)</strong></paragraph>
            <paragraph>在菜单项之间添加分隔线。分隔线也占用索引，可以使用 <literal>id</literal> 参数设置。</paragraph>
            <paragraph>还可以提供 <literal>label</literal>，会在分隔线的中间位置显示。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-add-shortcut"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-add-shortcut" names="class_popupmenu_method_add_shortcut">void <strong>add_shortcut</strong> <strong>(</strong> <reference internal="True" refuri="class_shortcut#class-shortcut"><inline classes="std std-ref">Shortcut</inline></reference> shortcut, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id=-1, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> global=false, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> allow_echo=false <strong>)</strong></paragraph>
            <paragraph>添加 <reference internal="True" refuri="class_shortcut#class-shortcut"><inline classes="std std-ref">Shortcut</inline></reference>。</paragraph>
            <paragraph>还可以提供 <literal>id</literal>。如果没有提供 <literal>id</literal>，则会根据索引来创建。</paragraph>
            <paragraph>如果 <literal>allow_echo</literal> 为 <literal>true</literal>，则快捷键可以被回响事件激活。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-add-submenu-item"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-add-submenu-item" names="class_popupmenu_method_add_submenu_item">void <strong>add_submenu_item</strong> <strong>(</strong> <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> label, <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> submenu, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id=-1 <strong>)</strong></paragraph>
            <paragraph>添加菜单项，点击时会作为父级 <strong>PopupMenu</strong> 节点的子菜单。<literal>submenu</literal> 参数必须是已作为子节点添加到此节点的现有 <strong>PopupMenu</strong> 的名称。当点击该项目、悬停足够长的时间、或使用 <literal>ui_select</literal> 或 <literal>ui_right</literal> 输入操作激活该子菜单时，将显示该子菜单。</paragraph>
            <paragraph>还可以提供 <literal>id</literal>。如果没有提供 <literal>id</literal>，则会根据索引来创建。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-clear"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-clear" names="class_popupmenu_method_clear">void <strong>clear</strong> <strong>(</strong> <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> free_submenus=false <strong>)</strong></paragraph>
            <paragraph>移除 <strong>PopupMenu</strong> 中的所有项目。如果 <literal>free_submenus</literal> 为 <literal>true</literal>，则自动释放子菜单节点。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-get-focused-item"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-get-focused-item" names="class_popupmenu_method_get_focused_item"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_focused_item</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回当前焦点项目的索引。如果没有焦点，则返回 <literal>-1</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-get-item-accelerator"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-get-item-accelerator" names="class_popupmenu_method_get_item_accelerator"><reference internal="True" refuri="class_@globalscope#enum-globalscope-key"><inline classes="std std-ref">Key</inline></reference> <strong>get_item_accelerator</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回给定 <literal>index</literal> 处项目的加速器。加速器是一种键盘快捷键，即使当前未打开菜单按钮，也可以按下它来触发菜单按钮。返回值是一个整数，通常是 <reference internal="True" refuri="class_@globalscope#enum-globalscope-keymodifiermask"><inline classes="std std-ref">KeyModifierMask</inline></reference> 和 <reference internal="True" refuri="class_@globalscope#enum-globalscope-key"><inline classes="std std-ref">Key</inline></reference> 使用按位或操作的组合，例如 <literal>KEY_MASK_CTRL | KEY_A</literal>（<literal classes="kbd">Ctrl + A</literal>）。如果没有为指定的 <literal>index</literal> 定义加速器，则 <reference internal="True" refid="class-popupmenu-method-get-item-accelerator"><inline classes="std std-ref">get_item_accelerator</inline></reference> 返回 <literal>0</literal>（对应于 <reference internal="True" refuri="class_@globalscope#class-globalscope-constant-key-none"><inline classes="std std-ref">@GlobalScope.KEY_NONE</inline></reference>）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-get-item-icon"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-get-item-icon" names="class_popupmenu_method_get_item_icon"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>get_item_icon</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回给定 <literal>index</literal> 处菜单项的图标。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-get-item-icon-max-width"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-get-item-icon-max-width" names="class_popupmenu_method_get_item_icon_max_width"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_item_icon_max_width</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回给定 <literal>index</literal> 处菜单项所允许的最大图标宽度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-get-item-icon-modulate"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-get-item-icon-modulate" names="class_popupmenu_method_get_item_icon_modulate"><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>get_item_icon_modulate</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回给定 <literal>index</literal> 处用于调制菜单项图标的 <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-get-item-id"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-get-item-id" names="class_popupmenu_method_get_item_id"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_item_id</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回给定 <literal>index</literal> 处菜单项的 ID。<literal>id</literal> 可以手动分配，而索引则不能。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-get-item-indent"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-get-item-indent" names="class_popupmenu_method_get_item_indent"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_item_indent</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回给定 <literal>index</literal> 处菜单项的水平偏移量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-get-item-index"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-get-item-index" names="class_popupmenu_method_get_item_index"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_item_index</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回包含指定 <literal>id</literal> 的菜单项的索引。索引由引擎自动分配给各个项目，无法手动设置。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-get-item-language"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-get-item-language" names="class_popupmenu_method_get_item_language"><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>get_item_language</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回项目文本的语言代码。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-get-item-metadata"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-get-item-metadata" names="class_popupmenu_method_get_item_metadata"><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> <strong>get_item_metadata</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回指定菜单项的元数据，可能是任何类型。可以使用 <reference internal="True" refid="class-popupmenu-method-set-item-metadata"><inline classes="std std-ref">set_item_metadata</inline></reference> 来设置元数据，这样就能很很方便地将上下文数据分配给菜单项。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-get-item-shortcut"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-get-item-shortcut" names="class_popupmenu_method_get_item_shortcut"><reference internal="True" refuri="class_shortcut#class-shortcut"><inline classes="std std-ref">Shortcut</inline></reference> <strong>get_item_shortcut</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回给定 <literal>index</literal> 处菜单项所关联的 <reference internal="True" refuri="class_shortcut#class-shortcut"><inline classes="std std-ref">Shortcut</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-get-item-submenu"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-get-item-submenu" names="class_popupmenu_method_get_item_submenu"><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>get_item_submenu</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回给定 <literal>index</literal> 处菜单项的子菜单名称。有关如何添加子菜单的更多信息，请参见 <reference internal="True" refid="class-popupmenu-method-add-submenu-item"><inline classes="std std-ref">add_submenu_item</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-get-item-text"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-get-item-text" names="class_popupmenu_method_get_item_text"><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>get_item_text</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回索引为 <literal>index</literal> 的菜单项的文本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-get-item-text-direction"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-get-item-text-direction" names="class_popupmenu_method_get_item_text_direction"><reference internal="True" refuri="class_control#enum-control-textdirection"><inline classes="std std-ref">TextDirection</inline></reference> <strong>get_item_text_direction</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回项目文本的基础书写方向。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-get-item-tooltip"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-get-item-tooltip" names="class_popupmenu_method_get_item_tooltip"><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>get_item_tooltip</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回索引为 <literal>index</literal> 的菜单项所关联的工具提示。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-is-item-checkable"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-is-item-checkable" names="class_popupmenu_method_is_item_checkable"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_item_checkable</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>如果给定 <literal>index</literal> 处的菜单项可以某种方式勾选，即如果它有一个复选框或单选按钮，则返回 <literal>true</literal>。</paragraph>
            <paragraph><strong>注意：</strong>可勾选项仅显示一个勾选标记或单选按钮，但没有任何内置的勾选行为，必须手动勾选/取消勾选。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-is-item-checked"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-is-item-checked" names="class_popupmenu_method_is_item_checked"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_item_checked</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>如果给定的 <literal>index</literal> 处的菜单项被勾选，则返回 <literal>true</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-is-item-disabled"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-is-item-disabled" names="class_popupmenu_method_is_item_disabled"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_item_disabled</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>如果给定 <literal>index</literal> 处的菜单项被禁用，则返回 <literal>true</literal>。菜单项被禁用时无法被选择，对应的动作也无法被调用。</paragraph>
            <paragraph>有关如何禁用菜单项的更多信息，请参阅 <reference internal="True" refid="class-popupmenu-method-set-item-disabled"><inline classes="std std-ref">set_item_disabled</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-is-item-radio-checkable"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-is-item-radio-checkable" names="class_popupmenu_method_is_item_radio_checkable"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_item_radio_checkable</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>如果给定 <literal>index</literal> 处的菜单项具有单选按钮样式的可勾选性，则返回 <literal>true</literal>。</paragraph>
            <paragraph><strong>注意：</strong>这纯粹是装饰性的；必须添加用于单选组中勾选/取消勾选项目的逻辑。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-is-item-separator"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-is-item-separator" names="class_popupmenu_method_is_item_separator"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_item_separator</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>如果菜单项是分隔符，则返回 <literal>true</literal>。分隔符会显示为一条线。有关如何添加分隔符的更多信息，请参阅 <reference internal="True" refid="class-popupmenu-method-add-separator"><inline classes="std std-ref">add_separator</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-is-item-shortcut-disabled"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-is-item-shortcut-disabled" names="class_popupmenu_method_is_item_shortcut_disabled"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_item_shortcut_disabled</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>如果指定菜单项的快捷方式被禁用，则返回 <literal>true</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-remove-item"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-remove-item" names="class_popupmenu_method_remove_item">void <strong>remove_item</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index <strong>)</strong></paragraph>
            <paragraph>从菜单中移除给定 <literal>index</literal> 处的菜单项。</paragraph>
            <paragraph><strong>注意：</strong>被移除的菜单项后面的菜单项的索引将移动一位。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-scroll-to-item"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-scroll-to-item" names="class_popupmenu_method_scroll_to_item">void <strong>scroll_to_item</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index <strong>)</strong></paragraph>
            <paragraph>移动滚动视图，使位于给定 <literal>index</literal> 的菜单项可见。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-set-focused-item"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-set-focused-item" names="class_popupmenu_method_set_focused_item">void <strong>set_focused_item</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index <strong>)</strong></paragraph>
            <paragraph>将当前聚焦的菜单项设置为给定的 <literal>index</literal>。</paragraph>
            <paragraph>将 <literal>-1</literal> 作为索引传入将不会聚焦任何菜单项。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-set-item-accelerator"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-set-item-accelerator" names="class_popupmenu_method_set_item_accelerator">void <strong>set_item_accelerator</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index, <reference internal="True" refuri="class_@globalscope#enum-globalscope-key"><inline classes="std std-ref">Key</inline></reference> accel <strong>)</strong></paragraph>
            <paragraph>在给定的 <literal>index</literal> 处设置项目的加速器。加速器是一种键盘快捷键，即使当前未打开菜单按钮，也可以按下它来触发菜单按钮。<literal>accel</literal> 通常是 <reference internal="True" refuri="class_@globalscope#enum-globalscope-keymodifiermask"><inline classes="std std-ref">KeyModifierMask</inline></reference> 和 <reference internal="True" refuri="class_@globalscope#enum-globalscope-key"><inline classes="std std-ref">Key</inline></reference> 使用按位或操作的组合，例如 <literal>KEY_MASK_CTRL | KEY_A</literal>（<literal classes="kbd">Ctrl + A</literal>）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-set-item-as-checkable"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-set-item-as-checkable" names="class_popupmenu_method_set_item_as_checkable">void <strong>set_item_as_checkable</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> enable <strong>)</strong></paragraph>
            <paragraph>设置给定 <literal>index</literal> 处的项是否具有一个复选框。如果为 <literal>false</literal>，则将项的类型设置为纯文本。</paragraph>
            <paragraph><strong>注意：</strong>可勾选的项只显示一个复选标记，但没有任何内置的勾选行为，必须手动勾选/取消勾选。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-set-item-as-radio-checkable"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-set-item-as-radio-checkable" names="class_popupmenu_method_set_item_as_radio_checkable">void <strong>set_item_as_radio_checkable</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> enable <strong>)</strong></paragraph>
            <paragraph>将给定 <literal>index</literal> 处的项的类型设置为一个单选按钮。如果为 <literal>false</literal>，则将项的类型设置为纯文本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-set-item-as-separator"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-set-item-as-separator" names="class_popupmenu_method_set_item_as_separator">void <strong>set_item_as_separator</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> enable <strong>)</strong></paragraph>
            <paragraph>将给定 <literal>index</literal> 处的项标记为分隔符，这意味着它将显示为直线段。如果为 <literal>false</literal>，则将项的类型设置为纯文本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-set-item-checked"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-set-item-checked" names="class_popupmenu_method_set_item_checked">void <strong>set_item_checked</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> checked <strong>)</strong></paragraph>
            <paragraph>设置位于给定的 <literal>index</literal> 的菜单项的勾选状态。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-set-item-disabled"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-set-item-disabled" names="class_popupmenu_method_set_item_disabled">void <strong>set_item_disabled</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> disabled <strong>)</strong></paragraph>
            <paragraph>启用/禁用位于给定 <literal>index</literal> 的菜单项。处于禁用状态的菜单项无法被选中，也无法调用其动作。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-set-item-icon"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-set-item-icon" names="class_popupmenu_method_set_item_icon">void <strong>set_item_icon</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index, <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> icon <strong>)</strong></paragraph>
            <paragraph>替换索引为 <literal>index</literal> 的菜单项的 <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> 图标。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-set-item-icon-max-width"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-set-item-icon-max-width" names="class_popupmenu_method_set_item_icon_max_width">void <strong>set_item_icon_max_width</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> width <strong>)</strong></paragraph>
            <paragraph>设置给定 <literal>index</literal> 处菜单项所允许的最大图标宽度。这是在图标默认大小和 <reference internal="True" refid="class-popupmenu-theme-constant-icon-max-width"><inline classes="std std-ref">icon_max_width</inline></reference> 的基础上的限制。高度会根据图标的长宽比调整。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-set-item-icon-modulate"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-set-item-icon-modulate" names="class_popupmenu_method_set_item_icon_modulate">void <strong>set_item_icon_modulate</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index, <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> modulate <strong>)</strong></paragraph>
            <paragraph>设置索引为 <literal>index</literal> 的菜单项图标的调制 <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-set-item-id"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-set-item-id" names="class_popupmenu_method_set_item_id">void <strong>set_item_id</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id <strong>)</strong></paragraph>
            <paragraph>设置位于给定 <literal>index</literal> 的菜单项的 <literal>id</literal>。</paragraph>
            <paragraph><reference internal="True" refid="class-popupmenu-signal-id-pressed"><inline classes="std std-ref">id_pressed</inline></reference> 和 <reference internal="True" refid="class-popupmenu-signal-id-focused"><inline classes="std std-ref">id_focused</inline></reference> 等信号中会用到 <literal>id</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-set-item-indent"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-set-item-indent" names="class_popupmenu_method_set_item_indent">void <strong>set_item_indent</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> indent <strong>)</strong></paragraph>
            <paragraph>设置索引为 <literal>index</literal> 的菜单项的水平偏移量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-set-item-language"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-set-item-language" names="class_popupmenu_method_set_item_language">void <strong>set_item_language</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index, <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> language <strong>)</strong></paragraph>
            <paragraph>设置项目文本的语言代码，用于断行和文本塑形算法，如果留空则使用当前区域设置。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-set-item-metadata"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-set-item-metadata" names="class_popupmenu_method_set_item_metadata">void <strong>set_item_metadata</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index, <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> metadata <strong>)</strong></paragraph>
            <paragraph>设置项的元数据，该项可以是任何类型。稍后你可以使用<reference internal="True" refid="class-popupmenu-method-get-item-metadata"><inline classes="std std-ref">get_item_metadata</inline></reference>获取它，它提供了一种将上下文数据分配给项的简单方法。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-set-item-multistate"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-set-item-multistate" names="class_popupmenu_method_set_item_multistate">void <strong>set_item_multistate</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> state <strong>)</strong></paragraph>
            <paragraph>设置一个多态项目的状态。详情请参阅 <reference internal="True" refid="class-popupmenu-method-add-multistate-item"><inline classes="std std-ref">add_multistate_item</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-set-item-shortcut"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-set-item-shortcut" names="class_popupmenu_method_set_item_shortcut">void <strong>set_item_shortcut</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index, <reference internal="True" refuri="class_shortcut#class-shortcut"><inline classes="std std-ref">Shortcut</inline></reference> shortcut, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> global=false <strong>)</strong></paragraph>
            <paragraph>设置索引为 <literal>index</literal> 的菜单项的 <reference internal="True" refuri="class_shortcut#class-shortcut"><inline classes="std std-ref">Shortcut</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-set-item-shortcut-disabled"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-set-item-shortcut-disabled" names="class_popupmenu_method_set_item_shortcut_disabled">void <strong>set_item_shortcut_disabled</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> disabled <strong>)</strong></paragraph>
            <paragraph>禁用索引为 <literal>index</literal> 的菜单项的 <reference internal="True" refuri="class_shortcut#class-shortcut"><inline classes="std std-ref">Shortcut</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-set-item-submenu"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-set-item-submenu" names="class_popupmenu_method_set_item_submenu">void <strong>set_item_submenu</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index, <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> submenu <strong>)</strong></paragraph>
            <paragraph>设置位于给定 <literal>index</literal> 的菜单项的子菜单。子菜单为点击该菜单项后应该显示的子 <strong>PopupMenu</strong> 节点的名称。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-set-item-text"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-set-item-text" names="class_popupmenu_method_set_item_text">void <strong>set_item_text</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index, <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> text <strong>)</strong></paragraph>
            <paragraph>设置索引为 <literal>index</literal> 的菜单项的文本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-set-item-text-direction"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-set-item-text-direction" names="class_popupmenu_method_set_item_text_direction">void <strong>set_item_text_direction</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index, <reference internal="True" refuri="class_control#enum-control-textdirection"><inline classes="std std-ref">TextDirection</inline></reference> direction <strong>)</strong></paragraph>
            <paragraph>设置项目文本的基础书写方向。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-set-item-tooltip"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-set-item-tooltip" names="class_popupmenu_method_set_item_tooltip">void <strong>set_item_tooltip</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index, <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> tooltip <strong>)</strong></paragraph>
            <paragraph>设置索引为 <literal>index</literal> 的菜单项的 <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> 工具提示。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-toggle-item-checked"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-toggle-item-checked" names="class_popupmenu_method_toggle_item_checked">void <strong>toggle_item_checked</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index <strong>)</strong></paragraph>
            <paragraph>切换索引为 <literal>index</literal> 的菜单项的选中状态。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-method-toggle-item-multistate"></target>
            <paragraph classes="classref-method" ids="class-popupmenu-method-toggle-item-multistate" names="class_popupmenu_method_toggle_item_multistate">void <strong>toggle_item_multistate</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index <strong>)</strong></paragraph>
            <paragraph>循环到一个多态项目的下一个状态。详情请参阅 <reference internal="True" refid="class-popupmenu-method-add-multistate-item"><inline classes="std std-ref">add_multistate_item</inline></reference>。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id8" names="主题属性说明">
            <title>主题属性说明</title>
            <target refid="class-popupmenu-theme-color-font-accelerator-color"></target>
            <paragraph classes="classref-themeproperty" ids="class-popupmenu-theme-color-font-accelerator-color" names="class_popupmenu_theme_color_font_accelerator_color"><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>font_accelerator_color</strong> = <literal>Color(0.7, 0.7, 0.7, 0.8)</literal></paragraph>
            <paragraph>文本 <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> 用于快捷键和加速器，当定义时显示在菜单项名称旁边。有关加速器的更多信息，请参阅 <reference internal="True" refid="class-popupmenu-method-get-item-accelerator"><inline classes="std std-ref">get_item_accelerator</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-theme-color-font-color"></target>
            <paragraph classes="classref-themeproperty" ids="class-popupmenu-theme-color-font-color" names="class_popupmenu_theme_color_font_color"><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>font_color</strong> = <literal>Color(0.875, 0.875, 0.875, 1)</literal></paragraph>
            <paragraph>菜单项名称的默认文本 <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-theme-color-font-disabled-color"></target>
            <paragraph classes="classref-themeproperty" ids="class-popupmenu-theme-color-font-disabled-color" names="class_popupmenu_theme_color_font_disabled_color"><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>font_disabled_color</strong> = <literal>Color(0.4, 0.4, 0.4, 0.8)</literal></paragraph>
            <paragraph>用于禁用菜单项的文本 <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-theme-color-font-hover-color"></target>
            <paragraph classes="classref-themeproperty" ids="class-popupmenu-theme-color-font-hover-color" names="class_popupmenu_theme_color_font_hover_color"><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>font_hover_color</strong> = <literal>Color(0.875, 0.875, 0.875, 1)</literal></paragraph>
            <paragraph>用于悬停文本的 <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-theme-color-font-outline-color"></target>
            <paragraph classes="classref-themeproperty" ids="class-popupmenu-theme-color-font-outline-color" names="class_popupmenu_theme_color_font_outline_color"><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>font_outline_color</strong> = <literal>Color(1, 1, 1, 1)</literal></paragraph>
            <paragraph>菜单项文本轮廓的色调。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-theme-color-font-separator-color"></target>
            <paragraph classes="classref-themeproperty" ids="class-popupmenu-theme-color-font-separator-color" names="class_popupmenu_theme_color_font_separator_color"><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>font_separator_color</strong> = <literal>Color(0.875, 0.875, 0.875, 1)</literal></paragraph>
            <paragraph>用于标注分隔符文本的颜色 <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference>。见 <reference internal="True" refid="class-popupmenu-method-add-separator"><inline classes="std std-ref">add_separator</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-theme-color-font-separator-outline-color"></target>
            <paragraph classes="classref-themeproperty" ids="class-popupmenu-theme-color-font-separator-outline-color" names="class_popupmenu_theme_color_font_separator_outline_color"><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>font_separator_outline_color</strong> = <literal>Color(1, 1, 1, 1)</literal></paragraph>
            <paragraph>带标签分隔符的文本轮廓的色调。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-theme-constant-h-separation"></target>
            <paragraph classes="classref-themeproperty" ids="class-popupmenu-theme-constant-h-separation" names="class_popupmenu_theme_constant_h_separation"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>h_separation</strong> = <literal>4</literal></paragraph>
            <paragraph>菜单项元素之间的水平间距。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-theme-constant-icon-max-width"></target>
            <paragraph classes="classref-themeproperty" ids="class-popupmenu-theme-constant-icon-max-width" names="class_popupmenu_theme_constant_icon_max_width"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>icon_max_width</strong> = <literal>0</literal></paragraph>
            <paragraph>菜单项图标所允许的最大宽度。这是在图标默认大小的基础上的限制，在 <reference internal="True" refid="class-popupmenu-method-set-item-icon-max-width"><inline classes="std std-ref">set_item_icon_max_width</inline></reference> 所设置的值之前生效。高度会根据图标的长宽比调整。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-theme-constant-indent"></target>
            <paragraph classes="classref-themeproperty" ids="class-popupmenu-theme-constant-indent" names="class_popupmenu_theme_constant_indent"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>indent</strong> = <literal>10</literal></paragraph>
            <paragraph>单个缩进级别的宽度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-theme-constant-item-end-padding"></target>
            <paragraph classes="classref-themeproperty" ids="class-popupmenu-theme-constant-item-end-padding" names="class_popupmenu_theme_constant_item_end_padding"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>item_end_padding</strong> = <literal>2</literal></paragraph>
            <paragraph>所有菜单项右侧的水平内边距（RTL 布局中为左侧）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-theme-constant-item-start-padding"></target>
            <paragraph classes="classref-themeproperty" ids="class-popupmenu-theme-constant-item-start-padding" names="class_popupmenu_theme_constant_item_start_padding"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>item_start_padding</strong> = <literal>2</literal></paragraph>
            <paragraph>所有菜单项左侧的水平内边距（RTL 布局中为右侧）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-theme-constant-outline-size"></target>
            <paragraph classes="classref-themeproperty" ids="class-popupmenu-theme-constant-outline-size" names="class_popupmenu_theme_constant_outline_size"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>outline_size</strong> = <literal>0</literal></paragraph>
            <paragraph>项目文本轮廓的大小。</paragraph>
            <paragraph><strong>注意：</strong>如果使用启用了 <reference internal="True" refuri="class_fontfile#class-fontfile-property-multichannel-signed-distance-field"><inline classes="std std-ref">FontFile.multichannel_signed_distance_field</inline></reference> 的字体，其 <reference internal="True" refuri="class_fontfile#class-fontfile-property-msdf-pixel-range"><inline classes="std std-ref">FontFile.msdf_pixel_range</inline></reference> 必须至少设置为 <reference internal="True" refid="class-popupmenu-theme-constant-outline-size"><inline classes="std std-ref">outline_size</inline></reference> 的<emphasis>两倍</emphasis>，轮廓渲染才能看起来正确。否则，轮廓可能会比预期的更早被切断。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-theme-constant-separator-outline-size"></target>
            <paragraph classes="classref-themeproperty" ids="class-popupmenu-theme-constant-separator-outline-size" names="class_popupmenu_theme_constant_separator_outline_size"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>separator_outline_size</strong> = <literal>0</literal></paragraph>
            <paragraph>带标签分隔符的文本轮廓的大小。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-theme-constant-v-separation"></target>
            <paragraph classes="classref-themeproperty" ids="class-popupmenu-theme-constant-v-separation" names="class_popupmenu_theme_constant_v_separation"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>v_separation</strong> = <literal>4</literal></paragraph>
            <paragraph>每个菜单项之间的垂直间距。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-theme-font-font"></target>
            <paragraph classes="classref-themeproperty" ids="class-popupmenu-theme-font-font" names="class_popupmenu_theme_font_font"><reference internal="True" refuri="class_font#class-font"><inline classes="std std-ref">Font</inline></reference> <strong>font</strong></paragraph>
            <paragraph>用于菜单项的 <reference internal="True" refuri="class_font#class-font"><inline classes="std std-ref">Font</inline></reference> 字体。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-theme-font-font-separator"></target>
            <paragraph classes="classref-themeproperty" ids="class-popupmenu-theme-font-font-separator" names="class_popupmenu_theme_font_font_separator"><reference internal="True" refuri="class_font#class-font"><inline classes="std std-ref">Font</inline></reference> <strong>font_separator</strong></paragraph>
            <paragraph>用于带文字分隔线的 <reference internal="True" refuri="class_font#class-font"><inline classes="std std-ref">Font</inline></reference> 字体。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-theme-font-size-font-separator-size"></target>
            <paragraph classes="classref-themeproperty" ids="class-popupmenu-theme-font-size-font-separator-size" names="class_popupmenu_theme_font_size_font_separator_size"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>font_separator_size</strong></paragraph>
            <paragraph>带标签分隔符的字体大小。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-theme-font-size-font-size"></target>
            <paragraph classes="classref-themeproperty" ids="class-popupmenu-theme-font-size-font-size" names="class_popupmenu_theme_font_size_font_size"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>font_size</strong></paragraph>
            <paragraph>菜单项的字体大小。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-theme-icon-checked"></target>
            <paragraph classes="classref-themeproperty" ids="class-popupmenu-theme-icon-checked" names="class_popupmenu_theme_icon_checked"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>checked</strong></paragraph>
            <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> 图标，用于处于选中状态的复选项。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-theme-icon-checked-disabled"></target>
            <paragraph classes="classref-themeproperty" ids="class-popupmenu-theme-icon-checked-disabled" names="class_popupmenu_theme_icon_checked_disabled"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>checked_disabled</strong></paragraph>
            <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> 图标，用于处于选中状态的已禁用复选项。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-theme-icon-radio-checked"></target>
            <paragraph classes="classref-themeproperty" ids="class-popupmenu-theme-icon-radio-checked" names="class_popupmenu_theme_icon_radio_checked"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>radio_checked</strong></paragraph>
            <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> 图标，用于处于选中状态的单选项。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-theme-icon-radio-checked-disabled"></target>
            <paragraph classes="classref-themeproperty" ids="class-popupmenu-theme-icon-radio-checked-disabled" names="class_popupmenu_theme_icon_radio_checked_disabled"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>radio_checked_disabled</strong></paragraph>
            <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> 图标，用于处于选中状态的已禁用单选项。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-theme-icon-radio-unchecked"></target>
            <paragraph classes="classref-themeproperty" ids="class-popupmenu-theme-icon-radio-unchecked" names="class_popupmenu_theme_icon_radio_unchecked"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>radio_unchecked</strong></paragraph>
            <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> 图标，用于处于未选状态的单选项。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-theme-icon-radio-unchecked-disabled"></target>
            <paragraph classes="classref-themeproperty" ids="class-popupmenu-theme-icon-radio-unchecked-disabled" names="class_popupmenu_theme_icon_radio_unchecked_disabled"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>radio_unchecked_disabled</strong></paragraph>
            <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> 图标，用于处于未选状态的已禁用单选项。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-theme-icon-submenu"></target>
            <paragraph classes="classref-themeproperty" ids="class-popupmenu-theme-icon-submenu" names="class_popupmenu_theme_icon_submenu"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>submenu</strong></paragraph>
            <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> 图标，用于子菜单箭头（用于从左至右布局）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-theme-icon-submenu-mirrored"></target>
            <paragraph classes="classref-themeproperty" ids="class-popupmenu-theme-icon-submenu-mirrored" names="class_popupmenu_theme_icon_submenu_mirrored"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>submenu_mirrored</strong></paragraph>
            <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> 图标，用于子菜单箭头（用于从右至左布局）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-theme-icon-unchecked"></target>
            <paragraph classes="classref-themeproperty" ids="class-popupmenu-theme-icon-unchecked" names="class_popupmenu_theme_icon_unchecked"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>unchecked</strong></paragraph>
            <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> 图标，用于处于未选状态的复选项。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-theme-icon-unchecked-disabled"></target>
            <paragraph classes="classref-themeproperty" ids="class-popupmenu-theme-icon-unchecked-disabled" names="class_popupmenu_theme_icon_unchecked_disabled"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>unchecked_disabled</strong></paragraph>
            <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> 图标，用于处于未选状态的已禁用复选项。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-theme-style-hover"></target>
            <paragraph classes="classref-themeproperty" ids="class-popupmenu-theme-style-hover" names="class_popupmenu_theme_style_hover"><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference> <strong>hover</strong></paragraph>
            <paragraph>当 <strong>PopupMenu</strong> 菜单项被悬停时显示的 <reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-theme-style-labeled-separator-left"></target>
            <paragraph classes="classref-themeproperty" ids="class-popupmenu-theme-style-labeled-separator-left" names="class_popupmenu_theme_style_labeled_separator_left"><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference> <strong>labeled_separator_left</strong></paragraph>
            <paragraph>用于标签分隔器的左侧 <reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference>。请参阅 <reference internal="True" refid="class-popupmenu-method-add-separator"><inline classes="std std-ref">add_separator</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-theme-style-labeled-separator-right"></target>
            <paragraph classes="classref-themeproperty" ids="class-popupmenu-theme-style-labeled-separator-right" names="class_popupmenu_theme_style_labeled_separator_right"><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference> <strong>labeled_separator_right</strong></paragraph>
            <paragraph>用于标签分隔器的右侧 <reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference>。请参阅 <reference internal="True" refid="class-popupmenu-method-add-separator"><inline classes="std std-ref">add_separator</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-popupmenu-theme-style-separator"></target>
            <paragraph classes="classref-themeproperty" ids="class-popupmenu-theme-style-separator" names="class_popupmenu_theme_style_separator"><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference> <strong>separator</strong></paragraph>
            <paragraph>用于分隔符的 <reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference>。请参阅 <reference internal="True" refid="class-popupmenu-method-add-separator"><inline classes="std std-ref">add_separator</inline></reference>。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，所以可以直接使用类名调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

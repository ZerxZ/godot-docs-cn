<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_gltfbufferview.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/modules/gltf/doc_classes/GLTFBufferView.xml.</comment>
    <target refid="class-gltfbufferview"></target>
    <section ids="gltfbufferview class-gltfbufferview" names="gltfbufferview class_gltfbufferview">
        <title>GLTFBufferView</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>代表 GLTF 缓冲区视图。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>GLTFBufferView 是一个表示 GLTF 的数据结构，一个可以在 <literal>"bufferViews"</literal> 数组中找到的 <literal>bufferView</literal>。缓冲区是二进制数据的 blob。缓冲区视图是缓冲区的一个切片，可用于识别缓冲区并从缓冲区中提取数据。</paragraph>
            <paragraph>大多数缓冲区的自定义用途只需要使用 <reference internal="True" refid="class-gltfbufferview-property-buffer"><inline classes="std std-ref">buffer</inline></reference>、<reference internal="True" refid="class-gltfbufferview-property-byte-length"><inline classes="std std-ref">byte_length</inline></reference> 和 <reference internal="True" refid="class-gltfbufferview-property-byte-offset"><inline classes="std std-ref">byte_offset</inline></reference>。<reference internal="True" refid="class-gltfbufferview-property-byte-stride"><inline classes="std std-ref">byte_stride</inline></reference> 和 <reference internal="True" refid="class-gltfbufferview-property-indices"><inline classes="std std-ref">indices</inline></reference> 属性适用于更高级的用例，例如为 GPU 编码的交错网格数据。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference name="Khronos glTF 规范中的缓冲区、BufferView 和访问器" refuri="https://github.com/KhronosGroup/glTF-Tutorials/blob/master/gltfTutorial/gltfTutorial_005_BuffersBufferViewsAccessors.md">Khronos glTF 规范中的缓冲区、BufferView 和访问器</reference></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="../tutorials/io/runtime_file_loading_and_saving"><inline classes="doc">运行时文件加载与保存</inline></reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="25"></colspec>
                    <colspec colwidth="75"></colspec>
                    <colspec colwidth="11"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gltfbufferview-property-buffer"><inline classes="std std-ref">buffer</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>-1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gltfbufferview-property-byte-length"><inline classes="std std-ref">byte_length</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gltfbufferview-property-byte-offset"><inline classes="std std-ref">byte_offset</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gltfbufferview-property-byte-stride"><inline classes="std std-ref">byte_stride</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>-1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gltfbufferview-property-indices"><inline classes="std std-ref">indices</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gltfbufferview-property-vertex-attributes"><inline classes="std std-ref">vertex_attributes</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id4" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="47"></colspec>
                    <colspec colwidth="138"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_packedbytearray#class-packedbytearray"><inline classes="std std-ref">PackedByteArray</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gltfbufferview-method-load-buffer-view-data"><inline classes="std std-ref">load_buffer_view_data</inline></reference>(state: <reference internal="True" refuri="class_gltfstate#class-gltfstate"><inline classes="std std-ref">GLTFState</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="属性说明">
            <title>属性说明</title>
            <target refid="class-gltfbufferview-property-buffer"></target>
            <paragraph classes="classref-property" ids="class-gltfbufferview-property-buffer" names="class_gltfbufferview_property_buffer"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>buffer</strong> = <literal>-1</literal> <reference internal="True" refid="class-gltfbufferview-property-buffer"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_buffer</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_buffer</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>这个缓冲视图所引用的缓冲索引。如果为 <literal>-1</literal>，则这个缓冲视图并没有引用任何缓冲。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gltfbufferview-property-byte-length"></target>
            <paragraph classes="classref-property" ids="class-gltfbufferview-property-byte-length" names="class_gltfbufferview_property_byte_length"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>byte_length</strong> = <literal>0</literal> <reference internal="True" refid="class-gltfbufferview-property-byte-length"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_byte_length</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_byte_length</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>这个缓冲视图的长度，单位为字节。如果为 <literal>0</literal>，则这个缓冲视图为空。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gltfbufferview-property-byte-offset"></target>
            <paragraph classes="classref-property" ids="class-gltfbufferview-property-byte-offset" names="class_gltfbufferview_property_byte_offset"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>byte_offset</strong> = <literal>0</literal> <reference internal="True" refid="class-gltfbufferview-property-byte-offset"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_byte_offset</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_byte_offset</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>这个缓冲视图的起点相对于缓冲起点的偏移量，单位为字节。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gltfbufferview-property-byte-stride"></target>
            <paragraph classes="classref-property" ids="class-gltfbufferview-property-byte-stride" names="class_gltfbufferview_property_byte_stride"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>byte_stride</strong> = <literal>-1</literal> <reference internal="True" refid="class-gltfbufferview-property-byte-stride"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_byte_stride</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_byte_stride</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>交错数据的步幅，单位为字节。如果为 <literal>-1</literal>，则这个缓冲视图不是交错的。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gltfbufferview-property-indices"></target>
            <paragraph classes="classref-property" ids="class-gltfbufferview-property-indices" names="class_gltfbufferview_property_indices"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>indices</strong> = <literal>false</literal> <reference internal="True" refid="class-gltfbufferview-property-indices"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_indices</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_indices</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>True if the GLTFBufferView's OpenGL GPU buffer type is an <literal>ELEMENT_ARRAY_BUFFER</literal> used for vertex indices (integer constant <literal>34963</literal>). False if the buffer type is any other value. See <reference name="Buffers, BufferViews, and Accessors" refuri="https://github.com/KhronosGroup/glTF-Tutorials/blob/master/gltfTutorial/gltfTutorial_005_BuffersBufferViewsAccessors.md">Buffers, BufferViews, and Accessors</reference> for possible values. This property is set on import and used on export.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gltfbufferview-property-vertex-attributes"></target>
            <paragraph classes="classref-property" ids="class-gltfbufferview-property-vertex-attributes" names="class_gltfbufferview_property_vertex_attributes"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>vertex_attributes</strong> = <literal>false</literal> <reference internal="True" refid="class-gltfbufferview-property-vertex-attributes"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_vertex_attributes</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_vertex_attributes</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>True if the GLTFBufferView's OpenGL GPU buffer type is an <literal>ARRAY_BUFFER</literal> used for vertex attributes (integer constant <literal>34962</literal>). False if the buffer type is any other value. See <reference name="Buffers, BufferViews, and Accessors" refuri="https://github.com/KhronosGroup/glTF-Tutorials/blob/master/gltfTutorial/gltfTutorial_005_BuffersBufferViewsAccessors.md">Buffers, BufferViews, and Accessors</reference> for possible values. This property is set on import and used on export.</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="方法说明">
            <title>方法说明</title>
            <target refid="class-gltfbufferview-method-load-buffer-view-data"></target>
            <paragraph classes="classref-method" ids="class-gltfbufferview-method-load-buffer-view-data" names="class_gltfbufferview_method_load_buffer_view_data"><reference internal="True" refuri="class_packedbytearray#class-packedbytearray"><inline classes="std std-ref">PackedByteArray</inline></reference> <strong>load_buffer_view_data</strong>(state: <reference internal="True" refuri="class_gltfstate#class-gltfstate"><inline classes="std std-ref">GLTFState</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-gltfbufferview-method-load-buffer-view-data"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>从给定 <reference internal="True" refuri="class_gltfstate#class-gltfstate"><inline classes="std std-ref">GLTFState</inline></reference> 中该缓冲区视图引用的缓冲区加载缓冲区视图数据。该方法尚不支持具有字节步幅的交错数据。数据以 <reference internal="True" refuri="class_packedbytearray#class-packedbytearray"><inline classes="std std-ref">PackedByteArray</inline></reference> 形式返回。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_visualshadernodegroupbase.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/VisualShaderNodeGroupBase.xml.</comment>
    <target refid="class-visualshadernodegroupbase"></target>
    <section ids="visualshadernodegroupbase class-visualshadernodegroupbase" names="visualshadernodegroupbase class_visualshadernodegroupbase">
        <title>VisualShaderNodeGroupBase</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_visualshadernoderesizablebase#class-visualshadernoderesizablebase"><inline classes="std std-ref">VisualShaderNodeResizableBase</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_visualshadernode#class-visualshadernode"><inline classes="std std-ref">VisualShaderNode</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph><strong>派生：</strong> <reference internal="True" refuri="class_visualshadernodeexpression#class-visualshadernodeexpression"><inline classes="std std-ref">VisualShaderNodeExpression</inline></reference></paragraph>
        <paragraph>可视化着色器图中，具有可变数量的输入和输出端口的系列节点的基类。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>目前，没有直接使用，而用派生类代替。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="29"></colspec>
                    <colspec colwidth="180"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-visualshadernodegroupbase-method-add-input-port"><inline classes="std std-ref">add_input_port</inline></reference>(id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, type: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-visualshadernodegroupbase-method-add-output-port"><inline classes="std std-ref">add_output_port</inline></reference>(id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, type: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-visualshadernodegroupbase-method-clear-input-ports"><inline classes="std std-ref">clear_input_ports</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-visualshadernodegroupbase-method-clear-output-ports"><inline classes="std std-ref">clear_output_ports</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-visualshadernodegroupbase-method-get-free-input-port-id"><inline classes="std std-ref">get_free_input_port_id</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-visualshadernodegroupbase-method-get-free-output-port-id"><inline classes="std std-ref">get_free_output_port_id</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-visualshadernodegroupbase-method-get-input-port-count"><inline classes="std std-ref">get_input_port_count</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-visualshadernodegroupbase-method-get-inputs"><inline classes="std std-ref">get_inputs</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-visualshadernodegroupbase-method-get-output-port-count"><inline classes="std std-ref">get_output_port_count</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-visualshadernodegroupbase-method-get-outputs"><inline classes="std std-ref">get_outputs</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-visualshadernodegroupbase-method-has-input-port"><inline classes="std std-ref">has_input_port</inline></reference>(id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-visualshadernodegroupbase-method-has-output-port"><inline classes="std std-ref">has_output_port</inline></reference>(id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-visualshadernodegroupbase-method-is-valid-port-name"><inline classes="std std-ref">is_valid_port_name</inline></reference>(name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-visualshadernodegroupbase-method-remove-input-port"><inline classes="std std-ref">remove_input_port</inline></reference>(id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-visualshadernodegroupbase-method-remove-output-port"><inline classes="std std-ref">remove_output_port</inline></reference>(id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-visualshadernodegroupbase-method-set-input-port-name"><inline classes="std std-ref">set_input_port_name</inline></reference>(id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-visualshadernodegroupbase-method-set-input-port-type"><inline classes="std std-ref">set_input_port_type</inline></reference>(id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, type: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-visualshadernodegroupbase-method-set-inputs"><inline classes="std std-ref">set_inputs</inline></reference>(inputs: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-visualshadernodegroupbase-method-set-output-port-name"><inline classes="std std-ref">set_output_port_name</inline></reference>(id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-visualshadernodegroupbase-method-set-output-port-type"><inline classes="std std-ref">set_output_port_type</inline></reference>(id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, type: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-visualshadernodegroupbase-method-set-outputs"><inline classes="std std-ref">set_outputs</inline></reference>(outputs: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>)</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="方法说明">
            <title>方法说明</title>
            <target refid="class-visualshadernodegroupbase-method-add-input-port"></target>
            <paragraph classes="classref-method" ids="class-visualshadernodegroupbase-method-add-input-port" names="class_visualshadernodegroupbase_method_add_input_port"><abbreviation explanation="无返回值。">void</abbreviation> <strong>add_input_port</strong>(id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, type: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <reference internal="True" refid="class-visualshadernodegroupbase-method-add-input-port"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>添加具有指定类型 <literal>type</literal> 和名称 <literal>name</literal> 的输入端口（见 <reference internal="True" refuri="class_visualshadernode#enum-visualshadernode-porttype"><inline classes="std std-ref">PortType</inline></reference>）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-visualshadernodegroupbase-method-add-output-port"></target>
            <paragraph classes="classref-method" ids="class-visualshadernodegroupbase-method-add-output-port" names="class_visualshadernodegroupbase_method_add_output_port"><abbreviation explanation="无返回值。">void</abbreviation> <strong>add_output_port</strong>(id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, type: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <reference internal="True" refid="class-visualshadernodegroupbase-method-add-output-port"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>添加具有指定类型 <literal>type</literal> 和名称 <literal>name</literal> 的输出端口（见 <reference internal="True" refuri="class_visualshadernode#enum-visualshadernode-porttype"><inline classes="std std-ref">PortType</inline></reference>）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-visualshadernodegroupbase-method-clear-input-ports"></target>
            <paragraph classes="classref-method" ids="class-visualshadernodegroupbase-method-clear-input-ports" names="class_visualshadernodegroupbase_method_clear_input_ports"><abbreviation explanation="无返回值。">void</abbreviation> <strong>clear_input_ports</strong>() <reference internal="True" refid="class-visualshadernodegroupbase-method-clear-input-ports"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>移除所有先前指定的输入端口。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-visualshadernodegroupbase-method-clear-output-ports"></target>
            <paragraph classes="classref-method" ids="class-visualshadernodegroupbase-method-clear-output-ports" names="class_visualshadernodegroupbase_method_clear_output_ports"><abbreviation explanation="无返回值。">void</abbreviation> <strong>clear_output_ports</strong>() <reference internal="True" refid="class-visualshadernodegroupbase-method-clear-output-ports"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>移除所有先前指定的输出端口。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-visualshadernodegroupbase-method-get-free-input-port-id"></target>
            <paragraph classes="classref-method" ids="class-visualshadernodegroupbase-method-get-free-input-port-id" names="class_visualshadernodegroupbase_method_get_free_input_port_id"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_free_input_port_id</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-visualshadernodegroupbase-method-get-free-input-port-id"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回一个空闲的输入端口 ID，可以在 <reference internal="True" refid="class-visualshadernodegroupbase-method-add-input-port"><inline classes="std std-ref">add_input_port</inline></reference> 中使用。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-visualshadernodegroupbase-method-get-free-output-port-id"></target>
            <paragraph classes="classref-method" ids="class-visualshadernodegroupbase-method-get-free-output-port-id" names="class_visualshadernodegroupbase_method_get_free_output_port_id"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_free_output_port_id</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-visualshadernodegroupbase-method-get-free-output-port-id"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回一个空闲的输出端口 ID，可以在 <reference internal="True" refid="class-visualshadernodegroupbase-method-add-output-port"><inline classes="std std-ref">add_output_port</inline></reference> 中使用。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-visualshadernodegroupbase-method-get-input-port-count"></target>
            <paragraph classes="classref-method" ids="class-visualshadernodegroupbase-method-get-input-port-count" names="class_visualshadernodegroupbase_method_get_input_port_count"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_input_port_count</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-visualshadernodegroupbase-method-get-input-port-count"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回正在使用的输入端口的数量。替代<reference internal="True" refid="class-visualshadernodegroupbase-method-get-free-input-port-id"><inline classes="std std-ref">get_free_input_port_id</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-visualshadernodegroupbase-method-get-inputs"></target>
            <paragraph classes="classref-method" ids="class-visualshadernodegroupbase-method-get-inputs" names="class_visualshadernodegroupbase_method_get_inputs"><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>get_inputs</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-visualshadernodegroupbase-method-get-inputs"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回输入端口的<reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>描述，是一个用冒号分隔的列表，格式为<literal>id,type,name;</literal>，参阅<reference internal="True" refid="class-visualshadernodegroupbase-method-add-input-port"><inline classes="std std-ref">add_input_port</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-visualshadernodegroupbase-method-get-output-port-count"></target>
            <paragraph classes="classref-method" ids="class-visualshadernodegroupbase-method-get-output-port-count" names="class_visualshadernodegroupbase_method_get_output_port_count"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_output_port_count</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-visualshadernodegroupbase-method-get-output-port-count"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回正在使用的输出端口的数量。替代<reference internal="True" refid="class-visualshadernodegroupbase-method-get-free-output-port-id"><inline classes="std std-ref">get_free_output_port_id</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-visualshadernodegroupbase-method-get-outputs"></target>
            <paragraph classes="classref-method" ids="class-visualshadernodegroupbase-method-get-outputs" names="class_visualshadernodegroupbase_method_get_outputs"><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>get_outputs</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-visualshadernodegroupbase-method-get-outputs"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回输出端口的<reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>描述，作为一个用冒号分隔的列表，格式为<literal>id,type,name;</literal>，参阅<reference internal="True" refid="class-visualshadernodegroupbase-method-add-output-port"><inline classes="std std-ref">add_output_port</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-visualshadernodegroupbase-method-has-input-port"></target>
            <paragraph classes="classref-method" ids="class-visualshadernodegroupbase-method-has-input-port" names="class_visualshadernodegroupbase_method_has_input_port"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>has_input_port</strong>(id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-visualshadernodegroupbase-method-has-input-port"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果指定的输入端口存在，返回 <literal>true</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-visualshadernodegroupbase-method-has-output-port"></target>
            <paragraph classes="classref-method" ids="class-visualshadernodegroupbase-method-has-output-port" names="class_visualshadernodegroupbase_method_has_output_port"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>has_output_port</strong>(id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-visualshadernodegroupbase-method-has-output-port"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果指定的输出端口存在，返回 <literal>true</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-visualshadernodegroupbase-method-is-valid-port-name"></target>
            <paragraph classes="classref-method" ids="class-visualshadernodegroupbase-method-is-valid-port-name" names="class_visualshadernodegroupbase_method_is_valid_port_name"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_valid_port_name</strong>(name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-visualshadernodegroupbase-method-is-valid-port-name"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果指定的端口名称没有覆盖现有的端口名称，并且在着色器中有效，则返回 <literal>true</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-visualshadernodegroupbase-method-remove-input-port"></target>
            <paragraph classes="classref-method" ids="class-visualshadernodegroupbase-method-remove-input-port" names="class_visualshadernodegroupbase_method_remove_input_port"><abbreviation explanation="无返回值。">void</abbreviation> <strong>remove_input_port</strong>(id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-visualshadernodegroupbase-method-remove-input-port"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>移除指定的输入端口。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-visualshadernodegroupbase-method-remove-output-port"></target>
            <paragraph classes="classref-method" ids="class-visualshadernodegroupbase-method-remove-output-port" names="class_visualshadernodegroupbase_method_remove_output_port"><abbreviation explanation="无返回值。">void</abbreviation> <strong>remove_output_port</strong>(id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-visualshadernodegroupbase-method-remove-output-port"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>移除指定的输出端口。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-visualshadernodegroupbase-method-set-input-port-name"></target>
            <paragraph classes="classref-method" ids="class-visualshadernodegroupbase-method-set-input-port-name" names="class_visualshadernodegroupbase_method_set_input_port_name"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_input_port_name</strong>(id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <reference internal="True" refid="class-visualshadernodegroupbase-method-set-input-port-name"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>重命名指定的输入端口。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-visualshadernodegroupbase-method-set-input-port-type"></target>
            <paragraph classes="classref-method" ids="class-visualshadernodegroupbase-method-set-input-port-type" names="class_visualshadernodegroupbase_method_set_input_port_type"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_input_port_type</strong>(id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, type: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-visualshadernodegroupbase-method-set-input-port-type"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置指定的输入端口的类型，参阅<reference internal="True" refuri="class_visualshadernode#enum-visualshadernode-porttype"><inline classes="std std-ref">PortType</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-visualshadernodegroupbase-method-set-inputs"></target>
            <paragraph classes="classref-method" ids="class-visualshadernodegroupbase-method-set-inputs" names="class_visualshadernodegroupbase_method_set_inputs"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_inputs</strong>(inputs: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <reference internal="True" refid="class-visualshadernodegroupbase-method-set-inputs"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>使用一个<reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>格式的以冒号分隔的列表来定义所有输入端口:<literal>id,type,name;</literal>，参阅<reference internal="True" refid="class-visualshadernodegroupbase-method-add-input-port"><inline classes="std std-ref">add_input_port</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-visualshadernodegroupbase-method-set-output-port-name"></target>
            <paragraph classes="classref-method" ids="class-visualshadernodegroupbase-method-set-output-port-name" names="class_visualshadernodegroupbase_method_set_output_port_name"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_output_port_name</strong>(id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <reference internal="True" refid="class-visualshadernodegroupbase-method-set-output-port-name"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>重命名指定的输出端口。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-visualshadernodegroupbase-method-set-output-port-type"></target>
            <paragraph classes="classref-method" ids="class-visualshadernodegroupbase-method-set-output-port-type" names="class_visualshadernodegroupbase_method_set_output_port_type"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_output_port_type</strong>(id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, type: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-visualshadernodegroupbase-method-set-output-port-type"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置指定输出端口的类型，参阅<reference internal="True" refuri="class_visualshadernode#enum-visualshadernode-porttype"><inline classes="std std-ref">PortType</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-visualshadernodegroupbase-method-set-outputs"></target>
            <paragraph classes="classref-method" ids="class-visualshadernodegroupbase-method-set-outputs" names="class_visualshadernodegroupbase_method_set_outputs"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_outputs</strong>(outputs: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <reference internal="True" refid="class-visualshadernodegroupbase-method-set-outputs"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>使用一个<reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>格式的以冒号分隔的列表来定义所有输出端口: <literal>id,type,name;</literal> ，参阅<reference internal="True" refid="class-visualshadernodegroupbase-method-add-output-port"><inline classes="std std-ref">add_output_port</inline></reference>。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

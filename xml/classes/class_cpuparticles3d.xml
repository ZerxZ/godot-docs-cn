<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_cpuparticles3d.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/CPUParticles3D.xml.</comment>
    <target refid="class-cpuparticles3d"></target>
    <section ids="cpuparticles3d class-cpuparticles3d" names="cpuparticles3d class_cpuparticles3d">
        <title>CPUParticles3D</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_geometryinstance3d#class-geometryinstance3d"><inline classes="std std-ref">GeometryInstance3D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_visualinstance3d#class-visualinstance3d"><inline classes="std std-ref">VisualInstance3D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node3d#class-node3d"><inline classes="std std-ref">Node3D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>基于 CPU 的 3D 粒子发射器。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>基于 CPU 的 3D 粒子节点，可用于创建各种粒子系统、粒子效果。</paragraph>
            <paragraph>另见 <reference internal="True" refuri="class_gpuparticles3d#class-gpuparticles3d"><inline classes="std std-ref">GPUParticles3D</inline></reference>，利用硬件加速提供了相同的功能，但可能无法在较旧的设备上运行。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference internal="True" refuri="../tutorials/3d/particles/index"><inline classes="doc">粒子系统（3D）</inline></reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="57"></colspec>
                    <colspec colwidth="93"></colspec>
                    <colspec colwidth="28"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-amount"><inline classes="std std-ref">amount</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>8</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-angle-curve"><inline classes="std std-ref">angle_curve</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-angle-max"><inline classes="std std-ref">angle_max</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-angle-min"><inline classes="std std-ref">angle_min</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-angular-velocity-curve"><inline classes="std std-ref">angular_velocity_curve</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-angular-velocity-max"><inline classes="std std-ref">angular_velocity_max</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-angular-velocity-min"><inline classes="std std-ref">angular_velocity_min</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-anim-offset-curve"><inline classes="std std-ref">anim_offset_curve</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-anim-offset-max"><inline classes="std std-ref">anim_offset_max</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-anim-offset-min"><inline classes="std std-ref">anim_offset_min</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-anim-speed-curve"><inline classes="std std-ref">anim_speed_curve</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-anim-speed-max"><inline classes="std std-ref">anim_speed_max</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-anim-speed-min"><inline classes="std std-ref">anim_speed_min</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-color"><inline classes="std std-ref">color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Color(1, 1, 1, 1)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_gradient#class-gradient"><inline classes="std std-ref">Gradient</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-color-initial-ramp"><inline classes="std std-ref">color_initial_ramp</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_gradient#class-gradient"><inline classes="std std-ref">Gradient</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-color-ramp"><inline classes="std std-ref">color_ramp</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-damping-curve"><inline classes="std std-ref">damping_curve</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-damping-max"><inline classes="std std-ref">damping_max</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-damping-min"><inline classes="std std-ref">damping_min</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-direction"><inline classes="std std-ref">direction</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Vector3(1, 0, 0)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-cpuparticles3d-draworder"><inline classes="std std-ref">DrawOrder</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-draw-order"><inline classes="std std-ref">draw_order</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-emission-box-extents"><inline classes="std std-ref">emission_box_extents</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_packedcolorarray#class-packedcolorarray"><inline classes="std std-ref">PackedColorArray</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-emission-colors"><inline classes="std std-ref">emission_colors</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>PackedColorArray()</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_packedvector3array#class-packedvector3array"><inline classes="std std-ref">PackedVector3Array</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-emission-normals"><inline classes="std std-ref">emission_normals</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_packedvector3array#class-packedvector3array"><inline classes="std std-ref">PackedVector3Array</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-emission-points"><inline classes="std std-ref">emission_points</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-emission-ring-axis"><inline classes="std std-ref">emission_ring_axis</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-emission-ring-height"><inline classes="std std-ref">emission_ring_height</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-emission-ring-inner-radius"><inline classes="std std-ref">emission_ring_inner_radius</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-emission-ring-radius"><inline classes="std std-ref">emission_ring_radius</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-cpuparticles3d-emissionshape"><inline classes="std std-ref">EmissionShape</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-emission-shape"><inline classes="std std-ref">emission_shape</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-emission-sphere-radius"><inline classes="std std-ref">emission_sphere_radius</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-emitting"><inline classes="std std-ref">emitting</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-explosiveness"><inline classes="std std-ref">explosiveness</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-fixed-fps"><inline classes="std std-ref">fixed_fps</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-flatness"><inline classes="std std-ref">flatness</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-fract-delta"><inline classes="std std-ref">fract_delta</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-gravity"><inline classes="std std-ref">gravity</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Vector3(0, -9.8, 0)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-hue-variation-curve"><inline classes="std std-ref">hue_variation_curve</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-hue-variation-max"><inline classes="std std-ref">hue_variation_max</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-hue-variation-min"><inline classes="std std-ref">hue_variation_min</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-initial-velocity-max"><inline classes="std std-ref">initial_velocity_max</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-initial-velocity-min"><inline classes="std std-ref">initial_velocity_min</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-lifetime"><inline classes="std std-ref">lifetime</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-lifetime-randomness"><inline classes="std std-ref">lifetime_randomness</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-linear-accel-curve"><inline classes="std std-ref">linear_accel_curve</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-linear-accel-max"><inline classes="std std-ref">linear_accel_max</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-linear-accel-min"><inline classes="std std-ref">linear_accel_min</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-local-coords"><inline classes="std std-ref">local_coords</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_mesh#class-mesh"><inline classes="std std-ref">Mesh</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-mesh"><inline classes="std std-ref">mesh</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-one-shot"><inline classes="std std-ref">one_shot</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-orbit-velocity-curve"><inline classes="std std-ref">orbit_velocity_curve</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-orbit-velocity-max"><inline classes="std std-ref">orbit_velocity_max</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-orbit-velocity-min"><inline classes="std std-ref">orbit_velocity_min</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-particle-flag-align-y"><inline classes="std std-ref">particle_flag_align_y</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-particle-flag-disable-z"><inline classes="std std-ref">particle_flag_disable_z</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-particle-flag-rotate-y"><inline classes="std std-ref">particle_flag_rotate_y</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-preprocess"><inline classes="std std-ref">preprocess</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-radial-accel-curve"><inline classes="std std-ref">radial_accel_curve</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-radial-accel-max"><inline classes="std std-ref">radial_accel_max</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-radial-accel-min"><inline classes="std std-ref">radial_accel_min</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-randomness"><inline classes="std std-ref">randomness</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-scale-amount-curve"><inline classes="std std-ref">scale_amount_curve</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-scale-amount-max"><inline classes="std std-ref">scale_amount_max</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-scale-amount-min"><inline classes="std std-ref">scale_amount_min</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-scale-curve-x"><inline classes="std std-ref">scale_curve_x</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-scale-curve-y"><inline classes="std std-ref">scale_curve_y</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-scale-curve-z"><inline classes="std std-ref">scale_curve_z</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-speed-scale"><inline classes="std std-ref">speed_scale</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-split-scale"><inline classes="std std-ref">split_scale</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-spread"><inline classes="std std-ref">spread</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>45.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-tangential-accel-curve"><inline classes="std std-ref">tangential_accel_curve</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-tangential-accel-max"><inline classes="std std-ref">tangential_accel_max</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-tangential-accel-min"><inline classes="std std-ref">tangential_accel_min</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_aabb#class-aabb"><inline classes="std std-ref">AABB</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-property-visibility-aabb"><inline classes="std std-ref">visibility_aabb</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>AABB(0, 0, 0, 0, 0, 0)</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id4" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="27"></colspec>
                    <colspec colwidth="186"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-method-convert-from-particles"><inline classes="std std-ref">convert_from_particles</inline></reference>(particles: <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-method-get-param-curve"><inline classes="std std-ref">get_param_curve</inline></reference>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-method-get-param-max"><inline classes="std std-ref">get_param_max</inline></reference>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-method-get-param-min"><inline classes="std std-ref">get_param_min</inline></reference>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-method-get-particle-flag"><inline classes="std std-ref">get_particle_flag</inline></reference>(particle_flag: <reference internal="True" refid="enum-cpuparticles3d-particleflags"><inline classes="std std-ref">ParticleFlags</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-method-restart"><inline classes="std std-ref">restart</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-method-set-param-curve"><inline classes="std std-ref">set_param_curve</inline></reference>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>, curve: <reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-method-set-param-max"><inline classes="std std-ref">set_param_max</inline></reference>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-method-set-param-min"><inline classes="std std-ref">set_param_min</inline></reference>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cpuparticles3d-method-set-particle-flag"><inline classes="std std-ref">set_particle_flag</inline></reference>(particle_flag: <reference internal="True" refid="enum-cpuparticles3d-particleflags"><inline classes="std std-ref">ParticleFlags</inline></reference>, enable: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="信号">
            <title>信号</title>
            <target refid="class-cpuparticles3d-signal-finished"></target>
            <paragraph classes="classref-signal" ids="class-cpuparticles3d-signal-finished" names="class_cpuparticles3d_signal_finished"><strong>finished</strong>() <reference internal="True" refid="class-cpuparticles3d-signal-finished"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当所有活动粒子完成处理时发出。当 <reference internal="True" refid="class-cpuparticles3d-property-one-shot"><inline classes="std std-ref">one_shot</inline></reference> 被禁用时，粒子将连续处理，因此它永远不会触发。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="枚举">
            <title>枚举</title>
            <target refid="enum-cpuparticles3d-draworder"></target>
            <paragraph classes="classref-enumeration" ids="enum-cpuparticles3d-draworder" names="enum_cpuparticles3d_draworder">enum <strong>DrawOrder</strong>: <reference internal="True" refid="enum-cpuparticles3d-draworder"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-cpuparticles3d-constant-draw-order-index"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-cpuparticles3d-constant-draw-order-index" names="class_cpuparticles3d_constant_draw_order_index"><reference internal="True" refid="enum-cpuparticles3d-draworder"><inline classes="std std-ref">DrawOrder</inline></reference> <strong>DRAW_ORDER_INDEX</strong> = <literal>0</literal></paragraph>
            <paragraph>粒子按发射顺序绘制。</paragraph>
            <target refid="class-cpuparticles3d-constant-draw-order-lifetime"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-cpuparticles3d-constant-draw-order-lifetime" names="class_cpuparticles3d_constant_draw_order_lifetime"><reference internal="True" refid="enum-cpuparticles3d-draworder"><inline classes="std std-ref">DrawOrder</inline></reference> <strong>DRAW_ORDER_LIFETIME</strong> = <literal>1</literal></paragraph>
            <paragraph>粒子按照剩余寿命的顺序绘制。换句话说，寿命最长的粒子被绘制在前面。</paragraph>
            <target refid="class-cpuparticles3d-constant-draw-order-view-depth"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-cpuparticles3d-constant-draw-order-view-depth" names="class_cpuparticles3d_constant_draw_order_view_depth"><reference internal="True" refid="enum-cpuparticles3d-draworder"><inline classes="std std-ref">DrawOrder</inline></reference> <strong>DRAW_ORDER_VIEW_DEPTH</strong> = <literal>2</literal></paragraph>
            <paragraph>粒子按深度顺序绘制。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-cpuparticles3d-parameter"></target>
            <paragraph classes="classref-enumeration" ids="enum-cpuparticles3d-parameter" names="enum_cpuparticles3d_parameter">enum <strong>Parameter</strong>: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-cpuparticles3d-constant-param-initial-linear-velocity"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-cpuparticles3d-constant-param-initial-linear-velocity" names="class_cpuparticles3d_constant_param_initial_linear_velocity"><reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference> <strong>PARAM_INITIAL_LINEAR_VELOCITY</strong> = <literal>0</literal></paragraph>
            <paragraph>与 <reference internal="True" refid="class-cpuparticles3d-method-set-param-min"><inline classes="std std-ref">set_param_min</inline></reference>、<reference internal="True" refid="class-cpuparticles3d-method-set-param-max"><inline classes="std std-ref">set_param_max</inline></reference>、<reference internal="True" refid="class-cpuparticles3d-method-set-param-curve"><inline classes="std std-ref">set_param_curve</inline></reference> 一起使用，设置初始速度属性。</paragraph>
            <target refid="class-cpuparticles3d-constant-param-angular-velocity"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-cpuparticles3d-constant-param-angular-velocity" names="class_cpuparticles3d_constant_param_angular_velocity"><reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference> <strong>PARAM_ANGULAR_VELOCITY</strong> = <literal>1</literal></paragraph>
            <paragraph>与 <reference internal="True" refid="class-cpuparticles3d-method-set-param-min"><inline classes="std std-ref">set_param_min</inline></reference>、<reference internal="True" refid="class-cpuparticles3d-method-set-param-max"><inline classes="std std-ref">set_param_max</inline></reference>、<reference internal="True" refid="class-cpuparticles3d-method-set-param-curve"><inline classes="std std-ref">set_param_curve</inline></reference> 一起使用，设置角速度属性。</paragraph>
            <target refid="class-cpuparticles3d-constant-param-orbit-velocity"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-cpuparticles3d-constant-param-orbit-velocity" names="class_cpuparticles3d_constant_param_orbit_velocity"><reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference> <strong>PARAM_ORBIT_VELOCITY</strong> = <literal>2</literal></paragraph>
            <paragraph>与 <reference internal="True" refid="class-cpuparticles3d-method-set-param-min"><inline classes="std std-ref">set_param_min</inline></reference>、<reference internal="True" refid="class-cpuparticles3d-method-set-param-max"><inline classes="std std-ref">set_param_max</inline></reference>、<reference internal="True" refid="class-cpuparticles3d-method-set-param-curve"><inline classes="std std-ref">set_param_curve</inline></reference> 一起使用，设置轨道速度属性。</paragraph>
            <target refid="class-cpuparticles3d-constant-param-linear-accel"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-cpuparticles3d-constant-param-linear-accel" names="class_cpuparticles3d_constant_param_linear_accel"><reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference> <strong>PARAM_LINEAR_ACCEL</strong> = <literal>3</literal></paragraph>
            <paragraph>与 <reference internal="True" refid="class-cpuparticles3d-method-set-param-min"><inline classes="std std-ref">set_param_min</inline></reference>、<reference internal="True" refid="class-cpuparticles3d-method-set-param-max"><inline classes="std std-ref">set_param_max</inline></reference>、<reference internal="True" refid="class-cpuparticles3d-method-set-param-curve"><inline classes="std std-ref">set_param_curve</inline></reference> 一起使用，设置线性加速度属性。</paragraph>
            <target refid="class-cpuparticles3d-constant-param-radial-accel"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-cpuparticles3d-constant-param-radial-accel" names="class_cpuparticles3d_constant_param_radial_accel"><reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference> <strong>PARAM_RADIAL_ACCEL</strong> = <literal>4</literal></paragraph>
            <paragraph>与 <reference internal="True" refid="class-cpuparticles3d-method-set-param-min"><inline classes="std std-ref">set_param_min</inline></reference>、<reference internal="True" refid="class-cpuparticles3d-method-set-param-max"><inline classes="std std-ref">set_param_max</inline></reference>、<reference internal="True" refid="class-cpuparticles3d-method-set-param-curve"><inline classes="std std-ref">set_param_curve</inline></reference> 一起使用，设置径向加速度属性。</paragraph>
            <target refid="class-cpuparticles3d-constant-param-tangential-accel"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-cpuparticles3d-constant-param-tangential-accel" names="class_cpuparticles3d_constant_param_tangential_accel"><reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference> <strong>PARAM_TANGENTIAL_ACCEL</strong> = <literal>5</literal></paragraph>
            <paragraph>与 <reference internal="True" refid="class-cpuparticles3d-method-set-param-min"><inline classes="std std-ref">set_param_min</inline></reference>、<reference internal="True" refid="class-cpuparticles3d-method-set-param-max"><inline classes="std std-ref">set_param_max</inline></reference>、<reference internal="True" refid="class-cpuparticles3d-method-set-param-curve"><inline classes="std std-ref">set_param_curve</inline></reference> 一起使用，设置切向加速度属性。</paragraph>
            <target refid="class-cpuparticles3d-constant-param-damping"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-cpuparticles3d-constant-param-damping" names="class_cpuparticles3d_constant_param_damping"><reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference> <strong>PARAM_DAMPING</strong> = <literal>6</literal></paragraph>
            <paragraph>与 <reference internal="True" refid="class-cpuparticles3d-method-set-param-min"><inline classes="std std-ref">set_param_min</inline></reference>、<reference internal="True" refid="class-cpuparticles3d-method-set-param-max"><inline classes="std std-ref">set_param_max</inline></reference>、<reference internal="True" refid="class-cpuparticles3d-method-set-param-curve"><inline classes="std std-ref">set_param_curve</inline></reference> 一起使用，设置阻尼属性。</paragraph>
            <target refid="class-cpuparticles3d-constant-param-angle"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-cpuparticles3d-constant-param-angle" names="class_cpuparticles3d_constant_param_angle"><reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference> <strong>PARAM_ANGLE</strong> = <literal>7</literal></paragraph>
            <paragraph>与 <reference internal="True" refid="class-cpuparticles3d-method-set-param-min"><inline classes="std std-ref">set_param_min</inline></reference>、<reference internal="True" refid="class-cpuparticles3d-method-set-param-max"><inline classes="std std-ref">set_param_max</inline></reference>、<reference internal="True" refid="class-cpuparticles3d-method-set-param-curve"><inline classes="std std-ref">set_param_curve</inline></reference> 一起使用，设置角度属性。</paragraph>
            <target refid="class-cpuparticles3d-constant-param-scale"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-cpuparticles3d-constant-param-scale" names="class_cpuparticles3d_constant_param_scale"><reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference> <strong>PARAM_SCALE</strong> = <literal>8</literal></paragraph>
            <paragraph>与 <reference internal="True" refid="class-cpuparticles3d-method-set-param-min"><inline classes="std std-ref">set_param_min</inline></reference>、<reference internal="True" refid="class-cpuparticles3d-method-set-param-max"><inline classes="std std-ref">set_param_max</inline></reference>、<reference internal="True" refid="class-cpuparticles3d-method-set-param-curve"><inline classes="std std-ref">set_param_curve</inline></reference> 一起使用，设置缩放属性。</paragraph>
            <target refid="class-cpuparticles3d-constant-param-hue-variation"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-cpuparticles3d-constant-param-hue-variation" names="class_cpuparticles3d_constant_param_hue_variation"><reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference> <strong>PARAM_HUE_VARIATION</strong> = <literal>9</literal></paragraph>
            <paragraph>与 <reference internal="True" refid="class-cpuparticles3d-method-set-param-min"><inline classes="std std-ref">set_param_min</inline></reference>、<reference internal="True" refid="class-cpuparticles3d-method-set-param-max"><inline classes="std std-ref">set_param_max</inline></reference>、<reference internal="True" refid="class-cpuparticles3d-method-set-param-curve"><inline classes="std std-ref">set_param_curve</inline></reference> 一起使用，设置色相变化属性。</paragraph>
            <target refid="class-cpuparticles3d-constant-param-anim-speed"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-cpuparticles3d-constant-param-anim-speed" names="class_cpuparticles3d_constant_param_anim_speed"><reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference> <strong>PARAM_ANIM_SPEED</strong> = <literal>10</literal></paragraph>
            <paragraph>与 <reference internal="True" refid="class-cpuparticles3d-method-set-param-min"><inline classes="std std-ref">set_param_min</inline></reference>、<reference internal="True" refid="class-cpuparticles3d-method-set-param-max"><inline classes="std std-ref">set_param_max</inline></reference>、<reference internal="True" refid="class-cpuparticles3d-method-set-param-curve"><inline classes="std std-ref">set_param_curve</inline></reference> 一起使用，设置动画速度属性。</paragraph>
            <target refid="class-cpuparticles3d-constant-param-anim-offset"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-cpuparticles3d-constant-param-anim-offset" names="class_cpuparticles3d_constant_param_anim_offset"><reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference> <strong>PARAM_ANIM_OFFSET</strong> = <literal>11</literal></paragraph>
            <paragraph>与 <reference internal="True" refid="class-cpuparticles3d-method-set-param-min"><inline classes="std std-ref">set_param_min</inline></reference>、<reference internal="True" refid="class-cpuparticles3d-method-set-param-max"><inline classes="std std-ref">set_param_max</inline></reference>、<reference internal="True" refid="class-cpuparticles3d-method-set-param-curve"><inline classes="std std-ref">set_param_curve</inline></reference> 一起使用，设置动画偏移属性。</paragraph>
            <target refid="class-cpuparticles3d-constant-param-max"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-cpuparticles3d-constant-param-max" names="class_cpuparticles3d_constant_param_max"><reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference> <strong>PARAM_MAX</strong> = <literal>12</literal></paragraph>
            <paragraph>代表 <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference> 枚举的大小。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-cpuparticles3d-particleflags"></target>
            <paragraph classes="classref-enumeration" ids="enum-cpuparticles3d-particleflags" names="enum_cpuparticles3d_particleflags">enum <strong>ParticleFlags</strong>: <reference internal="True" refid="enum-cpuparticles3d-particleflags"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-cpuparticles3d-constant-particle-flag-align-y-to-velocity"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-cpuparticles3d-constant-particle-flag-align-y-to-velocity" names="class_cpuparticles3d_constant_particle_flag_align_y_to_velocity"><reference internal="True" refid="enum-cpuparticles3d-particleflags"><inline classes="std std-ref">ParticleFlags</inline></reference> <strong>PARTICLE_FLAG_ALIGN_Y_TO_VELOCITY</strong> = <literal>0</literal></paragraph>
            <paragraph>与 <reference internal="True" refid="class-cpuparticles3d-method-set-particle-flag"><inline classes="std std-ref">set_particle_flag</inline></reference> 一起使用，设置 <reference internal="True" refid="class-cpuparticles3d-property-particle-flag-align-y"><inline classes="std std-ref">particle_flag_align_y</inline></reference>。</paragraph>
            <target refid="class-cpuparticles3d-constant-particle-flag-rotate-y"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-cpuparticles3d-constant-particle-flag-rotate-y" names="class_cpuparticles3d_constant_particle_flag_rotate_y"><reference internal="True" refid="enum-cpuparticles3d-particleflags"><inline classes="std std-ref">ParticleFlags</inline></reference> <strong>PARTICLE_FLAG_ROTATE_Y</strong> = <literal>1</literal></paragraph>
            <paragraph>与 <reference internal="True" refid="class-cpuparticles3d-method-set-particle-flag"><inline classes="std std-ref">set_particle_flag</inline></reference> 一起使用，设置 <reference internal="True" refid="class-cpuparticles3d-property-particle-flag-rotate-y"><inline classes="std std-ref">particle_flag_rotate_y</inline></reference>。</paragraph>
            <target refid="class-cpuparticles3d-constant-particle-flag-disable-z"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-cpuparticles3d-constant-particle-flag-disable-z" names="class_cpuparticles3d_constant_particle_flag_disable_z"><reference internal="True" refid="enum-cpuparticles3d-particleflags"><inline classes="std std-ref">ParticleFlags</inline></reference> <strong>PARTICLE_FLAG_DISABLE_Z</strong> = <literal>2</literal></paragraph>
            <paragraph>与 <reference internal="True" refid="class-cpuparticles3d-method-set-particle-flag"><inline classes="std std-ref">set_particle_flag</inline></reference> 一起使用，设置<reference internal="True" refid="class-cpuparticles3d-property-particle-flag-disable-z"><inline classes="std std-ref">particle_flag_disable_z</inline></reference>。</paragraph>
            <target refid="class-cpuparticles3d-constant-particle-flag-max"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-cpuparticles3d-constant-particle-flag-max" names="class_cpuparticles3d_constant_particle_flag_max"><reference internal="True" refid="enum-cpuparticles3d-particleflags"><inline classes="std std-ref">ParticleFlags</inline></reference> <strong>PARTICLE_FLAG_MAX</strong> = <literal>3</literal></paragraph>
            <paragraph>代表 <reference internal="True" refid="enum-cpuparticles3d-particleflags"><inline classes="std std-ref">ParticleFlags</inline></reference> 枚举的大小。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-cpuparticles3d-emissionshape"></target>
            <paragraph classes="classref-enumeration" ids="enum-cpuparticles3d-emissionshape" names="enum_cpuparticles3d_emissionshape">enum <strong>EmissionShape</strong>: <reference internal="True" refid="enum-cpuparticles3d-emissionshape"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-cpuparticles3d-constant-emission-shape-point"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-cpuparticles3d-constant-emission-shape-point" names="class_cpuparticles3d_constant_emission_shape_point"><reference internal="True" refid="enum-cpuparticles3d-emissionshape"><inline classes="std std-ref">EmissionShape</inline></reference> <strong>EMISSION_SHAPE_POINT</strong> = <literal>0</literal></paragraph>
            <paragraph>所有粒子将从单个点发射。</paragraph>
            <target refid="class-cpuparticles3d-constant-emission-shape-sphere"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-cpuparticles3d-constant-emission-shape-sphere" names="class_cpuparticles3d_constant_emission_shape_sphere"><reference internal="True" refid="enum-cpuparticles3d-emissionshape"><inline classes="std std-ref">EmissionShape</inline></reference> <strong>EMISSION_SHAPE_SPHERE</strong> = <literal>1</literal></paragraph>
            <paragraph>粒子将在球体的体积中发射。</paragraph>
            <target refid="class-cpuparticles3d-constant-emission-shape-sphere-surface"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-cpuparticles3d-constant-emission-shape-sphere-surface" names="class_cpuparticles3d_constant_emission_shape_sphere_surface"><reference internal="True" refid="enum-cpuparticles3d-emissionshape"><inline classes="std std-ref">EmissionShape</inline></reference> <strong>EMISSION_SHAPE_SPHERE_SURFACE</strong> = <literal>2</literal></paragraph>
            <paragraph>粒子将在球体表面发射。</paragraph>
            <target refid="class-cpuparticles3d-constant-emission-shape-box"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-cpuparticles3d-constant-emission-shape-box" names="class_cpuparticles3d_constant_emission_shape_box"><reference internal="True" refid="enum-cpuparticles3d-emissionshape"><inline classes="std std-ref">EmissionShape</inline></reference> <strong>EMISSION_SHAPE_BOX</strong> = <literal>3</literal></paragraph>
            <paragraph>粒子将在盒子的体积中发射。</paragraph>
            <target refid="class-cpuparticles3d-constant-emission-shape-points"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-cpuparticles3d-constant-emission-shape-points" names="class_cpuparticles3d_constant_emission_shape_points"><reference internal="True" refid="enum-cpuparticles3d-emissionshape"><inline classes="std std-ref">EmissionShape</inline></reference> <strong>EMISSION_SHAPE_POINTS</strong> = <literal>4</literal></paragraph>
            <paragraph>粒子将在 <reference internal="True" refid="class-cpuparticles3d-property-emission-points"><inline classes="std std-ref">emission_points</inline></reference> 中随机选择的位置发射。粒子颜色将通过 <reference internal="True" refid="class-cpuparticles3d-property-emission-colors"><inline classes="std std-ref">emission_colors</inline></reference> 进行调制。</paragraph>
            <target refid="class-cpuparticles3d-constant-emission-shape-directed-points"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-cpuparticles3d-constant-emission-shape-directed-points" names="class_cpuparticles3d_constant_emission_shape_directed_points"><reference internal="True" refid="enum-cpuparticles3d-emissionshape"><inline classes="std std-ref">EmissionShape</inline></reference> <strong>EMISSION_SHAPE_DIRECTED_POINTS</strong> = <literal>5</literal></paragraph>
            <paragraph>粒子将在 <reference internal="True" refid="class-cpuparticles3d-property-emission-points"><inline classes="std std-ref">emission_points</inline></reference> 中随机选择的位置发射。粒子的速度和旋转将基于 <reference internal="True" refid="class-cpuparticles3d-property-emission-normals"><inline classes="std std-ref">emission_normals</inline></reference> 进行设置。粒子颜色将通过 <reference internal="True" refid="class-cpuparticles3d-property-emission-colors"><inline classes="std std-ref">emission_colors</inline></reference> 进行调制。</paragraph>
            <target refid="class-cpuparticles3d-constant-emission-shape-ring"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-cpuparticles3d-constant-emission-shape-ring" names="class_cpuparticles3d_constant_emission_shape_ring"><reference internal="True" refid="enum-cpuparticles3d-emissionshape"><inline classes="std std-ref">EmissionShape</inline></reference> <strong>EMISSION_SHAPE_RING</strong> = <literal>6</literal></paragraph>
            <paragraph>粒子将以环形或圆柱的形式发射出来。</paragraph>
            <target refid="class-cpuparticles3d-constant-emission-shape-max"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-cpuparticles3d-constant-emission-shape-max" names="class_cpuparticles3d_constant_emission_shape_max"><reference internal="True" refid="enum-cpuparticles3d-emissionshape"><inline classes="std std-ref">EmissionShape</inline></reference> <strong>EMISSION_SHAPE_MAX</strong> = <literal>7</literal></paragraph>
            <paragraph>代表 <reference internal="True" refid="enum-cpuparticles3d-emissionshape"><inline classes="std std-ref">EmissionShape</inline></reference> 枚举的大小。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id7" names="属性说明">
            <title>属性说明</title>
            <target refid="class-cpuparticles3d-property-amount"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-amount" names="class_cpuparticles3d_property_amount"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>amount</strong> = <literal>8</literal> <reference internal="True" refid="class-cpuparticles3d-property-amount"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_amount</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_amount</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>单个发射周期内发射的粒子数。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-angle-curve"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-angle-curve" names="class_cpuparticles3d_property_angle_curve"><reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference> <strong>angle_curve</strong> <reference internal="True" refid="class-cpuparticles3d-property-angle-curve"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_curve</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>, curve: <reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference> <strong>get_param_curve</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>每个粒子的旋转将沿着这条 <reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference> 进行动画处理。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-angle-max"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-angle-max" names="class_cpuparticles3d_property_angle_max"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>angle_max</strong> = <literal>0.0</literal> <reference internal="True" refid="class-cpuparticles3d-property-angle-max"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_max</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_max</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>最大角度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-angle-min"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-angle-min" names="class_cpuparticles3d_property_angle_min"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>angle_min</strong> = <literal>0.0</literal> <reference internal="True" refid="class-cpuparticles3d-property-angle-min"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_min</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_min</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>最小角度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-angular-velocity-curve"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-angular-velocity-curve" names="class_cpuparticles3d_property_angular_velocity_curve"><reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference> <strong>angular_velocity_curve</strong> <reference internal="True" refid="class-cpuparticles3d-property-angular-velocity-curve"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_curve</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>, curve: <reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference> <strong>get_param_curve</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>每个粒子的角速度（旋转速度）将在其生命周期内沿着这条 <reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference> 变化。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-angular-velocity-max"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-angular-velocity-max" names="class_cpuparticles3d_property_angular_velocity_max"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>angular_velocity_max</strong> = <literal>0.0</literal> <reference internal="True" refid="class-cpuparticles3d-property-angular-velocity-max"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_max</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_max</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>应用于每个粒子的最大初始角速度（旋转速度），单位：<emphasis>度</emphasis>每秒。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-angular-velocity-min"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-angular-velocity-min" names="class_cpuparticles3d_property_angular_velocity_min"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>angular_velocity_min</strong> = <literal>0.0</literal> <reference internal="True" refid="class-cpuparticles3d-property-angular-velocity-min"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_min</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_min</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>应用于每个粒子的最小初始角速度（旋转速度），单位：<emphasis>度</emphasis>每秒 。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-anim-offset-curve"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-anim-offset-curve" names="class_cpuparticles3d_property_anim_offset_curve"><reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference> <strong>anim_offset_curve</strong> <reference internal="True" refid="class-cpuparticles3d-property-anim-offset-curve"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_curve</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>, curve: <reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference> <strong>get_param_curve</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>每个粒子的动画偏移将沿着这条 <reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference> 变化。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-anim-offset-max"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-anim-offset-max" names="class_cpuparticles3d_property_anim_offset_max"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>anim_offset_max</strong> = <literal>0.0</literal> <reference internal="True" refid="class-cpuparticles3d-property-anim-offset-max"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_max</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_max</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>最大动画偏移。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-anim-offset-min"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-anim-offset-min" names="class_cpuparticles3d_property_anim_offset_min"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>anim_offset_min</strong> = <literal>0.0</literal> <reference internal="True" refid="class-cpuparticles3d-property-anim-offset-min"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_min</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_min</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>最小动画偏移。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-anim-speed-curve"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-anim-speed-curve" names="class_cpuparticles3d_property_anim_speed_curve"><reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference> <strong>anim_speed_curve</strong> <reference internal="True" refid="class-cpuparticles3d-property-anim-speed-curve"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_curve</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>, curve: <reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference> <strong>get_param_curve</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>每个粒子的动画速度将沿着这条 <reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference> 变化。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-anim-speed-max"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-anim-speed-max" names="class_cpuparticles3d_property_anim_speed_max"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>anim_speed_max</strong> = <literal>0.0</literal> <reference internal="True" refid="class-cpuparticles3d-property-anim-speed-max"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_max</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_max</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>最大粒子动画速度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-anim-speed-min"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-anim-speed-min" names="class_cpuparticles3d_property_anim_speed_min"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>anim_speed_min</strong> = <literal>0.0</literal> <reference internal="True" refid="class-cpuparticles3d-property-anim-speed-min"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_min</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_min</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>最小粒子动画速度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-color"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-color" names="class_cpuparticles3d_property_color"><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>color</strong> = <literal>Color(1, 1, 1, 1)</literal> <reference internal="True" refid="class-cpuparticles3d-property-color"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_color</strong>(value: <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>get_color</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>每个粒子的初始颜色。</paragraph>
            <paragraph><strong>注意：</strong><reference internal="True" refid="class-cpuparticles3d-property-color"><inline classes="std std-ref">color</inline></reference> 乘以粒子网格的顶点颜色。要在 <reference internal="True" refuri="class_basematerial3d#class-basematerial3d"><inline classes="std std-ref">BaseMaterial3D</inline></reference> 上产生可见效果，<reference internal="True" refuri="class_basematerial3d#class-basematerial3d-property-vertex-color-use-as-albedo"><inline classes="std std-ref">BaseMaterial3D.vertex_color_use_as_albedo</inline></reference> <emphasis>必须</emphasis>为 <literal>true</literal>。对于 <reference internal="True" refuri="class_shadermaterial#class-shadermaterial"><inline classes="std std-ref">ShaderMaterial</inline></reference>，必须在着色器的 <literal>fragment()</literal> 函数中插入 <literal>ALBEDO *= COLOR.rgb;</literal>。否则，<reference internal="True" refid="class-cpuparticles3d-property-color"><inline classes="std std-ref">color</inline></reference> 将没有可见效果。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-color-initial-ramp"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-color-initial-ramp" names="class_cpuparticles3d_property_color_initial_ramp"><reference internal="True" refuri="class_gradient#class-gradient"><inline classes="std std-ref">Gradient</inline></reference> <strong>color_initial_ramp</strong> <reference internal="True" refid="class-cpuparticles3d-property-color-initial-ramp"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_color_initial_ramp</strong>(value: <reference internal="True" refuri="class_gradient#class-gradient"><inline classes="std std-ref">Gradient</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_gradient#class-gradient"><inline classes="std std-ref">Gradient</inline></reference> <strong>get_color_initial_ramp</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>每个粒子的初始颜色将沿着该 <reference internal="True" refuri="class_gradienttexture1d#class-gradienttexture1d"><inline classes="std std-ref">GradientTexture1D</inline></reference>（乘以 <reference internal="True" refid="class-cpuparticles3d-property-color"><inline classes="std std-ref">color</inline></reference>）而变化。</paragraph>
            <paragraph><strong>注意：</strong><reference internal="True" refid="class-cpuparticles3d-property-color-initial-ramp"><inline classes="std std-ref">color_initial_ramp</inline></reference> 乘以粒子网格的顶点颜色。要在 <reference internal="True" refuri="class_basematerial3d#class-basematerial3d"><inline classes="std std-ref">BaseMaterial3D</inline></reference> 上产生可见效果，<reference internal="True" refuri="class_basematerial3d#class-basematerial3d-property-vertex-color-use-as-albedo"><inline classes="std std-ref">BaseMaterial3D.vertex_color_use_as_albedo</inline></reference> <emphasis>必须</emphasis>为 <literal>true</literal>。对于 <reference internal="True" refuri="class_shadermaterial#class-shadermaterial"><inline classes="std std-ref">ShaderMaterial</inline></reference>，必须在着色器的 <literal>fragment()</literal> 函数中插入 <literal>ALBEDO *= COLOR.rgb;</literal>。否则，<reference internal="True" refid="class-cpuparticles3d-property-color-initial-ramp"><inline classes="std std-ref">color_initial_ramp</inline></reference> 将没有可见效果。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-color-ramp"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-color-ramp" names="class_cpuparticles3d_property_color_ramp"><reference internal="True" refuri="class_gradient#class-gradient"><inline classes="std std-ref">Gradient</inline></reference> <strong>color_ramp</strong> <reference internal="True" refid="class-cpuparticles3d-property-color-ramp"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_color_ramp</strong>(value: <reference internal="True" refuri="class_gradient#class-gradient"><inline classes="std std-ref">Gradient</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_gradient#class-gradient"><inline classes="std std-ref">Gradient</inline></reference> <strong>get_color_ramp</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>每个粒子的颜色将在其生命周期内沿该 <reference internal="True" refuri="class_gradienttexture1d#class-gradienttexture1d"><inline classes="std std-ref">GradientTexture1D</inline></reference> 变化（乘以 <reference internal="True" refid="class-cpuparticles3d-property-color"><inline classes="std std-ref">color</inline></reference>）。</paragraph>
            <paragraph><strong>注意：</strong><reference internal="True" refid="class-cpuparticles3d-property-color-ramp"><inline classes="std std-ref">color_ramp</inline></reference> 乘以粒子网格的顶点颜色。要在 <reference internal="True" refuri="class_basematerial3d#class-basematerial3d"><inline classes="std std-ref">BaseMaterial3D</inline></reference> 上产生可见效果，<reference internal="True" refuri="class_basematerial3d#class-basematerial3d-property-vertex-color-use-as-albedo"><inline classes="std std-ref">BaseMaterial3D.vertex_color_use_as_albedo</inline></reference> <emphasis>必须</emphasis>为 <literal>true</literal>。对于 <reference internal="True" refuri="class_shadermaterial#class-shadermaterial"><inline classes="std std-ref">ShaderMaterial</inline></reference>，必须在着色器的 <literal>fragment()</literal> 函数中插入 <literal>ALBEDO *= COLOR.rgb;</literal>。否则，<reference internal="True" refid="class-cpuparticles3d-property-color-ramp"><inline classes="std std-ref">color_ramp</inline></reference> 将没有可见效果。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-damping-curve"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-damping-curve" names="class_cpuparticles3d_property_damping_curve"><reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference> <strong>damping_curve</strong> <reference internal="True" refid="class-cpuparticles3d-property-damping-curve"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_curve</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>, curve: <reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference> <strong>get_param_curve</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>阻尼将沿着这条 <reference internal="True" refuri="class_gradient#class-gradient"><inline classes="std std-ref">Gradient</inline></reference> 变化。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-damping-max"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-damping-max" names="class_cpuparticles3d_property_damping_max"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>damping_max</strong> = <literal>0.0</literal> <reference internal="True" refid="class-cpuparticles3d-property-damping-max"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_max</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_max</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>最大阻尼。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-damping-min"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-damping-min" names="class_cpuparticles3d_property_damping_min"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>damping_min</strong> = <literal>0.0</literal> <reference internal="True" refid="class-cpuparticles3d-property-damping-min"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_min</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_min</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>最小阻尼。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-direction"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-direction" names="class_cpuparticles3d_property_direction"><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> <strong>direction</strong> = <literal>Vector3(1, 0, 0)</literal> <reference internal="True" refid="class-cpuparticles3d-property-direction"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_direction</strong>(value: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> <strong>get_direction</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>指定粒子发射方向的单位向量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-draw-order"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-draw-order" names="class_cpuparticles3d_property_draw_order"><reference internal="True" refid="enum-cpuparticles3d-draworder"><inline classes="std std-ref">DrawOrder</inline></reference> <strong>draw_order</strong> = <literal>0</literal> <reference internal="True" refid="class-cpuparticles3d-property-draw-order"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_draw_order</strong>(value: <reference internal="True" refid="enum-cpuparticles3d-draworder"><inline classes="std std-ref">DrawOrder</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-cpuparticles3d-draworder"><inline classes="std std-ref">DrawOrder</inline></reference> <strong>get_draw_order</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>粒子绘制顺序。使用 <reference internal="True" refid="enum-cpuparticles3d-draworder"><inline classes="std std-ref">DrawOrder</inline></reference> 的值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-emission-box-extents"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-emission-box-extents" names="class_cpuparticles3d_property_emission_box_extents"><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> <strong>emission_box_extents</strong> <reference internal="True" refid="class-cpuparticles3d-property-emission-box-extents"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_emission_box_extents</strong>(value: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> <strong>get_emission_box_extents</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph><reference internal="True" refid="class-cpuparticles3d-property-emission-shape"><inline classes="std std-ref">emission_shape</inline></reference> 被设置为 <reference internal="True" refid="class-cpuparticles3d-constant-emission-shape-box"><inline classes="std std-ref">EMISSION_SHAPE_BOX</inline></reference> 时，该矩形的范围。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-emission-colors"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-emission-colors" names="class_cpuparticles3d_property_emission_colors"><reference internal="True" refuri="class_packedcolorarray#class-packedcolorarray"><inline classes="std std-ref">PackedColorArray</inline></reference> <strong>emission_colors</strong> = <literal>PackedColorArray()</literal> <reference internal="True" refid="class-cpuparticles3d-property-emission-colors"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_emission_colors</strong>(value: <reference internal="True" refuri="class_packedcolorarray#class-packedcolorarray"><inline classes="std std-ref">PackedColorArray</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_packedcolorarray#class-packedcolorarray"><inline classes="std std-ref">PackedColorArray</inline></reference> <strong>get_emission_colors</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>设置使用 <reference internal="True" refid="class-cpuparticles3d-constant-emission-shape-points"><inline classes="std std-ref">EMISSION_SHAPE_POINTS</inline></reference> 或 <reference internal="True" refid="class-cpuparticles3d-constant-emission-shape-directed-points"><inline classes="std std-ref">EMISSION_SHAPE_DIRECTED_POINTS</inline></reference> 时对粒子进行调制的 <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference>。</paragraph>
            <paragraph><strong>注意：</strong><reference internal="True" refid="class-cpuparticles3d-property-emission-colors"><inline classes="std std-ref">emission_colors</inline></reference> 会与粒子网格的顶点颜色相乘。要在 <reference internal="True" refuri="class_basematerial3d#class-basematerial3d"><inline classes="std std-ref">BaseMaterial3D</inline></reference> 上产生可见效果，<reference internal="True" refuri="class_basematerial3d#class-basematerial3d-property-vertex-color-use-as-albedo"><inline classes="std std-ref">BaseMaterial3D.vertex_color_use_as_albedo</inline></reference> <emphasis>必须</emphasis>为 <literal>true</literal>。对于 <reference internal="True" refuri="class_shadermaterial#class-shadermaterial"><inline classes="std std-ref">ShaderMaterial</inline></reference>，必须在着色器的 <literal>fragment()</literal> 函数中插入 <literal>ALBEDO *= COLOR.rgb;</literal>。否则 <reference internal="True" refid="class-cpuparticles3d-property-emission-colors"><inline classes="std std-ref">emission_colors</inline></reference> 不会产生可见效果。</paragraph>
            <paragraph><strong>Note:</strong> The returned array is <emphasis>copied</emphasis> and any changes to it will not update the original property value. See <reference internal="True" refuri="class_packedcolorarray#class-packedcolorarray"><inline classes="std std-ref">PackedColorArray</inline></reference> for more details.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-emission-normals"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-emission-normals" names="class_cpuparticles3d_property_emission_normals"><reference internal="True" refuri="class_packedvector3array#class-packedvector3array"><inline classes="std std-ref">PackedVector3Array</inline></reference> <strong>emission_normals</strong> <reference internal="True" refid="class-cpuparticles3d-property-emission-normals"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_emission_normals</strong>(value: <reference internal="True" refuri="class_packedvector3array#class-packedvector3array"><inline classes="std std-ref">PackedVector3Array</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_packedvector3array#class-packedvector3array"><inline classes="std std-ref">PackedVector3Array</inline></reference> <strong>get_emission_normals</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>设置使用 <reference internal="True" refid="class-cpuparticles3d-constant-emission-shape-directed-points"><inline classes="std std-ref">EMISSION_SHAPE_DIRECTED_POINTS</inline></reference> 时粒子发射的方向。</paragraph>
            <paragraph><strong>Note:</strong> The returned array is <emphasis>copied</emphasis> and any changes to it will not update the original property value. See <reference internal="True" refuri="class_packedvector3array#class-packedvector3array"><inline classes="std std-ref">PackedVector3Array</inline></reference> for more details.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-emission-points"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-emission-points" names="class_cpuparticles3d_property_emission_points"><reference internal="True" refuri="class_packedvector3array#class-packedvector3array"><inline classes="std std-ref">PackedVector3Array</inline></reference> <strong>emission_points</strong> <reference internal="True" refid="class-cpuparticles3d-property-emission-points"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_emission_points</strong>(value: <reference internal="True" refuri="class_packedvector3array#class-packedvector3array"><inline classes="std std-ref">PackedVector3Array</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_packedvector3array#class-packedvector3array"><inline classes="std std-ref">PackedVector3Array</inline></reference> <strong>get_emission_points</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>设置使用 <reference internal="True" refid="class-cpuparticles3d-constant-emission-shape-points"><inline classes="std std-ref">EMISSION_SHAPE_POINTS</inline></reference> 或 <reference internal="True" refid="class-cpuparticles3d-constant-emission-shape-directed-points"><inline classes="std std-ref">EMISSION_SHAPE_DIRECTED_POINTS</inline></reference> 时出生粒子的初始位置。</paragraph>
            <paragraph><strong>Note:</strong> The returned array is <emphasis>copied</emphasis> and any changes to it will not update the original property value. See <reference internal="True" refuri="class_packedvector3array#class-packedvector3array"><inline classes="std std-ref">PackedVector3Array</inline></reference> for more details.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-emission-ring-axis"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-emission-ring-axis" names="class_cpuparticles3d_property_emission_ring_axis"><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> <strong>emission_ring_axis</strong> <reference internal="True" refid="class-cpuparticles3d-property-emission-ring-axis"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_emission_ring_axis</strong>(value: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> <strong>get_emission_ring_axis</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>使用形为 <reference internal="True" refid="class-cpuparticles3d-constant-emission-shape-ring"><inline classes="std std-ref">EMISSION_SHAPE_RING</inline></reference> 的发射器时环的轴。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-emission-ring-height"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-emission-ring-height" names="class_cpuparticles3d_property_emission_ring_height"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>emission_ring_height</strong> <reference internal="True" refid="class-cpuparticles3d-property-emission-ring-height"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_emission_ring_height</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_emission_ring_height</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>使用形为 <reference internal="True" refid="class-cpuparticles3d-constant-emission-shape-ring"><inline classes="std std-ref">EMISSION_SHAPE_RING</inline></reference> 的发射器时环的高度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-emission-ring-inner-radius"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-emission-ring-inner-radius" names="class_cpuparticles3d_property_emission_ring_inner_radius"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>emission_ring_inner_radius</strong> <reference internal="True" refid="class-cpuparticles3d-property-emission-ring-inner-radius"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_emission_ring_inner_radius</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_emission_ring_inner_radius</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>使用形为 <reference internal="True" refid="class-cpuparticles3d-constant-emission-shape-ring"><inline classes="std std-ref">EMISSION_SHAPE_RING</inline></reference> 的发射器时环的内半径。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-emission-ring-radius"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-emission-ring-radius" names="class_cpuparticles3d_property_emission_ring_radius"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>emission_ring_radius</strong> <reference internal="True" refid="class-cpuparticles3d-property-emission-ring-radius"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_emission_ring_radius</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_emission_ring_radius</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>使用形为 <reference internal="True" refid="class-cpuparticles3d-constant-emission-shape-ring"><inline classes="std std-ref">EMISSION_SHAPE_RING</inline></reference> 的发射器时环的半径。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-emission-shape"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-emission-shape" names="class_cpuparticles3d_property_emission_shape"><reference internal="True" refid="enum-cpuparticles3d-emissionshape"><inline classes="std std-ref">EmissionShape</inline></reference> <strong>emission_shape</strong> = <literal>0</literal> <reference internal="True" refid="class-cpuparticles3d-property-emission-shape"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_emission_shape</strong>(value: <reference internal="True" refid="enum-cpuparticles3d-emissionshape"><inline classes="std std-ref">EmissionShape</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-cpuparticles3d-emissionshape"><inline classes="std std-ref">EmissionShape</inline></reference> <strong>get_emission_shape</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>粒子将在此区域内发射。可能的取值见 <reference internal="True" refid="enum-cpuparticles3d-emissionshape"><inline classes="std std-ref">EmissionShape</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-emission-sphere-radius"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-emission-sphere-radius" names="class_cpuparticles3d_property_emission_sphere_radius"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>emission_sphere_radius</strong> <reference internal="True" refid="class-cpuparticles3d-property-emission-sphere-radius"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_emission_sphere_radius</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_emission_sphere_radius</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph><reference internal="True" refid="enum-cpuparticles3d-emissionshape"><inline classes="std std-ref">EmissionShape</inline></reference> 被设置为 <reference internal="True" refid="class-cpuparticles3d-constant-emission-shape-sphere"><inline classes="std std-ref">EMISSION_SHAPE_SPHERE</inline></reference>时，该球体的半径。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-emitting"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-emitting" names="class_cpuparticles3d_property_emitting"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>emitting</strong> = <literal>true</literal> <reference internal="True" refid="class-cpuparticles3d-property-emitting"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_emitting</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_emitting</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则正在发射粒子。<reference internal="True" refid="class-cpuparticles3d-property-emitting"><inline classes="std std-ref">emitting</inline></reference> 可用于启动和停止粒子发射。但是，如果 <reference internal="True" refid="class-cpuparticles3d-property-one-shot"><inline classes="std std-ref">one_shot</inline></reference> 为 <literal>true</literal>，则将 <reference internal="True" refid="class-cpuparticles3d-property-emitting"><inline classes="std std-ref">emitting</inline></reference> 设置为 <literal>true</literal> 将不会重新启动该发射循环，直到所有活动粒子完成处理为止。一旦所有活动粒子完成处理，你可以使用 <reference internal="True" refid="class-cpuparticles3d-signal-finished"><inline classes="std std-ref">finished</inline></reference> 信号来收取通知。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-explosiveness"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-explosiveness" names="class_cpuparticles3d_property_explosiveness"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>explosiveness</strong> = <literal>0.0</literal> <reference internal="True" refid="class-cpuparticles3d-property-explosiveness"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_explosiveness_ratio</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_explosiveness_ratio</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>粒子在单个发射周期中的发射有多急。如果大于 <literal>0</literal>，则在下一个发射周期开始之前，发射会出现一个间隔。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-fixed-fps"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-fixed-fps" names="class_cpuparticles3d_property_fixed_fps"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>fixed_fps</strong> = <literal>0</literal> <reference internal="True" refid="class-cpuparticles3d-property-fixed-fps"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_fixed_fps</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_fixed_fps</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>粒子系统的帧速率被固定为一个值。例如，将值更改为 2 会使粒子以每秒 2 帧的速度渲染。请注意，这并不会降低粒子系统本身的速度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-flatness"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-flatness" names="class_cpuparticles3d_property_flatness"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>flatness</strong> = <literal>0.0</literal> <reference internal="True" refid="class-cpuparticles3d-property-flatness"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_flatness</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_flatness</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>Y/Z 平面中的 <reference internal="True" refid="class-cpuparticles3d-property-spread"><inline classes="std std-ref">spread</inline></reference> 数量。值 <literal>1</literal> 将粒子限制在 X/Z 平面上。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-fract-delta"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-fract-delta" names="class_cpuparticles3d_property_fract_delta"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>fract_delta</strong> = <literal>true</literal> <reference internal="True" refid="class-cpuparticles3d-property-fract-delta"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_fractional_delta</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_fractional_delta</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>为true</literal>，则使用分数增量 delta 计算，将具有更平滑的粒子显示效果。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-gravity"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-gravity" names="class_cpuparticles3d_property_gravity"><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> <strong>gravity</strong> = <literal>Vector3(0, -9.8, 0)</literal> <reference internal="True" refid="class-cpuparticles3d-property-gravity"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_gravity</strong>(value: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> <strong>get_gravity</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>应用于每个粒子的重力。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-hue-variation-curve"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-hue-variation-curve" names="class_cpuparticles3d_property_hue_variation_curve"><reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference> <strong>hue_variation_curve</strong> <reference internal="True" refid="class-cpuparticles3d-property-hue-variation-curve"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_curve</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>, curve: <reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference> <strong>get_param_curve</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>每个粒子的色相都会沿着这条 <reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference> 变化。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-hue-variation-max"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-hue-variation-max" names="class_cpuparticles3d_property_hue_variation_max"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>hue_variation_max</strong> = <literal>0.0</literal> <reference internal="True" refid="class-cpuparticles3d-property-hue-variation-max"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_max</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_max</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>最大色相变化。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-hue-variation-min"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-hue-variation-min" names="class_cpuparticles3d_property_hue_variation_min"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>hue_variation_min</strong> = <literal>0.0</literal> <reference internal="True" refid="class-cpuparticles3d-property-hue-variation-min"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_min</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_min</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>最小色相变化。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-initial-velocity-max"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-initial-velocity-max" names="class_cpuparticles3d_property_initial_velocity_max"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>initial_velocity_max</strong> = <literal>0.0</literal> <reference internal="True" refid="class-cpuparticles3d-property-initial-velocity-max"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_max</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_max</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>初始速度的最大值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-initial-velocity-min"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-initial-velocity-min" names="class_cpuparticles3d_property_initial_velocity_min"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>initial_velocity_min</strong> = <literal>0.0</literal> <reference internal="True" refid="class-cpuparticles3d-property-initial-velocity-min"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_min</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_min</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>初始速度的最小值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-lifetime"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-lifetime" names="class_cpuparticles3d_property_lifetime"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>lifetime</strong> = <literal>1.0</literal> <reference internal="True" refid="class-cpuparticles3d-property-lifetime"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_lifetime</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_lifetime</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>每个粒子存在的时间。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-lifetime-randomness"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-lifetime-randomness" names="class_cpuparticles3d_property_lifetime_randomness"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>lifetime_randomness</strong> = <literal>0.0</literal> <reference internal="True" refid="class-cpuparticles3d-property-lifetime-randomness"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_lifetime_randomness</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_lifetime_randomness</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>粒子寿命随机率。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-linear-accel-curve"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-linear-accel-curve" names="class_cpuparticles3d_property_linear_accel_curve"><reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference> <strong>linear_accel_curve</strong> <reference internal="True" refid="class-cpuparticles3d-property-linear-accel-curve"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_curve</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>, curve: <reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference> <strong>get_param_curve</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>每个粒子的线性加速度将沿这条 <reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference> 变化。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-linear-accel-max"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-linear-accel-max" names="class_cpuparticles3d_property_linear_accel_max"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>linear_accel_max</strong> = <literal>0.0</literal> <reference internal="True" refid="class-cpuparticles3d-property-linear-accel-max"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_max</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_max</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>最大线性加速度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-linear-accel-min"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-linear-accel-min" names="class_cpuparticles3d_property_linear_accel_min"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>linear_accel_min</strong> = <literal>0.0</literal> <reference internal="True" refid="class-cpuparticles3d-property-linear-accel-min"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_min</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_min</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>最小线性加速度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-local-coords"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-local-coords" names="class_cpuparticles3d_property_local_coords"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>local_coords</strong> = <literal>false</literal> <reference internal="True" refid="class-cpuparticles3d-property-local-coords"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_use_local_coordinates</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_use_local_coordinates</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，粒子使用父节点的坐标空间（称为局部坐标）。这将导致粒子在移动或旋转时，沿着 <strong>CPUParticles3D</strong> 节点（及其父节点）移动和旋转。如果为 <literal>false</literal>，则粒子使用全局坐标；当移动或旋转时，它们不会沿着 <strong>CPUParticles3D</strong> 节点（及其父节点）移动或旋转。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-mesh"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-mesh" names="class_cpuparticles3d_property_mesh"><reference internal="True" refuri="class_mesh#class-mesh"><inline classes="std std-ref">Mesh</inline></reference> <strong>mesh</strong> <reference internal="True" refid="class-cpuparticles3d-property-mesh"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_mesh</strong>(value: <reference internal="True" refuri="class_mesh#class-mesh"><inline classes="std std-ref">Mesh</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_mesh#class-mesh"><inline classes="std std-ref">Mesh</inline></reference> <strong>get_mesh</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>每个粒子使用的 <reference internal="True" refuri="class_mesh#class-mesh"><inline classes="std std-ref">Mesh</inline></reference>。如果为 <literal>null</literal>，则粒子将为球形。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-one-shot"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-one-shot" names="class_cpuparticles3d_property_one_shot"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>one_shot</strong> = <literal>false</literal> <reference internal="True" refid="class-cpuparticles3d-property-one-shot"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_one_shot</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_one_shot</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则只发生一个发射周期。如果在某个周期内设置为 <literal>true</literal>，则发射将在该周期结束时停止。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-orbit-velocity-curve"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-orbit-velocity-curve" names="class_cpuparticles3d_property_orbit_velocity_curve"><reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference> <strong>orbit_velocity_curve</strong> <reference internal="True" refid="class-cpuparticles3d-property-orbit-velocity-curve"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_curve</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>, curve: <reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference> <strong>get_param_curve</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>每个粒子的轨道速度将沿着这条 <reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference> 变化。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-orbit-velocity-max"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-orbit-velocity-max" names="class_cpuparticles3d_property_orbit_velocity_max"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>orbit_velocity_max</strong> <reference internal="True" refid="class-cpuparticles3d-property-orbit-velocity-max"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_max</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_max</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>最大轨道速度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-orbit-velocity-min"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-orbit-velocity-min" names="class_cpuparticles3d_property_orbit_velocity_min"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>orbit_velocity_min</strong> <reference internal="True" refid="class-cpuparticles3d-property-orbit-velocity-min"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_min</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_min</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>最小轨道速度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-particle-flag-align-y"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-particle-flag-align-y" names="class_cpuparticles3d_property_particle_flag_align_y"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>particle_flag_align_y</strong> = <literal>false</literal> <reference internal="True" refid="class-cpuparticles3d-property-particle-flag-align-y"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_particle_flag</strong>(particle_flag: <reference internal="True" refid="enum-cpuparticles3d-particleflags"><inline classes="std std-ref">ParticleFlags</inline></reference>, enable: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_particle_flag</strong>(particle_flag: <reference internal="True" refid="enum-cpuparticles3d-particleflags"><inline classes="std std-ref">ParticleFlags</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>将粒子的 Y 轴与其速度方向对齐。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-particle-flag-disable-z"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-particle-flag-disable-z" names="class_cpuparticles3d_property_particle_flag_disable_z"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>particle_flag_disable_z</strong> = <literal>false</literal> <reference internal="True" refid="class-cpuparticles3d-property-particle-flag-disable-z"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_particle_flag</strong>(particle_flag: <reference internal="True" refid="enum-cpuparticles3d-particleflags"><inline classes="std std-ref">ParticleFlags</inline></reference>, enable: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_particle_flag</strong>(particle_flag: <reference internal="True" refid="enum-cpuparticles3d-particleflags"><inline classes="std std-ref">ParticleFlags</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则粒子将不会在 Z 轴上移动。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-particle-flag-rotate-y"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-particle-flag-rotate-y" names="class_cpuparticles3d_property_particle_flag_rotate_y"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>particle_flag_rotate_y</strong> = <literal>false</literal> <reference internal="True" refid="class-cpuparticles3d-property-particle-flag-rotate-y"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_particle_flag</strong>(particle_flag: <reference internal="True" refid="enum-cpuparticles3d-particleflags"><inline classes="std std-ref">ParticleFlags</inline></reference>, enable: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_particle_flag</strong>(particle_flag: <reference internal="True" refid="enum-cpuparticles3d-particleflags"><inline classes="std std-ref">ParticleFlags</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则粒子绕 Y 轴旋转 <reference internal="True" refid="class-cpuparticles3d-property-angle-min"><inline classes="std std-ref">angle_min</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-preprocess"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-preprocess" names="class_cpuparticles3d_property_preprocess"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>preprocess</strong> = <literal>0.0</literal> <reference internal="True" refid="class-cpuparticles3d-property-preprocess"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_pre_process_time</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_pre_process_time</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>粒子系统启动时就好像已经运行了这么多秒一样。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-radial-accel-curve"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-radial-accel-curve" names="class_cpuparticles3d_property_radial_accel_curve"><reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference> <strong>radial_accel_curve</strong> <reference internal="True" refid="class-cpuparticles3d-property-radial-accel-curve"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_curve</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>, curve: <reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference> <strong>get_param_curve</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>每个粒子的径向加速度将沿着这条 <reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference> 变化。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-radial-accel-max"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-radial-accel-max" names="class_cpuparticles3d_property_radial_accel_max"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>radial_accel_max</strong> = <literal>0.0</literal> <reference internal="True" refid="class-cpuparticles3d-property-radial-accel-max"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_max</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_max</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>最大径向加速度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-radial-accel-min"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-radial-accel-min" names="class_cpuparticles3d_property_radial_accel_min"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>radial_accel_min</strong> = <literal>0.0</literal> <reference internal="True" refid="class-cpuparticles3d-property-radial-accel-min"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_min</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_min</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>最小径向加速度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-randomness"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-randomness" names="class_cpuparticles3d_property_randomness"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>randomness</strong> = <literal>0.0</literal> <reference internal="True" refid="class-cpuparticles3d-property-randomness"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_randomness_ratio</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_randomness_ratio</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>发射寿命随机率。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-scale-amount-curve"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-scale-amount-curve" names="class_cpuparticles3d_property_scale_amount_curve"><reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference> <strong>scale_amount_curve</strong> <reference internal="True" refid="class-cpuparticles3d-property-scale-amount-curve"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_curve</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>, curve: <reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference> <strong>get_param_curve</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>每个粒子的缩放将沿着这条 <reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference> 变化。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-scale-amount-max"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-scale-amount-max" names="class_cpuparticles3d_property_scale_amount_max"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>scale_amount_max</strong> = <literal>1.0</literal> <reference internal="True" refid="class-cpuparticles3d-property-scale-amount-max"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_max</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_max</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>最大缩放。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-scale-amount-min"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-scale-amount-min" names="class_cpuparticles3d_property_scale_amount_min"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>scale_amount_min</strong> = <literal>1.0</literal> <reference internal="True" refid="class-cpuparticles3d-property-scale-amount-min"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_min</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_min</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>最小缩放。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-scale-curve-x"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-scale-curve-x" names="class_cpuparticles3d_property_scale_curve_x"><reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference> <strong>scale_curve_x</strong> <reference internal="True" refid="class-cpuparticles3d-property-scale-curve-x"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_scale_curve_x</strong>(value: <reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference> <strong>get_scale_curve_x</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>生命周期内，沿 X 轴的缩放曲线。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-scale-curve-y"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-scale-curve-y" names="class_cpuparticles3d_property_scale_curve_y"><reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference> <strong>scale_curve_y</strong> <reference internal="True" refid="class-cpuparticles3d-property-scale-curve-y"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_scale_curve_y</strong>(value: <reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference> <strong>get_scale_curve_y</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>生命周期内，沿 Y 轴的缩放曲线。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-scale-curve-z"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-scale-curve-z" names="class_cpuparticles3d_property_scale_curve_z"><reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference> <strong>scale_curve_z</strong> <reference internal="True" refid="class-cpuparticles3d-property-scale-curve-z"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_scale_curve_z</strong>(value: <reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference> <strong>get_scale_curve_z</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>生命周期内，沿 Z 轴的缩放曲线。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-speed-scale"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-speed-scale" names="class_cpuparticles3d_property_speed_scale"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>speed_scale</strong> = <literal>1.0</literal> <reference internal="True" refid="class-cpuparticles3d-property-speed-scale"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_speed_scale</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_speed_scale</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>粒子系统的运行速度的缩放率。<literal>0</literal> 值可用于暂停粒子。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-split-scale"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-split-scale" names="class_cpuparticles3d_property_split_scale"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>split_scale</strong> = <literal>false</literal> <reference internal="True" refid="class-cpuparticles3d-property-split-scale"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_split_scale</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_split_scale</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果设置为 <literal>true</literal>，则可以指定三条不同的缩放曲线，每个缩放轴一条。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-spread"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-spread" names="class_cpuparticles3d_property_spread"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>spread</strong> = <literal>45.0</literal> <reference internal="True" refid="class-cpuparticles3d-property-spread"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_spread</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_spread</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>每个粒子的初始方向范围为 <literal>+spread</literal> 至 <literal>-spread</literal> 度。适用于 X/Z 平面和 Y/Z 平面。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-tangential-accel-curve"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-tangential-accel-curve" names="class_cpuparticles3d_property_tangential_accel_curve"><reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference> <strong>tangential_accel_curve</strong> <reference internal="True" refid="class-cpuparticles3d-property-tangential-accel-curve"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_curve</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>, curve: <reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference> <strong>get_param_curve</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>每个粒子的切向加速度将沿着这条 <reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference> 变化。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-tangential-accel-max"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-tangential-accel-max" names="class_cpuparticles3d_property_tangential_accel_max"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>tangential_accel_max</strong> = <literal>0.0</literal> <reference internal="True" refid="class-cpuparticles3d-property-tangential-accel-max"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_max</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_max</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>最大切向加速度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-tangential-accel-min"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-tangential-accel-min" names="class_cpuparticles3d_property_tangential_accel_min"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>tangential_accel_min</strong> = <literal>0.0</literal> <reference internal="True" refid="class-cpuparticles3d-property-tangential-accel-min"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_min</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_min</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>最小切向加速度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-property-visibility-aabb"></target>
            <paragraph classes="classref-property" ids="class-cpuparticles3d-property-visibility-aabb" names="class_cpuparticles3d_property_visibility_aabb"><reference internal="True" refuri="class_aabb#class-aabb"><inline classes="std std-ref">AABB</inline></reference> <strong>visibility_aabb</strong> = <literal>AABB(0, 0, 0, 0, 0, 0)</literal> <reference internal="True" refid="class-cpuparticles3d-property-visibility-aabb"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_visibility_aabb</strong>(value: <reference internal="True" refuri="class_aabb#class-aabb"><inline classes="std std-ref">AABB</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_aabb#class-aabb"><inline classes="std std-ref">AABB</inline></reference> <strong>get_visibility_aabb</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph><reference internal="True" refuri="class_aabb#class-aabb"><inline classes="std std-ref">AABB</inline></reference> 确定节点的区域，该区域需要在屏幕上可见才能使粒子系统处于活动状态。</paragraph>
            <paragraph>如果当节点进入/退出屏幕时粒子突然出现/消失，则增大盒子。<reference internal="True" refuri="class_aabb#class-aabb"><inline classes="std std-ref">AABB</inline></reference> 可以通过代码或使用 <strong>粒子 → 生成 AABB</strong> 编辑器工具来生成。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id8" names="方法说明">
            <title>方法说明</title>
            <target refid="class-cpuparticles3d-method-convert-from-particles"></target>
            <paragraph classes="classref-method" ids="class-cpuparticles3d-method-convert-from-particles" names="class_cpuparticles3d_method_convert_from_particles"><abbreviation explanation="无返回值。">void</abbreviation> <strong>convert_from_particles</strong>(particles: <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference>) <reference internal="True" refid="class-cpuparticles3d-method-convert-from-particles"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置该节点的属性以匹配给定的 <reference internal="True" refuri="class_gpuparticles3d#class-gpuparticles3d"><inline classes="std std-ref">GPUParticles3D</inline></reference> 节点，该给定节点已分配了一个 <reference internal="True" refuri="class_particleprocessmaterial#class-particleprocessmaterial"><inline classes="std std-ref">ParticleProcessMaterial</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-method-get-param-curve"></target>
            <paragraph classes="classref-method" ids="class-cpuparticles3d-method-get-param-curve" names="class_cpuparticles3d_method_get_param_curve"><reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference> <strong>get_param_curve</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-cpuparticles3d-method-get-param-curve"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回由 <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference> 指定的参数的 <reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-method-get-param-max"></target>
            <paragraph classes="classref-method" ids="class-cpuparticles3d-method-get-param-max" names="class_cpuparticles3d_method_get_param_max"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_max</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-cpuparticles3d-method-get-param-max"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回给定参数的最大值范围。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-method-get-param-min"></target>
            <paragraph classes="classref-method" ids="class-cpuparticles3d-method-get-param-min" names="class_cpuparticles3d_method_get_param_min"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_min</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-cpuparticles3d-method-get-param-min"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回给定参数的最小值范围。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-method-get-particle-flag"></target>
            <paragraph classes="classref-method" ids="class-cpuparticles3d-method-get-particle-flag" names="class_cpuparticles3d_method_get_particle_flag"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_particle_flag</strong>(particle_flag: <reference internal="True" refid="enum-cpuparticles3d-particleflags"><inline classes="std std-ref">ParticleFlags</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-cpuparticles3d-method-get-particle-flag"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回给定粒子标志的启用状态（选项见 <reference internal="True" refid="enum-cpuparticles3d-particleflags"><inline classes="std std-ref">ParticleFlags</inline></reference>）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-method-restart"></target>
            <paragraph classes="classref-method" ids="class-cpuparticles3d-method-restart" names="class_cpuparticles3d_method_restart"><abbreviation explanation="无返回值。">void</abbreviation> <strong>restart</strong>() <reference internal="True" refid="class-cpuparticles3d-method-restart"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>重新启动粒子发射器。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-method-set-param-curve"></target>
            <paragraph classes="classref-method" ids="class-cpuparticles3d-method-set-param-curve" names="class_cpuparticles3d_method_set_param_curve"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_curve</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>, curve: <reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference>) <reference internal="True" refid="class-cpuparticles3d-method-set-param-curve"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置 <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference> 指定的参数的 <reference internal="True" refuri="class_curve#class-curve"><inline classes="std std-ref">Curve</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-method-set-param-max"></target>
            <paragraph classes="classref-method" ids="class-cpuparticles3d-method-set-param-max" names="class_cpuparticles3d_method_set_param_max"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_max</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <reference internal="True" refid="class-cpuparticles3d-method-set-param-max"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置给定参数的最大值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-method-set-param-min"></target>
            <paragraph classes="classref-method" ids="class-cpuparticles3d-method-set-param-min" names="class_cpuparticles3d_method_set_param_min"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_min</strong>(param: <reference internal="True" refid="enum-cpuparticles3d-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <reference internal="True" refid="class-cpuparticles3d-method-set-param-min"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置给定参数的最小值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cpuparticles3d-method-set-particle-flag"></target>
            <paragraph classes="classref-method" ids="class-cpuparticles3d-method-set-particle-flag" names="class_cpuparticles3d_method_set_particle_flag"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_particle_flag</strong>(particle_flag: <reference internal="True" refid="enum-cpuparticles3d-particleflags"><inline classes="std std-ref">ParticleFlags</inline></reference>, enable: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <reference internal="True" refid="class-cpuparticles3d-method-set-particle-flag"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>启用或禁用给定的粒子标志（选项见 <reference internal="True" refid="enum-cpuparticles3d-particleflags"><inline classes="std std-ref">ParticleFlags</inline></reference>）。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效运算符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列位标志构成位掩码的整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_camerafeed.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/CameraFeed.xml.</comment>
    <target refid="class-camerafeed"></target>
    <section ids="camerafeed class-camerafeed" names="camerafeed class_camerafeed">
        <title>CameraFeed</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>通过相机源，你可以访问连接到设备的单个物理相机。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>通过相机源，你可以访问连接到设备的单个物理相机。启用后，Godot 将开始从相机捕获帧，然后使用。另请参阅 <reference internal="True" refuri="class_cameraserver#class-cameraserver"><inline classes="std std-ref">CameraServer</inline></reference>。</paragraph>
            <paragraph><strong>注意：</strong>很多相机会返回 YCbCr 图像，这些图像被分成两个纹理，需要在着色器中组合。如果你将环境设置为在背景中显示相机图像，Godot 会自动为将执行此操作。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="39"></colspec>
                    <colspec colwidth="65"></colspec>
                    <colspec colwidth="36"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-camerafeed-property-feed-is-active"><inline classes="std std-ref">feed_is_active</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-camerafeed-property-feed-transform"><inline classes="std std-ref">feed_transform</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Transform2D(1, 0, 0, -1, 0, 1)</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="51"></colspec>
                    <colspec colwidth="73"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-camerafeed-feeddatatype"><inline classes="std std-ref">FeedDataType</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-camerafeed-method-get-datatype"><inline classes="std std-ref">get_datatype</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-camerafeed-method-get-id"><inline classes="std std-ref">get_id</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-camerafeed-method-get-name"><inline classes="std std-ref">get_name</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-camerafeed-feedposition"><inline classes="std std-ref">FeedPosition</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-camerafeed-method-get-position"><inline classes="std std-ref">get_position</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="枚举">
            <title>枚举</title>
            <target refid="enum-camerafeed-feeddatatype"></target>
            <paragraph classes="classref-enumeration" ids="enum-camerafeed-feeddatatype" names="enum_camerafeed_feeddatatype">enum <strong>FeedDataType</strong>: <reference internal="True" refid="enum-camerafeed-feeddatatype"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-camerafeed-constant-feed-noimage"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-camerafeed-constant-feed-noimage" names="class_camerafeed_constant_feed_noimage"><reference internal="True" refid="enum-camerafeed-feeddatatype"><inline classes="std std-ref">FeedDataType</inline></reference> <strong>FEED_NOIMAGE</strong> = <literal>0</literal></paragraph>
            <paragraph>没有为该源设置图像。</paragraph>
            <target refid="class-camerafeed-constant-feed-rgb"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-camerafeed-constant-feed-rgb" names="class_camerafeed_constant_feed_rgb"><reference internal="True" refid="enum-camerafeed-feeddatatype"><inline classes="std std-ref">FeedDataType</inline></reference> <strong>FEED_RGB</strong> = <literal>1</literal></paragraph>
            <paragraph>源提供 RGB 图像。</paragraph>
            <target refid="class-camerafeed-constant-feed-ycbcr"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-camerafeed-constant-feed-ycbcr" names="class_camerafeed_constant_feed_ycbcr"><reference internal="True" refid="enum-camerafeed-feeddatatype"><inline classes="std std-ref">FeedDataType</inline></reference> <strong>FEED_YCBCR</strong> = <literal>2</literal></paragraph>
            <paragraph>源提供的 YCbCr 图像需要转换成 RGB 图像。</paragraph>
            <target refid="class-camerafeed-constant-feed-ycbcr-sep"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-camerafeed-constant-feed-ycbcr-sep" names="class_camerafeed_constant_feed_ycbcr_sep"><reference internal="True" refid="enum-camerafeed-feeddatatype"><inline classes="std std-ref">FeedDataType</inline></reference> <strong>FEED_YCBCR_SEP</strong> = <literal>3</literal></paragraph>
            <paragraph>源提供单独的 Y 和 CbCr 图像，需要合并并转换为 RGB。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-camerafeed-feedposition"></target>
            <paragraph classes="classref-enumeration" ids="enum-camerafeed-feedposition" names="enum_camerafeed_feedposition">enum <strong>FeedPosition</strong>: <reference internal="True" refid="enum-camerafeed-feedposition"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-camerafeed-constant-feed-unspecified"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-camerafeed-constant-feed-unspecified" names="class_camerafeed_constant_feed_unspecified"><reference internal="True" refid="enum-camerafeed-feedposition"><inline classes="std std-ref">FeedPosition</inline></reference> <strong>FEED_UNSPECIFIED</strong> = <literal>0</literal></paragraph>
            <paragraph>未指定坐标。</paragraph>
            <target refid="class-camerafeed-constant-feed-front"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-camerafeed-constant-feed-front" names="class_camerafeed_constant_feed_front"><reference internal="True" refid="enum-camerafeed-feedposition"><inline classes="std std-ref">FeedPosition</inline></reference> <strong>FEED_FRONT</strong> = <literal>1</literal></paragraph>
            <paragraph>相机安装在了设备前部。</paragraph>
            <target refid="class-camerafeed-constant-feed-back"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-camerafeed-constant-feed-back" names="class_camerafeed_constant_feed_back"><reference internal="True" refid="enum-camerafeed-feedposition"><inline classes="std std-ref">FeedPosition</inline></reference> <strong>FEED_BACK</strong> = <literal>2</literal></paragraph>
            <paragraph>相机安装在了设备后部。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="属性说明">
            <title>属性说明</title>
            <target refid="class-camerafeed-property-feed-is-active"></target>
            <paragraph classes="classref-property" ids="class-camerafeed-property-feed-is-active" names="class_camerafeed_property_feed_is_active"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>feed_is_active</strong> = <literal>false</literal> <reference internal="True" refid="class-camerafeed-property-feed-is-active"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_active</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_active</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则源是激活的。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-camerafeed-property-feed-transform"></target>
            <paragraph classes="classref-property" ids="class-camerafeed-property-feed-transform" names="class_camerafeed_property_feed_transform"><reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference> <strong>feed_transform</strong> = <literal>Transform2D(1, 0, 0, -1, 0, 1)</literal> <reference internal="True" refid="class-camerafeed-property-feed-transform"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_transform</strong>(value: <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference> <strong>get_transform</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>应用于相机图像的变换。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="方法说明">
            <title>方法说明</title>
            <target refid="class-camerafeed-method-get-datatype"></target>
            <paragraph classes="classref-method" ids="class-camerafeed-method-get-datatype" names="class_camerafeed_method_get_datatype"><reference internal="True" refid="enum-camerafeed-feeddatatype"><inline classes="std std-ref">FeedDataType</inline></reference> <strong>get_datatype</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-camerafeed-method-get-datatype"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回源图像的数据类型。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-camerafeed-method-get-id"></target>
            <paragraph classes="classref-method" ids="class-camerafeed-method-get-id" names="class_camerafeed_method_get_id"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_id</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-camerafeed-method-get-id"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回该源的唯一ID。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-camerafeed-method-get-name"></target>
            <paragraph classes="classref-method" ids="class-camerafeed-method-get-name" names="class_camerafeed_method_get_name"><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>get_name</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-camerafeed-method-get-name"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回相机的名称。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-camerafeed-method-get-position"></target>
            <paragraph classes="classref-method" ids="class-camerafeed-method-get-position" names="class_camerafeed_method_get_position"><reference internal="True" refid="enum-camerafeed-feedposition"><inline classes="std std-ref">FeedPosition</inline></reference> <strong>get_position</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-camerafeed-method-get-position"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回设备上的相机位置。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

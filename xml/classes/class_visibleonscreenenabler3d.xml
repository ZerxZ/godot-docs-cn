<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_visibleonscreenenabler3d.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/VisibleOnScreenEnabler3D.xml.</comment>
    <target refid="class-visibleonscreenenabler3d"></target>
    <section ids="visibleonscreenenabler3d class-visibleonscreenenabler3d" names="visibleonscreenenabler3d class_visibleonscreenenabler3d">
        <title>VisibleOnScreenEnabler3D</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_visibleonscreennotifier3d#class-visibleonscreennotifier3d"><inline classes="std std-ref">VisibleOnScreenNotifier3D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_visualinstance3d#class-visualinstance3d"><inline classes="std std-ref">VisualInstance3D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node3d#class-node3d"><inline classes="std std-ref">Node3D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>3D 空间的盒形区块，当在屏幕上可见时，启用目标节点。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph><strong>VisibleOnScreenEnabler3D</strong> 包含 3D 空间的盒形区块和目标节点。当该区域的任何部分在屏幕上可见时，目标节点将自动启用（通过其 <reference internal="True" refuri="class_node#class-node-property-process-mode"><inline classes="std std-ref">Node.process_mode</inline></reference> 属性），否则将自动禁用。例如，这可以被用于仅在玩家接近敌人时激活敌人。</paragraph>
            <paragraph>如果你只想在该区块在屏幕上可见时收到通知，请参阅 <reference internal="True" refuri="class_visibleonscreennotifier3d#class-visibleonscreennotifier3d"><inline classes="std std-ref">VisibleOnScreenNotifier3D</inline></reference>。</paragraph>
            <paragraph><strong>注意：</strong><strong>VisibleOnScreenEnabler3D</strong> 使用近似启发式，不考虑墙壁和其他遮挡，除非使用遮挡剔除。除非将 <reference internal="True" refuri="class_node3d#class-node3d-property-visible"><inline classes="std std-ref">Node3D.visible</inline></reference> 设置为 <literal>true</literal>，否则它也不会起作用。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="61"></colspec>
                    <colspec colwidth="83"></colspec>
                    <colspec colwidth="20"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-visibleonscreenenabler3d-enablemode"><inline classes="std std-ref">EnableMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-visibleonscreenenabler3d-property-enable-mode"><inline classes="std std-ref">enable_mode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-visibleonscreenenabler3d-property-enable-node-path"><inline classes="std std-ref">enable_node_path</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>NodePath("..")</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="枚举">
            <title>枚举</title>
            <target refid="enum-visibleonscreenenabler3d-enablemode"></target>
            <paragraph classes="classref-enumeration" ids="enum-visibleonscreenenabler3d-enablemode" names="enum_visibleonscreenenabler3d_enablemode">enum <strong>EnableMode</strong>: <reference internal="True" refid="enum-visibleonscreenenabler3d-enablemode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-visibleonscreenenabler3d-constant-enable-mode-inherit"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-visibleonscreenenabler3d-constant-enable-mode-inherit" names="class_visibleonscreenenabler3d_constant_enable_mode_inherit"><reference internal="True" refid="enum-visibleonscreenenabler3d-enablemode"><inline classes="std std-ref">EnableMode</inline></reference> <strong>ENABLE_MODE_INHERIT</strong> = <literal>0</literal></paragraph>
            <paragraph>对应 <reference internal="True" refuri="class_node#class-node-constant-process-mode-inherit"><inline classes="std std-ref">Node.PROCESS_MODE_INHERIT</inline></reference>。</paragraph>
            <target refid="class-visibleonscreenenabler3d-constant-enable-mode-always"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-visibleonscreenenabler3d-constant-enable-mode-always" names="class_visibleonscreenenabler3d_constant_enable_mode_always"><reference internal="True" refid="enum-visibleonscreenenabler3d-enablemode"><inline classes="std std-ref">EnableMode</inline></reference> <strong>ENABLE_MODE_ALWAYS</strong> = <literal>1</literal></paragraph>
            <paragraph>对应 <reference internal="True" refuri="class_node#class-node-constant-process-mode-always"><inline classes="std std-ref">Node.PROCESS_MODE_ALWAYS</inline></reference>。</paragraph>
            <target refid="class-visibleonscreenenabler3d-constant-enable-mode-when-paused"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-visibleonscreenenabler3d-constant-enable-mode-when-paused" names="class_visibleonscreenenabler3d_constant_enable_mode_when_paused"><reference internal="True" refid="enum-visibleonscreenenabler3d-enablemode"><inline classes="std std-ref">EnableMode</inline></reference> <strong>ENABLE_MODE_WHEN_PAUSED</strong> = <literal>2</literal></paragraph>
            <paragraph>对应 <reference internal="True" refuri="class_node#class-node-constant-process-mode-when-paused"><inline classes="std std-ref">Node.PROCESS_MODE_WHEN_PAUSED</inline></reference>。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="属性说明">
            <title>属性说明</title>
            <target refid="class-visibleonscreenenabler3d-property-enable-mode"></target>
            <paragraph classes="classref-property" ids="class-visibleonscreenenabler3d-property-enable-mode" names="class_visibleonscreenenabler3d_property_enable_mode"><reference internal="True" refid="enum-visibleonscreenenabler3d-enablemode"><inline classes="std std-ref">EnableMode</inline></reference> <strong>enable_mode</strong> = <literal>0</literal> <reference internal="True" refid="class-visibleonscreenenabler3d-property-enable-mode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_enable_mode</strong>(value: <reference internal="True" refid="enum-visibleonscreenenabler3d-enablemode"><inline classes="std std-ref">EnableMode</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-visibleonscreenenabler3d-enablemode"><inline classes="std std-ref">EnableMode</inline></reference> <strong>get_enable_mode</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>确定如何启用目标节点。对应于 <reference internal="True" refuri="class_node#enum-node-processmode"><inline classes="std std-ref">ProcessMode</inline></reference>。当该节点被禁用时，它始终使用 <reference internal="True" refuri="class_node#class-node-constant-process-mode-disabled"><inline classes="std std-ref">Node.PROCESS_MODE_DISABLED</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-visibleonscreenenabler3d-property-enable-node-path"></target>
            <paragraph classes="classref-property" ids="class-visibleonscreenenabler3d-property-enable-node-path" names="class_visibleonscreenenabler3d_property_enable_node_path"><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> <strong>enable_node_path</strong> = <literal>NodePath("..")</literal> <reference internal="True" refid="class-visibleonscreenenabler3d-property-enable-node-path"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_enable_node_path</strong>(value: <reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> <strong>get_enable_node_path</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>目标节点的路径，相对于 <strong>VisibleOnScreenEnabler3D</strong>。目标节点会被缓存；只有在设置这个属性时（<strong>VisibleOnScreenEnabler3D</strong> 位于场景树中），以及 <strong>VisibleOnScreenEnabler3D</strong> 进入场景树时会进行赋值。如果路径为空，则不会影响任何节点。如果路径无效，则还会生成错误。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

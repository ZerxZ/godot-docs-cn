<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_audioeffectdistortion.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/AudioEffectDistortion.xml.</comment>
    <target refid="class-audioeffectdistortion"></target>
    <section ids="audioeffectdistortion class-audioeffectdistortion" names="audioeffectdistortion class_audioeffectdistortion">
        <title>AudioEffectDistortion</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_audioeffect#class-audioeffect"><inline classes="std std-ref">AudioEffect</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>为音频总线添加失真音频效果。</paragraph>
        <paragraph>修改声音，使其失真。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>可以使用不同的类型：削波、正切、低保真（位破碎）、过载、波形。</paragraph>
            <paragraph>通过扭曲波形，频率内容会发生变化，这通常会使声音“清脆”或“粗糙”。对于游戏，它可以非常有效地模拟来自某些饱和设备或扬声器的声音。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference internal="True" refuri="../tutorials/audio/audio_buses"><inline classes="doc">音频总线</inline></reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="46"></colspec>
                    <colspec colwidth="68"></colspec>
                    <colspec colwidth="13"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audioeffectdistortion-property-drive"><inline classes="std std-ref">drive</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audioeffectdistortion-property-keep-hf-hz"><inline classes="std std-ref">keep_hf_hz</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>16000.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-audioeffectdistortion-mode"><inline classes="std std-ref">Mode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audioeffectdistortion-property-mode"><inline classes="std std-ref">mode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audioeffectdistortion-property-post-gain"><inline classes="std std-ref">post_gain</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audioeffectdistortion-property-pre-gain"><inline classes="std std-ref">pre_gain</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="枚举">
            <title>枚举</title>
            <target refid="enum-audioeffectdistortion-mode"></target>
            <paragraph classes="classref-enumeration" ids="enum-audioeffectdistortion-mode" names="enum_audioeffectdistortion_mode">enum <strong>Mode</strong>: <reference internal="True" refid="enum-audioeffectdistortion-mode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-audioeffectdistortion-constant-mode-clip"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-audioeffectdistortion-constant-mode-clip" names="class_audioeffectdistortion_constant_mode_clip"><reference internal="True" refid="enum-audioeffectdistortion-mode"><inline classes="std std-ref">Mode</inline></reference> <strong>MODE_CLIP</strong> = <literal>0</literal></paragraph>
            <paragraph>数字失真效果，可以切断波形顶部和底部的峰值。</paragraph>
            <target refid="class-audioeffectdistortion-constant-mode-atan"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-audioeffectdistortion-constant-mode-atan" names="class_audioeffectdistortion_constant_mode_atan"><reference internal="True" refid="enum-audioeffectdistortion-mode"><inline classes="std std-ref">Mode</inline></reference> <strong>MODE_ATAN</strong> = <literal>1</literal></paragraph>
            <container classes="contribute">
                <paragraph>该枚举目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
            <target refid="class-audioeffectdistortion-constant-mode-lofi"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-audioeffectdistortion-constant-mode-lofi" names="class_audioeffectdistortion_constant_mode_lofi"><reference internal="True" refid="enum-audioeffectdistortion-mode"><inline classes="std std-ref">Mode</inline></reference> <strong>MODE_LOFI</strong> = <literal>2</literal></paragraph>
            <paragraph>低分辨率的数字失真效果（位深度减少）。可以使用它来模拟早期数字音频设备的声音。</paragraph>
            <target refid="class-audioeffectdistortion-constant-mode-overdrive"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-audioeffectdistortion-constant-mode-overdrive" names="class_audioeffectdistortion_constant_mode_overdrive"><reference internal="True" refid="enum-audioeffectdistortion-mode"><inline classes="std std-ref">Mode</inline></reference> <strong>MODE_OVERDRIVE</strong> = <literal>3</literal></paragraph>
            <paragraph>模拟通常用于固态乐器放大器的场效应晶体管产生的暖失真。<reference internal="True" refid="class-audioeffectdistortion-property-drive"><inline classes="std std-ref">drive</inline></reference> 属性在该模式下无效。</paragraph>
            <target refid="class-audioeffectdistortion-constant-mode-waveshape"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-audioeffectdistortion-constant-mode-waveshape" names="class_audioeffectdistortion_constant_mode_waveshape"><reference internal="True" refid="enum-audioeffectdistortion-mode"><inline classes="std std-ref">Mode</inline></reference> <strong>MODE_WAVESHAPE</strong> = <literal>4</literal></paragraph>
            <paragraph>波形变形失真主要是电子音乐人为了获得格外粗糙的声音而使用的。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="属性说明">
            <title>属性说明</title>
            <target refid="class-audioeffectdistortion-property-drive"></target>
            <paragraph classes="classref-property" ids="class-audioeffectdistortion-property-drive" names="class_audioeffectdistortion_property_drive"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>drive</strong> = <literal>0.0</literal> <reference internal="True" refid="class-audioeffectdistortion-property-drive"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_drive</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_drive</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>失真度。值的范围可在 0 到 1 之间。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audioeffectdistortion-property-keep-hf-hz"></target>
            <paragraph classes="classref-property" ids="class-audioeffectdistortion-property-keep-hf-hz" names="class_audioeffectdistortion_property_keep_hf_hz"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>keep_hf_hz</strong> = <literal>16000.0</literal> <reference internal="True" refid="class-audioeffectdistortion-property-keep-hf-hz"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_keep_hf_hz</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_keep_hf_hz</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>高通滤波器，单位为 Hz。高于此值的频率不会受到失真的影响。该值的范围为 1 至 20000。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audioeffectdistortion-property-mode"></target>
            <paragraph classes="classref-property" ids="class-audioeffectdistortion-property-mode" names="class_audioeffectdistortion_property_mode"><reference internal="True" refid="enum-audioeffectdistortion-mode"><inline classes="std std-ref">Mode</inline></reference> <strong>mode</strong> = <literal>0</literal> <reference internal="True" refid="class-audioeffectdistortion-property-mode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_mode</strong>(value: <reference internal="True" refid="enum-audioeffectdistortion-mode"><inline classes="std std-ref">Mode</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-audioeffectdistortion-mode"><inline classes="std std-ref">Mode</inline></reference> <strong>get_mode</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>失真类型。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audioeffectdistortion-property-post-gain"></target>
            <paragraph classes="classref-property" ids="class-audioeffectdistortion-property-post-gain" names="class_audioeffectdistortion_property_post_gain"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>post_gain</strong> = <literal>0.0</literal> <reference internal="True" refid="class-audioeffectdistortion-property-post-gain"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_post_gain</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_post_gain</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>在效果后增加或减少的音量，单位为分贝。取值范围从 -80 到 24。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audioeffectdistortion-property-pre-gain"></target>
            <paragraph classes="classref-property" ids="class-audioeffectdistortion-property-pre-gain" names="class_audioeffectdistortion_property_pre_gain"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>pre_gain</strong> = <literal>0.0</literal> <reference internal="True" refid="class-audioeffectdistortion-property-pre-gain"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_pre_gain</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_pre_gain</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>在效果前增加或减少的音量，单位为分贝。取值范围从 -60 到 60。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效运算符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列位标志构成位掩码的整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

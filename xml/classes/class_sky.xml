<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_sky.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/Sky.xml.</comment>
    <target refid="class-sky"></target>
    <section ids="sky class-sky" names="sky class_sky">
        <title>Sky</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>使用 <reference internal="True" refuri="class_material#class-material"><inline classes="std std-ref">Material</inline></reference> 定义 3D 环境的背景。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph><strong>Sky</strong> 类使用 <reference internal="True" refuri="class_material#class-material"><inline classes="std std-ref">Material</inline></reference> 来渲染 3D 环境的背景及其通过更新反射/辐射立方体贴图发出的光。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="44"></colspec>
                    <colspec colwidth="56"></colspec>
                    <colspec colwidth="7"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-sky-processmode"><inline classes="std std-ref">ProcessMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-sky-property-process-mode"><inline classes="std std-ref">process_mode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-sky-radiancesize"><inline classes="std std-ref">RadianceSize</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-sky-property-radiance-size"><inline classes="std std-ref">radiance_size</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>3</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_material#class-material"><inline classes="std std-ref">Material</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-sky-property-sky-material"><inline classes="std std-ref">sky_material</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="枚举">
            <title>枚举</title>
            <target refid="enum-sky-radiancesize"></target>
            <paragraph classes="classref-enumeration" ids="enum-sky-radiancesize" names="enum_sky_radiancesize">enum <strong>RadianceSize</strong>: <reference internal="True" refid="enum-sky-radiancesize"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-sky-constant-radiance-size-32"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-sky-constant-radiance-size-32" names="class_sky_constant_radiance_size_32"><reference internal="True" refid="enum-sky-radiancesize"><inline classes="std std-ref">RadianceSize</inline></reference> <strong>RADIANCE_SIZE_32</strong> = <literal>0</literal></paragraph>
            <paragraph>辐照度纹理尺寸为 32×32 像素。</paragraph>
            <target refid="class-sky-constant-radiance-size-64"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-sky-constant-radiance-size-64" names="class_sky_constant_radiance_size_64"><reference internal="True" refid="enum-sky-radiancesize"><inline classes="std std-ref">RadianceSize</inline></reference> <strong>RADIANCE_SIZE_64</strong> = <literal>1</literal></paragraph>
            <paragraph>辐照度纹理尺寸为 64×64 像素。</paragraph>
            <target refid="class-sky-constant-radiance-size-128"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-sky-constant-radiance-size-128" names="class_sky_constant_radiance_size_128"><reference internal="True" refid="enum-sky-radiancesize"><inline classes="std std-ref">RadianceSize</inline></reference> <strong>RADIANCE_SIZE_128</strong> = <literal>2</literal></paragraph>
            <paragraph>辐照度纹理尺寸为128×128像素。</paragraph>
            <target refid="class-sky-constant-radiance-size-256"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-sky-constant-radiance-size-256" names="class_sky_constant_radiance_size_256"><reference internal="True" refid="enum-sky-radiancesize"><inline classes="std std-ref">RadianceSize</inline></reference> <strong>RADIANCE_SIZE_256</strong> = <literal>3</literal></paragraph>
            <paragraph>辐照度纹理尺寸为 256×256 像素。</paragraph>
            <target refid="class-sky-constant-radiance-size-512"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-sky-constant-radiance-size-512" names="class_sky_constant_radiance_size_512"><reference internal="True" refid="enum-sky-radiancesize"><inline classes="std std-ref">RadianceSize</inline></reference> <strong>RADIANCE_SIZE_512</strong> = <literal>4</literal></paragraph>
            <paragraph>辐照度纹理尺寸为 512×512 像素。</paragraph>
            <target refid="class-sky-constant-radiance-size-1024"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-sky-constant-radiance-size-1024" names="class_sky_constant_radiance_size_1024"><reference internal="True" refid="enum-sky-radiancesize"><inline classes="std std-ref">RadianceSize</inline></reference> <strong>RADIANCE_SIZE_1024</strong> = <literal>5</literal></paragraph>
            <paragraph>辐照度纹理尺寸为 1024×1024 像素。</paragraph>
            <target refid="class-sky-constant-radiance-size-2048"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-sky-constant-radiance-size-2048" names="class_sky_constant_radiance_size_2048"><reference internal="True" refid="enum-sky-radiancesize"><inline classes="std std-ref">RadianceSize</inline></reference> <strong>RADIANCE_SIZE_2048</strong> = <literal>6</literal></paragraph>
            <paragraph>辐照度纹理尺寸为 2048×2048 像素。</paragraph>
            <target refid="class-sky-constant-radiance-size-max"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-sky-constant-radiance-size-max" names="class_sky_constant_radiance_size_max"><reference internal="True" refid="enum-sky-radiancesize"><inline classes="std std-ref">RadianceSize</inline></reference> <strong>RADIANCE_SIZE_MAX</strong> = <literal>7</literal></paragraph>
            <paragraph>代表 <reference internal="True" refid="enum-sky-radiancesize"><inline classes="std std-ref">RadianceSize</inline></reference> 枚举的大小。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-sky-processmode"></target>
            <paragraph classes="classref-enumeration" ids="enum-sky-processmode" names="enum_sky_processmode">enum <strong>ProcessMode</strong>: <reference internal="True" refid="enum-sky-processmode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-sky-constant-process-mode-automatic"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-sky-constant-process-mode-automatic" names="class_sky_constant_process_mode_automatic"><reference internal="True" refid="enum-sky-processmode"><inline classes="std std-ref">ProcessMode</inline></reference> <strong>PROCESS_MODE_AUTOMATIC</strong> = <literal>0</literal></paragraph>
            <paragraph>根据天空着色器自动选择合适的处理模式。如果着色器使用 <literal>TIME</literal> 或 <literal>POSITION</literal>，这将使用 <reference internal="True" refid="class-sky-constant-process-mode-realtime"><inline classes="std std-ref">PROCESS_MODE_REALTIME</inline></reference>。如果着色器使用任何 <literal>LIGHT_*</literal> 变量或任何自定义 uniform，这将使用 <reference internal="True" refid="class-sky-constant-process-mode-incremental"><inline classes="std std-ref">PROCESS_MODE_INCREMENTAL</inline></reference>。否则，这默认为 <reference internal="True" refid="class-sky-constant-process-mode-quality"><inline classes="std std-ref">PROCESS_MODE_QUALITY</inline></reference>。</paragraph>
            <target refid="class-sky-constant-process-mode-quality"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-sky-constant-process-mode-quality" names="class_sky_constant_process_mode_quality"><reference internal="True" refid="enum-sky-processmode"><inline classes="std std-ref">ProcessMode</inline></reference> <strong>PROCESS_MODE_QUALITY</strong> = <literal>1</literal></paragraph>
            <paragraph>使用高质量重要性采样处理辐照度贴图。得到的结果通常比 <reference internal="True" refid="class-sky-constant-process-mode-realtime"><inline classes="std std-ref">PROCESS_MODE_REALTIME</inline></reference> 的质量更高，但需要花费更多的时间来生成。如果你计划在运行时修改天空，则不应使用。如果你发现反射不够模糊，出现了火花或者萤火虫，请尝试增大 <reference internal="True" refuri="class_projectsettings#class-projectsettings-property-rendering-reflections-sky-reflections-ggx-samples"><inline classes="std std-ref">ProjectSettings.rendering/reflections/sky_reflections/ggx_samples</inline></reference>。</paragraph>
            <target refid="class-sky-constant-process-mode-incremental"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-sky-constant-process-mode-incremental" names="class_sky_constant_process_mode_incremental"><reference internal="True" refid="enum-sky-processmode"><inline classes="std std-ref">ProcessMode</inline></reference> <strong>PROCESS_MODE_INCREMENTAL</strong> = <literal>2</literal></paragraph>
            <paragraph>使用与 <reference internal="True" refid="class-sky-constant-process-mode-quality"><inline classes="std std-ref">PROCESS_MODE_QUALITY</inline></reference> 相同的高质量重要性采样来处理辐照度贴图，但更新会占用几帧。帧数由 <reference internal="True" refuri="class_projectsettings#class-projectsettings-property-rendering-reflections-sky-reflections-roughness-layers"><inline classes="std std-ref">ProjectSettings.rendering/reflections/sky_reflections/roughness_layers</inline></reference> 决定。当需要最高质量的辐照度贴图，但天空更新缓慢时，请使用该选项。</paragraph>
            <target refid="class-sky-constant-process-mode-realtime"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-sky-constant-process-mode-realtime" names="class_sky_constant_process_mode_realtime"><reference internal="True" refid="enum-sky-processmode"><inline classes="std std-ref">ProcessMode</inline></reference> <strong>PROCESS_MODE_REALTIME</strong> = <literal>3</literal></paragraph>
            <paragraph>使用快速过滤算法处理辐射度贴图。一般来说，这会导致质量较低，但运行时间会大大加快。如果需要更好的质量，但仍需要每帧更新天空，请考虑开启 <reference internal="True" refuri="class_projectsettings#class-projectsettings-property-rendering-reflections-sky-reflections-fast-filter-high-quality"><inline classes="std std-ref">ProjectSettings.rendering/reflections/sky_reflections/fast_filter_high_quality</inline></reference>。</paragraph>
            <paragraph><strong>注意：</strong>快速过滤算法被限制为 256x256 立方体贴图，因此必须将 <reference internal="True" refid="class-sky-property-radiance-size"><inline classes="std std-ref">radiance_size</inline></reference> 设置为 <reference internal="True" refid="class-sky-constant-radiance-size-256"><inline classes="std std-ref">RADIANCE_SIZE_256</inline></reference>。否则会输出警告并忽略覆盖的辐射度大小。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="属性说明">
            <title>属性说明</title>
            <target refid="class-sky-property-process-mode"></target>
            <paragraph classes="classref-property" ids="class-sky-property-process-mode" names="class_sky_property_process_mode"><reference internal="True" refid="enum-sky-processmode"><inline classes="std std-ref">ProcessMode</inline></reference> <strong>process_mode</strong> = <literal>0</literal> <reference internal="True" refid="class-sky-property-process-mode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_process_mode</strong>(value: <reference internal="True" refid="enum-sky-processmode"><inline classes="std std-ref">ProcessMode</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-sky-processmode"><inline classes="std std-ref">ProcessMode</inline></reference> <strong>get_process_mode</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>设置从天空生成辐照度贴图的方法。辐照度贴图是一个立方体贴图，具有递增的模糊版本的天空，以对应于不同级别的粗糙度。辐照度贴图的计算成本很高。有关选项，请参阅 <reference internal="True" refid="enum-sky-processmode"><inline classes="std std-ref">ProcessMode</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-sky-property-radiance-size"></target>
            <paragraph classes="classref-property" ids="class-sky-property-radiance-size" names="class_sky_property_radiance_size"><reference internal="True" refid="enum-sky-radiancesize"><inline classes="std std-ref">RadianceSize</inline></reference> <strong>radiance_size</strong> = <literal>3</literal> <reference internal="True" refid="class-sky-property-radiance-size"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_radiance_size</strong>(value: <reference internal="True" refid="enum-sky-radiancesize"><inline classes="std std-ref">RadianceSize</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-sky-radiancesize"><inline classes="std std-ref">RadianceSize</inline></reference> <strong>get_radiance_size</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>该 <strong>Sky</strong> 的辐照度贴图大小。辐射度贴图尺寸越大，来自 <strong>Sky</strong> 的照明就越详细。</paragraph>
            <paragraph>取值见 <reference internal="True" refid="enum-sky-radiancesize"><inline classes="std std-ref">RadianceSize</inline></reference> 常量。</paragraph>
            <paragraph><strong>注意：</strong>某些硬件在使用较高的辐照度大小，尤其是 <reference internal="True" refid="class-sky-constant-radiance-size-512"><inline classes="std std-ref">RADIANCE_SIZE_512</inline></reference> 及以上时，会遇到问题。请仅在高端硬件上使用如此高的值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-sky-property-sky-material"></target>
            <paragraph classes="classref-property" ids="class-sky-property-sky-material" names="class_sky_property_sky_material"><reference internal="True" refuri="class_material#class-material"><inline classes="std std-ref">Material</inline></reference> <strong>sky_material</strong> <reference internal="True" refid="class-sky-property-sky-material"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_material</strong>(value: <reference internal="True" refuri="class_material#class-material"><inline classes="std std-ref">Material</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_material#class-material"><inline classes="std std-ref">Material</inline></reference> <strong>get_material</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>用于绘制该背景的 <reference internal="True" refuri="class_material#class-material"><inline classes="std std-ref">Material</inline></reference>。可以是 <reference internal="True" refuri="class_panoramaskymaterial#class-panoramaskymaterial"><inline classes="std std-ref">PanoramaSkyMaterial</inline></reference>、<reference internal="True" refuri="class_proceduralskymaterial#class-proceduralskymaterial"><inline classes="std std-ref">ProceduralSkyMaterial</inline></reference>、<reference internal="True" refuri="class_physicalskymaterial#class-physicalskymaterial"><inline classes="std std-ref">PhysicalSkyMaterial</inline></reference>，如果你想使用自定义着色器也可以是 <reference internal="True" refuri="class_shadermaterial#class-shadermaterial"><inline classes="std std-ref">ShaderMaterial</inline></reference>。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效运算符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列位标志构成位掩码的整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_planemesh.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/PlaneMesh.xml.</comment>
    <target refid="class-planemesh"></target>
    <section ids="planemesh class-planemesh" names="planemesh class_planemesh">
        <title>PlaneMesh</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_primitivemesh#class-primitivemesh"><inline classes="std std-ref">PrimitiveMesh</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_mesh#class-mesh"><inline classes="std std-ref">Mesh</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph><strong>派生：</strong> <reference internal="True" refuri="class_quadmesh#class-quadmesh"><inline classes="std std-ref">QuadMesh</inline></reference></paragraph>
        <paragraph>表示平面 <reference internal="True" refuri="class_primitivemesh#class-primitivemesh"><inline classes="std std-ref">PrimitiveMesh</inline></reference> 的类。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>代表平面 <reference internal="True" refuri="class_primitivemesh#class-primitivemesh"><inline classes="std std-ref">PrimitiveMesh</inline></reference> 的类。这个扁平的网格没有厚度。默认情况下，这个网格与 X 和 Z 轴对齐；这样的旋转并不适用于公告板材质。对于公告板材质，请将 <reference internal="True" refid="class-planemesh-property-orientation"><inline classes="std std-ref">orientation</inline></reference> 改为 <reference internal="True" refid="class-planemesh-constant-face-z"><inline classes="std std-ref">FACE_Z</inline></reference>。</paragraph>
            <paragraph><strong>注意：</strong>使用较大且有纹理的 <strong>PlaneMesh</strong>（例如地板）时，你可能在使用某些相机角度时会遇到 UV 抖动的问题。要解决这个问题，请增大 <reference internal="True" refid="class-planemesh-property-subdivide-depth"><inline classes="std std-ref">subdivide_depth</inline></reference> 和 <reference internal="True" refid="class-planemesh-property-subdivide-width"><inline classes="std std-ref">subdivide_width</inline></reference>，直到无法再察觉到 UV 抖动。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="48"></colspec>
                    <colspec colwidth="66"></colspec>
                    <colspec colwidth="22"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-planemesh-property-center-offset"><inline classes="std std-ref">center_offset</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Vector3(0, 0, 0)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-planemesh-orientation"><inline classes="std std-ref">Orientation</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-planemesh-property-orientation"><inline classes="std std-ref">orientation</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-planemesh-property-size"><inline classes="std std-ref">size</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Vector2(2, 2)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-planemesh-property-subdivide-depth"><inline classes="std std-ref">subdivide_depth</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-planemesh-property-subdivide-width"><inline classes="std std-ref">subdivide_width</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="枚举">
            <title>枚举</title>
            <target refid="enum-planemesh-orientation"></target>
            <paragraph classes="classref-enumeration" ids="enum-planemesh-orientation" names="enum_planemesh_orientation">enum <strong>Orientation</strong>: <reference internal="True" refid="enum-planemesh-orientation"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-planemesh-constant-face-x"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-planemesh-constant-face-x" names="class_planemesh_constant_face_x"><reference internal="True" refid="enum-planemesh-orientation"><inline classes="std std-ref">Orientation</inline></reference> <strong>FACE_X</strong> = <literal>0</literal></paragraph>
            <paragraph><strong>PlaneMesh</strong> 将面向 X 轴正方向。</paragraph>
            <target refid="class-planemesh-constant-face-y"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-planemesh-constant-face-y" names="class_planemesh_constant_face_y"><reference internal="True" refid="enum-planemesh-orientation"><inline classes="std std-ref">Orientation</inline></reference> <strong>FACE_Y</strong> = <literal>1</literal></paragraph>
            <paragraph><strong>PlaneMesh</strong> 将面向 Y 轴正方向。与 Godot 3.x 中 <strong>PlaneMesh</strong> 的行为一致。</paragraph>
            <target refid="class-planemesh-constant-face-z"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-planemesh-constant-face-z" names="class_planemesh_constant_face_z"><reference internal="True" refid="enum-planemesh-orientation"><inline classes="std std-ref">Orientation</inline></reference> <strong>FACE_Z</strong> = <literal>2</literal></paragraph>
            <paragraph><strong>PlaneMesh</strong> 将面向 Z 轴正方向。与 Godot 3.x 中 QuadMesh 的行为一致。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="属性说明">
            <title>属性说明</title>
            <target refid="class-planemesh-property-center-offset"></target>
            <paragraph classes="classref-property" ids="class-planemesh-property-center-offset" names="class_planemesh_property_center_offset"><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> <strong>center_offset</strong> = <literal>Vector3(0, 0, 0)</literal> <reference internal="True" refid="class-planemesh-property-center-offset"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_center_offset</strong>(value: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> <strong>get_center_offset</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>生成平面的偏移量。可用于粒子。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-planemesh-property-orientation"></target>
            <paragraph classes="classref-property" ids="class-planemesh-property-orientation" names="class_planemesh_property_orientation"><reference internal="True" refid="enum-planemesh-orientation"><inline classes="std std-ref">Orientation</inline></reference> <strong>orientation</strong> = <literal>1</literal> <reference internal="True" refid="class-planemesh-property-orientation"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_orientation</strong>(value: <reference internal="True" refid="enum-planemesh-orientation"><inline classes="std std-ref">Orientation</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-planemesh-orientation"><inline classes="std std-ref">Orientation</inline></reference> <strong>get_orientation</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph><strong>PlaneMesh</strong> 的朝向。可选项见 <reference internal="True" refid="enum-planemesh-orientation"><inline classes="std std-ref">Orientation</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-planemesh-property-size"></target>
            <paragraph classes="classref-property" ids="class-planemesh-property-size" names="class_planemesh_property_size"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>size</strong> = <literal>Vector2(2, 2)</literal> <reference internal="True" refid="class-planemesh-property-size"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_size</strong>(value: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>get_size</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>生成平面的大小。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-planemesh-property-subdivide-depth"></target>
            <paragraph classes="classref-property" ids="class-planemesh-property-subdivide-depth" names="class_planemesh_property_subdivide_depth"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>subdivide_depth</strong> = <literal>0</literal> <reference internal="True" refid="class-planemesh-property-subdivide-depth"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_subdivide_depth</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_subdivide_depth</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>沿 Z 轴细分的次数。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-planemesh-property-subdivide-width"></target>
            <paragraph classes="classref-property" ids="class-planemesh-property-subdivide-width" names="class_planemesh_property_subdivide_width"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>subdivide_width</strong> = <literal>0</literal> <reference internal="True" refid="class-planemesh-property-subdivide-width"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_subdivide_width</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_subdivide_width</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>沿 X 轴细分的次数。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效运算符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列位标志构成位掩码的整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_audiostreamplayer2d.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <meta content="sound, sfx" name="keywords">
    </meta>
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/AudioStreamPlayer2D.xml.</comment>
    <target refid="class-audiostreamplayer2d"></target>
    <section ids="audiostreamplayer2d class-audiostreamplayer2d" names="audiostreamplayer2d class_audiostreamplayer2d">
        <title>AudioStreamPlayer2D</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_node2d#class-node2d"><inline classes="std std-ref">Node2D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_canvasitem#class-canvasitem"><inline classes="std std-ref">CanvasItem</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>在 2D 空间中播放与位置相关的声音。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>播放随与监听者的距离增大而衰减的音频。</paragraph>
            <paragraph>默认情况下，音频是从屏幕中心收听的。要修改这个位置，可以在场景中添加一个 <reference internal="True" refuri="class_audiolistener2d#class-audiolistener2d"><inline classes="std std-ref">AudioListener2D</inline></reference> 节点，并通过调用 <reference internal="True" refuri="class_audiolistener2d#class-audiolistener2d-method-make-current"><inline classes="std std-ref">AudioListener2D.make_current</inline></reference> 将其启用。</paragraph>
            <paragraph>另请参阅 <reference internal="True" refuri="class_audiostreamplayer#class-audiostreamplayer"><inline classes="std std-ref">AudioStreamPlayer</inline></reference> 以非定位的方式播放声音。</paragraph>
            <paragraph><strong>注意：</strong>隐藏 <strong>AudioStreamPlayer2D</strong> 节点并不能禁用其音频输出。要暂时禁用 <strong>AudioStreamPlayer2D</strong> 的音频输出，请将 <reference internal="True" refid="class-audiostreamplayer2d-property-volume-db"><inline classes="std std-ref">volume_db</inline></reference> 设置为非常低的值，如 <literal>-100</literal>（人的听觉听不到）。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference internal="True" refuri="../tutorials/audio/audio_streams"><inline classes="doc">音频流</inline></reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="52"></colspec>
                    <colspec colwidth="78"></colspec>
                    <colspec colwidth="15"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplayer2d-property-area-mask"><inline classes="std std-ref">area_mask</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplayer2d-property-attenuation"><inline classes="std std-ref">attenuation</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplayer2d-property-autoplay"><inline classes="std std-ref">autoplay</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplayer2d-property-bus"><inline classes="std std-ref">bus</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>&amp;"Master"</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplayer2d-property-max-distance"><inline classes="std std-ref">max_distance</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>2000.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplayer2d-property-max-polyphony"><inline classes="std std-ref">max_polyphony</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplayer2d-property-panning-strength"><inline classes="std std-ref">panning_strength</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplayer2d-property-pitch-scale"><inline classes="std std-ref">pitch_scale</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_audioserver#enum-audioserver-playbacktype"><inline classes="std std-ref">PlaybackType</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplayer2d-property-playback-type"><inline classes="std std-ref">playback_type</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplayer2d-property-playing"><inline classes="std std-ref">playing</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_audiostream#class-audiostream"><inline classes="std std-ref">AudioStream</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplayer2d-property-stream"><inline classes="std std-ref">stream</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplayer2d-property-stream-paused"><inline classes="std std-ref">stream_paused</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplayer2d-property-volume-db"><inline classes="std std-ref">volume_db</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id4" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="55"></colspec>
                    <colspec colwidth="107"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplayer2d-method-get-playback-position"><inline classes="std std-ref">get_playback_position</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_audiostreamplayback#class-audiostreamplayback"><inline classes="std std-ref">AudioStreamPlayback</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplayer2d-method-get-stream-playback"><inline classes="std std-ref">get_stream_playback</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplayer2d-method-has-stream-playback"><inline classes="std std-ref">has_stream_playback</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplayer2d-method-play"><inline classes="std std-ref">play</inline></reference>(from_position: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> = 0.0)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplayer2d-method-seek"><inline classes="std std-ref">seek</inline></reference>(to_position: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplayer2d-method-stop"><inline classes="std std-ref">stop</inline></reference>()</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="信号">
            <title>信号</title>
            <target refid="class-audiostreamplayer2d-signal-finished"></target>
            <paragraph classes="classref-signal" ids="class-audiostreamplayer2d-signal-finished" names="class_audiostreamplayer2d_signal_finished"><strong>finished</strong>() <reference internal="True" refid="class-audiostreamplayer2d-signal-finished"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当音频停止播放时发出。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="属性说明">
            <title>属性说明</title>
            <target refid="class-audiostreamplayer2d-property-area-mask"></target>
            <paragraph classes="classref-property" ids="class-audiostreamplayer2d-property-area-mask" names="class_audiostreamplayer2d_property_area_mask"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>area_mask</strong> = <literal>1</literal> <reference internal="True" refid="class-audiostreamplayer2d-property-area-mask"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_area_mask</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_area_mask</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>决定对混响及音频总线效果有影响的 <reference internal="True" refuri="class_area2d#class-area2d"><inline classes="std std-ref">Area2D</inline></reference> 层。可使用区域对 <reference internal="True" refuri="class_audiostream#class-audiostream"><inline classes="std std-ref">AudioStream</inline></reference> 进行重定向，使其在特定的音频总线中播放。一个例子是可以用来制作“水域”，将水中播放的声音重定向至单独的音频总线，让声音听起来像是在水下播放。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamplayer2d-property-attenuation"></target>
            <paragraph classes="classref-property" ids="class-audiostreamplayer2d-property-attenuation" names="class_audiostreamplayer2d_property_attenuation"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>attenuation</strong> = <literal>1.0</literal> <reference internal="True" refid="class-audiostreamplayer2d-property-attenuation"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_attenuation</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_attenuation</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>以该属性为指数，将音量随着距离的增加而衰减。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamplayer2d-property-autoplay"></target>
            <paragraph classes="classref-property" ids="class-audiostreamplayer2d-property-autoplay" names="class_audiostreamplayer2d_property_autoplay"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>autoplay</strong> = <literal>false</literal> <reference internal="True" refid="class-audiostreamplayer2d-property-autoplay"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_autoplay</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_autoplay_enabled</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，在添加到场景树时将播放音频。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamplayer2d-property-bus"></target>
            <paragraph classes="classref-property" ids="class-audiostreamplayer2d-property-bus" names="class_audiostreamplayer2d_property_bus"><reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference> <strong>bus</strong> = <literal>&amp;"Master"</literal> <reference internal="True" refid="class-audiostreamplayer2d-property-bus"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_bus</strong>(value: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference> <strong>get_bus</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>这个音频在哪个总线上播放。</paragraph>
            <paragraph><strong>注意：</strong>设置这个属性时，请记住它并不会对给定的名称是否与现有总线匹配进行校验。这是因为音频总线布局可以在设置这个属性后再加载。如果这个给定的名称在运行时无法解析，就会回退到 <literal>"Master"</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamplayer2d-property-max-distance"></target>
            <paragraph classes="classref-property" ids="class-audiostreamplayer2d-property-max-distance" names="class_audiostreamplayer2d_property_max_distance"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>max_distance</strong> = <literal>2000.0</literal> <reference internal="True" refid="class-audiostreamplayer2d-property-max-distance"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_max_distance</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_max_distance</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>音频仍可听到的最大距离。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamplayer2d-property-max-polyphony"></target>
            <paragraph classes="classref-property" ids="class-audiostreamplayer2d-property-max-polyphony" names="class_audiostreamplayer2d_property_max_polyphony"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>max_polyphony</strong> = <literal>1</literal> <reference internal="True" refid="class-audiostreamplayer2d-property-max-polyphony"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_max_polyphony</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_max_polyphony</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>该节点可以同时播放的最大声音数。达到此值后，播放额外的声音将切断最旧的声音。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamplayer2d-property-panning-strength"></target>
            <paragraph classes="classref-property" ids="class-audiostreamplayer2d-property-panning-strength" names="class_audiostreamplayer2d_property_panning_strength"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>panning_strength</strong> = <literal>1.0</literal> <reference internal="True" refid="class-audiostreamplayer2d-property-panning-strength"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_panning_strength</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_panning_strength</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>通过将基础 <reference internal="True" refuri="class_projectsettings#class-projectsettings-property-audio-general-2d-panning-strength"><inline classes="std std-ref">ProjectSettings.audio/general/2d_panning_strength</inline></reference> 乘以该因子，来缩放该节点的声像强度。与较低的值相比，较高的值将从左到右更显著地声像移动音频。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamplayer2d-property-pitch-scale"></target>
            <paragraph classes="classref-property" ids="class-audiostreamplayer2d-property-pitch-scale" names="class_audiostreamplayer2d_property_pitch_scale"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>pitch_scale</strong> = <literal>1.0</literal> <reference internal="True" refid="class-audiostreamplayer2d-property-pitch-scale"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_pitch_scale</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_pitch_scale</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>音频的音高和节奏，作为音频样本的采样率的倍数。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamplayer2d-property-playback-type"></target>
            <paragraph classes="classref-property" ids="class-audiostreamplayer2d-property-playback-type" names="class_audiostreamplayer2d_property_playback_type"><reference internal="True" refuri="class_audioserver#enum-audioserver-playbacktype"><inline classes="std std-ref">PlaybackType</inline></reference> <strong>playback_type</strong> = <literal>0</literal> <reference internal="True" refid="class-audiostreamplayer2d-property-playback-type"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_playback_type</strong>(value: <reference internal="True" refuri="class_audioserver#enum-audioserver-playbacktype"><inline classes="std std-ref">PlaybackType</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_audioserver#enum-audioserver-playbacktype"><inline classes="std std-ref">PlaybackType</inline></reference> <strong>get_playback_type</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph><strong>实验性：</strong> 未来版本中可能修改或移除该属性。</paragraph>
            <paragraph>The playback type of the stream player. If set other than to the default value, it will force that playback type.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamplayer2d-property-playing"></target>
            <paragraph classes="classref-property" ids="class-audiostreamplayer2d-property-playing" names="class_audiostreamplayer2d_property_playing"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>playing</strong> = <literal>false</literal> <reference internal="True" refid="class-audiostreamplayer2d-property-playing"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_playing</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则音频正在播放，或者已加入播放队列（见 <reference internal="True" refid="class-audiostreamplayer2d-method-play"><inline classes="std std-ref">play</inline></reference>）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamplayer2d-property-stream"></target>
            <paragraph classes="classref-property" ids="class-audiostreamplayer2d-property-stream" names="class_audiostreamplayer2d_property_stream"><reference internal="True" refuri="class_audiostream#class-audiostream"><inline classes="std std-ref">AudioStream</inline></reference> <strong>stream</strong> <reference internal="True" refid="class-audiostreamplayer2d-property-stream"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_stream</strong>(value: <reference internal="True" refuri="class_audiostream#class-audiostream"><inline classes="std std-ref">AudioStream</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_audiostream#class-audiostream"><inline classes="std std-ref">AudioStream</inline></reference> <strong>get_stream</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>要播放的 <reference internal="True" refuri="class_audiostream#class-audiostream"><inline classes="std std-ref">AudioStream</inline></reference> 对象。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamplayer2d-property-stream-paused"></target>
            <paragraph classes="classref-property" ids="class-audiostreamplayer2d-property-stream-paused" names="class_audiostreamplayer2d_property_stream_paused"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>stream_paused</strong> = <literal>false</literal> <reference internal="True" refid="class-audiostreamplayer2d-property-stream-paused"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_stream_paused</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_stream_paused</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则播放会暂停。你可以通过将 <reference internal="True" refid="class-audiostreamplayer2d-property-stream-paused"><inline classes="std std-ref">stream_paused</inline></reference> 设置为 <literal>false</literal>来恢复它。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamplayer2d-property-volume-db"></target>
            <paragraph classes="classref-property" ids="class-audiostreamplayer2d-property-volume-db" names="class_audiostreamplayer2d_property_volume_db"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>volume_db</strong> = <literal>0.0</literal> <reference internal="True" refid="class-audiostreamplayer2d-property-volume-db"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_volume_db</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_volume_db</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>衰减前的基础音量。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id7" names="方法说明">
            <title>方法说明</title>
            <target refid="class-audiostreamplayer2d-method-get-playback-position"></target>
            <paragraph classes="classref-method" ids="class-audiostreamplayer2d-method-get-playback-position" names="class_audiostreamplayer2d_method_get_playback_position"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_playback_position</strong>() <reference internal="True" refid="class-audiostreamplayer2d-method-get-playback-position"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回 <reference internal="True" refuri="class_audiostream#class-audiostream"><inline classes="std std-ref">AudioStream</inline></reference> 中的位置。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamplayer2d-method-get-stream-playback"></target>
            <paragraph classes="classref-method" ids="class-audiostreamplayer2d-method-get-stream-playback" names="class_audiostreamplayer2d_method_get_stream_playback"><reference internal="True" refuri="class_audiostreamplayback#class-audiostreamplayback"><inline classes="std std-ref">AudioStreamPlayback</inline></reference> <strong>get_stream_playback</strong>() <reference internal="True" refid="class-audiostreamplayer2d-method-get-stream-playback"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回与该 <strong>AudioStreamPlayer2D</strong> 相关联的 <reference internal="True" refuri="class_audiostreamplayback#class-audiostreamplayback"><inline classes="std std-ref">AudioStreamPlayback</inline></reference> 对象。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamplayer2d-method-has-stream-playback"></target>
            <paragraph classes="classref-method" ids="class-audiostreamplayer2d-method-has-stream-playback" names="class_audiostreamplayer2d_method_has_stream_playback"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>has_stream_playback</strong>() <reference internal="True" refid="class-audiostreamplayer2d-method-has-stream-playback"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回该 <reference internal="True" refuri="class_audiostreamplayer#class-audiostreamplayer"><inline classes="std std-ref">AudioStreamPlayer</inline></reference> 是否能够返回 <reference internal="True" refuri="class_audiostreamplayback#class-audiostreamplayback"><inline classes="std std-ref">AudioStreamPlayback</inline></reference> 对象。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamplayer2d-method-play"></target>
            <paragraph classes="classref-method" ids="class-audiostreamplayer2d-method-play" names="class_audiostreamplayer2d_method_play"><abbreviation explanation="无返回值。">void</abbreviation> <strong>play</strong>(from_position: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> = 0.0) <reference internal="True" refid="class-audiostreamplayer2d-method-play"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将要播放的音频入队，将在下一物理帧从给定的位置 <literal>from_position</literal> 开始播放，单位为秒。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamplayer2d-method-seek"></target>
            <paragraph classes="classref-method" ids="class-audiostreamplayer2d-method-seek" names="class_audiostreamplayer2d_method_seek"><abbreviation explanation="无返回值。">void</abbreviation> <strong>seek</strong>(to_position: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <reference internal="True" refid="class-audiostreamplayer2d-method-seek"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置音频的播放位置，以秒为单位。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamplayer2d-method-stop"></target>
            <paragraph classes="classref-method" ids="class-audiostreamplayer2d-method-stop" names="class_audiostreamplayer2d_method_stop"><abbreviation explanation="无返回值。">void</abbreviation> <strong>stop</strong>() <reference internal="True" refid="class-audiostreamplayer2d-method-stop"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>停止音频。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

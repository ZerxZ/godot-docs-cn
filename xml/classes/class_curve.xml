<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_curve.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/Curve.xml.</comment>
    <target refid="class-curve"></target>
    <section ids="curve class-curve" names="curve class_curve">
        <title>Curve</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>数学曲线。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>该资源通过定义一组点和每个点的切线来描述数学曲线。默认情况下，它在 Y 轴上的范围在 <literal>0</literal> 到 <literal>1</literal> 之间，并且位置点相对于 <literal>0.5</literal> Y 位置。</paragraph>
            <paragraph>另请参阅为颜色插值设计的 <reference internal="True" refuri="class_gradient#class-gradient"><inline classes="std std-ref">Gradient</inline></reference>。另请参阅 <reference internal="True" refuri="class_curve2d#class-curve2d"><inline classes="std std-ref">Curve2D</inline></reference> 和 <reference internal="True" refuri="class_curve3d#class-curve3d"><inline classes="std std-ref">Curve3D</inline></reference>。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="27"></colspec>
                    <colspec colwidth="62"></colspec>
                    <colspec colwidth="9"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-curve-property-bake-resolution"><inline classes="std std-ref">bake_resolution</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>100</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-curve-property-max-value"><inline classes="std std-ref">max_value</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-curve-property-min-value"><inline classes="std std-ref">min_value</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-curve-property-point-count"><inline classes="std std-ref">point_count</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="44"></colspec>
                    <colspec colwidth="310"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-curve-method-add-point"><inline classes="std std-ref">add_point</inline></reference>(position: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>, left_tangent: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> = 0, right_tangent: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> = 0, left_mode: <reference internal="True" refid="enum-curve-tangentmode"><inline classes="std std-ref">TangentMode</inline></reference> = 0, right_mode: <reference internal="True" refid="enum-curve-tangentmode"><inline classes="std std-ref">TangentMode</inline></reference> = 0)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-curve-method-bake"><inline classes="std std-ref">bake</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-curve-method-clean-dupes"><inline classes="std std-ref">clean_dupes</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-curve-method-clear-points"><inline classes="std std-ref">clear_points</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-curve-tangentmode"><inline classes="std std-ref">TangentMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-curve-method-get-point-left-mode"><inline classes="std std-ref">get_point_left_mode</inline></reference>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-curve-method-get-point-left-tangent"><inline classes="std std-ref">get_point_left_tangent</inline></reference>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-curve-method-get-point-position"><inline classes="std std-ref">get_point_position</inline></reference>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-curve-tangentmode"><inline classes="std std-ref">TangentMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-curve-method-get-point-right-mode"><inline classes="std std-ref">get_point_right_mode</inline></reference>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-curve-method-get-point-right-tangent"><inline classes="std std-ref">get_point_right_tangent</inline></reference>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-curve-method-remove-point"><inline classes="std std-ref">remove_point</inline></reference>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-curve-method-sample"><inline classes="std std-ref">sample</inline></reference>(offset: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-curve-method-sample-baked"><inline classes="std std-ref">sample_baked</inline></reference>(offset: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-curve-method-set-point-left-mode"><inline classes="std std-ref">set_point_left_mode</inline></reference>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, mode: <reference internal="True" refid="enum-curve-tangentmode"><inline classes="std std-ref">TangentMode</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-curve-method-set-point-left-tangent"><inline classes="std std-ref">set_point_left_tangent</inline></reference>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, tangent: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-curve-method-set-point-offset"><inline classes="std std-ref">set_point_offset</inline></reference>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, offset: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-curve-method-set-point-right-mode"><inline classes="std std-ref">set_point_right_mode</inline></reference>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, mode: <reference internal="True" refid="enum-curve-tangentmode"><inline classes="std std-ref">TangentMode</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-curve-method-set-point-right-tangent"><inline classes="std std-ref">set_point_right_tangent</inline></reference>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, tangent: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-curve-method-set-point-value"><inline classes="std std-ref">set_point_value</inline></reference>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, y: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="信号">
            <title>信号</title>
            <target refid="class-curve-signal-range-changed"></target>
            <paragraph classes="classref-signal" ids="class-curve-signal-range-changed" names="class_curve_signal_range_changed"><strong>range_changed</strong>() <reference internal="True" refid="class-curve-signal-range-changed"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>更改 <reference internal="True" refid="class-curve-property-max-value"><inline classes="std std-ref">max_value</inline></reference> 或 <reference internal="True" refid="class-curve-property-min-value"><inline classes="std std-ref">min_value</inline></reference> 时发出。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="枚举">
            <title>枚举</title>
            <target refid="enum-curve-tangentmode"></target>
            <paragraph classes="classref-enumeration" ids="enum-curve-tangentmode" names="enum_curve_tangentmode">enum <strong>TangentMode</strong>: <reference internal="True" refid="enum-curve-tangentmode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-curve-constant-tangent-free"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-curve-constant-tangent-free" names="class_curve_constant_tangent_free"><reference internal="True" refid="enum-curve-tangentmode"><inline classes="std std-ref">TangentMode</inline></reference> <strong>TANGENT_FREE</strong> = <literal>0</literal></paragraph>
            <paragraph>点这边的切线是用户自定义的。</paragraph>
            <target refid="class-curve-constant-tangent-linear"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-curve-constant-tangent-linear" names="class_curve_constant_tangent_linear"><reference internal="True" refid="enum-curve-tangentmode"><inline classes="std std-ref">TangentMode</inline></reference> <strong>TANGENT_LINEAR</strong> = <literal>1</literal></paragraph>
            <paragraph>曲线计算点的这一侧的切线，作为向相邻点的一半的斜率。</paragraph>
            <target refid="class-curve-constant-tangent-mode-count"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-curve-constant-tangent-mode-count" names="class_curve_constant_tangent_mode_count"><reference internal="True" refid="enum-curve-tangentmode"><inline classes="std std-ref">TangentMode</inline></reference> <strong>TANGENT_MODE_COUNT</strong> = <literal>2</literal></paragraph>
            <paragraph>可用切线模式的总数。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="属性说明">
            <title>属性说明</title>
            <target refid="class-curve-property-bake-resolution"></target>
            <paragraph classes="classref-property" ids="class-curve-property-bake-resolution" names="class_curve_property_bake_resolution"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>bake_resolution</strong> = <literal>100</literal> <reference internal="True" refid="class-curve-property-bake-resolution"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_bake_resolution</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_bake_resolution</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>烘焙（即缓存）曲线数据中包含的点的数量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-curve-property-max-value"></target>
            <paragraph classes="classref-property" ids="class-curve-property-max-value" names="class_curve_property_max_value"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>max_value</strong> = <literal>1.0</literal> <reference internal="True" refid="class-curve-property-max-value"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_max_value</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_max_value</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>曲线能达到的最大值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-curve-property-min-value"></target>
            <paragraph classes="classref-property" ids="class-curve-property-min-value" names="class_curve_property_min_value"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>min_value</strong> = <literal>0.0</literal> <reference internal="True" refid="class-curve-property-min-value"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_min_value</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_min_value</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>曲线能达到的最小值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-curve-property-point-count"></target>
            <paragraph classes="classref-property" ids="class-curve-property-point-count" names="class_curve_property_point_count"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>point_count</strong> = <literal>0</literal> <reference internal="True" refid="class-curve-property-point-count"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_point_count</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_point_count</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>描述该曲线的点的数量。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id7" names="方法说明">
            <title>方法说明</title>
            <target refid="class-curve-method-add-point"></target>
            <paragraph classes="classref-method" ids="class-curve-method-add-point" names="class_curve_method_add_point"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>add_point</strong>(position: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>, left_tangent: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> = 0, right_tangent: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> = 0, left_mode: <reference internal="True" refid="enum-curve-tangentmode"><inline classes="std std-ref">TangentMode</inline></reference> = 0, right_mode: <reference internal="True" refid="enum-curve-tangentmode"><inline classes="std std-ref">TangentMode</inline></reference> = 0) <reference internal="True" refid="class-curve-method-add-point"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>在曲线上添加一个点。对于每一侧，如果 <literal>*_mode</literal> 为 <reference internal="True" refid="class-curve-constant-tangent-linear"><inline classes="std std-ref">TANGENT_LINEAR</inline></reference>，则 <literal>*_tangent</literal> 角度（以度为单位）将使用曲线到邻近点的一半的斜率。如果 <literal>*_mode</literal> 设置为 <reference internal="True" refid="class-curve-constant-tangent-free"><inline classes="std std-ref">TANGENT_FREE</inline></reference>，则允许自定义分配给 <literal>*_tangent</literal> 的角度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-curve-method-bake"></target>
            <paragraph classes="classref-method" ids="class-curve-method-bake" names="class_curve_method_bake"><abbreviation explanation="无返回值。">void</abbreviation> <strong>bake</strong>() <reference internal="True" refid="class-curve-method-bake"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>重新计算曲线的烘焙点缓存。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-curve-method-clean-dupes"></target>
            <paragraph classes="classref-method" ids="class-curve-method-clean-dupes" names="class_curve_method_clean_dupes"><abbreviation explanation="无返回值。">void</abbreviation> <strong>clean_dupes</strong>() <reference internal="True" refid="class-curve-method-clean-dupes"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>移除重复点，即与曲线上相邻点的距离小于 0.00001 个单位（引擎中的 epsilon 值）的点。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-curve-method-clear-points"></target>
            <paragraph classes="classref-method" ids="class-curve-method-clear-points" names="class_curve_method_clear_points"><abbreviation explanation="无返回值。">void</abbreviation> <strong>clear_points</strong>() <reference internal="True" refid="class-curve-method-clear-points"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>从曲线中移除所有点。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-curve-method-get-point-left-mode"></target>
            <paragraph classes="classref-method" ids="class-curve-method-get-point-left-mode" names="class_curve_method_get_point_left_mode"><reference internal="True" refid="enum-curve-tangentmode"><inline classes="std std-ref">TangentMode</inline></reference> <strong>get_point_left_mode</strong>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-curve-method-get-point-left-mode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回索引为 <literal>index</literal> 的点的左侧切线模式 <reference internal="True" refid="enum-curve-tangentmode"><inline classes="std std-ref">TangentMode</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-curve-method-get-point-left-tangent"></target>
            <paragraph classes="classref-method" ids="class-curve-method-get-point-left-tangent" names="class_curve_method_get_point_left_tangent"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_point_left_tangent</strong>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-curve-method-get-point-left-tangent"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回索引为 <literal>index</literal> 的点的左侧切线夹角（单位为度）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-curve-method-get-point-position"></target>
            <paragraph classes="classref-method" ids="class-curve-method-get-point-position" names="class_curve_method_get_point_position"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>get_point_position</strong>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-curve-method-get-point-position"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回索引为 <literal>index</literal> 的点的曲线坐标。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-curve-method-get-point-right-mode"></target>
            <paragraph classes="classref-method" ids="class-curve-method-get-point-right-mode" names="class_curve_method_get_point_right_mode"><reference internal="True" refid="enum-curve-tangentmode"><inline classes="std std-ref">TangentMode</inline></reference> <strong>get_point_right_mode</strong>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-curve-method-get-point-right-mode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回索引为 <literal>index</literal> 的点的右侧切线模式 <reference internal="True" refid="enum-curve-tangentmode"><inline classes="std std-ref">TangentMode</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-curve-method-get-point-right-tangent"></target>
            <paragraph classes="classref-method" ids="class-curve-method-get-point-right-tangent" names="class_curve_method_get_point_right_tangent"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_point_right_tangent</strong>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-curve-method-get-point-right-tangent"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回索引为 <literal>index</literal> 的点的右侧切线夹角（单位为度）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-curve-method-remove-point"></target>
            <paragraph classes="classref-method" ids="class-curve-method-remove-point" names="class_curve_method_remove_point"><abbreviation explanation="无返回值。">void</abbreviation> <strong>remove_point</strong>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-curve-method-remove-point"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>移除曲线中索引为 <literal>index</literal> 的点。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-curve-method-sample"></target>
            <paragraph classes="classref-method" ids="class-curve-method-sample" names="class_curve_method_sample"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>sample</strong>(offset: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-curve-method-sample"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回沿曲线的 X 位置 <literal>offset</literal> 处将存在的点的 Y 值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-curve-method-sample-baked"></target>
            <paragraph classes="classref-method" ids="class-curve-method-sample-baked" names="class_curve_method_sample_baked"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>sample_baked</strong>(offset: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-curve-method-sample-baked"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>使用烘焙的缓存返回沿曲线的 X 位置 <literal>offset</literal> 处将存在的点的 Y 值。烘焙尚未烘焙的曲线的点。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-curve-method-set-point-left-mode"></target>
            <paragraph classes="classref-method" ids="class-curve-method-set-point-left-mode" names="class_curve_method_set_point_left_mode"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_point_left_mode</strong>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, mode: <reference internal="True" refid="enum-curve-tangentmode"><inline classes="std std-ref">TangentMode</inline></reference>) <reference internal="True" refid="class-curve-method-set-point-left-mode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将索引为 <literal>index</literal> 的点的左侧 <reference internal="True" refid="enum-curve-tangentmode"><inline classes="std std-ref">TangentMode</inline></reference> 设置为 <literal>mode</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-curve-method-set-point-left-tangent"></target>
            <paragraph classes="classref-method" ids="class-curve-method-set-point-left-tangent" names="class_curve_method_set_point_left_tangent"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_point_left_tangent</strong>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, tangent: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <reference internal="True" refid="class-curve-method-set-point-left-tangent"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将索引为 <literal>index</literal> 的点的左侧切线角度设置为 <literal>tangent</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-curve-method-set-point-offset"></target>
            <paragraph classes="classref-method" ids="class-curve-method-set-point-offset" names="class_curve_method_set_point_offset"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>set_point_offset</strong>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, offset: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <reference internal="True" refid="class-curve-method-set-point-offset"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置相对于 <literal>0.5</literal> 的偏移量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-curve-method-set-point-right-mode"></target>
            <paragraph classes="classref-method" ids="class-curve-method-set-point-right-mode" names="class_curve_method_set_point_right_mode"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_point_right_mode</strong>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, mode: <reference internal="True" refid="enum-curve-tangentmode"><inline classes="std std-ref">TangentMode</inline></reference>) <reference internal="True" refid="class-curve-method-set-point-right-mode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将索引为 <literal>index</literal> 的点的右侧 <reference internal="True" refid="enum-curve-tangentmode"><inline classes="std std-ref">TangentMode</inline></reference> 设置为 <literal>mode</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-curve-method-set-point-right-tangent"></target>
            <paragraph classes="classref-method" ids="class-curve-method-set-point-right-tangent" names="class_curve_method_set_point_right_tangent"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_point_right_tangent</strong>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, tangent: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <reference internal="True" refid="class-curve-method-set-point-right-tangent"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将索引为 <literal>index</literal> 的点的右侧切线角度设置为 <literal>tangent</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-curve-method-set-point-value"></target>
            <paragraph classes="classref-method" ids="class-curve-method-set-point-value" names="class_curve_method_set_point_value"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_point_value</strong>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, y: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <reference internal="True" refid="class-curve-method-set-point-value"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将索引为 <literal>index</literal> 的点的垂直位置设置为 <literal>y</literal>。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效运算符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列位标志构成位掩码的整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

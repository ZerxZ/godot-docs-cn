<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_tabcontainer.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/TabContainer.xml.</comment>
    <target refid="class-tabcontainer"></target>
    <section ids="tabcontainer class-tabcontainer" names="tabcontainer class_tabcontainer">
        <title>TabContainer</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_container#class-container"><inline classes="std std-ref">Container</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_control#class-control"><inline classes="std std-ref">Control</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_canvasitem#class-canvasitem"><inline classes="std std-ref">CanvasItem</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>会为每个子控件创建一个选项卡的容器，只会显示活动选项卡对应的控件。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>以选项卡视图排列子控件，为每个子控件创建一个选项卡。活动选项卡对应的控件可见，其他子控件都会被隐藏。非控件子节点会被忽略。</paragraph>
            <paragraph><strong>注意：</strong>可点击的选项卡是由这个节点负责绘制的；不需要 <reference internal="True" refuri="class_tabbar#class-tabbar"><inline classes="std std-ref">TabBar</inline></reference>。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference internal="True" refuri="../tutorials/ui/gui_containers"><inline classes="doc">使用容器</inline></reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="51"></colspec>
                    <colspec colwidth="95"></colspec>
                    <colspec colwidth="11"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-property-all-tabs-in-front"><inline classes="std std-ref">all_tabs_in_front</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-property-clip-tabs"><inline classes="std std-ref">clip_tabs</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-property-current-tab"><inline classes="std std-ref">current_tab</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>-1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-property-deselect-enabled"><inline classes="std std-ref">deselect_enabled</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-property-drag-to-rearrange-enabled"><inline classes="std std-ref">drag_to_rearrange_enabled</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_tabbar#enum-tabbar-alignmentmode"><inline classes="std std-ref">AlignmentMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-property-tab-alignment"><inline classes="std std-ref">tab_alignment</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_control#enum-control-focusmode"><inline classes="std std-ref">FocusMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-property-tab-focus-mode"><inline classes="std std-ref">tab_focus_mode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>2</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-tabcontainer-tabposition"><inline classes="std std-ref">TabPosition</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-property-tabs-position"><inline classes="std std-ref">tabs_position</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-property-tabs-rearrange-group"><inline classes="std std-ref">tabs_rearrange_group</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>-1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-property-tabs-visible"><inline classes="std std-ref">tabs_visible</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-property-use-hidden-tabs-for-min-size"><inline classes="std std-ref">use_hidden_tabs_for_min_size</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id4" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="35"></colspec>
                    <colspec colwidth="156"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_control#class-control"><inline classes="std std-ref">Control</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-method-get-current-tab-control"><inline classes="std std-ref">get_current_tab_control</inline></reference>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_popup#class-popup"><inline classes="std std-ref">Popup</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-method-get-popup"><inline classes="std std-ref">get_popup</inline></reference>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-method-get-previous-tab"><inline classes="std std-ref">get_previous_tab</inline></reference>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_tabbar#class-tabbar"><inline classes="std std-ref">TabBar</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-method-get-tab-bar"><inline classes="std std-ref">get_tab_bar</inline></reference>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-method-get-tab-button-icon"><inline classes="std std-ref">get_tab_button_icon</inline></reference>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_control#class-control"><inline classes="std std-ref">Control</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-method-get-tab-control"><inline classes="std std-ref">get_tab_control</inline></reference>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-method-get-tab-count"><inline classes="std std-ref">get_tab_count</inline></reference>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-method-get-tab-icon"><inline classes="std std-ref">get_tab_icon</inline></reference>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-method-get-tab-icon-max-width"><inline classes="std std-ref">get_tab_icon_max_width</inline></reference>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-method-get-tab-idx-at-point"><inline classes="std std-ref">get_tab_idx_at_point</inline></reference>(point: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-method-get-tab-idx-from-control"><inline classes="std std-ref">get_tab_idx_from_control</inline></reference>(control: <reference internal="True" refuri="class_control#class-control"><inline classes="std std-ref">Control</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-method-get-tab-metadata"><inline classes="std std-ref">get_tab_metadata</inline></reference>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-method-get-tab-title"><inline classes="std std-ref">get_tab_title</inline></reference>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-method-get-tab-tooltip"><inline classes="std std-ref">get_tab_tooltip</inline></reference>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-method-is-tab-disabled"><inline classes="std std-ref">is_tab_disabled</inline></reference>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-method-is-tab-hidden"><inline classes="std std-ref">is_tab_hidden</inline></reference>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-method-select-next-available"><inline classes="std std-ref">select_next_available</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-method-select-previous-available"><inline classes="std std-ref">select_previous_available</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-method-set-popup"><inline classes="std std-ref">set_popup</inline></reference>(popup: <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-method-set-tab-button-icon"><inline classes="std std-ref">set_tab_button_icon</inline></reference>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, icon: <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-method-set-tab-disabled"><inline classes="std std-ref">set_tab_disabled</inline></reference>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, disabled: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-method-set-tab-hidden"><inline classes="std std-ref">set_tab_hidden</inline></reference>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, hidden: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-method-set-tab-icon"><inline classes="std std-ref">set_tab_icon</inline></reference>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, icon: <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-method-set-tab-icon-max-width"><inline classes="std std-ref">set_tab_icon_max_width</inline></reference>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, width: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-method-set-tab-metadata"><inline classes="std std-ref">set_tab_metadata</inline></reference>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, metadata: <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-method-set-tab-title"><inline classes="std std-ref">set_tab_title</inline></reference>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, title: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-method-set-tab-tooltip"><inline classes="std std-ref">set_tab_tooltip</inline></reference>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, tooltip: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>)</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id5" names="主题属性">
            <title>主题属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="35"></colspec>
                    <colspec colwidth="84"></colspec>
                    <colspec colwidth="37"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-theme-color-drop-mark-color"><inline classes="std std-ref">drop_mark_color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Color(1, 1, 1, 1)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-theme-color-font-disabled-color"><inline classes="std std-ref">font_disabled_color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Color(0.875, 0.875, 0.875, 0.5)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-theme-color-font-hovered-color"><inline classes="std std-ref">font_hovered_color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Color(0.95, 0.95, 0.95, 1)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-theme-color-font-outline-color"><inline classes="std std-ref">font_outline_color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Color(0, 0, 0, 1)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-theme-color-font-selected-color"><inline classes="std std-ref">font_selected_color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Color(0.95, 0.95, 0.95, 1)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-theme-color-font-unselected-color"><inline classes="std std-ref">font_unselected_color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Color(0.7, 0.7, 0.7, 1)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-theme-constant-icon-max-width"><inline classes="std std-ref">icon_max_width</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-theme-constant-icon-separation"><inline classes="std std-ref">icon_separation</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>4</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-theme-constant-outline-size"><inline classes="std std-ref">outline_size</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-theme-constant-side-margin"><inline classes="std std-ref">side_margin</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>8</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_font#class-font"><inline classes="std std-ref">Font</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-theme-font-font"><inline classes="std std-ref">font</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-theme-font-size-font-size"><inline classes="std std-ref">font_size</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-theme-icon-decrement"><inline classes="std std-ref">decrement</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-theme-icon-decrement-highlight"><inline classes="std std-ref">decrement_highlight</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-theme-icon-drop-mark"><inline classes="std std-ref">drop_mark</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-theme-icon-increment"><inline classes="std std-ref">increment</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-theme-icon-increment-highlight"><inline classes="std std-ref">increment_highlight</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-theme-icon-menu"><inline classes="std std-ref">menu</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-theme-icon-menu-highlight"><inline classes="std std-ref">menu_highlight</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-theme-style-panel"><inline classes="std std-ref">panel</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-theme-style-tab-disabled"><inline classes="std std-ref">tab_disabled</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-theme-style-tab-focus"><inline classes="std std-ref">tab_focus</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-theme-style-tab-hovered"><inline classes="std std-ref">tab_hovered</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-theme-style-tab-selected"><inline classes="std std-ref">tab_selected</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-theme-style-tab-unselected"><inline classes="std std-ref">tab_unselected</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabcontainer-theme-style-tabbar-background"><inline classes="std std-ref">tabbar_background</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="信号">
            <title>信号</title>
            <target refid="class-tabcontainer-signal-active-tab-rearranged"></target>
            <paragraph classes="classref-signal" ids="class-tabcontainer-signal-active-tab-rearranged" names="class_tabcontainer_signal_active_tab_rearranged"><strong>active_tab_rearranged</strong>(idx_to: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-tabcontainer-signal-active-tab-rearranged"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>通过鼠标拖动重新排列活动选项卡时发出。见 <reference internal="True" refid="class-tabcontainer-property-drag-to-rearrange-enabled"><inline classes="std std-ref">drag_to_rearrange_enabled</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-signal-pre-popup-pressed"></target>
            <paragraph classes="classref-signal" ids="class-tabcontainer-signal-pre-popup-pressed" names="class_tabcontainer_signal_pre_popup_pressed"><strong>pre_popup_pressed</strong>() <reference internal="True" refid="class-tabcontainer-signal-pre-popup-pressed"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>单击 <strong>TabContainer</strong> 的 <reference internal="True" refuri="class_popup#class-popup"><inline classes="std std-ref">Popup</inline></reference> 按钮时发出。有关详细信息，请参阅 <reference internal="True" refid="class-tabcontainer-method-set-popup"><inline classes="std std-ref">set_popup</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-signal-tab-button-pressed"></target>
            <paragraph classes="classref-signal" ids="class-tabcontainer-signal-tab-button-pressed" names="class_tabcontainer_signal_tab_button_pressed"><strong>tab_button_pressed</strong>(tab: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-tabcontainer-signal-tab-button-pressed"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>用户点击该选项卡上的按钮图标时发出。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-signal-tab-changed"></target>
            <paragraph classes="classref-signal" ids="class-tabcontainer-signal-tab-changed" names="class_tabcontainer_signal_tab_changed"><strong>tab_changed</strong>(tab: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-tabcontainer-signal-tab-changed"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>切换到另一个选项卡时发出。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-signal-tab-clicked"></target>
            <paragraph classes="classref-signal" ids="class-tabcontainer-signal-tab-clicked" names="class_tabcontainer_signal_tab_clicked"><strong>tab_clicked</strong>(tab: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-tabcontainer-signal-tab-clicked"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>单击选项卡时发出，即使它是当前选项卡。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-signal-tab-hovered"></target>
            <paragraph classes="classref-signal" ids="class-tabcontainer-signal-tab-hovered" names="class_tabcontainer_signal_tab_hovered"><strong>tab_hovered</strong>(tab: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-tabcontainer-signal-tab-hovered"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当鼠标悬停选项卡时发出。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-signal-tab-selected"></target>
            <paragraph classes="classref-signal" ids="class-tabcontainer-signal-tab-selected" names="class_tabcontainer_signal_tab_selected"><strong>tab_selected</strong>(tab: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-tabcontainer-signal-tab-selected"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>通过点击、定向输入或脚本选中某个选项卡时发出，即便该选项卡本来就是当前选项卡。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id7" names="枚举">
            <title>枚举</title>
            <target refid="enum-tabcontainer-tabposition"></target>
            <paragraph classes="classref-enumeration" ids="enum-tabcontainer-tabposition" names="enum_tabcontainer_tabposition">enum <strong>TabPosition</strong>: <reference internal="True" refid="enum-tabcontainer-tabposition"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-tabcontainer-constant-position-top"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-tabcontainer-constant-position-top" names="class_tabcontainer_constant_position_top"><reference internal="True" refid="enum-tabcontainer-tabposition"><inline classes="std std-ref">TabPosition</inline></reference> <strong>POSITION_TOP</strong> = <literal>0</literal></paragraph>
            <paragraph>将选项卡置于顶部。</paragraph>
            <target refid="class-tabcontainer-constant-position-bottom"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-tabcontainer-constant-position-bottom" names="class_tabcontainer_constant_position_bottom"><reference internal="True" refid="enum-tabcontainer-tabposition"><inline classes="std std-ref">TabPosition</inline></reference> <strong>POSITION_BOTTOM</strong> = <literal>1</literal></paragraph>
            <paragraph>将选项卡置于底部。选项卡栏的 <reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference> 会垂直翻转。</paragraph>
            <target refid="class-tabcontainer-constant-position-max"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-tabcontainer-constant-position-max" names="class_tabcontainer_constant_position_max"><reference internal="True" refid="enum-tabcontainer-tabposition"><inline classes="std std-ref">TabPosition</inline></reference> <strong>POSITION_MAX</strong> = <literal>2</literal></paragraph>
            <paragraph>代表 <reference internal="True" refid="enum-tabcontainer-tabposition"><inline classes="std std-ref">TabPosition</inline></reference> 枚举的大小。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id8" names="属性说明">
            <title>属性说明</title>
            <target refid="class-tabcontainer-property-all-tabs-in-front"></target>
            <paragraph classes="classref-property" ids="class-tabcontainer-property-all-tabs-in-front" names="class_tabcontainer_property_all_tabs_in_front"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>all_tabs_in_front</strong> = <literal>false</literal> <reference internal="True" refid="class-tabcontainer-property-all-tabs-in-front"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_all_tabs_in_front</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_all_tabs_in_front</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，所有选项卡都会被绘制在面板之前。如果为 <literal>false</literal>，未激活的选项卡会被绘制在面板之后。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-property-clip-tabs"></target>
            <paragraph classes="classref-property" ids="class-tabcontainer-property-clip-tabs" names="class_tabcontainer_property_clip_tabs"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>clip_tabs</strong> = <literal>true</literal> <reference internal="True" refid="class-tabcontainer-property-clip-tabs"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_clip_tabs</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_clip_tabs</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则会隐藏超出该节点宽度的选项卡，改为显示两个导航按钮。否则，会更新该节点的最小尺寸，让所有选项卡均可见。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-property-current-tab"></target>
            <paragraph classes="classref-property" ids="class-tabcontainer-property-current-tab" names="class_tabcontainer_property_current_tab"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>current_tab</strong> = <literal>-1</literal> <reference internal="True" refid="class-tabcontainer-property-current-tab"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_current_tab</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_current_tab</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>当前选项卡的索引。设置后，此索引的 <reference internal="True" refuri="class_control#class-control"><inline classes="std std-ref">Control</inline></reference> 节点的 <literal>visible</literal> 属性会被设为 <literal>true</literal>，其他所有都设置为 <literal>false</literal>。</paragraph>
            <paragraph>设为 <literal>-1</literal> 表示不选中任何选项卡。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-property-deselect-enabled"></target>
            <paragraph classes="classref-property" ids="class-tabcontainer-property-deselect-enabled" names="class_tabcontainer_property_deselect_enabled"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>deselect_enabled</strong> = <literal>false</literal> <reference internal="True" refid="class-tabcontainer-property-deselect-enabled"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_deselect_enabled</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_deselect_enabled</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则所有选项卡都可以取消选中状态，达到不选中任何选项卡的状态。点击 <reference internal="True" refid="class-tabcontainer-property-current-tab"><inline classes="std std-ref">current_tab</inline></reference> 取消选中。</paragraph>
            <paragraph>未选中任何选项卡时只会显示选项卡头。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-property-drag-to-rearrange-enabled"></target>
            <paragraph classes="classref-property" ids="class-tabcontainer-property-drag-to-rearrange-enabled" names="class_tabcontainer_property_drag_to_rearrange_enabled"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>drag_to_rearrange_enabled</strong> = <literal>false</literal> <reference internal="True" refid="class-tabcontainer-property-drag-to-rearrange-enabled"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_drag_to_rearrange_enabled</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_drag_to_rearrange_enabled</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，可以通过鼠标拖动重新排列选项卡。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-property-tab-alignment"></target>
            <paragraph classes="classref-property" ids="class-tabcontainer-property-tab-alignment" names="class_tabcontainer_property_tab_alignment"><reference internal="True" refuri="class_tabbar#enum-tabbar-alignmentmode"><inline classes="std std-ref">AlignmentMode</inline></reference> <strong>tab_alignment</strong> = <literal>0</literal> <reference internal="True" refid="class-tabcontainer-property-tab-alignment"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_tab_alignment</strong>(value: <reference internal="True" refuri="class_tabbar#enum-tabbar-alignmentmode"><inline classes="std std-ref">AlignmentMode</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_tabbar#enum-tabbar-alignmentmode"><inline classes="std std-ref">AlignmentMode</inline></reference> <strong>get_tab_alignment</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>设置选项卡的放置位置。详情见 <reference internal="True" refuri="class_tabbar#enum-tabbar-alignmentmode"><inline classes="std std-ref">AlignmentMode</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-property-tab-focus-mode"></target>
            <paragraph classes="classref-property" ids="class-tabcontainer-property-tab-focus-mode" names="class_tabcontainer_property_tab_focus_mode"><reference internal="True" refuri="class_control#enum-control-focusmode"><inline classes="std std-ref">FocusMode</inline></reference> <strong>tab_focus_mode</strong> = <literal>2</literal> <reference internal="True" refid="class-tabcontainer-property-tab-focus-mode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_tab_focus_mode</strong>(value: <reference internal="True" refuri="class_control#enum-control-focusmode"><inline classes="std std-ref">FocusMode</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_control#enum-control-focusmode"><inline classes="std std-ref">FocusMode</inline></reference> <strong>get_tab_focus_mode</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>内部 <reference internal="True" refuri="class_tabbar#class-tabbar"><inline classes="std std-ref">TabBar</inline></reference> 节点的焦点访问模式。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-property-tabs-position"></target>
            <paragraph classes="classref-property" ids="class-tabcontainer-property-tabs-position" names="class_tabcontainer_property_tabs_position"><reference internal="True" refid="enum-tabcontainer-tabposition"><inline classes="std std-ref">TabPosition</inline></reference> <strong>tabs_position</strong> = <literal>0</literal> <reference internal="True" refid="class-tabcontainer-property-tabs-position"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_tabs_position</strong>(value: <reference internal="True" refid="enum-tabcontainer-tabposition"><inline classes="std std-ref">TabPosition</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-tabcontainer-tabposition"><inline classes="std std-ref">TabPosition</inline></reference> <strong>get_tabs_position</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>设置选项卡栏的位置。详见 <reference internal="True" refid="enum-tabcontainer-tabposition"><inline classes="std std-ref">TabPosition</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-property-tabs-rearrange-group"></target>
            <paragraph classes="classref-property" ids="class-tabcontainer-property-tabs-rearrange-group" names="class_tabcontainer_property_tabs_rearrange_group"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>tabs_rearrange_group</strong> = <literal>-1</literal> <reference internal="True" refid="class-tabcontainer-property-tabs-rearrange-group"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_tabs_rearrange_group</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_tabs_rearrange_group</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>具有相同重新排列组 ID 的 <strong>TabContainer</strong> 将允许在它们之间拖动选项卡。使用 <reference internal="True" refid="class-tabcontainer-property-drag-to-rearrange-enabled"><inline classes="std std-ref">drag_to_rearrange_enabled</inline></reference> 启用拖动。</paragraph>
            <paragraph>将该属性设置为 <literal>-1</literal> 将禁用 <strong>TabContainer</strong> 之间的重新排列。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-property-tabs-visible"></target>
            <paragraph classes="classref-property" ids="class-tabcontainer-property-tabs-visible" names="class_tabcontainer_property_tabs_visible"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>tabs_visible</strong> = <literal>true</literal> <reference internal="True" refid="class-tabcontainer-property-tabs-visible"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_tabs_visible</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>are_tabs_visible</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，选项卡可见。如果 <literal>false</literal>，选项卡的内容和标题被隐藏。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-property-use-hidden-tabs-for-min-size"></target>
            <paragraph classes="classref-property" ids="class-tabcontainer-property-use-hidden-tabs-for-min-size" names="class_tabcontainer_property_use_hidden_tabs_for_min_size"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>use_hidden_tabs_for_min_size</strong> = <literal>false</literal> <reference internal="True" refid="class-tabcontainer-property-use-hidden-tabs-for-min-size"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_use_hidden_tabs_for_min_size</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_use_hidden_tabs_for_min_size</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，隐藏的子 <reference internal="True" refuri="class_control#class-control"><inline classes="std std-ref">Control</inline></reference> 节点在总数中考虑其最小大小，而不是仅考虑当前可见的一个。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id9" names="方法说明">
            <title>方法说明</title>
            <target refid="class-tabcontainer-method-get-current-tab-control"></target>
            <paragraph classes="classref-method" ids="class-tabcontainer-method-get-current-tab-control" names="class_tabcontainer_method_get_current_tab_control"><reference internal="True" refuri="class_control#class-control"><inline classes="std std-ref">Control</inline></reference> <strong>get_current_tab_control</strong>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tabcontainer-method-get-current-tab-control"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回位于活动选项卡索引处的子 <reference internal="True" refuri="class_control#class-control"><inline classes="std std-ref">Control</inline></reference> 节点。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-method-get-popup"></target>
            <paragraph classes="classref-method" ids="class-tabcontainer-method-get-popup" names="class_tabcontainer_method_get_popup"><reference internal="True" refuri="class_popup#class-popup"><inline classes="std std-ref">Popup</inline></reference> <strong>get_popup</strong>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tabcontainer-method-get-popup"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果已经使用 <reference internal="True" refid="class-tabcontainer-method-set-popup"><inline classes="std std-ref">set_popup</inline></reference> 设置了 <reference internal="True" refuri="class_popup#class-popup"><inline classes="std std-ref">Popup</inline></reference> 节点实例，则返回该节点实例。</paragraph>
            <paragraph><strong>警告：</strong>这是一个必需的内部节点，移除和释放它可能会导致崩溃。如果希望隐藏它或它的任何子项，请使用它们的 <reference internal="True" refuri="class_window#class-window-property-visible"><inline classes="std std-ref">Window.visible</inline></reference> 属性。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-method-get-previous-tab"></target>
            <paragraph classes="classref-method" ids="class-tabcontainer-method-get-previous-tab" names="class_tabcontainer_method_get_previous_tab"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_previous_tab</strong>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tabcontainer-method-get-previous-tab"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回上一个活动选项卡的索引。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-method-get-tab-bar"></target>
            <paragraph classes="classref-method" ids="class-tabcontainer-method-get-tab-bar" names="class_tabcontainer_method_get_tab_bar"><reference internal="True" refuri="class_tabbar#class-tabbar"><inline classes="std std-ref">TabBar</inline></reference> <strong>get_tab_bar</strong>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tabcontainer-method-get-tab-bar"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回这个容器中包含的 <reference internal="True" refuri="class_tabbar#class-tabbar"><inline classes="std std-ref">TabBar</inline></reference>。</paragraph>
            <paragraph><strong>警告：</strong>这是一个必需的内部节点，对其进行移除和释放或者编辑其中的选项卡可能会导致崩溃。如果你想编辑选项卡，请使用 <strong>TabContainer</strong> 提供的方法。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-method-get-tab-button-icon"></target>
            <paragraph classes="classref-method" ids="class-tabcontainer-method-get-tab-button-icon" names="class_tabcontainer_method_get_tab_button_icon"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>get_tab_button_icon</strong>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tabcontainer-method-get-tab-button-icon"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回索引为 <literal>tab_idx</literal> 的选项卡的按钮图标。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-method-get-tab-control"></target>
            <paragraph classes="classref-method" ids="class-tabcontainer-method-get-tab-control" names="class_tabcontainer_method_get_tab_control"><reference internal="True" refuri="class_control#class-control"><inline classes="std std-ref">Control</inline></reference> <strong>get_tab_control</strong>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tabcontainer-method-get-tab-control"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回索引为 <literal>tab_idx</literal> 的选项卡的 <reference internal="True" refuri="class_control#class-control"><inline classes="std std-ref">Control</inline></reference> 节点。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-method-get-tab-count"></target>
            <paragraph classes="classref-method" ids="class-tabcontainer-method-get-tab-count" names="class_tabcontainer_method_get_tab_count"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_tab_count</strong>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tabcontainer-method-get-tab-count"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回选项卡的数量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-method-get-tab-icon"></target>
            <paragraph classes="classref-method" ids="class-tabcontainer-method-get-tab-icon" names="class_tabcontainer_method_get_tab_icon"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>get_tab_icon</strong>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tabcontainer-method-get-tab-icon"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回索引 <literal>tab_idx</literal> 处选项卡的 <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference>，如果该选项卡没有 <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference>，则返回 <literal>null</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-method-get-tab-icon-max-width"></target>
            <paragraph classes="classref-method" ids="class-tabcontainer-method-get-tab-icon-max-width" names="class_tabcontainer_method_get_tab_icon_max_width"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_tab_icon_max_width</strong>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tabcontainer-method-get-tab-icon-max-width"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置索引为 <literal>tab_idx</literal> 处选项卡所允许的最大图标宽度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-method-get-tab-idx-at-point"></target>
            <paragraph classes="classref-method" ids="class-tabcontainer-method-get-tab-idx-at-point" names="class_tabcontainer_method_get_tab_idx_at_point"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_tab_idx_at_point</strong>(point: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tabcontainer-method-get-tab-idx-at-point"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回位于局部坐标 <literal>point</literal> 处的选项卡的索引。如果该点在控件边界之外或查询位置没有选项卡，则返回 <literal>-1</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-method-get-tab-idx-from-control"></target>
            <paragraph classes="classref-method" ids="class-tabcontainer-method-get-tab-idx-from-control" names="class_tabcontainer_method_get_tab_idx_from_control"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_tab_idx_from_control</strong>(control: <reference internal="True" refuri="class_control#class-control"><inline classes="std std-ref">Control</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tabcontainer-method-get-tab-idx-from-control"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回与给定的 <literal>control</literal> 绑定的标签的索引。该控件必须为 <strong>TabContainer</strong> 的子节点。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-method-get-tab-metadata"></target>
            <paragraph classes="classref-method" ids="class-tabcontainer-method-get-tab-metadata" names="class_tabcontainer_method_get_tab_metadata"><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> <strong>get_tab_metadata</strong>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tabcontainer-method-get-tab-metadata"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回索引为 <literal>tab_idx</literal> 的选项卡的元数据的值，由 <reference internal="True" refid="class-tabcontainer-method-set-tab-metadata"><inline classes="std std-ref">set_tab_metadata</inline></reference> 设置。如果之前没有设置元数据，则默认返回 <literal>null</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-method-get-tab-title"></target>
            <paragraph classes="classref-method" ids="class-tabcontainer-method-get-tab-title" names="class_tabcontainer_method_get_tab_title"><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>get_tab_title</strong>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tabcontainer-method-get-tab-title"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回索引 <literal>tab_idx</literal> 处选项卡的标题。选项卡的标题默认为索引子节点的名称，但可以用 <reference internal="True" refid="class-tabcontainer-method-set-tab-title"><inline classes="std std-ref">set_tab_title</inline></reference> 覆盖。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-method-get-tab-tooltip"></target>
            <paragraph classes="classref-method" ids="class-tabcontainer-method-get-tab-tooltip" names="class_tabcontainer_method_get_tab_tooltip"><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>get_tab_tooltip</strong>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tabcontainer-method-get-tab-tooltip"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回索引 <literal>tab_idx</literal> 处的选项卡的工具提示文本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-method-is-tab-disabled"></target>
            <paragraph classes="classref-method" ids="class-tabcontainer-method-is-tab-disabled" names="class_tabcontainer_method_is_tab_disabled"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_tab_disabled</strong>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tabcontainer-method-is-tab-disabled"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果索引 <literal>tab_idx</literal> 处的选项卡被禁用，则返回 <literal>true</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-method-is-tab-hidden"></target>
            <paragraph classes="classref-method" ids="class-tabcontainer-method-is-tab-hidden" names="class_tabcontainer_method_is_tab_hidden"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_tab_hidden</strong>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tabcontainer-method-is-tab-hidden"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果索引 <literal>tab_idx</literal> 处的选项卡被隐藏，则返回 <literal>true</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-method-select-next-available"></target>
            <paragraph classes="classref-method" ids="class-tabcontainer-method-select-next-available" names="class_tabcontainer_method_select_next_available"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>select_next_available</strong>() <reference internal="True" refid="class-tabcontainer-method-select-next-available"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>选择索引大于当前所选选项卡索引的第一个可用选项卡。如果选项卡选择发生改变，则返回 <literal>true</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-method-select-previous-available"></target>
            <paragraph classes="classref-method" ids="class-tabcontainer-method-select-previous-available" names="class_tabcontainer_method_select_previous_available"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>select_previous_available</strong>() <reference internal="True" refid="class-tabcontainer-method-select-previous-available"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>选择索引低于当前所选选项卡索引的第一个可用选项卡。如果选项卡选择发生改变，则返回 <literal>true</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-method-set-popup"></target>
            <paragraph classes="classref-method" ids="class-tabcontainer-method-set-popup" names="class_tabcontainer_method_set_popup"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_popup</strong>(popup: <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference>) <reference internal="True" refid="class-tabcontainer-method-set-popup"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果在一个 <reference internal="True" refuri="class_popup#class-popup"><inline classes="std std-ref">Popup</inline></reference> 节点实例上设置，则一个弹出菜单图标会出现在该 <strong>TabContainer</strong> 的右上角（将其设置为 <literal>null</literal> 将使其消失）。点击它将展开该 <reference internal="True" refuri="class_popup#class-popup"><inline classes="std std-ref">Popup</inline></reference> 节点。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-method-set-tab-button-icon"></target>
            <paragraph classes="classref-method" ids="class-tabcontainer-method-set-tab-button-icon" names="class_tabcontainer_method_set_tab_button_icon"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_tab_button_icon</strong>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, icon: <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference>) <reference internal="True" refid="class-tabcontainer-method-set-tab-button-icon"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置索引为 <literal>tab_idx</literal> 的选项卡的按钮图标。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-method-set-tab-disabled"></target>
            <paragraph classes="classref-method" ids="class-tabcontainer-method-set-tab-disabled" names="class_tabcontainer_method_set_tab_disabled"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_tab_disabled</strong>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, disabled: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <reference internal="True" refid="class-tabcontainer-method-set-tab-disabled"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果 <literal>disabled</literal> 为 <literal>true</literal>，则禁用索引 <literal>tab_idx</literal> 处的选项卡，使其不可交互。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-method-set-tab-hidden"></target>
            <paragraph classes="classref-method" ids="class-tabcontainer-method-set-tab-hidden" names="class_tabcontainer_method_set_tab_hidden"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_tab_hidden</strong>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, hidden: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <reference internal="True" refid="class-tabcontainer-method-set-tab-hidden"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果 <literal>hidden</literal> 为 <literal>true</literal>，则隐藏索引 <literal>tab_idx</literal> 处的选项卡，使其从选项卡区域消失。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-method-set-tab-icon"></target>
            <paragraph classes="classref-method" ids="class-tabcontainer-method-set-tab-icon" names="class_tabcontainer_method_set_tab_icon"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_tab_icon</strong>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, icon: <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference>) <reference internal="True" refid="class-tabcontainer-method-set-tab-icon"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置索引为 <literal>tab_idx</literal> 的选项卡的图标。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-method-set-tab-icon-max-width"></target>
            <paragraph classes="classref-method" ids="class-tabcontainer-method-set-tab-icon-max-width" names="class_tabcontainer_method_set_tab_icon_max_width"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_tab_icon_max_width</strong>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, width: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-tabcontainer-method-set-tab-icon-max-width"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置索引为 <literal>tab_idx</literal> 处选项卡所允许的最大图标宽度。这是在图标的默认大小和 <reference internal="True" refid="class-tabcontainer-theme-constant-icon-max-width"><inline classes="std std-ref">icon_max_width</inline></reference> 的基础上的限制。高度会根据图标的长宽比调整。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-method-set-tab-metadata"></target>
            <paragraph classes="classref-method" ids="class-tabcontainer-method-set-tab-metadata" names="class_tabcontainer_method_set_tab_metadata"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_tab_metadata</strong>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, metadata: <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference>) <reference internal="True" refid="class-tabcontainer-method-set-tab-metadata"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>为 <literal>tab_idx</literal> 的选项卡设置元数据的值，之后可以使用 <reference internal="True" refid="class-tabcontainer-method-get-tab-metadata"><inline classes="std std-ref">get_tab_metadata</inline></reference> 获取。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-method-set-tab-title"></target>
            <paragraph classes="classref-method" ids="class-tabcontainer-method-set-tab-title" names="class_tabcontainer_method_set_tab_title"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_tab_title</strong>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, title: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <reference internal="True" refid="class-tabcontainer-method-set-tab-title"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>为索引 <literal>tab_idx</literal> 处的选项卡设置自定义标题（选项卡标题默认为索引子节点的名称）。将其设置回孩子的名字，使选项卡再次默认为该名字。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-method-set-tab-tooltip"></target>
            <paragraph classes="classref-method" ids="class-tabcontainer-method-set-tab-tooltip" names="class_tabcontainer_method_set_tab_tooltip"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_tab_tooltip</strong>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, tooltip: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <reference internal="True" refid="class-tabcontainer-method-set-tab-tooltip"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置索引 <literal>tab_idx</literal> 的选项卡的自定义工具提示文本。</paragraph>
            <paragraph><strong>注意：</strong>默认情况下，如果 <literal>tooltip</literal> 为空而选项卡文本发生了裁剪（选项卡无法完整显示所有字符），那么就会将标题作为工具提示显示。要隐藏工具提示，请将 <literal>tooltip</literal> 文本设置为 <literal>" "</literal>。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id10" names="主题属性说明">
            <title>主题属性说明</title>
            <target refid="class-tabcontainer-theme-color-drop-mark-color"></target>
            <paragraph classes="classref-themeproperty" ids="class-tabcontainer-theme-color-drop-mark-color" names="class_tabcontainer_theme_color_drop_mark_color"><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>drop_mark_color</strong> = <literal>Color(1, 1, 1, 1)</literal> <reference internal="True" refid="class-tabcontainer-theme-color-drop-mark-color"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refid="class-tabcontainer-theme-icon-drop-mark"><inline classes="std std-ref">drop_mark</inline></reference> 图标的调制颜色。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-theme-color-font-disabled-color"></target>
            <paragraph classes="classref-themeproperty" ids="class-tabcontainer-theme-color-font-disabled-color" names="class_tabcontainer_theme_color_font_disabled_color"><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>font_disabled_color</strong> = <literal>Color(0.875, 0.875, 0.875, 0.5)</literal> <reference internal="True" refid="class-tabcontainer-theme-color-font-disabled-color"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>禁用选项卡的字体颜色。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-theme-color-font-hovered-color"></target>
            <paragraph classes="classref-themeproperty" ids="class-tabcontainer-theme-color-font-hovered-color" names="class_tabcontainer_theme_color_font_hovered_color"><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>font_hovered_color</strong> = <literal>Color(0.95, 0.95, 0.95, 1)</literal> <reference internal="True" refid="class-tabcontainer-theme-color-font-hovered-color"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当前悬停选项卡的字体颜色。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-theme-color-font-outline-color"></target>
            <paragraph classes="classref-themeproperty" ids="class-tabcontainer-theme-color-font-outline-color" names="class_tabcontainer_theme_color_font_outline_color"><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>font_outline_color</strong> = <literal>Color(0, 0, 0, 1)</literal> <reference internal="True" refid="class-tabcontainer-theme-color-font-outline-color"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>选项卡名称的文本轮廓的色调。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-theme-color-font-selected-color"></target>
            <paragraph classes="classref-themeproperty" ids="class-tabcontainer-theme-color-font-selected-color" names="class_tabcontainer_theme_color_font_selected_color"><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>font_selected_color</strong> = <literal>Color(0.95, 0.95, 0.95, 1)</literal> <reference internal="True" refid="class-tabcontainer-theme-color-font-selected-color"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当前所选选项卡的字体颜色。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-theme-color-font-unselected-color"></target>
            <paragraph classes="classref-themeproperty" ids="class-tabcontainer-theme-color-font-unselected-color" names="class_tabcontainer_theme_color_font_unselected_color"><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>font_unselected_color</strong> = <literal>Color(0.7, 0.7, 0.7, 1)</literal> <reference internal="True" refid="class-tabcontainer-theme-color-font-unselected-color"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>其他未被选中的选项卡的字体颜色。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-theme-constant-icon-max-width"></target>
            <paragraph classes="classref-themeproperty" ids="class-tabcontainer-theme-constant-icon-max-width" names="class_tabcontainer_theme_constant_icon_max_width"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>icon_max_width</strong> = <literal>0</literal> <reference internal="True" refid="class-tabcontainer-theme-constant-icon-max-width"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>选项卡图标所允许的最大宽度。这个限制应用在该图标默认大小之上，但是应用在 <reference internal="True" refuri="class_tabbar#class-tabbar-method-set-tab-icon-max-width"><inline classes="std std-ref">TabBar.set_tab_icon_max_width</inline></reference> 所设置的值之前。高度会根据图标比例调整。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-theme-constant-icon-separation"></target>
            <paragraph classes="classref-themeproperty" ids="class-tabcontainer-theme-constant-icon-separation" names="class_tabcontainer_theme_constant_icon_separation"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>icon_separation</strong> = <literal>4</literal> <reference internal="True" refid="class-tabcontainer-theme-constant-icon-separation"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>选项卡名称与其图标之间的间距。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-theme-constant-outline-size"></target>
            <paragraph classes="classref-themeproperty" ids="class-tabcontainer-theme-constant-outline-size" names="class_tabcontainer_theme_constant_outline_size"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>outline_size</strong> = <literal>0</literal> <reference internal="True" refid="class-tabcontainer-theme-constant-outline-size"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>选项卡文字轮廓的大小。</paragraph>
            <paragraph><strong>注意：</strong>如果使用启用了 <reference internal="True" refuri="class_fontfile#class-fontfile-property-multichannel-signed-distance-field"><inline classes="std std-ref">FontFile.multichannel_signed_distance_field</inline></reference> 的字体，其 <reference internal="True" refuri="class_fontfile#class-fontfile-property-msdf-pixel-range"><inline classes="std std-ref">FontFile.msdf_pixel_range</inline></reference> 必须至少设置为 <reference internal="True" refid="class-tabcontainer-theme-constant-outline-size"><inline classes="std std-ref">outline_size</inline></reference> 的<emphasis>两倍</emphasis>，轮廓渲染才能看起来正确。否则，轮廓可能会比预期的更早被切断。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-theme-constant-side-margin"></target>
            <paragraph classes="classref-themeproperty" ids="class-tabcontainer-theme-constant-side-margin" names="class_tabcontainer_theme_constant_side_margin"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>side_margin</strong> = <literal>8</literal> <reference internal="True" refid="class-tabcontainer-theme-constant-side-margin"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>标签栏左侧或右侧边缘的间距，取决于当前的 <reference internal="True" refid="class-tabcontainer-property-tab-alignment"><inline classes="std std-ref">tab_alignment</inline></reference>。</paragraph>
            <paragraph>如果标签页被裁剪（见 <reference internal="True" refid="class-tabcontainer-property-clip-tabs"><inline classes="std std-ref">clip_tabs</inline></reference>）或者设置了弹出框（见 <reference internal="True" refid="class-tabcontainer-method-set-popup"><inline classes="std std-ref">set_popup</inline></reference>），则会忽略 <reference internal="True" refuri="class_tabbar#class-tabbar-constant-alignment-right"><inline classes="std std-ref">TabBar.ALIGNMENT_RIGHT</inline></reference> 的边距。使用 <reference internal="True" refuri="class_tabbar#class-tabbar-constant-alignment-center"><inline classes="std std-ref">TabBar.ALIGNMENT_CENTER</inline></reference> 时始终忽略边距。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-theme-font-font"></target>
            <paragraph classes="classref-themeproperty" ids="class-tabcontainer-theme-font-font" names="class_tabcontainer_theme_font_font"><reference internal="True" refuri="class_font#class-font"><inline classes="std std-ref">Font</inline></reference> <strong>font</strong> <reference internal="True" refid="class-tabcontainer-theme-font-font"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>用于绘制选项卡名称的字体。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-theme-font-size-font-size"></target>
            <paragraph classes="classref-themeproperty" ids="class-tabcontainer-theme-font-size-font-size" names="class_tabcontainer_theme_font_size_font_size"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>font_size</strong> <reference internal="True" refid="class-tabcontainer-theme-font-size-font-size"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>选项卡名称的字体大小。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-theme-icon-decrement"></target>
            <paragraph classes="classref-themeproperty" ids="class-tabcontainer-theme-icon-decrement" names="class_tabcontainer_theme_icon_decrement"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>decrement</strong> <reference internal="True" refid="class-tabcontainer-theme-icon-decrement"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>左边的箭头按钮的图标，当有太多的标签无法容纳在容器的宽度内时出现。当该按钮被禁用时（即第一个标签是可见的），它显示为半透明的。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-theme-icon-decrement-highlight"></target>
            <paragraph classes="classref-themeproperty" ids="class-tabcontainer-theme-icon-decrement-highlight" names="class_tabcontainer_theme_icon_decrement_highlight"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>decrement_highlight</strong> <reference internal="True" refid="class-tabcontainer-theme-icon-decrement-highlight"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当标签太多无法适应容器宽度时出现的左箭头按钮图标。当鼠标悬停在按钮上时使用。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-theme-icon-drop-mark"></target>
            <paragraph classes="classref-themeproperty" ids="class-tabcontainer-theme-icon-drop-mark" names="class_tabcontainer_theme_icon_drop_mark"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>drop_mark</strong> <reference internal="True" refid="class-tabcontainer-theme-icon-drop-mark"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>图标，用于指示拖动的选项卡将被放置到哪里（见 <reference internal="True" refid="class-tabcontainer-property-drag-to-rearrange-enabled"><inline classes="std std-ref">drag_to_rearrange_enabled</inline></reference>）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-theme-icon-increment"></target>
            <paragraph classes="classref-themeproperty" ids="class-tabcontainer-theme-icon-increment" names="class_tabcontainer_theme_icon_increment"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>increment</strong> <reference internal="True" refid="class-tabcontainer-theme-icon-increment"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>右箭头按钮的图标，当有太多的标签无法容纳在容器的宽度内时出现。当该按钮被禁用时（即最后一个标签是可见的），它显示为半透明的。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-theme-icon-increment-highlight"></target>
            <paragraph classes="classref-themeproperty" ids="class-tabcontainer-theme-icon-increment-highlight" names="class_tabcontainer_theme_icon_increment_highlight"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>increment_highlight</strong> <reference internal="True" refid="class-tabcontainer-theme-icon-increment-highlight"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当标签太多无法适应容器宽度时出现的右箭头按钮图标。当鼠标悬停在按钮上时使用。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-theme-icon-menu"></target>
            <paragraph classes="classref-themeproperty" ids="class-tabcontainer-theme-icon-menu" names="class_tabcontainer_theme_icon_menu"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>menu</strong> <reference internal="True" refid="class-tabcontainer-theme-icon-menu"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>菜单按钮的图标（见 <reference internal="True" refid="class-tabcontainer-method-set-popup"><inline classes="std std-ref">set_popup</inline></reference>）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-theme-icon-menu-highlight"></target>
            <paragraph classes="classref-themeproperty" ids="class-tabcontainer-theme-icon-menu-highlight" names="class_tabcontainer_theme_icon_menu_highlight"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>menu_highlight</strong> <reference internal="True" refid="class-tabcontainer-theme-icon-menu-highlight"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当光标悬停时菜单按钮的图标（见 <reference internal="True" refid="class-tabcontainer-method-set-popup"><inline classes="std std-ref">set_popup</inline></reference>）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-theme-style-panel"></target>
            <paragraph classes="classref-themeproperty" ids="class-tabcontainer-theme-style-panel" names="class_tabcontainer_theme_style_panel"><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference> <strong>panel</strong> <reference internal="True" refid="class-tabcontainer-theme-style-panel"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>背景填充的样式。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-theme-style-tab-disabled"></target>
            <paragraph classes="classref-themeproperty" ids="class-tabcontainer-theme-style-tab-disabled" names="class_tabcontainer_theme_style_tab_disabled"><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference> <strong>tab_disabled</strong> <reference internal="True" refid="class-tabcontainer-theme-style-tab-disabled"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>选项卡处于禁用状态时的样式。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-theme-style-tab-focus"></target>
            <paragraph classes="classref-themeproperty" ids="class-tabcontainer-theme-style-tab-focus" names="class_tabcontainer_theme_style_tab_focus"><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference> <strong>tab_focus</strong> <reference internal="True" refid="class-tabcontainer-theme-style-tab-focus"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>该 <reference internal="True" refuri="class_tabbar#class-tabbar"><inline classes="std std-ref">TabBar</inline></reference> 处于聚焦状态时使用的 <reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference>。<reference internal="True" refid="class-tabcontainer-theme-style-tab-focus"><inline classes="std std-ref">tab_focus</inline></reference> <reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference> 显示在基础 <reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference> <emphasis>之上</emphasis>，所以应该使用部分透明的 <reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference>，确保基础 <reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference> 仍然可见。代表轮廓或下划线的 <reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference> 可以很好地实现这个目的。要禁用聚焦的视觉效果，请指定 <reference internal="True" refuri="class_styleboxempty#class-styleboxempty"><inline classes="std std-ref">StyleBoxEmpty</inline></reference> 资源。请注意，禁用聚焦的视觉效果会影响使用键盘/手柄进行导航的可用性，所以出于可访问性的原因，不建议这样做。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-theme-style-tab-hovered"></target>
            <paragraph classes="classref-themeproperty" ids="class-tabcontainer-theme-style-tab-hovered" names="class_tabcontainer_theme_style_tab_hovered"><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference> <strong>tab_hovered</strong> <reference internal="True" refid="class-tabcontainer-theme-style-tab-hovered"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当前悬停的选项卡的样式。</paragraph>
            <paragraph><strong>注意：</strong>该样式将至少以与 <reference internal="True" refid="class-tabcontainer-theme-style-tab-unselected"><inline classes="std std-ref">tab_unselected</inline></reference> 相同的宽度绘制。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-theme-style-tab-selected"></target>
            <paragraph classes="classref-themeproperty" ids="class-tabcontainer-theme-style-tab-selected" names="class_tabcontainer_theme_style_tab_selected"><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference> <strong>tab_selected</strong> <reference internal="True" refid="class-tabcontainer-theme-style-tab-selected"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当前选中的选项卡的样式。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-theme-style-tab-unselected"></target>
            <paragraph classes="classref-themeproperty" ids="class-tabcontainer-theme-style-tab-unselected" names="class_tabcontainer_theme_style_tab_unselected"><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference> <strong>tab_unselected</strong> <reference internal="True" refid="class-tabcontainer-theme-style-tab-unselected"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>其他未被选中的选项卡的样式。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabcontainer-theme-style-tabbar-background"></target>
            <paragraph classes="classref-themeproperty" ids="class-tabcontainer-theme-style-tabbar-background" names="class_tabcontainer_theme_style_tabbar_background"><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference> <strong>tabbar_background</strong> <reference internal="True" refid="class-tabcontainer-theme-style-tabbar-background"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_tabbar#class-tabbar"><inline classes="std std-ref">TabBar</inline></reference> 区域的背景填充样式。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效运算符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列位标志构成位掩码的整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_collisionpolygon2d.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/CollisionPolygon2D.xml.</comment>
    <target refid="class-collisionpolygon2d"></target>
    <section ids="collisionpolygon2d class-collisionpolygon2d" names="collisionpolygon2d class_collisionpolygon2d">
        <title>CollisionPolygon2D</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_node2d#class-node2d"><inline classes="std std-ref">Node2D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_canvasitem#class-canvasitem"><inline classes="std std-ref">CanvasItem</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>向 <reference internal="True" refuri="class_collisionobject2d#class-collisionobject2d"><inline classes="std std-ref">CollisionObject2D</inline></reference> 父级提供多边形形状的节点。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>一个节点，为 <reference internal="True" refuri="class_collisionobject2d#class-collisionobject2d"><inline classes="std std-ref">CollisionObject2D</inline></reference> 父级提供加厚多边形形状（角柱体）并允许对其进行编辑。该多边形可以是凹的或凸的。这可以为 <reference internal="True" refuri="class_area2d#class-area2d"><inline classes="std std-ref">Area2D</inline></reference> 提供检测形状，也能够将 <reference internal="True" refuri="class_physicsbody2d#class-physicsbody2d"><inline classes="std std-ref">PhysicsBody2D</inline></reference> 转变为实体对象。</paragraph>
            <paragraph><strong>警告：</strong>非均匀缩放的 <reference internal="True" refuri="class_collisionshape2d#class-collisionshape2d"><inline classes="std std-ref">CollisionShape2D</inline></reference> 可能不会按预期运行。可改为确保在所有轴上保持其缩放相同，并调整其形状资源。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="53"></colspec>
                    <colspec colwidth="93"></colspec>
                    <colspec colwidth="26"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-collisionpolygon2d-buildmode"><inline classes="std std-ref">BuildMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-collisionpolygon2d-property-build-mode"><inline classes="std std-ref">build_mode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-collisionpolygon2d-property-disabled"><inline classes="std std-ref">disabled</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-collisionpolygon2d-property-one-way-collision"><inline classes="std std-ref">one_way_collision</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-collisionpolygon2d-property-one-way-collision-margin"><inline classes="std std-ref">one_way_collision_margin</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_packedvector2array#class-packedvector2array"><inline classes="std std-ref">PackedVector2Array</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-collisionpolygon2d-property-polygon"><inline classes="std std-ref">polygon</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>PackedVector2Array()</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="枚举">
            <title>枚举</title>
            <target refid="enum-collisionpolygon2d-buildmode"></target>
            <paragraph classes="classref-enumeration" ids="enum-collisionpolygon2d-buildmode" names="enum_collisionpolygon2d_buildmode">enum <strong>BuildMode</strong>:</paragraph>
            <target refid="class-collisionpolygon2d-constant-build-solids"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-collisionpolygon2d-constant-build-solids" names="class_collisionpolygon2d_constant_build_solids"><reference internal="True" refid="enum-collisionpolygon2d-buildmode"><inline classes="std std-ref">BuildMode</inline></reference> <strong>BUILD_SOLIDS</strong> = <literal>0</literal></paragraph>
            <paragraph>碰撞包含多边形及其内部区域。在这个模式下，该节点的效果与使用若干 <reference internal="True" refuri="class_convexpolygonshape2d#class-convexpolygonshape2d"><inline classes="std std-ref">ConvexPolygonShape2D</inline></reference> 节点相同，其中的每个节点都包含该多边形凸分解后的凸形状（但不会有使用多个节点的负担）。</paragraph>
            <target refid="class-collisionpolygon2d-constant-build-segments"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-collisionpolygon2d-constant-build-segments" names="class_collisionpolygon2d_constant_build_segments"><reference internal="True" refid="enum-collisionpolygon2d-buildmode"><inline classes="std std-ref">BuildMode</inline></reference> <strong>BUILD_SEGMENTS</strong> = <literal>1</literal></paragraph>
            <paragraph>碰撞经包含多边形的边缘。在这个模式下，该节点的效果与单个由若干线段组成的 <reference internal="True" refuri="class_concavepolygonshape2d#class-concavepolygonshape2d"><inline classes="std std-ref">ConcavePolygonShape2D</inline></reference> 相同，其中（第一条以后的）每条线段都从上一条的终点开始，最后一条线段在第一条的起点结束（构成闭合但中空的多边形）。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="属性说明">
            <title>属性说明</title>
            <target refid="class-collisionpolygon2d-property-build-mode"></target>
            <paragraph classes="classref-property" ids="class-collisionpolygon2d-property-build-mode" names="class_collisionpolygon2d_property_build_mode"><reference internal="True" refid="enum-collisionpolygon2d-buildmode"><inline classes="std std-ref">BuildMode</inline></reference> <strong>build_mode</strong> = <literal>0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_build_mode</strong> <strong>(</strong> <reference internal="True" refid="enum-collisionpolygon2d-buildmode"><inline classes="std std-ref">BuildMode</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-collisionpolygon2d-buildmode"><inline classes="std std-ref">BuildMode</inline></reference> <strong>get_build_mode</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>碰撞构建模式。使用 <reference internal="True" refid="enum-collisionpolygon2d-buildmode"><inline classes="std std-ref">BuildMode</inline></reference> 常量之一。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-collisionpolygon2d-property-disabled"></target>
            <paragraph classes="classref-property" ids="class-collisionpolygon2d-property-disabled" names="class_collisionpolygon2d_property_disabled"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>disabled</strong> = <literal>false</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_disabled</strong> <strong>(</strong> <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_disabled</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则不会检测到碰撞。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-collisionpolygon2d-property-one-way-collision"></target>
            <paragraph classes="classref-property" ids="class-collisionpolygon2d-property-one-way-collision" names="class_collisionpolygon2d_property_one_way_collision"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>one_way_collision</strong> = <literal>false</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_one_way_collision</strong> <strong>(</strong> <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_one_way_collision_enabled</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则只有面朝上的边缘才会与其他对象发生碰撞，方向是相对于 <strong>CollisionPolygon2D</strong> 的旋转而言的。</paragraph>
            <paragraph><strong>注意：</strong>如果这个 <strong>CollisionPolygon2D</strong> 是 <reference internal="True" refuri="class_area2d#class-area2d"><inline classes="std std-ref">Area2D</inline></reference> 节点的子节点，则这个属性无效。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-collisionpolygon2d-property-one-way-collision-margin"></target>
            <paragraph classes="classref-property" ids="class-collisionpolygon2d-property-one-way-collision-margin" names="class_collisionpolygon2d_property_one_way_collision_margin"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>one_way_collision_margin</strong> = <literal>1.0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_one_way_collision_margin</strong> <strong>(</strong> <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_one_way_collision_margin</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>用于单向碰撞的边距（以像素为单位）。较高的值将使形状更厚，并且对于以高速进入多边形的对撞机来说效果更好。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-collisionpolygon2d-property-polygon"></target>
            <paragraph classes="classref-property" ids="class-collisionpolygon2d-property-polygon" names="class_collisionpolygon2d_property_polygon"><reference internal="True" refuri="class_packedvector2array#class-packedvector2array"><inline classes="std std-ref">PackedVector2Array</inline></reference> <strong>polygon</strong> = <literal>PackedVector2Array()</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_polygon</strong> <strong>(</strong> <reference internal="True" refuri="class_packedvector2array#class-packedvector2array"><inline classes="std std-ref">PackedVector2Array</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_packedvector2array#class-packedvector2array"><inline classes="std std-ref">PackedVector2Array</inline></reference> <strong>get_polygon</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>该多边形的顶点列表。每个点都与下一个点相连，最后一个点与第一个点相连。</paragraph>
            <paragraph><strong>注意：</strong>返回的顶点位于给定的 <strong>CollisionPolygon2D</strong> 的局部坐标空间中。</paragraph>
            <paragraph><strong>警告：</strong>返回值是 <reference internal="True" refuri="class_packedvector2array#class-packedvector2array"><inline classes="std std-ref">PackedVector2Array</inline></reference> 的副本，不是引用。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，所以可以直接使用类名调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_rdpipelinecolorblendstate.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/RDPipelineColorBlendState.xml.</comment>
    <target refid="class-rdpipelinecolorblendstate"></target>
    <section ids="rdpipelinecolorblendstate class-rdpipelinecolorblendstate" names="rdpipelinecolorblendstate class_rdpipelinecolorblendstate">
        <title>RDPipelineColorBlendState</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>管线颜色混合状态（由 <reference internal="True" refuri="class_renderingdevice#class-renderingdevice"><inline classes="std std-ref">RenderingDevice</inline></reference> 使用）。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>这个对象由 <reference internal="True" refuri="class_renderingdevice#class-renderingdevice"><inline classes="std std-ref">RenderingDevice</inline></reference> 使用。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="116"></colspec>
                    <colspec colwidth="82"></colspec>
                    <colspec colwidth="23"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_rdpipelinecolorblendstateattachment#class-rdpipelinecolorblendstateattachment"><inline classes="std std-ref">RDPipelineColorBlendStateAttachment</inline></reference>]</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rdpipelinecolorblendstate-property-attachments"><inline classes="std std-ref">attachments</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>[]</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rdpipelinecolorblendstate-property-blend-constant"><inline classes="std std-ref">blend_constant</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Color(0, 0, 0, 1)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rdpipelinecolorblendstate-property-enable-logic-op"><inline classes="std std-ref">enable_logic_op</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-logicoperation"><inline classes="std std-ref">LogicOperation</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rdpipelinecolorblendstate-property-logic-op"><inline classes="std std-ref">logic_op</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="属性说明">
            <title>属性说明</title>
            <target refid="class-rdpipelinecolorblendstate-property-attachments"></target>
            <paragraph classes="classref-property" ids="class-rdpipelinecolorblendstate-property-attachments" names="class_rdpipelinecolorblendstate_property_attachments"><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_rdpipelinecolorblendstateattachment#class-rdpipelinecolorblendstateattachment"><inline classes="std std-ref">RDPipelineColorBlendStateAttachment</inline></reference>] <strong>attachments</strong> = <literal>[]</literal> <reference internal="True" refid="class-rdpipelinecolorblendstate-property-attachments"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_attachments</strong>(value: <reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_rdpipelinecolorblendstateattachment#class-rdpipelinecolorblendstateattachment"><inline classes="std std-ref">RDPipelineColorBlendStateAttachment</inline></reference>])</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_rdpipelinecolorblendstateattachment#class-rdpipelinecolorblendstateattachment"><inline classes="std std-ref">RDPipelineColorBlendStateAttachment</inline></reference>] <strong>get_attachments</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>要混合的附件。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-rdpipelinecolorblendstate-property-blend-constant"></target>
            <paragraph classes="classref-property" ids="class-rdpipelinecolorblendstate-property-blend-constant" names="class_rdpipelinecolorblendstate_property_blend_constant"><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>blend_constant</strong> = <literal>Color(0, 0, 0, 1)</literal> <reference internal="True" refid="class-rdpipelinecolorblendstate-property-blend-constant"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_blend_constant</strong>(value: <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>get_blend_constant</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>要进行混合的颜色常量。另见 <reference internal="True" refuri="class_renderingdevice#class-renderingdevice-method-draw-list-set-blend-constants"><inline classes="std std-ref">RenderingDevice.draw_list_set_blend_constants</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-rdpipelinecolorblendstate-property-enable-logic-op"></target>
            <paragraph classes="classref-property" ids="class-rdpipelinecolorblendstate-property-enable-logic-op" names="class_rdpipelinecolorblendstate_property_enable_logic_op"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>enable_logic_op</strong> = <literal>false</literal> <reference internal="True" refid="class-rdpipelinecolorblendstate-property-enable-logic-op"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_enable_logic_op</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_enable_logic_op</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则执行 <reference internal="True" refid="class-rdpipelinecolorblendstate-property-logic-op"><inline classes="std std-ref">logic_op</inline></reference> 中定义的逻辑运算。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-rdpipelinecolorblendstate-property-logic-op"></target>
            <paragraph classes="classref-property" ids="class-rdpipelinecolorblendstate-property-logic-op" names="class_rdpipelinecolorblendstate_property_logic_op"><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-logicoperation"><inline classes="std std-ref">LogicOperation</inline></reference> <strong>logic_op</strong> = <literal>0</literal> <reference internal="True" refid="class-rdpipelinecolorblendstate-property-logic-op"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_logic_op</strong>(value: <reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-logicoperation"><inline classes="std std-ref">LogicOperation</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-logicoperation"><inline classes="std std-ref">LogicOperation</inline></reference> <strong>get_logic_op</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>混合时执行的逻辑运算。仅在 <reference internal="True" refid="class-rdpipelinecolorblendstate-property-enable-logic-op"><inline classes="std std-ref">enable_logic_op</inline></reference> 为 <literal>true</literal> 时有效。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效运算符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列位标志构成位掩码的整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_systemfont.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/SystemFont.xml.</comment>
    <target refid="class-systemfont"></target>
    <section ids="systemfont class-systemfont" names="systemfont class_systemfont">
        <title>SystemFont</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_font#class-font"><inline classes="std std-ref">Font</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>从系统字体加载的字体。如果未在宿主操作系统上实现，则回退到默认主题字体。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph><strong>SystemFont</strong> 会从系统字体中加载一个字体，该字体是名称能与 <reference internal="True" refid="class-systemfont-property-font-names"><inline classes="std std-ref">font_names</inline></reference> 匹配的第一个字体。</paragraph>
            <paragraph>会尝试匹配字体样式，但是并不保证。</paragraph>
            <paragraph>返回的字体可能属于某个字体合集，也可能是设置了 OpenType“字重”“宽度”和/或“斜体”特性的可变字体。</paragraph>
            <paragraph>你可以创建系统字体的 <reference internal="True" refuri="class_fontvariation#class-fontvariation"><inline classes="std std-ref">FontVariation</inline></reference>，以便对其特征进行精细控制。</paragraph>
            <paragraph><strong>注意：</strong>这个类在 iOS、Linux、macOS、Windows 上实现，在其他平台上会回退到默认主题字体。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="65"></colspec>
                    <colspec colwidth="105"></colspec>
                    <colspec colwidth="25"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-systemfont-property-allow-system-fallback"><inline classes="std std-ref">allow_system_fallback</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_textserver#enum-textserver-fontantialiasing"><inline classes="std std-ref">FontAntialiasing</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-systemfont-property-antialiasing"><inline classes="std std-ref">antialiasing</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-systemfont-property-disable-embedded-bitmaps"><inline classes="std std-ref">disable_embedded_bitmaps</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-systemfont-property-font-italic"><inline classes="std std-ref">font_italic</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_packedstringarray#class-packedstringarray"><inline classes="std std-ref">PackedStringArray</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-systemfont-property-font-names"><inline classes="std std-ref">font_names</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>PackedStringArray()</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-systemfont-property-font-stretch"><inline classes="std std-ref">font_stretch</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>100</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-systemfont-property-font-weight"><inline classes="std std-ref">font_weight</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>400</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-systemfont-property-force-autohinter"><inline classes="std std-ref">force_autohinter</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-systemfont-property-generate-mipmaps"><inline classes="std std-ref">generate_mipmaps</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_textserver#enum-textserver-hinting"><inline classes="std std-ref">Hinting</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-systemfont-property-hinting"><inline classes="std std-ref">hinting</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-systemfont-property-msdf-pixel-range"><inline classes="std std-ref">msdf_pixel_range</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>16</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-systemfont-property-msdf-size"><inline classes="std std-ref">msdf_size</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>48</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-systemfont-property-multichannel-signed-distance-field"><inline classes="std std-ref">multichannel_signed_distance_field</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-systemfont-property-oversampling"><inline classes="std std-ref">oversampling</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_textserver#enum-textserver-subpixelpositioning"><inline classes="std std-ref">SubpixelPositioning</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-systemfont-property-subpixel-positioning"><inline classes="std std-ref">subpixel_positioning</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="属性说明">
            <title>属性说明</title>
            <target refid="class-systemfont-property-allow-system-fallback"></target>
            <paragraph classes="classref-property" ids="class-systemfont-property-allow-system-fallback" names="class_systemfont_property_allow_system_fallback"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>allow_system_fallback</strong> = <literal>true</literal> <reference internal="True" refid="class-systemfont-property-allow-system-fallback"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_allow_system_fallback</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_allow_system_fallback</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果设置为 <literal>true</literal>，则可以自动将系统字体作为回退使用。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-systemfont-property-antialiasing"></target>
            <paragraph classes="classref-property" ids="class-systemfont-property-antialiasing" names="class_systemfont_property_antialiasing"><reference internal="True" refuri="class_textserver#enum-textserver-fontantialiasing"><inline classes="std std-ref">FontAntialiasing</inline></reference> <strong>antialiasing</strong> = <literal>1</literal> <reference internal="True" refid="class-systemfont-property-antialiasing"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_antialiasing</strong>(value: <reference internal="True" refuri="class_textserver#enum-textserver-fontantialiasing"><inline classes="std std-ref">FontAntialiasing</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_textserver#enum-textserver-fontantialiasing"><inline classes="std std-ref">FontAntialiasing</inline></reference> <strong>get_antialiasing</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>字体抗锯齿模式。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-systemfont-property-disable-embedded-bitmaps"></target>
            <paragraph classes="classref-property" ids="class-systemfont-property-disable-embedded-bitmaps" names="class_systemfont_property_disable_embedded_bitmaps"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>disable_embedded_bitmaps</strong> = <literal>true</literal> <reference internal="True" refid="class-systemfont-property-disable-embedded-bitmaps"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_disable_embedded_bitmaps</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_disable_embedded_bitmaps</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则会禁用内嵌字体位图的加载（仅包含位图的字体以及彩色字体会禁用该属性）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-systemfont-property-font-italic"></target>
            <paragraph classes="classref-property" ids="class-systemfont-property-font-italic" names="class_systemfont_property_font_italic"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>font_italic</strong> = <literal>false</literal> <reference internal="True" refid="class-systemfont-property-font-italic"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_font_italic</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_font_italic</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果设置为 <literal>true</literal>，则优先使用斜体（italic）或伪斜体（oblique）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-systemfont-property-font-names"></target>
            <paragraph classes="classref-property" ids="class-systemfont-property-font-names" names="class_systemfont_property_font_names"><reference internal="True" refuri="class_packedstringarray#class-packedstringarray"><inline classes="std std-ref">PackedStringArray</inline></reference> <strong>font_names</strong> = <literal>PackedStringArray()</literal> <reference internal="True" refid="class-systemfont-property-font-names"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_font_names</strong>(value: <reference internal="True" refuri="class_packedstringarray#class-packedstringarray"><inline classes="std std-ref">PackedStringArray</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_packedstringarray#class-packedstringarray"><inline classes="std std-ref">PackedStringArray</inline></reference> <strong>get_font_names</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>要搜索的字体家族名称数组，会使用第一个与之匹配的字体。</paragraph>
            <paragraph><strong>Note:</strong> The returned array is <emphasis>copied</emphasis> and any changes to it will not update the original property value. See <reference internal="True" refuri="class_packedstringarray#class-packedstringarray"><inline classes="std std-ref">PackedStringArray</inline></reference> for more details.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-systemfont-property-font-stretch"></target>
            <paragraph classes="classref-property" ids="class-systemfont-property-font-stretch" names="class_systemfont_property_font_stretch"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>font_stretch</strong> = <literal>100</literal> <reference internal="True" refid="class-systemfont-property-font-stretch"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_font_stretch</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_font_stretch</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>字体优先使用的拉伸量，相对于正常宽度。介于 <literal>50%</literal> 和 <literal>200%</literal> 之间的百分比。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-systemfont-property-font-weight"></target>
            <paragraph classes="classref-property" ids="class-systemfont-property-font-weight" names="class_systemfont_property_font_weight"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>font_weight</strong> = <literal>400</literal> <reference internal="True" refid="class-systemfont-property-font-weight"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_font_weight</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_font_weight</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>字体优先使用的字重（粗度）。在 <literal>100...999</literal> 范围内的值，正常字重为 <literal>400</literal>，粗体字重为 <literal>700</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-systemfont-property-force-autohinter"></target>
            <paragraph classes="classref-property" ids="class-systemfont-property-force-autohinter" names="class_systemfont_property_force_autohinter"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>force_autohinter</strong> = <literal>false</literal> <reference internal="True" refid="class-systemfont-property-force-autohinter"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_force_autohinter</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_force_autohinter</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果设置为 <literal>true</literal>，则支持自动微调，优先于字体内置微调。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-systemfont-property-generate-mipmaps"></target>
            <paragraph classes="classref-property" ids="class-systemfont-property-generate-mipmaps" names="class_systemfont_property_generate_mipmaps"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>generate_mipmaps</strong> = <literal>false</literal> <reference internal="True" refid="class-systemfont-property-generate-mipmaps"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_generate_mipmaps</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_generate_mipmaps</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果设置为 <literal>true</literal>，则为字体纹理生成 mipmap。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-systemfont-property-hinting"></target>
            <paragraph classes="classref-property" ids="class-systemfont-property-hinting" names="class_systemfont_property_hinting"><reference internal="True" refuri="class_textserver#enum-textserver-hinting"><inline classes="std std-ref">Hinting</inline></reference> <strong>hinting</strong> = <literal>1</literal> <reference internal="True" refid="class-systemfont-property-hinting"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_hinting</strong>(value: <reference internal="True" refuri="class_textserver#enum-textserver-hinting"><inline classes="std std-ref">Hinting</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_textserver#enum-textserver-hinting"><inline classes="std std-ref">Hinting</inline></reference> <strong>get_hinting</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>字体微调模式。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-systemfont-property-msdf-pixel-range"></target>
            <paragraph classes="classref-property" ids="class-systemfont-property-msdf-pixel-range" names="class_systemfont_property_msdf_pixel_range"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>msdf_pixel_range</strong> = <literal>16</literal> <reference internal="True" refid="class-systemfont-property-msdf-pixel-range"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_msdf_pixel_range</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_msdf_pixel_range</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>最小和最大可表示的有符号距离之间的形状周围的范围宽度。如果使用字体轮廓，<reference internal="True" refid="class-systemfont-property-msdf-pixel-range"><inline classes="std std-ref">msdf_pixel_range</inline></reference> 必须至少设置为最大字体轮廓大小的<emphasis>两倍</emphasis>。<reference internal="True" refid="class-systemfont-property-msdf-pixel-range"><inline classes="std std-ref">msdf_pixel_range</inline></reference> 的默认值为 <literal>16</literal>，允许大小最大到 <literal>8</literal> 的轮廓看起来正确。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-systemfont-property-msdf-size"></target>
            <paragraph classes="classref-property" ids="class-systemfont-property-msdf-size" names="class_systemfont_property_msdf_size"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>msdf_size</strong> = <literal>48</literal> <reference internal="True" refid="class-systemfont-property-msdf-size"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_msdf_size</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_msdf_size</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>用于生成 MSDF 纹理的源字体大小。较高的值允许更高的精度，但渲染速度较慢并且需要更多内存。只有当注意到字形渲染中明显缺乏精度时，才增加该属性的值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-systemfont-property-multichannel-signed-distance-field"></target>
            <paragraph classes="classref-property" ids="class-systemfont-property-multichannel-signed-distance-field" names="class_systemfont_property_multichannel_signed_distance_field"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>multichannel_signed_distance_field</strong> = <literal>false</literal> <reference internal="True" refid="class-systemfont-property-multichannel-signed-distance-field"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_multichannel_signed_distance_field</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_multichannel_signed_distance_field</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果设置为 <literal>true</literal>，则所有大小的字形都将使用从动态字体矢量数据生成的单个多通道带符号距离场渲染。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-systemfont-property-oversampling"></target>
            <paragraph classes="classref-property" ids="class-systemfont-property-oversampling" names="class_systemfont_property_oversampling"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>oversampling</strong> = <literal>0.0</literal> <reference internal="True" refid="class-systemfont-property-oversampling"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_oversampling</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_oversampling</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>字体过采样系数，如果设置为 <literal>0.0</literal> 则使用全局过采样系数。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-systemfont-property-subpixel-positioning"></target>
            <paragraph classes="classref-property" ids="class-systemfont-property-subpixel-positioning" names="class_systemfont_property_subpixel_positioning"><reference internal="True" refuri="class_textserver#enum-textserver-subpixelpositioning"><inline classes="std std-ref">SubpixelPositioning</inline></reference> <strong>subpixel_positioning</strong> = <literal>1</literal> <reference internal="True" refid="class-systemfont-property-subpixel-positioning"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_subpixel_positioning</strong>(value: <reference internal="True" refuri="class_textserver#enum-textserver-subpixelpositioning"><inline classes="std std-ref">SubpixelPositioning</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_textserver#enum-textserver-subpixelpositioning"><inline classes="std std-ref">SubpixelPositioning</inline></reference> <strong>get_subpixel_positioning</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>字体字形的次像素定位模式。次像素定位为较小的字体提供了更清晰的文本和更好的字偶距，但会牺牲内存占用和字体栅格化速度。使用 <reference internal="True" refuri="class_textserver#class-textserver-constant-subpixel-positioning-auto"><inline classes="std std-ref">TextServer.SUBPIXEL_POSITIONING_AUTO</inline></reference> 可以根据字体大小自动启用。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

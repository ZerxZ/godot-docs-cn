<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_gdextension.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/GDExtension.xml.</comment>
    <target refid="class-gdextension"></target>
    <section ids="gdextension class-gdextension" names="gdextension class_gdextension">
        <title>GDExtension</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <container classes="contribute">
            <paragraph>目前没有这个类的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
        </container>
        <section classes="classref-reftable-group" ids="id1" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="66"></colspec>
                    <colspec colwidth="155"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gdextension-method-close-library"><inline classes="std std-ref">close_library</inline></reference> <strong>(</strong> <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-gdextension-initializationlevel"><inline classes="std std-ref">InitializationLevel</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gdextension-method-get-minimum-library-initialization-level"><inline classes="std std-ref">get_minimum_library_initialization_level</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gdextension-method-initialize-library"><inline classes="std std-ref">initialize_library</inline></reference> <strong>(</strong> <reference internal="True" refid="enum-gdextension-initializationlevel"><inline classes="std std-ref">InitializationLevel</inline></reference> level <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gdextension-method-is-library-open"><inline classes="std std-ref">is_library_open</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_@globalscope#enum-globalscope-error"><inline classes="std std-ref">Error</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gdextension-method-open-library"><inline classes="std std-ref">open_library</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> path, <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> entry_symbol <strong>)</strong></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id2" names="枚举">
            <title>枚举</title>
            <target refid="enum-gdextension-initializationlevel"></target>
            <paragraph classes="classref-enumeration" ids="enum-gdextension-initializationlevel" names="enum_gdextension_initializationlevel">enum <strong>InitializationLevel</strong>:</paragraph>
            <target refid="class-gdextension-constant-initialization-level-core"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-gdextension-constant-initialization-level-core" names="class_gdextension_constant_initialization_level_core"><reference internal="True" refid="enum-gdextension-initializationlevel"><inline classes="std std-ref">InitializationLevel</inline></reference> <strong>INITIALIZATION_LEVEL_CORE</strong> = <literal>0</literal></paragraph>
            <target refid="class-gdextension-constant-initialization-level-servers"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-gdextension-constant-initialization-level-servers" names="class_gdextension_constant_initialization_level_servers"><reference internal="True" refid="enum-gdextension-initializationlevel"><inline classes="std std-ref">InitializationLevel</inline></reference> <strong>INITIALIZATION_LEVEL_SERVERS</strong> = <literal>1</literal></paragraph>
            <target refid="class-gdextension-constant-initialization-level-scene"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-gdextension-constant-initialization-level-scene" names="class_gdextension_constant_initialization_level_scene"><reference internal="True" refid="enum-gdextension-initializationlevel"><inline classes="std std-ref">InitializationLevel</inline></reference> <strong>INITIALIZATION_LEVEL_SCENE</strong> = <literal>2</literal></paragraph>
            <target refid="class-gdextension-constant-initialization-level-editor"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-gdextension-constant-initialization-level-editor" names="class_gdextension_constant_initialization_level_editor"><reference internal="True" refid="enum-gdextension-initializationlevel"><inline classes="std std-ref">InitializationLevel</inline></reference> <strong>INITIALIZATION_LEVEL_EDITOR</strong> = <literal>3</literal></paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="方法说明">
            <title>方法说明</title>
            <target refid="class-gdextension-method-close-library"></target>
            <paragraph classes="classref-method" ids="class-gdextension-method-close-library" names="class_gdextension_method_close_library">void <strong>close_library</strong> <strong>(</strong> <strong>)</strong></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gdextension-method-get-minimum-library-initialization-level"></target>
            <paragraph classes="classref-method" ids="class-gdextension-method-get-minimum-library-initialization-level" names="class_gdextension_method_get_minimum_library_initialization_level"><reference internal="True" refid="enum-gdextension-initializationlevel"><inline classes="std std-ref">InitializationLevel</inline></reference> <strong>get_minimum_library_initialization_level</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gdextension-method-initialize-library"></target>
            <paragraph classes="classref-method" ids="class-gdextension-method-initialize-library" names="class_gdextension_method_initialize_library">void <strong>initialize_library</strong> <strong>(</strong> <reference internal="True" refid="enum-gdextension-initializationlevel"><inline classes="std std-ref">InitializationLevel</inline></reference> level <strong>)</strong></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gdextension-method-is-library-open"></target>
            <paragraph classes="classref-method" ids="class-gdextension-method-is-library-open" names="class_gdextension_method_is_library_open"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_library_open</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gdextension-method-open-library"></target>
            <paragraph classes="classref-method" ids="class-gdextension-method-open-library" names="class_gdextension_method_open_library"><reference internal="True" refuri="class_@globalscope#enum-globalscope-error"><inline classes="std std-ref">Error</inline></reference> <strong>open_library</strong> <strong>(</strong> <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> path, <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> entry_symbol <strong>)</strong></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，所以可以直接使用类名调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

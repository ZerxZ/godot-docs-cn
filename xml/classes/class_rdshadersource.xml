<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_rdshadersource.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/RDShaderSource.xml.</comment>
    <target refid="class-rdshadersource"></target>
    <section ids="rdshadersource class-rdshadersource" names="rdshadersource class_rdshadersource">
        <title>RDShaderSource</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>着色器源代码（由 <reference internal="True" refuri="class_renderingdevice#class-renderingdevice"><inline classes="std std-ref">RenderingDevice</inline></reference> 使用）。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>文本形式的着色器源代码。</paragraph>
            <paragraph>另见 <reference internal="True" refuri="class_rdshaderfile#class-rdshaderfile"><inline classes="std std-ref">RDShaderFile</inline></reference>。<strong>RDShaderSource</strong> 应该仅用于 <reference internal="True" refuri="class_renderingdevice#class-renderingdevice"><inline classes="std std-ref">RenderingDevice</inline></reference> API。不应将其与 Godot 自己的 <reference internal="True" refuri="class_shader#class-shader"><inline classes="std std-ref">Shader</inline></reference> 资源，Godot 的各种节点会使用后者来进行高阶着色器编程。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="60"></colspec>
                    <colspec colwidth="99"></colspec>
                    <colspec colwidth="8"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-shaderlanguage"><inline classes="std std-ref">ShaderLanguage</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rdshadersource-property-language"><inline classes="std std-ref">language</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rdshadersource-property-source-compute"><inline classes="std std-ref">source_compute</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>""</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rdshadersource-property-source-fragment"><inline classes="std std-ref">source_fragment</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>""</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rdshadersource-property-source-tesselation-control"><inline classes="std std-ref">source_tesselation_control</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>""</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rdshadersource-property-source-tesselation-evaluation"><inline classes="std std-ref">source_tesselation_evaluation</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>""</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rdshadersource-property-source-vertex"><inline classes="std std-ref">source_vertex</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>""</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="29"></colspec>
                    <colspec colwidth="177"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rdshadersource-method-get-stage-source"><inline classes="std std-ref">get_stage_source</inline></reference>(stage: <reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-shaderstage"><inline classes="std std-ref">ShaderStage</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rdshadersource-method-set-stage-source"><inline classes="std std-ref">set_stage_source</inline></reference>(stage: <reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-shaderstage"><inline classes="std std-ref">ShaderStage</inline></reference>, source: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>)</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="属性说明">
            <title>属性说明</title>
            <target refid="class-rdshadersource-property-language"></target>
            <paragraph classes="classref-property" ids="class-rdshadersource-property-language" names="class_rdshadersource_property_language"><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-shaderlanguage"><inline classes="std std-ref">ShaderLanguage</inline></reference> <strong>language</strong> = <literal>0</literal> <reference internal="True" refid="class-rdshadersource-property-language"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_language</strong>(value: <reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-shaderlanguage"><inline classes="std std-ref">ShaderLanguage</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-shaderlanguage"><inline classes="std std-ref">ShaderLanguage</inline></reference> <strong>get_language</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>着色器的编写语言。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-rdshadersource-property-source-compute"></target>
            <paragraph classes="classref-property" ids="class-rdshadersource-property-source-compute" names="class_rdshadersource_property_source_compute"><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>source_compute</strong> = <literal>""</literal> <reference internal="True" refid="class-rdshadersource-property-source-compute"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_stage_source</strong>(stage: <reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-shaderstage"><inline classes="std std-ref">ShaderStage</inline></reference>, source: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>get_stage_source</strong>(stage: <reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-shaderstage"><inline classes="std std-ref">ShaderStage</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>着色器计算阶段的源代码。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-rdshadersource-property-source-fragment"></target>
            <paragraph classes="classref-property" ids="class-rdshadersource-property-source-fragment" names="class_rdshadersource_property_source_fragment"><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>source_fragment</strong> = <literal>""</literal> <reference internal="True" refid="class-rdshadersource-property-source-fragment"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_stage_source</strong>(stage: <reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-shaderstage"><inline classes="std std-ref">ShaderStage</inline></reference>, source: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>get_stage_source</strong>(stage: <reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-shaderstage"><inline classes="std std-ref">ShaderStage</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>着色器片段阶段的源代码。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-rdshadersource-property-source-tesselation-control"></target>
            <paragraph classes="classref-property" ids="class-rdshadersource-property-source-tesselation-control" names="class_rdshadersource_property_source_tesselation_control"><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>source_tesselation_control</strong> = <literal>""</literal> <reference internal="True" refid="class-rdshadersource-property-source-tesselation-control"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_stage_source</strong>(stage: <reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-shaderstage"><inline classes="std std-ref">ShaderStage</inline></reference>, source: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>get_stage_source</strong>(stage: <reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-shaderstage"><inline classes="std std-ref">ShaderStage</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>着色器曲面细分控制阶段的源代码。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-rdshadersource-property-source-tesselation-evaluation"></target>
            <paragraph classes="classref-property" ids="class-rdshadersource-property-source-tesselation-evaluation" names="class_rdshadersource_property_source_tesselation_evaluation"><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>source_tesselation_evaluation</strong> = <literal>""</literal> <reference internal="True" refid="class-rdshadersource-property-source-tesselation-evaluation"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_stage_source</strong>(stage: <reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-shaderstage"><inline classes="std std-ref">ShaderStage</inline></reference>, source: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>get_stage_source</strong>(stage: <reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-shaderstage"><inline classes="std std-ref">ShaderStage</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>着色器曲面细分求值阶段的源代码。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-rdshadersource-property-source-vertex"></target>
            <paragraph classes="classref-property" ids="class-rdshadersource-property-source-vertex" names="class_rdshadersource_property_source_vertex"><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>source_vertex</strong> = <literal>""</literal> <reference internal="True" refid="class-rdshadersource-property-source-vertex"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_stage_source</strong>(stage: <reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-shaderstage"><inline classes="std std-ref">ShaderStage</inline></reference>, source: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>get_stage_source</strong>(stage: <reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-shaderstage"><inline classes="std std-ref">ShaderStage</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>着色器顶点阶段的源代码。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="方法说明">
            <title>方法说明</title>
            <target refid="class-rdshadersource-method-get-stage-source"></target>
            <paragraph classes="classref-method" ids="class-rdshadersource-method-get-stage-source" names="class_rdshadersource_method_get_stage_source"><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>get_stage_source</strong>(stage: <reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-shaderstage"><inline classes="std std-ref">ShaderStage</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-rdshadersource-method-get-stage-source"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回指定着色器阶段 <literal>stage</literal> 的源代码。等价于获取 <reference internal="True" refid="class-rdshadersource-property-source-compute"><inline classes="std std-ref">source_compute</inline></reference>、<reference internal="True" refid="class-rdshadersource-property-source-fragment"><inline classes="std std-ref">source_fragment</inline></reference>、<reference internal="True" refid="class-rdshadersource-property-source-tesselation-control"><inline classes="std std-ref">source_tesselation_control</inline></reference>、<reference internal="True" refid="class-rdshadersource-property-source-tesselation-evaluation"><inline classes="std std-ref">source_tesselation_evaluation</inline></reference> 或 <reference internal="True" refid="class-rdshadersource-property-source-vertex"><inline classes="std std-ref">source_vertex</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-rdshadersource-method-set-stage-source"></target>
            <paragraph classes="classref-method" ids="class-rdshadersource-method-set-stage-source" names="class_rdshadersource_method_set_stage_source"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_stage_source</strong>(stage: <reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-shaderstage"><inline classes="std std-ref">ShaderStage</inline></reference>, source: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <reference internal="True" refid="class-rdshadersource-method-set-stage-source"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置指定着色器阶段 <literal>stage</literal> 的源代码 <literal>source</literal>。等价于设置 <reference internal="True" refid="class-rdshadersource-property-source-compute"><inline classes="std std-ref">source_compute</inline></reference>、<reference internal="True" refid="class-rdshadersource-property-source-fragment"><inline classes="std std-ref">source_fragment</inline></reference>、<reference internal="True" refid="class-rdshadersource-property-source-tesselation-control"><inline classes="std std-ref">source_tesselation_control</inline></reference>、<reference internal="True" refid="class-rdshadersource-property-source-tesselation-evaluation"><inline classes="std std-ref">source_tesselation_evaluation</inline></reference> 或 <reference internal="True" refid="class-rdshadersource-property-source-vertex"><inline classes="std std-ref">source_vertex</inline></reference>。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_renderscenedataextension.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/RenderSceneDataExtension.xml.</comment>
    <target refid="class-renderscenedataextension"></target>
    <section ids="renderscenedataextension class-renderscenedataextension" names="renderscenedataextension class_renderscenedataextension">
        <title>RenderSceneDataExtension</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_renderscenedata#class-renderscenedata"><inline classes="std std-ref">RenderSceneData</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>该类允许在 GDExtension 中实现 RenderSceneData。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>该类允许在 GDExtension 中实现 RenderSceneData。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="39"></colspec>
                    <colspec colwidth="151"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_projection#class-projection"><inline classes="std std-ref">Projection</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-renderscenedataextension-private-method-get-cam-projection"><inline classes="std std-ref">_get_cam_projection</inline></reference>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-renderscenedataextension-private-method-get-cam-transform"><inline classes="std std-ref">_get_cam_transform</inline></reference>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-renderscenedataextension-private-method-get-uniform-buffer"><inline classes="std std-ref">_get_uniform_buffer</inline></reference>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-renderscenedataextension-private-method-get-view-count"><inline classes="std std-ref">_get_view_count</inline></reference>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-renderscenedataextension-private-method-get-view-eye-offset"><inline classes="std std-ref">_get_view_eye_offset</inline></reference>(view: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_projection#class-projection"><inline classes="std std-ref">Projection</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-renderscenedataextension-private-method-get-view-projection"><inline classes="std std-ref">_get_view_projection</inline></reference>(view: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="方法说明">
            <title>方法说明</title>
            <target refid="class-renderscenedataextension-private-method-get-cam-projection"></target>
            <paragraph classes="classref-method" ids="class-renderscenedataextension-private-method-get-cam-projection" names="class_renderscenedataextension_private_method__get_cam_projection"><reference internal="True" refuri="class_projection#class-projection"><inline classes="std std-ref">Projection</inline></reference> <strong>_get_cam_projection</strong>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-renderscenedataextension-private-method-get-cam-projection"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>在 GDExtension 中实现时请返回相机的 <reference internal="True" refuri="class_projection#class-projection"><inline classes="std std-ref">Projection</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-renderscenedataextension-private-method-get-cam-transform"></target>
            <paragraph classes="classref-method" ids="class-renderscenedataextension-private-method-get-cam-transform" names="class_renderscenedataextension_private_method__get_cam_transform"><reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference> <strong>_get_cam_transform</strong>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-renderscenedataextension-private-method-get-cam-transform"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>在 GDExtension 中实现时请返回相机的 <reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-renderscenedataextension-private-method-get-uniform-buffer"></target>
            <paragraph classes="classref-method" ids="class-renderscenedataextension-private-method-get-uniform-buffer" names="class_renderscenedataextension_private_method__get_uniform_buffer"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>_get_uniform_buffer</strong>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-renderscenedataextension-private-method-get-uniform-buffer"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>在 GDExtension 中实现时请返回 Uniform 缓冲的 <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>，这个缓冲中包含了 UBO 形式的场景数据。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-renderscenedataextension-private-method-get-view-count"></target>
            <paragraph classes="classref-method" ids="class-renderscenedataextension-private-method-get-view-count" names="class_renderscenedataextension_private_method__get_view_count"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>_get_view_count</strong>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-renderscenedataextension-private-method-get-view-count"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>在 GDExtension 中实现时请返回视图数量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-renderscenedataextension-private-method-get-view-eye-offset"></target>
            <paragraph classes="classref-method" ids="class-renderscenedataextension-private-method-get-view-eye-offset" names="class_renderscenedataextension_private_method__get_view_eye_offset"><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> <strong>_get_view_eye_offset</strong>(view: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-renderscenedataextension-private-method-get-view-eye-offset"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>在 GDExtension 中实现时请返回 <literal>view</literal> 视图的眼部偏移量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-renderscenedataextension-private-method-get-view-projection"></target>
            <paragraph classes="classref-method" ids="class-renderscenedataextension-private-method-get-view-projection" names="class_renderscenedataextension_private_method__get_view_projection"><reference internal="True" refuri="class_projection#class-projection"><inline classes="std std-ref">Projection</inline></reference> <strong>_get_view_projection</strong>(view: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-renderscenedataextension-private-method-get-view-projection"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>在 GDExtension 中实现时请返回 <literal>view</literal> 视图的视图 <reference internal="True" refuri="class_projection#class-projection"><inline classes="std std-ref">Projection</inline></reference>。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效运算符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列位标志构成位掩码的整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

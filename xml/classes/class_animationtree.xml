<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_animationtree.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/AnimationTree.xml.</comment>
    <target refid="class-animationtree"></target>
    <section ids="animationtree class-animationtree" names="animationtree class_animationtree">
        <title>AnimationTree</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_animationmixer#class-animationmixer"><inline classes="std std-ref">AnimationMixer</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>用于 <reference internal="True" refuri="class_animationplayer#class-animationplayer"><inline classes="std std-ref">AnimationPlayer</inline></reference> 中高级动画过渡的节点。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>用于 <reference internal="True" refuri="class_animationplayer#class-animationplayer"><inline classes="std std-ref">AnimationPlayer</inline></reference> 中高级动画过渡的节点。</paragraph>
            <paragraph><strong>注意：</strong>与 <reference internal="True" refuri="class_animationplayer#class-animationplayer"><inline classes="std std-ref">AnimationPlayer</inline></reference> 连接时，该 <reference internal="True" refuri="class_animationplayer#class-animationplayer"><inline classes="std std-ref">AnimationPlayer</inline></reference> 的部分属性和方法将不会像预期的那样发挥作用。播放和过渡应该只使用 <strong>AnimationTree</strong> 和组成它的 <reference internal="True" refuri="class_animationnode#class-animationnode"><inline classes="std std-ref">AnimationNode</inline></reference> 来处理。<reference internal="True" refuri="class_animationplayer#class-animationplayer"><inline classes="std std-ref">AnimationPlayer</inline></reference> 节点应仅用于添加、删除和编辑动画。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference internal="True" refuri="../tutorials/animation/animation_tree"><inline classes="doc">使用 AnimationTree</inline></reference></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference name="第三人称射击演示" refuri="https://godotengine.org/asset-library/asset/678">第三人称射击演示</reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="51"></colspec>
                    <colspec colwidth="96"></colspec>
                    <colspec colwidth="89"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-animationtree-property-advance-expression-base-node"><inline classes="std std-ref">advance_expression_base_node</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>NodePath(".")</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-animationtree-property-anim-player"><inline classes="std std-ref">anim_player</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>NodePath("")</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph>deterministic</paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal> (overrides <reference internal="True" refuri="class_animationmixer#class-animationmixer-property-deterministic"><inline classes="std std-ref">AnimationMixer</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_animationrootnode#class-animationrootnode"><inline classes="std std-ref">AnimationRootNode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-animationtree-property-tree-root"><inline classes="std std-ref">tree_root</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id4" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="78"></colspec>
                    <colspec colwidth="172"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-animationtree-animationprocesscallback"><inline classes="std std-ref">AnimationProcessCallback</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-animationtree-method-get-process-callback"><inline classes="std std-ref">get_process_callback</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-animationtree-method-set-process-callback"><inline classes="std std-ref">set_process_callback</inline></reference> <strong>(</strong> <reference internal="True" refid="enum-animationtree-animationprocesscallback"><inline classes="std std-ref">AnimationProcessCallback</inline></reference> mode <strong>)</strong></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="信号">
            <title>信号</title>
            <target refid="class-animationtree-signal-animation-player-changed"></target>
            <paragraph classes="classref-signal" ids="class-animationtree-signal-animation-player-changed" names="class_animationtree_signal_animation_player_changed"><strong>animation_player_changed</strong> <strong>(</strong> <strong>)</strong></paragraph>
            <paragraph>当 <reference internal="True" refid="class-animationtree-property-anim-player"><inline classes="std std-ref">anim_player</inline></reference> 被改变时发出。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="枚举">
            <title>枚举</title>
            <target refid="enum-animationtree-animationprocesscallback"></target>
            <paragraph classes="classref-enumeration" ids="enum-animationtree-animationprocesscallback" names="enum_animationtree_animationprocesscallback">enum <strong>AnimationProcessCallback</strong>:</paragraph>
            <target refid="class-animationtree-constant-animation-process-physics"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-animationtree-constant-animation-process-physics" names="class_animationtree_constant_animation_process_physics"><reference internal="True" refid="enum-animationtree-animationprocesscallback"><inline classes="std std-ref">AnimationProcessCallback</inline></reference> <strong>ANIMATION_PROCESS_PHYSICS</strong> = <literal>0</literal></paragraph>
            <paragraph>用于向后兼容。见 <reference internal="True" refuri="class_animationmixer#class-animationmixer-constant-animation-callback-mode-process-physics"><inline classes="std std-ref">AnimationMixer.ANIMATION_CALLBACK_MODE_PROCESS_PHYSICS</inline></reference>。</paragraph>
            <target refid="class-animationtree-constant-animation-process-idle"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-animationtree-constant-animation-process-idle" names="class_animationtree_constant_animation_process_idle"><reference internal="True" refid="enum-animationtree-animationprocesscallback"><inline classes="std std-ref">AnimationProcessCallback</inline></reference> <strong>ANIMATION_PROCESS_IDLE</strong> = <literal>1</literal></paragraph>
            <paragraph>用于向后兼容。见 <reference internal="True" refuri="class_animationmixer#class-animationmixer-constant-animation-callback-mode-process-idle"><inline classes="std std-ref">AnimationMixer.ANIMATION_CALLBACK_MODE_PROCESS_IDLE</inline></reference>。</paragraph>
            <target refid="class-animationtree-constant-animation-process-manual"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-animationtree-constant-animation-process-manual" names="class_animationtree_constant_animation_process_manual"><reference internal="True" refid="enum-animationtree-animationprocesscallback"><inline classes="std std-ref">AnimationProcessCallback</inline></reference> <strong>ANIMATION_PROCESS_MANUAL</strong> = <literal>2</literal></paragraph>
            <paragraph>用于向后兼容。见 <reference internal="True" refuri="class_animationmixer#class-animationmixer-constant-animation-callback-mode-process-manual"><inline classes="std std-ref">AnimationMixer.ANIMATION_CALLBACK_MODE_PROCESS_MANUAL</inline></reference>。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id7" names="属性说明">
            <title>属性说明</title>
            <target refid="class-animationtree-property-advance-expression-base-node"></target>
            <paragraph classes="classref-property" ids="class-animationtree-property-advance-expression-base-node" names="class_animationtree_property_advance_expression_base_node"><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> <strong>advance_expression_base_node</strong> = <literal>NodePath(".")</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_advance_expression_base_node</strong> <strong>(</strong> <reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> <strong>get_advance_expression_base_node</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>用于评估 <reference internal="True" refuri="class_animationnode#class-animationnode"><inline classes="std std-ref">AnimationNode</inline></reference> <reference internal="True" refuri="class_expression#class-expression"><inline classes="std std-ref">Expression</inline></reference> 的 <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> 的路径，内部未明确指定路径时使用。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-animationtree-property-anim-player"></target>
            <paragraph classes="classref-property" ids="class-animationtree-property-anim-player" names="class_animationtree_property_anim_player"><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> <strong>anim_player</strong> = <literal>NodePath("")</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_animation_player</strong> <strong>(</strong> <reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> <strong>get_animation_player</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>用于动画的 <reference internal="True" refuri="class_animationplayer#class-animationplayer"><inline classes="std std-ref">AnimationPlayer</inline></reference> 的路径。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-animationtree-property-tree-root"></target>
            <paragraph classes="classref-property" ids="class-animationtree-property-tree-root" names="class_animationtree_property_tree_root"><reference internal="True" refuri="class_animationrootnode#class-animationrootnode"><inline classes="std std-ref">AnimationRootNode</inline></reference> <strong>tree_root</strong></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_tree_root</strong> <strong>(</strong> <reference internal="True" refuri="class_animationrootnode#class-animationrootnode"><inline classes="std std-ref">AnimationRootNode</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_animationrootnode#class-animationrootnode"><inline classes="std std-ref">AnimationRootNode</inline></reference> <strong>get_tree_root</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>该 <strong>AnimationTree</strong> 的根动画节点。见 <reference internal="True" refuri="class_animationrootnode#class-animationrootnode"><inline classes="std std-ref">AnimationRootNode</inline></reference>。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id8" names="方法说明">
            <title>方法说明</title>
            <target refid="class-animationtree-method-get-process-callback"></target>
            <paragraph classes="classref-method" ids="class-animationtree-method-get-process-callback" names="class_animationtree_method_get_process_callback"><reference internal="True" refid="enum-animationtree-animationprocesscallback"><inline classes="std std-ref">AnimationProcessCallback</inline></reference> <strong>get_process_callback</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>用于向后兼容。见 <reference internal="True" refuri="class_animationmixer#enum-animationmixer-animationcallbackmodeprocess"><inline classes="std std-ref">AnimationCallbackModeProcess</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-animationtree-method-set-process-callback"></target>
            <paragraph classes="classref-method" ids="class-animationtree-method-set-process-callback" names="class_animationtree_method_set_process_callback">void <strong>set_process_callback</strong> <strong>(</strong> <reference internal="True" refid="enum-animationtree-animationprocesscallback"><inline classes="std std-ref">AnimationProcessCallback</inline></reference> mode <strong>)</strong></paragraph>
            <paragraph>用于向后兼容。见 <reference internal="True" refuri="class_animationmixer#enum-animationmixer-animationcallbackmodeprocess"><inline classes="std std-ref">AnimationCallbackModeProcess</inline></reference>。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，所以可以直接使用类名调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_skeletonmodification2dccdik.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/SkeletonModification2DCCDIK.xml.</comment>
    <target refid="class-skeletonmodification2dccdik"></target>
    <section ids="skeletonmodification2dccdik class-skeletonmodification2dccdik" names="skeletonmodification2dccdik class_skeletonmodification2dccdik">
        <title>SkeletonModification2DCCDIK</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_skeletonmodification2d#class-skeletonmodification2d"><inline classes="std std-ref">SkeletonModification2D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>使用 CCDIK 操纵一系列骨骼到达某个 2D 目标的修改器。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>这种 <reference internal="True" refuri="class_skeletonmodification2d#class-skeletonmodification2d"><inline classes="std std-ref">SkeletonModification2D</inline></reference> 使用的是名为循环坐标下降逆向运动学（Cyclic Coordinate Descent Inverse Kinematics）的算法，即 CCDIK，能够对 <reference internal="True" refuri="class_skeleton2d#class-skeleton2d"><inline classes="std std-ref">Skeleton2D</inline></reference> 中的一条骨骼链进行操作，从而抵达指定的目标。</paragraph>
            <paragraph>CCDIK 的工作原理是让一组骨骼围绕单一轴旋转，这组骨骼通常称作“骨骼链”。每根骨骼的尖端都会转向目标（默认），这样整条骨骼链就能够正确旋转，从而抵达目标。因为这些骨骼都只围绕单一轴进行旋转，CCDIK 看起来<emphasis>能够</emphasis>比其他 IK 解算器更加机械。</paragraph>
            <paragraph><strong>注意：</strong>CCDIK 修改器具有关节属性 <literal>ccdik_joints</literal>，里面是存放 CCDIK 链中各个关节数据的数据对象。关节和骨骼是两码事！CCDIK 关节存放的是 CCDIK 所使用的骨骼链中每根骨骼所需的数据。</paragraph>
            <paragraph>CCDIK 还完全支持角度约束，能够对求解过程进行更多控制。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="33"></colspec>
                    <colspec colwidth="100"></colspec>
                    <colspec colwidth="18"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2dccdik-property-ccdik-data-chain-length"><inline classes="std std-ref">ccdik_data_chain_length</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2dccdik-property-target-nodepath"><inline classes="std std-ref">target_nodepath</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>NodePath("")</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2dccdik-property-tip-nodepath"><inline classes="std std-ref">tip_nodepath</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>NodePath("")</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="33"></colspec>
                    <colspec colwidth="206"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2dccdik-method-get-ccdik-joint-bone2d-node"><inline classes="std std-ref">get_ccdik_joint_bone2d_node</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> joint_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2dccdik-method-get-ccdik-joint-bone-index"><inline classes="std std-ref">get_ccdik_joint_bone_index</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> joint_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2dccdik-method-get-ccdik-joint-constraint-angle-invert"><inline classes="std std-ref">get_ccdik_joint_constraint_angle_invert</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> joint_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2dccdik-method-get-ccdik-joint-constraint-angle-max"><inline classes="std std-ref">get_ccdik_joint_constraint_angle_max</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> joint_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2dccdik-method-get-ccdik-joint-constraint-angle-min"><inline classes="std std-ref">get_ccdik_joint_constraint_angle_min</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> joint_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2dccdik-method-get-ccdik-joint-enable-constraint"><inline classes="std std-ref">get_ccdik_joint_enable_constraint</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> joint_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2dccdik-method-get-ccdik-joint-rotate-from-joint"><inline classes="std std-ref">get_ccdik_joint_rotate_from_joint</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> joint_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2dccdik-method-set-ccdik-joint-bone2d-node"><inline classes="std std-ref">set_ccdik_joint_bone2d_node</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> joint_idx, <reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> bone2d_nodepath <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2dccdik-method-set-ccdik-joint-bone-index"><inline classes="std std-ref">set_ccdik_joint_bone_index</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> joint_idx, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> bone_idx <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2dccdik-method-set-ccdik-joint-constraint-angle-invert"><inline classes="std std-ref">set_ccdik_joint_constraint_angle_invert</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> joint_idx, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> invert <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2dccdik-method-set-ccdik-joint-constraint-angle-max"><inline classes="std std-ref">set_ccdik_joint_constraint_angle_max</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> joint_idx, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> angle_max <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2dccdik-method-set-ccdik-joint-constraint-angle-min"><inline classes="std std-ref">set_ccdik_joint_constraint_angle_min</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> joint_idx, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> angle_min <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2dccdik-method-set-ccdik-joint-enable-constraint"><inline classes="std std-ref">set_ccdik_joint_enable_constraint</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> joint_idx, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> enable_constraint <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2dccdik-method-set-ccdik-joint-rotate-from-joint"><inline classes="std std-ref">set_ccdik_joint_rotate_from_joint</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> joint_idx, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> rotate_from_joint <strong>)</strong></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="属性说明">
            <title>属性说明</title>
            <target refid="class-skeletonmodification2dccdik-property-ccdik-data-chain-length"></target>
            <paragraph classes="classref-property" ids="class-skeletonmodification2dccdik-property-ccdik-data-chain-length" names="class_skeletonmodification2dccdik_property_ccdik_data_chain_length"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>ccdik_data_chain_length</strong> = <literal>0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_ccdik_data_chain_length</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_ccdik_data_chain_length</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>CCDIK 修改中 CCDIK 关节的数量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2dccdik-property-target-nodepath"></target>
            <paragraph classes="classref-property" ids="class-skeletonmodification2dccdik-property-target-nodepath" names="class_skeletonmodification2dccdik_property_target_nodepath"><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> <strong>target_nodepath</strong> = <literal>NodePath("")</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_target_node</strong> <strong>(</strong> <reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> <strong>get_target_node</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>作为 CCDIK 修改目标的节点的 NodePath。该节点是 CCDIK 链会尝试将该骨骼链旋转到的节点。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2dccdik-property-tip-nodepath"></target>
            <paragraph classes="classref-property" ids="class-skeletonmodification2dccdik-property-tip-nodepath" names="class_skeletonmodification2dccdik_property_tip_nodepath"><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> <strong>tip_nodepath</strong> = <literal>NodePath("")</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_tip_node</strong> <strong>(</strong> <reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> <strong>get_tip_node</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>该 CCDIK 链的结束位置。通常，这应该是一个 <reference internal="True" refuri="class_bone2d#class-bone2d"><inline classes="std std-ref">Bone2D</inline></reference> 节点的一个子节点，被附加到 CCDIK 链中的最终 <reference internal="True" refuri="class_bone2d#class-bone2d"><inline classes="std std-ref">Bone2D</inline></reference> 上。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="方法说明">
            <title>方法说明</title>
            <target refid="class-skeletonmodification2dccdik-method-get-ccdik-joint-bone2d-node"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodification2dccdik-method-get-ccdik-joint-bone2d-node" names="class_skeletonmodification2dccdik_method_get_ccdik_joint_bone2d_node"><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> <strong>get_ccdik_joint_bone2d_node</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> joint_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回分配给位于 <literal>joint_idx</literal> 的 CCDIK 关节的 <reference internal="True" refuri="class_bone2d#class-bone2d"><inline classes="std std-ref">Bone2D</inline></reference> 节点。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2dccdik-method-get-ccdik-joint-bone-index"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodification2dccdik-method-get-ccdik-joint-bone-index" names="class_skeletonmodification2dccdik_method_get_ccdik_joint_bone_index"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_ccdik_joint_bone_index</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> joint_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回分配给位于 <literal>joint_idx</literal> 的 CCDIK 关节的 <reference internal="True" refuri="class_bone2d#class-bone2d"><inline classes="std std-ref">Bone2D</inline></reference> 节点的索引。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2dccdik-method-get-ccdik-joint-constraint-angle-invert"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodification2dccdik-method-get-ccdik-joint-constraint-angle-invert" names="class_skeletonmodification2dccdik_method_get_ccdik_joint_constraint_angle_invert"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_ccdik_joint_constraint_angle_invert</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> joint_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回索引为 <literal>joint_idx</literal> 的 CCDIK 关节是否使用反向关节约束。详见 <reference internal="True" refid="class-skeletonmodification2dccdik-method-set-ccdik-joint-constraint-angle-invert"><inline classes="std std-ref">set_ccdik_joint_constraint_angle_invert</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2dccdik-method-get-ccdik-joint-constraint-angle-max"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodification2dccdik-method-get-ccdik-joint-constraint-angle-max" names="class_skeletonmodification2dccdik_method_get_ccdik_joint_constraint_angle_max"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_ccdik_joint_constraint_angle_max</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> joint_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回索引为 <literal>joint_idx</literal> 的关节的最大角约束。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2dccdik-method-get-ccdik-joint-constraint-angle-min"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodification2dccdik-method-get-ccdik-joint-constraint-angle-min" names="class_skeletonmodification2dccdik_method_get_ccdik_joint_constraint_angle_min"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_ccdik_joint_constraint_angle_min</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> joint_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回索引为 <literal>joint_idx</literal> 的关节的最小角约束。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2dccdik-method-get-ccdik-joint-enable-constraint"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodification2dccdik-method-get-ccdik-joint-enable-constraint" names="class_skeletonmodification2dccdik_method_get_ccdik_joint_enable_constraint"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_ccdik_joint_enable_constraint</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> joint_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回索引为 <literal>joint_idx</literal> 的 CCDIK 关节是否启用角度约束。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2dccdik-method-get-ccdik-joint-rotate-from-joint"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodification2dccdik-method-get-ccdik-joint-rotate-from-joint" names="class_skeletonmodification2dccdik_method_get_ccdik_joint_rotate_from_joint"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_ccdik_joint_rotate_from_joint</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> joint_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回位于 <literal>joint_idx</literal> 的关节是从该关节旋转，<literal>true</literal>，还是从尖端旋转，<literal>false</literal>。默认是从尖端旋转。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2dccdik-method-set-ccdik-joint-bone2d-node"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodification2dccdik-method-set-ccdik-joint-bone2d-node" names="class_skeletonmodification2dccdik_method_set_ccdik_joint_bone2d_node">void <strong>set_ccdik_joint_bone2d_node</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> joint_idx, <reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> bone2d_nodepath <strong>)</strong></paragraph>
            <paragraph>设置分配给位于 <literal>joint_idx</literal> 的 CCDIK 关节的 <reference internal="True" refuri="class_bone2d#class-bone2d"><inline classes="std std-ref">Bone2D</inline></reference> 节点。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2dccdik-method-set-ccdik-joint-bone-index"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodification2dccdik-method-set-ccdik-joint-bone-index" names="class_skeletonmodification2dccdik_method_set_ccdik_joint_bone_index">void <strong>set_ccdik_joint_bone_index</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> joint_idx, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> bone_idx <strong>)</strong></paragraph>
            <paragraph>设置位于 <literal>joint_idx</literal> 的 CCDIK 关节的骨骼索引 <literal>joint_idx</literal>。可能时，还会根据所链接的骨架提供的信息来更新 CCDIK 关节的 <literal>bone2d_node</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2dccdik-method-set-ccdik-joint-constraint-angle-invert"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodification2dccdik-method-set-ccdik-joint-constraint-angle-invert" names="class_skeletonmodification2dccdik_method_set_ccdik_joint_constraint_angle_invert">void <strong>set_ccdik_joint_constraint_angle_invert</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> joint_idx, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> invert <strong>)</strong></paragraph>
            <paragraph>设置索引为 <literal>joint_idx</literal> 的 CCDIK 关节是否使用反向关节约束。</paragraph>
            <paragraph>反向关节约束只会将该 CCDIK 关节的角度约束在输入的最大最小角度范围<emphasis>之外</emphasis>。因此，它被称为反向关节约束，因为它将关节约束在输入值的外部。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2dccdik-method-set-ccdik-joint-constraint-angle-max"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodification2dccdik-method-set-ccdik-joint-constraint-angle-max" names="class_skeletonmodification2dccdik_method_set_ccdik_joint_constraint_angle_max">void <strong>set_ccdik_joint_constraint_angle_max</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> joint_idx, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> angle_max <strong>)</strong></paragraph>
            <paragraph>设置索引为 <literal>joint_idx</literal> 的关节的最大角约束。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2dccdik-method-set-ccdik-joint-constraint-angle-min"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodification2dccdik-method-set-ccdik-joint-constraint-angle-min" names="class_skeletonmodification2dccdik_method_set_ccdik_joint_constraint_angle_min">void <strong>set_ccdik_joint_constraint_angle_min</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> joint_idx, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> angle_min <strong>)</strong></paragraph>
            <paragraph>设置索引为 <literal>joint_idx</literal> 的关节的最小角约束。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2dccdik-method-set-ccdik-joint-enable-constraint"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodification2dccdik-method-set-ccdik-joint-enable-constraint" names="class_skeletonmodification2dccdik_method_set_ccdik_joint_enable_constraint">void <strong>set_ccdik_joint_enable_constraint</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> joint_idx, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> enable_constraint <strong>)</strong></paragraph>
            <paragraph>决定是否启用 <literal>joint_idx</literal> 处 CCDIK 关节上的角度约束。为 <literal>true</literal> 时将启用约束，在求解时纳入考虑范围。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2dccdik-method-set-ccdik-joint-rotate-from-joint"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodification2dccdik-method-set-ccdik-joint-rotate-from-joint" names="class_skeletonmodification2dccdik_method_set_ccdik_joint_rotate_from_joint">void <strong>set_ccdik_joint_rotate_from_joint</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> joint_idx, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> rotate_from_joint <strong>)</strong></paragraph>
            <paragraph>设置位于 <literal>joint_idx</literal> 的关节是设为从关节旋转，<literal>true</literal>，还是从尖端旋转，<literal>false</literal>。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，所以可以直接使用类名调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

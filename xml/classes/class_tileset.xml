<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_tileset.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/TileSet.xml.</comment>
    <target refid="class-tileset"></target>
    <section ids="tileset class-tileset" names="tileset class_tileset">
        <title>TileSet</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>Tilemap 的图块库。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>TileSet 是 <reference internal="True" refuri="class_tilemap#class-tilemap"><inline classes="std std-ref">TileMap</inline></reference> 的图块库。TileSet 处理 <reference internal="True" refuri="class_tilesetsource#class-tilesetsource"><inline classes="std std-ref">TileSetSource</inline></reference> 列表，每个表中存储一组图块。</paragraph>
            <paragraph>图块既可以来自 <reference internal="True" refuri="class_tilesetatlassource#class-tilesetatlassource"><inline classes="std std-ref">TileSetAtlasSource</inline></reference>，可以渲染纹理中的图块，支持物理、导航等功能，也可以来自 <reference internal="True" refuri="class_tilesetscenescollectionsource#class-tilesetscenescollectionsource"><inline classes="std std-ref">TileSetScenesCollectionSource</inline></reference>，提供基于场景的图块。</paragraph>
            <paragraph>图块通过使用三个 ID 来引用：源 ID、图集坐标 ID、备选图块 ID。</paragraph>
            <paragraph>TileSet 可以配置图块暴露哪些属性。为了做到这一点，TileSet 资源使用了属性层，你可以根据需要进行添加和删除。</paragraph>
            <paragraph>例如，添加物理层可以为瓷砖提供碰撞形状。不同的层都有不同的属性（物理层和遮罩），要实现不同类型的碰撞，你也可以添加多个 TileSet 物理层。</paragraph>
            <paragraph>更多信息请参阅添加新层的函数。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference internal="True" refuri="../tutorials/2d/using_tilemaps"><inline classes="doc">使用 Tilemap</inline></reference></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference name="2D 平台跳跃演示" refuri="https://godotengine.org/asset-library/asset/2727">2D 平台跳跃演示</reference></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference name="2D 等轴演示" refuri="https://godotengine.org/asset-library/asset/2718">2D 等轴演示</reference></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference name="2D 六边形演示" refuri="https://godotengine.org/asset-library/asset/2717">2D 六边形演示</reference></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference name="AStarGrid2D 的 2D 网格导航演示" refuri="https://godotengine.org/asset-library/asset/2723">AStarGrid2D 的 2D 网格导航演示</reference></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference name="2D 角色扮演游戏（RPG）演示" refuri="https://godotengine.org/asset-library/asset/2729">2D 角色扮演游戏（RPG）演示</reference></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference name="2D 运动学角色演示" refuri="https://godotengine.org/asset-library/asset/2719">2D 运动学角色演示</reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="52"></colspec>
                    <colspec colwidth="66"></colspec>
                    <colspec colwidth="22"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-tileset-tilelayout"><inline classes="std std-ref">TileLayout</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-property-tile-layout"><inline classes="std std-ref">tile_layout</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-tileset-tileoffsetaxis"><inline classes="std std-ref">TileOffsetAxis</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-property-tile-offset-axis"><inline classes="std std-ref">tile_offset_axis</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-tileset-tileshape"><inline classes="std std-ref">TileShape</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-property-tile-shape"><inline classes="std std-ref">tile_shape</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-property-tile-size"><inline classes="std std-ref">tile_size</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Vector2i(16, 16)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-property-uv-clipping"><inline classes="std std-ref">uv_clipping</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id4" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="53"></colspec>
                    <colspec colwidth="348"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-add-custom-data-layer"><inline classes="std std-ref">add_custom_data_layer</inline></reference>(to_position: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> = -1)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-add-navigation-layer"><inline classes="std std-ref">add_navigation_layer</inline></reference>(to_position: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> = -1)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-add-occlusion-layer"><inline classes="std std-ref">add_occlusion_layer</inline></reference>(to_position: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> = -1)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-add-pattern"><inline classes="std std-ref">add_pattern</inline></reference>(pattern: <reference internal="True" refuri="class_tilemappattern#class-tilemappattern"><inline classes="std std-ref">TileMapPattern</inline></reference>, index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> = -1)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-add-physics-layer"><inline classes="std std-ref">add_physics_layer</inline></reference>(to_position: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> = -1)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-add-source"><inline classes="std std-ref">add_source</inline></reference>(source: <reference internal="True" refuri="class_tilesetsource#class-tilesetsource"><inline classes="std std-ref">TileSetSource</inline></reference>, atlas_source_id_override: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> = -1)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-add-terrain"><inline classes="std std-ref">add_terrain</inline></reference>(terrain_set: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, to_position: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> = -1)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-add-terrain-set"><inline classes="std std-ref">add_terrain_set</inline></reference>(to_position: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> = -1)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-cleanup-invalid-tile-proxies"><inline classes="std std-ref">cleanup_invalid_tile_proxies</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-clear-tile-proxies"><inline classes="std std-ref">clear_tile_proxies</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-get-alternative-level-tile-proxy"><inline classes="std std-ref">get_alternative_level_tile_proxy</inline></reference>(source_from: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, coords_from: <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference>, alternative_from: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-get-coords-level-tile-proxy"><inline classes="std std-ref">get_coords_level_tile_proxy</inline></reference>(source_from: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, coords_from: <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-get-custom-data-layer-by-name"><inline classes="std std-ref">get_custom_data_layer_by_name</inline></reference>(layer_name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-get-custom-data-layer-name"><inline classes="std std-ref">get_custom_data_layer_name</inline></reference>(layer_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_@globalscope#enum-globalscope-variant-type"><inline classes="std std-ref">Variant.Type</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-get-custom-data-layer-type"><inline classes="std std-ref">get_custom_data_layer_type</inline></reference>(layer_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-get-custom-data-layers-count"><inline classes="std std-ref">get_custom_data_layers_count</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-get-navigation-layer-layer-value"><inline classes="std std-ref">get_navigation_layer_layer_value</inline></reference>(layer_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, layer_number: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-get-navigation-layer-layers"><inline classes="std std-ref">get_navigation_layer_layers</inline></reference>(layer_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-get-navigation-layers-count"><inline classes="std std-ref">get_navigation_layers_count</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-get-next-source-id"><inline classes="std std-ref">get_next_source_id</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-get-occlusion-layer-light-mask"><inline classes="std std-ref">get_occlusion_layer_light_mask</inline></reference>(layer_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-get-occlusion-layer-sdf-collision"><inline classes="std std-ref">get_occlusion_layer_sdf_collision</inline></reference>(layer_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-get-occlusion-layers-count"><inline classes="std std-ref">get_occlusion_layers_count</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_tilemappattern#class-tilemappattern"><inline classes="std std-ref">TileMapPattern</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-get-pattern"><inline classes="std std-ref">get_pattern</inline></reference>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> = -1)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-get-patterns-count"><inline classes="std std-ref">get_patterns_count</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-get-physics-layer-collision-layer"><inline classes="std std-ref">get_physics_layer_collision_layer</inline></reference>(layer_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-get-physics-layer-collision-mask"><inline classes="std std-ref">get_physics_layer_collision_mask</inline></reference>(layer_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_physicsmaterial#class-physicsmaterial"><inline classes="std std-ref">PhysicsMaterial</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-get-physics-layer-physics-material"><inline classes="std std-ref">get_physics_layer_physics_material</inline></reference>(layer_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-get-physics-layers-count"><inline classes="std std-ref">get_physics_layers_count</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_tilesetsource#class-tilesetsource"><inline classes="std std-ref">TileSetSource</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-get-source"><inline classes="std std-ref">get_source</inline></reference>(source_id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-get-source-count"><inline classes="std std-ref">get_source_count</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-get-source-id"><inline classes="std std-ref">get_source_id</inline></reference>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-get-source-level-tile-proxy"><inline classes="std std-ref">get_source_level_tile_proxy</inline></reference>(source_from: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-get-terrain-color"><inline classes="std std-ref">get_terrain_color</inline></reference>(terrain_set: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, terrain_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-get-terrain-name"><inline classes="std std-ref">get_terrain_name</inline></reference>(terrain_set: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, terrain_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-tileset-terrainmode"><inline classes="std std-ref">TerrainMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-get-terrain-set-mode"><inline classes="std std-ref">get_terrain_set_mode</inline></reference>(terrain_set: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-get-terrain-sets-count"><inline classes="std std-ref">get_terrain_sets_count</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-get-terrains-count"><inline classes="std std-ref">get_terrains_count</inline></reference>(terrain_set: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-has-alternative-level-tile-proxy"><inline classes="std std-ref">has_alternative_level_tile_proxy</inline></reference>(source_from: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, coords_from: <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference>, alternative_from: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-has-coords-level-tile-proxy"><inline classes="std std-ref">has_coords_level_tile_proxy</inline></reference>(source_from: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, coords_from: <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-has-source"><inline classes="std std-ref">has_source</inline></reference>(source_id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-has-source-level-tile-proxy"><inline classes="std std-ref">has_source_level_tile_proxy</inline></reference>(source_from: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-map-tile-proxy"><inline classes="std std-ref">map_tile_proxy</inline></reference>(source_from: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, coords_from: <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference>, alternative_from: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-move-custom-data-layer"><inline classes="std std-ref">move_custom_data_layer</inline></reference>(layer_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, to_position: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-move-navigation-layer"><inline classes="std std-ref">move_navigation_layer</inline></reference>(layer_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, to_position: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-move-occlusion-layer"><inline classes="std std-ref">move_occlusion_layer</inline></reference>(layer_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, to_position: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-move-physics-layer"><inline classes="std std-ref">move_physics_layer</inline></reference>(layer_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, to_position: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-move-terrain"><inline classes="std std-ref">move_terrain</inline></reference>(terrain_set: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, terrain_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, to_position: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-move-terrain-set"><inline classes="std std-ref">move_terrain_set</inline></reference>(terrain_set: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, to_position: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-remove-alternative-level-tile-proxy"><inline classes="std std-ref">remove_alternative_level_tile_proxy</inline></reference>(source_from: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, coords_from: <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference>, alternative_from: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-remove-coords-level-tile-proxy"><inline classes="std std-ref">remove_coords_level_tile_proxy</inline></reference>(source_from: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, coords_from: <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-remove-custom-data-layer"><inline classes="std std-ref">remove_custom_data_layer</inline></reference>(layer_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-remove-navigation-layer"><inline classes="std std-ref">remove_navigation_layer</inline></reference>(layer_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-remove-occlusion-layer"><inline classes="std std-ref">remove_occlusion_layer</inline></reference>(layer_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-remove-pattern"><inline classes="std std-ref">remove_pattern</inline></reference>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-remove-physics-layer"><inline classes="std std-ref">remove_physics_layer</inline></reference>(layer_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-remove-source"><inline classes="std std-ref">remove_source</inline></reference>(source_id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-remove-source-level-tile-proxy"><inline classes="std std-ref">remove_source_level_tile_proxy</inline></reference>(source_from: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-remove-terrain"><inline classes="std std-ref">remove_terrain</inline></reference>(terrain_set: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, terrain_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-remove-terrain-set"><inline classes="std std-ref">remove_terrain_set</inline></reference>(terrain_set: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-set-alternative-level-tile-proxy"><inline classes="std std-ref">set_alternative_level_tile_proxy</inline></reference>(source_from: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, coords_from: <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference>, alternative_from: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, source_to: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, coords_to: <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference>, alternative_to: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-set-coords-level-tile-proxy"><inline classes="std std-ref">set_coords_level_tile_proxy</inline></reference>(p_source_from: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, coords_from: <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference>, source_to: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, coords_to: <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-set-custom-data-layer-name"><inline classes="std std-ref">set_custom_data_layer_name</inline></reference>(layer_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, layer_name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-set-custom-data-layer-type"><inline classes="std std-ref">set_custom_data_layer_type</inline></reference>(layer_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, layer_type: <reference internal="True" refuri="class_@globalscope#enum-globalscope-variant-type"><inline classes="std std-ref">Variant.Type</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-set-navigation-layer-layer-value"><inline classes="std std-ref">set_navigation_layer_layer_value</inline></reference>(layer_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, layer_number: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-set-navigation-layer-layers"><inline classes="std std-ref">set_navigation_layer_layers</inline></reference>(layer_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, layers: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-set-occlusion-layer-light-mask"><inline classes="std std-ref">set_occlusion_layer_light_mask</inline></reference>(layer_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, light_mask: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-set-occlusion-layer-sdf-collision"><inline classes="std std-ref">set_occlusion_layer_sdf_collision</inline></reference>(layer_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, sdf_collision: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-set-physics-layer-collision-layer"><inline classes="std std-ref">set_physics_layer_collision_layer</inline></reference>(layer_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, layer: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-set-physics-layer-collision-mask"><inline classes="std std-ref">set_physics_layer_collision_mask</inline></reference>(layer_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, mask: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-set-physics-layer-physics-material"><inline classes="std std-ref">set_physics_layer_physics_material</inline></reference>(layer_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, physics_material: <reference internal="True" refuri="class_physicsmaterial#class-physicsmaterial"><inline classes="std std-ref">PhysicsMaterial</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-set-source-id"><inline classes="std std-ref">set_source_id</inline></reference>(source_id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, new_source_id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-set-source-level-tile-proxy"><inline classes="std std-ref">set_source_level_tile_proxy</inline></reference>(source_from: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, source_to: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-set-terrain-color"><inline classes="std std-ref">set_terrain_color</inline></reference>(terrain_set: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, terrain_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, color: <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-set-terrain-name"><inline classes="std std-ref">set_terrain_name</inline></reference>(terrain_set: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, terrain_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tileset-method-set-terrain-set-mode"><inline classes="std std-ref">set_terrain_set_mode</inline></reference>(terrain_set: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, mode: <reference internal="True" refid="enum-tileset-terrainmode"><inline classes="std std-ref">TerrainMode</inline></reference>)</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="枚举">
            <title>枚举</title>
            <target refid="enum-tileset-tileshape"></target>
            <paragraph classes="classref-enumeration" ids="enum-tileset-tileshape" names="enum_tileset_tileshape">enum <strong>TileShape</strong>: <reference internal="True" refid="enum-tileset-tileshape"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-tileset-constant-tile-shape-square"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-tileset-constant-tile-shape-square" names="class_tileset_constant_tile_shape_square"><reference internal="True" refid="enum-tileset-tileshape"><inline classes="std std-ref">TileShape</inline></reference> <strong>TILE_SHAPE_SQUARE</strong> = <literal>0</literal></paragraph>
            <paragraph>矩形图块形状。</paragraph>
            <target refid="class-tileset-constant-tile-shape-isometric"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-tileset-constant-tile-shape-isometric" names="class_tileset_constant_tile_shape_isometric"><reference internal="True" refid="enum-tileset-tileshape"><inline classes="std std-ref">TileShape</inline></reference> <strong>TILE_SHAPE_ISOMETRIC</strong> = <literal>1</literal></paragraph>
            <paragraph>钻石图块形状（用于等轴外观）。</paragraph>
            <paragraph><strong>注意：</strong>等轴 <strong>TileSet</strong> 在 <reference internal="True" refuri="class_tilemap#class-tilemap"><inline classes="std std-ref">TileMap</inline></reference> 及其所有图层都启用了Y 排序时效果最好。</paragraph>
            <target refid="class-tileset-constant-tile-shape-half-offset-square"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-tileset-constant-tile-shape-half-offset-square" names="class_tileset_constant_tile_shape_half_offset_square"><reference internal="True" refid="enum-tileset-tileshape"><inline classes="std std-ref">TileShape</inline></reference> <strong>TILE_SHAPE_HALF_OFFSET_SQUARE</strong> = <literal>2</literal></paragraph>
            <paragraph>矩形图块形状，每隔一行/列偏移半个图块。</paragraph>
            <target refid="class-tileset-constant-tile-shape-hexagon"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-tileset-constant-tile-shape-hexagon" names="class_tileset_constant_tile_shape_hexagon"><reference internal="True" refid="enum-tileset-tileshape"><inline classes="std std-ref">TileShape</inline></reference> <strong>TILE_SHAPE_HEXAGON</strong> = <literal>3</literal></paragraph>
            <paragraph>六边形图块形状。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-tileset-tilelayout"></target>
            <paragraph classes="classref-enumeration" ids="enum-tileset-tilelayout" names="enum_tileset_tilelayout">enum <strong>TileLayout</strong>: <reference internal="True" refid="enum-tileset-tilelayout"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-tileset-constant-tile-layout-stacked"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-tileset-constant-tile-layout-stacked" names="class_tileset_constant_tile_layout_stacked"><reference internal="True" refid="enum-tileset-tilelayout"><inline classes="std std-ref">TileLayout</inline></reference> <strong>TILE_LAYOUT_STACKED</strong> = <literal>0</literal></paragraph>
            <paragraph>图块坐标布局，两个轴与对应的局部水平轴和垂直轴保持一致。</paragraph>
            <target refid="class-tileset-constant-tile-layout-stacked-offset"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-tileset-constant-tile-layout-stacked-offset" names="class_tileset_constant_tile_layout_stacked_offset"><reference internal="True" refid="enum-tileset-tilelayout"><inline classes="std std-ref">TileLayout</inline></reference> <strong>TILE_LAYOUT_STACKED_OFFSET</strong> = <literal>1</literal></paragraph>
            <paragraph>与 <reference internal="True" refid="class-tileset-constant-tile-layout-stacked"><inline classes="std std-ref">TILE_LAYOUT_STACKED</inline></reference> 相同，但第一个半偏移偏向负方向，而不是正方向。</paragraph>
            <target refid="class-tileset-constant-tile-layout-stairs-right"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-tileset-constant-tile-layout-stairs-right" names="class_tileset_constant_tile_layout_stairs_right"><reference internal="True" refid="enum-tileset-tilelayout"><inline classes="std std-ref">TileLayout</inline></reference> <strong>TILE_LAYOUT_STAIRS_RIGHT</strong> = <literal>2</literal></paragraph>
            <paragraph>图块坐标布局，水平轴保持水平，垂直轴朝向右下方。</paragraph>
            <target refid="class-tileset-constant-tile-layout-stairs-down"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-tileset-constant-tile-layout-stairs-down" names="class_tileset_constant_tile_layout_stairs_down"><reference internal="True" refid="enum-tileset-tilelayout"><inline classes="std std-ref">TileLayout</inline></reference> <strong>TILE_LAYOUT_STAIRS_DOWN</strong> = <literal>3</literal></paragraph>
            <paragraph>图块坐标布局，垂直轴保持垂直，水平轴朝向右下方。</paragraph>
            <target refid="class-tileset-constant-tile-layout-diamond-right"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-tileset-constant-tile-layout-diamond-right" names="class_tileset_constant_tile_layout_diamond_right"><reference internal="True" refid="enum-tileset-tilelayout"><inline classes="std std-ref">TileLayout</inline></reference> <strong>TILE_LAYOUT_DIAMOND_RIGHT</strong> = <literal>4</literal></paragraph>
            <paragraph>图块坐标布局，水平轴朝向右上方，垂直轴朝向右下方。</paragraph>
            <target refid="class-tileset-constant-tile-layout-diamond-down"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-tileset-constant-tile-layout-diamond-down" names="class_tileset_constant_tile_layout_diamond_down"><reference internal="True" refid="enum-tileset-tilelayout"><inline classes="std std-ref">TileLayout</inline></reference> <strong>TILE_LAYOUT_DIAMOND_DOWN</strong> = <literal>5</literal></paragraph>
            <paragraph>图块坐标布局，水平轴朝向右下方，垂直轴朝向左下方。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-tileset-tileoffsetaxis"></target>
            <paragraph classes="classref-enumeration" ids="enum-tileset-tileoffsetaxis" names="enum_tileset_tileoffsetaxis">enum <strong>TileOffsetAxis</strong>: <reference internal="True" refid="enum-tileset-tileoffsetaxis"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-tileset-constant-tile-offset-axis-horizontal"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-tileset-constant-tile-offset-axis-horizontal" names="class_tileset_constant_tile_offset_axis_horizontal"><reference internal="True" refid="enum-tileset-tileoffsetaxis"><inline classes="std std-ref">TileOffsetAxis</inline></reference> <strong>TILE_OFFSET_AXIS_HORIZONTAL</strong> = <literal>0</literal></paragraph>
            <paragraph>水平半偏移。</paragraph>
            <target refid="class-tileset-constant-tile-offset-axis-vertical"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-tileset-constant-tile-offset-axis-vertical" names="class_tileset_constant_tile_offset_axis_vertical"><reference internal="True" refid="enum-tileset-tileoffsetaxis"><inline classes="std std-ref">TileOffsetAxis</inline></reference> <strong>TILE_OFFSET_AXIS_VERTICAL</strong> = <literal>1</literal></paragraph>
            <paragraph>垂直半偏移。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-tileset-cellneighbor"></target>
            <paragraph classes="classref-enumeration" ids="enum-tileset-cellneighbor" names="enum_tileset_cellneighbor">enum <strong>CellNeighbor</strong>: <reference internal="True" refid="enum-tileset-cellneighbor"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-tileset-constant-cell-neighbor-right-side"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-tileset-constant-cell-neighbor-right-side" names="class_tileset_constant_cell_neighbor_right_side"><reference internal="True" refid="enum-tileset-cellneighbor"><inline classes="std std-ref">CellNeighbor</inline></reference> <strong>CELL_NEIGHBOR_RIGHT_SIDE</strong> = <literal>0</literal></paragraph>
            <paragraph>右侧相邻单元格。</paragraph>
            <target refid="class-tileset-constant-cell-neighbor-right-corner"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-tileset-constant-cell-neighbor-right-corner" names="class_tileset_constant_cell_neighbor_right_corner"><reference internal="True" refid="enum-tileset-cellneighbor"><inline classes="std std-ref">CellNeighbor</inline></reference> <strong>CELL_NEIGHBOR_RIGHT_CORNER</strong> = <literal>1</literal></paragraph>
            <paragraph>右角相邻单元格。</paragraph>
            <target refid="class-tileset-constant-cell-neighbor-bottom-right-side"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-tileset-constant-cell-neighbor-bottom-right-side" names="class_tileset_constant_cell_neighbor_bottom_right_side"><reference internal="True" refid="enum-tileset-cellneighbor"><inline classes="std std-ref">CellNeighbor</inline></reference> <strong>CELL_NEIGHBOR_BOTTOM_RIGHT_SIDE</strong> = <literal>2</literal></paragraph>
            <paragraph>右下侧相邻单元格。</paragraph>
            <target refid="class-tileset-constant-cell-neighbor-bottom-right-corner"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-tileset-constant-cell-neighbor-bottom-right-corner" names="class_tileset_constant_cell_neighbor_bottom_right_corner"><reference internal="True" refid="enum-tileset-cellneighbor"><inline classes="std std-ref">CellNeighbor</inline></reference> <strong>CELL_NEIGHBOR_BOTTOM_RIGHT_CORNER</strong> = <literal>3</literal></paragraph>
            <paragraph>右下角相邻单元格。</paragraph>
            <target refid="class-tileset-constant-cell-neighbor-bottom-side"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-tileset-constant-cell-neighbor-bottom-side" names="class_tileset_constant_cell_neighbor_bottom_side"><reference internal="True" refid="enum-tileset-cellneighbor"><inline classes="std std-ref">CellNeighbor</inline></reference> <strong>CELL_NEIGHBOR_BOTTOM_SIDE</strong> = <literal>4</literal></paragraph>
            <paragraph>下侧相邻单元格。</paragraph>
            <target refid="class-tileset-constant-cell-neighbor-bottom-corner"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-tileset-constant-cell-neighbor-bottom-corner" names="class_tileset_constant_cell_neighbor_bottom_corner"><reference internal="True" refid="enum-tileset-cellneighbor"><inline classes="std std-ref">CellNeighbor</inline></reference> <strong>CELL_NEIGHBOR_BOTTOM_CORNER</strong> = <literal>5</literal></paragraph>
            <paragraph>下角相邻单元格。</paragraph>
            <target refid="class-tileset-constant-cell-neighbor-bottom-left-side"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-tileset-constant-cell-neighbor-bottom-left-side" names="class_tileset_constant_cell_neighbor_bottom_left_side"><reference internal="True" refid="enum-tileset-cellneighbor"><inline classes="std std-ref">CellNeighbor</inline></reference> <strong>CELL_NEIGHBOR_BOTTOM_LEFT_SIDE</strong> = <literal>6</literal></paragraph>
            <paragraph>左下侧相邻单元格。</paragraph>
            <target refid="class-tileset-constant-cell-neighbor-bottom-left-corner"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-tileset-constant-cell-neighbor-bottom-left-corner" names="class_tileset_constant_cell_neighbor_bottom_left_corner"><reference internal="True" refid="enum-tileset-cellneighbor"><inline classes="std std-ref">CellNeighbor</inline></reference> <strong>CELL_NEIGHBOR_BOTTOM_LEFT_CORNER</strong> = <literal>7</literal></paragraph>
            <paragraph>左下角相邻单元格。</paragraph>
            <target refid="class-tileset-constant-cell-neighbor-left-side"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-tileset-constant-cell-neighbor-left-side" names="class_tileset_constant_cell_neighbor_left_side"><reference internal="True" refid="enum-tileset-cellneighbor"><inline classes="std std-ref">CellNeighbor</inline></reference> <strong>CELL_NEIGHBOR_LEFT_SIDE</strong> = <literal>8</literal></paragraph>
            <paragraph>左侧相邻单元格。</paragraph>
            <target refid="class-tileset-constant-cell-neighbor-left-corner"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-tileset-constant-cell-neighbor-left-corner" names="class_tileset_constant_cell_neighbor_left_corner"><reference internal="True" refid="enum-tileset-cellneighbor"><inline classes="std std-ref">CellNeighbor</inline></reference> <strong>CELL_NEIGHBOR_LEFT_CORNER</strong> = <literal>9</literal></paragraph>
            <paragraph>左角相邻单元格。</paragraph>
            <target refid="class-tileset-constant-cell-neighbor-top-left-side"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-tileset-constant-cell-neighbor-top-left-side" names="class_tileset_constant_cell_neighbor_top_left_side"><reference internal="True" refid="enum-tileset-cellneighbor"><inline classes="std std-ref">CellNeighbor</inline></reference> <strong>CELL_NEIGHBOR_TOP_LEFT_SIDE</strong> = <literal>10</literal></paragraph>
            <paragraph>左上侧相邻单元格。</paragraph>
            <target refid="class-tileset-constant-cell-neighbor-top-left-corner"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-tileset-constant-cell-neighbor-top-left-corner" names="class_tileset_constant_cell_neighbor_top_left_corner"><reference internal="True" refid="enum-tileset-cellneighbor"><inline classes="std std-ref">CellNeighbor</inline></reference> <strong>CELL_NEIGHBOR_TOP_LEFT_CORNER</strong> = <literal>11</literal></paragraph>
            <paragraph>左上角相邻单元格。</paragraph>
            <target refid="class-tileset-constant-cell-neighbor-top-side"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-tileset-constant-cell-neighbor-top-side" names="class_tileset_constant_cell_neighbor_top_side"><reference internal="True" refid="enum-tileset-cellneighbor"><inline classes="std std-ref">CellNeighbor</inline></reference> <strong>CELL_NEIGHBOR_TOP_SIDE</strong> = <literal>12</literal></paragraph>
            <paragraph>上侧相邻单元格。</paragraph>
            <target refid="class-tileset-constant-cell-neighbor-top-corner"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-tileset-constant-cell-neighbor-top-corner" names="class_tileset_constant_cell_neighbor_top_corner"><reference internal="True" refid="enum-tileset-cellneighbor"><inline classes="std std-ref">CellNeighbor</inline></reference> <strong>CELL_NEIGHBOR_TOP_CORNER</strong> = <literal>13</literal></paragraph>
            <paragraph>上角相邻单元格。</paragraph>
            <target refid="class-tileset-constant-cell-neighbor-top-right-side"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-tileset-constant-cell-neighbor-top-right-side" names="class_tileset_constant_cell_neighbor_top_right_side"><reference internal="True" refid="enum-tileset-cellneighbor"><inline classes="std std-ref">CellNeighbor</inline></reference> <strong>CELL_NEIGHBOR_TOP_RIGHT_SIDE</strong> = <literal>14</literal></paragraph>
            <paragraph>右上侧相邻单元格。</paragraph>
            <target refid="class-tileset-constant-cell-neighbor-top-right-corner"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-tileset-constant-cell-neighbor-top-right-corner" names="class_tileset_constant_cell_neighbor_top_right_corner"><reference internal="True" refid="enum-tileset-cellneighbor"><inline classes="std std-ref">CellNeighbor</inline></reference> <strong>CELL_NEIGHBOR_TOP_RIGHT_CORNER</strong> = <literal>15</literal></paragraph>
            <paragraph>右上角相邻单元格。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-tileset-terrainmode"></target>
            <paragraph classes="classref-enumeration" ids="enum-tileset-terrainmode" names="enum_tileset_terrainmode">enum <strong>TerrainMode</strong>: <reference internal="True" refid="enum-tileset-terrainmode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-tileset-constant-terrain-mode-match-corners-and-sides"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-tileset-constant-terrain-mode-match-corners-and-sides" names="class_tileset_constant_terrain_mode_match_corners_and_sides"><reference internal="True" refid="enum-tileset-terrainmode"><inline classes="std std-ref">TerrainMode</inline></reference> <strong>TERRAIN_MODE_MATCH_CORNERS_AND_SIDES</strong> = <literal>0</literal></paragraph>
            <paragraph>要求与相邻图块地形的角和边都匹配。</paragraph>
            <target refid="class-tileset-constant-terrain-mode-match-corners"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-tileset-constant-terrain-mode-match-corners" names="class_tileset_constant_terrain_mode_match_corners"><reference internal="True" refid="enum-tileset-terrainmode"><inline classes="std std-ref">TerrainMode</inline></reference> <strong>TERRAIN_MODE_MATCH_CORNERS</strong> = <literal>1</literal></paragraph>
            <paragraph>要求与相邻图块地形的角相匹配。</paragraph>
            <target refid="class-tileset-constant-terrain-mode-match-sides"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-tileset-constant-terrain-mode-match-sides" names="class_tileset_constant_terrain_mode_match_sides"><reference internal="True" refid="enum-tileset-terrainmode"><inline classes="std std-ref">TerrainMode</inline></reference> <strong>TERRAIN_MODE_MATCH_SIDES</strong> = <literal>2</literal></paragraph>
            <paragraph>要求与相邻图块地形的边相匹配。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="属性说明">
            <title>属性说明</title>
            <target refid="class-tileset-property-tile-layout"></target>
            <paragraph classes="classref-property" ids="class-tileset-property-tile-layout" names="class_tileset_property_tile_layout"><reference internal="True" refid="enum-tileset-tilelayout"><inline classes="std std-ref">TileLayout</inline></reference> <strong>tile_layout</strong> = <literal>0</literal> <reference internal="True" refid="class-tileset-property-tile-layout"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_tile_layout</strong>(value: <reference internal="True" refid="enum-tileset-tilelayout"><inline classes="std std-ref">TileLayout</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-tileset-tilelayout"><inline classes="std std-ref">TileLayout</inline></reference> <strong>get_tile_layout</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>对于所有半偏移形状（等轴、六边形和半偏移正方形），更改图块在 TileMap 栅格中的索引方式。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-property-tile-offset-axis"></target>
            <paragraph classes="classref-property" ids="class-tileset-property-tile-offset-axis" names="class_tileset_property_tile_offset_axis"><reference internal="True" refid="enum-tileset-tileoffsetaxis"><inline classes="std std-ref">TileOffsetAxis</inline></reference> <strong>tile_offset_axis</strong> = <literal>0</literal> <reference internal="True" refid="class-tileset-property-tile-offset-axis"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_tile_offset_axis</strong>(value: <reference internal="True" refid="enum-tileset-tileoffsetaxis"><inline classes="std std-ref">TileOffsetAxis</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-tileset-tileoffsetaxis"><inline classes="std std-ref">TileOffsetAxis</inline></reference> <strong>get_tile_offset_axis</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>对于所有半偏移形状（等轴、六边形和半偏移正方形），确定偏移轴。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-property-tile-shape"></target>
            <paragraph classes="classref-property" ids="class-tileset-property-tile-shape" names="class_tileset_property_tile_shape"><reference internal="True" refid="enum-tileset-tileshape"><inline classes="std std-ref">TileShape</inline></reference> <strong>tile_shape</strong> = <literal>0</literal> <reference internal="True" refid="class-tileset-property-tile-shape"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_tile_shape</strong>(value: <reference internal="True" refid="enum-tileset-tileshape"><inline classes="std std-ref">TileShape</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-tileset-tileshape"><inline classes="std std-ref">TileShape</inline></reference> <strong>get_tile_shape</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>图块的形状。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-property-tile-size"></target>
            <paragraph classes="classref-property" ids="class-tileset-property-tile-size" names="class_tileset_property_tile_size"><reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> <strong>tile_size</strong> = <literal>Vector2i(16, 16)</literal> <reference internal="True" refid="class-tileset-property-tile-size"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_tile_size</strong>(value: <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> <strong>get_tile_size</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>图块的大小，单位为像素。无论图块是什么形状，这个大小对应的都是图块形状的包围矩形。因此，这是图集所需的最小单元格大小。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-property-uv-clipping"></target>
            <paragraph classes="classref-property" ids="class-tileset-property-uv-clipping" names="class_tileset_property_uv_clipping"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>uv_clipping</strong> = <literal>false</literal> <reference internal="True" refid="class-tileset-property-uv-clipping"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_uv_clipping</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_uv_clipping</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>渲染图块时启用/禁用 UV 裁剪。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id7" names="方法说明">
            <title>方法说明</title>
            <target refid="class-tileset-method-add-custom-data-layer"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-add-custom-data-layer" names="class_tileset_method_add_custom_data_layer"><abbreviation explanation="无返回值。">void</abbreviation> <strong>add_custom_data_layer</strong>(to_position: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> = -1) <reference internal="True" refid="class-tileset-method-add-custom-data-layer"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>在 TileSet 中添加自定义数据层，放置到数组中的 <literal>to_position</literal> 位置。如果 <literal>to_position</literal> 为 -1，则会将其添加到数组的末尾。</paragraph>
            <paragraph>自定义数据层能够为图集图块分配自定义属性。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-add-navigation-layer"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-add-navigation-layer" names="class_tileset_method_add_navigation_layer"><abbreviation explanation="无返回值。">void</abbreviation> <strong>add_navigation_layer</strong>(to_position: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> = -1) <reference internal="True" refid="class-tileset-method-add-navigation-layer"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>在 TileSet 中添加导航层，放置到数组中的 <literal>to_position</literal> 位置。如果 <literal>to_position</literal> 为 -1，则会将其添加到数组的末尾。</paragraph>
            <paragraph>导航层能够为图集图块分配导航区域。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-add-occlusion-layer"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-add-occlusion-layer" names="class_tileset_method_add_occlusion_layer"><abbreviation explanation="无返回值。">void</abbreviation> <strong>add_occlusion_layer</strong>(to_position: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> = -1) <reference internal="True" refid="class-tileset-method-add-occlusion-layer"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>在 TileSet 中添加遮挡层，放置到数组中的 <literal>to_position</literal> 位置。如果 <literal>to_position</literal> 为 -1，则会将其添加到数组的末尾。</paragraph>
            <paragraph>遮挡层能够为图集图块分配遮挡多边形。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-add-pattern"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-add-pattern" names="class_tileset_method_add_pattern"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>add_pattern</strong>(pattern: <reference internal="True" refuri="class_tilemappattern#class-tilemappattern"><inline classes="std std-ref">TileMapPattern</inline></reference>, index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> = -1) <reference internal="True" refid="class-tileset-method-add-pattern"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>添加存储在 TileSet 资源中的 <reference internal="True" refuri="class_tilemappattern#class-tilemappattern"><inline classes="std std-ref">TileMapPattern</inline></reference>。如果提供了 <literal>index</literal>，则会插入到给定的位置。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-add-physics-layer"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-add-physics-layer" names="class_tileset_method_add_physics_layer"><abbreviation explanation="无返回值。">void</abbreviation> <strong>add_physics_layer</strong>(to_position: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> = -1) <reference internal="True" refid="class-tileset-method-add-physics-layer"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>在 TileSet 中添加物理层，放置到数组中的 <literal>to_position</literal> 位置。如果 <literal>to_position</literal> 为 -1，则会将其添加到数组的末尾。</paragraph>
            <paragraph>物理层能够为图集图块分配碰撞多边形。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-add-source"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-add-source" names="class_tileset_method_add_source"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>add_source</strong>(source: <reference internal="True" refuri="class_tilesetsource#class-tilesetsource"><inline classes="std std-ref">TileSetSource</inline></reference>, atlas_source_id_override: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> = -1) <reference internal="True" refid="class-tileset-method-add-source"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>在 TileSet 中添加 <reference internal="True" refuri="class_tilesetsource#class-tilesetsource"><inline classes="std std-ref">TileSetSource</inline></reference>。如果 <literal>atlas_source_id_override</literal> 不为 -1，则还会设置其源 ID。否则会自动生成唯一标识符。</paragraph>
            <paragraph>函数返回添加的源 ID，如果无法添加源则返回 -1。</paragraph>
            <paragraph><strong>警告：</strong>同一个源不能同时属于两个 TileSet。如果添加的源已经附加到其他 <strong>TileSet</strong>，则会在该那个 TileSet 中移除。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-add-terrain"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-add-terrain" names="class_tileset_method_add_terrain"><abbreviation explanation="无返回值。">void</abbreviation> <strong>add_terrain</strong>(terrain_set: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, to_position: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> = -1) <reference internal="True" refid="class-tileset-method-add-terrain"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>在 TileSet 的 <literal>terrain_set</literal> 地形集中添加新的地形，放置到数组中的 <literal>to_position</literal> 位置。如果 <literal>to_position</literal> 为 -1，则会将其添加到数组的末尾。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-add-terrain-set"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-add-terrain-set" names="class_tileset_method_add_terrain_set"><abbreviation explanation="无返回值。">void</abbreviation> <strong>add_terrain_set</strong>(to_position: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> = -1) <reference internal="True" refid="class-tileset-method-add-terrain-set"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>在 TileSet 添加新的地形集，放置到数组中的 <literal>to_position</literal> 位置。如果 <literal>to_position</literal> 为 -1，则会将其添加到数组的末尾。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-cleanup-invalid-tile-proxies"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-cleanup-invalid-tile-proxies" names="class_tileset_method_cleanup_invalid_tile_proxies"><abbreviation explanation="无返回值。">void</abbreviation> <strong>cleanup_invalid_tile_proxies</strong>() <reference internal="True" refid="class-tileset-method-cleanup-invalid-tile-proxies"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>清除指向无效图块的图块代理。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-clear-tile-proxies"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-clear-tile-proxies" names="class_tileset_method_clear_tile_proxies"><abbreviation explanation="无返回值。">void</abbreviation> <strong>clear_tile_proxies</strong>() <reference internal="True" refid="class-tileset-method-clear-tile-proxies"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>清除所有图块代理。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-get-alternative-level-tile-proxy"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-get-alternative-level-tile-proxy" names="class_tileset_method_get_alternative_level_tile_proxy"><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference> <strong>get_alternative_level_tile_proxy</strong>(source_from: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, coords_from: <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference>, alternative_from: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-tileset-method-get-alternative-level-tile-proxy"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回给定标识符的备选级代理。返回的数组包含三个代理的目标标识符（源 ID、图集坐标 ID 和备选图块 ID）。</paragraph>
            <paragraph>如果该 TileSet 没有给定标识符的代理，则返回空数组。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-get-coords-level-tile-proxy"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-get-coords-level-tile-proxy" names="class_tileset_method_get_coords_level_tile_proxy"><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference> <strong>get_coords_level_tile_proxy</strong>(source_from: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, coords_from: <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference>) <reference internal="True" refid="class-tileset-method-get-coords-level-tile-proxy"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回给定标识符的坐标级代理。返回的数组包含代理的两个目标标识符（源 ID 和图集坐标 ID）。</paragraph>
            <paragraph>如果该 TileSet 没有给定标识符的代理，则返回空数组。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-get-custom-data-layer-by-name"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-get-custom-data-layer-by-name" names="class_tileset_method_get_custom_data_layer_by_name"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_custom_data_layer_by_name</strong>(layer_name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tileset-method-get-custom-data-layer-by-name"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回自定义数据层的索引，该自定义数据层由名称表示。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-get-custom-data-layer-name"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-get-custom-data-layer-name" names="class_tileset_method_get_custom_data_layer_name"><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>get_custom_data_layer_name</strong>(layer_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tileset-method-get-custom-data-layer-name"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回自定义数据层的名称，该自定义数据层由索引表示。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-get-custom-data-layer-type"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-get-custom-data-layer-type" names="class_tileset_method_get_custom_data_layer_type"><reference internal="True" refuri="class_@globalscope#enum-globalscope-variant-type"><inline classes="std std-ref">Variant.Type</inline></reference> <strong>get_custom_data_layer_type</strong>(layer_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tileset-method-get-custom-data-layer-type"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回自定义数据层的类型，该自定义数据层由索引表示。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-get-custom-data-layers-count"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-get-custom-data-layers-count" names="class_tileset_method_get_custom_data_layers_count"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_custom_data_layers_count</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tileset-method-get-custom-data-layers-count"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回自定义数据层的数量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-get-navigation-layer-layer-value"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-get-navigation-layer-layer-value" names="class_tileset_method_get_navigation_layer_layer_value"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_navigation_layer_layer_value</strong>(layer_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, layer_number: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tileset-method-get-navigation-layer-layer-value"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回由给定的 <literal>layer_index</literal> 标识的 TileSet 导航数据层是否启用了指定的导航层，导航层 <literal>layer_number</literal> 在 1 和 32 之间。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-get-navigation-layer-layers"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-get-navigation-layer-layers" names="class_tileset_method_get_navigation_layer_layers"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_navigation_layer_layers</strong>(layer_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tileset-method-get-navigation-layer-layers"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回给定 TileSet 导航层的（导航服务器中的）导航层。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-get-navigation-layers-count"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-get-navigation-layers-count" names="class_tileset_method_get_navigation_layers_count"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_navigation_layers_count</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tileset-method-get-navigation-layers-count"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回导航层的数量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-get-next-source-id"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-get-next-source-id" names="class_tileset_method_get_next_source_id"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_next_source_id</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tileset-method-get-next-source-id"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回新的未使用的源 ID。这个生成的 ID 与调用 <reference internal="True" refid="class-tileset-method-add-source"><inline classes="std std-ref">add_source</inline></reference> 将返回的 ID 相同。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-get-occlusion-layer-light-mask"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-get-occlusion-layer-light-mask" names="class_tileset_method_get_occlusion_layer_light_mask"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_occlusion_layer_light_mask</strong>(layer_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tileset-method-get-occlusion-layer-light-mask"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回遮挡层的光照掩码。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-get-occlusion-layer-sdf-collision"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-get-occlusion-layer-sdf-collision" names="class_tileset_method_get_occlusion_layer_sdf_collision"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_occlusion_layer_sdf_collision</strong>(layer_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tileset-method-get-occlusion-layer-sdf-collision"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回这个层的遮挡器是否使用 <literal>sdf_collision</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-get-occlusion-layers-count"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-get-occlusion-layers-count" names="class_tileset_method_get_occlusion_layers_count"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_occlusion_layers_count</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tileset-method-get-occlusion-layers-count"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回遮挡层的数量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-get-pattern"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-get-pattern" names="class_tileset_method_get_pattern"><reference internal="True" refuri="class_tilemappattern#class-tilemappattern"><inline classes="std std-ref">TileMapPattern</inline></reference> <strong>get_pattern</strong>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> = -1) <reference internal="True" refid="class-tileset-method-get-pattern"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回给定 <literal>index</literal> 处的 <reference internal="True" refuri="class_tilemappattern#class-tilemappattern"><inline classes="std std-ref">TileMapPattern</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-get-patterns-count"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-get-patterns-count" names="class_tileset_method_get_patterns_count"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_patterns_count</strong>() <reference internal="True" refid="class-tileset-method-get-patterns-count"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回此图块集处理的 <reference internal="True" refuri="class_tilemappattern#class-tilemappattern"><inline classes="std std-ref">TileMapPattern</inline></reference> 的数量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-get-physics-layer-collision-layer"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-get-physics-layer-collision-layer" names="class_tileset_method_get_physics_layer_collision_layer"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_physics_layer_collision_layer</strong>(layer_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tileset-method-get-physics-layer-collision-layer"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回给定 TileSet 物理层中的物体所在的（物理服务器中的）碰撞层。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-get-physics-layer-collision-mask"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-get-physics-layer-collision-mask" names="class_tileset_method_get_physics_layer_collision_mask"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_physics_layer_collision_mask</strong>(layer_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tileset-method-get-physics-layer-collision-mask"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回给定 TileSet 物理层中物体的碰撞遮罩。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-get-physics-layer-physics-material"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-get-physics-layer-physics-material" names="class_tileset_method_get_physics_layer_physics_material"><reference internal="True" refuri="class_physicsmaterial#class-physicsmaterial"><inline classes="std std-ref">PhysicsMaterial</inline></reference> <strong>get_physics_layer_physics_material</strong>(layer_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tileset-method-get-physics-layer-physics-material"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回给定 TileSet 物理层中物体的碰撞材质。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-get-physics-layers-count"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-get-physics-layers-count" names="class_tileset_method_get_physics_layers_count"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_physics_layers_count</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tileset-method-get-physics-layers-count"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回物理层的数量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-get-source"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-get-source" names="class_tileset_method_get_source"><reference internal="True" refuri="class_tilesetsource#class-tilesetsource"><inline classes="std std-ref">TileSetSource</inline></reference> <strong>get_source</strong>(source_id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tileset-method-get-source"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回 ID 为 <literal>source_id</literal> 的 <reference internal="True" refuri="class_tilesetsource#class-tilesetsource"><inline classes="std std-ref">TileSetSource</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-get-source-count"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-get-source-count" names="class_tileset_method_get_source_count"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_source_count</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tileset-method-get-source-count"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回该 TileSet 中 <reference internal="True" refuri="class_tilesetsource#class-tilesetsource"><inline classes="std std-ref">TileSetSource</inline></reference> 的数量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-get-source-id"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-get-source-id" names="class_tileset_method_get_source_id"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_source_id</strong>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tileset-method-get-source-id"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回索引为 <literal>index</literal> 的源的源 ID。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-get-source-level-tile-proxy"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-get-source-level-tile-proxy" names="class_tileset_method_get_source_level_tile_proxy"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_source_level_tile_proxy</strong>(source_from: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-tileset-method-get-source-level-tile-proxy"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回给定源标识符的源级别代理。</paragraph>
            <paragraph>如果 TileSet 没有给定标识符的代理，则返回 -1。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-get-terrain-color"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-get-terrain-color" names="class_tileset_method_get_terrain_color"><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>get_terrain_color</strong>(terrain_set: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, terrain_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tileset-method-get-terrain-color"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回地形的颜色。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-get-terrain-name"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-get-terrain-name" names="class_tileset_method_get_terrain_name"><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>get_terrain_name</strong>(terrain_set: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, terrain_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tileset-method-get-terrain-name"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回地形的名称。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-get-terrain-set-mode"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-get-terrain-set-mode" names="class_tileset_method_get_terrain_set_mode"><reference internal="True" refid="enum-tileset-terrainmode"><inline classes="std std-ref">TerrainMode</inline></reference> <strong>get_terrain_set_mode</strong>(terrain_set: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tileset-method-get-terrain-set-mode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回地形集模式。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-get-terrain-sets-count"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-get-terrain-sets-count" names="class_tileset_method_get_terrain_sets_count"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_terrain_sets_count</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tileset-method-get-terrain-sets-count"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回地形集的数量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-get-terrains-count"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-get-terrains-count" names="class_tileset_method_get_terrains_count"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_terrains_count</strong>(terrain_set: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tileset-method-get-terrains-count"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回给定地形集中的地形数。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-has-alternative-level-tile-proxy"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-has-alternative-level-tile-proxy" names="class_tileset_method_has_alternative_level_tile_proxy"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>has_alternative_level_tile_proxy</strong>(source_from: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, coords_from: <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference>, alternative_from: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-tileset-method-has-alternative-level-tile-proxy"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回给定的标识符是否存在备选级别的代理。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-has-coords-level-tile-proxy"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-has-coords-level-tile-proxy" names="class_tileset_method_has_coords_level_tile_proxy"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>has_coords_level_tile_proxy</strong>(source_from: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, coords_from: <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference>) <reference internal="True" refid="class-tileset-method-has-coords-level-tile-proxy"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回给定的标识符是否存在坐标级别的代理。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-has-source"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-has-source" names="class_tileset_method_has_source"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>has_source</strong>(source_id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tileset-method-has-source"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回该 TileSet 中是否存在给定源 ID 的源。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-has-source-level-tile-proxy"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-has-source-level-tile-proxy" names="class_tileset_method_has_source_level_tile_proxy"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>has_source_level_tile_proxy</strong>(source_from: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-tileset-method-has-source-level-tile-proxy"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回给定的源 ID 是否存在源级别的代理。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-map-tile-proxy"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-map-tile-proxy" names="class_tileset_method_map_tile_proxy"><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference> <strong>map_tile_proxy</strong>(source_from: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, coords_from: <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference>, alternative_from: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tileset-method-map-tile-proxy"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>根据配置的代理，将提供的标识符映射到一组新的标识符。返回的是由源 ID、图集坐标 ID 和备选图块 ID 这三个元素构成的 Array。</paragraph>
            <paragraph>这个函数首先查找匹配的备选级代理，然后是坐标级代理，然后是源级代理。</paragraph>
            <paragraph>如果未找到与提供的标识符对应的代理，则返回与用作参数的值相同的值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-move-custom-data-layer"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-move-custom-data-layer" names="class_tileset_method_move_custom_data_layer"><abbreviation explanation="无返回值。">void</abbreviation> <strong>move_custom_data_layer</strong>(layer_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, to_position: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-tileset-method-move-custom-data-layer"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将索引为 <literal>layer_index</literal> 的自定义数据层移动到数组中给定的 <literal>to_position</literal> 位置。还会更新相应的图集图块。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-move-navigation-layer"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-move-navigation-layer" names="class_tileset_method_move_navigation_layer"><abbreviation explanation="无返回值。">void</abbreviation> <strong>move_navigation_layer</strong>(layer_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, to_position: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-tileset-method-move-navigation-layer"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将索引为 <literal>layer_index</literal> 的导航层移动到数组中给定的 <literal>to_position</literal> 位置。还会更新相应的图集图块。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-move-occlusion-layer"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-move-occlusion-layer" names="class_tileset_method_move_occlusion_layer"><abbreviation explanation="无返回值。">void</abbreviation> <strong>move_occlusion_layer</strong>(layer_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, to_position: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-tileset-method-move-occlusion-layer"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将索引为 <literal>layer_index</literal> 的遮挡层移动到数组中给定的 <literal>to_position</literal> 位置。还会更新相应的图集图块。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-move-physics-layer"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-move-physics-layer" names="class_tileset_method_move_physics_layer"><abbreviation explanation="无返回值。">void</abbreviation> <strong>move_physics_layer</strong>(layer_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, to_position: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-tileset-method-move-physics-layer"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将索引为 <literal>layer_index</literal> 的物理层移动到数组中给定的 <literal>to_position</literal> 位置。还会更新相应的图集图块。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-move-terrain"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-move-terrain" names="class_tileset_method_move_terrain"><abbreviation explanation="无返回值。">void</abbreviation> <strong>move_terrain</strong>(terrain_set: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, terrain_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, to_position: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-tileset-method-move-terrain"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将地形集 <literal>terrain_set</literal> 中索引为 <literal>terrain_index</literal> 的地形移动到数组中给定的 <literal>to_position</literal> 位置。还会更新相应的图集图块。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-move-terrain-set"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-move-terrain-set" names="class_tileset_method_move_terrain_set"><abbreviation explanation="无返回值。">void</abbreviation> <strong>move_terrain_set</strong>(terrain_set: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, to_position: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-tileset-method-move-terrain-set"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将索引为 <literal>terrain_set</literal> 的地形集移动到数组中给定的 <literal>to_position</literal> 位置。还会更新相应的图集图块。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-remove-alternative-level-tile-proxy"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-remove-alternative-level-tile-proxy" names="class_tileset_method_remove_alternative_level_tile_proxy"><abbreviation explanation="无返回值。">void</abbreviation> <strong>remove_alternative_level_tile_proxy</strong>(source_from: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, coords_from: <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference>, alternative_from: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-tileset-method-remove-alternative-level-tile-proxy"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>移除具有给定标识符的备选级别代理。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-remove-coords-level-tile-proxy"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-remove-coords-level-tile-proxy" names="class_tileset_method_remove_coords_level_tile_proxy"><abbreviation explanation="无返回值。">void</abbreviation> <strong>remove_coords_level_tile_proxy</strong>(source_from: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, coords_from: <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference>) <reference internal="True" refid="class-tileset-method-remove-coords-level-tile-proxy"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>移除具有给定标识符的坐标级别代理。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-remove-custom-data-layer"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-remove-custom-data-layer" names="class_tileset_method_remove_custom_data_layer"><abbreviation explanation="无返回值。">void</abbreviation> <strong>remove_custom_data_layer</strong>(layer_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-tileset-method-remove-custom-data-layer"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>移除索引为 <literal>layer_index</literal> 的自定义数据层。也会相应地更新图集中的图块。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-remove-navigation-layer"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-remove-navigation-layer" names="class_tileset_method_remove_navigation_layer"><abbreviation explanation="无返回值。">void</abbreviation> <strong>remove_navigation_layer</strong>(layer_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-tileset-method-remove-navigation-layer"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>移除索引为 <literal>layer_index</literal> 的导航层。也会相应地更新图集中的图块。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-remove-occlusion-layer"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-remove-occlusion-layer" names="class_tileset_method_remove_occlusion_layer"><abbreviation explanation="无返回值。">void</abbreviation> <strong>remove_occlusion_layer</strong>(layer_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-tileset-method-remove-occlusion-layer"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>移除索引为 <literal>layer_index</literal> 的遮挡层。也会相应地更新图集中的图块。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-remove-pattern"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-remove-pattern" names="class_tileset_method_remove_pattern"><abbreviation explanation="无返回值。">void</abbreviation> <strong>remove_pattern</strong>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-tileset-method-remove-pattern"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>移除给定索引处的 <reference internal="True" refuri="class_tilemappattern#class-tilemappattern"><inline classes="std std-ref">TileMapPattern</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-remove-physics-layer"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-remove-physics-layer" names="class_tileset_method_remove_physics_layer"><abbreviation explanation="无返回值。">void</abbreviation> <strong>remove_physics_layer</strong>(layer_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-tileset-method-remove-physics-layer"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>移除索引为 <literal>layer_index</literal> 的物理层。也会更新图集中的相应图块。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-remove-source"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-remove-source" names="class_tileset_method_remove_source"><abbreviation explanation="无返回值。">void</abbreviation> <strong>remove_source</strong>(source_id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-tileset-method-remove-source"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>移除具有给定源 ID 的源。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-remove-source-level-tile-proxy"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-remove-source-level-tile-proxy" names="class_tileset_method_remove_source_level_tile_proxy"><abbreviation explanation="无返回值。">void</abbreviation> <strong>remove_source_level_tile_proxy</strong>(source_from: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-tileset-method-remove-source-level-tile-proxy"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>移除源级别的图块代理。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-remove-terrain"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-remove-terrain" names="class_tileset_method_remove_terrain"><abbreviation explanation="无返回值。">void</abbreviation> <strong>remove_terrain</strong>(terrain_set: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, terrain_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-tileset-method-remove-terrain"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>移除给定地形集 <literal>terrain_set</literal> 中索引为 <literal>terrain_index</literal> 的地形。也会相应地更新图集中的图块。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-remove-terrain-set"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-remove-terrain-set" names="class_tileset_method_remove_terrain_set"><abbreviation explanation="无返回值。">void</abbreviation> <strong>remove_terrain_set</strong>(terrain_set: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-tileset-method-remove-terrain-set"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>移除索引为 <literal>terrain_set</literal> 的地形集。也会相应地更新图集中的图块。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-set-alternative-level-tile-proxy"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-set-alternative-level-tile-proxy" names="class_tileset_method_set_alternative_level_tile_proxy"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_alternative_level_tile_proxy</strong>(source_from: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, coords_from: <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference>, alternative_from: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, source_to: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, coords_to: <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference>, alternative_to: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-tileset-method-set-alternative-level-tile-proxy"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>为给定的标识符创建备选级代理。代理会将一组图块标识符映射到另一组标识符。</paragraph>
            <paragraph>可以用来替换使用此 TileSet 的所有 TileMap 中的某个图块，因为 TileMap 节点将在目标图块可用时找到并使用代理的目标图块。</paragraph>
            <paragraph>可以使用编辑器自动替换 TileMap 节点中的代理图块。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-set-coords-level-tile-proxy"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-set-coords-level-tile-proxy" names="class_tileset_method_set_coords_level_tile_proxy"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_coords_level_tile_proxy</strong>(p_source_from: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, coords_from: <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference>, source_to: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, coords_to: <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference>) <reference internal="True" refid="class-tileset-method-set-coords-level-tile-proxy"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>为给定的标识符创建坐标级代理。代理会将一组图块标识符映射到另一组标识符。使用坐标级代理时，备选图块 ID 保持不变。</paragraph>
            <paragraph>可以用来替换使用此 TileSet 的所有 TileMap 中的某个图块，因为 TileMap 节点将在目标图块可用时找到并使用代理的目标图块。</paragraph>
            <paragraph>可以使用编辑器自动替换 TileMap 节点中的代理图块。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-set-custom-data-layer-name"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-set-custom-data-layer-name" names="class_tileset_method_set_custom_data_layer_name"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_custom_data_layer_name</strong>(layer_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, layer_name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <reference internal="True" refid="class-tileset-method-set-custom-data-layer-name"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置由给定索引标识的自定义数据层的名称。名称是层的标识符，因此如果名称已被使用就会失败并报错。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-set-custom-data-layer-type"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-set-custom-data-layer-type" names="class_tileset_method_set_custom_data_layer_type"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_custom_data_layer_type</strong>(layer_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, layer_type: <reference internal="True" refuri="class_@globalscope#enum-globalscope-variant-type"><inline classes="std std-ref">Variant.Type</inline></reference>) <reference internal="True" refid="class-tileset-method-set-custom-data-layer-type"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置自定义数据层的类型，该自定义数据层由索引表示。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-set-navigation-layer-layer-value"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-set-navigation-layer-layer-value" names="class_tileset_method_set_navigation_layer_layer_value"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_navigation_layer_layer_value</strong>(layer_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, layer_number: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <reference internal="True" refid="class-tileset-method-set-navigation-layer-layer-value"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>根据 <literal>value</literal>，启用或禁用 TileSet 导航数据层中指定的导航层，导航数据层由给定的 <literal>layer_index</literal> 标识，给定的 <literal>layer_number</literal> 应在 1 和 32 之间。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-set-navigation-layer-layers"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-set-navigation-layer-layers" names="class_tileset_method_set_navigation_layer_layers"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_navigation_layer_layers</strong>(layer_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, layers: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-tileset-method-set-navigation-layer-layers"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置给定 TileSet 导航层中导航区域的导航层（导航服务器中使用）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-set-occlusion-layer-light-mask"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-set-occlusion-layer-light-mask" names="class_tileset_method_set_occlusion_layer_light_mask"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_occlusion_layer_light_mask</strong>(layer_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, light_mask: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-tileset-method-set-occlusion-layer-light-mask"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置给定 TileSet 遮挡层中遮挡器的遮挡层（渲染服务器中使用）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-set-occlusion-layer-sdf-collision"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-set-occlusion-layer-sdf-collision" names="class_tileset_method_set_occlusion_layer_sdf_collision"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_occlusion_layer_sdf_collision</strong>(layer_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, sdf_collision: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <reference internal="True" refid="class-tileset-method-set-occlusion-layer-sdf-collision"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>启用或禁用给定 TileSet 遮挡层中遮挡器的 SDF 碰撞。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-set-physics-layer-collision-layer"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-set-physics-layer-collision-layer" names="class_tileset_method_set_physics_layer_collision_layer"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_physics_layer_collision_layer</strong>(layer_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, layer: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-tileset-method-set-physics-layer-collision-layer"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置给定 TileSet 物理层中物体的物理层（物理服务器中使用）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-set-physics-layer-collision-mask"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-set-physics-layer-collision-mask" names="class_tileset_method_set_physics_layer_collision_mask"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_physics_layer_collision_mask</strong>(layer_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, mask: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-tileset-method-set-physics-layer-collision-mask"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置给定 TileSet 物理层中物体的物理层（物理服务器中使用）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-set-physics-layer-physics-material"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-set-physics-layer-physics-material" names="class_tileset_method_set_physics_layer_physics_material"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_physics_layer_physics_material</strong>(layer_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, physics_material: <reference internal="True" refuri="class_physicsmaterial#class-physicsmaterial"><inline classes="std std-ref">PhysicsMaterial</inline></reference>) <reference internal="True" refid="class-tileset-method-set-physics-layer-physics-material"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置给定 TileSet 物理层中物体的物理材质。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-set-source-id"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-set-source-id" names="class_tileset_method_set_source_id"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_source_id</strong>(source_id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, new_source_id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-tileset-method-set-source-id"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>更改源的 ID。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-set-source-level-tile-proxy"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-set-source-level-tile-proxy" names="class_tileset_method_set_source_level_tile_proxy"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_source_level_tile_proxy</strong>(source_from: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, source_to: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-tileset-method-set-source-level-tile-proxy"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>为给定的源 ID 创建源级代理。代理会将一组图块标识符映射到另一组标识符。使用源级代理时，图集坐标 ID 和备选图块 ID 均保持不变。</paragraph>
            <paragraph>可以用来替换使用此 TileSet 的所有 TileMap 中的某个源，因为 TileMap 节点将在目标源可用时找到并使用代理的目标源。</paragraph>
            <paragraph>可以使用编辑器自动替换 TileMap 节点中的代理图块。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-set-terrain-color"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-set-terrain-color" names="class_tileset_method_set_terrain_color"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_terrain_color</strong>(terrain_set: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, terrain_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, color: <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference>) <reference internal="True" refid="class-tileset-method-set-terrain-color"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置地形的颜色。该颜色用于在 TileSet 编辑器中区分不同的地形。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-set-terrain-name"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-set-terrain-name" names="class_tileset_method_set_terrain_name"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_terrain_name</strong>(terrain_set: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, terrain_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <reference internal="True" refid="class-tileset-method-set-terrain-name"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置地形的名称。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tileset-method-set-terrain-set-mode"></target>
            <paragraph classes="classref-method" ids="class-tileset-method-set-terrain-set-mode" names="class_tileset_method_set_terrain_set_mode"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_terrain_set_mode</strong>(terrain_set: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, mode: <reference internal="True" refid="enum-tileset-terrainmode"><inline classes="std std-ref">TerrainMode</inline></reference>) <reference internal="True" refid="class-tileset-method-set-terrain-set-mode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置地形模式。每种模式决定了图块形状的哪一个位被用来匹配相邻图块的地形。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

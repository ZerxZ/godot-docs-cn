<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_animationnodeblendspace2d.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/AnimationNodeBlendSpace2D.xml.</comment>
    <target refid="class-animationnodeblendspace2d"></target>
    <section ids="animationnodeblendspace2d class-animationnodeblendspace2d" names="animationnodeblendspace2d class_animationnodeblendspace2d">
        <title>AnimationNodeBlendSpace2D</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_animationrootnode#class-animationrootnode"><inline classes="std std-ref">AnimationRootNode</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_animationnode#class-animationnode"><inline classes="std std-ref">AnimationNode</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>一组放置在 2D 坐标上的 <reference internal="True" refuri="class_animationrootnode#class-animationrootnode"><inline classes="std std-ref">AnimationRootNode</inline></reference>，在三个相邻节点之间交叉淡化。被 <reference internal="True" refuri="class_animationtree#class-animationtree"><inline classes="std std-ref">AnimationTree</inline></reference> 使用。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph><reference internal="True" refuri="class_animationnodeblendtree#class-animationnodeblendtree"><inline classes="std std-ref">AnimationNodeBlendTree</inline></reference> 使用的资源。</paragraph>
            <paragraph><reference internal="True" refuri="class_animationnodeblendspace1d#class-animationnodeblendspace1d"><inline classes="std std-ref">AnimationNodeBlendSpace1D</inline></reference> 代表放置 <reference internal="True" refuri="class_animationrootnode#class-animationrootnode"><inline classes="std std-ref">AnimationRootNode</inline></reference> 的虚拟 2D 空间。输出的是使用 <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> 权重对相邻的三个动画进行线性混合的结果。此处的“相邻”指的是构成包含当前值的三角形的三个 <reference internal="True" refuri="class_animationrootnode#class-animationrootnode"><inline classes="std std-ref">AnimationRootNode</inline></reference>。</paragraph>
            <paragraph>你可以使用 <reference internal="True" refid="class-animationnodeblendspace2d-method-add-blend-point"><inline classes="std std-ref">add_blend_point</inline></reference> 向混合空间中添加顶点，将 <reference internal="True" refid="class-animationnodeblendspace2d-property-auto-triangles"><inline classes="std std-ref">auto_triangles</inline></reference> 设为 <literal>true</literal> 可以将其自动三角形化。否则，请使用 <reference internal="True" refid="class-animationnodeblendspace2d-method-add-triangle"><inline classes="std std-ref">add_triangle</inline></reference> 和 <reference internal="True" refid="class-animationnodeblendspace2d-method-remove-triangle"><inline classes="std std-ref">remove_triangle</inline></reference> 手动对混合空间进行三角形化。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference internal="True" refuri="../tutorials/animation/animation_tree"><inline classes="doc">使用 AnimationTree</inline></reference></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference name="第三人称射击（TPS）演示" refuri="https://godotengine.org/asset-library/asset/2710">第三人称射击（TPS）演示</reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="60"></colspec>
                    <colspec colwidth="80"></colspec>
                    <colspec colwidth="23"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-animationnodeblendspace2d-property-auto-triangles"><inline classes="std std-ref">auto_triangles</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-animationnodeblendspace2d-blendmode"><inline classes="std std-ref">BlendMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-animationnodeblendspace2d-property-blend-mode"><inline classes="std std-ref">blend_mode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-animationnodeblendspace2d-property-max-space"><inline classes="std std-ref">max_space</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Vector2(1, 1)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-animationnodeblendspace2d-property-min-space"><inline classes="std std-ref">min_space</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Vector2(-1, -1)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-animationnodeblendspace2d-property-snap"><inline classes="std std-ref">snap</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Vector2(0.1, 0.1)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-animationnodeblendspace2d-property-sync"><inline classes="std std-ref">sync</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-animationnodeblendspace2d-property-x-label"><inline classes="std std-ref">x_label</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>"x"</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-animationnodeblendspace2d-property-y-label"><inline classes="std std-ref">y_label</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>"y"</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id4" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="51"></colspec>
                    <colspec colwidth="220"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-animationnodeblendspace2d-method-add-blend-point"><inline classes="std std-ref">add_blend_point</inline></reference>(node: <reference internal="True" refuri="class_animationrootnode#class-animationrootnode"><inline classes="std std-ref">AnimationRootNode</inline></reference>, pos: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>, at_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> = -1)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-animationnodeblendspace2d-method-add-triangle"><inline classes="std std-ref">add_triangle</inline></reference>(x: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, y: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, z: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, at_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> = -1)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-animationnodeblendspace2d-method-get-blend-point-count"><inline classes="std std-ref">get_blend_point_count</inline></reference>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_animationrootnode#class-animationrootnode"><inline classes="std std-ref">AnimationRootNode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-animationnodeblendspace2d-method-get-blend-point-node"><inline classes="std std-ref">get_blend_point_node</inline></reference>(point: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-animationnodeblendspace2d-method-get-blend-point-position"><inline classes="std std-ref">get_blend_point_position</inline></reference>(point: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-animationnodeblendspace2d-method-get-triangle-count"><inline classes="std std-ref">get_triangle_count</inline></reference>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-animationnodeblendspace2d-method-get-triangle-point"><inline classes="std std-ref">get_triangle_point</inline></reference>(triangle: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, point: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-animationnodeblendspace2d-method-remove-blend-point"><inline classes="std std-ref">remove_blend_point</inline></reference>(point: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-animationnodeblendspace2d-method-remove-triangle"><inline classes="std std-ref">remove_triangle</inline></reference>(triangle: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-animationnodeblendspace2d-method-set-blend-point-node"><inline classes="std std-ref">set_blend_point_node</inline></reference>(point: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, node: <reference internal="True" refuri="class_animationrootnode#class-animationrootnode"><inline classes="std std-ref">AnimationRootNode</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-animationnodeblendspace2d-method-set-blend-point-position"><inline classes="std std-ref">set_blend_point_position</inline></reference>(point: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, pos: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>)</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="信号">
            <title>信号</title>
            <target refid="class-animationnodeblendspace2d-signal-triangles-updated"></target>
            <paragraph classes="classref-signal" ids="class-animationnodeblendspace2d-signal-triangles-updated" names="class_animationnodeblendspace2d_signal_triangles_updated"><strong>triangles_updated</strong>() <reference internal="True" refid="class-animationnodeblendspace2d-signal-triangles-updated"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>每当创建、移除混合空间的三角形，或当其中一个顶点改变位置时发出。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="枚举">
            <title>枚举</title>
            <target refid="enum-animationnodeblendspace2d-blendmode"></target>
            <paragraph classes="classref-enumeration" ids="enum-animationnodeblendspace2d-blendmode" names="enum_animationnodeblendspace2d_blendmode">enum <strong>BlendMode</strong>: <reference internal="True" refid="enum-animationnodeblendspace2d-blendmode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-animationnodeblendspace2d-constant-blend-mode-interpolated"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-animationnodeblendspace2d-constant-blend-mode-interpolated" names="class_animationnodeblendspace2d_constant_blend_mode_interpolated"><reference internal="True" refid="enum-animationnodeblendspace2d-blendmode"><inline classes="std std-ref">BlendMode</inline></reference> <strong>BLEND_MODE_INTERPOLATED</strong> = <literal>0</literal></paragraph>
            <paragraph>动画之间的插值是线性的。</paragraph>
            <target refid="class-animationnodeblendspace2d-constant-blend-mode-discrete"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-animationnodeblendspace2d-constant-blend-mode-discrete" names="class_animationnodeblendspace2d_constant_blend_mode_discrete"><reference internal="True" refid="enum-animationnodeblendspace2d-blendmode"><inline classes="std std-ref">BlendMode</inline></reference> <strong>BLEND_MODE_DISCRETE</strong> = <literal>1</literal></paragraph>
            <paragraph>混合空间播放混合位置最接近的动画节点的动画。可用于逐帧的 2D 动画。</paragraph>
            <target refid="class-animationnodeblendspace2d-constant-blend-mode-discrete-carry"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-animationnodeblendspace2d-constant-blend-mode-discrete-carry" names="class_animationnodeblendspace2d_constant_blend_mode_discrete_carry"><reference internal="True" refid="enum-animationnodeblendspace2d-blendmode"><inline classes="std std-ref">BlendMode</inline></reference> <strong>BLEND_MODE_DISCRETE_CARRY</strong> = <literal>2</literal></paragraph>
            <paragraph>类似于 <reference internal="True" refid="class-animationnodeblendspace2d-constant-blend-mode-discrete"><inline classes="std std-ref">BLEND_MODE_DISCRETE</inline></reference>，但在最后一个动画的播放位置开始新的动画。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id7" names="属性说明">
            <title>属性说明</title>
            <target refid="class-animationnodeblendspace2d-property-auto-triangles"></target>
            <paragraph classes="classref-property" ids="class-animationnodeblendspace2d-property-auto-triangles" names="class_animationnodeblendspace2d_property_auto_triangles"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>auto_triangles</strong> = <literal>true</literal> <reference internal="True" refid="class-animationnodeblendspace2d-property-auto-triangles"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_auto_triangles</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_auto_triangles</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，混合空间会自动进行三角测量。每次使用 <reference internal="True" refid="class-animationnodeblendspace2d-method-add-blend-point"><inline classes="std std-ref">add_blend_point</inline></reference> 和 <reference internal="True" refid="class-animationnodeblendspace2d-method-remove-blend-point"><inline classes="std std-ref">remove_blend_point</inline></reference> 添加或移除点时，网格都会更新。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-animationnodeblendspace2d-property-blend-mode"></target>
            <paragraph classes="classref-property" ids="class-animationnodeblendspace2d-property-blend-mode" names="class_animationnodeblendspace2d_property_blend_mode"><reference internal="True" refid="enum-animationnodeblendspace2d-blendmode"><inline classes="std std-ref">BlendMode</inline></reference> <strong>blend_mode</strong> = <literal>0</literal> <reference internal="True" refid="class-animationnodeblendspace2d-property-blend-mode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_blend_mode</strong>(value: <reference internal="True" refid="enum-animationnodeblendspace2d-blendmode"><inline classes="std std-ref">BlendMode</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-animationnodeblendspace2d-blendmode"><inline classes="std std-ref">BlendMode</inline></reference> <strong>get_blend_mode</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>控制动画之间的插值。见 <reference internal="True" refid="enum-animationnodeblendspace2d-blendmode"><inline classes="std std-ref">BlendMode</inline></reference> 常量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-animationnodeblendspace2d-property-max-space"></target>
            <paragraph classes="classref-property" ids="class-animationnodeblendspace2d-property-max-space" names="class_animationnodeblendspace2d_property_max_space"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>max_space</strong> = <literal>Vector2(1, 1)</literal> <reference internal="True" refid="class-animationnodeblendspace2d-property-max-space"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_max_space</strong>(value: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>get_max_space</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>用于点的位置的混合空间的 X 轴和 Y 轴的上限。请参阅 <reference internal="True" refid="class-animationnodeblendspace2d-method-add-blend-point"><inline classes="std std-ref">add_blend_point</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-animationnodeblendspace2d-property-min-space"></target>
            <paragraph classes="classref-property" ids="class-animationnodeblendspace2d-property-min-space" names="class_animationnodeblendspace2d_property_min_space"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>min_space</strong> = <literal>Vector2(-1, -1)</literal> <reference internal="True" refid="class-animationnodeblendspace2d-property-min-space"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_min_space</strong>(value: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>get_min_space</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>用于点的位置的混合空间的 X 轴和 Y 轴的下限。请参阅 <reference internal="True" refid="class-animationnodeblendspace2d-method-add-blend-point"><inline classes="std std-ref">add_blend_point</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-animationnodeblendspace2d-property-snap"></target>
            <paragraph classes="classref-property" ids="class-animationnodeblendspace2d-property-snap" names="class_animationnodeblendspace2d_property_snap"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>snap</strong> = <literal>Vector2(0.1, 0.1)</literal> <reference internal="True" refid="class-animationnodeblendspace2d-property-snap"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_snap</strong>(value: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>get_snap</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>移动点时要吸附到的位置增量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-animationnodeblendspace2d-property-sync"></target>
            <paragraph classes="classref-property" ids="class-animationnodeblendspace2d-property-sync" names="class_animationnodeblendspace2d_property_sync"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>sync</strong> = <literal>false</literal> <reference internal="True" refid="class-animationnodeblendspace2d-property-sync"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_use_sync</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_using_sync</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>false</literal>，则当混合值为 <literal>0</literal> 时，停止混合动画的帧。</paragraph>
            <paragraph>如果为 <literal>true</literal>，则强制混合动画以前进帧。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-animationnodeblendspace2d-property-x-label"></target>
            <paragraph classes="classref-property" ids="class-animationnodeblendspace2d-property-x-label" names="class_animationnodeblendspace2d_property_x_label"><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>x_label</strong> = <literal>"x"</literal> <reference internal="True" refid="class-animationnodeblendspace2d-property-x-label"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_x_label</strong>(value: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>get_x_label</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>混合空间 X 轴的名称。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-animationnodeblendspace2d-property-y-label"></target>
            <paragraph classes="classref-property" ids="class-animationnodeblendspace2d-property-y-label" names="class_animationnodeblendspace2d_property_y_label"><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>y_label</strong> = <literal>"y"</literal> <reference internal="True" refid="class-animationnodeblendspace2d-property-y-label"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_y_label</strong>(value: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>get_y_label</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>混合空间 Y 轴的名称。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id8" names="方法说明">
            <title>方法说明</title>
            <target refid="class-animationnodeblendspace2d-method-add-blend-point"></target>
            <paragraph classes="classref-method" ids="class-animationnodeblendspace2d-method-add-blend-point" names="class_animationnodeblendspace2d_method_add_blend_point"><abbreviation explanation="无返回值。">void</abbreviation> <strong>add_blend_point</strong>(node: <reference internal="True" refuri="class_animationrootnode#class-animationrootnode"><inline classes="std std-ref">AnimationRootNode</inline></reference>, pos: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>, at_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> = -1) <reference internal="True" refid="class-animationnodeblendspace2d-method-add-blend-point"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>在 <literal>pos</literal> 设定的位置添加一个代表 <literal>node</literal> 的新点。你可以使用 <literal>at_index</literal> 参数将其插入到特定的索引中。如果使用 <literal>at_index</literal> 的默认值，这个点会被插入到混合点数组的末尾。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-animationnodeblendspace2d-method-add-triangle"></target>
            <paragraph classes="classref-method" ids="class-animationnodeblendspace2d-method-add-triangle" names="class_animationnodeblendspace2d_method_add_triangle"><abbreviation explanation="无返回值。">void</abbreviation> <strong>add_triangle</strong>(x: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, y: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, z: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, at_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> = -1) <reference internal="True" refid="class-animationnodeblendspace2d-method-add-triangle"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>使用三个点 <literal>x</literal>、<literal>y</literal> 和 <literal>z</literal> 创建一个新三角形。三角形可以重叠。可以使用 <literal>at_index</literal> 参数在特定索引处插入三角形。如果使用 <literal>at_index</literal> 的默认值，该点将插入到混合点数组的末尾。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-animationnodeblendspace2d-method-get-blend-point-count"></target>
            <paragraph classes="classref-method" ids="class-animationnodeblendspace2d-method-get-blend-point-count" names="class_animationnodeblendspace2d_method_get_blend_point_count"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_blend_point_count</strong>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-animationnodeblendspace2d-method-get-blend-point-count"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回混合空间中的点的数量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-animationnodeblendspace2d-method-get-blend-point-node"></target>
            <paragraph classes="classref-method" ids="class-animationnodeblendspace2d-method-get-blend-point-node" names="class_animationnodeblendspace2d_method_get_blend_point_node"><reference internal="True" refuri="class_animationrootnode#class-animationrootnode"><inline classes="std std-ref">AnimationRootNode</inline></reference> <strong>get_blend_point_node</strong>(point: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-animationnodeblendspace2d-method-get-blend-point-node"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回索引 <literal>point</literal> 处的点所引用的 <reference internal="True" refuri="class_animationrootnode#class-animationrootnode"><inline classes="std std-ref">AnimationRootNode</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-animationnodeblendspace2d-method-get-blend-point-position"></target>
            <paragraph classes="classref-method" ids="class-animationnodeblendspace2d-method-get-blend-point-position" names="class_animationnodeblendspace2d_method_get_blend_point_position"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>get_blend_point_position</strong>(point: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-animationnodeblendspace2d-method-get-blend-point-position"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回索引 <literal>point</literal> 处的点的位置。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-animationnodeblendspace2d-method-get-triangle-count"></target>
            <paragraph classes="classref-method" ids="class-animationnodeblendspace2d-method-get-triangle-count" names="class_animationnodeblendspace2d_method_get_triangle_count"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_triangle_count</strong>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-animationnodeblendspace2d-method-get-triangle-count"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回混合空间中三角形的数量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-animationnodeblendspace2d-method-get-triangle-point"></target>
            <paragraph classes="classref-method" ids="class-animationnodeblendspace2d-method-get-triangle-point" names="class_animationnodeblendspace2d_method_get_triangle_point"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_triangle_point</strong>(triangle: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, point: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-animationnodeblendspace2d-method-get-triangle-point"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回索引 <literal>point</literal> 处的点在索引 <literal>triangle</literal> 的三角形中的位置。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-animationnodeblendspace2d-method-remove-blend-point"></target>
            <paragraph classes="classref-method" ids="class-animationnodeblendspace2d-method-remove-blend-point" names="class_animationnodeblendspace2d_method_remove_blend_point"><abbreviation explanation="无返回值。">void</abbreviation> <strong>remove_blend_point</strong>(point: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-animationnodeblendspace2d-method-remove-blend-point"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>从混合空间中移除索引 <literal>point</literal> 处的点。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-animationnodeblendspace2d-method-remove-triangle"></target>
            <paragraph classes="classref-method" ids="class-animationnodeblendspace2d-method-remove-triangle" names="class_animationnodeblendspace2d_method_remove_triangle"><abbreviation explanation="无返回值。">void</abbreviation> <strong>remove_triangle</strong>(triangle: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-animationnodeblendspace2d-method-remove-triangle"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>从混合空间中移除索引 <literal>triangle</literal> 处的三角形。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-animationnodeblendspace2d-method-set-blend-point-node"></target>
            <paragraph classes="classref-method" ids="class-animationnodeblendspace2d-method-set-blend-point-node" names="class_animationnodeblendspace2d_method_set_blend_point_node"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_blend_point_node</strong>(point: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, node: <reference internal="True" refuri="class_animationrootnode#class-animationrootnode"><inline classes="std std-ref">AnimationRootNode</inline></reference>) <reference internal="True" refid="class-animationnodeblendspace2d-method-set-blend-point-node"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>更改索引 <literal>point</literal> 处的点所引用的 <reference internal="True" refuri="class_animationnode#class-animationnode"><inline classes="std std-ref">AnimationNode</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-animationnodeblendspace2d-method-set-blend-point-position"></target>
            <paragraph classes="classref-method" ids="class-animationnodeblendspace2d-method-set-blend-point-position" names="class_animationnodeblendspace2d_method_set_blend_point_position"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_blend_point_position</strong>(point: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, pos: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <reference internal="True" refid="class-animationnodeblendspace2d-method-set-blend-point-position"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>更新混合轴上索引 <literal>point</literal> 处的点的位置。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效运算符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列位标志构成位掩码的整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_skinreference.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/SkinReference.xml.</comment>
    <target refid="class-skinreference"></target>
    <section ids="skinreference class-skinreference" names="skinreference class_skinreference">
        <title>SkinReference</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>骨架 RID 的引用计数占位对象，<reference internal="True" refuri="class_renderingserver#class-renderingserver"><inline classes="std std-ref">RenderingServer</inline></reference> 中会使用该 RID。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>包含来自 <reference internal="True" refuri="class_skin#class-skin"><inline classes="std std-ref">Skin</inline></reference> （在特定 <reference internal="True" refuri="class_meshinstance3d#class-meshinstance3d"><inline classes="std std-ref">MeshInstance3D</inline></reference> 上下文中使用）的映射的内部对象，用于引用 RenderingServer 中的骨架 <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>。</paragraph>
            <paragraph>另请参阅 <reference internal="True" refuri="class_meshinstance3d#class-meshinstance3d-method-get-skin-reference"><inline classes="std std-ref">MeshInstance3D.get_skin_reference</inline></reference> 和 <reference internal="True" refuri="class_renderingserver#class-renderingserver-method-instance-attach-skeleton"><inline classes="std std-ref">RenderingServer.instance_attach_skeleton</inline></reference>。</paragraph>
            <paragraph>请注意，尽管命名相似，但 <reference internal="True" refuri="class_renderingserver#class-renderingserver"><inline classes="std std-ref">RenderingServer</inline></reference> 中使用的骨架 RID 与 <reference internal="True" refuri="class_skeleton3d#class-skeleton3d"><inline classes="std std-ref">Skeleton3D</inline></reference> 节点没有直接的一一对应关系。</paragraph>
            <paragraph>特别是，没有 <reference internal="True" refuri="class_meshinstance3d#class-meshinstance3d"><inline classes="std std-ref">MeshInstance3D</inline></reference> 子节点的 <reference internal="True" refuri="class_skeleton3d#class-skeleton3d"><inline classes="std std-ref">Skeleton3D</inline></reference> 节点可能对 <reference internal="True" refuri="class_renderingserver#class-renderingserver"><inline classes="std std-ref">RenderingServer</inline></reference> 来说是未知的。</paragraph>
            <paragraph>另一方面，具有多个 <reference internal="True" refuri="class_meshinstance3d#class-meshinstance3d"><inline classes="std std-ref">MeshInstance3D</inline></reference> 节点（每个节点都有不同的 <reference internal="True" refuri="class_meshinstance3d#class-meshinstance3d-property-skin"><inline classes="std std-ref">MeshInstance3D.skin</inline></reference> 对象）的 <reference internal="True" refuri="class_skeleton3d#class-skeleton3d"><inline classes="std std-ref">Skeleton3D</inline></reference> 可能具有多个 SkinReference 实例（因此，有多个骨架 <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>）。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="25"></colspec>
                    <colspec colwidth="76"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skinreference-method-get-skeleton"><inline classes="std std-ref">get_skeleton</inline></reference>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_skin#class-skin"><inline classes="std std-ref">Skin</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skinreference-method-get-skin"><inline classes="std std-ref">get_skin</inline></reference>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="方法说明">
            <title>方法说明</title>
            <target refid="class-skinreference-method-get-skeleton"></target>
            <paragraph classes="classref-method" ids="class-skinreference-method-get-skeleton" names="class_skinreference_method_get_skeleton"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>get_skeleton</strong>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-skinreference-method-get-skeleton"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回该 SkinReference 所拥有的 <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>，如 <reference internal="True" refuri="class_renderingserver#class-renderingserver-method-skeleton-create"><inline classes="std std-ref">RenderingServer.skeleton_create</inline></reference> 返回的那样。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skinreference-method-get-skin"></target>
            <paragraph classes="classref-method" ids="class-skinreference-method-get-skin" names="class_skinreference_method_get_skin"><reference internal="True" refuri="class_skin#class-skin"><inline classes="std std-ref">Skin</inline></reference> <strong>get_skin</strong>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-skinreference-method-get-skin"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回连接到该 SkinReference 的 <reference internal="True" refuri="class_skin#class-skin"><inline classes="std std-ref">Skin</inline></reference>。如果 <reference internal="True" refuri="class_meshinstance3d#class-meshinstance3d"><inline classes="std std-ref">MeshInstance3D</inline></reference> 未分配 <reference internal="True" refuri="class_meshinstance3d#class-meshinstance3d-property-skin"><inline classes="std std-ref">MeshInstance3D.skin</inline></reference>，则这将引用该 <reference internal="True" refuri="class_meshinstance3d#class-meshinstance3d"><inline classes="std std-ref">MeshInstance3D</inline></reference> 拥有的内部默认 <reference internal="True" refuri="class_skin#class-skin"><inline classes="std std-ref">Skin</inline></reference>。</paragraph>
            <paragraph>请注意，如果单个 <reference internal="True" refuri="class_skin#class-skin"><inline classes="std std-ref">Skin</inline></reference> 由多个 <reference internal="True" refuri="class_skeleton3d#class-skeleton3d"><inline classes="std std-ref">Skeleton3D</inline></reference> 节点之间的网格共享，则它可能具有多个 <strong>SkinReference</strong>。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效运算符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列位标志构成位掩码的整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

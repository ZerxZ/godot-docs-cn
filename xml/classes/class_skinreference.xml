<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_skinreference.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/SkinReference.xml.</comment>
    <target refid="class-skinreference"></target>
    <section ids="skinreference class-skinreference" names="skinreference class_skinreference">
        <title>SkinReference</title>
        <paragraph><strong>ÁªßÊâøÔºö</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>A reference-counted holder object for a skeleton RID used in the <reference internal="True" refuri="class_renderingserver#class-renderingserver"><inline classes="std std-ref">RenderingServer</inline></reference>.</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="ÊèèËø∞">
            <title>ÊèèËø∞</title>
            <paragraph>An internal object containing a mapping from a <reference internal="True" refuri="class_skin#class-skin"><inline classes="std std-ref">Skin</inline></reference> used within the context of a particular <reference internal="True" refuri="class_meshinstance3d#class-meshinstance3d"><inline classes="std std-ref">MeshInstance3D</inline></reference> to refer to the skeleton's <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> in the RenderingServer.</paragraph>
            <paragraph>See also <reference internal="True" refuri="class_meshinstance3d#class-meshinstance3d-method-get-skin-reference"><inline classes="std std-ref">MeshInstance3D.get_skin_reference</inline></reference> and <reference internal="True" refuri="class_renderingserver#class-renderingserver-method-instance-attach-skeleton"><inline classes="std std-ref">RenderingServer.instance_attach_skeleton</inline></reference>.</paragraph>
            <paragraph>Note that despite the similar naming, the skeleton RID used in the <reference internal="True" refuri="class_renderingserver#class-renderingserver"><inline classes="std std-ref">RenderingServer</inline></reference> does not have a direct one-to-one correspondence to a <reference internal="True" refuri="class_skeleton3d#class-skeleton3d"><inline classes="std std-ref">Skeleton3D</inline></reference> node.</paragraph>
            <paragraph>In particular, a <reference internal="True" refuri="class_skeleton3d#class-skeleton3d"><inline classes="std std-ref">Skeleton3D</inline></reference> node with no <reference internal="True" refuri="class_meshinstance3d#class-meshinstance3d"><inline classes="std std-ref">MeshInstance3D</inline></reference> children may be unknown to the <reference internal="True" refuri="class_renderingserver#class-renderingserver"><inline classes="std std-ref">RenderingServer</inline></reference>.</paragraph>
            <paragraph>On the other hand, a <reference internal="True" refuri="class_skeleton3d#class-skeleton3d"><inline classes="std std-ref">Skeleton3D</inline></reference> with multiple <reference internal="True" refuri="class_meshinstance3d#class-meshinstance3d"><inline classes="std std-ref">MeshInstance3D</inline></reference> nodes which each have different <reference internal="True" refuri="class_meshinstance3d#class-meshinstance3d-property-skin"><inline classes="std std-ref">MeshInstance3D.skin</inline></reference> objects may have multiple SkinReference instances (and hence, multiple skeleton <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>s).</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="ÊñπÊ≥ï">
            <title>ÊñπÊ≥ï</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="25"></colspec>
                    <colspec colwidth="76"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skinreference-method-get-skeleton"><inline classes="std std-ref">get_skeleton</inline></reference>() <abbreviation explanation="Êú¨ÊñπÊ≥ïÊ≤°ÊúâÂâØ‰ΩúÁî®Ôºå‰∏ç‰ºö‰øÆÊîπËØ•ÂÆû‰æãÁöÑ‰ªª‰ΩïÊàêÂëòÂèòÈáè„ÄÇ">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_skin#class-skin"><inline classes="std std-ref">Skin</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skinreference-method-get-skin"><inline classes="std std-ref">get_skin</inline></reference>() <abbreviation explanation="Êú¨ÊñπÊ≥ïÊ≤°ÊúâÂâØ‰ΩúÁî®Ôºå‰∏ç‰ºö‰øÆÊîπËØ•ÂÆû‰æãÁöÑ‰ªª‰ΩïÊàêÂëòÂèòÈáè„ÄÇ">const</abbreviation></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="ÊñπÊ≥ïËØ¥Êòé">
            <title>ÊñπÊ≥ïËØ¥Êòé</title>
            <target refid="class-skinreference-method-get-skeleton"></target>
            <paragraph classes="classref-method" ids="class-skinreference-method-get-skeleton" names="class_skinreference_method_get_skeleton"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>get_skeleton</strong>() <abbreviation explanation="Êú¨ÊñπÊ≥ïÊ≤°ÊúâÂâØ‰ΩúÁî®Ôºå‰∏ç‰ºö‰øÆÊîπËØ•ÂÆû‰æãÁöÑ‰ªª‰ΩïÊàêÂëòÂèòÈáè„ÄÇ">const</abbreviation> <reference internal="True" refid="class-skinreference-method-get-skeleton"><inline classes="std std-ref">üîó</inline></reference></paragraph>
            <paragraph>Returns the <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> owned by this SkinReference, as returned by <reference internal="True" refuri="class_renderingserver#class-renderingserver-method-skeleton-create"><inline classes="std std-ref">RenderingServer.skeleton_create</inline></reference>.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skinreference-method-get-skin"></target>
            <paragraph classes="classref-method" ids="class-skinreference-method-get-skin" names="class_skinreference_method_get_skin"><reference internal="True" refuri="class_skin#class-skin"><inline classes="std std-ref">Skin</inline></reference> <strong>get_skin</strong>() <abbreviation explanation="Êú¨ÊñπÊ≥ïÊ≤°ÊúâÂâØ‰ΩúÁî®Ôºå‰∏ç‰ºö‰øÆÊîπËØ•ÂÆû‰æãÁöÑ‰ªª‰ΩïÊàêÂëòÂèòÈáè„ÄÇ">const</abbreviation> <reference internal="True" refid="class-skinreference-method-get-skin"><inline classes="std std-ref">üîó</inline></reference></paragraph>
            <paragraph>Returns the <reference internal="True" refuri="class_skin#class-skin"><inline classes="std std-ref">Skin</inline></reference> connected to this SkinReference. In the case of <reference internal="True" refuri="class_meshinstance3d#class-meshinstance3d"><inline classes="std std-ref">MeshInstance3D</inline></reference> with no <reference internal="True" refuri="class_meshinstance3d#class-meshinstance3d-property-skin"><inline classes="std std-ref">MeshInstance3D.skin</inline></reference> assigned, this will reference an internal default <reference internal="True" refuri="class_skin#class-skin"><inline classes="std std-ref">Skin</inline></reference> owned by that <reference internal="True" refuri="class_meshinstance3d#class-meshinstance3d"><inline classes="std std-ref">MeshInstance3D</inline></reference>.</paragraph>
            <paragraph>Note that a single <reference internal="True" refuri="class_skin#class-skin"><inline classes="std std-ref">Skin</inline></reference> may have more than one <strong>SkinReference</strong> in the case that it is shared by meshes across multiple <reference internal="True" refuri="class_skeleton3d#class-skeleton3d"><inline classes="std std-ref">Skeleton3D</inline></reference> nodes.</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="Êú¨ÊñπÊ≥ïÈÄöÂ∏∏ÈúÄË¶ÅÁî®Êà∑Ë¶ÜÁõñÊâçËÉΩÁîüÊïà„ÄÇ">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="Êú¨ÊñπÊ≥ïÊ≤°ÊúâÂâØ‰ΩúÁî®Ôºå‰∏ç‰ºö‰øÆÊîπËØ•ÂÆû‰æãÁöÑ‰ªª‰ΩïÊàêÂëòÂèòÈáè„ÄÇ">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="Êú¨ÊñπÊ≥ïÈô§‰∫ÜËÉΩÊé•ÂèóÂú®Ê≠§Â§ÑÊèèËø∞ÁöÑÂèÇÊï∞Â§ñÔºåËøòËÉΩÂ§üÁªßÁª≠Êé•Âèó‰ªªÊÑèÊï∞ÈáèÁöÑÂèÇÊï∞„ÄÇ">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="Êú¨ÊñπÊ≥ïÁî®‰∫éÊûÑÈÄ†Êüê‰∏™Á±ªÂûã„ÄÇ">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="Ë∞ÉÁî®Êú¨ÊñπÊ≥ïÊó†ÈúÄÂÆû‰æãÔºåÂèØÁõ¥Êé•‰ΩøÁî®Á±ªÂêçËøõË°åË∞ÉÁî®„ÄÇ">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="Êú¨ÊñπÊ≥ïÊèèËø∞ÁöÑÊòØ‰ΩøÁî®Êú¨Á±ªÂûã‰Ωú‰∏∫Â∑¶Êìç‰ΩúÊï∞ÁöÑÊúâÊïàÊìç‰ΩúÁ¨¶„ÄÇ">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="Ëøô‰∏™ÂÄºÊòØÁî±‰∏ãÂàóÊ†áÂøóÊûÑÊàêÁöÑ‰ΩçÊé©Á†ÅÊï¥Êï∞„ÄÇ">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="Êó†ËøîÂõûÂÄº„ÄÇ">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

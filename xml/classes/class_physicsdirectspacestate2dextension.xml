<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_physicsdirectspacestate2dextension.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/PhysicsDirectSpaceState2DExtension.xml.</comment>
    <target refid="class-physicsdirectspacestate2dextension"></target>
    <section ids="physicsdirectspacestate2dextension class-physicsdirectspacestate2dextension" names="physicsdirectspacestate2dextension class_physicsdirectspacestate2dextension">
        <title>PhysicsDirectSpaceState2DExtension</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_physicsdirectspacestate2d#class-physicsdirectspacestate2d"><inline classes="std std-ref">PhysicsDirectSpaceState2D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>提供能够覆盖的虚方法，用于创建自定义的 <reference internal="True" refuri="class_physicsdirectspacestate2d#class-physicsdirectspacestate2d"><inline classes="std std-ref">PhysicsDirectSpaceState2D</inline></reference> 实现。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>这个类扩展自 <reference internal="True" refuri="class_physicsdirectspacestate2d#class-physicsdirectspacestate2d"><inline classes="std std-ref">PhysicsDirectSpaceState2D</inline></reference>，提供了额外可覆盖的虚方法。覆盖这些方法后，就会代替物理服务器的内部方法进行调用。</paragraph>
            <paragraph>旨在通过 GDExtension 创建自定义的 <reference internal="True" refuri="class_physicsdirectspacestate2d#class-physicsdirectspacestate2d"><inline classes="std std-ref">PhysicsDirectSpaceState2D</inline></reference> 实现使用。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="25"></colspec>
                    <colspec colwidth="481"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectspacestate2dextension-private-method-cast-motion"><inline classes="std std-ref">_cast_motion</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> shape_rid, <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference> transform, <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> motion, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> margin, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> collision_mask, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> collide_with_bodies, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> collide_with_areas, float* closest_safe, float* closest_unsafe <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectspacestate2dextension-private-method-collide-shape"><inline classes="std std-ref">_collide_shape</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> shape_rid, <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference> transform, <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> motion, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> margin, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> collision_mask, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> collide_with_bodies, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> collide_with_areas, void* results, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> max_results, int32_t* result_count <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectspacestate2dextension-private-method-intersect-point"><inline classes="std std-ref">_intersect_point</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> position, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> canvas_instance_id, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> collision_mask, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> collide_with_bodies, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> collide_with_areas, PhysicsServer2DExtensionShapeResult* results, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> max_results <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectspacestate2dextension-private-method-intersect-ray"><inline classes="std std-ref">_intersect_ray</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> from, <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> to, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> collision_mask, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> collide_with_bodies, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> collide_with_areas, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> hit_from_inside, PhysicsServer2DExtensionRayResult* result <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectspacestate2dextension-private-method-intersect-shape"><inline classes="std std-ref">_intersect_shape</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> shape_rid, <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference> transform, <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> motion, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> margin, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> collision_mask, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> collide_with_bodies, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> collide_with_areas, PhysicsServer2DExtensionShapeResult* result, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> max_results <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectspacestate2dextension-private-method-rest-info"><inline classes="std std-ref">_rest_info</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> shape_rid, <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference> transform, <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> motion, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> margin, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> collision_mask, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> collide_with_bodies, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> collide_with_areas, PhysicsServer2DExtensionShapeRestInfo* rest_info <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectspacestate2dextension-method-is-body-excluded-from-query"><inline classes="std std-ref">is_body_excluded_from_query</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="方法说明">
            <title>方法说明</title>
            <target refid="class-physicsdirectspacestate2dextension-private-method-cast-motion"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectspacestate2dextension-private-method-cast-motion" names="class_physicsdirectspacestate2dextension_private_method__cast_motion"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>_cast_motion</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> shape_rid, <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference> transform, <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> motion, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> margin, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> collision_mask, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> collide_with_bodies, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> collide_with_areas, float* closest_safe, float* closest_unsafe <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectspacestate2dextension-private-method-collide-shape"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectspacestate2dextension-private-method-collide-shape" names="class_physicsdirectspacestate2dextension_private_method__collide_shape"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>_collide_shape</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> shape_rid, <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference> transform, <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> motion, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> margin, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> collision_mask, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> collide_with_bodies, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> collide_with_areas, void* results, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> max_results, int32_t* result_count <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectspacestate2dextension-private-method-intersect-point"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectspacestate2dextension-private-method-intersect-point" names="class_physicsdirectspacestate2dextension_private_method__intersect_point"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>_intersect_point</strong> <strong>(</strong> <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> position, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> canvas_instance_id, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> collision_mask, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> collide_with_bodies, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> collide_with_areas, PhysicsServer2DExtensionShapeResult* results, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> max_results <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectspacestate2dextension-private-method-intersect-ray"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectspacestate2dextension-private-method-intersect-ray" names="class_physicsdirectspacestate2dextension_private_method__intersect_ray"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>_intersect_ray</strong> <strong>(</strong> <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> from, <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> to, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> collision_mask, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> collide_with_bodies, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> collide_with_areas, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> hit_from_inside, PhysicsServer2DExtensionRayResult* result <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectspacestate2dextension-private-method-intersect-shape"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectspacestate2dextension-private-method-intersect-shape" names="class_physicsdirectspacestate2dextension_private_method__intersect_shape"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>_intersect_shape</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> shape_rid, <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference> transform, <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> motion, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> margin, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> collision_mask, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> collide_with_bodies, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> collide_with_areas, PhysicsServer2DExtensionShapeResult* result, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> max_results <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectspacestate2dextension-private-method-rest-info"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectspacestate2dextension-private-method-rest-info" names="class_physicsdirectspacestate2dextension_private_method__rest_info"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>_rest_info</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> shape_rid, <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference> transform, <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> motion, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> margin, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> collision_mask, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> collide_with_bodies, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> collide_with_areas, PhysicsServer2DExtensionShapeRestInfo* rest_info <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectspacestate2dextension-method-is-body-excluded-from-query"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectspacestate2dextension-method-is-body-excluded-from-query" names="class_physicsdirectspacestate2dextension_method_is_body_excluded_from_query"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_body_excluded_from_query</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，所以可以直接使用类名调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

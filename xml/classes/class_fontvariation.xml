<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_fontvariation.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/FontVariation.xml.</comment>
    <target refid="class-fontvariation"></target>
    <section ids="fontvariation class-fontvariation" names="fontvariation class_fontvariation">
        <title>FontVariation</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_font#class-font"><inline classes="std std-ref">Font</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>字体的变体，提供额外的设置。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>提供 OpenType 变体，模拟的粗体/斜体，以及 OpenType 特性和额外间距等额外的字体设置。</paragraph>
            <paragraph>要使用模拟的粗体变体：</paragraph>
            <container classes="sphinx-tabs" type="tab-element">
                <div aria-label="Tabbed content" role="tablist">
                    <button aria-controls="panel-0-R0RTY3JpcHQ=" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-0-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tab" tabindex="0">GDScript</button>
                    <button aria-controls="panel-0-QyM=" aria-selected="false" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-0-QyM=" name="QyM=" role="tab" tabindex="-1">C#</button>
                </div>
                <div aria-labelledby="tab-0-R0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-0-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve">var fv = FontVariation.new()
fv.set_base_font(load("res://BarlowCondensed-Regular.ttf"))
fv.set_variation_embolden(1.2)
$Label.add_theme_font_override("font", fv)
$Label.add_theme_font_size_override("font_size", 64)</literal_block>
                </div>
                <div aria-labelledby="tab-0-QyM=" classes="sphinx-tabs-panel code-tab group-tab" hidden="true" ids="panel-0-QyM=" name="QyM=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="csharp" linenos="False" xml:space="preserve">var fv = new FontVariation();
fv.SetBaseFont(ResourceLoader.Load&lt;FontFile&gt;("res://BarlowCondensed-Regular.ttf"));
fv.SetVariationEmbolden(1.2);
GetNode("Label").AddThemeFontOverride("font", fv);
GetNode("Label").AddThemeFontSizeOverride("font_size", 64);</literal_block>
                </div>
            </container>
            <paragraph>要设置多个变体轴的坐标：</paragraph>
            <literal_block force="False" language="gdscript" linenos="False" xml:space="preserve">var fv = FontVariation.new();
var ts = TextServerManager.get_primary_interface()
fv.base_font = load("res://BarlowCondensed-Regular.ttf")
fv.variation_opentype = { ts.name_to_tag("wght"): 900, ts.name_to_tag("custom_hght"): 900 }</literal_block>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="39"></colspec>
                    <colspec colwidth="80"></colspec>
                    <colspec colwidth="35"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_font#class-font"><inline classes="std std-ref">Font</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-fontvariation-property-base-font"><inline classes="std std-ref">base_font</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-fontvariation-property-baseline-offset"><inline classes="std std-ref">baseline_offset</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-fontvariation-property-opentype-features"><inline classes="std std-ref">opentype_features</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>{}</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-fontvariation-property-spacing-bottom"><inline classes="std std-ref">spacing_bottom</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-fontvariation-property-spacing-glyph"><inline classes="std std-ref">spacing_glyph</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-fontvariation-property-spacing-space"><inline classes="std std-ref">spacing_space</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-fontvariation-property-spacing-top"><inline classes="std std-ref">spacing_top</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-fontvariation-property-variation-embolden"><inline classes="std std-ref">variation_embolden</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-fontvariation-property-variation-face-index"><inline classes="std std-ref">variation_face_index</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-fontvariation-property-variation-opentype"><inline classes="std std-ref">variation_opentype</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>{}</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-fontvariation-property-variation-transform"><inline classes="std std-ref">variation_transform</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Transform2D(1, 0, 0, 1, 0, 0)</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="8"></colspec>
                    <colspec colwidth="156"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-fontvariation-method-set-spacing"><inline classes="std std-ref">set_spacing</inline></reference>(spacing: <reference internal="True" refuri="class_textserver#enum-textserver-spacingtype"><inline classes="std std-ref">SpacingType</inline></reference>, value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="属性说明">
            <title>属性说明</title>
            <target refid="class-fontvariation-property-base-font"></target>
            <paragraph classes="classref-property" ids="class-fontvariation-property-base-font" names="class_fontvariation_property_base_font"><reference internal="True" refuri="class_font#class-font"><inline classes="std std-ref">Font</inline></reference> <strong>base_font</strong> <reference internal="True" refid="class-fontvariation-property-base-font"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_base_font</strong>(value: <reference internal="True" refuri="class_font#class-font"><inline classes="std std-ref">Font</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_font#class-font"><inline classes="std std-ref">Font</inline></reference> <strong>get_base_font</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>用于创建变体的基础字体。如果未设置，则使用默认的 <reference internal="True" refuri="class_theme#class-theme"><inline classes="std std-ref">Theme</inline></reference> 字体。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-fontvariation-property-baseline-offset"></target>
            <paragraph classes="classref-property" ids="class-fontvariation-property-baseline-offset" names="class_fontvariation_property_baseline_offset"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>baseline_offset</strong> = <literal>0.0</literal> <reference internal="True" refid="class-fontvariation-property-baseline-offset"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_baseline_offset</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_baseline_offset</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>额外的基线偏移（作为字体高度的一部分）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-fontvariation-property-opentype-features"></target>
            <paragraph classes="classref-property" ids="class-fontvariation-property-opentype-features" names="class_fontvariation_property_opentype_features"><reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference> <strong>opentype_features</strong> = <literal>{}</literal> <reference internal="True" refid="class-fontvariation-property-opentype-features"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_opentype_features</strong>(value: <reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference> <strong>get_opentype_features</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>一组 OpenType 功能标签。更多信息：<reference name="OpenType 功能标签" refuri="https://docs.microsoft.com/en-us/typography/opentype/spec/featuretags">OpenType 功能标签</reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-fontvariation-property-spacing-bottom"></target>
            <paragraph classes="classref-property" ids="class-fontvariation-property-spacing-bottom" names="class_fontvariation_property_spacing_bottom"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>spacing_bottom</strong> = <literal>0</literal> <reference internal="True" refid="class-fontvariation-property-spacing-bottom"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_spacing</strong>(spacing: <reference internal="True" refuri="class_textserver#enum-textserver-spacingtype"><inline classes="std std-ref">SpacingType</inline></reference>, value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_spacing</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>行底部的额外间距，单位为像素。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-fontvariation-property-spacing-glyph"></target>
            <paragraph classes="classref-property" ids="class-fontvariation-property-spacing-glyph" names="class_fontvariation_property_spacing_glyph"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>spacing_glyph</strong> = <literal>0</literal> <reference internal="True" refid="class-fontvariation-property-spacing-glyph"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_spacing</strong>(spacing: <reference internal="True" refuri="class_textserver#enum-textserver-spacingtype"><inline classes="std std-ref">SpacingType</inline></reference>, value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_spacing</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>图形字形之间的额外间距。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-fontvariation-property-spacing-space"></target>
            <paragraph classes="classref-property" ids="class-fontvariation-property-spacing-space" names="class_fontvariation_property_spacing_space"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>spacing_space</strong> = <literal>0</literal> <reference internal="True" refid="class-fontvariation-property-spacing-space"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_spacing</strong>(spacing: <reference internal="True" refuri="class_textserver#enum-textserver-spacingtype"><inline classes="std std-ref">SpacingType</inline></reference>, value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_spacing</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>空格字形的额外宽度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-fontvariation-property-spacing-top"></target>
            <paragraph classes="classref-property" ids="class-fontvariation-property-spacing-top" names="class_fontvariation_property_spacing_top"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>spacing_top</strong> = <literal>0</literal> <reference internal="True" refid="class-fontvariation-property-spacing-top"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_spacing</strong>(spacing: <reference internal="True" refuri="class_textserver#enum-textserver-spacingtype"><inline classes="std std-ref">SpacingType</inline></reference>, value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_spacing</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>行顶部的额外间距，单位为像素。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-fontvariation-property-variation-embolden"></target>
            <paragraph classes="classref-property" ids="class-fontvariation-property-variation-embolden" names="class_fontvariation_property_variation_embolden"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>variation_embolden</strong> = <literal>0.0</literal> <reference internal="True" refid="class-fontvariation-property-variation-embolden"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_variation_embolden</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_variation_embolden</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果不等于零，则加粗字体轮廓。负值会减小轮廓厚度。</paragraph>
            <paragraph><strong>注意：</strong>加粗字体可能有自相交的轮廓，这将阻止 MSDF 字体和 <reference internal="True" refuri="class_textmesh#class-textmesh"><inline classes="std std-ref">TextMesh</inline></reference> 正常工作。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-fontvariation-property-variation-face-index"></target>
            <paragraph classes="classref-property" ids="class-fontvariation-property-variation-face-index" names="class_fontvariation_property_variation_face_index"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>variation_face_index</strong> = <literal>0</literal> <reference internal="True" refid="class-fontvariation-property-variation-face-index"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_variation_face_index</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_variation_face_index</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>在 TrueType / OpenType 集合文件中的活动字体索引。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-fontvariation-property-variation-opentype"></target>
            <paragraph classes="classref-property" ids="class-fontvariation-property-variation-opentype" names="class_fontvariation_property_variation_opentype"><reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference> <strong>variation_opentype</strong> = <literal>{}</literal> <reference internal="True" refid="class-fontvariation-property-variation-opentype"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_variation_opentype</strong>(value: <reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference> <strong>get_variation_opentype</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>字体 OpenType 变体坐标。详见：<reference name="OpenType 变体标签" refuri="https://docs.microsoft.com/en-us/typography/opentype/spec/dvaraxisreg">OpenType 变体标签</reference>。</paragraph>
            <paragraph><strong>注意：</strong>这个 <reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference> 使用 OpenType 标签作为键。变体轴既可以用标签来标识（<reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>，例如 <literal>0x77678674</literal>），也可以用名称来标识（<reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>，例如 <literal>wght</literal>）。有些轴可以通过多个名称来访问。例如，<literal>wght</literal> 和 <literal>weight</literal> 引用的是同一个轴。而标签则是唯一的。要在名称和标签之间转换，请使用 <reference internal="True" refuri="class_textserver#class-textserver-method-name-to-tag"><inline classes="std std-ref">TextServer.name_to_tag</inline></reference> 和 <reference internal="True" refuri="class_textserver#class-textserver-method-tag-to-name"><inline classes="std std-ref">TextServer.tag_to_name</inline></reference>。</paragraph>
            <paragraph><strong>注意：</strong>要获取字体的可用变体轴，请使用 <reference internal="True" refuri="class_font#class-font-method-get-supported-variation-list"><inline classes="std std-ref">Font.get_supported_variation_list</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-fontvariation-property-variation-transform"></target>
            <paragraph classes="classref-property" ids="class-fontvariation-property-variation-transform" names="class_fontvariation_property_variation_transform"><reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference> <strong>variation_transform</strong> = <literal>Transform2D(1, 0, 0, 1, 0, 0)</literal> <reference internal="True" refid="class-fontvariation-property-variation-transform"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_variation_transform</strong>(value: <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference> <strong>get_variation_transform</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>应用于字体轮廓的 2D 变换，可用于倾斜、翻转和旋转字形。</paragraph>
            <paragraph>例如，要通过倾斜来模拟斜体字体，请应用以下变换 <literal>Transform2D(1.0, slant, 0.0, 1.0, 0.0, 0.0)</literal>。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="方法说明">
            <title>方法说明</title>
            <target refid="class-fontvariation-method-set-spacing"></target>
            <paragraph classes="classref-method" ids="class-fontvariation-method-set-spacing" names="class_fontvariation_method_set_spacing"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_spacing</strong>(spacing: <reference internal="True" refuri="class_textserver#enum-textserver-spacingtype"><inline classes="std std-ref">SpacingType</inline></reference>, value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-fontvariation-method-set-spacing"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将 <literal>spacing</literal> 的间距（见 <reference internal="True" refuri="class_textserver#enum-textserver-spacingtype"><inline classes="std std-ref">SpacingType</inline></reference>）设置为 <literal>value</literal>，单位为像素（与字体大小无关）。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

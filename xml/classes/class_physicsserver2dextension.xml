<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_physicsserver2dextension.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/PhysicsServer2DExtension.xml.</comment>
    <target refid="class-physicsserver2dextension"></target>
    <section ids="physicsserver2dextension class-physicsserver2dextension" names="physicsserver2dextension class_physicsserver2dextension">
        <title>PhysicsServer2DExtension</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d"><inline classes="std std-ref">PhysicsServer2D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>提供覆盖后可以用来创建自定义 <reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d"><inline classes="std std-ref">PhysicsServer2D</inline></reference> 实现的虚方法。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>这个类扩展自 <reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d"><inline classes="std std-ref">PhysicsServer2D</inline></reference>，提供可额外的可覆盖虚方法。覆盖这些方法后，就不会调用物理服务器内部方法，而是调用这些覆盖后的方法。</paragraph>
            <paragraph>旨在用于 GDExtension，用于创建自定义 <reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d"><inline classes="std std-ref">PhysicsServer2D</inline></reference> 实现。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="67"></colspec>
                    <colspec colwidth="414"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-area-add-shape"><inline classes="std std-ref">_area_add_shape</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> area, <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> shape, <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference> transform, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> disabled <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-area-attach-canvas-instance-id"><inline classes="std std-ref">_area_attach_canvas_instance_id</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> area, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-area-attach-object-instance-id"><inline classes="std std-ref">_area_attach_object_instance_id</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> area, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-area-clear-shapes"><inline classes="std std-ref">_area_clear_shapes</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> area <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-area-create"><inline classes="std std-ref">_area_create</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-area-get-canvas-instance-id"><inline classes="std std-ref">_area_get_canvas_instance_id</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> area <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-area-get-collision-layer"><inline classes="std std-ref">_area_get_collision_layer</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> area <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-area-get-collision-mask"><inline classes="std std-ref">_area_get_collision_mask</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> area <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-area-get-object-instance-id"><inline classes="std std-ref">_area_get_object_instance_id</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> area <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-area-get-param"><inline classes="std std-ref">_area_get_param</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> area, <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-areaparameter"><inline classes="std std-ref">AreaParameter</inline></reference> param <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-area-get-shape"><inline classes="std std-ref">_area_get_shape</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> area, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> shape_idx <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-area-get-shape-count"><inline classes="std std-ref">_area_get_shape_count</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> area <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-area-get-shape-transform"><inline classes="std std-ref">_area_get_shape_transform</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> area, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> shape_idx <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-area-get-space"><inline classes="std std-ref">_area_get_space</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> area <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-area-get-transform"><inline classes="std std-ref">_area_get_transform</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> area <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-area-remove-shape"><inline classes="std std-ref">_area_remove_shape</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> area, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> shape_idx <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-area-set-area-monitor-callback"><inline classes="std std-ref">_area_set_area_monitor_callback</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> area, <reference internal="True" refuri="class_callable#class-callable"><inline classes="std std-ref">Callable</inline></reference> callback <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-area-set-collision-layer"><inline classes="std std-ref">_area_set_collision_layer</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> area, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> layer <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-area-set-collision-mask"><inline classes="std std-ref">_area_set_collision_mask</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> area, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> mask <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-area-set-monitor-callback"><inline classes="std std-ref">_area_set_monitor_callback</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> area, <reference internal="True" refuri="class_callable#class-callable"><inline classes="std std-ref">Callable</inline></reference> callback <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-area-set-monitorable"><inline classes="std std-ref">_area_set_monitorable</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> area, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> monitorable <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-area-set-param"><inline classes="std std-ref">_area_set_param</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> area, <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-areaparameter"><inline classes="std std-ref">AreaParameter</inline></reference> param, <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> value <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-area-set-pickable"><inline classes="std std-ref">_area_set_pickable</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> area, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> pickable <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-area-set-shape"><inline classes="std std-ref">_area_set_shape</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> area, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> shape_idx, <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> shape <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-area-set-shape-disabled"><inline classes="std std-ref">_area_set_shape_disabled</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> area, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> shape_idx, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> disabled <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-area-set-shape-transform"><inline classes="std std-ref">_area_set_shape_transform</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> area, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> shape_idx, <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference> transform <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-area-set-space"><inline classes="std std-ref">_area_set_space</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> area, <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> space <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-area-set-transform"><inline classes="std std-ref">_area_set_transform</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> area, <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference> transform <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-add-collision-exception"><inline classes="std std-ref">_body_add_collision_exception</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> excepted_body <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-add-constant-central-force"><inline classes="std std-ref">_body_add_constant_central_force</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> force <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-add-constant-force"><inline classes="std std-ref">_body_add_constant_force</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> force, <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> position <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-add-constant-torque"><inline classes="std std-ref">_body_add_constant_torque</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> torque <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-add-shape"><inline classes="std std-ref">_body_add_shape</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> shape, <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference> transform, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> disabled <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-apply-central-force"><inline classes="std std-ref">_body_apply_central_force</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> force <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-apply-central-impulse"><inline classes="std std-ref">_body_apply_central_impulse</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> impulse <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-apply-force"><inline classes="std std-ref">_body_apply_force</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> force, <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> position <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-apply-impulse"><inline classes="std std-ref">_body_apply_impulse</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> impulse, <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> position <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-apply-torque"><inline classes="std std-ref">_body_apply_torque</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> torque <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-apply-torque-impulse"><inline classes="std std-ref">_body_apply_torque_impulse</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> impulse <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-attach-canvas-instance-id"><inline classes="std std-ref">_body_attach_canvas_instance_id</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-attach-object-instance-id"><inline classes="std std-ref">_body_attach_object_instance_id</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-clear-shapes"><inline classes="std std-ref">_body_clear_shapes</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-collide-shape"><inline classes="std std-ref">_body_collide_shape</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> body_shape, <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> shape, <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference> shape_xform, <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> motion, void* results, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> result_max, int32_t* result_count <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-create"><inline classes="std std-ref">_body_create</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-canvas-instance-id"><inline classes="std std-ref">_body_get_canvas_instance_id</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID[]</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-collision-exceptions"><inline classes="std std-ref">_body_get_collision_exceptions</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-collision-layer"><inline classes="std std-ref">_body_get_collision_layer</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-collision-mask"><inline classes="std std-ref">_body_get_collision_mask</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-collision-priority"><inline classes="std std-ref">_body_get_collision_priority</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-constant-force"><inline classes="std std-ref">_body_get_constant_force</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-constant-torque"><inline classes="std std-ref">_body_get_constant_torque</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-contacts-reported-depth-threshold"><inline classes="std std-ref">_body_get_contacts_reported_depth_threshold</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-ccdmode"><inline classes="std std-ref">CCDMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-continuous-collision-detection-mode"><inline classes="std std-ref">_body_get_continuous_collision_detection_mode</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_physicsdirectbodystate2d#class-physicsdirectbodystate2d"><inline classes="std std-ref">PhysicsDirectBodyState2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-direct-state"><inline classes="std std-ref">_body_get_direct_state</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-max-contacts-reported"><inline classes="std std-ref">_body_get_max_contacts_reported</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-bodymode"><inline classes="std std-ref">BodyMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-mode"><inline classes="std std-ref">_body_get_mode</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-object-instance-id"><inline classes="std std-ref">_body_get_object_instance_id</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-param"><inline classes="std std-ref">_body_get_param</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-bodyparameter"><inline classes="std std-ref">BodyParameter</inline></reference> param <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-shape"><inline classes="std std-ref">_body_get_shape</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> shape_idx <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-shape-count"><inline classes="std std-ref">_body_get_shape_count</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-shape-transform"><inline classes="std std-ref">_body_get_shape_transform</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> shape_idx <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-space"><inline classes="std std-ref">_body_get_space</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-state"><inline classes="std std-ref">_body_get_state</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-bodystate"><inline classes="std std-ref">BodyState</inline></reference> state <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-is-omitting-force-integration"><inline classes="std std-ref">_body_is_omitting_force_integration</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-remove-collision-exception"><inline classes="std std-ref">_body_remove_collision_exception</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> excepted_body <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-remove-shape"><inline classes="std std-ref">_body_remove_shape</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> shape_idx <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-reset-mass-properties"><inline classes="std std-ref">_body_reset_mass_properties</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-axis-velocity"><inline classes="std std-ref">_body_set_axis_velocity</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> axis_velocity <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-collision-layer"><inline classes="std std-ref">_body_set_collision_layer</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> layer <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-collision-mask"><inline classes="std std-ref">_body_set_collision_mask</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> mask <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-collision-priority"><inline classes="std std-ref">_body_set_collision_priority</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> priority <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-constant-force"><inline classes="std std-ref">_body_set_constant_force</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> force <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-constant-torque"><inline classes="std std-ref">_body_set_constant_torque</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> torque <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-contacts-reported-depth-threshold"><inline classes="std std-ref">_body_set_contacts_reported_depth_threshold</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> threshold <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-continuous-collision-detection-mode"><inline classes="std std-ref">_body_set_continuous_collision_detection_mode</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-ccdmode"><inline classes="std std-ref">CCDMode</inline></reference> mode <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-force-integration-callback"><inline classes="std std-ref">_body_set_force_integration_callback</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_callable#class-callable"><inline classes="std std-ref">Callable</inline></reference> callable, <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> userdata <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-max-contacts-reported"><inline classes="std std-ref">_body_set_max_contacts_reported</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> amount <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-mode"><inline classes="std std-ref">_body_set_mode</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-bodymode"><inline classes="std std-ref">BodyMode</inline></reference> mode <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-omit-force-integration"><inline classes="std std-ref">_body_set_omit_force_integration</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> enable <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-param"><inline classes="std std-ref">_body_set_param</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-bodyparameter"><inline classes="std std-ref">BodyParameter</inline></reference> param, <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> value <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-pickable"><inline classes="std std-ref">_body_set_pickable</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> pickable <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-shape"><inline classes="std std-ref">_body_set_shape</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> shape_idx, <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> shape <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-shape-as-one-way-collision"><inline classes="std std-ref">_body_set_shape_as_one_way_collision</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> shape_idx, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> enable, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> margin <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-shape-disabled"><inline classes="std std-ref">_body_set_shape_disabled</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> shape_idx, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> disabled <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-shape-transform"><inline classes="std std-ref">_body_set_shape_transform</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> shape_idx, <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference> transform <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-space"><inline classes="std std-ref">_body_set_space</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> space <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-state"><inline classes="std std-ref">_body_set_state</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-bodystate"><inline classes="std std-ref">BodyState</inline></reference> state, <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> value <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-state-sync-callback"><inline classes="std std-ref">_body_set_state_sync_callback</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_callable#class-callable"><inline classes="std std-ref">Callable</inline></reference> callable <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-test-motion"><inline classes="std std-ref">_body_test_motion</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference> from, <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> motion, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> margin, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> collide_separation_ray, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> recovery_as_collision, PhysicsServer2DExtensionMotionResult* result <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-capsule-shape-create"><inline classes="std std-ref">_capsule_shape_create</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-circle-shape-create"><inline classes="std std-ref">_circle_shape_create</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-concave-polygon-shape-create"><inline classes="std std-ref">_concave_polygon_shape_create</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-convex-polygon-shape-create"><inline classes="std std-ref">_convex_polygon_shape_create</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-damped-spring-joint-get-param"><inline classes="std std-ref">_damped_spring_joint_get_param</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> joint, <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-dampedspringparam"><inline classes="std std-ref">DampedSpringParam</inline></reference> param <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-damped-spring-joint-set-param"><inline classes="std std-ref">_damped_spring_joint_set_param</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> joint, <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-dampedspringparam"><inline classes="std std-ref">DampedSpringParam</inline></reference> param, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> value <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-end-sync"><inline classes="std std-ref">_end_sync</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-finish"><inline classes="std std-ref">_finish</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-flush-queries"><inline classes="std std-ref">_flush_queries</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-free-rid"><inline classes="std std-ref">_free_rid</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> rid <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-get-process-info"><inline classes="std std-ref">_get_process_info</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-processinfo"><inline classes="std std-ref">ProcessInfo</inline></reference> process_info <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-init"><inline classes="std std-ref">_init</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-is-flushing-queries"><inline classes="std std-ref">_is_flushing_queries</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-joint-clear"><inline classes="std std-ref">_joint_clear</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> joint <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-joint-create"><inline classes="std std-ref">_joint_create</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-joint-disable-collisions-between-bodies"><inline classes="std std-ref">_joint_disable_collisions_between_bodies</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> joint, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> disable <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-joint-get-param"><inline classes="std std-ref">_joint_get_param</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> joint, <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-jointparam"><inline classes="std std-ref">JointParam</inline></reference> param <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-jointtype"><inline classes="std std-ref">JointType</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-joint-get-type"><inline classes="std std-ref">_joint_get_type</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> joint <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-joint-is-disabled-collisions-between-bodies"><inline classes="std std-ref">_joint_is_disabled_collisions_between_bodies</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> joint <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-joint-make-damped-spring"><inline classes="std std-ref">_joint_make_damped_spring</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> joint, <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> anchor_a, <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> anchor_b, <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body_a, <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body_b <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-joint-make-groove"><inline classes="std std-ref">_joint_make_groove</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> joint, <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> a_groove1, <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> a_groove2, <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> b_anchor, <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body_a, <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body_b <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-joint-make-pin"><inline classes="std std-ref">_joint_make_pin</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> joint, <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> anchor, <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body_a, <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body_b <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-joint-set-param"><inline classes="std std-ref">_joint_set_param</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> joint, <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-jointparam"><inline classes="std std-ref">JointParam</inline></reference> param, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> value <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-pin-joint-get-flag"><inline classes="std std-ref">_pin_joint_get_flag</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> joint, <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-pinjointflag"><inline classes="std std-ref">PinJointFlag</inline></reference> flag <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-pin-joint-get-param"><inline classes="std std-ref">_pin_joint_get_param</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> joint, <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-pinjointparam"><inline classes="std std-ref">PinJointParam</inline></reference> param <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-pin-joint-set-flag"><inline classes="std std-ref">_pin_joint_set_flag</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> joint, <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-pinjointflag"><inline classes="std std-ref">PinJointFlag</inline></reference> flag, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> enabled <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-pin-joint-set-param"><inline classes="std std-ref">_pin_joint_set_param</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> joint, <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-pinjointparam"><inline classes="std std-ref">PinJointParam</inline></reference> param, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> value <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-rectangle-shape-create"><inline classes="std std-ref">_rectangle_shape_create</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-segment-shape-create"><inline classes="std std-ref">_segment_shape_create</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-separation-ray-shape-create"><inline classes="std std-ref">_separation_ray_shape_create</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-set-active"><inline classes="std std-ref">_set_active</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> active <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-shape-collide"><inline classes="std std-ref">_shape_collide</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> shape_A, <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference> xform_A, <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> motion_A, <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> shape_B, <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference> xform_B, <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> motion_B, void* results, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> result_max, int32_t* result_count <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-shape-get-custom-solver-bias"><inline classes="std std-ref">_shape_get_custom_solver_bias</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> shape <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-shape-get-data"><inline classes="std std-ref">_shape_get_data</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> shape <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-shapetype"><inline classes="std std-ref">ShapeType</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-shape-get-type"><inline classes="std std-ref">_shape_get_type</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> shape <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-shape-set-custom-solver-bias"><inline classes="std std-ref">_shape_set_custom_solver_bias</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> shape, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> bias <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-shape-set-data"><inline classes="std std-ref">_shape_set_data</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> shape, <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> data <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-space-create"><inline classes="std std-ref">_space_create</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-space-get-contact-count"><inline classes="std std-ref">_space_get_contact_count</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> space <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_packedvector2array#class-packedvector2array"><inline classes="std std-ref">PackedVector2Array</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-space-get-contacts"><inline classes="std std-ref">_space_get_contacts</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> space <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_physicsdirectspacestate2d#class-physicsdirectspacestate2d"><inline classes="std std-ref">PhysicsDirectSpaceState2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-space-get-direct-state"><inline classes="std std-ref">_space_get_direct_state</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> space <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-space-get-param"><inline classes="std std-ref">_space_get_param</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> space, <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-spaceparameter"><inline classes="std std-ref">SpaceParameter</inline></reference> param <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-space-is-active"><inline classes="std std-ref">_space_is_active</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> space <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-space-set-active"><inline classes="std std-ref">_space_set_active</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> space, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> active <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-space-set-debug-contacts"><inline classes="std std-ref">_space_set_debug_contacts</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> space, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> max_contacts <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-space-set-param"><inline classes="std std-ref">_space_set_param</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> space, <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-spaceparameter"><inline classes="std std-ref">SpaceParameter</inline></reference> param, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> value <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-step"><inline classes="std std-ref">_step</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> step <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-sync"><inline classes="std std-ref">_sync</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-world-boundary-shape-create"><inline classes="std std-ref">_world_boundary_shape_create</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-method-body-test-motion-is-excluding-body"><inline classes="std std-ref">body_test_motion_is_excluding_body</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-method-body-test-motion-is-excluding-object"><inline classes="std std-ref">body_test_motion_is_excluding_object</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> object <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="方法说明">
            <title>方法说明</title>
            <target refid="class-physicsserver2dextension-private-method-area-add-shape"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-area-add-shape" names="class_physicsserver2dextension_private_method__area_add_shape">void <strong>_area_add_shape</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> area, <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> shape, <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference> transform, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> disabled <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-area-attach-canvas-instance-id"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-area-attach-canvas-instance-id" names="class_physicsserver2dextension_private_method__area_attach_canvas_instance_id">void <strong>_area_attach_canvas_instance_id</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> area, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-area-attach-object-instance-id"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-area-attach-object-instance-id" names="class_physicsserver2dextension_private_method__area_attach_object_instance_id">void <strong>_area_attach_object_instance_id</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> area, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-area-clear-shapes"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-area-clear-shapes" names="class_physicsserver2dextension_private_method__area_clear_shapes">void <strong>_area_clear_shapes</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> area <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-area-create"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-area-create" names="class_physicsserver2dextension_private_method__area_create"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>_area_create</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-area-get-canvas-instance-id"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-area-get-canvas-instance-id" names="class_physicsserver2dextension_private_method__area_get_canvas_instance_id"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>_area_get_canvas_instance_id</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> area <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-area-get-collision-layer"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-area-get-collision-layer" names="class_physicsserver2dextension_private_method__area_get_collision_layer"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>_area_get_collision_layer</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> area <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-area-get-collision-mask"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-area-get-collision-mask" names="class_physicsserver2dextension_private_method__area_get_collision_mask"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>_area_get_collision_mask</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> area <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-area-get-object-instance-id"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-area-get-object-instance-id" names="class_physicsserver2dextension_private_method__area_get_object_instance_id"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>_area_get_object_instance_id</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> area <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-area-get-param"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-area-get-param" names="class_physicsserver2dextension_private_method__area_get_param"><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> <strong>_area_get_param</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> area, <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-areaparameter"><inline classes="std std-ref">AreaParameter</inline></reference> param <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-area-get-shape"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-area-get-shape" names="class_physicsserver2dextension_private_method__area_get_shape"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>_area_get_shape</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> area, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> shape_idx <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-area-get-shape-count"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-area-get-shape-count" names="class_physicsserver2dextension_private_method__area_get_shape_count"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>_area_get_shape_count</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> area <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-area-get-shape-transform"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-area-get-shape-transform" names="class_physicsserver2dextension_private_method__area_get_shape_transform"><reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference> <strong>_area_get_shape_transform</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> area, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> shape_idx <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-area-get-space"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-area-get-space" names="class_physicsserver2dextension_private_method__area_get_space"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>_area_get_space</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> area <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-area-get-transform"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-area-get-transform" names="class_physicsserver2dextension_private_method__area_get_transform"><reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference> <strong>_area_get_transform</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> area <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-area-remove-shape"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-area-remove-shape" names="class_physicsserver2dextension_private_method__area_remove_shape">void <strong>_area_remove_shape</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> area, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> shape_idx <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-area-set-area-monitor-callback"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-area-set-area-monitor-callback" names="class_physicsserver2dextension_private_method__area_set_area_monitor_callback">void <strong>_area_set_area_monitor_callback</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> area, <reference internal="True" refuri="class_callable#class-callable"><inline classes="std std-ref">Callable</inline></reference> callback <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-area-set-collision-layer"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-area-set-collision-layer" names="class_physicsserver2dextension_private_method__area_set_collision_layer">void <strong>_area_set_collision_layer</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> area, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> layer <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-area-set-collision-mask"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-area-set-collision-mask" names="class_physicsserver2dextension_private_method__area_set_collision_mask">void <strong>_area_set_collision_mask</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> area, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> mask <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-area-set-monitor-callback"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-area-set-monitor-callback" names="class_physicsserver2dextension_private_method__area_set_monitor_callback">void <strong>_area_set_monitor_callback</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> area, <reference internal="True" refuri="class_callable#class-callable"><inline classes="std std-ref">Callable</inline></reference> callback <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-area-set-monitorable"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-area-set-monitorable" names="class_physicsserver2dextension_private_method__area_set_monitorable">void <strong>_area_set_monitorable</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> area, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> monitorable <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-area-set-param"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-area-set-param" names="class_physicsserver2dextension_private_method__area_set_param">void <strong>_area_set_param</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> area, <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-areaparameter"><inline classes="std std-ref">AreaParameter</inline></reference> param, <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> value <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-area-set-pickable"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-area-set-pickable" names="class_physicsserver2dextension_private_method__area_set_pickable">void <strong>_area_set_pickable</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> area, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> pickable <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-area-set-shape"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-area-set-shape" names="class_physicsserver2dextension_private_method__area_set_shape">void <strong>_area_set_shape</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> area, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> shape_idx, <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> shape <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-area-set-shape-disabled"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-area-set-shape-disabled" names="class_physicsserver2dextension_private_method__area_set_shape_disabled">void <strong>_area_set_shape_disabled</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> area, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> shape_idx, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> disabled <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-area-set-shape-transform"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-area-set-shape-transform" names="class_physicsserver2dextension_private_method__area_set_shape_transform">void <strong>_area_set_shape_transform</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> area, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> shape_idx, <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference> transform <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-area-set-space"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-area-set-space" names="class_physicsserver2dextension_private_method__area_set_space">void <strong>_area_set_space</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> area, <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> space <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-area-set-transform"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-area-set-transform" names="class_physicsserver2dextension_private_method__area_set_transform">void <strong>_area_set_transform</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> area, <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference> transform <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-add-collision-exception"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-add-collision-exception" names="class_physicsserver2dextension_private_method__body_add_collision_exception">void <strong>_body_add_collision_exception</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> excepted_body <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-add-constant-central-force"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-add-constant-central-force" names="class_physicsserver2dextension_private_method__body_add_constant_central_force">void <strong>_body_add_constant_central_force</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> force <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-add-constant-force"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-add-constant-force" names="class_physicsserver2dextension_private_method__body_add_constant_force">void <strong>_body_add_constant_force</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> force, <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> position <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-add-constant-torque"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-add-constant-torque" names="class_physicsserver2dextension_private_method__body_add_constant_torque">void <strong>_body_add_constant_torque</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> torque <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-add-shape"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-add-shape" names="class_physicsserver2dextension_private_method__body_add_shape">void <strong>_body_add_shape</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> shape, <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference> transform, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> disabled <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-apply-central-force"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-apply-central-force" names="class_physicsserver2dextension_private_method__body_apply_central_force">void <strong>_body_apply_central_force</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> force <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-apply-central-impulse"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-apply-central-impulse" names="class_physicsserver2dextension_private_method__body_apply_central_impulse">void <strong>_body_apply_central_impulse</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> impulse <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-apply-force"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-apply-force" names="class_physicsserver2dextension_private_method__body_apply_force">void <strong>_body_apply_force</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> force, <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> position <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-apply-impulse"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-apply-impulse" names="class_physicsserver2dextension_private_method__body_apply_impulse">void <strong>_body_apply_impulse</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> impulse, <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> position <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-apply-torque"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-apply-torque" names="class_physicsserver2dextension_private_method__body_apply_torque">void <strong>_body_apply_torque</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> torque <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-apply-torque-impulse"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-apply-torque-impulse" names="class_physicsserver2dextension_private_method__body_apply_torque_impulse">void <strong>_body_apply_torque_impulse</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> impulse <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-attach-canvas-instance-id"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-attach-canvas-instance-id" names="class_physicsserver2dextension_private_method__body_attach_canvas_instance_id">void <strong>_body_attach_canvas_instance_id</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-attach-object-instance-id"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-attach-object-instance-id" names="class_physicsserver2dextension_private_method__body_attach_object_instance_id">void <strong>_body_attach_object_instance_id</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-clear-shapes"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-clear-shapes" names="class_physicsserver2dextension_private_method__body_clear_shapes">void <strong>_body_clear_shapes</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-collide-shape"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-collide-shape" names="class_physicsserver2dextension_private_method__body_collide_shape"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>_body_collide_shape</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> body_shape, <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> shape, <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference> shape_xform, <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> motion, void* results, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> result_max, int32_t* result_count <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-create"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-create" names="class_physicsserver2dextension_private_method__body_create"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>_body_create</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-get-canvas-instance-id"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-get-canvas-instance-id" names="class_physicsserver2dextension_private_method__body_get_canvas_instance_id"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>_body_get_canvas_instance_id</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-get-collision-exceptions"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-get-collision-exceptions" names="class_physicsserver2dextension_private_method__body_get_collision_exceptions"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID[]</inline></reference> <strong>_body_get_collision_exceptions</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-get-collision-layer"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-get-collision-layer" names="class_physicsserver2dextension_private_method__body_get_collision_layer"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>_body_get_collision_layer</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-get-collision-mask"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-get-collision-mask" names="class_physicsserver2dextension_private_method__body_get_collision_mask"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>_body_get_collision_mask</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-get-collision-priority"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-get-collision-priority" names="class_physicsserver2dextension_private_method__body_get_collision_priority"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>_body_get_collision_priority</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-get-constant-force"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-get-constant-force" names="class_physicsserver2dextension_private_method__body_get_constant_force"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>_body_get_constant_force</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-get-constant-torque"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-get-constant-torque" names="class_physicsserver2dextension_private_method__body_get_constant_torque"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>_body_get_constant_torque</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-get-contacts-reported-depth-threshold"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-get-contacts-reported-depth-threshold" names="class_physicsserver2dextension_private_method__body_get_contacts_reported_depth_threshold"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>_body_get_contacts_reported_depth_threshold</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-get-continuous-collision-detection-mode"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-get-continuous-collision-detection-mode" names="class_physicsserver2dextension_private_method__body_get_continuous_collision_detection_mode"><reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-ccdmode"><inline classes="std std-ref">CCDMode</inline></reference> <strong>_body_get_continuous_collision_detection_mode</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-get-direct-state"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-get-direct-state" names="class_physicsserver2dextension_private_method__body_get_direct_state"><reference internal="True" refuri="class_physicsdirectbodystate2d#class-physicsdirectbodystate2d"><inline classes="std std-ref">PhysicsDirectBodyState2D</inline></reference> <strong>_body_get_direct_state</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-get-max-contacts-reported"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-get-max-contacts-reported" names="class_physicsserver2dextension_private_method__body_get_max_contacts_reported"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>_body_get_max_contacts_reported</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-get-mode"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-get-mode" names="class_physicsserver2dextension_private_method__body_get_mode"><reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-bodymode"><inline classes="std std-ref">BodyMode</inline></reference> <strong>_body_get_mode</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-get-object-instance-id"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-get-object-instance-id" names="class_physicsserver2dextension_private_method__body_get_object_instance_id"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>_body_get_object_instance_id</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-get-param"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-get-param" names="class_physicsserver2dextension_private_method__body_get_param"><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> <strong>_body_get_param</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-bodyparameter"><inline classes="std std-ref">BodyParameter</inline></reference> param <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-get-shape"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-get-shape" names="class_physicsserver2dextension_private_method__body_get_shape"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>_body_get_shape</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> shape_idx <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-get-shape-count"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-get-shape-count" names="class_physicsserver2dextension_private_method__body_get_shape_count"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>_body_get_shape_count</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-get-shape-transform"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-get-shape-transform" names="class_physicsserver2dextension_private_method__body_get_shape_transform"><reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference> <strong>_body_get_shape_transform</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> shape_idx <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-get-space"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-get-space" names="class_physicsserver2dextension_private_method__body_get_space"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>_body_get_space</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-get-state"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-get-state" names="class_physicsserver2dextension_private_method__body_get_state"><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> <strong>_body_get_state</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-bodystate"><inline classes="std std-ref">BodyState</inline></reference> state <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-is-omitting-force-integration"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-is-omitting-force-integration" names="class_physicsserver2dextension_private_method__body_is_omitting_force_integration"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>_body_is_omitting_force_integration</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-remove-collision-exception"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-remove-collision-exception" names="class_physicsserver2dextension_private_method__body_remove_collision_exception">void <strong>_body_remove_collision_exception</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> excepted_body <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-remove-shape"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-remove-shape" names="class_physicsserver2dextension_private_method__body_remove_shape">void <strong>_body_remove_shape</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> shape_idx <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-reset-mass-properties"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-reset-mass-properties" names="class_physicsserver2dextension_private_method__body_reset_mass_properties">void <strong>_body_reset_mass_properties</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-set-axis-velocity"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-set-axis-velocity" names="class_physicsserver2dextension_private_method__body_set_axis_velocity">void <strong>_body_set_axis_velocity</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> axis_velocity <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-set-collision-layer"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-set-collision-layer" names="class_physicsserver2dextension_private_method__body_set_collision_layer">void <strong>_body_set_collision_layer</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> layer <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-set-collision-mask"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-set-collision-mask" names="class_physicsserver2dextension_private_method__body_set_collision_mask">void <strong>_body_set_collision_mask</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> mask <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-set-collision-priority"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-set-collision-priority" names="class_physicsserver2dextension_private_method__body_set_collision_priority">void <strong>_body_set_collision_priority</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> priority <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-set-constant-force"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-set-constant-force" names="class_physicsserver2dextension_private_method__body_set_constant_force">void <strong>_body_set_constant_force</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> force <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-set-constant-torque"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-set-constant-torque" names="class_physicsserver2dextension_private_method__body_set_constant_torque">void <strong>_body_set_constant_torque</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> torque <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-set-contacts-reported-depth-threshold"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-set-contacts-reported-depth-threshold" names="class_physicsserver2dextension_private_method__body_set_contacts_reported_depth_threshold">void <strong>_body_set_contacts_reported_depth_threshold</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> threshold <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-set-continuous-collision-detection-mode"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-set-continuous-collision-detection-mode" names="class_physicsserver2dextension_private_method__body_set_continuous_collision_detection_mode">void <strong>_body_set_continuous_collision_detection_mode</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-ccdmode"><inline classes="std std-ref">CCDMode</inline></reference> mode <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-set-force-integration-callback"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-set-force-integration-callback" names="class_physicsserver2dextension_private_method__body_set_force_integration_callback">void <strong>_body_set_force_integration_callback</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_callable#class-callable"><inline classes="std std-ref">Callable</inline></reference> callable, <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> userdata <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-set-max-contacts-reported"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-set-max-contacts-reported" names="class_physicsserver2dextension_private_method__body_set_max_contacts_reported">void <strong>_body_set_max_contacts_reported</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> amount <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-set-mode"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-set-mode" names="class_physicsserver2dextension_private_method__body_set_mode">void <strong>_body_set_mode</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-bodymode"><inline classes="std std-ref">BodyMode</inline></reference> mode <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-set-omit-force-integration"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-set-omit-force-integration" names="class_physicsserver2dextension_private_method__body_set_omit_force_integration">void <strong>_body_set_omit_force_integration</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> enable <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-set-param"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-set-param" names="class_physicsserver2dextension_private_method__body_set_param">void <strong>_body_set_param</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-bodyparameter"><inline classes="std std-ref">BodyParameter</inline></reference> param, <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> value <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-set-pickable"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-set-pickable" names="class_physicsserver2dextension_private_method__body_set_pickable">void <strong>_body_set_pickable</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> pickable <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-set-shape"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-set-shape" names="class_physicsserver2dextension_private_method__body_set_shape">void <strong>_body_set_shape</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> shape_idx, <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> shape <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-set-shape-as-one-way-collision"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-set-shape-as-one-way-collision" names="class_physicsserver2dextension_private_method__body_set_shape_as_one_way_collision">void <strong>_body_set_shape_as_one_way_collision</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> shape_idx, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> enable, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> margin <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-set-shape-disabled"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-set-shape-disabled" names="class_physicsserver2dextension_private_method__body_set_shape_disabled">void <strong>_body_set_shape_disabled</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> shape_idx, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> disabled <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-set-shape-transform"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-set-shape-transform" names="class_physicsserver2dextension_private_method__body_set_shape_transform">void <strong>_body_set_shape_transform</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> shape_idx, <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference> transform <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-set-space"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-set-space" names="class_physicsserver2dextension_private_method__body_set_space">void <strong>_body_set_space</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> space <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-set-state"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-set-state" names="class_physicsserver2dextension_private_method__body_set_state">void <strong>_body_set_state</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-bodystate"><inline classes="std std-ref">BodyState</inline></reference> state, <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> value <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-set-state-sync-callback"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-set-state-sync-callback" names="class_physicsserver2dextension_private_method__body_set_state_sync_callback">void <strong>_body_set_state_sync_callback</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_callable#class-callable"><inline classes="std std-ref">Callable</inline></reference> callable <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-test-motion"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-test-motion" names="class_physicsserver2dextension_private_method__body_test_motion"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>_body_test_motion</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body, <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference> from, <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> motion, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> margin, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> collide_separation_ray, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> recovery_as_collision, PhysicsServer2DExtensionMotionResult* result <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-capsule-shape-create"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-capsule-shape-create" names="class_physicsserver2dextension_private_method__capsule_shape_create"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>_capsule_shape_create</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-circle-shape-create"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-circle-shape-create" names="class_physicsserver2dextension_private_method__circle_shape_create"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>_circle_shape_create</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-concave-polygon-shape-create"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-concave-polygon-shape-create" names="class_physicsserver2dextension_private_method__concave_polygon_shape_create"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>_concave_polygon_shape_create</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-convex-polygon-shape-create"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-convex-polygon-shape-create" names="class_physicsserver2dextension_private_method__convex_polygon_shape_create"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>_convex_polygon_shape_create</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-damped-spring-joint-get-param"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-damped-spring-joint-get-param" names="class_physicsserver2dextension_private_method__damped_spring_joint_get_param"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>_damped_spring_joint_get_param</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> joint, <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-dampedspringparam"><inline classes="std std-ref">DampedSpringParam</inline></reference> param <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-damped-spring-joint-set-param"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-damped-spring-joint-set-param" names="class_physicsserver2dextension_private_method__damped_spring_joint_set_param">void <strong>_damped_spring_joint_set_param</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> joint, <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-dampedspringparam"><inline classes="std std-ref">DampedSpringParam</inline></reference> param, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> value <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-end-sync"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-end-sync" names="class_physicsserver2dextension_private_method__end_sync">void <strong>_end_sync</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-finish"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-finish" names="class_physicsserver2dextension_private_method__finish">void <strong>_finish</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-flush-queries"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-flush-queries" names="class_physicsserver2dextension_private_method__flush_queries">void <strong>_flush_queries</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-free-rid"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-free-rid" names="class_physicsserver2dextension_private_method__free_rid">void <strong>_free_rid</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> rid <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-get-process-info"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-get-process-info" names="class_physicsserver2dextension_private_method__get_process_info"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>_get_process_info</strong> <strong>(</strong> <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-processinfo"><inline classes="std std-ref">ProcessInfo</inline></reference> process_info <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-init"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-init" names="class_physicsserver2dextension_private_method__init">void <strong>_init</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-is-flushing-queries"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-is-flushing-queries" names="class_physicsserver2dextension_private_method__is_flushing_queries"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>_is_flushing_queries</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-joint-clear"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-joint-clear" names="class_physicsserver2dextension_private_method__joint_clear">void <strong>_joint_clear</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> joint <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-joint-create"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-joint-create" names="class_physicsserver2dextension_private_method__joint_create"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>_joint_create</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-joint-disable-collisions-between-bodies"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-joint-disable-collisions-between-bodies" names="class_physicsserver2dextension_private_method__joint_disable_collisions_between_bodies">void <strong>_joint_disable_collisions_between_bodies</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> joint, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> disable <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-joint-get-param"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-joint-get-param" names="class_physicsserver2dextension_private_method__joint_get_param"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>_joint_get_param</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> joint, <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-jointparam"><inline classes="std std-ref">JointParam</inline></reference> param <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-joint-get-type"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-joint-get-type" names="class_physicsserver2dextension_private_method__joint_get_type"><reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-jointtype"><inline classes="std std-ref">JointType</inline></reference> <strong>_joint_get_type</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> joint <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-joint-is-disabled-collisions-between-bodies"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-joint-is-disabled-collisions-between-bodies" names="class_physicsserver2dextension_private_method__joint_is_disabled_collisions_between_bodies"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>_joint_is_disabled_collisions_between_bodies</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> joint <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-joint-make-damped-spring"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-joint-make-damped-spring" names="class_physicsserver2dextension_private_method__joint_make_damped_spring">void <strong>_joint_make_damped_spring</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> joint, <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> anchor_a, <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> anchor_b, <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body_a, <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body_b <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-joint-make-groove"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-joint-make-groove" names="class_physicsserver2dextension_private_method__joint_make_groove">void <strong>_joint_make_groove</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> joint, <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> a_groove1, <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> a_groove2, <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> b_anchor, <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body_a, <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body_b <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-joint-make-pin"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-joint-make-pin" names="class_physicsserver2dextension_private_method__joint_make_pin">void <strong>_joint_make_pin</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> joint, <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> anchor, <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body_a, <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body_b <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-joint-set-param"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-joint-set-param" names="class_physicsserver2dextension_private_method__joint_set_param">void <strong>_joint_set_param</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> joint, <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-jointparam"><inline classes="std std-ref">JointParam</inline></reference> param, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> value <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-pin-joint-get-flag"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-pin-joint-get-flag" names="class_physicsserver2dextension_private_method__pin_joint_get_flag"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>_pin_joint_get_flag</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> joint, <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-pinjointflag"><inline classes="std std-ref">PinJointFlag</inline></reference> flag <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-pin-joint-get-param"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-pin-joint-get-param" names="class_physicsserver2dextension_private_method__pin_joint_get_param"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>_pin_joint_get_param</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> joint, <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-pinjointparam"><inline classes="std std-ref">PinJointParam</inline></reference> param <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-pin-joint-set-flag"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-pin-joint-set-flag" names="class_physicsserver2dextension_private_method__pin_joint_set_flag">void <strong>_pin_joint_set_flag</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> joint, <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-pinjointflag"><inline classes="std std-ref">PinJointFlag</inline></reference> flag, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> enabled <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-pin-joint-set-param"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-pin-joint-set-param" names="class_physicsserver2dextension_private_method__pin_joint_set_param">void <strong>_pin_joint_set_param</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> joint, <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-pinjointparam"><inline classes="std std-ref">PinJointParam</inline></reference> param, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> value <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-rectangle-shape-create"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-rectangle-shape-create" names="class_physicsserver2dextension_private_method__rectangle_shape_create"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>_rectangle_shape_create</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-segment-shape-create"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-segment-shape-create" names="class_physicsserver2dextension_private_method__segment_shape_create"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>_segment_shape_create</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-separation-ray-shape-create"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-separation-ray-shape-create" names="class_physicsserver2dextension_private_method__separation_ray_shape_create"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>_separation_ray_shape_create</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-set-active"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-set-active" names="class_physicsserver2dextension_private_method__set_active">void <strong>_set_active</strong> <strong>(</strong> <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> active <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-shape-collide"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-shape-collide" names="class_physicsserver2dextension_private_method__shape_collide"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>_shape_collide</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> shape_A, <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference> xform_A, <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> motion_A, <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> shape_B, <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference> xform_B, <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> motion_B, void* results, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> result_max, int32_t* result_count <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-shape-get-custom-solver-bias"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-shape-get-custom-solver-bias" names="class_physicsserver2dextension_private_method__shape_get_custom_solver_bias"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>_shape_get_custom_solver_bias</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> shape <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-shape-get-data"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-shape-get-data" names="class_physicsserver2dextension_private_method__shape_get_data"><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> <strong>_shape_get_data</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> shape <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-shape-get-type"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-shape-get-type" names="class_physicsserver2dextension_private_method__shape_get_type"><reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-shapetype"><inline classes="std std-ref">ShapeType</inline></reference> <strong>_shape_get_type</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> shape <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-shape-set-custom-solver-bias"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-shape-set-custom-solver-bias" names="class_physicsserver2dextension_private_method__shape_set_custom_solver_bias">void <strong>_shape_set_custom_solver_bias</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> shape, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> bias <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-shape-set-data"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-shape-set-data" names="class_physicsserver2dextension_private_method__shape_set_data">void <strong>_shape_set_data</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> shape, <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> data <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-space-create"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-space-create" names="class_physicsserver2dextension_private_method__space_create"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>_space_create</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-space-get-contact-count"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-space-get-contact-count" names="class_physicsserver2dextension_private_method__space_get_contact_count"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>_space_get_contact_count</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> space <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-space-get-contacts"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-space-get-contacts" names="class_physicsserver2dextension_private_method__space_get_contacts"><reference internal="True" refuri="class_packedvector2array#class-packedvector2array"><inline classes="std std-ref">PackedVector2Array</inline></reference> <strong>_space_get_contacts</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> space <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-space-get-direct-state"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-space-get-direct-state" names="class_physicsserver2dextension_private_method__space_get_direct_state"><reference internal="True" refuri="class_physicsdirectspacestate2d#class-physicsdirectspacestate2d"><inline classes="std std-ref">PhysicsDirectSpaceState2D</inline></reference> <strong>_space_get_direct_state</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> space <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-space-get-param"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-space-get-param" names="class_physicsserver2dextension_private_method__space_get_param"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>_space_get_param</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> space, <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-spaceparameter"><inline classes="std std-ref">SpaceParameter</inline></reference> param <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-space-is-active"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-space-is-active" names="class_physicsserver2dextension_private_method__space_is_active"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>_space_is_active</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> space <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-space-set-active"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-space-set-active" names="class_physicsserver2dextension_private_method__space_set_active">void <strong>_space_set_active</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> space, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> active <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-space-set-debug-contacts"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-space-set-debug-contacts" names="class_physicsserver2dextension_private_method__space_set_debug_contacts">void <strong>_space_set_debug_contacts</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> space, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> max_contacts <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-space-set-param"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-space-set-param" names="class_physicsserver2dextension_private_method__space_set_param">void <strong>_space_set_param</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> space, <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-spaceparameter"><inline classes="std std-ref">SpaceParameter</inline></reference> param, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> value <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-step"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-step" names="class_physicsserver2dextension_private_method__step">void <strong>_step</strong> <strong>(</strong> <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> step <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-sync"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-sync" names="class_physicsserver2dextension_private_method__sync">void <strong>_sync</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-world-boundary-shape-create"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-world-boundary-shape-create" names="class_physicsserver2dextension_private_method__world_boundary_shape_create"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>_world_boundary_shape_create</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-method-body-test-motion-is-excluding-body"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-method-body-test-motion-is-excluding-body" names="class_physicsserver2dextension_method_body_test_motion_is_excluding_body"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>body_test_motion_is_excluding_body</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> body <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-method-body-test-motion-is-excluding-object"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-method-body-test-motion-is-excluding-object" names="class_physicsserver2dextension_method_body_test_motion_is_excluding_object"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>body_test_motion_is_excluding_object</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> object <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，所以可以直接使用类名调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

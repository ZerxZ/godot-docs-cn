<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_physicsserver2dextension.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/PhysicsServer2DExtension.xml.</comment>
    <target refid="class-physicsserver2dextension"></target>
    <section ids="physicsserver2dextension class-physicsserver2dextension" names="physicsserver2dextension class_physicsserver2dextension">
        <title>PhysicsServer2DExtension</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d"><inline classes="std std-ref">PhysicsServer2D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>提供覆盖后可以用来创建自定义 <reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d"><inline classes="std std-ref">PhysicsServer2D</inline></reference> 实现的虚方法。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>这个类扩展自 <reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d"><inline classes="std std-ref">PhysicsServer2D</inline></reference>，提供可额外的可覆盖虚方法。覆盖这些方法后，就不会调用物理服务器内部方法，而是调用这些覆盖后的方法。</paragraph>
            <paragraph>旨在用于 GDExtension，用于创建自定义 <reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d"><inline classes="std std-ref">PhysicsServer2D</inline></reference> 实现。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="67"></colspec>
                    <colspec colwidth="435"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-area-add-shape"><inline classes="std std-ref">_area_add_shape</inline></reference>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, transform: <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference>, disabled: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-area-attach-canvas-instance-id"><inline classes="std std-ref">_area_attach_canvas_instance_id</inline></reference>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-area-attach-object-instance-id"><inline classes="std std-ref">_area_attach_object_instance_id</inline></reference>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-area-clear-shapes"><inline classes="std std-ref">_area_clear_shapes</inline></reference>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-area-create"><inline classes="std std-ref">_area_create</inline></reference>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-area-get-canvas-instance-id"><inline classes="std std-ref">_area_get_canvas_instance_id</inline></reference>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-area-get-collision-layer"><inline classes="std std-ref">_area_get_collision_layer</inline></reference>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-area-get-collision-mask"><inline classes="std std-ref">_area_get_collision_mask</inline></reference>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-area-get-object-instance-id"><inline classes="std std-ref">_area_get_object_instance_id</inline></reference>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-area-get-param"><inline classes="std std-ref">_area_get_param</inline></reference>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, param: <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-areaparameter"><inline classes="std std-ref">AreaParameter</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-area-get-shape"><inline classes="std std-ref">_area_get_shape</inline></reference>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-area-get-shape-count"><inline classes="std std-ref">_area_get_shape_count</inline></reference>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-area-get-shape-transform"><inline classes="std std-ref">_area_get_shape_transform</inline></reference>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-area-get-space"><inline classes="std std-ref">_area_get_space</inline></reference>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-area-get-transform"><inline classes="std std-ref">_area_get_transform</inline></reference>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-area-remove-shape"><inline classes="std std-ref">_area_remove_shape</inline></reference>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-area-set-area-monitor-callback"><inline classes="std std-ref">_area_set_area_monitor_callback</inline></reference>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, callback: <reference internal="True" refuri="class_callable#class-callable"><inline classes="std std-ref">Callable</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-area-set-collision-layer"><inline classes="std std-ref">_area_set_collision_layer</inline></reference>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, layer: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-area-set-collision-mask"><inline classes="std std-ref">_area_set_collision_mask</inline></reference>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, mask: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-area-set-monitor-callback"><inline classes="std std-ref">_area_set_monitor_callback</inline></reference>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, callback: <reference internal="True" refuri="class_callable#class-callable"><inline classes="std std-ref">Callable</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-area-set-monitorable"><inline classes="std std-ref">_area_set_monitorable</inline></reference>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, monitorable: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-area-set-param"><inline classes="std std-ref">_area_set_param</inline></reference>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, param: <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-areaparameter"><inline classes="std std-ref">AreaParameter</inline></reference>, value: <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-area-set-pickable"><inline classes="std std-ref">_area_set_pickable</inline></reference>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, pickable: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-area-set-shape"><inline classes="std std-ref">_area_set_shape</inline></reference>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, shape: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-area-set-shape-disabled"><inline classes="std std-ref">_area_set_shape_disabled</inline></reference>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, disabled: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-area-set-shape-transform"><inline classes="std std-ref">_area_set_shape_transform</inline></reference>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, transform: <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-area-set-space"><inline classes="std std-ref">_area_set_space</inline></reference>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, space: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-area-set-transform"><inline classes="std std-ref">_area_set_transform</inline></reference>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, transform: <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-add-collision-exception"><inline classes="std std-ref">_body_add_collision_exception</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, excepted_body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-add-constant-central-force"><inline classes="std std-ref">_body_add_constant_central_force</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, force: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-add-constant-force"><inline classes="std std-ref">_body_add_constant_force</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, force: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>, position: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-add-constant-torque"><inline classes="std std-ref">_body_add_constant_torque</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, torque: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-add-shape"><inline classes="std std-ref">_body_add_shape</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, transform: <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference>, disabled: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-apply-central-force"><inline classes="std std-ref">_body_apply_central_force</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, force: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-apply-central-impulse"><inline classes="std std-ref">_body_apply_central_impulse</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, impulse: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-apply-force"><inline classes="std std-ref">_body_apply_force</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, force: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>, position: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-apply-impulse"><inline classes="std std-ref">_body_apply_impulse</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, impulse: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>, position: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-apply-torque"><inline classes="std std-ref">_body_apply_torque</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, torque: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-apply-torque-impulse"><inline classes="std std-ref">_body_apply_torque_impulse</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, impulse: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-attach-canvas-instance-id"><inline classes="std std-ref">_body_attach_canvas_instance_id</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-attach-object-instance-id"><inline classes="std std-ref">_body_attach_object_instance_id</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-clear-shapes"><inline classes="std std-ref">_body_clear_shapes</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-collide-shape"><inline classes="std std-ref">_body_collide_shape</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, body_shape: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, shape: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape_xform: <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference>, motion: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>, results: <literal>void*</literal>, result_max: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, result_count: <literal>int32_t*</literal>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-create"><inline classes="std std-ref">_body_create</inline></reference>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-canvas-instance-id"><inline classes="std std-ref">_body_get_canvas_instance_id</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>]</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-collision-exceptions"><inline classes="std std-ref">_body_get_collision_exceptions</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-collision-layer"><inline classes="std std-ref">_body_get_collision_layer</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-collision-mask"><inline classes="std std-ref">_body_get_collision_mask</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-collision-priority"><inline classes="std std-ref">_body_get_collision_priority</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-constant-force"><inline classes="std std-ref">_body_get_constant_force</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-constant-torque"><inline classes="std std-ref">_body_get_constant_torque</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-contacts-reported-depth-threshold"><inline classes="std std-ref">_body_get_contacts_reported_depth_threshold</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-ccdmode"><inline classes="std std-ref">CCDMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-continuous-collision-detection-mode"><inline classes="std std-ref">_body_get_continuous_collision_detection_mode</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_physicsdirectbodystate2d#class-physicsdirectbodystate2d"><inline classes="std std-ref">PhysicsDirectBodyState2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-direct-state"><inline classes="std std-ref">_body_get_direct_state</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-max-contacts-reported"><inline classes="std std-ref">_body_get_max_contacts_reported</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-bodymode"><inline classes="std std-ref">BodyMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-mode"><inline classes="std std-ref">_body_get_mode</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-object-instance-id"><inline classes="std std-ref">_body_get_object_instance_id</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-param"><inline classes="std std-ref">_body_get_param</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, param: <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-bodyparameter"><inline classes="std std-ref">BodyParameter</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-shape"><inline classes="std std-ref">_body_get_shape</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-shape-count"><inline classes="std std-ref">_body_get_shape_count</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-shape-transform"><inline classes="std std-ref">_body_get_shape_transform</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-space"><inline classes="std std-ref">_body_get_space</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-state"><inline classes="std std-ref">_body_get_state</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, state: <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-bodystate"><inline classes="std std-ref">BodyState</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-is-omitting-force-integration"><inline classes="std std-ref">_body_is_omitting_force_integration</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-remove-collision-exception"><inline classes="std std-ref">_body_remove_collision_exception</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, excepted_body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-remove-shape"><inline classes="std std-ref">_body_remove_shape</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-reset-mass-properties"><inline classes="std std-ref">_body_reset_mass_properties</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-axis-velocity"><inline classes="std std-ref">_body_set_axis_velocity</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, axis_velocity: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-collision-layer"><inline classes="std std-ref">_body_set_collision_layer</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, layer: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-collision-mask"><inline classes="std std-ref">_body_set_collision_mask</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, mask: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-collision-priority"><inline classes="std std-ref">_body_set_collision_priority</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, priority: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-constant-force"><inline classes="std std-ref">_body_set_constant_force</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, force: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-constant-torque"><inline classes="std std-ref">_body_set_constant_torque</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, torque: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-contacts-reported-depth-threshold"><inline classes="std std-ref">_body_set_contacts_reported_depth_threshold</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, threshold: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-continuous-collision-detection-mode"><inline classes="std std-ref">_body_set_continuous_collision_detection_mode</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, mode: <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-ccdmode"><inline classes="std std-ref">CCDMode</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-force-integration-callback"><inline classes="std std-ref">_body_set_force_integration_callback</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, callable: <reference internal="True" refuri="class_callable#class-callable"><inline classes="std std-ref">Callable</inline></reference>, userdata: <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-max-contacts-reported"><inline classes="std std-ref">_body_set_max_contacts_reported</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, amount: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-mode"><inline classes="std std-ref">_body_set_mode</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, mode: <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-bodymode"><inline classes="std std-ref">BodyMode</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-omit-force-integration"><inline classes="std std-ref">_body_set_omit_force_integration</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, enable: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-param"><inline classes="std std-ref">_body_set_param</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, param: <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-bodyparameter"><inline classes="std std-ref">BodyParameter</inline></reference>, value: <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-pickable"><inline classes="std std-ref">_body_set_pickable</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, pickable: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-shape"><inline classes="std std-ref">_body_set_shape</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, shape: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-shape-as-one-way-collision"><inline classes="std std-ref">_body_set_shape_as_one_way_collision</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, enable: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>, margin: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-shape-disabled"><inline classes="std std-ref">_body_set_shape_disabled</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, disabled: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-shape-transform"><inline classes="std std-ref">_body_set_shape_transform</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, transform: <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-space"><inline classes="std std-ref">_body_set_space</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, space: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-state"><inline classes="std std-ref">_body_set_state</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, state: <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-bodystate"><inline classes="std std-ref">BodyState</inline></reference>, value: <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-state-sync-callback"><inline classes="std std-ref">_body_set_state_sync_callback</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, callable: <reference internal="True" refuri="class_callable#class-callable"><inline classes="std std-ref">Callable</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-body-test-motion"><inline classes="std std-ref">_body_test_motion</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, from: <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference>, motion: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>, margin: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>, collide_separation_ray: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>, recovery_as_collision: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>, result: <literal>PhysicsServer2DExtensionMotionResult*</literal>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-capsule-shape-create"><inline classes="std std-ref">_capsule_shape_create</inline></reference>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-circle-shape-create"><inline classes="std std-ref">_circle_shape_create</inline></reference>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-concave-polygon-shape-create"><inline classes="std std-ref">_concave_polygon_shape_create</inline></reference>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-convex-polygon-shape-create"><inline classes="std std-ref">_convex_polygon_shape_create</inline></reference>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-damped-spring-joint-get-param"><inline classes="std std-ref">_damped_spring_joint_get_param</inline></reference>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, param: <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-dampedspringparam"><inline classes="std std-ref">DampedSpringParam</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-damped-spring-joint-set-param"><inline classes="std std-ref">_damped_spring_joint_set_param</inline></reference>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, param: <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-dampedspringparam"><inline classes="std std-ref">DampedSpringParam</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-end-sync"><inline classes="std std-ref">_end_sync</inline></reference>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-finish"><inline classes="std std-ref">_finish</inline></reference>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-flush-queries"><inline classes="std std-ref">_flush_queries</inline></reference>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-free-rid"><inline classes="std std-ref">_free_rid</inline></reference>(rid: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-get-process-info"><inline classes="std std-ref">_get_process_info</inline></reference>(process_info: <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-processinfo"><inline classes="std std-ref">ProcessInfo</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-init"><inline classes="std std-ref">_init</inline></reference>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-is-flushing-queries"><inline classes="std std-ref">_is_flushing_queries</inline></reference>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-joint-clear"><inline classes="std std-ref">_joint_clear</inline></reference>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-joint-create"><inline classes="std std-ref">_joint_create</inline></reference>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-joint-disable-collisions-between-bodies"><inline classes="std std-ref">_joint_disable_collisions_between_bodies</inline></reference>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, disable: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-joint-get-param"><inline classes="std std-ref">_joint_get_param</inline></reference>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, param: <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-jointparam"><inline classes="std std-ref">JointParam</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-jointtype"><inline classes="std std-ref">JointType</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-joint-get-type"><inline classes="std std-ref">_joint_get_type</inline></reference>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-joint-is-disabled-collisions-between-bodies"><inline classes="std std-ref">_joint_is_disabled_collisions_between_bodies</inline></reference>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-joint-make-damped-spring"><inline classes="std std-ref">_joint_make_damped_spring</inline></reference>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, anchor_a: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>, anchor_b: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>, body_a: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, body_b: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-joint-make-groove"><inline classes="std std-ref">_joint_make_groove</inline></reference>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, a_groove1: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>, a_groove2: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>, b_anchor: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>, body_a: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, body_b: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-joint-make-pin"><inline classes="std std-ref">_joint_make_pin</inline></reference>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, anchor: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>, body_a: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, body_b: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-joint-set-param"><inline classes="std std-ref">_joint_set_param</inline></reference>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, param: <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-jointparam"><inline classes="std std-ref">JointParam</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-pin-joint-get-flag"><inline classes="std std-ref">_pin_joint_get_flag</inline></reference>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, flag: <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-pinjointflag"><inline classes="std std-ref">PinJointFlag</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-pin-joint-get-param"><inline classes="std std-ref">_pin_joint_get_param</inline></reference>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, param: <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-pinjointparam"><inline classes="std std-ref">PinJointParam</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-pin-joint-set-flag"><inline classes="std std-ref">_pin_joint_set_flag</inline></reference>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, flag: <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-pinjointflag"><inline classes="std std-ref">PinJointFlag</inline></reference>, enabled: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-pin-joint-set-param"><inline classes="std std-ref">_pin_joint_set_param</inline></reference>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, param: <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-pinjointparam"><inline classes="std std-ref">PinJointParam</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-rectangle-shape-create"><inline classes="std std-ref">_rectangle_shape_create</inline></reference>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-segment-shape-create"><inline classes="std std-ref">_segment_shape_create</inline></reference>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-separation-ray-shape-create"><inline classes="std std-ref">_separation_ray_shape_create</inline></reference>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-set-active"><inline classes="std std-ref">_set_active</inline></reference>(active: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-shape-collide"><inline classes="std std-ref">_shape_collide</inline></reference>(shape_A: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, xform_A: <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference>, motion_A: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>, shape_B: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, xform_B: <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference>, motion_B: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>, results: <literal>void*</literal>, result_max: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, result_count: <literal>int32_t*</literal>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-shape-get-custom-solver-bias"><inline classes="std std-ref">_shape_get_custom_solver_bias</inline></reference>(shape: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-shape-get-data"><inline classes="std std-ref">_shape_get_data</inline></reference>(shape: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-shapetype"><inline classes="std std-ref">ShapeType</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-shape-get-type"><inline classes="std std-ref">_shape_get_type</inline></reference>(shape: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-shape-set-custom-solver-bias"><inline classes="std std-ref">_shape_set_custom_solver_bias</inline></reference>(shape: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, bias: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-shape-set-data"><inline classes="std std-ref">_shape_set_data</inline></reference>(shape: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, data: <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-space-create"><inline classes="std std-ref">_space_create</inline></reference>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-space-get-contact-count"><inline classes="std std-ref">_space_get_contact_count</inline></reference>(space: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_packedvector2array#class-packedvector2array"><inline classes="std std-ref">PackedVector2Array</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-space-get-contacts"><inline classes="std std-ref">_space_get_contacts</inline></reference>(space: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_physicsdirectspacestate2d#class-physicsdirectspacestate2d"><inline classes="std std-ref">PhysicsDirectSpaceState2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-space-get-direct-state"><inline classes="std std-ref">_space_get_direct_state</inline></reference>(space: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-space-get-param"><inline classes="std std-ref">_space_get_param</inline></reference>(space: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, param: <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-spaceparameter"><inline classes="std std-ref">SpaceParameter</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-space-is-active"><inline classes="std std-ref">_space_is_active</inline></reference>(space: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-space-set-active"><inline classes="std std-ref">_space_set_active</inline></reference>(space: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, active: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-space-set-debug-contacts"><inline classes="std std-ref">_space_set_debug_contacts</inline></reference>(space: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, max_contacts: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-space-set-param"><inline classes="std std-ref">_space_set_param</inline></reference>(space: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, param: <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-spaceparameter"><inline classes="std std-ref">SpaceParameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-step"><inline classes="std std-ref">_step</inline></reference>(step: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-sync"><inline classes="std std-ref">_sync</inline></reference>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-private-method-world-boundary-shape-create"><inline classes="std std-ref">_world_boundary_shape_create</inline></reference>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-method-body-test-motion-is-excluding-body"><inline classes="std std-ref">body_test_motion_is_excluding_body</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver2dextension-method-body-test-motion-is-excluding-object"><inline classes="std std-ref">body_test_motion_is_excluding_object</inline></reference>(object: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="方法说明">
            <title>方法说明</title>
            <target refid="class-physicsserver2dextension-private-method-area-add-shape"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-area-add-shape" names="class_physicsserver2dextension_private_method__area_add_shape"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_area_add_shape</strong>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, transform: <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference>, disabled: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-area-add-shape"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-area-add-shape"><inline classes="std std-ref">PhysicsServer2D.area_add_shape</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-area-attach-canvas-instance-id"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-area-attach-canvas-instance-id" names="class_physicsserver2dextension_private_method__area_attach_canvas_instance_id"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_area_attach_canvas_instance_id</strong>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-area-attach-canvas-instance-id"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-area-attach-canvas-instance-id"><inline classes="std std-ref">PhysicsServer2D.area_attach_canvas_instance_id</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-area-attach-object-instance-id"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-area-attach-object-instance-id" names="class_physicsserver2dextension_private_method__area_attach_object_instance_id"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_area_attach_object_instance_id</strong>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-area-attach-object-instance-id"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-area-attach-object-instance-id"><inline classes="std std-ref">PhysicsServer2D.area_attach_object_instance_id</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-area-clear-shapes"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-area-clear-shapes" names="class_physicsserver2dextension_private_method__area_clear_shapes"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_area_clear_shapes</strong>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-area-clear-shapes"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-area-clear-shapes"><inline classes="std std-ref">PhysicsServer2D.area_clear_shapes</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-area-create"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-area-create" names="class_physicsserver2dextension_private_method__area_create"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>_area_create</strong>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-area-create"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-area-create"><inline classes="std std-ref">PhysicsServer2D.area_create</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-area-get-canvas-instance-id"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-area-get-canvas-instance-id" names="class_physicsserver2dextension_private_method__area_get_canvas_instance_id"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>_area_get_canvas_instance_id</strong>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-area-get-canvas-instance-id"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-area-get-canvas-instance-id"><inline classes="std std-ref">PhysicsServer2D.area_get_canvas_instance_id</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-area-get-collision-layer"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-area-get-collision-layer" names="class_physicsserver2dextension_private_method__area_get_collision_layer"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>_area_get_collision_layer</strong>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-area-get-collision-layer"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-area-get-collision-layer"><inline classes="std std-ref">PhysicsServer2D.area_get_collision_layer</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-area-get-collision-mask"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-area-get-collision-mask" names="class_physicsserver2dextension_private_method__area_get_collision_mask"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>_area_get_collision_mask</strong>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-area-get-collision-mask"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-area-get-collision-mask"><inline classes="std std-ref">PhysicsServer2D.area_get_collision_mask</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-area-get-object-instance-id"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-area-get-object-instance-id" names="class_physicsserver2dextension_private_method__area_get_object_instance_id"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>_area_get_object_instance_id</strong>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-area-get-object-instance-id"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-area-get-object-instance-id"><inline classes="std std-ref">PhysicsServer2D.area_get_object_instance_id</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-area-get-param"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-area-get-param" names="class_physicsserver2dextension_private_method__area_get_param"><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> <strong>_area_get_param</strong>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, param: <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-areaparameter"><inline classes="std std-ref">AreaParameter</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-area-get-param"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-area-get-param"><inline classes="std std-ref">PhysicsServer2D.area_get_param</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-area-get-shape"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-area-get-shape" names="class_physicsserver2dextension_private_method__area_get_shape"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>_area_get_shape</strong>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-area-get-shape"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-area-get-shape"><inline classes="std std-ref">PhysicsServer2D.area_get_shape</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-area-get-shape-count"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-area-get-shape-count" names="class_physicsserver2dextension_private_method__area_get_shape_count"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>_area_get_shape_count</strong>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-area-get-shape-count"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-area-get-shape-count"><inline classes="std std-ref">PhysicsServer2D.area_get_shape_count</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-area-get-shape-transform"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-area-get-shape-transform" names="class_physicsserver2dextension_private_method__area_get_shape_transform"><reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference> <strong>_area_get_shape_transform</strong>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-area-get-shape-transform"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-area-get-shape-transform"><inline classes="std std-ref">PhysicsServer2D.area_get_shape_transform</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-area-get-space"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-area-get-space" names="class_physicsserver2dextension_private_method__area_get_space"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>_area_get_space</strong>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-area-get-space"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-area-get-space"><inline classes="std std-ref">PhysicsServer2D.area_get_space</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-area-get-transform"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-area-get-transform" names="class_physicsserver2dextension_private_method__area_get_transform"><reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference> <strong>_area_get_transform</strong>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-area-get-transform"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-area-get-transform"><inline classes="std std-ref">PhysicsServer2D.area_get_transform</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-area-remove-shape"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-area-remove-shape" names="class_physicsserver2dextension_private_method__area_remove_shape"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_area_remove_shape</strong>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-area-remove-shape"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-area-remove-shape"><inline classes="std std-ref">PhysicsServer2D.area_remove_shape</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-area-set-area-monitor-callback"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-area-set-area-monitor-callback" names="class_physicsserver2dextension_private_method__area_set_area_monitor_callback"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_area_set_area_monitor_callback</strong>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, callback: <reference internal="True" refuri="class_callable#class-callable"><inline classes="std std-ref">Callable</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-area-set-area-monitor-callback"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-area-set-area-monitor-callback"><inline classes="std std-ref">PhysicsServer2D.area_set_area_monitor_callback</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-area-set-collision-layer"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-area-set-collision-layer" names="class_physicsserver2dextension_private_method__area_set_collision_layer"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_area_set_collision_layer</strong>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, layer: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-area-set-collision-layer"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-area-set-collision-layer"><inline classes="std std-ref">PhysicsServer2D.area_set_collision_layer</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-area-set-collision-mask"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-area-set-collision-mask" names="class_physicsserver2dextension_private_method__area_set_collision_mask"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_area_set_collision_mask</strong>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, mask: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-area-set-collision-mask"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-area-set-collision-mask"><inline classes="std std-ref">PhysicsServer2D.area_set_collision_mask</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-area-set-monitor-callback"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-area-set-monitor-callback" names="class_physicsserver2dextension_private_method__area_set_monitor_callback"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_area_set_monitor_callback</strong>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, callback: <reference internal="True" refuri="class_callable#class-callable"><inline classes="std std-ref">Callable</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-area-set-monitor-callback"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-area-set-monitor-callback"><inline classes="std std-ref">PhysicsServer2D.area_set_monitor_callback</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-area-set-monitorable"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-area-set-monitorable" names="class_physicsserver2dextension_private_method__area_set_monitorable"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_area_set_monitorable</strong>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, monitorable: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-area-set-monitorable"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-area-set-monitorable"><inline classes="std std-ref">PhysicsServer2D.area_set_monitorable</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-area-set-param"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-area-set-param" names="class_physicsserver2dextension_private_method__area_set_param"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_area_set_param</strong>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, param: <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-areaparameter"><inline classes="std std-ref">AreaParameter</inline></reference>, value: <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-area-set-param"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-area-set-param"><inline classes="std std-ref">PhysicsServer2D.area_set_param</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-area-set-pickable"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-area-set-pickable" names="class_physicsserver2dextension_private_method__area_set_pickable"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_area_set_pickable</strong>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, pickable: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-area-set-pickable"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>If set to <literal>true</literal>, allows the area with the given <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> to detect mouse inputs when the mouse cursor is hovering on it.</paragraph>
            <paragraph>Overridable version of <reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d"><inline classes="std std-ref">PhysicsServer2D</inline></reference>'s internal <literal>area_set_pickable</literal> method. Corresponds to <reference internal="True" refuri="class_collisionobject2d#class-collisionobject2d-property-input-pickable"><inline classes="std std-ref">CollisionObject2D.input_pickable</inline></reference>.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-area-set-shape"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-area-set-shape" names="class_physicsserver2dextension_private_method__area_set_shape"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_area_set_shape</strong>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, shape: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-area-set-shape"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-area-set-shape"><inline classes="std std-ref">PhysicsServer2D.area_set_shape</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-area-set-shape-disabled"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-area-set-shape-disabled" names="class_physicsserver2dextension_private_method__area_set_shape_disabled"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_area_set_shape_disabled</strong>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, disabled: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-area-set-shape-disabled"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-area-set-shape-disabled"><inline classes="std std-ref">PhysicsServer2D.area_set_shape_disabled</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-area-set-shape-transform"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-area-set-shape-transform" names="class_physicsserver2dextension_private_method__area_set_shape_transform"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_area_set_shape_transform</strong>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, transform: <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-area-set-shape-transform"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-area-set-shape-transform"><inline classes="std std-ref">PhysicsServer2D.area_set_shape_transform</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-area-set-space"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-area-set-space" names="class_physicsserver2dextension_private_method__area_set_space"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_area_set_space</strong>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, space: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-area-set-space"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-area-set-space"><inline classes="std std-ref">PhysicsServer2D.area_set_space</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-area-set-transform"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-area-set-transform" names="class_physicsserver2dextension_private_method__area_set_transform"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_area_set_transform</strong>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, transform: <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-area-set-transform"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-area-set-transform"><inline classes="std std-ref">PhysicsServer2D.area_set_transform</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-add-collision-exception"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-add-collision-exception" names="class_physicsserver2dextension_private_method__body_add_collision_exception"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_body_add_collision_exception</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, excepted_body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-add-collision-exception"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-body-add-collision-exception"><inline classes="std std-ref">PhysicsServer2D.body_add_collision_exception</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-add-constant-central-force"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-add-constant-central-force" names="class_physicsserver2dextension_private_method__body_add_constant_central_force"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_body_add_constant_central_force</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, force: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-add-constant-central-force"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-body-add-constant-central-force"><inline classes="std std-ref">PhysicsServer2D.body_add_constant_central_force</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-add-constant-force"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-add-constant-force" names="class_physicsserver2dextension_private_method__body_add_constant_force"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_body_add_constant_force</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, force: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>, position: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-add-constant-force"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-body-add-constant-force"><inline classes="std std-ref">PhysicsServer2D.body_add_constant_force</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-add-constant-torque"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-add-constant-torque" names="class_physicsserver2dextension_private_method__body_add_constant_torque"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_body_add_constant_torque</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, torque: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-add-constant-torque"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-body-add-constant-torque"><inline classes="std std-ref">PhysicsServer2D.body_add_constant_torque</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-add-shape"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-add-shape" names="class_physicsserver2dextension_private_method__body_add_shape"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_body_add_shape</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, transform: <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference>, disabled: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-add-shape"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-body-add-shape"><inline classes="std std-ref">PhysicsServer2D.body_add_shape</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-apply-central-force"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-apply-central-force" names="class_physicsserver2dextension_private_method__body_apply_central_force"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_body_apply_central_force</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, force: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-apply-central-force"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-body-apply-central-force"><inline classes="std std-ref">PhysicsServer2D.body_apply_central_force</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-apply-central-impulse"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-apply-central-impulse" names="class_physicsserver2dextension_private_method__body_apply_central_impulse"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_body_apply_central_impulse</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, impulse: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-apply-central-impulse"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-body-apply-central-impulse"><inline classes="std std-ref">PhysicsServer2D.body_apply_central_impulse</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-apply-force"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-apply-force" names="class_physicsserver2dextension_private_method__body_apply_force"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_body_apply_force</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, force: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>, position: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-apply-force"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-body-apply-force"><inline classes="std std-ref">PhysicsServer2D.body_apply_force</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-apply-impulse"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-apply-impulse" names="class_physicsserver2dextension_private_method__body_apply_impulse"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_body_apply_impulse</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, impulse: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>, position: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-apply-impulse"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-body-apply-impulse"><inline classes="std std-ref">PhysicsServer2D.body_apply_impulse</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-apply-torque"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-apply-torque" names="class_physicsserver2dextension_private_method__body_apply_torque"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_body_apply_torque</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, torque: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-apply-torque"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-body-apply-torque"><inline classes="std std-ref">PhysicsServer2D.body_apply_torque</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-apply-torque-impulse"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-apply-torque-impulse" names="class_physicsserver2dextension_private_method__body_apply_torque_impulse"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_body_apply_torque_impulse</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, impulse: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-apply-torque-impulse"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-body-apply-torque-impulse"><inline classes="std std-ref">PhysicsServer2D.body_apply_torque_impulse</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-attach-canvas-instance-id"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-attach-canvas-instance-id" names="class_physicsserver2dextension_private_method__body_attach_canvas_instance_id"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_body_attach_canvas_instance_id</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-attach-canvas-instance-id"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-body-attach-canvas-instance-id"><inline classes="std std-ref">PhysicsServer2D.body_attach_canvas_instance_id</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-attach-object-instance-id"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-attach-object-instance-id" names="class_physicsserver2dextension_private_method__body_attach_object_instance_id"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_body_attach_object_instance_id</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-attach-object-instance-id"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-body-attach-object-instance-id"><inline classes="std std-ref">PhysicsServer2D.body_attach_object_instance_id</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-clear-shapes"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-clear-shapes" names="class_physicsserver2dextension_private_method__body_clear_shapes"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_body_clear_shapes</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-clear-shapes"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-body-clear-shapes"><inline classes="std std-ref">PhysicsServer2D.body_clear_shapes</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-collide-shape"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-collide-shape" names="class_physicsserver2dextension_private_method__body_collide_shape"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>_body_collide_shape</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, body_shape: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, shape: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape_xform: <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference>, motion: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>, results: <literal>void*</literal>, result_max: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, result_count: <literal>int32_t*</literal>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-collide-shape"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Given a <literal>body</literal>, a <literal>shape</literal>, and their respective parameters, this method should return <literal>true</literal> if a collision between the two would occur, with additional details passed in <literal>results</literal>.</paragraph>
            <paragraph>Overridable version of <reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d"><inline classes="std std-ref">PhysicsServer2D</inline></reference>'s internal <literal>shape_collide</literal> method. Corresponds to <reference internal="True" refuri="class_physicsdirectspacestate2d#class-physicsdirectspacestate2d-method-collide-shape"><inline classes="std std-ref">PhysicsDirectSpaceState2D.collide_shape</inline></reference>.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-create"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-create" names="class_physicsserver2dextension_private_method__body_create"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>_body_create</strong>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-create"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-body-create"><inline classes="std std-ref">PhysicsServer2D.body_create</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-get-canvas-instance-id"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-get-canvas-instance-id" names="class_physicsserver2dextension_private_method__body_get_canvas_instance_id"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>_body_get_canvas_instance_id</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-canvas-instance-id"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-body-get-canvas-instance-id"><inline classes="std std-ref">PhysicsServer2D.body_get_canvas_instance_id</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-get-collision-exceptions"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-get-collision-exceptions" names="class_physicsserver2dextension_private_method__body_get_collision_exceptions"><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>] <strong>_body_get_collision_exceptions</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-collision-exceptions"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Returns the <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>s of all bodies added as collision exceptions for the given <literal>body</literal>. See also <reference internal="True" refid="class-physicsserver2dextension-private-method-body-add-collision-exception"><inline classes="std std-ref">_body_add_collision_exception</inline></reference> and <reference internal="True" refid="class-physicsserver2dextension-private-method-body-remove-collision-exception"><inline classes="std std-ref">_body_remove_collision_exception</inline></reference>.</paragraph>
            <paragraph>Overridable version of <reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d"><inline classes="std std-ref">PhysicsServer2D</inline></reference>'s internal <literal>body_get_collision_exceptions</literal> method. Corresponds to <reference internal="True" refuri="class_physicsbody2d#class-physicsbody2d-method-get-collision-exceptions"><inline classes="std std-ref">PhysicsBody2D.get_collision_exceptions</inline></reference>.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-get-collision-layer"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-get-collision-layer" names="class_physicsserver2dextension_private_method__body_get_collision_layer"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>_body_get_collision_layer</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-collision-layer"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-body-get-collision-layer"><inline classes="std std-ref">PhysicsServer2D.body_get_collision_layer</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-get-collision-mask"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-get-collision-mask" names="class_physicsserver2dextension_private_method__body_get_collision_mask"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>_body_get_collision_mask</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-collision-mask"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-body-get-collision-mask"><inline classes="std std-ref">PhysicsServer2D.body_get_collision_mask</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-get-collision-priority"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-get-collision-priority" names="class_physicsserver2dextension_private_method__body_get_collision_priority"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>_body_get_collision_priority</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-collision-priority"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-body-get-collision-priority"><inline classes="std std-ref">PhysicsServer2D.body_get_collision_priority</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-get-constant-force"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-get-constant-force" names="class_physicsserver2dextension_private_method__body_get_constant_force"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>_body_get_constant_force</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-constant-force"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-body-get-constant-force"><inline classes="std std-ref">PhysicsServer2D.body_get_constant_force</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-get-constant-torque"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-get-constant-torque" names="class_physicsserver2dextension_private_method__body_get_constant_torque"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>_body_get_constant_torque</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-constant-torque"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-body-get-constant-torque"><inline classes="std std-ref">PhysicsServer2D.body_get_constant_torque</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-get-contacts-reported-depth-threshold"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-get-contacts-reported-depth-threshold" names="class_physicsserver2dextension_private_method__body_get_contacts_reported_depth_threshold"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>_body_get_contacts_reported_depth_threshold</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-contacts-reported-depth-threshold"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Overridable version of <reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d"><inline classes="std std-ref">PhysicsServer2D</inline></reference>'s internal <literal>body_get_contacts_reported_depth_threshold</literal> method.</paragraph>
            <paragraph><strong>Note:</strong> This method is currently unused by Godot's default physics implementation.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-get-continuous-collision-detection-mode"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-get-continuous-collision-detection-mode" names="class_physicsserver2dextension_private_method__body_get_continuous_collision_detection_mode"><reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-ccdmode"><inline classes="std std-ref">CCDMode</inline></reference> <strong>_body_get_continuous_collision_detection_mode</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-continuous-collision-detection-mode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-body-get-continuous-collision-detection-mode"><inline classes="std std-ref">PhysicsServer2D.body_get_continuous_collision_detection_mode</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-get-direct-state"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-get-direct-state" names="class_physicsserver2dextension_private_method__body_get_direct_state"><reference internal="True" refuri="class_physicsdirectbodystate2d#class-physicsdirectbodystate2d"><inline classes="std std-ref">PhysicsDirectBodyState2D</inline></reference> <strong>_body_get_direct_state</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-direct-state"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-body-get-direct-state"><inline classes="std std-ref">PhysicsServer2D.body_get_direct_state</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-get-max-contacts-reported"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-get-max-contacts-reported" names="class_physicsserver2dextension_private_method__body_get_max_contacts_reported"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>_body_get_max_contacts_reported</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-max-contacts-reported"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-body-get-max-contacts-reported"><inline classes="std std-ref">PhysicsServer2D.body_get_max_contacts_reported</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-get-mode"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-get-mode" names="class_physicsserver2dextension_private_method__body_get_mode"><reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-bodymode"><inline classes="std std-ref">BodyMode</inline></reference> <strong>_body_get_mode</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-mode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-body-get-mode"><inline classes="std std-ref">PhysicsServer2D.body_get_mode</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-get-object-instance-id"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-get-object-instance-id" names="class_physicsserver2dextension_private_method__body_get_object_instance_id"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>_body_get_object_instance_id</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-object-instance-id"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-body-get-object-instance-id"><inline classes="std std-ref">PhysicsServer2D.body_get_object_instance_id</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-get-param"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-get-param" names="class_physicsserver2dextension_private_method__body_get_param"><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> <strong>_body_get_param</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, param: <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-bodyparameter"><inline classes="std std-ref">BodyParameter</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-param"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-body-get-param"><inline classes="std std-ref">PhysicsServer2D.body_get_param</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-get-shape"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-get-shape" names="class_physicsserver2dextension_private_method__body_get_shape"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>_body_get_shape</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-shape"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-body-get-shape"><inline classes="std std-ref">PhysicsServer2D.body_get_shape</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-get-shape-count"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-get-shape-count" names="class_physicsserver2dextension_private_method__body_get_shape_count"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>_body_get_shape_count</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-shape-count"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-body-get-shape-count"><inline classes="std std-ref">PhysicsServer2D.body_get_shape_count</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-get-shape-transform"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-get-shape-transform" names="class_physicsserver2dextension_private_method__body_get_shape_transform"><reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference> <strong>_body_get_shape_transform</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-shape-transform"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-body-get-shape-transform"><inline classes="std std-ref">PhysicsServer2D.body_get_shape_transform</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-get-space"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-get-space" names="class_physicsserver2dextension_private_method__body_get_space"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>_body_get_space</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-space"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-body-get-space"><inline classes="std std-ref">PhysicsServer2D.body_get_space</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-get-state"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-get-state" names="class_physicsserver2dextension_private_method__body_get_state"><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> <strong>_body_get_state</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, state: <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-bodystate"><inline classes="std std-ref">BodyState</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-get-state"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-body-get-state"><inline classes="std std-ref">PhysicsServer2D.body_get_state</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-is-omitting-force-integration"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-is-omitting-force-integration" names="class_physicsserver2dextension_private_method__body_is_omitting_force_integration"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>_body_is_omitting_force_integration</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-is-omitting-force-integration"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-body-is-omitting-force-integration"><inline classes="std std-ref">PhysicsServer2D.body_is_omitting_force_integration</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-remove-collision-exception"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-remove-collision-exception" names="class_physicsserver2dextension_private_method__body_remove_collision_exception"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_body_remove_collision_exception</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, excepted_body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-remove-collision-exception"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-body-remove-collision-exception"><inline classes="std std-ref">PhysicsServer2D.body_remove_collision_exception</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-remove-shape"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-remove-shape" names="class_physicsserver2dextension_private_method__body_remove_shape"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_body_remove_shape</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-remove-shape"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-body-remove-shape"><inline classes="std std-ref">PhysicsServer2D.body_remove_shape</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-reset-mass-properties"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-reset-mass-properties" names="class_physicsserver2dextension_private_method__body_reset_mass_properties"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_body_reset_mass_properties</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-reset-mass-properties"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-body-reset-mass-properties"><inline classes="std std-ref">PhysicsServer2D.body_reset_mass_properties</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-set-axis-velocity"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-set-axis-velocity" names="class_physicsserver2dextension_private_method__body_set_axis_velocity"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_body_set_axis_velocity</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, axis_velocity: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-axis-velocity"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-body-set-axis-velocity"><inline classes="std std-ref">PhysicsServer2D.body_set_axis_velocity</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-set-collision-layer"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-set-collision-layer" names="class_physicsserver2dextension_private_method__body_set_collision_layer"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_body_set_collision_layer</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, layer: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-collision-layer"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-body-set-collision-layer"><inline classes="std std-ref">PhysicsServer2D.body_set_collision_layer</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-set-collision-mask"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-set-collision-mask" names="class_physicsserver2dextension_private_method__body_set_collision_mask"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_body_set_collision_mask</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, mask: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-collision-mask"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-body-set-collision-mask"><inline classes="std std-ref">PhysicsServer2D.body_set_collision_mask</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-set-collision-priority"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-set-collision-priority" names="class_physicsserver2dextension_private_method__body_set_collision_priority"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_body_set_collision_priority</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, priority: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-collision-priority"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-body-set-collision-priority"><inline classes="std std-ref">PhysicsServer2D.body_set_collision_priority</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-set-constant-force"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-set-constant-force" names="class_physicsserver2dextension_private_method__body_set_constant_force"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_body_set_constant_force</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, force: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-constant-force"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-body-set-constant-force"><inline classes="std std-ref">PhysicsServer2D.body_set_constant_force</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-set-constant-torque"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-set-constant-torque" names="class_physicsserver2dextension_private_method__body_set_constant_torque"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_body_set_constant_torque</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, torque: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-constant-torque"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-body-set-constant-torque"><inline classes="std std-ref">PhysicsServer2D.body_set_constant_torque</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-set-contacts-reported-depth-threshold"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-set-contacts-reported-depth-threshold" names="class_physicsserver2dextension_private_method__body_set_contacts_reported_depth_threshold"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_body_set_contacts_reported_depth_threshold</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, threshold: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-contacts-reported-depth-threshold"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Overridable version of <reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d"><inline classes="std std-ref">PhysicsServer2D</inline></reference>'s internal <literal>body_set_contacts_reported_depth_threshold</literal> method.</paragraph>
            <paragraph><strong>Note:</strong> This method is currently unused by Godot's default physics implementation.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-set-continuous-collision-detection-mode"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-set-continuous-collision-detection-mode" names="class_physicsserver2dextension_private_method__body_set_continuous_collision_detection_mode"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_body_set_continuous_collision_detection_mode</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, mode: <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-ccdmode"><inline classes="std std-ref">CCDMode</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-continuous-collision-detection-mode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-body-set-continuous-collision-detection-mode"><inline classes="std std-ref">PhysicsServer2D.body_set_continuous_collision_detection_mode</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-set-force-integration-callback"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-set-force-integration-callback" names="class_physicsserver2dextension_private_method__body_set_force_integration_callback"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_body_set_force_integration_callback</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, callable: <reference internal="True" refuri="class_callable#class-callable"><inline classes="std std-ref">Callable</inline></reference>, userdata: <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-force-integration-callback"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-body-set-force-integration-callback"><inline classes="std std-ref">PhysicsServer2D.body_set_force_integration_callback</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-set-max-contacts-reported"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-set-max-contacts-reported" names="class_physicsserver2dextension_private_method__body_set_max_contacts_reported"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_body_set_max_contacts_reported</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, amount: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-max-contacts-reported"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-body-set-max-contacts-reported"><inline classes="std std-ref">PhysicsServer2D.body_set_max_contacts_reported</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-set-mode"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-set-mode" names="class_physicsserver2dextension_private_method__body_set_mode"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_body_set_mode</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, mode: <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-bodymode"><inline classes="std std-ref">BodyMode</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-mode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-body-set-mode"><inline classes="std std-ref">PhysicsServer2D.body_set_mode</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-set-omit-force-integration"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-set-omit-force-integration" names="class_physicsserver2dextension_private_method__body_set_omit_force_integration"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_body_set_omit_force_integration</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, enable: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-omit-force-integration"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-body-set-omit-force-integration"><inline classes="std std-ref">PhysicsServer2D.body_set_omit_force_integration</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-set-param"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-set-param" names="class_physicsserver2dextension_private_method__body_set_param"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_body_set_param</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, param: <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-bodyparameter"><inline classes="std std-ref">BodyParameter</inline></reference>, value: <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-param"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-body-set-param"><inline classes="std std-ref">PhysicsServer2D.body_set_param</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-set-pickable"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-set-pickable" names="class_physicsserver2dextension_private_method__body_set_pickable"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_body_set_pickable</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, pickable: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-pickable"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>If set to <literal>true</literal>, allows the body with the given <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> to detect mouse inputs when the mouse cursor is hovering on it.</paragraph>
            <paragraph>Overridable version of <reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d"><inline classes="std std-ref">PhysicsServer2D</inline></reference>'s internal <literal>body_set_pickable</literal> method. Corresponds to <reference internal="True" refuri="class_collisionobject2d#class-collisionobject2d-property-input-pickable"><inline classes="std std-ref">CollisionObject2D.input_pickable</inline></reference>.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-set-shape"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-set-shape" names="class_physicsserver2dextension_private_method__body_set_shape"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_body_set_shape</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, shape: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-shape"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-body-set-shape"><inline classes="std std-ref">PhysicsServer2D.body_set_shape</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-set-shape-as-one-way-collision"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-set-shape-as-one-way-collision" names="class_physicsserver2dextension_private_method__body_set_shape_as_one_way_collision"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_body_set_shape_as_one_way_collision</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, enable: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>, margin: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-shape-as-one-way-collision"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-body-set-shape-as-one-way-collision"><inline classes="std std-ref">PhysicsServer2D.body_set_shape_as_one_way_collision</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-set-shape-disabled"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-set-shape-disabled" names="class_physicsserver2dextension_private_method__body_set_shape_disabled"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_body_set_shape_disabled</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, disabled: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-shape-disabled"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-body-set-shape-disabled"><inline classes="std std-ref">PhysicsServer2D.body_set_shape_disabled</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-set-shape-transform"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-set-shape-transform" names="class_physicsserver2dextension_private_method__body_set_shape_transform"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_body_set_shape_transform</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, transform: <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-shape-transform"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-body-set-shape-transform"><inline classes="std std-ref">PhysicsServer2D.body_set_shape_transform</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-set-space"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-set-space" names="class_physicsserver2dextension_private_method__body_set_space"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_body_set_space</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, space: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-space"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-body-set-space"><inline classes="std std-ref">PhysicsServer2D.body_set_space</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-set-state"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-set-state" names="class_physicsserver2dextension_private_method__body_set_state"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_body_set_state</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, state: <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-bodystate"><inline classes="std std-ref">BodyState</inline></reference>, value: <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-state"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-body-set-state"><inline classes="std std-ref">PhysicsServer2D.body_set_state</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-set-state-sync-callback"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-set-state-sync-callback" names="class_physicsserver2dextension_private_method__body_set_state_sync_callback"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_body_set_state_sync_callback</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, callable: <reference internal="True" refuri="class_callable#class-callable"><inline classes="std std-ref">Callable</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-set-state-sync-callback"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Assigns the <literal>body</literal> to call the given <literal>callable</literal> during the synchronization phase of the loop, before <reference internal="True" refid="class-physicsserver2dextension-private-method-step"><inline classes="std std-ref">_step</inline></reference> is called. See also <reference internal="True" refid="class-physicsserver2dextension-private-method-sync"><inline classes="std std-ref">_sync</inline></reference>.</paragraph>
            <paragraph>Overridable version of <reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d"><inline classes="std std-ref">PhysicsServer2D</inline></reference>'s internal <literal>body_set_state_sync_callback</literal> method.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-body-test-motion"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-body-test-motion" names="class_physicsserver2dextension_private_method__body_test_motion"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>_body_test_motion</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, from: <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference>, motion: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>, margin: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>, collide_separation_ray: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>, recovery_as_collision: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>, result: <literal>PhysicsServer2DExtensionMotionResult*</literal>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-body-test-motion"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-body-test-motion"><inline classes="std std-ref">PhysicsServer2D.body_test_motion</inline></reference> 的可覆盖版本。与暴露的实现不同，该方法不会通过 <reference internal="True" refuri="class_physicstestmotionparameters2d#class-physicstestmotionparameters2d"><inline classes="std std-ref">PhysicsTestMotionParameters2D</inline></reference> 接受所有参数。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-capsule-shape-create"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-capsule-shape-create" names="class_physicsserver2dextension_private_method__capsule_shape_create"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>_capsule_shape_create</strong>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-capsule-shape-create"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-capsule-shape-create"><inline classes="std std-ref">PhysicsServer2D.capsule_shape_create</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-circle-shape-create"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-circle-shape-create" names="class_physicsserver2dextension_private_method__circle_shape_create"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>_circle_shape_create</strong>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-circle-shape-create"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-circle-shape-create"><inline classes="std std-ref">PhysicsServer2D.circle_shape_create</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-concave-polygon-shape-create"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-concave-polygon-shape-create" names="class_physicsserver2dextension_private_method__concave_polygon_shape_create"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>_concave_polygon_shape_create</strong>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-concave-polygon-shape-create"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-concave-polygon-shape-create"><inline classes="std std-ref">PhysicsServer2D.concave_polygon_shape_create</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-convex-polygon-shape-create"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-convex-polygon-shape-create" names="class_physicsserver2dextension_private_method__convex_polygon_shape_create"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>_convex_polygon_shape_create</strong>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-convex-polygon-shape-create"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-convex-polygon-shape-create"><inline classes="std std-ref">PhysicsServer2D.convex_polygon_shape_create</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-damped-spring-joint-get-param"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-damped-spring-joint-get-param" names="class_physicsserver2dextension_private_method__damped_spring_joint_get_param"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>_damped_spring_joint_get_param</strong>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, param: <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-dampedspringparam"><inline classes="std std-ref">DampedSpringParam</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-damped-spring-joint-get-param"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-damped-spring-joint-get-param"><inline classes="std std-ref">PhysicsServer2D.damped_spring_joint_get_param</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-damped-spring-joint-set-param"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-damped-spring-joint-set-param" names="class_physicsserver2dextension_private_method__damped_spring_joint_set_param"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_damped_spring_joint_set_param</strong>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, param: <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-dampedspringparam"><inline classes="std std-ref">DampedSpringParam</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-damped-spring-joint-set-param"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-damped-spring-joint-set-param"><inline classes="std std-ref">PhysicsServer2D.damped_spring_joint_set_param</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-end-sync"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-end-sync" names="class_physicsserver2dextension_private_method__end_sync"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_end_sync</strong>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-end-sync"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Called to indicate that the physics server has stopped synchronizing. It is in the loop's iteration/physics phase, and can access physics objects even if running on a separate thread. See also <reference internal="True" refid="class-physicsserver2dextension-private-method-sync"><inline classes="std std-ref">_sync</inline></reference>.</paragraph>
            <paragraph>Overridable version of <reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d"><inline classes="std std-ref">PhysicsServer2D</inline></reference>'s internal <literal>end_sync</literal> method.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-finish"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-finish" names="class_physicsserver2dextension_private_method__finish"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_finish</strong>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-finish"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Called when the main loop finalizes to shut down the physics server. See also <reference internal="True" refuri="class_mainloop#class-mainloop-private-method-finalize"><inline classes="std std-ref">MainLoop._finalize</inline></reference> and <reference internal="True" refid="class-physicsserver2dextension-private-method-init"><inline classes="std std-ref">_init</inline></reference>.</paragraph>
            <paragraph>Overridable version of <reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d"><inline classes="std std-ref">PhysicsServer2D</inline></reference>'s internal <literal>finish</literal> method.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-flush-queries"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-flush-queries" names="class_physicsserver2dextension_private_method__flush_queries"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_flush_queries</strong>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-flush-queries"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Called every physics step before <reference internal="True" refid="class-physicsserver2dextension-private-method-step"><inline classes="std std-ref">_step</inline></reference> to process all remaining queries.</paragraph>
            <paragraph>Overridable version of <reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d"><inline classes="std std-ref">PhysicsServer2D</inline></reference>'s internal <literal>flush_queries</literal> method.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-free-rid"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-free-rid" names="class_physicsserver2dextension_private_method__free_rid"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_free_rid</strong>(rid: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-free-rid"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-free-rid"><inline classes="std std-ref">PhysicsServer2D.free_rid</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-get-process-info"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-get-process-info" names="class_physicsserver2dextension_private_method__get_process_info"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>_get_process_info</strong>(process_info: <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-processinfo"><inline classes="std std-ref">ProcessInfo</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-get-process-info"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-get-process-info"><inline classes="std std-ref">PhysicsServer2D.get_process_info</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-init"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-init" names="class_physicsserver2dextension_private_method__init"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_init</strong>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-init"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Called when the main loop is initialized and creates a new instance of this physics server. See also <reference internal="True" refuri="class_mainloop#class-mainloop-private-method-initialize"><inline classes="std std-ref">MainLoop._initialize</inline></reference> and <reference internal="True" refid="class-physicsserver2dextension-private-method-finish"><inline classes="std std-ref">_finish</inline></reference>.</paragraph>
            <paragraph>Overridable version of <reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d"><inline classes="std std-ref">PhysicsServer2D</inline></reference>'s internal <literal>init</literal> method.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-is-flushing-queries"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-is-flushing-queries" names="class_physicsserver2dextension_private_method__is_flushing_queries"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>_is_flushing_queries</strong>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-is-flushing-queries"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Overridable method that should return <literal>true</literal> when the physics server is processing queries. See also <reference internal="True" refid="class-physicsserver2dextension-private-method-flush-queries"><inline classes="std std-ref">_flush_queries</inline></reference>.</paragraph>
            <paragraph>Overridable version of <reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d"><inline classes="std std-ref">PhysicsServer2D</inline></reference>'s internal <literal>is_flushing_queries</literal> method.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-joint-clear"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-joint-clear" names="class_physicsserver2dextension_private_method__joint_clear"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_joint_clear</strong>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-joint-clear"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-joint-clear"><inline classes="std std-ref">PhysicsServer2D.joint_clear</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-joint-create"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-joint-create" names="class_physicsserver2dextension_private_method__joint_create"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>_joint_create</strong>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-joint-create"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-joint-create"><inline classes="std std-ref">PhysicsServer2D.joint_create</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-joint-disable-collisions-between-bodies"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-joint-disable-collisions-between-bodies" names="class_physicsserver2dextension_private_method__joint_disable_collisions_between_bodies"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_joint_disable_collisions_between_bodies</strong>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, disable: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-joint-disable-collisions-between-bodies"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-joint-disable-collisions-between-bodies"><inline classes="std std-ref">PhysicsServer2D.joint_disable_collisions_between_bodies</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-joint-get-param"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-joint-get-param" names="class_physicsserver2dextension_private_method__joint_get_param"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>_joint_get_param</strong>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, param: <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-jointparam"><inline classes="std std-ref">JointParam</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-joint-get-param"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-joint-get-param"><inline classes="std std-ref">PhysicsServer2D.joint_get_param</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-joint-get-type"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-joint-get-type" names="class_physicsserver2dextension_private_method__joint_get_type"><reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-jointtype"><inline classes="std std-ref">JointType</inline></reference> <strong>_joint_get_type</strong>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-joint-get-type"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-joint-get-type"><inline classes="std std-ref">PhysicsServer2D.joint_get_type</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-joint-is-disabled-collisions-between-bodies"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-joint-is-disabled-collisions-between-bodies" names="class_physicsserver2dextension_private_method__joint_is_disabled_collisions_between_bodies"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>_joint_is_disabled_collisions_between_bodies</strong>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-joint-is-disabled-collisions-between-bodies"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-joint-is-disabled-collisions-between-bodies"><inline classes="std std-ref">PhysicsServer2D.joint_is_disabled_collisions_between_bodies</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-joint-make-damped-spring"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-joint-make-damped-spring" names="class_physicsserver2dextension_private_method__joint_make_damped_spring"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_joint_make_damped_spring</strong>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, anchor_a: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>, anchor_b: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>, body_a: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, body_b: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-joint-make-damped-spring"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-joint-make-damped-spring"><inline classes="std std-ref">PhysicsServer2D.joint_make_damped_spring</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-joint-make-groove"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-joint-make-groove" names="class_physicsserver2dextension_private_method__joint_make_groove"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_joint_make_groove</strong>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, a_groove1: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>, a_groove2: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>, b_anchor: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>, body_a: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, body_b: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-joint-make-groove"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-joint-make-groove"><inline classes="std std-ref">PhysicsServer2D.joint_make_groove</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-joint-make-pin"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-joint-make-pin" names="class_physicsserver2dextension_private_method__joint_make_pin"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_joint_make_pin</strong>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, anchor: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>, body_a: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, body_b: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-joint-make-pin"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-joint-make-pin"><inline classes="std std-ref">PhysicsServer2D.joint_make_pin</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-joint-set-param"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-joint-set-param" names="class_physicsserver2dextension_private_method__joint_set_param"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_joint_set_param</strong>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, param: <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-jointparam"><inline classes="std std-ref">JointParam</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-joint-set-param"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-joint-set-param"><inline classes="std std-ref">PhysicsServer2D.joint_set_param</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-pin-joint-get-flag"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-pin-joint-get-flag" names="class_physicsserver2dextension_private_method__pin_joint_get_flag"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>_pin_joint_get_flag</strong>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, flag: <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-pinjointflag"><inline classes="std std-ref">PinJointFlag</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-pin-joint-get-flag"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-pin-joint-get-flag"><inline classes="std std-ref">PhysicsServer2D.pin_joint_get_flag</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-pin-joint-get-param"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-pin-joint-get-param" names="class_physicsserver2dextension_private_method__pin_joint_get_param"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>_pin_joint_get_param</strong>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, param: <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-pinjointparam"><inline classes="std std-ref">PinJointParam</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-pin-joint-get-param"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-pin-joint-get-param"><inline classes="std std-ref">PhysicsServer2D.pin_joint_get_param</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-pin-joint-set-flag"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-pin-joint-set-flag" names="class_physicsserver2dextension_private_method__pin_joint_set_flag"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_pin_joint_set_flag</strong>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, flag: <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-pinjointflag"><inline classes="std std-ref">PinJointFlag</inline></reference>, enabled: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-pin-joint-set-flag"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-pin-joint-set-flag"><inline classes="std std-ref">PhysicsServer2D.pin_joint_set_flag</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-pin-joint-set-param"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-pin-joint-set-param" names="class_physicsserver2dextension_private_method__pin_joint_set_param"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_pin_joint_set_param</strong>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, param: <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-pinjointparam"><inline classes="std std-ref">PinJointParam</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-pin-joint-set-param"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-pin-joint-set-param"><inline classes="std std-ref">PhysicsServer2D.pin_joint_set_param</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-rectangle-shape-create"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-rectangle-shape-create" names="class_physicsserver2dextension_private_method__rectangle_shape_create"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>_rectangle_shape_create</strong>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-rectangle-shape-create"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-rectangle-shape-create"><inline classes="std std-ref">PhysicsServer2D.rectangle_shape_create</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-segment-shape-create"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-segment-shape-create" names="class_physicsserver2dextension_private_method__segment_shape_create"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>_segment_shape_create</strong>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-segment-shape-create"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-segment-shape-create"><inline classes="std std-ref">PhysicsServer2D.segment_shape_create</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-separation-ray-shape-create"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-separation-ray-shape-create" names="class_physicsserver2dextension_private_method__separation_ray_shape_create"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>_separation_ray_shape_create</strong>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-separation-ray-shape-create"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-separation-ray-shape-create"><inline classes="std std-ref">PhysicsServer2D.separation_ray_shape_create</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-set-active"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-set-active" names="class_physicsserver2dextension_private_method__set_active"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_set_active</strong>(active: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-set-active"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-set-active"><inline classes="std std-ref">PhysicsServer2D.set_active</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-shape-collide"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-shape-collide" names="class_physicsserver2dextension_private_method__shape_collide"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>_shape_collide</strong>(shape_A: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, xform_A: <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference>, motion_A: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>, shape_B: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, xform_B: <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference>, motion_B: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>, results: <literal>void*</literal>, result_max: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, result_count: <literal>int32_t*</literal>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-shape-collide"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Given two shapes and their parameters, should return <literal>true</literal> if a collision between the two would occur, with additional details passed in <literal>results</literal>.</paragraph>
            <paragraph>Overridable version of <reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d"><inline classes="std std-ref">PhysicsServer2D</inline></reference>'s internal <literal>shape_collide</literal> method. Corresponds to <reference internal="True" refuri="class_physicsdirectspacestate2d#class-physicsdirectspacestate2d-method-collide-shape"><inline classes="std std-ref">PhysicsDirectSpaceState2D.collide_shape</inline></reference>.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-shape-get-custom-solver-bias"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-shape-get-custom-solver-bias" names="class_physicsserver2dextension_private_method__shape_get_custom_solver_bias"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>_shape_get_custom_solver_bias</strong>(shape: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-shape-get-custom-solver-bias"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Should return the custom solver bias of the given <literal>shape</literal>, which defines how much bodies are forced to separate on contact when this shape is involved.</paragraph>
            <paragraph>Overridable version of <reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d"><inline classes="std std-ref">PhysicsServer2D</inline></reference>'s internal <literal>shape_get_custom_solver_bias</literal> method. Corresponds to <reference internal="True" refuri="class_shape2d#class-shape2d-property-custom-solver-bias"><inline classes="std std-ref">Shape2D.custom_solver_bias</inline></reference>.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-shape-get-data"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-shape-get-data" names="class_physicsserver2dextension_private_method__shape_get_data"><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> <strong>_shape_get_data</strong>(shape: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-shape-get-data"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-shape-get-data"><inline classes="std std-ref">PhysicsServer2D.shape_get_data</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-shape-get-type"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-shape-get-type" names="class_physicsserver2dextension_private_method__shape_get_type"><reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-shapetype"><inline classes="std std-ref">ShapeType</inline></reference> <strong>_shape_get_type</strong>(shape: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-shape-get-type"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-shape-get-type"><inline classes="std std-ref">PhysicsServer2D.shape_get_type</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-shape-set-custom-solver-bias"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-shape-set-custom-solver-bias" names="class_physicsserver2dextension_private_method__shape_set_custom_solver_bias"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_shape_set_custom_solver_bias</strong>(shape: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, bias: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-shape-set-custom-solver-bias"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Should set the custom solver bias for the given <literal>shape</literal>. It defines how much bodies are forced to separate on contact.</paragraph>
            <paragraph>Overridable version of <reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d"><inline classes="std std-ref">PhysicsServer2D</inline></reference>'s internal <literal>shape_get_custom_solver_bias</literal> method. Corresponds to <reference internal="True" refuri="class_shape2d#class-shape2d-property-custom-solver-bias"><inline classes="std std-ref">Shape2D.custom_solver_bias</inline></reference>.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-shape-set-data"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-shape-set-data" names="class_physicsserver2dextension_private_method__shape_set_data"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_shape_set_data</strong>(shape: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, data: <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-shape-set-data"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-shape-set-data"><inline classes="std std-ref">PhysicsServer2D.shape_set_data</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-space-create"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-space-create" names="class_physicsserver2dextension_private_method__space_create"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>_space_create</strong>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-space-create"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-space-create"><inline classes="std std-ref">PhysicsServer2D.space_create</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-space-get-contact-count"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-space-get-contact-count" names="class_physicsserver2dextension_private_method__space_get_contact_count"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>_space_get_contact_count</strong>(space: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-space-get-contact-count"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Should return how many contacts have occurred during the last physics step in the given <literal>space</literal>. See also <reference internal="True" refid="class-physicsserver2dextension-private-method-space-get-contacts"><inline classes="std std-ref">_space_get_contacts</inline></reference> and <reference internal="True" refid="class-physicsserver2dextension-private-method-space-set-debug-contacts"><inline classes="std std-ref">_space_set_debug_contacts</inline></reference>.</paragraph>
            <paragraph>Overridable version of <reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d"><inline classes="std std-ref">PhysicsServer2D</inline></reference>'s internal <literal>space_get_contact_count</literal> method.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-space-get-contacts"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-space-get-contacts" names="class_physicsserver2dextension_private_method__space_get_contacts"><reference internal="True" refuri="class_packedvector2array#class-packedvector2array"><inline classes="std std-ref">PackedVector2Array</inline></reference> <strong>_space_get_contacts</strong>(space: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-space-get-contacts"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Should return the positions of all contacts that have occurred during the last physics step in the given <literal>space</literal>. See also <reference internal="True" refid="class-physicsserver2dextension-private-method-space-get-contact-count"><inline classes="std std-ref">_space_get_contact_count</inline></reference> and <reference internal="True" refid="class-physicsserver2dextension-private-method-space-set-debug-contacts"><inline classes="std std-ref">_space_set_debug_contacts</inline></reference>.</paragraph>
            <paragraph>Overridable version of <reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d"><inline classes="std std-ref">PhysicsServer2D</inline></reference>'s internal <literal>space_get_contacts</literal> method.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-space-get-direct-state"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-space-get-direct-state" names="class_physicsserver2dextension_private_method__space_get_direct_state"><reference internal="True" refuri="class_physicsdirectspacestate2d#class-physicsdirectspacestate2d"><inline classes="std std-ref">PhysicsDirectSpaceState2D</inline></reference> <strong>_space_get_direct_state</strong>(space: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-space-get-direct-state"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-space-get-direct-state"><inline classes="std std-ref">PhysicsServer2D.space_get_direct_state</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-space-get-param"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-space-get-param" names="class_physicsserver2dextension_private_method__space_get_param"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>_space_get_param</strong>(space: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, param: <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-spaceparameter"><inline classes="std std-ref">SpaceParameter</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-space-get-param"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-space-get-param"><inline classes="std std-ref">PhysicsServer2D.space_get_param</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-space-is-active"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-space-is-active" names="class_physicsserver2dextension_private_method__space_is_active"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>_space_is_active</strong>(space: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-space-is-active"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-space-is-active"><inline classes="std std-ref">PhysicsServer2D.space_is_active</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-space-set-active"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-space-set-active" names="class_physicsserver2dextension_private_method__space_set_active"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_space_set_active</strong>(space: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, active: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-space-set-active"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-space-set-active"><inline classes="std std-ref">PhysicsServer2D.space_set_active</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-space-set-debug-contacts"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-space-set-debug-contacts" names="class_physicsserver2dextension_private_method__space_set_debug_contacts"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_space_set_debug_contacts</strong>(space: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, max_contacts: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-space-set-debug-contacts"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Used internally to allow the given <literal>space</literal> to store contact points, up to <literal>max_contacts</literal>. This is automatically set for the main <reference internal="True" refuri="class_world2d#class-world2d"><inline classes="std std-ref">World2D</inline></reference>'s space when <reference internal="True" refuri="class_scenetree#class-scenetree-property-debug-collisions-hint"><inline classes="std std-ref">SceneTree.debug_collisions_hint</inline></reference> is <literal>true</literal>, or by checking "Visible Collision Shapes" in the editor. Only works in debug builds.</paragraph>
            <paragraph>Overridable version of <reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d"><inline classes="std std-ref">PhysicsServer2D</inline></reference>'s internal <literal>space_set_debug_contacts</literal> method.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-space-set-param"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-space-set-param" names="class_physicsserver2dextension_private_method__space_set_param"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_space_set_param</strong>(space: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, param: <reference internal="True" refuri="class_physicsserver2d#enum-physicsserver2d-spaceparameter"><inline classes="std std-ref">SpaceParameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-space-set-param"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-space-set-param"><inline classes="std std-ref">PhysicsServer2D.space_set_param</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-step"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-step" names="class_physicsserver2dextension_private_method__step"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_step</strong>(step: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-step"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Called every physics step to process the physics simulation. <literal>step</literal> is the time elapsed since the last physics step, in seconds. It is usually the same as <reference internal="True" refuri="class_node#class-node-method-get-physics-process-delta-time"><inline classes="std std-ref">Node.get_physics_process_delta_time</inline></reference>.</paragraph>
            <paragraph>Overridable version of <reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d"><inline classes="std std-ref">PhysicsServer2D</inline></reference>'s internal <literal>step</literal> method.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-sync"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-sync" names="class_physicsserver2dextension_private_method__sync"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_sync</strong>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-sync"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Called to indicate that the physics server is synchronizing and cannot access physics states if running on a separate thread. See also <reference internal="True" refid="class-physicsserver2dextension-private-method-end-sync"><inline classes="std std-ref">_end_sync</inline></reference>.</paragraph>
            <paragraph>Overridable version of <reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d"><inline classes="std std-ref">PhysicsServer2D</inline></reference>'s internal <literal>sync</literal> method.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-private-method-world-boundary-shape-create"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-private-method-world-boundary-shape-create" names="class_physicsserver2dextension_private_method__world_boundary_shape_create"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>_world_boundary_shape_create</strong>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-private-method-world-boundary-shape-create"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d-method-world-boundary-shape-create"><inline classes="std std-ref">PhysicsServer2D.world_boundary_shape_create</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-method-body-test-motion-is-excluding-body"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-method-body-test-motion-is-excluding-body" names="class_physicsserver2dextension_method_body_test_motion_is_excluding_body"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>body_test_motion_is_excluding_body</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-method-body-test-motion-is-excluding-body"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Returns <literal>true</literal> if the body with the given <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> is being excluded from <reference internal="True" refid="class-physicsserver2dextension-private-method-body-test-motion"><inline classes="std std-ref">_body_test_motion</inline></reference>. See also <reference internal="True" refuri="class_object#class-object-method-get-instance-id"><inline classes="std std-ref">Object.get_instance_id</inline></reference>.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver2dextension-method-body-test-motion-is-excluding-object"></target>
            <paragraph classes="classref-method" ids="class-physicsserver2dextension-method-body-test-motion-is-excluding-object" names="class_physicsserver2dextension_method_body_test_motion_is_excluding_object"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>body_test_motion_is_excluding_object</strong>(object: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver2dextension-method-body-test-motion-is-excluding-object"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Returns <literal>true</literal> if the object with the given instance ID is being excluded from <reference internal="True" refid="class-physicsserver2dextension-private-method-body-test-motion"><inline classes="std std-ref">_body_test_motion</inline></reference>. See also <reference internal="True" refuri="class_object#class-object-method-get-instance-id"><inline classes="std std-ref">Object.get_instance_id</inline></reference>.</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

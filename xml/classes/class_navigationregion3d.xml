<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_navigationregion3d.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/NavigationRegion3D.xml.</comment>
    <target refid="class-navigationregion3d"></target>
    <section ids="navigationregion3d class-navigationregion3d" names="navigationregion3d class_navigationregion3d">
        <title>NavigationRegion3D</title>
        <paragraph><strong>实验性：</strong> This class may be changed or removed in future versions.</paragraph>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_node3d#class-node3d"><inline classes="std std-ref">Node3D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>可达的 3D 地区，<reference internal="True" refuri="class_navigationagent3d#class-navigationagent3d"><inline classes="std std-ref">NavigationAgent3D</inline></reference> 能够将其用于寻路。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>可达的 3D 地区，基于 <reference internal="True" refuri="class_navigationmesh#class-navigationmesh"><inline classes="std std-ref">NavigationMesh</inline></reference>，<reference internal="True" refuri="class_navigationagent3d#class-navigationagent3d"><inline classes="std std-ref">NavigationAgent3D</inline></reference> 能够将其用于寻路。</paragraph>
            <paragraph>两个地区如果存在相近的边就可以互相连接。连接两条边所需的顶点最小间距可以通过 <reference internal="True" refuri="class_navigationserver3d#class-navigationserver3d-method-map-set-edge-connection-margin"><inline classes="std std-ref">NavigationServer3D.map_set_edge_connection_margin</inline></reference> 设置。</paragraph>
            <paragraph><strong>注意：</strong>两个地区存在重叠部分并不足以让它们相连。必须有相近的边。</paragraph>
            <paragraph>从一个地区进入另一个地区的寻路成本可以使用 <reference internal="True" refid="class-navigationregion3d-property-enter-cost"><inline classes="std std-ref">enter_cost</inline></reference> 控制。</paragraph>
            <paragraph><strong>注意：</strong>起点位于该地区时，这个值不计入路径成本。</paragraph>
            <paragraph>在该地区中行进的寻路成本可以使用乘数 <reference internal="True" refid="class-navigationregion3d-property-travel-cost"><inline classes="std std-ref">travel_cost</inline></reference> 控制。</paragraph>
            <paragraph><strong>注意：</strong>该节点会对这些属性进行缓存，因此，你在 <reference internal="True" refuri="class_navigationserver3d#class-navigationserver3d"><inline classes="std std-ref">NavigationServer3D</inline></reference> 中对底层的地区 <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> 进行的修改不会在该节点的属性中。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference internal="True" refuri="../tutorials/navigation/navigation_using_navigationregions"><inline classes="doc">使用 NavigationRegion</inline></reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="45"></colspec>
                    <colspec colwidth="85"></colspec>
                    <colspec colwidth="10"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-navigationregion3d-property-enabled"><inline classes="std std-ref">enabled</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-navigationregion3d-property-enter-cost"><inline classes="std std-ref">enter_cost</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-navigationregion3d-property-navigation-layers"><inline classes="std std-ref">navigation_layers</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_navigationmesh#class-navigationmesh"><inline classes="std std-ref">NavigationMesh</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-navigationregion3d-property-navigation-mesh"><inline classes="std std-ref">navigation_mesh</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-navigationregion3d-property-travel-cost"><inline classes="std std-ref">travel_cost</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-navigationregion3d-property-use-edge-connections"><inline classes="std std-ref">use_edge_connections</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id4" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="25"></colspec>
                    <colspec colwidth="172"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-navigationregion3d-method-bake-navigation-mesh"><inline classes="std std-ref">bake_navigation_mesh</inline></reference>(on_thread: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = true)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-navigationregion3d-method-get-navigation-layer-value"><inline classes="std std-ref">get_navigation_layer_value</inline></reference>(layer_number: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-navigationregion3d-method-get-navigation-map"><inline classes="std std-ref">get_navigation_map</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-navigationregion3d-method-get-region-rid"><inline classes="std std-ref">get_region_rid</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-navigationregion3d-method-get-rid"><inline classes="std std-ref">get_rid</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-navigationregion3d-method-is-baking"><inline classes="std std-ref">is_baking</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-navigationregion3d-method-set-navigation-layer-value"><inline classes="std std-ref">set_navigation_layer_value</inline></reference>(layer_number: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-navigationregion3d-method-set-navigation-map"><inline classes="std std-ref">set_navigation_map</inline></reference>(navigation_map: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>)</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="信号">
            <title>信号</title>
            <target refid="class-navigationregion3d-signal-bake-finished"></target>
            <paragraph classes="classref-signal" ids="class-navigationregion3d-signal-bake-finished" names="class_navigationregion3d_signal_bake_finished"><strong>bake_finished</strong>() <reference internal="True" refid="class-navigationregion3d-signal-bake-finished"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>导航网格烘焙操作完成时发出通知。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-navigationregion3d-signal-navigation-mesh-changed"></target>
            <paragraph classes="classref-signal" ids="class-navigationregion3d-signal-navigation-mesh-changed" names="class_navigationregion3d_signal_navigation_mesh_changed"><strong>navigation_mesh_changed</strong>() <reference internal="True" refid="class-navigationregion3d-signal-navigation-mesh-changed"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_navigationmesh#class-navigationmesh"><inline classes="std std-ref">NavigationMesh</inline></reference> 发生变化时发出通知。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="属性说明">
            <title>属性说明</title>
            <target refid="class-navigationregion3d-property-enabled"></target>
            <paragraph classes="classref-property" ids="class-navigationregion3d-property-enabled" names="class_navigationregion3d_property_enabled"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>enabled</strong> = <literal>true</literal> <reference internal="True" refid="class-navigationregion3d-property-enabled"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_enabled</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_enabled</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>决定该 <strong>NavigationRegion3D</strong> 是启用还是禁用。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-navigationregion3d-property-enter-cost"></target>
            <paragraph classes="classref-property" ids="class-navigationregion3d-property-enter-cost" names="class_navigationregion3d_property_enter_cost"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>enter_cost</strong> = <literal>0.0</literal> <reference internal="True" refid="class-navigationregion3d-property-enter-cost"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_enter_cost</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_enter_cost</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>当寻路从另一个区块的导航网格进入该区块的导航网格时，<reference internal="True" refid="class-navigationregion3d-property-enter-cost"><inline classes="std std-ref">enter_cost</inline></reference> 值将被加到路径距离，以确定最短路径。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-navigationregion3d-property-navigation-layers"></target>
            <paragraph classes="classref-property" ids="class-navigationregion3d-property-navigation-layers" names="class_navigationregion3d_property_navigation_layers"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>navigation_layers</strong> = <literal>1</literal> <reference internal="True" refid="class-navigationregion3d-property-navigation-layers"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_navigation_layers</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_navigation_layers</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>确定该区块所属的所有导航层的位字段。当使用 <reference internal="True" refuri="class_navigationserver3d#class-navigationserver3d-method-map-get-path"><inline classes="std std-ref">NavigationServer3D.map_get_path</inline></reference> 请求一个路径时，可以检查这些导航层。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-navigationregion3d-property-navigation-mesh"></target>
            <paragraph classes="classref-property" ids="class-navigationregion3d-property-navigation-mesh" names="class_navigationregion3d_property_navigation_mesh"><reference internal="True" refuri="class_navigationmesh#class-navigationmesh"><inline classes="std std-ref">NavigationMesh</inline></reference> <strong>navigation_mesh</strong> <reference internal="True" refid="class-navigationregion3d-property-navigation-mesh"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_navigation_mesh</strong>(value: <reference internal="True" refuri="class_navigationmesh#class-navigationmesh"><inline classes="std std-ref">NavigationMesh</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_navigationmesh#class-navigationmesh"><inline classes="std std-ref">NavigationMesh</inline></reference> <strong>get_navigation_mesh</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>使用的 <reference internal="True" refuri="class_navigationmesh#class-navigationmesh"><inline classes="std std-ref">NavigationMesh</inline></reference> 资源。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-navigationregion3d-property-travel-cost"></target>
            <paragraph classes="classref-property" ids="class-navigationregion3d-property-travel-cost" names="class_navigationregion3d_property_travel_cost"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>travel_cost</strong> = <literal>1.0</literal> <reference internal="True" refid="class-navigationregion3d-property-travel-cost"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_travel_cost</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_travel_cost</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>当寻路在该区块的导航网格内移动时，将行进距离乘以 <reference internal="True" refid="class-navigationregion3d-property-travel-cost"><inline classes="std std-ref">travel_cost</inline></reference> 以确定最短路径。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-navigationregion3d-property-use-edge-connections"></target>
            <paragraph classes="classref-property" ids="class-navigationregion3d-property-use-edge-connections" names="class_navigationregion3d_property_use_edge_connections"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>use_edge_connections</strong> = <literal>true</literal> <reference internal="True" refid="class-navigationregion3d-property-use-edge-connections"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_use_edge_connections</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_use_edge_connections</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果启用，导航区块将使用边缘连接来与位于导航地图连接边距范围内的其他导航区块相连接。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id7" names="方法说明">
            <title>方法说明</title>
            <target refid="class-navigationregion3d-method-bake-navigation-mesh"></target>
            <paragraph classes="classref-method" ids="class-navigationregion3d-method-bake-navigation-mesh" names="class_navigationregion3d_method_bake_navigation_mesh"><abbreviation explanation="无返回值。">void</abbreviation> <strong>bake_navigation_mesh</strong>(on_thread: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = true) <reference internal="True" refid="class-navigationregion3d-method-bake-navigation-mesh"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>烘焙该 <reference internal="True" refuri="class_navigationmesh#class-navigationmesh"><inline classes="std std-ref">NavigationMesh</inline></reference>。如果 <literal>on_thread</literal> 被设置为 <literal>true</literal>（默认），则该烘焙将在单独的线程上完成。独立线程烘焙很有用，因为导航烘焙不是一项廉价的操作。完成后，它会自动设置新的 <reference internal="True" refuri="class_navigationmesh#class-navigationmesh"><inline classes="std std-ref">NavigationMesh</inline></reference>。请注意，如果几何体是从网格解析而来的，则独立线程烘焙可能会非常慢，因为对每个网格的异步访问会涉及大量同步操作。另外，请注意在无法使用线程的操作系统（例如禁用线程的 Web）上，会自动禁用独立线程烘焙。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-navigationregion3d-method-get-navigation-layer-value"></target>
            <paragraph classes="classref-method" ids="class-navigationregion3d-method-get-navigation-layer-value" names="class_navigationregion3d_method_get_navigation_layer_value"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_navigation_layer_value</strong>(layer_number: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-navigationregion3d-method-get-navigation-layer-value"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回 <reference internal="True" refid="class-navigationregion3d-property-navigation-layers"><inline classes="std std-ref">navigation_layers</inline></reference> 位掩码中指定的层是否启用，给定的 <literal>layer_number</literal> 应在 1 和 32 之间。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-navigationregion3d-method-get-navigation-map"></target>
            <paragraph classes="classref-method" ids="class-navigationregion3d-method-get-navigation-map" names="class_navigationregion3d_method_get_navigation_map"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>get_navigation_map</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-navigationregion3d-method-get-navigation-map"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回该区块使用的当前导航地图 <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-navigationregion3d-method-get-region-rid"></target>
            <paragraph classes="classref-method" ids="class-navigationregion3d-method-get-region-rid" names="class_navigationregion3d_method_get_region_rid"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>get_region_rid</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-navigationregion3d-method-get-region-rid"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><strong>已弃用：</strong> Use <reference internal="True" refid="class-navigationregion3d-method-get-rid"><inline classes="std std-ref">get_rid</inline></reference> instead.</paragraph>
            <paragraph>返回 <reference internal="True" refuri="class_navigationserver3d#class-navigationserver3d"><inline classes="std std-ref">NavigationServer3D</inline></reference> 上该区块的 <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-navigationregion3d-method-get-rid"></target>
            <paragraph classes="classref-method" ids="class-navigationregion3d-method-get-rid" names="class_navigationregion3d_method_get_rid"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>get_rid</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-navigationregion3d-method-get-rid"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回 <reference internal="True" refuri="class_navigationserver3d#class-navigationserver3d"><inline classes="std std-ref">NavigationServer3D</inline></reference> 上该区块的 <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>。结合 <reference internal="True" refuri="class_navigationserver3d#class-navigationserver3d-method-map-get-closest-point-owner"><inline classes="std std-ref">NavigationServer3D.map_get_closest_point_owner</inline></reference> 可用于识别距离该合并导航地图上的点最近的 <strong>NavigationRegion3D</strong>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-navigationregion3d-method-is-baking"></target>
            <paragraph classes="classref-method" ids="class-navigationregion3d-method-is-baking" names="class_navigationregion3d_method_is_baking"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_baking</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-navigationregion3d-method-is-baking"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当 <reference internal="True" refuri="class_navigationmesh#class-navigationmesh"><inline classes="std std-ref">NavigationMesh</inline></reference> 正在后台线程上烘焙时返回 <literal>true</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-navigationregion3d-method-set-navigation-layer-value"></target>
            <paragraph classes="classref-method" ids="class-navigationregion3d-method-set-navigation-layer-value" names="class_navigationregion3d_method_set_navigation_layer_value"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_navigation_layer_value</strong>(layer_number: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <reference internal="True" refid="class-navigationregion3d-method-set-navigation-layer-value"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>根据 <literal>value</literal>，启用或禁用 <reference internal="True" refid="class-navigationregion3d-property-navigation-layers"><inline classes="std std-ref">navigation_layers</inline></reference> 位掩码中指定的层，给定的 <literal>layer_number</literal> 应在 1 和 32 之间。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-navigationregion3d-method-set-navigation-map"></target>
            <paragraph classes="classref-method" ids="class-navigationregion3d-method-set-navigation-map" names="class_navigationregion3d_method_set_navigation_map"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_navigation_map</strong>(navigation_map: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <reference internal="True" refid="class-navigationregion3d-method-set-navigation-map"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置该区块应使用的导航地图的 <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>。默认情况下，该区块会自动加入 <reference internal="True" refuri="class_world3d#class-world3d"><inline classes="std std-ref">World3D</inline></reference> 默认导航地图，因此该函数只需要覆盖默认地图即可。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_noise.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/modules/noise/doc_classes/Noise.xml.</comment>
    <target refid="class-noise"></target>
    <section ids="noise class-noise" names="noise class_noise">
        <title>Noise</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph><strong>派生：</strong> <reference internal="True" refuri="class_fastnoiselite#class-fastnoiselite"><inline classes="std std-ref">FastNoiseLite</inline></reference></paragraph>
        <paragraph>噪声生成器的抽象基类。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>该类定义了噪声生成库要继承的接口。</paragraph>
            <paragraph>为不提供无缝噪声的库提供一个默认的 <reference internal="True" refid="class-noise-method-get-seamless-image"><inline classes="std std-ref">get_seamless_image</inline></reference> 实现。该函数从 <reference internal="True" refid="class-noise-method-get-image"><inline classes="std std-ref">get_image</inline></reference> 请求更大的图像，反转该图像的象限，然后使用额外宽度的条带在接缝处混合。</paragraph>
            <paragraph>继承的噪声类可以选择性地覆盖该函数，以提供更优化的算法。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="56"></colspec>
                    <colspec colwidth="317"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_image#class-image"><inline classes="std std-ref">Image</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-noise-method-get-image"><inline classes="std std-ref">get_image</inline></reference>(width: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, height: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, invert: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = false, in_3d_space: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = false, normalize: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = true) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_image#class-image"><inline classes="std std-ref">Image</inline></reference>]</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-noise-method-get-image-3d"><inline classes="std std-ref">get_image_3d</inline></reference>(width: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, height: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, depth: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, invert: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = false, normalize: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = true) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-noise-method-get-noise-1d"><inline classes="std std-ref">get_noise_1d</inline></reference>(x: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-noise-method-get-noise-2d"><inline classes="std std-ref">get_noise_2d</inline></reference>(x: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>, y: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-noise-method-get-noise-2dv"><inline classes="std std-ref">get_noise_2dv</inline></reference>(v: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-noise-method-get-noise-3d"><inline classes="std std-ref">get_noise_3d</inline></reference>(x: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>, y: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>, z: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-noise-method-get-noise-3dv"><inline classes="std std-ref">get_noise_3dv</inline></reference>(v: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_image#class-image"><inline classes="std std-ref">Image</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-noise-method-get-seamless-image"><inline classes="std std-ref">get_seamless_image</inline></reference>(width: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, height: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, invert: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = false, in_3d_space: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = false, skirt: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> = 0.1, normalize: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = true) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_image#class-image"><inline classes="std std-ref">Image</inline></reference>]</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-noise-method-get-seamless-image-3d"><inline classes="std std-ref">get_seamless_image_3d</inline></reference>(width: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, height: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, depth: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, invert: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = false, skirt: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> = 0.1, normalize: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = true) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="方法说明">
            <title>方法说明</title>
            <target refid="class-noise-method-get-image"></target>
            <paragraph classes="classref-method" ids="class-noise-method-get-image" names="class_noise_method_get_image"><reference internal="True" refuri="class_image#class-image"><inline classes="std std-ref">Image</inline></reference> <strong>get_image</strong>(width: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, height: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, invert: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = false, in_3d_space: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = false, normalize: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = true) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-noise-method-get-image"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回包含 2D 噪声值的 <reference internal="True" refuri="class_image#class-image"><inline classes="std std-ref">Image</inline></reference>。</paragraph>
            <paragraph><strong>注意：</strong><literal>normalize</literal> 为 <literal>false</literal> 时，默认实现要求噪声生成器返回 <literal>-1.0</literal> 到 <literal>1.0</literal> 之间的值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-noise-method-get-image-3d"></target>
            <paragraph classes="classref-method" ids="class-noise-method-get-image-3d" names="class_noise_method_get_image_3d"><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_image#class-image"><inline classes="std std-ref">Image</inline></reference>] <strong>get_image_3d</strong>(width: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, height: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, depth: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, invert: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = false, normalize: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = true) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-noise-method-get-image-3d"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回包含 3D 噪声值的 <reference internal="True" refuri="class_image#class-image"><inline classes="std std-ref">Image</inline></reference> 的 <reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>，用于 <reference internal="True" refuri="class_imagetexture3d#class-imagetexture3d-method-create"><inline classes="std std-ref">ImageTexture3D.create</inline></reference>。</paragraph>
            <paragraph><strong>注意：</strong><literal>normalize</literal> 为 <literal>false</literal> 时，默认实现要求噪声生成器返回 <literal>-1.0</literal> 到 <literal>1.0</literal> 之间的值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-noise-method-get-noise-1d"></target>
            <paragraph classes="classref-method" ids="class-noise-method-get-noise-1d" names="class_noise_method_get_noise_1d"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_noise_1d</strong>(x: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-noise-method-get-noise-1d"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回给定 (x) 坐标处的 1D 噪声值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-noise-method-get-noise-2d"></target>
            <paragraph classes="classref-method" ids="class-noise-method-get-noise-2d" names="class_noise_method_get_noise_2d"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_noise_2d</strong>(x: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>, y: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-noise-method-get-noise-2d"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回给定位置处的 2D 噪声值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-noise-method-get-noise-2dv"></target>
            <paragraph classes="classref-method" ids="class-noise-method-get-noise-2dv" names="class_noise_method_get_noise_2dv"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_noise_2dv</strong>(v: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-noise-method-get-noise-2dv"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回给定位置处的 2D 噪声值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-noise-method-get-noise-3d"></target>
            <paragraph classes="classref-method" ids="class-noise-method-get-noise-3d" names="class_noise_method_get_noise_3d"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_noise_3d</strong>(x: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>, y: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>, z: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-noise-method-get-noise-3d"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回给定位置处的 3D 噪声值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-noise-method-get-noise-3dv"></target>
            <paragraph classes="classref-method" ids="class-noise-method-get-noise-3dv" names="class_noise_method_get_noise_3dv"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_noise_3dv</strong>(v: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-noise-method-get-noise-3dv"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回给定位置处的 3D 噪声值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-noise-method-get-seamless-image"></target>
            <paragraph classes="classref-method" ids="class-noise-method-get-seamless-image" names="class_noise_method_get_seamless_image"><reference internal="True" refuri="class_image#class-image"><inline classes="std std-ref">Image</inline></reference> <strong>get_seamless_image</strong>(width: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, height: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, invert: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = false, in_3d_space: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = false, skirt: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> = 0.1, normalize: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = true) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-noise-method-get-seamless-image"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回包含无缝 2D 噪声值的 <reference internal="True" refuri="class_image#class-image"><inline classes="std std-ref">Image</inline></reference>。</paragraph>
            <paragraph><strong>注意：</strong><literal>normalize</literal> 为 <literal>false</literal> 时，默认实现要求噪声生成器返回 <literal>-1.0</literal> 到 <literal>1.0</literal> 之间的值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-noise-method-get-seamless-image-3d"></target>
            <paragraph classes="classref-method" ids="class-noise-method-get-seamless-image-3d" names="class_noise_method_get_seamless_image_3d"><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_image#class-image"><inline classes="std std-ref">Image</inline></reference>] <strong>get_seamless_image_3d</strong>(width: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, height: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, depth: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, invert: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = false, skirt: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> = 0.1, normalize: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = true) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-noise-method-get-seamless-image-3d"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回包含无缝 3D 噪声值的 <reference internal="True" refuri="class_image#class-image"><inline classes="std std-ref">Image</inline></reference> 的 <reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>，用于 <reference internal="True" refuri="class_imagetexture3d#class-imagetexture3d-method-create"><inline classes="std std-ref">ImageTexture3D.create</inline></reference>。</paragraph>
            <paragraph><strong>注意：</strong><literal>normalize</literal> 为 <literal>false</literal> 时，默认实现要求噪声生成器返回 <literal>-1.0</literal> 到 <literal>1.0</literal> 之间的值。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效运算符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列位标志构成位掩码的整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

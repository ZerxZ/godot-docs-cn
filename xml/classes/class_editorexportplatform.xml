<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_editorexportplatform.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/EditorExportPlatform.xml.</comment>
    <target refid="class-editorexportplatform"></target>
    <section ids="editorexportplatform class-editorexportplatform" names="editorexportplatform class_editorexportplatform">
        <title>EditorExportPlatform</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph><strong>派生：</strong> <reference internal="True" refuri="class_editorexportplatformandroid#class-editorexportplatformandroid"><inline classes="std std-ref">EditorExportPlatformAndroid</inline></reference>, <reference internal="True" refuri="class_editorexportplatformios#class-editorexportplatformios"><inline classes="std std-ref">EditorExportPlatformIOS</inline></reference>, <reference internal="True" refuri="class_editorexportplatformmacos#class-editorexportplatformmacos"><inline classes="std std-ref">EditorExportPlatformMacOS</inline></reference>, <reference internal="True" refuri="class_editorexportplatformpc#class-editorexportplatformpc"><inline classes="std std-ref">EditorExportPlatformPC</inline></reference>, <reference internal="True" refuri="class_editorexportplatformweb#class-editorexportplatformweb"><inline classes="std std-ref">EditorExportPlatformWeb</inline></reference></paragraph>
        <paragraph>标识一个支持的导出平台，并在内部提供导出到该平台的功能。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>基础资源，提供从编辑器将项目的发布构建导出到平台的功能。存储特定于平台的元数据，例如平台的名称和支持的功能，并执行项目、PCK 文件和 ZIP 文件的导出。使用在项目导出时提供的平台导出模板。</paragraph>
            <paragraph>在 <reference internal="True" refuri="class_editorexportplugin#class-editorexportplugin"><inline classes="std std-ref">EditorExportPlugin</inline></reference> 的脚本中用于配置特定于平台的场景和资源的定制。有关详细信息，请参阅 <reference internal="True" refuri="class_editorexportplugin#class-editorexportplugin-private-method-begin-customize-scenes"><inline classes="std std-ref">EditorExportPlugin._begin_customize_scenes</inline></reference> 和 <reference internal="True" refuri="class_editorexportplugin#class-editorexportplugin-private-method-begin-customize-resources"><inline classes="std std-ref">EditorExportPlugin._begin_customize_resources</inline></reference>。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference name="$DOCS_URL/tutorials/platform/consoles.html" refuri="ConsolesupportinGodot">$DOCS_URL/tutorials/platform/consoles.html</reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="29"></colspec>
                    <colspec colwidth="87"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorexportplatform-method-get-os-name"><inline classes="std std-ref">get_os_name</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="方法说明">
            <title>方法说明</title>
            <target refid="class-editorexportplatform-method-get-os-name"></target>
            <paragraph classes="classref-method" ids="class-editorexportplatform-method-get-os-name" names="class_editorexportplatform_method_get_os_name"><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>get_os_name</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>以友好字符串的形式，返回由该 <strong>EditorExportPlatform</strong> 类处理的导出操作系统的名称。可能的返回值为 <literal>Windows</literal>、<literal>Linux</literal>、<literal>macOS</literal>、<literal>Android</literal>、<literal>iOS</literal>、和 <literal>Web</literal>。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，所以可以直接使用类名调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_lightmapgidata.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/LightmapGIData.xml.</comment>
    <target refid="class-lightmapgidata"></target>
    <section ids="lightmapgidata class-lightmapgidata" names="lightmapgidata class_lightmapgidata">
        <title>LightmapGIData</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>包含用于 <reference internal="True" refuri="class_lightmapgi#class-lightmapgi"><inline classes="std std-ref">LightmapGI</inline></reference> 的烘焙光照贴图和动态对象探测数据。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph><strong>LightmapGIData</strong> 包含用于 <reference internal="True" refuri="class_lightmapgi#class-lightmapgi"><inline classes="std std-ref">LightmapGI</inline></reference> 的烘焙光照贴图和动态对象探测数据。在 <reference internal="True" refuri="class_lightmapgi#class-lightmapgi"><inline classes="std std-ref">LightmapGI</inline></reference> 中每当光照贴图被烘焙时都会替换它。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="47"></colspec>
                    <colspec colwidth="75"></colspec>
                    <colspec colwidth="8"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texturelayered#class-texturelayered"><inline classes="std std-ref">TextureLayered</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-lightmapgidata-property-light-texture"><inline classes="std std-ref">light_texture</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texturelayered#class-texturelayered"><inline classes="std std-ref">TextureLayered[]</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-lightmapgidata-property-lightmap-textures"><inline classes="std std-ref">lightmap_textures</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>[]</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="33"></colspec>
                    <colspec colwidth="211"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-lightmapgidata-method-add-user"><inline classes="std std-ref">add_user</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> path, <reference internal="True" refuri="class_rect2#class-rect2"><inline classes="std std-ref">Rect2</inline></reference> uv_scale, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> slice_index, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> sub_instance <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-lightmapgidata-method-clear-users"><inline classes="std std-ref">clear_users</inline></reference> <strong>(</strong> <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-lightmapgidata-method-get-user-count"><inline classes="std std-ref">get_user_count</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-lightmapgidata-method-get-user-path"><inline classes="std std-ref">get_user_path</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> user_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-lightmapgidata-method-is-using-spherical-harmonics"><inline classes="std std-ref">is_using_spherical_harmonics</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-lightmapgidata-method-set-uses-spherical-harmonics"><inline classes="std std-ref">set_uses_spherical_harmonics</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> uses_spherical_harmonics <strong>)</strong></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="属性说明">
            <title>属性说明</title>
            <target refid="class-lightmapgidata-property-light-texture"></target>
            <paragraph classes="classref-property" ids="class-lightmapgidata-property-light-texture" names="class_lightmapgidata_property_light_texture"><reference internal="True" refuri="class_texturelayered#class-texturelayered"><inline classes="std std-ref">TextureLayered</inline></reference> <strong>light_texture</strong></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_light_texture</strong> <strong>(</strong> <reference internal="True" refuri="class_texturelayered#class-texturelayered"><inline classes="std std-ref">TextureLayered</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_texturelayered#class-texturelayered"><inline classes="std std-ref">TextureLayered</inline></reference> <strong>get_light_texture</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>由光照贴图器生成的光照贴图图集纹理。</paragraph>
            <paragraph><emphasis>已弃用。</emphasis>光照贴图图集现在可以有多个纹理。请参阅 <reference internal="True" refid="class-lightmapgidata-property-lightmap-textures"><inline classes="std std-ref">lightmap_textures</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-lightmapgidata-property-lightmap-textures"></target>
            <paragraph classes="classref-property" ids="class-lightmapgidata-property-lightmap-textures" names="class_lightmapgidata_property_lightmap_textures"><reference internal="True" refuri="class_texturelayered#class-texturelayered"><inline classes="std std-ref">TextureLayered[]</inline></reference> <strong>lightmap_textures</strong> = <literal>[]</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_lightmap_textures</strong> <strong>(</strong> <reference internal="True" refuri="class_texturelayered#class-texturelayered"><inline classes="std std-ref">TextureLayered[]</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_texturelayered#class-texturelayered"><inline classes="std std-ref">TextureLayered[]</inline></reference> <strong>get_lightmap_textures</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>由光照贴图器生成的光照贴图图集纹理。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="方法说明">
            <title>方法说明</title>
            <target refid="class-lightmapgidata-method-add-user"></target>
            <paragraph classes="classref-method" ids="class-lightmapgidata-method-add-user" names="class_lightmapgidata_method_add_user">void <strong>add_user</strong> <strong>(</strong> <reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> path, <reference internal="True" refuri="class_rect2#class-rect2"><inline classes="std std-ref">Rect2</inline></reference> uv_scale, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> slice_index, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> sub_instance <strong>)</strong></paragraph>
            <paragraph>添加一个在该 <strong>LightmapGIData</strong> 中被视为已烘焙的对象。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-lightmapgidata-method-clear-users"></target>
            <paragraph classes="classref-method" ids="class-lightmapgidata-method-clear-users" names="class_lightmapgidata_method_clear_users">void <strong>clear_users</strong> <strong>(</strong> <strong>)</strong></paragraph>
            <paragraph>清除在该 <strong>LightmapGIData</strong> 中被视为已烘焙的所有对象。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-lightmapgidata-method-get-user-count"></target>
            <paragraph classes="classref-method" ids="class-lightmapgidata-method-get-user-count" names="class_lightmapgidata_method_get_user_count"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_user_count</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回在该 <strong>LightmapGIData</strong> 中被视为烘焙的对象的数量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-lightmapgidata-method-get-user-path"></target>
            <paragraph classes="classref-method" ids="class-lightmapgidata-method-get-user-path" names="class_lightmapgidata_method_get_user_path"><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> <strong>get_user_path</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> user_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回索引 <literal>user_idx</literal> 处烘焙对象的 <reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-lightmapgidata-method-is-using-spherical-harmonics"></target>
            <paragraph classes="classref-method" ids="class-lightmapgidata-method-is-using-spherical-harmonics" names="class_lightmapgidata_method_is_using_spherical_harmonics"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_using_spherical_harmonics</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>如果为 <literal>true</literal>，则光照贴图使用定向信息烘焙。另请参阅 <reference internal="True" refuri="class_lightmapgi#class-lightmapgi-property-directional"><inline classes="std std-ref">LightmapGI.directional</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-lightmapgidata-method-set-uses-spherical-harmonics"></target>
            <paragraph classes="classref-method" ids="class-lightmapgidata-method-set-uses-spherical-harmonics" names="class_lightmapgidata_method_set_uses_spherical_harmonics">void <strong>set_uses_spherical_harmonics</strong> <strong>(</strong> <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> uses_spherical_harmonics <strong>)</strong></paragraph>
            <paragraph>如果 <literal>uses_spherical_harmonics</literal> 为 <literal>true</literal>，则告诉引擎将光照贴图数据视为使用了定向信息烘焙的。</paragraph>
            <paragraph><strong>注意：</strong>在已烘焙的光照贴图上更改此值不会导致再次烘焙它们。这意味着在再次烘焙光照贴图之前，材质外观将看起来不正确，在这种情况下，此处设置的值将被丢弃，因为整个 <strong>LightmapGIData</strong> 资源被光照贴图器替换。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，所以可以直接使用类名调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

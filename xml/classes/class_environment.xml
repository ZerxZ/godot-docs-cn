<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_environment.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/Environment.xml.</comment>
    <target refid="class-environment"></target>
    <section ids="environment class-environment" names="environment class_environment">
        <title>Environment</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>定义渲染选项的资源，用于环境节点（例如 <reference internal="True" refuri="class_worldenvironment#class-worldenvironment"><inline classes="std std-ref">WorldEnvironment</inline></reference>）。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>定义环境操作（例如背景 <reference internal="True" refuri="class_sky#class-sky"><inline classes="std std-ref">Sky</inline></reference> 或 <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference>、环境光、雾、景深等）的资源，用于环境节点（例如 <reference internal="True" refuri="class_worldenvironment#class-worldenvironment"><inline classes="std std-ref">WorldEnvironment</inline></reference>）。这些参数会对场景的最终渲染造成影响。操作的顺序为：</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>景深模糊</paragraph>
                </list_item>
                <list_item>
                    <paragraph>辉光</paragraph>
                </list_item>
                <list_item>
                    <paragraph>色调映射（自动曝光）</paragraph>
                </list_item>
                <list_item>
                    <paragraph>调整</paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference internal="True" refuri="../tutorials/3d/environment_and_post_processing"><inline classes="doc">环境和后期处理</inline></reference></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="../tutorials/3d/high_dynamic_range"><inline classes="doc">高动态范围照明</inline></reference></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference name="3D 材质测试演示" refuri="https://godotengine.org/asset-library/asset/2742">3D 材质测试演示</reference></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference name="第三人称射击（TPS）演示" refuri="https://godotengine.org/asset-library/asset/2710">第三人称射击（TPS）演示</reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="60"></colspec>
                    <colspec colwidth="126"></colspec>
                    <colspec colwidth="35"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-adjustment-brightness"><inline classes="std std-ref">adjustment_brightness</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture#class-texture"><inline classes="std std-ref">Texture</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-adjustment-color-correction"><inline classes="std std-ref">adjustment_color_correction</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-adjustment-contrast"><inline classes="std std-ref">adjustment_contrast</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-adjustment-enabled"><inline classes="std std-ref">adjustment_enabled</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-adjustment-saturation"><inline classes="std std-ref">adjustment_saturation</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-ambient-light-color"><inline classes="std std-ref">ambient_light_color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Color(0, 0, 0, 1)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-ambient-light-energy"><inline classes="std std-ref">ambient_light_energy</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-ambient-light-sky-contribution"><inline classes="std std-ref">ambient_light_sky_contribution</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-environment-ambientsource"><inline classes="std std-ref">AmbientSource</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-ambient-light-source"><inline classes="std std-ref">ambient_light_source</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-background-camera-feed-id"><inline classes="std std-ref">background_camera_feed_id</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-background-canvas-max-layer"><inline classes="std std-ref">background_canvas_max_layer</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-background-color"><inline classes="std std-ref">background_color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Color(0, 0, 0, 1)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-background-energy-multiplier"><inline classes="std std-ref">background_energy_multiplier</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-background-intensity"><inline classes="std std-ref">background_intensity</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>30000.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-environment-bgmode"><inline classes="std std-ref">BGMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-background-mode"><inline classes="std std-ref">background_mode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-fog-aerial-perspective"><inline classes="std std-ref">fog_aerial_perspective</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-fog-density"><inline classes="std std-ref">fog_density</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.01</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-fog-depth-begin"><inline classes="std std-ref">fog_depth_begin</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>10.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-fog-depth-curve"><inline classes="std std-ref">fog_depth_curve</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-fog-depth-end"><inline classes="std std-ref">fog_depth_end</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>100.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-fog-enabled"><inline classes="std std-ref">fog_enabled</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-fog-height"><inline classes="std std-ref">fog_height</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-fog-height-density"><inline classes="std std-ref">fog_height_density</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-fog-light-color"><inline classes="std std-ref">fog_light_color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Color(0.518, 0.553, 0.608, 1)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-fog-light-energy"><inline classes="std std-ref">fog_light_energy</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-environment-fogmode"><inline classes="std std-ref">FogMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-fog-mode"><inline classes="std std-ref">fog_mode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-fog-sky-affect"><inline classes="std std-ref">fog_sky_affect</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-fog-sun-scatter"><inline classes="std std-ref">fog_sun_scatter</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-environment-glowblendmode"><inline classes="std std-ref">GlowBlendMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-glow-blend-mode"><inline classes="std std-ref">glow_blend_mode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>2</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-glow-bloom"><inline classes="std std-ref">glow_bloom</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-glow-enabled"><inline classes="std std-ref">glow_enabled</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-glow-hdr-luminance-cap"><inline classes="std std-ref">glow_hdr_luminance_cap</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>12.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-glow-hdr-scale"><inline classes="std std-ref">glow_hdr_scale</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>2.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-glow-hdr-threshold"><inline classes="std std-ref">glow_hdr_threshold</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-glow-intensity"><inline classes="std std-ref">glow_intensity</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.8</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-glow-levels-1"><inline classes="std std-ref">glow_levels/1</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-glow-levels-2"><inline classes="std std-ref">glow_levels/2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-glow-levels-3"><inline classes="std std-ref">glow_levels/3</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-glow-levels-4"><inline classes="std std-ref">glow_levels/4</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-glow-levels-5"><inline classes="std std-ref">glow_levels/5</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-glow-levels-6"><inline classes="std std-ref">glow_levels/6</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-glow-levels-7"><inline classes="std std-ref">glow_levels/7</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture#class-texture"><inline classes="std std-ref">Texture</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-glow-map"><inline classes="std std-ref">glow_map</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-glow-map-strength"><inline classes="std std-ref">glow_map_strength</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.8</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-glow-mix"><inline classes="std std-ref">glow_mix</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.05</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-glow-normalized"><inline classes="std std-ref">glow_normalized</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-glow-strength"><inline classes="std std-ref">glow_strength</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-environment-reflectionsource"><inline classes="std std-ref">ReflectionSource</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-reflected-light-source"><inline classes="std std-ref">reflected_light_source</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-sdfgi-bounce-feedback"><inline classes="std std-ref">sdfgi_bounce_feedback</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.5</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-sdfgi-cascade0-distance"><inline classes="std std-ref">sdfgi_cascade0_distance</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>12.8</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-sdfgi-cascades"><inline classes="std std-ref">sdfgi_cascades</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>4</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-sdfgi-enabled"><inline classes="std std-ref">sdfgi_enabled</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-sdfgi-energy"><inline classes="std std-ref">sdfgi_energy</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-sdfgi-max-distance"><inline classes="std std-ref">sdfgi_max_distance</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>204.8</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-sdfgi-min-cell-size"><inline classes="std std-ref">sdfgi_min_cell_size</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.2</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-sdfgi-normal-bias"><inline classes="std std-ref">sdfgi_normal_bias</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-sdfgi-probe-bias"><inline classes="std std-ref">sdfgi_probe_bias</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-sdfgi-read-sky-light"><inline classes="std std-ref">sdfgi_read_sky_light</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-sdfgi-use-occlusion"><inline classes="std std-ref">sdfgi_use_occlusion</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-environment-sdfgiyscale"><inline classes="std std-ref">SDFGIYScale</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-sdfgi-y-scale"><inline classes="std std-ref">sdfgi_y_scale</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_sky#class-sky"><inline classes="std std-ref">Sky</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-sky"><inline classes="std std-ref">sky</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-sky-custom-fov"><inline classes="std std-ref">sky_custom_fov</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-sky-rotation"><inline classes="std std-ref">sky_rotation</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Vector3(0, 0, 0)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-ssao-ao-channel-affect"><inline classes="std std-ref">ssao_ao_channel_affect</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-ssao-detail"><inline classes="std std-ref">ssao_detail</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.5</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-ssao-enabled"><inline classes="std std-ref">ssao_enabled</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-ssao-horizon"><inline classes="std std-ref">ssao_horizon</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.06</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-ssao-intensity"><inline classes="std std-ref">ssao_intensity</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>2.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-ssao-light-affect"><inline classes="std std-ref">ssao_light_affect</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-ssao-power"><inline classes="std std-ref">ssao_power</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.5</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-ssao-radius"><inline classes="std std-ref">ssao_radius</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-ssao-sharpness"><inline classes="std std-ref">ssao_sharpness</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.98</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-ssil-enabled"><inline classes="std std-ref">ssil_enabled</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-ssil-intensity"><inline classes="std std-ref">ssil_intensity</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-ssil-normal-rejection"><inline classes="std std-ref">ssil_normal_rejection</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-ssil-radius"><inline classes="std std-ref">ssil_radius</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>5.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-ssil-sharpness"><inline classes="std std-ref">ssil_sharpness</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.98</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-ssr-depth-tolerance"><inline classes="std std-ref">ssr_depth_tolerance</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.2</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-ssr-enabled"><inline classes="std std-ref">ssr_enabled</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-ssr-fade-in"><inline classes="std std-ref">ssr_fade_in</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.15</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-ssr-fade-out"><inline classes="std std-ref">ssr_fade_out</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>2.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-ssr-max-steps"><inline classes="std std-ref">ssr_max_steps</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>64</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-tonemap-exposure"><inline classes="std std-ref">tonemap_exposure</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-environment-tonemapper"><inline classes="std std-ref">ToneMapper</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-tonemap-mode"><inline classes="std std-ref">tonemap_mode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-tonemap-white"><inline classes="std std-ref">tonemap_white</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-volumetric-fog-albedo"><inline classes="std std-ref">volumetric_fog_albedo</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Color(1, 1, 1, 1)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-volumetric-fog-ambient-inject"><inline classes="std std-ref">volumetric_fog_ambient_inject</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-volumetric-fog-anisotropy"><inline classes="std std-ref">volumetric_fog_anisotropy</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.2</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-volumetric-fog-density"><inline classes="std std-ref">volumetric_fog_density</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.05</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-volumetric-fog-detail-spread"><inline classes="std std-ref">volumetric_fog_detail_spread</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>2.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-volumetric-fog-emission"><inline classes="std std-ref">volumetric_fog_emission</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Color(0, 0, 0, 1)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-volumetric-fog-emission-energy"><inline classes="std std-ref">volumetric_fog_emission_energy</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-volumetric-fog-enabled"><inline classes="std std-ref">volumetric_fog_enabled</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-volumetric-fog-gi-inject"><inline classes="std std-ref">volumetric_fog_gi_inject</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-volumetric-fog-length"><inline classes="std std-ref">volumetric_fog_length</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>64.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-volumetric-fog-sky-affect"><inline classes="std std-ref">volumetric_fog_sky_affect</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-volumetric-fog-temporal-reprojection-amount"><inline classes="std std-ref">volumetric_fog_temporal_reprojection_amount</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.9</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-property-volumetric-fog-temporal-reprojection-enabled"><inline classes="std std-ref">volumetric_fog_temporal_reprojection_enabled</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id4" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="27"></colspec>
                    <colspec colwidth="138"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-method-get-glow-level"><inline classes="std std-ref">get_glow_level</inline></reference>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-environment-method-set-glow-level"><inline classes="std std-ref">set_glow_level</inline></reference>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, intensity: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="枚举">
            <title>枚举</title>
            <target refid="enum-environment-bgmode"></target>
            <paragraph classes="classref-enumeration" ids="enum-environment-bgmode" names="enum_environment_bgmode">enum <strong>BGMode</strong>: <reference internal="True" refid="enum-environment-bgmode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-environment-constant-bg-clear-color"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-environment-constant-bg-clear-color" names="class_environment_constant_bg_clear_color"><reference internal="True" refid="enum-environment-bgmode"><inline classes="std std-ref">BGMode</inline></reference> <strong>BG_CLEAR_COLOR</strong> = <literal>0</literal></paragraph>
            <paragraph>使用 <reference internal="True" refuri="class_projectsettings#class-projectsettings-property-rendering-environment-defaults-default-clear-color"><inline classes="std std-ref">ProjectSettings.rendering/environment/defaults/default_clear_color</inline></reference> 中定义的清除颜色来清除背景。</paragraph>
            <target refid="class-environment-constant-bg-color"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-environment-constant-bg-color" names="class_environment_constant_bg_color"><reference internal="True" refid="enum-environment-bgmode"><inline classes="std std-ref">BGMode</inline></reference> <strong>BG_COLOR</strong> = <literal>1</literal></paragraph>
            <paragraph>使用自定义的清除颜色来清除背景。</paragraph>
            <target refid="class-environment-constant-bg-sky"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-environment-constant-bg-sky" names="class_environment_constant_bg_sky"><reference internal="True" refid="enum-environment-bgmode"><inline classes="std std-ref">BGMode</inline></reference> <strong>BG_SKY</strong> = <literal>2</literal></paragraph>
            <paragraph>在背景中显示用户自定义的天空。</paragraph>
            <target refid="class-environment-constant-bg-canvas"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-environment-constant-bg-canvas" names="class_environment_constant_bg_canvas"><reference internal="True" refid="enum-environment-bgmode"><inline classes="std std-ref">BGMode</inline></reference> <strong>BG_CANVAS</strong> = <literal>3</literal></paragraph>
            <paragraph>在背景中显示 <reference internal="True" refuri="class_canvaslayer#class-canvaslayer"><inline classes="std std-ref">CanvasLayer</inline></reference>。</paragraph>
            <target refid="class-environment-constant-bg-keep"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-environment-constant-bg-keep" names="class_environment_constant_bg_keep"><reference internal="True" refid="enum-environment-bgmode"><inline classes="std std-ref">BGMode</inline></reference> <strong>BG_KEEP</strong> = <literal>4</literal></paragraph>
            <paragraph>在屏幕上保留在背景中绘制的每个像素。这是最快的背景模式，但它只能安全地用在完全室内的场景（没有可见的天空或天空反射）。如果在背景可见的场景中启用，则移动相机时，将看到“鬼影踪迹”伪影。</paragraph>
            <target refid="class-environment-constant-bg-camera-feed"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-environment-constant-bg-camera-feed" names="class_environment_constant_bg_camera_feed"><reference internal="True" refid="enum-environment-bgmode"><inline classes="std std-ref">BGMode</inline></reference> <strong>BG_CAMERA_FEED</strong> = <literal>5</literal></paragraph>
            <paragraph>在背景中显示相机源。</paragraph>
            <target refid="class-environment-constant-bg-max"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-environment-constant-bg-max" names="class_environment_constant_bg_max"><reference internal="True" refid="enum-environment-bgmode"><inline classes="std std-ref">BGMode</inline></reference> <strong>BG_MAX</strong> = <literal>6</literal></paragraph>
            <paragraph>代表 <reference internal="True" refid="enum-environment-bgmode"><inline classes="std std-ref">BGMode</inline></reference> 枚举的大小。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-environment-ambientsource"></target>
            <paragraph classes="classref-enumeration" ids="enum-environment-ambientsource" names="enum_environment_ambientsource">enum <strong>AmbientSource</strong>: <reference internal="True" refid="enum-environment-ambientsource"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-environment-constant-ambient-source-bg"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-environment-constant-ambient-source-bg" names="class_environment_constant_ambient_source_bg"><reference internal="True" refid="enum-environment-ambientsource"><inline classes="std std-ref">AmbientSource</inline></reference> <strong>AMBIENT_SOURCE_BG</strong> = <literal>0</literal></paragraph>
            <paragraph>从指定为背景的任何来源收集环境光。</paragraph>
            <target refid="class-environment-constant-ambient-source-disabled"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-environment-constant-ambient-source-disabled" names="class_environment_constant_ambient_source_disabled"><reference internal="True" refid="enum-environment-ambientsource"><inline classes="std std-ref">AmbientSource</inline></reference> <strong>AMBIENT_SOURCE_DISABLED</strong> = <literal>1</literal></paragraph>
            <paragraph>禁用环境光。这比 <reference internal="True" refid="class-environment-constant-ambient-source-sky"><inline classes="std std-ref">AMBIENT_SOURCE_SKY</inline></reference> 提供了轻微的性能提升。</paragraph>
            <target refid="class-environment-constant-ambient-source-color"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-environment-constant-ambient-source-color" names="class_environment_constant_ambient_source_color"><reference internal="True" refid="enum-environment-ambientsource"><inline classes="std std-ref">AmbientSource</inline></reference> <strong>AMBIENT_SOURCE_COLOR</strong> = <literal>2</literal></paragraph>
            <paragraph>为环境光指定特定的 <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference>。与 <reference internal="True" refid="class-environment-constant-ambient-source-sky"><inline classes="std std-ref">AMBIENT_SOURCE_SKY</inline></reference> 相比，这提供了轻微的性能提升。</paragraph>
            <target refid="class-environment-constant-ambient-source-sky"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-environment-constant-ambient-source-sky" names="class_environment_constant_ambient_source_sky"><reference internal="True" refid="enum-environment-ambientsource"><inline classes="std std-ref">AmbientSource</inline></reference> <strong>AMBIENT_SOURCE_SKY</strong> = <literal>3</literal></paragraph>
            <paragraph>无论背景如何，都从 <reference internal="True" refuri="class_sky#class-sky"><inline classes="std std-ref">Sky</inline></reference> 收集环境光。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-environment-reflectionsource"></target>
            <paragraph classes="classref-enumeration" ids="enum-environment-reflectionsource" names="enum_environment_reflectionsource">enum <strong>ReflectionSource</strong>: <reference internal="True" refid="enum-environment-reflectionsource"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-environment-constant-reflection-source-bg"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-environment-constant-reflection-source-bg" names="class_environment_constant_reflection_source_bg"><reference internal="True" refid="enum-environment-reflectionsource"><inline classes="std std-ref">ReflectionSource</inline></reference> <strong>REFLECTION_SOURCE_BG</strong> = <literal>0</literal></paragraph>
            <paragraph>使用背景进行反射。</paragraph>
            <target refid="class-environment-constant-reflection-source-disabled"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-environment-constant-reflection-source-disabled" names="class_environment_constant_reflection_source_disabled"><reference internal="True" refid="enum-environment-reflectionsource"><inline classes="std std-ref">ReflectionSource</inline></reference> <strong>REFLECTION_SOURCE_DISABLED</strong> = <literal>1</literal></paragraph>
            <paragraph>禁用反射。与其他选项相比，这提供了轻微的性能提升。</paragraph>
            <target refid="class-environment-constant-reflection-source-sky"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-environment-constant-reflection-source-sky" names="class_environment_constant_reflection_source_sky"><reference internal="True" refid="enum-environment-reflectionsource"><inline classes="std std-ref">ReflectionSource</inline></reference> <strong>REFLECTION_SOURCE_SKY</strong> = <literal>2</literal></paragraph>
            <paragraph>无论背景如何，都使用 <reference internal="True" refuri="class_sky#class-sky"><inline classes="std std-ref">Sky</inline></reference> 进行反射。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-environment-tonemapper"></target>
            <paragraph classes="classref-enumeration" ids="enum-environment-tonemapper" names="enum_environment_tonemapper">enum <strong>ToneMapper</strong>: <reference internal="True" refid="enum-environment-tonemapper"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-environment-constant-tone-mapper-linear"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-environment-constant-tone-mapper-linear" names="class_environment_constant_tone_mapper_linear"><reference internal="True" refid="enum-environment-tonemapper"><inline classes="std std-ref">ToneMapper</inline></reference> <strong>TONE_MAPPER_LINEAR</strong> = <literal>0</literal></paragraph>
            <paragraph>线性色调映射运算子。读取线性数据并将其原样传递。较亮的光照会导致过曝、输出的颜色中会有可见的截断。</paragraph>
            <target refid="class-environment-constant-tone-mapper-reinhardt"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-environment-constant-tone-mapper-reinhardt" names="class_environment_constant_tone_mapper_reinhardt"><reference internal="True" refid="enum-environment-tonemapper"><inline classes="std std-ref">ToneMapper</inline></reference> <strong>TONE_MAPPER_REINHARDT</strong> = <literal>1</literal></paragraph>
            <paragraph>Reinhardt 色调映射运算子。对渲染后的像素颜色进行调整，使用的是这个公式：<literal>color = color / (1 + color)</literal>。可以避免对高光的截断，但最终的图像可能看上去有些寡淡。</paragraph>
            <target refid="class-environment-constant-tone-mapper-filmic"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-environment-constant-tone-mapper-filmic" names="class_environment_constant_tone_mapper_filmic"><reference internal="True" refid="enum-environment-tonemapper"><inline classes="std std-ref">ToneMapper</inline></reference> <strong>TONE_MAPPER_FILMIC</strong> = <literal>2</literal></paragraph>
            <paragraph>电影级色调映射器运算子。可以避免对高光处的截断，最终图像通常比 <reference internal="True" refid="class-environment-constant-tone-mapper-reinhardt"><inline classes="std std-ref">TONE_MAPPER_REINHARDT</inline></reference> 更鲜艳。</paragraph>
            <target refid="class-environment-constant-tone-mapper-aces"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-environment-constant-tone-mapper-aces" names="class_environment_constant_tone_mapper_aces"><reference internal="True" refid="enum-environment-tonemapper"><inline classes="std std-ref">ToneMapper</inline></reference> <strong>TONE_MAPPER_ACES</strong> = <literal>3</literal></paragraph>
            <paragraph>使用学院色彩编码系统（Academy Color Encoding System）色调映射器。ACES 比其他选项消耗略高，但对于较亮光照的处理更真实，越亮饱和度越低。ACES 的输出在对比度方面通常比 <reference internal="True" refid="class-environment-constant-tone-mapper-reinhardt"><inline classes="std std-ref">TONE_MAPPER_REINHARDT</inline></reference> 和 <reference internal="True" refid="class-environment-constant-tone-mapper-filmic"><inline classes="std std-ref">TONE_MAPPER_FILMIC</inline></reference> 更高。</paragraph>
            <paragraph><strong>注意：</strong>Godot 3.x 将该色调映射运算符称为“ACES Fitted”。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-environment-glowblendmode"></target>
            <paragraph classes="classref-enumeration" ids="enum-environment-glowblendmode" names="enum_environment_glowblendmode">enum <strong>GlowBlendMode</strong>: <reference internal="True" refid="enum-environment-glowblendmode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-environment-constant-glow-blend-mode-additive"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-environment-constant-glow-blend-mode-additive" names="class_environment_constant_glow_blend_mode_additive"><reference internal="True" refid="enum-environment-glowblendmode"><inline classes="std std-ref">GlowBlendMode</inline></reference> <strong>GLOW_BLEND_MODE_ADDITIVE</strong> = <literal>0</literal></paragraph>
            <paragraph>添加辉光混合模式。主要用于粒子、辉光（泛光）、镜头眩光、亮源。</paragraph>
            <target refid="class-environment-constant-glow-blend-mode-screen"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-environment-constant-glow-blend-mode-screen" names="class_environment_constant_glow_blend_mode_screen"><reference internal="True" refid="enum-environment-glowblendmode"><inline classes="std std-ref">GlowBlendMode</inline></reference> <strong>GLOW_BLEND_MODE_SCREEN</strong> = <literal>1</literal></paragraph>
            <paragraph>滤色辉光混合模式。增加亮度，经常与泛光一起使用。</paragraph>
            <target refid="class-environment-constant-glow-blend-mode-softlight"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-environment-constant-glow-blend-mode-softlight" names="class_environment_constant_glow_blend_mode_softlight"><reference internal="True" refid="enum-environment-glowblendmode"><inline classes="std std-ref">GlowBlendMode</inline></reference> <strong>GLOW_BLEND_MODE_SOFTLIGHT</strong> = <literal>2</literal></paragraph>
            <paragraph>柔光辉光混合模式。修改对比度，曝光阴影和高光（高质量泛光）。</paragraph>
            <target refid="class-environment-constant-glow-blend-mode-replace"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-environment-constant-glow-blend-mode-replace" names="class_environment_constant_glow_blend_mode_replace"><reference internal="True" refid="enum-environment-glowblendmode"><inline classes="std std-ref">GlowBlendMode</inline></reference> <strong>GLOW_BLEND_MODE_REPLACE</strong> = <literal>3</literal></paragraph>
            <paragraph>替换辉光混合模式。用辉光值替换所有像素的颜色。这可以通过调整辉光参数来模拟全屏模糊效果，使其与原始图像的亮度相匹配。</paragraph>
            <target refid="class-environment-constant-glow-blend-mode-mix"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-environment-constant-glow-blend-mode-mix" names="class_environment_constant_glow_blend_mode_mix"><reference internal="True" refid="enum-environment-glowblendmode"><inline classes="std std-ref">GlowBlendMode</inline></reference> <strong>GLOW_BLEND_MODE_MIX</strong> = <literal>4</literal></paragraph>
            <paragraph>将辉光与底层颜色混合，以避免在保持辉光效果的同时，尽可能多地增加亮度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-environment-fogmode"></target>
            <paragraph classes="classref-enumeration" ids="enum-environment-fogmode" names="enum_environment_fogmode">enum <strong>FogMode</strong>: <reference internal="True" refid="enum-environment-fogmode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-environment-constant-fog-mode-exponential"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-environment-constant-fog-mode-exponential" names="class_environment_constant_fog_mode_exponential"><reference internal="True" refid="enum-environment-fogmode"><inline classes="std std-ref">FogMode</inline></reference> <strong>FOG_MODE_EXPONENTIAL</strong> = <literal>0</literal></paragraph>
            <paragraph>使用主要由雾密度定义的基于物理的雾模型。</paragraph>
            <target refid="class-environment-constant-fog-mode-depth"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-environment-constant-fog-mode-depth" names="class_environment_constant_fog_mode_depth"><reference internal="True" refid="enum-environment-fogmode"><inline classes="std std-ref">FogMode</inline></reference> <strong>FOG_MODE_DEPTH</strong> = <literal>1</literal></paragraph>
            <paragraph>使用由开始位置和结束位置以及自定义曲线定义的简单雾模型。虽然在物理上并不准确，但当你需要更多的艺术控制时，该模型可能会很有用。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-environment-sdfgiyscale"></target>
            <paragraph classes="classref-enumeration" ids="enum-environment-sdfgiyscale" names="enum_environment_sdfgiyscale">enum <strong>SDFGIYScale</strong>: <reference internal="True" refid="enum-environment-sdfgiyscale"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-environment-constant-sdfgi-y-scale-50-percent"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-environment-constant-sdfgi-y-scale-50-percent" names="class_environment_constant_sdfgi_y_scale_50_percent"><reference internal="True" refid="enum-environment-sdfgiyscale"><inline classes="std std-ref">SDFGIYScale</inline></reference> <strong>SDFGI_Y_SCALE_50_PERCENT</strong> = <literal>0</literal></paragraph>
            <paragraph>在 Y（垂直）轴上对 SDFGI 使用 50% 的缩放。SDFGI 单元格将比它们的宽度短两倍。这允许提供更多的 GI 细节，并减少薄地板和天花板的漏光。这通常是垂直度不高的场景的最佳选择。</paragraph>
            <target refid="class-environment-constant-sdfgi-y-scale-75-percent"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-environment-constant-sdfgi-y-scale-75-percent" names="class_environment_constant_sdfgi_y_scale_75_percent"><reference internal="True" refid="enum-environment-sdfgiyscale"><inline classes="std std-ref">SDFGIYScale</inline></reference> <strong>SDFGI_Y_SCALE_75_PERCENT</strong> = <literal>1</literal></paragraph>
            <paragraph>在 Y（垂直）轴上为 SDFGI 使用 75% 的缩放。这是 50% 和 100% SDFGI Y 缩放之间的平衡。</paragraph>
            <target refid="class-environment-constant-sdfgi-y-scale-100-percent"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-environment-constant-sdfgi-y-scale-100-percent" names="class_environment_constant_sdfgi_y_scale_100_percent"><reference internal="True" refid="enum-environment-sdfgiyscale"><inline classes="std std-ref">SDFGIYScale</inline></reference> <strong>SDFGI_Y_SCALE_100_PERCENT</strong> = <literal>2</literal></paragraph>
            <paragraph>在 Y（垂直）轴上为 SDFGI 使用 100% 的缩放。SDFGI 单元格将与宽度一样高。这通常是高度垂直场景的最佳选择。不利之处在于，薄地板和天花板可能会导致漏光更加明显。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="属性说明">
            <title>属性说明</title>
            <target refid="class-environment-property-adjustment-brightness"></target>
            <paragraph classes="classref-property" ids="class-environment-property-adjustment-brightness" names="class_environment_property_adjustment_brightness"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>adjustment_brightness</strong> = <literal>1.0</literal> <reference internal="True" refid="class-environment-property-adjustment-brightness"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_adjustment_brightness</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_adjustment_brightness</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>渲染场景的全局亮度值。只有当 <reference internal="True" refid="class-environment-property-adjustment-enabled"><inline classes="std std-ref">adjustment_enabled</inline></reference> 为 <literal>true</literal> 时才有效。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-adjustment-color-correction"></target>
            <paragraph classes="classref-property" ids="class-environment-property-adjustment-color-correction" names="class_environment_property_adjustment_color_correction"><reference internal="True" refuri="class_texture#class-texture"><inline classes="std std-ref">Texture</inline></reference> <strong>adjustment_color_correction</strong> <reference internal="True" refid="class-environment-property-adjustment-color-correction"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_adjustment_color_correction</strong>(value: <reference internal="True" refuri="class_texture#class-texture"><inline classes="std std-ref">Texture</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_texture#class-texture"><inline classes="std std-ref">Texture</inline></reference> <strong>get_adjustment_color_correction</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>用于内置后处理颜色分级的 <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> 或 <reference internal="True" refuri="class_texture3d#class-texture3d"><inline classes="std std-ref">Texture3D</inline></reference> 查找表（LUT）。可以将 <reference internal="True" refuri="class_gradienttexture1d#class-gradienttexture1d"><inline classes="std std-ref">GradientTexture1D</inline></reference> 用于一维 LUT，或将 <reference internal="True" refuri="class_texture3d#class-texture3d"><inline classes="std std-ref">Texture3D</inline></reference> 用于更复杂的 LUT。仅当 <reference internal="True" refid="class-environment-property-adjustment-enabled"><inline classes="std std-ref">adjustment_enabled</inline></reference> 为 <literal>true</literal> 时有效。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-adjustment-contrast"></target>
            <paragraph classes="classref-property" ids="class-environment-property-adjustment-contrast" names="class_environment_property_adjustment_contrast"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>adjustment_contrast</strong> = <literal>1.0</literal> <reference internal="True" refid="class-environment-property-adjustment-contrast"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_adjustment_contrast</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_adjustment_contrast</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>渲染场景的全局对比度值（默认值为 1）。只有当 <reference internal="True" refid="class-environment-property-adjustment-enabled"><inline classes="std std-ref">adjustment_enabled</inline></reference> 为 <literal>true</literal> 时才有效。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-adjustment-enabled"></target>
            <paragraph classes="classref-property" ids="class-environment-property-adjustment-enabled" names="class_environment_property_adjustment_enabled"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>adjustment_enabled</strong> = <literal>false</literal> <reference internal="True" refid="class-environment-property-adjustment-enabled"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_adjustment_enabled</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_adjustment_enabled</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则启用该资源提供的 <literal>adjustment_*</literal> 属性。如果为 <literal>false</literal>，则对 <literal>adjustment_*</literal> 属性的修改将不会对渲染场景产生影响。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-adjustment-saturation"></target>
            <paragraph classes="classref-property" ids="class-environment-property-adjustment-saturation" names="class_environment_property_adjustment_saturation"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>adjustment_saturation</strong> = <literal>1.0</literal> <reference internal="True" refid="class-environment-property-adjustment-saturation"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_adjustment_saturation</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_adjustment_saturation</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>渲染场景的全局色彩饱和度值（默认值为 1）。只有在 <reference internal="True" refid="class-environment-property-adjustment-enabled"><inline classes="std std-ref">adjustment_enabled</inline></reference> 为 <literal>true</literal> 时才有效。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-ambient-light-color"></target>
            <paragraph classes="classref-property" ids="class-environment-property-ambient-light-color" names="class_environment_property_ambient_light_color"><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>ambient_light_color</strong> = <literal>Color(0, 0, 0, 1)</literal> <reference internal="True" refid="class-environment-property-ambient-light-color"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_ambient_light_color</strong>(value: <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>get_ambient_light_color</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>环境光的 <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference>。仅当 <reference internal="True" refid="class-environment-property-ambient-light-sky-contribution"><inline classes="std std-ref">ambient_light_sky_contribution</inline></reference> 低于 <literal>1.0</literal>（不包括）时，才有效。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-ambient-light-energy"></target>
            <paragraph classes="classref-property" ids="class-environment-property-ambient-light-energy" names="class_environment_property_ambient_light_energy"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>ambient_light_energy</strong> = <literal>1.0</literal> <reference internal="True" refid="class-environment-property-ambient-light-energy"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_ambient_light_energy</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_ambient_light_energy</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>环境光的能量。值越高，光线越强。仅当 <reference internal="True" refid="class-environment-property-ambient-light-sky-contribution"><inline classes="std std-ref">ambient_light_sky_contribution</inline></reference> 低于 <literal>1.0</literal>（不包括）时，才有效。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-ambient-light-sky-contribution"></target>
            <paragraph classes="classref-property" ids="class-environment-property-ambient-light-sky-contribution" names="class_environment_property_ambient_light_sky_contribution"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>ambient_light_sky_contribution</strong> = <literal>1.0</literal> <reference internal="True" refid="class-environment-property-ambient-light-sky-contribution"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_ambient_light_sky_contribution</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_ambient_light_sky_contribution</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>定义天空给场景带来的光照量。值为 <literal>0.0</literal> 表示天空的发光对场景照明没有影响，因此所有的环境照明都由环境光提供。相反，值为 <literal>1.0</literal> 表示<emphasis>所有</emphasis>影响场景的光线都由天空提供，因此环境光参数对场景没有影响。</paragraph>
            <paragraph><strong>注意：</strong>内部会将 <reference internal="True" refid="class-environment-property-ambient-light-sky-contribution"><inline classes="std std-ref">ambient_light_sky_contribution</inline></reference> 限制在 <literal>0.0</literal> 到 <literal>1.0</literal> 之间（闭区间）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-ambient-light-source"></target>
            <paragraph classes="classref-property" ids="class-environment-property-ambient-light-source" names="class_environment_property_ambient_light_source"><reference internal="True" refid="enum-environment-ambientsource"><inline classes="std std-ref">AmbientSource</inline></reference> <strong>ambient_light_source</strong> = <literal>0</literal> <reference internal="True" refid="class-environment-property-ambient-light-source"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_ambient_source</strong>(value: <reference internal="True" refid="enum-environment-ambientsource"><inline classes="std std-ref">AmbientSource</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-environment-ambientsource"><inline classes="std std-ref">AmbientSource</inline></reference> <strong>get_ambient_source</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>环境光源，用于渲染材质和全局照明。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-background-camera-feed-id"></target>
            <paragraph classes="classref-property" ids="class-environment-property-background-camera-feed-id" names="class_environment_property_background_camera_feed_id"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>background_camera_feed_id</strong> = <literal>1</literal> <reference internal="True" refid="class-environment-property-background-camera-feed-id"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_camera_feed_id</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_camera_feed_id</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>在背景中显示的相机源的 ID。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-background-canvas-max-layer"></target>
            <paragraph classes="classref-property" ids="class-environment-property-background-canvas-max-layer" names="class_environment_property_background_canvas_max_layer"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>background_canvas_max_layer</strong> = <literal>0</literal> <reference internal="True" refid="class-environment-property-background-canvas-max-layer"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_canvas_max_layer</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_canvas_max_layer</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>要显示的最大图层 ID。只有在使用 <reference internal="True" refid="class-environment-constant-bg-canvas"><inline classes="std std-ref">BG_CANVAS</inline></reference> 背景模式时有效。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-background-color"></target>
            <paragraph classes="classref-property" ids="class-environment-property-background-color" names="class_environment_property_background_color"><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>background_color</strong> = <literal>Color(0, 0, 0, 1)</literal> <reference internal="True" refid="class-environment-property-background-color"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_bg_color</strong>(value: <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>get_bg_color</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>场景中清除区域显示的 <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference>。仅在使用 <reference internal="True" refid="class-environment-constant-bg-color"><inline classes="std std-ref">BG_COLOR</inline></reference> 背景模式时有效。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-background-energy-multiplier"></target>
            <paragraph classes="classref-property" ids="class-environment-property-background-energy-multiplier" names="class_environment_property_background_energy_multiplier"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>background_energy_multiplier</strong> = <literal>1.0</literal> <reference internal="True" refid="class-environment-property-background-energy-multiplier"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_bg_energy_multiplier</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_bg_energy_multiplier</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>背景能量的倍数。增加可以使背景更亮，减少可以使背景更暗。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-background-intensity"></target>
            <paragraph classes="classref-property" ids="class-environment-property-background-intensity" names="class_environment_property_background_intensity"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>background_intensity</strong> = <literal>30000.0</literal> <reference internal="True" refid="class-environment-property-background-intensity"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_bg_intensity</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_bg_intensity</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>背景的亮度，单位是尼特（坎德拉/平方米）。仅当启用 <reference internal="True" refuri="class_projectsettings#class-projectsettings-property-rendering-lights-and-shadows-use-physical-light-units"><inline classes="std std-ref">ProjectSettings.rendering/lights_and_shadows/use_physical_light_units</inline></reference> 时使用。默认值大致相当于正午时分的天空。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-background-mode"></target>
            <paragraph classes="classref-property" ids="class-environment-property-background-mode" names="class_environment_property_background_mode"><reference internal="True" refid="enum-environment-bgmode"><inline classes="std std-ref">BGMode</inline></reference> <strong>background_mode</strong> = <literal>0</literal> <reference internal="True" refid="class-environment-property-background-mode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_background</strong>(value: <reference internal="True" refid="enum-environment-bgmode"><inline classes="std std-ref">BGMode</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-environment-bgmode"><inline classes="std std-ref">BGMode</inline></reference> <strong>get_background</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>背景模式。可能的取值见 <reference internal="True" refid="enum-environment-bgmode"><inline classes="std std-ref">BGMode</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-fog-aerial-perspective"></target>
            <paragraph classes="classref-property" ids="class-environment-property-fog-aerial-perspective" names="class_environment_property_fog_aerial_perspective"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>fog_aerial_perspective</strong> = <literal>0.0</literal> <reference internal="True" refid="class-environment-property-fog-aerial-perspective"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_fog_aerial_perspective</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_fog_aerial_perspective</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果设置大于 <literal>0.0</literal>（不含），会在雾的颜色和背景 <reference internal="True" refuri="class_sky#class-sky"><inline classes="std std-ref">Sky</inline></reference> 的颜色之间进行混合。设置大于 <literal>0.0</literal> 时有较小的性能代价。必须将 <reference internal="True" refid="class-environment-property-background-mode"><inline classes="std std-ref">background_mode</inline></reference> 设置为 <reference internal="True" refid="class-environment-constant-bg-sky"><inline classes="std std-ref">BG_SKY</inline></reference>。</paragraph>
            <paragraph>对于模拟雾密度较低的大场景中的<reference name="空气透视" refuri="https://zh.wikipedia.org/wiki/%E7%A9%BA%E6%B0%94%E9%80%8F%E8%A7%86">空气透视</reference>很有用。但对于高密度的雾来说不是很有用，因为天空会被照亮。设置为 <literal>1.0</literal> 时，雾的颜色完全来自 <reference internal="True" refuri="class_sky#class-sky"><inline classes="std std-ref">Sky</inline></reference>。设置为 <literal>0.0</literal> 时，会禁用空气透视。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-fog-density"></target>
            <paragraph classes="classref-property" ids="class-environment-property-fog-density" names="class_environment_property_fog_density"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>fog_density</strong> = <literal>0.01</literal> <reference internal="True" refid="class-environment-property-fog-density"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_fog_density</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_fog_density</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>要使用的雾密度。根据所选的 <reference internal="True" refid="class-environment-property-fog-mode"><inline classes="std std-ref">fog_mode</inline></reference> 模式，可以通过不同的方式进行演示：</paragraph>
            <paragraph><strong>指数雾模式：</strong>数值越高，雾就越浓。雾渲染就像现实生活中一样呈指数级增长。</paragraph>
            <paragraph><strong>深度雾模式：</strong>深度雾的最大强度，效果将出现在远处（相对于相机）。在 <literal>1.0</literal> 处，雾将完全遮盖场景，在 <literal>0.0</literal> 处，雾将不可见。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-fog-depth-begin"></target>
            <paragraph classes="classref-property" ids="class-environment-property-fog-depth-begin" names="class_environment_property_fog_depth_begin"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>fog_depth_begin</strong> = <literal>10.0</literal> <reference internal="True" refid="class-environment-property-fog-depth-begin"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_fog_depth_begin</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_fog_depth_begin</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>雾距相机的深度起始距离。仅当 <reference internal="True" refid="class-environment-property-fog-mode"><inline classes="std std-ref">fog_mode</inline></reference> 被设置为 <reference internal="True" refid="class-environment-constant-fog-mode-depth"><inline classes="std std-ref">FOG_MODE_DEPTH</inline></reference> 时可用。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-fog-depth-curve"></target>
            <paragraph classes="classref-property" ids="class-environment-property-fog-depth-curve" names="class_environment_property_fog_depth_curve"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>fog_depth_curve</strong> = <literal>1.0</literal> <reference internal="True" refid="class-environment-property-fog-depth-curve"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_fog_depth_curve</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_fog_depth_curve</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>雾深度的强度曲线。通过右键点击曲线，可以在检查器中使用许多预设。仅当 <reference internal="True" refid="class-environment-property-fog-mode"><inline classes="std std-ref">fog_mode</inline></reference> 被设置为 <reference internal="True" refid="class-environment-constant-fog-mode-depth"><inline classes="std std-ref">FOG_MODE_DEPTH</inline></reference> 时可用。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-fog-depth-end"></target>
            <paragraph classes="classref-property" ids="class-environment-property-fog-depth-end" names="class_environment_property_fog_depth_end"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>fog_depth_end</strong> = <literal>100.0</literal> <reference internal="True" refid="class-environment-property-fog-depth-end"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_fog_depth_end</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_fog_depth_end</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>雾距相机的深度结束的距离。如果该值被设置为 <literal>0</literal>，它将等于当前相机的 <reference internal="True" refuri="class_camera3d#class-camera3d-property-far"><inline classes="std std-ref">Camera3D.far</inline></reference> 值。仅当 <reference internal="True" refid="class-environment-property-fog-mode"><inline classes="std std-ref">fog_mode</inline></reference> 被设置为 <reference internal="True" refid="class-environment-constant-fog-mode-depth"><inline classes="std std-ref">FOG_MODE_DEPTH</inline></reference> 时可用。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-fog-enabled"></target>
            <paragraph classes="classref-property" ids="class-environment-property-fog-enabled" names="class_environment_property_fog_enabled"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>fog_enabled</strong> = <literal>false</literal> <reference internal="True" refid="class-environment-property-fog-enabled"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_fog_enabled</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_fog_enabled</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则启用雾效果。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-fog-height"></target>
            <paragraph classes="classref-property" ids="class-environment-property-fog-height" names="class_environment_property_fog_height"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>fog_height</strong> = <literal>0.0</literal> <reference internal="True" refid="class-environment-property-fog-height"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_fog_height</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_fog_height</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>高度雾效果开始的高度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-fog-height-density"></target>
            <paragraph classes="classref-property" ids="class-environment-property-fog-height-density" names="class_environment_property_fog_height_density"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>fog_height_density</strong> = <literal>0.0</literal> <reference internal="True" refid="class-environment-property-fog-height-density"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_fog_height_density</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_fog_height_density</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>用于随着高度降低而增加雾的密度。要使雾随着高度增加而增加，请使用负值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-fog-light-color"></target>
            <paragraph classes="classref-property" ids="class-environment-property-fog-light-color" names="class_environment_property_fog_light_color"><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>fog_light_color</strong> = <literal>Color(0.518, 0.553, 0.608, 1)</literal> <reference internal="True" refid="class-environment-property-fog-light-color"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_fog_light_color</strong>(value: <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>get_fog_light_color</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>雾的颜色。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-fog-light-energy"></target>
            <paragraph classes="classref-property" ids="class-environment-property-fog-light-energy" names="class_environment_property_fog_light_energy"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>fog_light_energy</strong> = <literal>1.0</literal> <reference internal="True" refid="class-environment-property-fog-light-energy"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_fog_light_energy</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_fog_light_energy</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>雾的亮度。值越高，雾越亮。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-fog-mode"></target>
            <paragraph classes="classref-property" ids="class-environment-property-fog-mode" names="class_environment_property_fog_mode"><reference internal="True" refid="enum-environment-fogmode"><inline classes="std std-ref">FogMode</inline></reference> <strong>fog_mode</strong> = <literal>0</literal> <reference internal="True" refid="class-environment-property-fog-mode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_fog_mode</strong>(value: <reference internal="True" refid="enum-environment-fogmode"><inline classes="std std-ref">FogMode</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-environment-fogmode"><inline classes="std std-ref">FogMode</inline></reference> <strong>get_fog_mode</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>雾模式。可能的取值见 <reference internal="True" refid="enum-environment-fogmode"><inline classes="std std-ref">FogMode</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-fog-sky-affect"></target>
            <paragraph classes="classref-property" ids="class-environment-property-fog-sky-affect" names="class_environment_property_fog_sky_affect"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>fog_sky_affect</strong> = <literal>1.0</literal> <reference internal="True" refid="class-environment-property-fog-sky-affect"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_fog_sky_affect</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_fog_sky_affect</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>非体积雾影响天空时使用的系数。<literal>1.0</literal> 表示雾可以完全遮蔽天空。较低的值会减少雾对天空渲染的影响，<literal>0.0</literal> 完全不影响天空的渲染。</paragraph>
            <paragraph><strong>注意：</strong>如果 <reference internal="True" refid="class-environment-property-fog-aerial-perspective"><inline classes="std std-ref">fog_aerial_perspective</inline></reference> 为 <literal>1.0</literal>，<reference internal="True" refid="class-environment-property-fog-sky-affect"><inline classes="std std-ref">fog_sky_affect</inline></reference> 不会有视觉效果。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-fog-sun-scatter"></target>
            <paragraph classes="classref-property" ids="class-environment-property-fog-sun-scatter" names="class_environment_property_fog_sun_scatter"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>fog_sun_scatter</strong> = <literal>0.0</literal> <reference internal="True" refid="class-environment-property-fog-sun-scatter"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_fog_sun_scatter</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_fog_sun_scatter</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果设置为 <literal>0.0</literal> 以上，则根据视角以雾色渲染场景的定向光。这可以用来给人一种太阳正在“穿透”雾的印象。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-glow-blend-mode"></target>
            <paragraph classes="classref-property" ids="class-environment-property-glow-blend-mode" names="class_environment_property_glow_blend_mode"><reference internal="True" refid="enum-environment-glowblendmode"><inline classes="std std-ref">GlowBlendMode</inline></reference> <strong>glow_blend_mode</strong> = <literal>2</literal> <reference internal="True" refid="class-environment-property-glow-blend-mode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_glow_blend_mode</strong>(value: <reference internal="True" refid="enum-environment-glowblendmode"><inline classes="std std-ref">GlowBlendMode</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-environment-glowblendmode"><inline classes="std std-ref">GlowBlendMode</inline></reference> <strong>get_glow_blend_mode</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>辉光混合模式。</paragraph>
            <paragraph><strong>注意：</strong><reference internal="True" refid="class-environment-property-glow-blend-mode"><inline classes="std std-ref">glow_blend_mode</inline></reference> 在使用兼容性渲染方法时没有效果，因为这种渲染方法使用针对低端设备优化的更简单的辉光实现。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-glow-bloom"></target>
            <paragraph classes="classref-property" ids="class-environment-property-glow-bloom" names="class_environment_property_glow_bloom"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>glow_bloom</strong> = <literal>0.0</literal> <reference internal="True" refid="class-environment-property-glow-bloom"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_glow_bloom</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_glow_bloom</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>泛光的强度。如果设置为大于 <literal>0</literal> 的值，则将在比 <reference internal="True" refid="class-environment-property-glow-hdr-threshold"><inline classes="std std-ref">glow_hdr_threshold</inline></reference> 成员更暗的区域中显示辉光。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-glow-enabled"></target>
            <paragraph classes="classref-property" ids="class-environment-property-glow-enabled" names="class_environment_property_glow_enabled"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>glow_enabled</strong> = <literal>false</literal> <reference internal="True" refid="class-environment-property-glow-enabled"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_glow_enabled</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_glow_enabled</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则会启用辉光效果。这个效果模拟的是真实世界中眼睛/相机的行为，亮度很高的像素会溢出到周围的像素中。</paragraph>
            <paragraph><strong>注意：</strong>使用“移动”渲染方法时，辉光的外观会不一样，因为“移动”渲染方法中只能使用低动态范围。</paragraph>
            <paragraph><strong>注意：</strong>使用“兼容”渲染方法时，辉光的实现方式不同，部分属性不可用，会在检查器中隐藏：<literal>glow_levels/*</literal>、<reference internal="True" refid="class-environment-property-glow-normalized"><inline classes="std std-ref">glow_normalized</inline></reference>、<reference internal="True" refid="class-environment-property-glow-strength"><inline classes="std std-ref">glow_strength</inline></reference>、<reference internal="True" refid="class-environment-property-glow-blend-mode"><inline classes="std std-ref">glow_blend_mode</inline></reference>、<reference internal="True" refid="class-environment-property-glow-mix"><inline classes="std std-ref">glow_mix</inline></reference>、<reference internal="True" refid="class-environment-property-glow-map"><inline classes="std std-ref">glow_map</inline></reference>、<reference internal="True" refid="class-environment-property-glow-map-strength"><inline classes="std std-ref">glow_map_strength</inline></reference>。这种实现方式是针对在低端设备上运行而优化的，因此灵活性较差。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-glow-hdr-luminance-cap"></target>
            <paragraph classes="classref-property" ids="class-environment-property-glow-hdr-luminance-cap" names="class_environment_property_glow_hdr_luminance_cap"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>glow_hdr_luminance_cap</strong> = <literal>12.0</literal> <reference internal="True" refid="class-environment-property-glow-hdr-luminance-cap"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_glow_hdr_luminance_cap</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_glow_hdr_luminance_cap</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>HDR 辉光的较高阈值。比这个阈值更亮的区域将被限制，以达到辉光效果的目的。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-glow-hdr-scale"></target>
            <paragraph classes="classref-property" ids="class-environment-property-glow-hdr-scale" names="class_environment_property_glow_hdr_scale"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>glow_hdr_scale</strong> = <literal>2.0</literal> <reference internal="True" refid="class-environment-property-glow-hdr-scale"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_glow_hdr_bleed_scale</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_glow_hdr_bleed_scale</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>HDR 辉光的逸出缩放。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-glow-hdr-threshold"></target>
            <paragraph classes="classref-property" ids="class-environment-property-glow-hdr-threshold" names="class_environment_property_glow_hdr_threshold"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>glow_hdr_threshold</strong> = <literal>1.0</literal> <reference internal="True" refid="class-environment-property-glow-hdr-threshold"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_glow_hdr_bleed_threshold</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_glow_hdr_bleed_threshold</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>HDR 辉光的下限阈值。当使用 Mobile 渲染方法时（仅支持较低的动态范围，最大为 <literal>2.0</literal>），需要低于 <literal>1.0</literal> 才能看到辉光。在这种情况下取 <literal>0.9</literal> 可以达到不错的效果。在 2D 中使用辉光时也需要降低到 <literal>1.0</literal> 以下，因为 2D 渲染使用 SDR。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-glow-intensity"></target>
            <paragraph classes="classref-property" ids="class-environment-property-glow-intensity" names="class_environment_property_glow_intensity"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>glow_intensity</strong> = <literal>0.8</literal> <reference internal="True" refid="class-environment-property-glow-intensity"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_glow_intensity</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_glow_intensity</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>辉光效果的整体亮度倍数。使用 Mobile 渲染方法时（仅支持较低的动态范围，最大为 <literal>2.0</literal>），应将其增加到 <literal>1.5</literal> 进行补偿。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-glow-levels-1"></target>
            <paragraph classes="classref-property" ids="class-environment-property-glow-levels-1" names="class_environment_property_glow_levels/1"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>glow_levels/1</strong> = <literal>0.0</literal> <reference internal="True" refid="class-environment-property-glow-levels-1"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_glow_level</strong>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, intensity: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_glow_level</strong>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>第一级辉光的强度。这是最“局部”的级别（最不模糊）。</paragraph>
            <paragraph><strong>注意：</strong><reference internal="True" refid="class-environment-property-glow-levels-1"><inline classes="std std-ref">glow_levels/1</inline></reference> 在使用兼容性渲染方法时没有效果，因为这种渲染方法使用针对低端设备优化的更简单的辉光实现。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-glow-levels-2"></target>
            <paragraph classes="classref-property" ids="class-environment-property-glow-levels-2" names="class_environment_property_glow_levels/2"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>glow_levels/2</strong> = <literal>0.0</literal> <reference internal="True" refid="class-environment-property-glow-levels-2"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_glow_level</strong>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, intensity: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_glow_level</strong>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>第二级辉光的强度。</paragraph>
            <paragraph><strong>注意：</strong><reference internal="True" refid="class-environment-property-glow-levels-2"><inline classes="std std-ref">glow_levels/2</inline></reference> 在使用兼容性渲染方法时没有效果，因为这种渲染方法使用针对低端设备优化的更简单的辉光实现。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-glow-levels-3"></target>
            <paragraph classes="classref-property" ids="class-environment-property-glow-levels-3" names="class_environment_property_glow_levels/3"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>glow_levels/3</strong> = <literal>1.0</literal> <reference internal="True" refid="class-environment-property-glow-levels-3"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_glow_level</strong>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, intensity: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_glow_level</strong>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>第三级辉光的强度。</paragraph>
            <paragraph><strong>注意：</strong><reference internal="True" refid="class-environment-property-glow-levels-3"><inline classes="std std-ref">glow_levels/3</inline></reference> 在使用兼容性渲染方法时没有效果，因为这种渲染方法使用针对低端设备优化的更简单的辉光实现。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-glow-levels-4"></target>
            <paragraph classes="classref-property" ids="class-environment-property-glow-levels-4" names="class_environment_property_glow_levels/4"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>glow_levels/4</strong> = <literal>0.0</literal> <reference internal="True" refid="class-environment-property-glow-levels-4"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_glow_level</strong>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, intensity: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_glow_level</strong>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>第四级辉光的强度。</paragraph>
            <paragraph><strong>注意：</strong><reference internal="True" refid="class-environment-property-glow-levels-4"><inline classes="std std-ref">glow_levels/4</inline></reference> 在使用兼容性渲染方法时没有效果，因为这种渲染方法使用针对低端设备优化的更简单的辉光实现。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-glow-levels-5"></target>
            <paragraph classes="classref-property" ids="class-environment-property-glow-levels-5" names="class_environment_property_glow_levels/5"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>glow_levels/5</strong> = <literal>1.0</literal> <reference internal="True" refid="class-environment-property-glow-levels-5"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_glow_level</strong>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, intensity: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_glow_level</strong>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>第五级辉光的强度。</paragraph>
            <paragraph><strong>注意：</strong><reference internal="True" refid="class-environment-property-glow-levels-5"><inline classes="std std-ref">glow_levels/5</inline></reference> 在使用兼容性渲染方法时没有效果，因为这种渲染方法使用针对低端设备优化的更简单的辉光实现。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-glow-levels-6"></target>
            <paragraph classes="classref-property" ids="class-environment-property-glow-levels-6" names="class_environment_property_glow_levels/6"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>glow_levels/6</strong> = <literal>0.0</literal> <reference internal="True" refid="class-environment-property-glow-levels-6"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_glow_level</strong>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, intensity: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_glow_level</strong>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>第六级辉光的强度。</paragraph>
            <paragraph><strong>注意：</strong><reference internal="True" refid="class-environment-property-glow-levels-6"><inline classes="std std-ref">glow_levels/6</inline></reference> 在使用兼容性渲染方法时没有效果，因为这种渲染方法使用针对低端设备优化的更简单的辉光实现。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-glow-levels-7"></target>
            <paragraph classes="classref-property" ids="class-environment-property-glow-levels-7" names="class_environment_property_glow_levels/7"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>glow_levels/7</strong> = <literal>0.0</literal> <reference internal="True" refid="class-environment-property-glow-levels-7"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_glow_level</strong>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, intensity: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_glow_level</strong>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>第七级辉光的强度。这是最“全局”的级别（最模糊）。</paragraph>
            <paragraph><strong>注意：</strong><reference internal="True" refid="class-environment-property-glow-levels-7"><inline classes="std std-ref">glow_levels/7</inline></reference> 在使用兼容性渲染方法时没有效果，因为这种渲染方法使用针对低端设备优化的更简单的辉光实现。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-glow-map"></target>
            <paragraph classes="classref-property" ids="class-environment-property-glow-map" names="class_environment_property_glow_map"><reference internal="True" refuri="class_texture#class-texture"><inline classes="std std-ref">Texture</inline></reference> <strong>glow_map</strong> <reference internal="True" refid="class-environment-property-glow-map"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_glow_map</strong>(value: <reference internal="True" refuri="class_texture#class-texture"><inline classes="std std-ref">Texture</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_texture#class-texture"><inline classes="std std-ref">Texture</inline></reference> <strong>get_glow_map</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>该纹理应被用作一个辉光贴图，以根据 <reference internal="True" refid="class-environment-property-glow-map-strength"><inline classes="std std-ref">glow_map_strength</inline></reference> <emphasis>乘以</emphasis> 生成的辉光颜色。这可以用来创建一个“镜头污垢”效果。该纹理的 RGB 颜色通道被用于调制，但 Alpha 通道将被忽略。</paragraph>
            <paragraph><strong>注意：</strong>该纹理将被拉伸以适应屏幕。因此，建议使用长宽比与项目的基本长宽比（通常为 16:9）相匹配的纹理。</paragraph>
            <paragraph><strong>注意：</strong><reference internal="True" refid="class-environment-property-glow-map"><inline classes="std std-ref">glow_map</inline></reference> 在使用兼容性渲染方法时没有效果，因为该渲染方法使用针对低端设备优化的更简单的辉光实现。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-glow-map-strength"></target>
            <paragraph classes="classref-property" ids="class-environment-property-glow-map-strength" names="class_environment_property_glow_map_strength"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>glow_map_strength</strong> = <literal>0.8</literal> <reference internal="True" refid="class-environment-property-glow-map-strength"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_glow_map_strength</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_glow_map_strength</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph><reference internal="True" refid="class-environment-property-glow-map"><inline classes="std std-ref">glow_map</inline></reference> 应该对整体发光效果产生多大的影响。<literal>0.0</literal> 的强度，表示辉光贴图对整体辉光效果没有影响。<literal>1.0</literal> 的强度，表示辉光对整体辉光效果具有完全的效果（如果辉光贴图有黑色区域，则可以在屏幕的特定区域完全关闭辉光）。</paragraph>
            <paragraph><strong>注意：</strong><reference internal="True" refid="class-environment-property-glow-map-strength"><inline classes="std std-ref">glow_map_strength</inline></reference> 在使用兼容性渲染方法时没有效果，因为该渲染方法使用针对低端设备优化的更简单的辉光实现。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-glow-mix"></target>
            <paragraph classes="classref-property" ids="class-environment-property-glow-mix" names="class_environment_property_glow_mix"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>glow_mix</strong> = <literal>0.05</literal> <reference internal="True" refid="class-environment-property-glow-mix"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_glow_mix</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_glow_mix</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>当使用 <reference internal="True" refid="class-environment-constant-glow-blend-mode-mix"><inline classes="std std-ref">GLOW_BLEND_MODE_MIX</inline></reference> <reference internal="True" refid="class-environment-property-glow-blend-mode"><inline classes="std std-ref">glow_blend_mode</inline></reference> 时，它控制源图像与辉光层混合的程度。<literal>0.0</literal> 的值使辉光渲染不可见，而 <literal>1.0</literal> 的值等效于 <reference internal="True" refid="class-environment-constant-glow-blend-mode-replace"><inline classes="std std-ref">GLOW_BLEND_MODE_REPLACE</inline></reference>。</paragraph>
            <paragraph><strong>注意：</strong><reference internal="True" refid="class-environment-property-glow-mix"><inline classes="std std-ref">glow_mix</inline></reference> 在使用兼容性渲染方法时没有效果，因为该渲染方法使用针对低端设备优化的更简单的辉光实现。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-glow-normalized"></target>
            <paragraph classes="classref-property" ids="class-environment-property-glow-normalized" names="class_environment_property_glow_normalized"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>glow_normalized</strong> = <literal>false</literal> <reference internal="True" refid="class-environment-property-glow-normalized"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_glow_normalized</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_glow_normalized</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则辉光级别将被归一化，以便它们的强度总和等于 <literal>1.0</literal>。</paragraph>
            <paragraph><strong>注意：</strong><reference internal="True" refid="class-environment-property-glow-normalized"><inline classes="std std-ref">glow_normalized</inline></reference> 在使用兼容性渲染方法时没有效果，因为这种渲染方法使用针对低端设备优化的更简单的辉光实现。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-glow-strength"></target>
            <paragraph classes="classref-property" ids="class-environment-property-glow-strength" names="class_environment_property_glow_strength"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>glow_strength</strong> = <literal>1.0</literal> <reference internal="True" refid="class-environment-property-glow-strength"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_glow_strength</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_glow_strength</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>辉光效果的强度。适用于屏幕上的辉光模糊，能够增加模糊的距离和强度。使用 Mobile 渲染方法时应将其提高，对低动态范围进行补偿。</paragraph>
            <paragraph><strong>注意：</strong><reference internal="True" refid="class-environment-property-glow-strength"><inline classes="std std-ref">glow_strength</inline></reference> 在使用兼容性渲染方法时没有效果，因为该渲染方法使用针对低端设备优化的更简单的辉光实现。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-reflected-light-source"></target>
            <paragraph classes="classref-property" ids="class-environment-property-reflected-light-source" names="class_environment_property_reflected_light_source"><reference internal="True" refid="enum-environment-reflectionsource"><inline classes="std std-ref">ReflectionSource</inline></reference> <strong>reflected_light_source</strong> = <literal>0</literal> <reference internal="True" refid="class-environment-property-reflected-light-source"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_reflection_source</strong>(value: <reference internal="True" refid="enum-environment-reflectionsource"><inline classes="std std-ref">ReflectionSource</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-environment-reflectionsource"><inline classes="std std-ref">ReflectionSource</inline></reference> <strong>get_reflection_source</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>反射（镜面反射）光源。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-sdfgi-bounce-feedback"></target>
            <paragraph classes="classref-property" ids="class-environment-property-sdfgi-bounce-feedback" names="class_environment_property_sdfgi_bounce_feedback"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>sdfgi_bounce_feedback</strong> = <literal>0.5</literal> <reference internal="True" refid="class-environment-property-sdfgi-bounce-feedback"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_sdfgi_bounce_feedback</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_sdfgi_bounce_feedback</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>使用 SDFGI 时，每次从表面反弹时应用于光的能量倍增器。大于 <literal>0.0</literal> 的值将模拟多次反弹，从而产生更逼真的外观。增加 <reference internal="True" refid="class-environment-property-sdfgi-bounce-feedback"><inline classes="std std-ref">sdfgi_bounce_feedback</inline></reference> 通常对性能没有影响。另见 <reference internal="True" refid="class-environment-property-sdfgi-energy"><inline classes="std std-ref">sdfgi_energy</inline></reference>。</paragraph>
            <paragraph><strong>注意：</strong>大于 <literal>0.5</literal> 的值会导致无限的反馈循环，应避免在具有明亮材质的场景中使用。</paragraph>
            <paragraph><strong>注意：</strong>如果 <reference internal="True" refid="class-environment-property-sdfgi-bounce-feedback"><inline classes="std std-ref">sdfgi_bounce_feedback</inline></reference> 为 <literal>0.0</literal>，间接照明会在反射中表现出来，因为光只会反弹一次。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-sdfgi-cascade0-distance"></target>
            <paragraph classes="classref-property" ids="class-environment-property-sdfgi-cascade0-distance" names="class_environment_property_sdfgi_cascade0_distance"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>sdfgi_cascade0_distance</strong> = <literal>12.8</literal> <reference internal="True" refid="class-environment-property-sdfgi-cascade0-distance"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_sdfgi_cascade0_distance</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_sdfgi_cascade0_distance</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph><strong>注意：</strong>该属性被链接到 <reference internal="True" refid="class-environment-property-sdfgi-min-cell-size"><inline classes="std std-ref">sdfgi_min_cell_size</inline></reference> 和 <reference internal="True" refid="class-environment-property-sdfgi-max-distance"><inline classes="std std-ref">sdfgi_max_distance</inline></reference>。更改其值也会自动更改这些属性。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-sdfgi-cascades"></target>
            <paragraph classes="classref-property" ids="class-environment-property-sdfgi-cascades" names="class_environment_property_sdfgi_cascades"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>sdfgi_cascades</strong> = <literal>4</literal> <reference internal="True" refid="class-environment-property-sdfgi-cascades"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_sdfgi_cascades</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_sdfgi_cascades</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>用于 SDFGI 的级联数（1 到 8 之间）。更高的级联数会以性能为代价，允许在更远的地方显示 SDFGI，同时保持近距离的细节。在小型关卡上使用 SDFGI 时，通常 <reference internal="True" refid="class-environment-property-sdfgi-cascades"><inline classes="std std-ref">sdfgi_cascades</inline></reference> 可以被降低到 <literal>1</literal> 和 <literal>4</literal> 之间以提高性能。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-sdfgi-enabled"></target>
            <paragraph classes="classref-property" ids="class-environment-property-sdfgi-enabled" names="class_environment_property_sdfgi_enabled"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>sdfgi_enabled</strong> = <literal>false</literal> <reference internal="True" refid="class-environment-property-sdfgi-enabled"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_sdfgi_enabled</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_sdfgi_enabled</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则为将 <reference internal="True" refuri="class_geometryinstance3d#class-geometryinstance3d-property-gi-mode"><inline classes="std std-ref">GeometryInstance3D.gi_mode</inline></reference> 设置为 <reference internal="True" refuri="class_geometryinstance3d#class-geometryinstance3d-constant-gi-mode-static"><inline classes="std std-ref">GeometryInstance3D.GI_MODE_STATIC</inline></reference> 的网格，启用有符号距离场全局照明（即 SDFGI）。SDFGI 是一种实时全局照明技术，适用于程序生成和用户构建的关卡，包括在游戏过程中创建几何体的情况。有符号距离场会在相机移动时自动围绕相机生成。支持动态光，但不支持动态遮挡物和自发光表面。</paragraph>
            <paragraph><strong>注意：</strong>SDFGI 只支持 Forward+ 渲染方式，不支持 Mobile 或 Compatibility。</paragraph>
            <paragraph><strong>性能：</strong>SDFGI 对 GPU 的要求比较高，不适合集成显卡等低端硬件（可以考虑 <reference internal="True" refuri="class_lightmapgi#class-lightmapgi"><inline classes="std std-ref">LightmapGI</inline></reference>）。要提高 SDFGI 性能，请在项目设置中启用 <reference internal="True" refuri="class_projectsettings#class-projectsettings-property-rendering-global-illumination-gi-use-half-resolution"><inline classes="std std-ref">ProjectSettings.rendering/global_illumination/gi/use_half_resolution</inline></reference>。</paragraph>
            <paragraph><strong>注意：</strong>网格应该有足够厚的壁以避免漏光（避免单面壁）。对于内部关卡，将关卡几何体放入一个足够大的盒子中，并桥接循环边以闭合网格。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-sdfgi-energy"></target>
            <paragraph classes="classref-property" ids="class-environment-property-sdfgi-energy" names="class_environment_property_sdfgi_energy"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>sdfgi_energy</strong> = <literal>1.0</literal> <reference internal="True" refid="class-environment-property-sdfgi-energy"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_sdfgi_energy</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_sdfgi_energy</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>用于 SDFGI 的能量乘数。较高的值将导致更亮的间接照明和反射。另见 <reference internal="True" refid="class-environment-property-sdfgi-bounce-feedback"><inline classes="std std-ref">sdfgi_bounce_feedback</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-sdfgi-max-distance"></target>
            <paragraph classes="classref-property" ids="class-environment-property-sdfgi-max-distance" names="class_environment_property_sdfgi_max_distance"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>sdfgi_max_distance</strong> = <literal>204.8</literal> <reference internal="True" refid="class-environment-property-sdfgi-max-distance"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_sdfgi_max_distance</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_sdfgi_max_distance</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>SDFGI 可见的最大距离。超出该距离，环境照明或其他 GI 来源（例如 <reference internal="True" refuri="class_reflectionprobe#class-reflectionprobe"><inline classes="std std-ref">ReflectionProbe</inline></reference>）将用作后备。</paragraph>
            <paragraph><strong>注意：</strong>该属性被链接到 <reference internal="True" refid="class-environment-property-sdfgi-min-cell-size"><inline classes="std std-ref">sdfgi_min_cell_size</inline></reference> 和 <reference internal="True" refid="class-environment-property-sdfgi-cascade0-distance"><inline classes="std std-ref">sdfgi_cascade0_distance</inline></reference>。更改其值，也会自动更改这些属性。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-sdfgi-min-cell-size"></target>
            <paragraph classes="classref-property" ids="class-environment-property-sdfgi-min-cell-size" names="class_environment_property_sdfgi_min_cell_size"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>sdfgi_min_cell_size</strong> = <literal>0.2</literal> <reference internal="True" refid="class-environment-property-sdfgi-min-cell-size"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_sdfgi_min_cell_size</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_sdfgi_min_cell_size</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>用于最接近的 SDFGI 级联的像元大小（以 3D 单位表示）。较低的值允许 SDFGI 近距离更精确，但代价是 SDFGI 更新要求更高。当相机快速移动时，这可能会导致卡顿。较高的值允许 SDFGI 覆盖更多的范围，同时也降低了 SDFGI 更新对性能的影响。</paragraph>
            <paragraph><strong>注意：</strong>该属性被链接到 <reference internal="True" refid="class-environment-property-sdfgi-max-distance"><inline classes="std std-ref">sdfgi_max_distance</inline></reference> 和 <reference internal="True" refid="class-environment-property-sdfgi-cascade0-distance"><inline classes="std std-ref">sdfgi_cascade0_distance</inline></reference>。更改其值也会自动更改这些属性。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-sdfgi-normal-bias"></target>
            <paragraph classes="classref-property" ids="class-environment-property-sdfgi-normal-bias" names="class_environment_property_sdfgi_normal_bias"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>sdfgi_normal_bias</strong> = <literal>1.1</literal> <reference internal="True" refid="class-environment-property-sdfgi-normal-bias"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_sdfgi_normal_bias</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_sdfgi_normal_bias</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>用于 SDFGI 探针的正常偏差。增加此值可以减少倾斜表面上的可见条纹伪影，但会增加漏光。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-sdfgi-probe-bias"></target>
            <paragraph classes="classref-property" ids="class-environment-property-sdfgi-probe-bias" names="class_environment_property_sdfgi_probe_bias"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>sdfgi_probe_bias</strong> = <literal>1.1</literal> <reference internal="True" refid="class-environment-property-sdfgi-probe-bias"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_sdfgi_probe_bias</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_sdfgi_probe_bias</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>用于 SDFGI 探针的恒定偏差。增加此值可以减少倾斜表面上的可见条纹伪影，但会增加漏光。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-sdfgi-read-sky-light"></target>
            <paragraph classes="classref-property" ids="class-environment-property-sdfgi-read-sky-light" names="class_environment_property_sdfgi_read_sky_light"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>sdfgi_read_sky_light</strong> = <literal>true</literal> <reference internal="True" refid="class-environment-property-sdfgi-read-sky-light"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_sdfgi_read_sky_light</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_sdfgi_reading_sky_light</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则 SDFGI 会考虑环境光照。对于室内场景，这应该被设置为 <literal>false</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-sdfgi-use-occlusion"></target>
            <paragraph classes="classref-property" ids="class-environment-property-sdfgi-use-occlusion" names="class_environment_property_sdfgi_use_occlusion"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>sdfgi_use_occlusion</strong> = <literal>false</literal> <reference internal="True" refid="class-environment-property-sdfgi-use-occlusion"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_sdfgi_use_occlusion</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_sdfgi_using_occlusion</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，SDFGI 使用遮挡检测方法来减少漏光。然而，遮挡可能会在某些位置引入暗斑，这在大多数户外场景中可能是不希望的。<reference internal="True" refid="class-environment-property-sdfgi-use-occlusion"><inline classes="std std-ref">sdfgi_use_occlusion</inline></reference> 对性能有影响，只应在需要时启用。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-sdfgi-y-scale"></target>
            <paragraph classes="classref-property" ids="class-environment-property-sdfgi-y-scale" names="class_environment_property_sdfgi_y_scale"><reference internal="True" refid="enum-environment-sdfgiyscale"><inline classes="std std-ref">SDFGIYScale</inline></reference> <strong>sdfgi_y_scale</strong> = <literal>1</literal> <reference internal="True" refid="class-environment-property-sdfgi-y-scale"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_sdfgi_y_scale</strong>(value: <reference internal="True" refid="enum-environment-sdfgiyscale"><inline classes="std std-ref">SDFGIYScale</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-environment-sdfgiyscale"><inline classes="std std-ref">SDFGIYScale</inline></reference> <strong>get_sdfgi_y_scale</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>用于 SDFGI 单元格的 Y 缩放。较低的值将导致 SDFGI 单元格在 Y 轴上更紧密地堆积在一起。这用于在质量和覆盖大量垂直地面之间取得平衡。<reference internal="True" refid="class-environment-property-sdfgi-y-scale"><inline classes="std std-ref">sdfgi_y_scale</inline></reference> 应该根据场景的垂直程度（以及相机在 Y 轴上移动的速度）来设置。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-sky"></target>
            <paragraph classes="classref-property" ids="class-environment-property-sky" names="class_environment_property_sky"><reference internal="True" refuri="class_sky#class-sky"><inline classes="std std-ref">Sky</inline></reference> <strong>sky</strong> <reference internal="True" refid="class-environment-property-sky"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_sky</strong>(value: <reference internal="True" refuri="class_sky#class-sky"><inline classes="std std-ref">Sky</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_sky#class-sky"><inline classes="std std-ref">Sky</inline></reference> <strong>get_sky</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>该 <strong>Environment</strong> 所使用的 <reference internal="True" refuri="class_sky#class-sky"><inline classes="std std-ref">Sky</inline></reference> 资源。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-sky-custom-fov"></target>
            <paragraph classes="classref-property" ids="class-environment-property-sky-custom-fov" names="class_environment_property_sky_custom_fov"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>sky_custom_fov</strong> = <literal>0.0</literal> <reference internal="True" refid="class-environment-property-sky-custom-fov"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_sky_custom_fov</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_sky_custom_fov</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果被设置为大于 <literal>0.0</literal> 的值，则会覆盖用于天空渲染的视野。如果被设置为 <literal>0.0</literal>，则使用与当前 <reference internal="True" refuri="class_camera3d#class-camera3d"><inline classes="std std-ref">Camera3D</inline></reference> 相同的 FOV 进行天空渲染。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-sky-rotation"></target>
            <paragraph classes="classref-property" ids="class-environment-property-sky-rotation" names="class_environment_property_sky_rotation"><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> <strong>sky_rotation</strong> = <literal>Vector3(0, 0, 0)</literal> <reference internal="True" refid="class-environment-property-sky-rotation"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_sky_rotation</strong>(value: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> <strong>get_sky_rotation</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>用于天空渲染的旋转。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-ssao-ao-channel-affect"></target>
            <paragraph classes="classref-property" ids="class-environment-property-ssao-ao-channel-affect" names="class_environment_property_ssao_ao_channel_affect"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>ssao_ao_channel_affect</strong> = <literal>0.0</literal> <reference internal="True" refid="class-environment-property-ssao-ao-channel-affect"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_ssao_ao_channel_affect</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_ssao_ao_channel_affect</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>定义了AO纹理的材质的屏幕空间环境遮挡强度。高于<literal>0</literal>的值将使SSAO效果在AO纹理变暗的区域可见。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-ssao-detail"></target>
            <paragraph classes="classref-property" ids="class-environment-property-ssao-detail" names="class_environment_property_ssao_detail"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>ssao_detail</strong> = <literal>0.5</literal> <reference internal="True" refid="class-environment-property-ssao-detail"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_ssao_detail</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_ssao_detail</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>设置屏幕空间环境遮蔽效果的附加细节级别的强度。高的值会使细节传递更加突出，但它可能会导致最终图像中出现锯齿。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-ssao-enabled"></target>
            <paragraph classes="classref-property" ids="class-environment-property-ssao-enabled" names="class_environment_property_ssao_enabled"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>ssao_enabled</strong> = <literal>false</literal> <reference internal="True" refid="class-environment-property-ssao-enabled"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_ssao_enabled</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_ssao_enabled</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则启用屏幕空间环境光遮蔽效果。这会使物体的角落和空腔变暗，以模拟环境光像现实生活中那样不会到达整个物体。这适用于小型动态对象，但烘焙照明或环境光遮蔽纹理，在大型静态对象上显示环境光遮蔽方面效果更好。Godot 使用一种称为自适应屏幕空间环境光遮蔽的 SSAO 形式，它本身就是一种基于地平线的环境光遮蔽形式。</paragraph>
            <paragraph><strong>注意：</strong>SSAO 只支持 Forward+ 渲染方式，不支持 Mobile 或 Compatibility。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-ssao-horizon"></target>
            <paragraph classes="classref-property" ids="class-environment-property-ssao-horizon" names="class_environment_property_ssao_horizon"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>ssao_horizon</strong> = <literal>0.06</literal> <reference internal="True" refid="class-environment-property-ssao-horizon"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_ssao_horizon</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_ssao_horizon</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>用于考虑表面上给定点是否被遮挡的阈值，表示为与地平线的角度，映射到 <literal>0.0-1.0</literal> 范围。<literal>1.0</literal> 的值不会导致遮蔽。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-ssao-intensity"></target>
            <paragraph classes="classref-property" ids="class-environment-property-ssao-intensity" names="class_environment_property_ssao_intensity"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>ssao_intensity</strong> = <literal>2.0</literal> <reference internal="True" refid="class-environment-property-ssao-intensity"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_ssao_intensity</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_ssao_intensity</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>主要屏幕空间的环境光遮蔽强度。用作屏幕空间环境光遮蔽效果的乘数。较高的值会导致较暗的遮蔽。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-ssao-light-affect"></target>
            <paragraph classes="classref-property" ids="class-environment-property-ssao-light-affect" names="class_environment_property_ssao_light_affect"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>ssao_light_affect</strong> = <literal>0.0</literal> <reference internal="True" refid="class-environment-property-ssao-light-affect"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_ssao_direct_light_affect</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_ssao_direct_light_affect</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>直射光下的屏幕空间环境光遮蔽强度。在现实生活中，环境遮挡只适用于间接光，也就是说在直射光下无法看到其效果。高于<literal>0</literal>的数值将使SSAO效果在直射光下可见。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-ssao-power"></target>
            <paragraph classes="classref-property" ids="class-environment-property-ssao-power" names="class_environment_property_ssao_power"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>ssao_power</strong> = <literal>1.5</literal> <reference internal="True" refid="class-environment-property-ssao-power"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_ssao_power</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_ssao_power</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>光遮蔽的分布。更高的值会导致更暗的光遮蔽，类似于 <reference internal="True" refid="class-environment-property-ssao-intensity"><inline classes="std std-ref">ssao_intensity</inline></reference>，但衰减更剧烈。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-ssao-radius"></target>
            <paragraph classes="classref-property" ids="class-environment-property-ssao-radius" names="class_environment_property_ssao_radius"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>ssao_radius</strong> = <literal>1.0</literal> <reference internal="True" refid="class-environment-property-ssao-radius"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_ssao_radius</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_ssao_radius</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>计算屏幕空间环境光遮蔽时，对象可以相互遮蔽的距离。较高的值将导致以性能和质量为代价的更远距离的光遮蔽。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-ssao-sharpness"></target>
            <paragraph classes="classref-property" ids="class-environment-property-ssao-sharpness" names="class_environment_property_ssao_sharpness"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>ssao_sharpness</strong> = <literal>0.98</literal> <reference internal="True" refid="class-environment-property-ssao-sharpness"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_ssao_sharpness</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_ssao_sharpness</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>允许屏幕空间环境光遮蔽效果，在对象边缘上模糊的量。设置太高，会导致对象边缘出现锯齿。设置太低，会使对象边缘显得模糊。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-ssil-enabled"></target>
            <paragraph classes="classref-property" ids="class-environment-property-ssil-enabled" names="class_environment_property_ssil_enabled"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>ssil_enabled</strong> = <literal>false</literal> <reference internal="True" refid="class-environment-property-ssil-enabled"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_ssil_enabled</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_ssil_enabled</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则启用屏幕空间间接照明效果。屏幕空间间接照明是一种间接照明形式，它允许漫射光在附近的物体之间反射。屏幕空间间接照明与屏幕空间环境光遮蔽的工作方式非常相似，因为它只影响有限的范围。它旨在与 SDFGI 或 <reference internal="True" refuri="class_voxelgi#class-voxelgi"><inline classes="std std-ref">VoxelGI</inline></reference> 等适当的全局照明形式一起使用。屏幕空间间接光照不受单个光源 <reference internal="True" refuri="class_light3d#class-light3d-property-light-indirect-energy"><inline classes="std std-ref">Light3D.light_indirect_energy</inline></reference> 的影响。</paragraph>
            <paragraph><strong>注意：</strong>SSIL 只支持 Forward+ 渲染方式，不支持 Mobile 或 Compatibility。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-ssil-intensity"></target>
            <paragraph classes="classref-property" ids="class-environment-property-ssil-intensity" names="class_environment_property_ssil_intensity"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>ssil_intensity</strong> = <literal>1.0</literal> <reference internal="True" refid="class-environment-property-ssil-intensity"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_ssil_intensity</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_ssil_intensity</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>屏幕空间间接照明效果的亮度倍增器。更高的值会产生更亮的光。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-ssil-normal-rejection"></target>
            <paragraph classes="classref-property" ids="class-environment-property-ssil-normal-rejection" names="class_environment_property_ssil_normal_rejection"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>ssil_normal_rejection</strong> = <literal>1.0</literal> <reference internal="True" refid="class-environment-property-ssil-normal-rejection"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_ssil_normal_rejection</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_ssil_normal_rejection</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>计算屏幕空间间接照明时，使用的法线抛弃量。法线抛弃使用给定样本点的法线，来抛弃远离当前像素的样本。当只有物体的一侧被照亮时，为了避免漏光法线抛弃是必要的。但是，如果需要漏光，则可以禁用法线抛弃，例如当场景主要包含自发光对象，且其发光面从相机无法看到时。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-ssil-radius"></target>
            <paragraph classes="classref-property" ids="class-environment-property-ssil-radius" names="class_environment_property_ssil_radius"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>ssil_radius</strong> = <literal>5.0</literal> <reference internal="True" refid="class-environment-property-ssil-radius"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_ssil_radius</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_ssil_radius</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>使用屏幕空间间接照明效果时，反射光可以传播的距离。较大的值，会导致光线在场景中进一步反弹，但可能会导致采样不足的伪影，看起来像光源周围的长尖峰。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-ssil-sharpness"></target>
            <paragraph classes="classref-property" ids="class-environment-property-ssil-sharpness" names="class_environment_property_ssil_sharpness"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>ssil_sharpness</strong> = <literal>0.98</literal> <reference internal="True" refid="class-environment-property-ssil-sharpness"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_ssil_sharpness</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_ssil_sharpness</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>允许屏幕空间间接照明效果，在对象边缘上模糊的量。设置太高，会导致对象边缘出现锯齿。设置太低，会使对象边缘显得模糊。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-ssr-depth-tolerance"></target>
            <paragraph classes="classref-property" ids="class-environment-property-ssr-depth-tolerance" names="class_environment_property_ssr_depth_tolerance"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>ssr_depth_tolerance</strong> = <literal>0.2</literal> <reference internal="True" refid="class-environment-property-ssr-depth-tolerance"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_ssr_depth_tolerance</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_ssr_depth_tolerance</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>屏幕空间反射的深度公差。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-ssr-enabled"></target>
            <paragraph classes="classref-property" ids="class-environment-property-ssr-enabled" names="class_environment_property_ssr_enabled"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>ssr_enabled</strong> = <literal>false</literal> <reference internal="True" refid="class-environment-property-ssr-enabled"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_ssr_enabled</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_ssr_enabled</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则启用屏幕空间反射。屏幕空间反射比来自 <reference internal="True" refuri="class_voxelgi#class-voxelgi"><inline classes="std std-ref">VoxelGI</inline></reference> 或 <reference internal="True" refuri="class_reflectionprobe#class-reflectionprobe"><inline classes="std std-ref">ReflectionProbe</inline></reference> 的反射更准确，但更慢并且不能反射被其他物体遮挡的表面。</paragraph>
            <paragraph><strong>注意：</strong>SSR 只支持 Forward+ 渲染方式，不支持 Mobile 或 Compatibility。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-ssr-fade-in"></target>
            <paragraph classes="classref-property" ids="class-environment-property-ssr-fade-in" names="class_environment_property_ssr_fade_in"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>ssr_fade_in</strong> = <literal>0.15</literal> <reference internal="True" refid="class-environment-property-ssr-fade-in"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_ssr_fade_in</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_ssr_fade_in</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>屏幕空间反射的淡入距离。影响从反射材质到屏幕空间反射的区域。只有正值有效（负值将被钳制为 <literal>0.0</literal>）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-ssr-fade-out"></target>
            <paragraph classes="classref-property" ids="class-environment-property-ssr-fade-out" names="class_environment_property_ssr_fade_out"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>ssr_fade_out</strong> = <literal>2.0</literal> <reference internal="True" refid="class-environment-property-ssr-fade-out"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_ssr_fade_out</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_ssr_fade_out</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>屏幕空间反射的淡出距离。影响从屏幕空间反射到“全局”反射的区域。只有正值有效（负值将被钳制为 <literal>0.0</literal>）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-ssr-max-steps"></target>
            <paragraph classes="classref-property" ids="class-environment-property-ssr-max-steps" names="class_environment_property_ssr_max_steps"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>ssr_max_steps</strong> = <literal>64</literal> <reference internal="True" refid="class-environment-property-ssr-max-steps"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_ssr_max_steps</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_ssr_max_steps</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>屏幕空间反射的最大步数。数值越高，速度越慢。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-tonemap-exposure"></target>
            <paragraph classes="classref-property" ids="class-environment-property-tonemap-exposure" names="class_environment_property_tonemap_exposure"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>tonemap_exposure</strong> = <literal>1.0</literal> <reference internal="True" refid="class-environment-property-tonemap-exposure"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_tonemap_exposure</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_tonemap_exposure</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>色调映射的默认曝光。值越高，图像越亮。另见 <reference internal="True" refid="class-environment-property-tonemap-white"><inline classes="std std-ref">tonemap_white</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-tonemap-mode"></target>
            <paragraph classes="classref-property" ids="class-environment-property-tonemap-mode" names="class_environment_property_tonemap_mode"><reference internal="True" refid="enum-environment-tonemapper"><inline classes="std std-ref">ToneMapper</inline></reference> <strong>tonemap_mode</strong> = <literal>0</literal> <reference internal="True" refid="class-environment-property-tonemap-mode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_tonemapper</strong>(value: <reference internal="True" refid="enum-environment-tonemapper"><inline classes="std std-ref">ToneMapper</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-environment-tonemapper"><inline classes="std std-ref">ToneMapper</inline></reference> <strong>get_tonemapper</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>要使用的色调映射模式。色调映射是对 HDR 值进行“转换”的过程，转换后的值适合在 LDR 显示器上渲染。（Godot 尚不支持在 HDR 显示器上进行渲染。）</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-tonemap-white"></target>
            <paragraph classes="classref-property" ids="class-environment-property-tonemap-white" names="class_environment_property_tonemap_white"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>tonemap_white</strong> = <literal>1.0</literal> <reference internal="True" refid="class-environment-property-tonemap-white"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_tonemap_white</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_tonemap_white</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>色调映射的白色参考值（也称为“白点”）。值越高，高光处的过曝越不明显，并且整个场景也会因此而略微变暗。仅当 <reference internal="True" refid="class-environment-property-tonemap-mode"><inline classes="std std-ref">tonemap_mode</inline></reference> 未设置为 <reference internal="True" refid="class-environment-constant-tone-mapper-linear"><inline classes="std std-ref">TONE_MAPPER_LINEAR</inline></reference> 时有效。另见 <reference internal="True" refid="class-environment-property-tonemap-exposure"><inline classes="std std-ref">tonemap_exposure</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-volumetric-fog-albedo"></target>
            <paragraph classes="classref-property" ids="class-environment-property-volumetric-fog-albedo" names="class_environment_property_volumetric_fog_albedo"><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>volumetric_fog_albedo</strong> = <literal>Color(1, 1, 1, 1)</literal> <reference internal="True" refid="class-environment-property-volumetric-fog-albedo"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_volumetric_fog_albedo</strong>(value: <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>get_volumetric_fog_albedo</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>与灯光交互时体积雾的 <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference>。当烟雾的反照率颜色更暗时，薄雾和雾的反照率颜色接近 <literal>Color(1, 1, 1, 1)</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-volumetric-fog-ambient-inject"></target>
            <paragraph classes="classref-property" ids="class-environment-property-volumetric-fog-ambient-inject" names="class_environment_property_volumetric_fog_ambient_inject"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>volumetric_fog_ambient_inject</strong> = <literal>0.0</literal> <reference internal="True" refid="class-environment-property-volumetric-fog-ambient-inject"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_volumetric_fog_ambient_inject</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_volumetric_fog_ambient_inject</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>衡量体积雾中使用的环境光的强度。值为 <literal>0.0</literal> ，意味着环境光不会影响体积雾。当 <reference internal="True" refid="class-environment-property-volumetric-fog-ambient-inject"><inline classes="std std-ref">volumetric_fog_ambient_inject</inline></reference> 设置高于 <literal>0.0</literal> 时，会有一个小的性能成本。</paragraph>
            <paragraph><strong>注意：</strong>如果 <reference internal="True" refid="class-environment-property-volumetric-fog-density"><inline classes="std std-ref">volumetric_fog_density</inline></reference> 为 <literal>0.0</literal>，或 <reference internal="True" refid="class-environment-property-volumetric-fog-albedo"><inline classes="std std-ref">volumetric_fog_albedo</inline></reference> 是全黑的颜色，则该属性没有可见效果。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-volumetric-fog-anisotropy"></target>
            <paragraph classes="classref-property" ids="class-environment-property-volumetric-fog-anisotropy" names="class_environment_property_volumetric_fog_anisotropy"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>volumetric_fog_anisotropy</strong> = <literal>0.2</literal> <reference internal="True" refid="class-environment-property-volumetric-fog-anisotropy"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_volumetric_fog_anisotropy</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_volumetric_fog_anisotropy</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>散射光穿过体积雾时的方向。接近 <literal>1.0</literal> 的值意味着几乎所有的光都是向前散射的。接近 <literal>0.0</literal> 的值表示光在所有方向上均匀散射。接近 <literal>-1.0</literal> 的值表示光主要向后散射。雾和薄雾会稍微向前散射光，而烟雾则向各个方向均匀散射光。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-volumetric-fog-density"></target>
            <paragraph classes="classref-property" ids="class-environment-property-volumetric-fog-density" names="class_environment_property_volumetric_fog_density"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>volumetric_fog_density</strong> = <literal>0.05</literal> <reference internal="True" refid="class-environment-property-volumetric-fog-density"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_volumetric_fog_density</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_volumetric_fog_density</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>体积雾的基本<emphasis>指数</emphasis>密度。将其设置为希望全局拥有的最低密度。<reference internal="True" refuri="class_fogvolume#class-fogvolume"><inline classes="std std-ref">FogVolume</inline></reference> 可用于增加或减少特定区域的密度。雾渲染如同在现实生活中一样是指数式的。</paragraph>
            <paragraph><literal>0.0</literal> 的值会禁用全局体积雾，同时允许 <reference internal="True" refuri="class_fogvolume#class-fogvolume"><inline classes="std std-ref">FogVolume</inline></reference> 在特定区域显示体积雾。</paragraph>
            <paragraph>要使体积雾作为一种体积<emphasis>照明</emphasis>解决方案，请将 <reference internal="True" refid="class-environment-property-volumetric-fog-density"><inline classes="std std-ref">volumetric_fog_density</inline></reference> 设置为最低的非零值（<literal>0.0001</literal>），然后将灯光的 <reference internal="True" refuri="class_light3d#class-light3d-property-light-volumetric-fog-energy"><inline classes="std std-ref">Light3D.light_volumetric_fog_energy</inline></reference> 增加到 <literal>10000</literal> 和 <literal>100000</literal> 之间的值，以补偿极低的密度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-volumetric-fog-detail-spread"></target>
            <paragraph classes="classref-property" ids="class-environment-property-volumetric-fog-detail-spread" names="class_environment_property_volumetric_fog_detail_spread"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>volumetric_fog_detail_spread</strong> = <literal>2.0</literal> <reference internal="True" refid="class-environment-property-volumetric-fog-detail-spread"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_volumetric_fog_detail_spread</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_volumetric_fog_detail_spread</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>视锥体素缓冲区长度的大小分布。较高的值会压缩更靠近相机的视锥体素，并将更多细节放置在更靠近相机的位置。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-volumetric-fog-emission"></target>
            <paragraph classes="classref-property" ids="class-environment-property-volumetric-fog-emission" names="class_environment_property_volumetric_fog_emission"><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>volumetric_fog_emission</strong> = <literal>Color(0, 0, 0, 1)</literal> <reference internal="True" refid="class-environment-property-volumetric-fog-emission"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_volumetric_fog_emission</strong>(value: <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>get_volumetric_fog_emission</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>从体积雾发出的光。即使有自发光，体积雾也不会将光投射到其他表面上。自发光对于建立环境颜色很有用。由于体积雾效果仅使用单次散射，因此雾往往需要一点点自发光来柔化刺眼的阴影。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-volumetric-fog-emission-energy"></target>
            <paragraph classes="classref-property" ids="class-environment-property-volumetric-fog-emission-energy" names="class_environment_property_volumetric_fog_emission_energy"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>volumetric_fog_emission_energy</strong> = <literal>1.0</literal> <reference internal="True" refid="class-environment-property-volumetric-fog-emission-energy"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_volumetric_fog_emission_energy</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_volumetric_fog_emission_energy</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>从体积雾发出的光的亮度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-volumetric-fog-enabled"></target>
            <paragraph classes="classref-property" ids="class-environment-property-volumetric-fog-enabled" names="class_environment_property_volumetric_fog_enabled"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>volumetric_fog_enabled</strong> = <literal>false</literal> <reference internal="True" refid="class-environment-property-volumetric-fog-enabled"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_volumetric_fog_enabled</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_volumetric_fog_enabled</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>启用体积雾效果。体积雾使用与屏幕对齐的视锥体素缓冲区，来计算短至中等范围内的精确体积散射。体积雾与 <reference internal="True" refuri="class_fogvolume#class-fogvolume"><inline classes="std std-ref">FogVolume</inline></reference> 和灯光交互，以计算局部和全局的雾。体积雾使用一个基于消光、散射和自发光的 PBR 单一散射模型，它以密度、反照率和自发光的形式暴露给用户。</paragraph>
            <paragraph><strong>注意：</strong>体积雾只支持 Forward+ 渲染方式，不支持移动和兼容模式。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-volumetric-fog-gi-inject"></target>
            <paragraph classes="classref-property" ids="class-environment-property-volumetric-fog-gi-inject" names="class_environment_property_volumetric_fog_gi_inject"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>volumetric_fog_gi_inject</strong> = <literal>1.0</literal> <reference internal="True" refid="class-environment-property-volumetric-fog-gi-inject"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_volumetric_fog_gi_inject</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_volumetric_fog_gi_inject</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>衡量体积雾的反照率颜色中使用的全局照明的强度。值为<literal>0.0</literal> ，意味着全局照明不会影响体积雾。当 <reference internal="True" refid="class-environment-property-volumetric-fog-gi-inject"><inline classes="std std-ref">volumetric_fog_gi_inject</inline></reference> 设置高于<literal>0.0</literal> 时，会有很小的性能成本。</paragraph>
            <paragraph><strong>注意：</strong>如果 <reference internal="True" refid="class-environment-property-volumetric-fog-density"><inline classes="std std-ref">volumetric_fog_density</inline></reference> 为 <literal>0.0</literal>，或 <reference internal="True" refid="class-environment-property-volumetric-fog-albedo"><inline classes="std std-ref">volumetric_fog_albedo</inline></reference> 是全黑的颜色，则该选项没有可见效果。</paragraph>
            <paragraph><strong>注意：</strong>在使用 <reference internal="True" refid="class-environment-property-volumetric-fog-gi-inject"><inline classes="std std-ref">volumetric_fog_gi_inject</inline></reference> 时，只有 <reference internal="True" refuri="class_voxelgi#class-voxelgi"><inline classes="std std-ref">VoxelGI</inline></reference> 和 SDFGI（<reference internal="True" refid="class-environment-property-sdfgi-enabled"><inline classes="std std-ref">sdfgi_enabled</inline></reference>）会被考虑到。来自 <reference internal="True" refuri="class_lightmapgi#class-lightmapgi"><inline classes="std std-ref">LightmapGI</inline></reference>、<reference internal="True" refuri="class_reflectionprobe#class-reflectionprobe"><inline classes="std std-ref">ReflectionProbe</inline></reference> 和 SSIL（参见 <reference internal="True" refid="class-environment-property-ssil-enabled"><inline classes="std std-ref">ssil_enabled</inline></reference>）的全局照明将被体积雾所忽略。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-volumetric-fog-length"></target>
            <paragraph classes="classref-property" ids="class-environment-property-volumetric-fog-length" names="class_environment_property_volumetric_fog_length"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>volumetric_fog_length</strong> = <literal>64.0</literal> <reference internal="True" refid="class-environment-property-volumetric-fog-length"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_volumetric_fog_length</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_volumetric_fog_length</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>计算体积雾的距离。增加以在更大范围内计算雾，减少以在不需要长范围时添加更多细节。为了获得最佳质量的雾，请将其保持在尽可能低的水平。另请参阅 <reference internal="True" refuri="class_projectsettings#class-projectsettings-property-rendering-environment-volumetric-fog-volume-depth"><inline classes="std std-ref">ProjectSettings.rendering/environment/volumetric_fog/volume_depth</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-volumetric-fog-sky-affect"></target>
            <paragraph classes="classref-property" ids="class-environment-property-volumetric-fog-sky-affect" names="class_environment_property_volumetric_fog_sky_affect"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>volumetric_fog_sky_affect</strong> = <literal>1.0</literal> <reference internal="True" refid="class-environment-property-volumetric-fog-sky-affect"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_volumetric_fog_sky_affect</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_volumetric_fog_sky_affect</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>使用体积雾影响天空时使用的系数。<literal>1.0</literal>表示体积雾可以完全遮蔽天空。较低的值会减少体积雾对天空渲染的影响，<literal>0.0</literal> 根本不会影响天空的渲染。</paragraph>
            <paragraph><strong>注意：</strong>即使 <reference internal="True" refid="class-environment-property-volumetric-fog-density"><inline classes="std std-ref">volumetric_fog_density</inline></reference> 为 <literal>0.0</literal>，<reference internal="True" refid="class-environment-property-volumetric-fog-sky-affect"><inline classes="std std-ref">volumetric_fog_sky_affect</inline></reference> 也会影响 <reference internal="True" refuri="class_fogvolume#class-fogvolume"><inline classes="std std-ref">FogVolume</inline></reference>。如果发现 <reference internal="True" refuri="class_fogvolume#class-fogvolume"><inline classes="std std-ref">FogVolume</inline></reference> 在仰望天空时正在消失，请将 <reference internal="True" refid="class-environment-property-volumetric-fog-sky-affect"><inline classes="std std-ref">volumetric_fog_sky_affect</inline></reference> 设置为 <literal>1.0</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-volumetric-fog-temporal-reprojection-amount"></target>
            <paragraph classes="classref-property" ids="class-environment-property-volumetric-fog-temporal-reprojection-amount" names="class_environment_property_volumetric_fog_temporal_reprojection_amount"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>volumetric_fog_temporal_reprojection_amount</strong> = <literal>0.9</literal> <reference internal="True" refid="class-environment-property-volumetric-fog-temporal-reprojection-amount"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_volumetric_fog_temporal_reprojection_amount</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_volumetric_fog_temporal_reprojection_amount</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>将最后一帧与当前帧混合的量。更高的数值会导致体积雾更平滑，但会使“重影”变得更糟。更低的值会减少重影，但会导致每帧时间抖动变得可见。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-property-volumetric-fog-temporal-reprojection-enabled"></target>
            <paragraph classes="classref-property" ids="class-environment-property-volumetric-fog-temporal-reprojection-enabled" names="class_environment_property_volumetric_fog_temporal_reprojection_enabled"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>volumetric_fog_temporal_reprojection_enabled</strong> = <literal>true</literal> <reference internal="True" refid="class-environment-property-volumetric-fog-temporal-reprojection-enabled"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_volumetric_fog_temporal_reprojection_enabled</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_volumetric_fog_temporal_reprojection_enabled</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>在体积雾中启用时间重投影。时间重投影将当前帧的体积雾与上一帧的体积雾混合，以平滑锯齿状的边缘。性能成本最小；但是，它会导致移动 <reference internal="True" refuri="class_fogvolume#class-fogvolume"><inline classes="std std-ref">FogVolume</inline></reference> 和 <reference internal="True" refuri="class_light3d#class-light3d"><inline classes="std std-ref">Light3D</inline></reference> 时“重影”，并在它们身后留下痕迹。启用时间重投影时，尽量避免将 <reference internal="True" refuri="class_fogvolume#class-fogvolume"><inline classes="std std-ref">FogVolume</inline></reference> 或 <reference internal="True" refuri="class_light3d#class-light3d"><inline classes="std std-ref">Light3D</inline></reference> 移动得太快。短暂的动态光照效果应将 <reference internal="True" refuri="class_light3d#class-light3d-property-light-volumetric-fog-energy"><inline classes="std std-ref">Light3D.light_volumetric_fog_energy</inline></reference> 设置为 <literal>0.0</literal> 以避免重影。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id7" names="方法说明">
            <title>方法说明</title>
            <target refid="class-environment-method-get-glow-level"></target>
            <paragraph classes="classref-method" ids="class-environment-method-get-glow-level" names="class_environment_method_get_glow_level"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_glow_level</strong>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-environment-method-get-glow-level"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回辉光级别 <literal>idx</literal> 的强度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-environment-method-set-glow-level"></target>
            <paragraph classes="classref-method" ids="class-environment-method-set-glow-level" names="class_environment_method_set_glow_level"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_glow_level</strong>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, intensity: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <reference internal="True" refid="class-environment-method-set-glow-level"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置辉光级别 <literal>idx</literal> 的强度。大于 <literal>0.0</literal> 时启用该级别。每个级别都依赖于前一个级别。这意味着启用较高的辉光等级会减慢辉光效果的渲染速度，即使之前的等级没有启用。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效运算符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列位标志构成位掩码的整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

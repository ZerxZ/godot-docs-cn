<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_splitcontainer.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/SplitContainer.xml.</comment>
    <target refid="class-splitcontainer"></target>
    <section ids="splitcontainer class-splitcontainer" names="splitcontainer class_splitcontainer">
        <title>SplitContainer</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_container#class-container"><inline classes="std std-ref">Container</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_control#class-control"><inline classes="std std-ref">Control</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_canvasitem#class-canvasitem"><inline classes="std std-ref">CanvasItem</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph><strong>派生：</strong> <reference internal="True" refuri="class_hsplitcontainer#class-hsplitcontainer"><inline classes="std std-ref">HSplitContainer</inline></reference>, <reference internal="True" refuri="class_vsplitcontainer#class-vsplitcontainer"><inline classes="std std-ref">VSplitContainer</inline></reference></paragraph>
        <paragraph>将两个子控件垂直或水平分隔的容器，提供了用于调整分隔比例的抓取器。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>仅接受两个子控件的容器，会将它们垂直或水平排列，在中间创建一个分隔条。分隔条可以拖拽，从而改变两个控件的大小关系。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference internal="True" refuri="../tutorials/ui/gui_containers"><inline classes="doc">使用容器</inline></reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="65"></colspec>
                    <colspec colwidth="77"></colspec>
                    <colspec colwidth="11"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-splitcontainer-property-collapsed"><inline classes="std std-ref">collapsed</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-splitcontainer-draggervisibility"><inline classes="std std-ref">DraggerVisibility</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-splitcontainer-property-dragger-visibility"><inline classes="std std-ref">dragger_visibility</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-splitcontainer-property-split-offset"><inline classes="std std-ref">split_offset</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-splitcontainer-property-vertical"><inline classes="std std-ref">vertical</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id4" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="6"></colspec>
                    <colspec colwidth="87"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-splitcontainer-method-clamp-split-offset"><inline classes="std std-ref">clamp_split_offset</inline></reference> <strong>(</strong> <strong>)</strong></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id5" names="主题属性">
            <title>主题属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="35"></colspec>
                    <colspec colwidth="91"></colspec>
                    <colspec colwidth="8"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-splitcontainer-theme-constant-autohide"><inline classes="std std-ref">autohide</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-splitcontainer-theme-constant-minimum-grab-thickness"><inline classes="std std-ref">minimum_grab_thickness</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>6</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-splitcontainer-theme-constant-separation"><inline classes="std std-ref">separation</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>12</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-splitcontainer-theme-icon-grabber"><inline classes="std std-ref">grabber</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-splitcontainer-theme-icon-h-grabber"><inline classes="std std-ref">h_grabber</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-splitcontainer-theme-icon-v-grabber"><inline classes="std std-ref">v_grabber</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="信号">
            <title>信号</title>
            <target refid="class-splitcontainer-signal-dragged"></target>
            <paragraph classes="classref-signal" ids="class-splitcontainer-signal-dragged" names="class_splitcontainer_signal_dragged"><strong>dragged</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> offset <strong>)</strong></paragraph>
            <paragraph>当用户拖动拖动器时发出。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id7" names="枚举">
            <title>枚举</title>
            <target refid="enum-splitcontainer-draggervisibility"></target>
            <paragraph classes="classref-enumeration" ids="enum-splitcontainer-draggervisibility" names="enum_splitcontainer_draggervisibility">enum <strong>DraggerVisibility</strong>:</paragraph>
            <target refid="class-splitcontainer-constant-dragger-visible"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-splitcontainer-constant-dragger-visible" names="class_splitcontainer_constant_dragger_visible"><reference internal="True" refid="enum-splitcontainer-draggervisibility"><inline classes="std std-ref">DraggerVisibility</inline></reference> <strong>DRAGGER_VISIBLE</strong> = <literal>0</literal></paragraph>
            <paragraph>当光标悬停时，拆分拖动器是可见的。</paragraph>
            <target refid="class-splitcontainer-constant-dragger-hidden"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-splitcontainer-constant-dragger-hidden" names="class_splitcontainer_constant_dragger_hidden"><reference internal="True" refid="enum-splitcontainer-draggervisibility"><inline classes="std std-ref">DraggerVisibility</inline></reference> <strong>DRAGGER_HIDDEN</strong> = <literal>1</literal></paragraph>
            <paragraph>拆分拖动器永远不可见。</paragraph>
            <target refid="class-splitcontainer-constant-dragger-hidden-collapsed"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-splitcontainer-constant-dragger-hidden-collapsed" names="class_splitcontainer_constant_dragger_hidden_collapsed"><reference internal="True" refid="enum-splitcontainer-draggervisibility"><inline classes="std std-ref">DraggerVisibility</inline></reference> <strong>DRAGGER_HIDDEN_COLLAPSED</strong> = <literal>2</literal></paragraph>
            <paragraph>拆分拖动器永远不可见，其空间也被折叠。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id8" names="属性说明">
            <title>属性说明</title>
            <target refid="class-splitcontainer-property-collapsed"></target>
            <paragraph classes="classref-property" ids="class-splitcontainer-property-collapsed" names="class_splitcontainer_property_collapsed"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>collapsed</strong> = <literal>false</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_collapsed</strong> <strong>(</strong> <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_collapsed</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，第一个 <reference internal="True" refuri="class_control#class-control"><inline classes="std std-ref">Control</inline></reference> 的区域将被折叠并且拖动器将被禁用。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-splitcontainer-property-dragger-visibility"></target>
            <paragraph classes="classref-property" ids="class-splitcontainer-property-dragger-visibility" names="class_splitcontainer_property_dragger_visibility"><reference internal="True" refid="enum-splitcontainer-draggervisibility"><inline classes="std std-ref">DraggerVisibility</inline></reference> <strong>dragger_visibility</strong> = <literal>0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_dragger_visibility</strong> <strong>(</strong> <reference internal="True" refid="enum-splitcontainer-draggervisibility"><inline classes="std std-ref">DraggerVisibility</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-splitcontainer-draggervisibility"><inline classes="std std-ref">DraggerVisibility</inline></reference> <strong>get_dragger_visibility</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>确定拖动器的可见性。有关详细信息，请参阅 <reference internal="True" refid="enum-splitcontainer-draggervisibility"><inline classes="std std-ref">DraggerVisibility</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-splitcontainer-property-split-offset"></target>
            <paragraph classes="classref-property" ids="class-splitcontainer-property-split-offset" names="class_splitcontainer_property_split_offset"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>split_offset</strong> = <literal>0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_split_offset</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_split_offset</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>两个 <reference internal="True" refuri="class_control#class-control"><inline classes="std std-ref">Control</inline></reference> 之间拆分的初始偏移量，<literal>0</literal> 位于第一个 <reference internal="True" refuri="class_control#class-control"><inline classes="std std-ref">Control</inline></reference> 的末尾。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-splitcontainer-property-vertical"></target>
            <paragraph classes="classref-property" ids="class-splitcontainer-property-vertical" names="class_splitcontainer_property_vertical"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>vertical</strong> = <literal>false</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_vertical</strong> <strong>(</strong> <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_vertical</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则该 <strong>SplitContainer</strong> 会垂直排列其子代，而不是水平排列。</paragraph>
            <paragraph>在使用 <reference internal="True" refuri="class_hsplitcontainer#class-hsplitcontainer"><inline classes="std std-ref">HSplitContainer</inline></reference> 和 <reference internal="True" refuri="class_vsplitcontainer#class-vsplitcontainer"><inline classes="std std-ref">VSplitContainer</inline></reference> 时无法改变。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id9" names="方法说明">
            <title>方法说明</title>
            <target refid="class-splitcontainer-method-clamp-split-offset"></target>
            <paragraph classes="classref-method" ids="class-splitcontainer-method-clamp-split-offset" names="class_splitcontainer_method_clamp_split_offset">void <strong>clamp_split_offset</strong> <strong>(</strong> <strong>)</strong></paragraph>
            <paragraph>限制 <reference internal="True" refid="class-splitcontainer-property-split-offset"><inline classes="std std-ref">split_offset</inline></reference> 值不超出当前可能的最小值和最大值。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id10" names="主题属性说明">
            <title>主题属性说明</title>
            <target refid="class-splitcontainer-theme-constant-autohide"></target>
            <paragraph classes="classref-themeproperty" ids="class-splitcontainer-theme-constant-autohide" names="class_splitcontainer_theme_constant_autohide"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>autohide</strong> = <literal>1</literal></paragraph>
            <paragraph>布尔值。如果1 (<literal>true</literal>)，抓取器将在不在光标下时自动隐藏。如果0 (<literal>false</literal>)，抓取器总是可见。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-splitcontainer-theme-constant-minimum-grab-thickness"></target>
            <paragraph classes="classref-themeproperty" ids="class-splitcontainer-theme-constant-minimum-grab-thickness" names="class_splitcontainer_theme_constant_minimum_grab_thickness"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>minimum_grab_thickness</strong> = <literal>6</literal></paragraph>
            <paragraph>用户可以点击以抓取分割线的区域的最小厚度。如果 <reference internal="True" refid="class-splitcontainer-theme-constant-separation"><inline classes="std std-ref">separation</inline></reference> 或 <reference internal="True" refid="class-splitcontainer-theme-icon-h-grabber"><inline classes="std std-ref">h_grabber</inline></reference> / <reference internal="True" refid="class-splitcontainer-theme-icon-v-grabber"><inline classes="std std-ref">v_grabber</inline></reference> 的厚度太小，这样可以确保拆分线仍然可以被拖动。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-splitcontainer-theme-constant-separation"></target>
            <paragraph classes="classref-themeproperty" ids="class-splitcontainer-theme-constant-separation" names="class_splitcontainer_theme_constant_separation"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>separation</strong> = <literal>12</literal></paragraph>
            <paragraph>容器两侧之间的空间。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-splitcontainer-theme-icon-grabber"></target>
            <paragraph classes="classref-themeproperty" ids="class-splitcontainer-theme-icon-grabber" names="class_splitcontainer_theme_icon_grabber"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>grabber</strong></paragraph>
            <paragraph>在中间区域绘制的抓取图标。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-splitcontainer-theme-icon-h-grabber"></target>
            <paragraph classes="classref-themeproperty" ids="class-splitcontainer-theme-icon-h-grabber" names="class_splitcontainer_theme_icon_h_grabber"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>h_grabber</strong></paragraph>
            <paragraph><reference internal="True" refid="class-splitcontainer-property-vertical"><inline classes="std std-ref">vertical</inline></reference> 为 <literal>false</literal> 时绘制在中间区域的抓取器图标。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-splitcontainer-theme-icon-v-grabber"></target>
            <paragraph classes="classref-themeproperty" ids="class-splitcontainer-theme-icon-v-grabber" names="class_splitcontainer_theme_icon_v_grabber"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>v_grabber</strong></paragraph>
            <paragraph><reference internal="True" refid="class-splitcontainer-property-vertical"><inline classes="std std-ref">vertical</inline></reference> 为 <literal>true</literal> 时绘制在中间区域的抓取器图标。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，所以可以直接使用类名调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

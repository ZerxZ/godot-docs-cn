<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_bone2d.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/Bone2D.xml.</comment>
    <target refid="class-bone2d"></target>
    <section ids="bone2d class-bone2d" names="bone2d class_bone2d">
        <title>Bone2D</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_node2d#class-node2d"><inline classes="std std-ref">Node2D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_canvasitem#class-canvasitem"><inline classes="std std-ref">CanvasItem</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>与 <reference internal="True" refuri="class_skeleton2d#class-skeleton2d"><inline classes="std std-ref">Skeleton2D</inline></reference> 一起使用的关节，能够控制并动画其他节点。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph><strong>Bone2D</strong> 层级结构可以绑定到 <reference internal="True" refuri="class_skeleton2d#class-skeleton2d"><inline classes="std std-ref">Skeleton2D</inline></reference> 上，控制并动画其他 <reference internal="True" refuri="class_node2d#class-node2d"><inline classes="std std-ref">Node2D</inline></reference> 节点。</paragraph>
            <paragraph>你可以使用 <strong>Bone2D</strong> 和 <reference internal="True" refuri="class_skeleton2d#class-skeleton2d"><inline classes="std std-ref">Skeleton2D</inline></reference> 节点对使用 <reference internal="True" refuri="class_polygon2d#class-polygon2d"><inline classes="std std-ref">Polygon2D</inline></reference> UV 编辑器创建的 2D 网格进行动画。</paragraph>
            <paragraph>每个骨骼都有一个 <reference internal="True" refid="class-bone2d-property-rest"><inline classes="std std-ref">rest</inline></reference> 变换，你可以用 <reference internal="True" refid="class-bone2d-method-apply-rest"><inline classes="std std-ref">apply_rest</inline></reference> 来重置到这个变换。这些放松姿势是相对于骨骼的父节点而言的。</paragraph>
            <paragraph>如果在编辑器中，你可以使用菜单选项设置整个骨架的放松姿势，从代码中，你需要遍历骨骼来设置它们各自的放松姿势。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="39"></colspec>
                    <colspec colwidth="41"></colspec>
                    <colspec colwidth="35"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-bone2d-property-rest"><inline classes="std std-ref">rest</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Transform2D(0, 0, 0, 0, 0, 0)</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="39"></colspec>
                    <colspec colwidth="147"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-bone2d-method-apply-rest"><inline classes="std std-ref">apply_rest</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-bone2d-method-get-autocalculate-length-and-angle"><inline classes="std std-ref">get_autocalculate_length_and_angle</inline></reference>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-bone2d-method-get-bone-angle"><inline classes="std std-ref">get_bone_angle</inline></reference>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-bone2d-method-get-index-in-skeleton"><inline classes="std std-ref">get_index_in_skeleton</inline></reference>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-bone2d-method-get-length"><inline classes="std std-ref">get_length</inline></reference>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-bone2d-method-get-skeleton-rest"><inline classes="std std-ref">get_skeleton_rest</inline></reference>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-bone2d-method-set-autocalculate-length-and-angle"><inline classes="std std-ref">set_autocalculate_length_and_angle</inline></reference>(auto_calculate: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-bone2d-method-set-bone-angle"><inline classes="std std-ref">set_bone_angle</inline></reference>(angle: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-bone2d-method-set-length"><inline classes="std std-ref">set_length</inline></reference>(length: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="属性说明">
            <title>属性说明</title>
            <target refid="class-bone2d-property-rest"></target>
            <paragraph classes="classref-property" ids="class-bone2d-property-rest" names="class_bone2d_property_rest"><reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference> <strong>rest</strong> = <literal>Transform2D(0, 0, 0, 0, 0, 0)</literal> <reference internal="True" refid="class-bone2d-property-rest"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_rest</strong>(value: <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference> <strong>get_rest</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>骨骼的放松变换。你可以使用 <reference internal="True" refid="class-bone2d-method-apply-rest"><inline classes="std std-ref">apply_rest</inline></reference> 将节点的变换重置为这个值。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="方法说明">
            <title>方法说明</title>
            <target refid="class-bone2d-method-apply-rest"></target>
            <paragraph classes="classref-method" ids="class-bone2d-method-apply-rest" names="class_bone2d_method_apply_rest"><abbreviation explanation="无返回值。">void</abbreviation> <strong>apply_rest</strong>() <reference internal="True" refid="class-bone2d-method-apply-rest"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将骨骼重置为放松姿势。相当于将 <reference internal="True" refuri="class_node2d#class-node2d-property-transform"><inline classes="std std-ref">Node2D.transform</inline></reference> 设置为 <reference internal="True" refid="class-bone2d-property-rest"><inline classes="std std-ref">rest</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-bone2d-method-get-autocalculate-length-and-angle"></target>
            <paragraph classes="classref-method" ids="class-bone2d-method-get-autocalculate-length-and-angle" names="class_bone2d_method_get_autocalculate_length_and_angle"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_autocalculate_length_and_angle</strong>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-bone2d-method-get-autocalculate-length-and-angle"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果该 <strong>Bone2D</strong> 存在骨骼子节点，则返回是否要使用第一个 <strong>Bone2D</strong> 子节点自动计算其长度和骨骼角度。如果没有 <strong>Bone2D</strong> 子节点，则无法自动计算这些值，会打印一条警告。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-bone2d-method-get-bone-angle"></target>
            <paragraph classes="classref-method" ids="class-bone2d-method-get-bone-angle" names="class_bone2d_method_get_bone_angle"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_bone_angle</strong>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-bone2d-method-get-bone-angle"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回 <strong>Bone2D</strong> 中骨骼的角度。</paragraph>
            <paragraph><strong>注意：</strong>这与 <strong>Bone2D</strong> 的旋转不同。骨骼角度是小工具显示的骨骼旋转，不受 <strong>Bone2D</strong> 的 <reference internal="True" refuri="class_node2d#class-node2d-property-transform"><inline classes="std std-ref">Node2D.transform</inline></reference> 的影响。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-bone2d-method-get-index-in-skeleton"></target>
            <paragraph classes="classref-method" ids="class-bone2d-method-get-index-in-skeleton" names="class_bone2d_method_get_index_in_skeleton"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_index_in_skeleton</strong>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-bone2d-method-get-index-in-skeleton"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回节点在整个骨架中的索引号。见 <reference internal="True" refuri="class_skeleton2d#class-skeleton2d"><inline classes="std std-ref">Skeleton2D</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-bone2d-method-get-length"></target>
            <paragraph classes="classref-method" ids="class-bone2d-method-get-length" names="class_bone2d_method_get_length"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_length</strong>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-bone2d-method-get-length"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回 <strong>Bone2D</strong> 节点中骨骼的长度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-bone2d-method-get-skeleton-rest"></target>
            <paragraph classes="classref-method" ids="class-bone2d-method-get-skeleton-rest" names="class_bone2d_method_get_skeleton_rest"><reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference> <strong>get_skeleton_rest</strong>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-bone2d-method-get-skeleton-rest"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果节点没有父节点，返回节点的 <reference internal="True" refid="class-bone2d-property-rest"><inline classes="std std-ref">rest</inline></reference> <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference>，或者返回它相对于父节点的放松姿势。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-bone2d-method-set-autocalculate-length-and-angle"></target>
            <paragraph classes="classref-method" ids="class-bone2d-method-set-autocalculate-length-and-angle" names="class_bone2d_method_set_autocalculate_length_and_angle"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_autocalculate_length_and_angle</strong>(auto_calculate: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <reference internal="True" refid="class-bone2d-method-set-autocalculate-length-and-angle"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当设置为 <literal>true</literal> 时，该 <strong>Bone2D</strong> 节点将尝试使用第一个子 <strong>Bone2D</strong> 节点（如果存在）自动计算骨骼角度和长度。如果不存在子节点，<strong>Bone2D</strong> 将无法自动计算这些值，并将输出一条警告。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-bone2d-method-set-bone-angle"></target>
            <paragraph classes="classref-method" ids="class-bone2d-method-set-bone-angle" names="class_bone2d_method_set_bone_angle"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_bone_angle</strong>(angle: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <reference internal="True" refid="class-bone2d-method-set-bone-angle"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置 <strong>Bone2D</strong> 节点的骨骼角度。这通常设置为从 <strong>Bone2D</strong> 节点到子 <strong>Bone2D</strong> 节点的旋转。</paragraph>
            <paragraph><strong>注意：</strong>这与 <strong>Bone2D</strong> 的旋转不同。骨骼角度是 <strong>Bone2D</strong> 小工具显示的骨骼旋转，不受 <strong>Bone2D</strong> 的 <reference internal="True" refuri="class_node2d#class-node2d-property-transform"><inline classes="std std-ref">Node2D.transform</inline></reference> 的影响。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-bone2d-method-set-length"></target>
            <paragraph classes="classref-method" ids="class-bone2d-method-set-length" names="class_bone2d_method_set_length"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_length</strong>(length: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <reference internal="True" refid="class-bone2d-method-set-length"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置该 <strong>Bone2D</strong> 中骨骼的长度。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效运算符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列位标志构成位掩码的整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_colorpicker.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/ColorPicker.xml.</comment>
    <target refid="class-colorpicker"></target>
    <section ids="colorpicker class-colorpicker" names="colorpicker class_colorpicker">
        <title>ColorPicker</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_vboxcontainer#class-vboxcontainer"><inline classes="std std-ref">VBoxContainer</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_boxcontainer#class-boxcontainer"><inline classes="std std-ref">BoxContainer</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_container#class-container"><inline classes="std std-ref">Container</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_control#class-control"><inline classes="std std-ref">Control</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_canvasitem#class-canvasitem"><inline classes="std std-ref">CanvasItem</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>提供用于选择或修改颜色的界面的小工具。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>提供用于选择或修改颜色的界面的小工具。还可以提供取色器（吸管）、颜色模式、预设等功能。</paragraph>
            <paragraph><strong>注意：</strong>这个控件就是取色器本身。如果你需要一个能够弹出 <strong>ColorPicker</strong> 窗口的按钮，可以改用 <reference internal="True" refuri="class_colorpickerbutton#class-colorpickerbutton"><inline classes="std std-ref">ColorPickerButton</inline></reference>。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference name="Tween 演示" refuri="https://godotengine.org/asset-library/asset/146">Tween 演示</reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="58"></colspec>
                    <colspec colwidth="76"></colspec>
                    <colspec colwidth="23"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-colorpicker-property-can-add-swatches"><inline classes="std std-ref">can_add_swatches</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-colorpicker-property-color"><inline classes="std std-ref">color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Color(1, 1, 1, 1)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-colorpicker-colormodetype"><inline classes="std std-ref">ColorModeType</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-colorpicker-property-color-mode"><inline classes="std std-ref">color_mode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-colorpicker-property-color-modes-visible"><inline classes="std std-ref">color_modes_visible</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-colorpicker-property-deferred-mode"><inline classes="std std-ref">deferred_mode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-colorpicker-property-edit-alpha"><inline classes="std std-ref">edit_alpha</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-colorpicker-property-hex-visible"><inline classes="std std-ref">hex_visible</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-colorpicker-pickershapetype"><inline classes="std std-ref">PickerShapeType</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-colorpicker-property-picker-shape"><inline classes="std std-ref">picker_shape</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-colorpicker-property-presets-visible"><inline classes="std std-ref">presets_visible</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-colorpicker-property-sampler-visible"><inline classes="std std-ref">sampler_visible</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-colorpicker-property-sliders-visible"><inline classes="std std-ref">sliders_visible</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id4" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="49"></colspec>
                    <colspec colwidth="118"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-colorpicker-method-add-preset"><inline classes="std std-ref">add_preset</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> color <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-colorpicker-method-add-recent-preset"><inline classes="std std-ref">add_recent_preset</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> color <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-colorpicker-method-erase-preset"><inline classes="std std-ref">erase_preset</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> color <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-colorpicker-method-erase-recent-preset"><inline classes="std std-ref">erase_recent_preset</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> color <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_packedcolorarray#class-packedcolorarray"><inline classes="std std-ref">PackedColorArray</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-colorpicker-method-get-presets"><inline classes="std std-ref">get_presets</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_packedcolorarray#class-packedcolorarray"><inline classes="std std-ref">PackedColorArray</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-colorpicker-method-get-recent-presets"><inline classes="std std-ref">get_recent_presets</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id5" names="主题属性">
            <title>主题属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="35"></colspec>
                    <colspec colwidth="88"></colspec>
                    <colspec colwidth="9"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-colorpicker-theme-constant-center-slider-grabbers"><inline classes="std std-ref">center_slider_grabbers</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-colorpicker-theme-constant-h-width"><inline classes="std std-ref">h_width</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>30</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-colorpicker-theme-constant-label-width"><inline classes="std std-ref">label_width</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>10</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-colorpicker-theme-constant-margin"><inline classes="std std-ref">margin</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>4</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-colorpicker-theme-constant-sv-height"><inline classes="std std-ref">sv_height</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>256</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-colorpicker-theme-constant-sv-width"><inline classes="std std-ref">sv_width</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>256</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-colorpicker-theme-icon-add-preset"><inline classes="std std-ref">add_preset</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-colorpicker-theme-icon-bar-arrow"><inline classes="std std-ref">bar_arrow</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-colorpicker-theme-icon-color-hue"><inline classes="std std-ref">color_hue</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-colorpicker-theme-icon-color-okhsl-hue"><inline classes="std std-ref">color_okhsl_hue</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-colorpicker-theme-icon-expanded-arrow"><inline classes="std std-ref">expanded_arrow</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-colorpicker-theme-icon-folded-arrow"><inline classes="std std-ref">folded_arrow</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-colorpicker-theme-icon-overbright-indicator"><inline classes="std std-ref">overbright_indicator</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-colorpicker-theme-icon-picker-cursor"><inline classes="std std-ref">picker_cursor</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-colorpicker-theme-icon-sample-bg"><inline classes="std std-ref">sample_bg</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-colorpicker-theme-icon-screen-picker"><inline classes="std std-ref">screen_picker</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-colorpicker-theme-icon-shape-circle"><inline classes="std std-ref">shape_circle</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-colorpicker-theme-icon-shape-rect"><inline classes="std std-ref">shape_rect</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-colorpicker-theme-icon-shape-rect-wheel"><inline classes="std std-ref">shape_rect_wheel</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="信号">
            <title>信号</title>
            <target refid="class-colorpicker-signal-color-changed"></target>
            <paragraph classes="classref-signal" ids="class-colorpicker-signal-color-changed" names="class_colorpicker_signal_color_changed"><strong>color_changed</strong> <strong>(</strong> <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> color <strong>)</strong></paragraph>
            <paragraph>更改颜色时发出。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-colorpicker-signal-preset-added"></target>
            <paragraph classes="classref-signal" ids="class-colorpicker-signal-preset-added" names="class_colorpicker_signal_preset_added"><strong>preset_added</strong> <strong>(</strong> <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> color <strong>)</strong></paragraph>
            <paragraph>添加预设时发出。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-colorpicker-signal-preset-removed"></target>
            <paragraph classes="classref-signal" ids="class-colorpicker-signal-preset-removed" names="class_colorpicker_signal_preset_removed"><strong>preset_removed</strong> <strong>(</strong> <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> color <strong>)</strong></paragraph>
            <paragraph>移除预设时发出。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id7" names="枚举">
            <title>枚举</title>
            <target refid="enum-colorpicker-colormodetype"></target>
            <paragraph classes="classref-enumeration" ids="enum-colorpicker-colormodetype" names="enum_colorpicker_colormodetype">enum <strong>ColorModeType</strong>:</paragraph>
            <target refid="class-colorpicker-constant-mode-rgb"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-colorpicker-constant-mode-rgb" names="class_colorpicker_constant_mode_rgb"><reference internal="True" refid="enum-colorpicker-colormodetype"><inline classes="std std-ref">ColorModeType</inline></reference> <strong>MODE_RGB</strong> = <literal>0</literal></paragraph>
            <paragraph>允许使用红、绿、蓝滑块编辑颜色。</paragraph>
            <target refid="class-colorpicker-constant-mode-hsv"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-colorpicker-constant-mode-hsv" names="class_colorpicker_constant_mode_hsv"><reference internal="True" refid="enum-colorpicker-colormodetype"><inline classes="std std-ref">ColorModeType</inline></reference> <strong>MODE_HSV</strong> = <literal>1</literal></paragraph>
            <paragraph>允许使用色相、饱和度、明度滑块编辑颜色。</paragraph>
            <target refid="class-colorpicker-constant-mode-raw"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-colorpicker-constant-mode-raw" names="class_colorpicker_constant_mode_raw"><reference internal="True" refid="enum-colorpicker-colormodetype"><inline classes="std std-ref">ColorModeType</inline></reference> <strong>MODE_RAW</strong> = <literal>2</literal></paragraph>
            <paragraph>允许颜色 R、G、B 分量值超过 1.0，这可用于某些需要它的特殊操作（例如在 HDR 中，着色而不变暗或渲染精灵）。</paragraph>
            <target refid="class-colorpicker-constant-mode-okhsl"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-colorpicker-constant-mode-okhsl" names="class_colorpicker_constant_mode_okhsl"><reference internal="True" refid="enum-colorpicker-colormodetype"><inline classes="std std-ref">ColorModeType</inline></reference> <strong>MODE_OKHSL</strong> = <literal>3</literal></paragraph>
            <paragraph>允许使用色相/饱和度/亮度滑块编辑颜色。</paragraph>
            <paragraph>OKHSL 是一种类似于 HSL 的新色彩空间，但通过利用设计简单易用的 Oklab 色彩空间更好地匹配感知，同时在预测感知亮度、色度和色调方面做得很好。</paragraph>
            <paragraph><reference name="Okhsv 和 Okhsl 色彩空间" refuri="https://bottosson.github.io/posts/colorpicker/">Okhsv 和 Okhsl 色彩空间</reference></paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-colorpicker-pickershapetype"></target>
            <paragraph classes="classref-enumeration" ids="enum-colorpicker-pickershapetype" names="enum_colorpicker_pickershapetype">enum <strong>PickerShapeType</strong>:</paragraph>
            <target refid="class-colorpicker-constant-shape-hsv-rectangle"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-colorpicker-constant-shape-hsv-rectangle" names="class_colorpicker_constant_shape_hsv_rectangle"><reference internal="True" refid="enum-colorpicker-pickershapetype"><inline classes="std std-ref">PickerShapeType</inline></reference> <strong>SHAPE_HSV_RECTANGLE</strong> = <literal>0</literal></paragraph>
            <paragraph>HSV 颜色模型矩形色彩空间。</paragraph>
            <target refid="class-colorpicker-constant-shape-hsv-wheel"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-colorpicker-constant-shape-hsv-wheel" names="class_colorpicker_constant_shape_hsv_wheel"><reference internal="True" refid="enum-colorpicker-pickershapetype"><inline classes="std std-ref">PickerShapeType</inline></reference> <strong>SHAPE_HSV_WHEEL</strong> = <literal>1</literal></paragraph>
            <paragraph>HSV 颜色模型矩形色彩空间，带轮。</paragraph>
            <target refid="class-colorpicker-constant-shape-vhs-circle"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-colorpicker-constant-shape-vhs-circle" names="class_colorpicker_constant_shape_vhs_circle"><reference internal="True" refid="enum-colorpicker-pickershapetype"><inline classes="std std-ref">PickerShapeType</inline></reference> <strong>SHAPE_VHS_CIRCLE</strong> = <literal>2</literal></paragraph>
            <paragraph>HSV 颜色模型圆形色彩空间。半径为饱和度。</paragraph>
            <target refid="class-colorpicker-constant-shape-okhsl-circle"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-colorpicker-constant-shape-okhsl-circle" names="class_colorpicker_constant_shape_okhsl_circle"><reference internal="True" refid="enum-colorpicker-pickershapetype"><inline classes="std std-ref">PickerShapeType</inline></reference> <strong>SHAPE_OKHSL_CIRCLE</strong> = <literal>3</literal></paragraph>
            <paragraph>HSL OK 颜色模型圆形色彩空间。</paragraph>
            <target refid="class-colorpicker-constant-shape-none"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-colorpicker-constant-shape-none" names="class_colorpicker_constant_shape_none"><reference internal="True" refid="enum-colorpicker-pickershapetype"><inline classes="std std-ref">PickerShapeType</inline></reference> <strong>SHAPE_NONE</strong> = <literal>4</literal></paragraph>
            <paragraph>色彩空间形状和形状选择按钮被隐藏。不能从形状弹出窗口中选择。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id8" names="属性说明">
            <title>属性说明</title>
            <target refid="class-colorpicker-property-can-add-swatches"></target>
            <paragraph classes="classref-property" ids="class-colorpicker-property-can-add-swatches" names="class_colorpicker_property_can_add_swatches"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>can_add_swatches</strong> = <literal>true</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_can_add_swatches</strong> <strong>(</strong> <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>are_swatches_enabled</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则可以在色板下添加预设。如果为 <literal>false</literal>，添加预设的按钮将被禁用。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-colorpicker-property-color"></target>
            <paragraph classes="classref-property" ids="class-colorpicker-property-color" names="class_colorpicker_property_color"><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>color</strong> = <literal>Color(1, 1, 1, 1)</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_pick_color</strong> <strong>(</strong> <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>get_pick_color</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>当前选择的颜色。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-colorpicker-property-color-mode"></target>
            <paragraph classes="classref-property" ids="class-colorpicker-property-color-mode" names="class_colorpicker_property_color_mode"><reference internal="True" refid="enum-colorpicker-colormodetype"><inline classes="std std-ref">ColorModeType</inline></reference> <strong>color_mode</strong> = <literal>0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_color_mode</strong> <strong>(</strong> <reference internal="True" refid="enum-colorpicker-colormodetype"><inline classes="std std-ref">ColorModeType</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-colorpicker-colormodetype"><inline classes="std std-ref">ColorModeType</inline></reference> <strong>get_color_mode</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>当前选择的颜色模式。见 <reference internal="True" refid="enum-colorpicker-colormodetype"><inline classes="std std-ref">ColorModeType</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-colorpicker-property-color-modes-visible"></target>
            <paragraph classes="classref-property" ids="class-colorpicker-property-color-modes-visible" names="class_colorpicker_property_color_modes_visible"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>color_modes_visible</strong> = <literal>true</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_modes_visible</strong> <strong>(</strong> <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>are_modes_visible</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则颜色模式按钮可见。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-colorpicker-property-deferred-mode"></target>
            <paragraph classes="classref-property" ids="class-colorpicker-property-deferred-mode" names="class_colorpicker_property_deferred_mode"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>deferred_mode</strong> = <literal>false</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_deferred_mode</strong> <strong>(</strong> <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_deferred_mode</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，只有在用户松开鼠标按钮后才会应用颜色，否则即使在鼠标移动事件中也会立即应用（会造成性能问题）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-colorpicker-property-edit-alpha"></target>
            <paragraph classes="classref-property" ids="class-colorpicker-property-edit-alpha" names="class_colorpicker_property_edit_alpha"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>edit_alpha</strong> = <literal>true</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_edit_alpha</strong> <strong>(</strong> <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_editing_alpha</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则显示 Alpha 通道滑动条（不透明度）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-colorpicker-property-hex-visible"></target>
            <paragraph classes="classref-property" ids="class-colorpicker-property-hex-visible" names="class_colorpicker_property_hex_visible"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>hex_visible</strong> = <literal>true</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_hex_visible</strong> <strong>(</strong> <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_hex_visible</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则十六进制颜色代码输入框可见。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-colorpicker-property-picker-shape"></target>
            <paragraph classes="classref-property" ids="class-colorpicker-property-picker-shape" names="class_colorpicker_property_picker_shape"><reference internal="True" refid="enum-colorpicker-pickershapetype"><inline classes="std std-ref">PickerShapeType</inline></reference> <strong>picker_shape</strong> = <literal>0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_picker_shape</strong> <strong>(</strong> <reference internal="True" refid="enum-colorpicker-pickershapetype"><inline classes="std std-ref">PickerShapeType</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-colorpicker-pickershapetype"><inline classes="std std-ref">PickerShapeType</inline></reference> <strong>get_picker_shape</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>色彩空间视图的形状。见 <reference internal="True" refid="enum-colorpicker-pickershapetype"><inline classes="std std-ref">PickerShapeType</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-colorpicker-property-presets-visible"></target>
            <paragraph classes="classref-property" ids="class-colorpicker-property-presets-visible" names="class_colorpicker_property_presets_visible"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>presets_visible</strong> = <literal>true</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_presets_visible</strong> <strong>(</strong> <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>are_presets_visible</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则色板和近期颜色预设可见。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-colorpicker-property-sampler-visible"></target>
            <paragraph classes="classref-property" ids="class-colorpicker-property-sampler-visible" names="class_colorpicker_property_sampler_visible"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>sampler_visible</strong> = <literal>true</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_sampler_visible</strong> <strong>(</strong> <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_sampler_visible</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则颜色采样器和颜色预览可见。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-colorpicker-property-sliders-visible"></target>
            <paragraph classes="classref-property" ids="class-colorpicker-property-sliders-visible" names="class_colorpicker_property_sliders_visible"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>sliders_visible</strong> = <literal>true</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_sliders_visible</strong> <strong>(</strong> <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>are_sliders_visible</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则颜色滑块可见。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id9" names="方法说明">
            <title>方法说明</title>
            <target refid="class-colorpicker-method-add-preset"></target>
            <paragraph classes="classref-method" ids="class-colorpicker-method-add-preset" names="class_colorpicker_method_add_preset">void <strong>add_preset</strong> <strong>(</strong> <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> color <strong>)</strong></paragraph>
            <paragraph>将给定的颜色添加到颜色预设列表中。预设会显示在取色器中，可以被用户选择。</paragraph>
            <paragraph><strong>注意：</strong>预设列表仅适用于<emphasis>这个</emphasis>取色器。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-colorpicker-method-add-recent-preset"></target>
            <paragraph classes="classref-method" ids="class-colorpicker-method-add-recent-preset" names="class_colorpicker_method_add_recent_preset">void <strong>add_recent_preset</strong> <strong>(</strong> <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> color <strong>)</strong></paragraph>
            <paragraph>将给定的颜色添加到近期颜色预设列表中，以便以后可以选择它。近期预设是最近选择的颜色，当选择新颜色时，会自动创建新的预设并将其添加到近期预设中。</paragraph>
            <paragraph><strong>注意：</strong>近期预设列表仅适用于<emphasis>这个</emphasis>取色器。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-colorpicker-method-erase-preset"></target>
            <paragraph classes="classref-method" ids="class-colorpicker-method-erase-preset" names="class_colorpicker_method_erase_preset">void <strong>erase_preset</strong> <strong>(</strong> <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> color <strong>)</strong></paragraph>
            <paragraph>从这个取色器的颜色预设列表中移除给定的颜色。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-colorpicker-method-erase-recent-preset"></target>
            <paragraph classes="classref-method" ids="class-colorpicker-method-erase-recent-preset" names="class_colorpicker_method_erase_recent_preset">void <strong>erase_recent_preset</strong> <strong>(</strong> <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> color <strong>)</strong></paragraph>
            <paragraph>从这个取色器的颜色近期预设列表中移除给定的颜色。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-colorpicker-method-get-presets"></target>
            <paragraph classes="classref-method" ids="class-colorpicker-method-get-presets" names="class_colorpicker_method_get_presets"><reference internal="True" refuri="class_packedcolorarray#class-packedcolorarray"><inline classes="std std-ref">PackedColorArray</inline></reference> <strong>get_presets</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回取色器的预设颜色列表。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-colorpicker-method-get-recent-presets"></target>
            <paragraph classes="classref-method" ids="class-colorpicker-method-get-recent-presets" names="class_colorpicker_method_get_recent_presets"><reference internal="True" refuri="class_packedcolorarray#class-packedcolorarray"><inline classes="std std-ref">PackedColorArray</inline></reference> <strong>get_recent_presets</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回取色器的近期预设中的颜色列表。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id10" names="主题属性说明">
            <title>主题属性说明</title>
            <target refid="class-colorpicker-theme-constant-center-slider-grabbers"></target>
            <paragraph classes="classref-themeproperty" ids="class-colorpicker-theme-constant-center-slider-grabbers" names="class_colorpicker_theme_constant_center_slider_grabbers"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>center_slider_grabbers</strong> = <literal>1</literal></paragraph>
            <paragraph>覆盖滑块的 <reference internal="True" refuri="class_slider#class-slider-theme-constant-center-grabber"><inline classes="std std-ref">Slider.center_grabber</inline></reference> 主题属性。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-colorpicker-theme-constant-h-width"></target>
            <paragraph classes="classref-themeproperty" ids="class-colorpicker-theme-constant-h-width" names="class_colorpicker_theme_constant_h_width"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>h_width</strong> = <literal>30</literal></paragraph>
            <paragraph>色相选择滑块的宽度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-colorpicker-theme-constant-label-width"></target>
            <paragraph classes="classref-themeproperty" ids="class-colorpicker-theme-constant-label-width" names="class_colorpicker_theme_constant_label_width"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>label_width</strong> = <literal>10</literal></paragraph>
            <paragraph>滑块旁颜色标签的最小宽度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-colorpicker-theme-constant-margin"></target>
            <paragraph classes="classref-themeproperty" ids="class-colorpicker-theme-constant-margin" names="class_colorpicker_theme_constant_margin"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>margin</strong> = <literal>4</literal></paragraph>
            <paragraph><strong>ColorPicker</strong> 周围的边距。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-colorpicker-theme-constant-sv-height"></target>
            <paragraph classes="classref-themeproperty" ids="class-colorpicker-theme-constant-sv-height" names="class_colorpicker_theme_constant_sv_height"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>sv_height</strong> = <literal>256</literal></paragraph>
            <paragraph>饱和值选择框的高度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-colorpicker-theme-constant-sv-width"></target>
            <paragraph classes="classref-themeproperty" ids="class-colorpicker-theme-constant-sv-width" names="class_colorpicker_theme_constant_sv_width"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>sv_width</strong> = <literal>256</literal></paragraph>
            <paragraph>饱和度选择框的宽度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-colorpicker-theme-icon-add-preset"></target>
            <paragraph classes="classref-themeproperty" ids="class-colorpicker-theme-icon-add-preset" names="class_colorpicker_theme_icon_add_preset"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>add_preset</strong></paragraph>
            <paragraph>“添加预设”按钮的图标。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-colorpicker-theme-icon-bar-arrow"></target>
            <paragraph classes="classref-themeproperty" ids="class-colorpicker-theme-icon-bar-arrow" names="class_colorpicker_theme_icon_bar_arrow"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>bar_arrow</strong></paragraph>
            <paragraph>箭头抓取器的纹理。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-colorpicker-theme-icon-color-hue"></target>
            <paragraph classes="classref-themeproperty" ids="class-colorpicker-theme-icon-color-hue" names="class_colorpicker_theme_icon_color_hue"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>color_hue</strong></paragraph>
            <paragraph>右侧的色相选择滑块的自定义纹理。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-colorpicker-theme-icon-color-okhsl-hue"></target>
            <paragraph classes="classref-themeproperty" ids="class-colorpicker-theme-icon-color-okhsl-hue" names="class_colorpicker_theme_icon_color_okhsl_hue"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>color_okhsl_hue</strong></paragraph>
            <paragraph>OKHSL 颜色模式的 H 滑块的自定义纹理。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-colorpicker-theme-icon-expanded-arrow"></target>
            <paragraph classes="classref-themeproperty" ids="class-colorpicker-theme-icon-expanded-arrow" names="class_colorpicker_theme_icon_expanded_arrow"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>expanded_arrow</strong></paragraph>
            <paragraph>颜色预设下拉菜单展开时使用的图标。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-colorpicker-theme-icon-folded-arrow"></target>
            <paragraph classes="classref-themeproperty" ids="class-colorpicker-theme-icon-folded-arrow" names="class_colorpicker_theme_icon_folded_arrow"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>folded_arrow</strong></paragraph>
            <paragraph>颜色预设下拉菜单折叠时使用的图标。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-colorpicker-theme-icon-overbright-indicator"></target>
            <paragraph classes="classref-themeproperty" ids="class-colorpicker-theme-icon-overbright-indicator" names="class_colorpicker_theme_icon_overbright_indicator"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>overbright_indicator</strong></paragraph>
            <paragraph>该指示器用于指示颜色值在 0-1 范围之外。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-colorpicker-theme-icon-picker-cursor"></target>
            <paragraph classes="classref-themeproperty" ids="class-colorpicker-theme-icon-picker-cursor" names="class_colorpicker_theme_icon_picker_cursor"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>picker_cursor</strong></paragraph>
            <paragraph>显示在颜色框/圆（取决于 <reference internal="True" refid="class-colorpicker-property-picker-shape"><inline classes="std std-ref">picker_shape</inline></reference>）上的图像，标记当前选择的颜色。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-colorpicker-theme-icon-sample-bg"></target>
            <paragraph classes="classref-themeproperty" ids="class-colorpicker-theme-icon-sample-bg" names="class_colorpicker_theme_icon_sample_bg"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>sample_bg</strong></paragraph>
            <paragraph>颜色预览框的背景面板（颜色为半透明时可见）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-colorpicker-theme-icon-screen-picker"></target>
            <paragraph classes="classref-themeproperty" ids="class-colorpicker-theme-icon-screen-picker" names="class_colorpicker_theme_icon_screen_picker"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>screen_picker</strong></paragraph>
            <paragraph>屏幕取色器按钮的图标。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-colorpicker-theme-icon-shape-circle"></target>
            <paragraph classes="classref-themeproperty" ids="class-colorpicker-theme-icon-shape-circle" names="class_colorpicker_theme_icon_shape_circle"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>shape_circle</strong></paragraph>
            <paragraph>圆形拾取器形状的图标。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-colorpicker-theme-icon-shape-rect"></target>
            <paragraph classes="classref-themeproperty" ids="class-colorpicker-theme-icon-shape-rect" names="class_colorpicker_theme_icon_shape_rect"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>shape_rect</strong></paragraph>
            <paragraph>矩形拾取器形状的图标。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-colorpicker-theme-icon-shape-rect-wheel"></target>
            <paragraph classes="classref-themeproperty" ids="class-colorpicker-theme-icon-shape-rect-wheel" names="class_colorpicker_theme_icon_shape_rect_wheel"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>shape_rect_wheel</strong></paragraph>
            <paragraph>矩形轮拾取器形状的图标。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，所以可以直接使用类名调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_canvastexture.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/CanvasTexture.xml.</comment>
    <target refid="class-canvastexture"></target>
    <section ids="canvastexture class-canvastexture" names="canvastexture class_canvastexture">
        <title>CanvasTexture</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_texture#class-texture"><inline classes="std std-ref">Texture</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>用于 2D 渲染的纹理，带有可选的法线和镜面贴图。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph><strong>CanvasTexture</strong> 是用于 2D 渲染的 <reference internal="True" refuri="class_imagetexture#class-imagetexture"><inline classes="std std-ref">ImageTexture</inline></reference> 的替代品。它允许在任何继承自 <reference internal="True" refuri="class_canvasitem#class-canvasitem"><inline classes="std std-ref">CanvasItem</inline></reference> 的节点中使用法线贴图和镜面贴图。<strong>CanvasTexture</strong> 还允许独立于节点的属性（或项目设置）覆盖纹理的过滤模式和重复模式。</paragraph>
            <paragraph><strong>注意：</strong><strong>CanvasTexture</strong> 不能在 3D 中使用。当应用于任何 <reference internal="True" refuri="class_visualinstance3d#class-visualinstance3d"><inline classes="std std-ref">VisualInstance3D</inline></reference>，例如 <reference internal="True" refuri="class_sprite3d#class-sprite3d"><inline classes="std std-ref">Sprite3D</inline></reference> 或 <reference internal="True" refuri="class_decal#class-decal"><inline classes="std std-ref">Decal</inline></reference> 时，它将无法正确显示。对于 3D 中基于物理的材质，请改用 <reference internal="True" refuri="class_basematerial3d#class-basematerial3d"><inline classes="std std-ref">BaseMaterial3D</inline></reference>。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference internal="True" refuri="../tutorials/2d/2d_lights_and_shadows"><inline classes="doc">2D 灯光和阴影</inline></reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="53"></colspec>
                    <colspec colwidth="76"></colspec>
                    <colspec colwidth="88"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-canvastexture-property-diffuse-texture"><inline classes="std std-ref">diffuse_texture</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-canvastexture-property-normal-texture"><inline classes="std std-ref">normal_texture</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph>resource_local_to_scene</paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal> (overrides <reference internal="True" refuri="class_resource#class-resource-property-resource-local-to-scene"><inline classes="std std-ref">Resource</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-canvastexture-property-specular-color"><inline classes="std std-ref">specular_color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Color(1, 1, 1, 1)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-canvastexture-property-specular-shininess"><inline classes="std std-ref">specular_shininess</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-canvastexture-property-specular-texture"><inline classes="std std-ref">specular_texture</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_canvasitem#enum-canvasitem-texturefilter"><inline classes="std std-ref">TextureFilter</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-canvastexture-property-texture-filter"><inline classes="std std-ref">texture_filter</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_canvasitem#enum-canvasitem-texturerepeat"><inline classes="std std-ref">TextureRepeat</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-canvastexture-property-texture-repeat"><inline classes="std std-ref">texture_repeat</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="属性说明">
            <title>属性说明</title>
            <target refid="class-canvastexture-property-diffuse-texture"></target>
            <paragraph classes="classref-property" ids="class-canvastexture-property-diffuse-texture" names="class_canvastexture_property_diffuse_texture"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>diffuse_texture</strong> <reference internal="True" refid="class-canvastexture-property-diffuse-texture"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_diffuse_texture</strong>(value: <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>get_diffuse_texture</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>要使用的漫反射（颜色）纹理。这是你在大多数情况下要设置的主要纹理。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-canvastexture-property-normal-texture"></target>
            <paragraph classes="classref-property" ids="class-canvastexture-property-normal-texture" names="class_canvastexture_property_normal_texture"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>normal_texture</strong> <reference internal="True" refid="class-canvastexture-property-normal-texture"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_normal_texture</strong>(value: <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>get_normal_texture</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>要使用的法线贴图纹理。仅在有 <reference internal="True" refuri="class_light2d#class-light2d"><inline classes="std std-ref">Light2D</inline></reference> 影响该 <strong>CanvasTexture</strong> 时才有可见的效果。</paragraph>
            <paragraph><strong>注意：</strong>Godot 期望法线贴图使用 X+、Y+、Z+ 坐标系。比较流行的引擎所期望的法线贴图坐标系见<reference name="这个页面" refuri="http://wiki.polycount.com/wiki/Normal_Map_Technical_Details#Common_Swizzle_Coordinates">这个页面</reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-canvastexture-property-specular-color"></target>
            <paragraph classes="classref-property" ids="class-canvastexture-property-specular-color" names="class_canvastexture_property_specular_color"><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>specular_color</strong> = <literal>Color(1, 1, 1, 1)</literal> <reference internal="True" refid="class-canvastexture-property-specular-color"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_specular_color</strong>(value: <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>get_specular_color</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>镜面反射颜色的乘数。在确定反射颜色时，<reference internal="True" refuri="class_light2d#class-light2d"><inline classes="std std-ref">Light2D</inline></reference> 的颜色也会被考虑在内。只有在 <reference internal="True" refuri="class_light2d#class-light2d"><inline classes="std std-ref">Light2D</inline></reference> 影响到这个 <strong>CanvasTexture</strong> 时才有可见的效果。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-canvastexture-property-specular-shininess"></target>
            <paragraph classes="classref-property" ids="class-canvastexture-property-specular-shininess" names="class_canvastexture_property_specular_shininess"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>specular_shininess</strong> = <literal>1.0</literal> <reference internal="True" refid="class-canvastexture-property-specular-shininess"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_specular_shininess</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_specular_shininess</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>用于 <reference internal="True" refuri="class_light2d#class-light2d"><inline classes="std std-ref">Light2D</inline></reference> 镜面反射的镜面指数。更高的值会产生更有光泽或更加“湿润”的外观，反射变得更局部，且整体上不太明显。默认值为 <literal>1.0</literal> ，将完全禁用镜面反射。只有在 <reference internal="True" refuri="class_light2d#class-light2d"><inline classes="std std-ref">Light2D</inline></reference> 影响到这个 <strong>CanvasTexture</strong> 时才会有可见的效果。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-canvastexture-property-specular-texture"></target>
            <paragraph classes="classref-property" ids="class-canvastexture-property-specular-texture" names="class_canvastexture_property_specular_texture"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>specular_texture</strong> <reference internal="True" refid="class-canvastexture-property-specular-texture"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_specular_texture</strong>(value: <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>get_specular_texture</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>用于 <reference internal="True" refuri="class_light2d#class-light2d"><inline classes="std std-ref">Light2D</inline></reference> 镜面反射的镜面贴图。这应该是一个灰度或彩色纹理，更亮的区域会产生更高的 <reference internal="True" refid="class-canvastexture-property-specular-shininess"><inline classes="std std-ref">specular_shininess</inline></reference> 值。使用彩色 <reference internal="True" refid="class-canvastexture-property-specular-texture"><inline classes="std std-ref">specular_texture</inline></reference> 允许在每个通道的基础上控制镜面反射光泽度。仅当 <reference internal="True" refuri="class_light2d#class-light2d"><inline classes="std std-ref">Light2D</inline></reference> 影响该 <strong>CanvasTexture</strong> 时才有可见的效果。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-canvastexture-property-texture-filter"></target>
            <paragraph classes="classref-property" ids="class-canvastexture-property-texture-filter" names="class_canvastexture_property_texture_filter"><reference internal="True" refuri="class_canvasitem#enum-canvasitem-texturefilter"><inline classes="std std-ref">TextureFilter</inline></reference> <strong>texture_filter</strong> = <literal>0</literal> <reference internal="True" refid="class-canvastexture-property-texture-filter"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_texture_filter</strong>(value: <reference internal="True" refuri="class_canvasitem#enum-canvasitem-texturefilter"><inline classes="std std-ref">TextureFilter</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_canvasitem#enum-canvasitem-texturefilter"><inline classes="std std-ref">TextureFilter</inline></reference> <strong>get_texture_filter</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>绘制该 <strong>CanvasTexture</strong> 时所使用的纹理过滤模式。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-canvastexture-property-texture-repeat"></target>
            <paragraph classes="classref-property" ids="class-canvastexture-property-texture-repeat" names="class_canvastexture_property_texture_repeat"><reference internal="True" refuri="class_canvasitem#enum-canvasitem-texturerepeat"><inline classes="std std-ref">TextureRepeat</inline></reference> <strong>texture_repeat</strong> = <literal>0</literal> <reference internal="True" refid="class-canvastexture-property-texture-repeat"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_texture_repeat</strong>(value: <reference internal="True" refuri="class_canvasitem#enum-canvasitem-texturerepeat"><inline classes="std std-ref">TextureRepeat</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_canvasitem#enum-canvasitem-texturerepeat"><inline classes="std std-ref">TextureRepeat</inline></reference> <strong>get_texture_repeat</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>绘制该 <strong>CanvasTexture</strong> 时所使用的纹理重复模式。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_rdframebufferpass.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/RDFramebufferPass.xml.</comment>
    <target refid="class-rdframebufferpass"></target>
    <section ids="rdframebufferpass class-rdframebufferpass" names="rdframebufferpass class_rdframebufferpass">
        <title>RDFramebufferPass</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>帧缓冲区阶段的附件描述（由 <reference internal="True" refuri="class_renderingdevice#class-renderingdevice"><inline classes="std std-ref">RenderingDevice</inline></reference> 使用）。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>该类包含帧缓冲区通道的附件描述列表。每个点都有一个指向先前提供的纹理附件列表的索引。</paragraph>
            <paragraph>多通道帧缓冲区，可以优化移动设备中的某些配置；在桌面设备上，它们几乎没有优势。</paragraph>
            <paragraph>这个对象由 <reference internal="True" refuri="class_renderingdevice#class-renderingdevice"><inline classes="std std-ref">RenderingDevice</inline></reference> 使用。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="49"></colspec>
                    <colspec colwidth="84"></colspec>
                    <colspec colwidth="24"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_packedint32array#class-packedint32array"><inline classes="std std-ref">PackedInt32Array</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rdframebufferpass-property-color-attachments"><inline classes="std std-ref">color_attachments</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>PackedInt32Array()</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rdframebufferpass-property-depth-attachment"><inline classes="std std-ref">depth_attachment</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>-1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_packedint32array#class-packedint32array"><inline classes="std std-ref">PackedInt32Array</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rdframebufferpass-property-input-attachments"><inline classes="std std-ref">input_attachments</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>PackedInt32Array()</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_packedint32array#class-packedint32array"><inline classes="std std-ref">PackedInt32Array</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rdframebufferpass-property-preserve-attachments"><inline classes="std std-ref">preserve_attachments</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>PackedInt32Array()</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_packedint32array#class-packedint32array"><inline classes="std std-ref">PackedInt32Array</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rdframebufferpass-property-resolve-attachments"><inline classes="std std-ref">resolve_attachments</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>PackedInt32Array()</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="常量">
            <title>常量</title>
            <target refid="class-rdframebufferpass-constant-attachment-unused"></target>
            <paragraph classes="classref-constant" ids="class-rdframebufferpass-constant-attachment-unused" names="class_rdframebufferpass_constant_attachment_unused"><strong>ATTACHMENT_UNUSED</strong> = <literal>-1</literal> <reference internal="True" refid="class-rdframebufferpass-constant-attachment-unused"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>附件未使用。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="属性说明">
            <title>属性说明</title>
            <target refid="class-rdframebufferpass-property-color-attachments"></target>
            <paragraph classes="classref-property" ids="class-rdframebufferpass-property-color-attachments" names="class_rdframebufferpass_property_color_attachments"><reference internal="True" refuri="class_packedint32array#class-packedint32array"><inline classes="std std-ref">PackedInt32Array</inline></reference> <strong>color_attachments</strong> = <literal>PackedInt32Array()</literal> <reference internal="True" refid="class-rdframebufferpass-property-color-attachments"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_color_attachments</strong>(value: <reference internal="True" refuri="class_packedint32array#class-packedint32array"><inline classes="std std-ref">PackedInt32Array</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_packedint32array#class-packedint32array"><inline classes="std std-ref">PackedInt32Array</inline></reference> <strong>get_color_attachments</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>从 0 开始按顺序为附件着色。如果该附件未被着色器使用，则传递 ATTACHMENT_UNUSED 以跳过。</paragraph>
            <paragraph><strong>Note:</strong> The returned array is <emphasis>copied</emphasis> and any changes to it will not update the original property value. See <reference internal="True" refuri="class_packedint32array#class-packedint32array"><inline classes="std std-ref">PackedInt32Array</inline></reference> for more details.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-rdframebufferpass-property-depth-attachment"></target>
            <paragraph classes="classref-property" ids="class-rdframebufferpass-property-depth-attachment" names="class_rdframebufferpass_property_depth_attachment"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>depth_attachment</strong> = <literal>-1</literal> <reference internal="True" refid="class-rdframebufferpass-property-depth-attachment"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_depth_attachment</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_depth_attachment</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>深度附件。如果该通道不需要深度缓冲区，则应使用 ATTACHMENT_UNUSED。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-rdframebufferpass-property-input-attachments"></target>
            <paragraph classes="classref-property" ids="class-rdframebufferpass-property-input-attachments" names="class_rdframebufferpass_property_input_attachments"><reference internal="True" refuri="class_packedint32array#class-packedint32array"><inline classes="std std-ref">PackedInt32Array</inline></reference> <strong>input_attachments</strong> = <literal>PackedInt32Array()</literal> <reference internal="True" refid="class-rdframebufferpass-property-input-attachments"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_input_attachments</strong>(value: <reference internal="True" refuri="class_packedint32array#class-packedint32array"><inline classes="std std-ref">PackedInt32Array</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_packedint32array#class-packedint32array"><inline classes="std std-ref">PackedInt32Array</inline></reference> <strong>get_input_attachments</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>用于多通道帧缓冲区（不止一个渲染通道）。将一个附件转换为一个输入。确保还在 <reference internal="True" refuri="class_rduniform#class-rduniform"><inline classes="std std-ref">RDUniform</inline></reference> 中为 uniform 集正确提供它。</paragraph>
            <paragraph><strong>Note:</strong> The returned array is <emphasis>copied</emphasis> and any changes to it will not update the original property value. See <reference internal="True" refuri="class_packedint32array#class-packedint32array"><inline classes="std std-ref">PackedInt32Array</inline></reference> for more details.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-rdframebufferpass-property-preserve-attachments"></target>
            <paragraph classes="classref-property" ids="class-rdframebufferpass-property-preserve-attachments" names="class_rdframebufferpass_property_preserve_attachments"><reference internal="True" refuri="class_packedint32array#class-packedint32array"><inline classes="std std-ref">PackedInt32Array</inline></reference> <strong>preserve_attachments</strong> = <literal>PackedInt32Array()</literal> <reference internal="True" refid="class-rdframebufferpass-property-preserve-attachments"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_preserve_attachments</strong>(value: <reference internal="True" refuri="class_packedint32array#class-packedint32array"><inline classes="std std-ref">PackedInt32Array</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_packedint32array#class-packedint32array"><inline classes="std std-ref">PackedInt32Array</inline></reference> <strong>get_preserve_attachments</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>要在该阶段中保留的附件（否则它们将被删除）。</paragraph>
            <paragraph><strong>Note:</strong> The returned array is <emphasis>copied</emphasis> and any changes to it will not update the original property value. See <reference internal="True" refuri="class_packedint32array#class-packedint32array"><inline classes="std std-ref">PackedInt32Array</inline></reference> for more details.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-rdframebufferpass-property-resolve-attachments"></target>
            <paragraph classes="classref-property" ids="class-rdframebufferpass-property-resolve-attachments" names="class_rdframebufferpass_property_resolve_attachments"><reference internal="True" refuri="class_packedint32array#class-packedint32array"><inline classes="std std-ref">PackedInt32Array</inline></reference> <strong>resolve_attachments</strong> = <literal>PackedInt32Array()</literal> <reference internal="True" refid="class-rdframebufferpass-property-resolve-attachments"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_resolve_attachments</strong>(value: <reference internal="True" refuri="class_packedint32array#class-packedint32array"><inline classes="std std-ref">PackedInt32Array</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_packedint32array#class-packedint32array"><inline classes="std std-ref">PackedInt32Array</inline></reference> <strong>get_resolve_attachments</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果颜色附件是多重采样的，则可以提供非多重采样的解析附件。</paragraph>
            <paragraph><strong>Note:</strong> The returned array is <emphasis>copied</emphasis> and any changes to it will not update the original property value. See <reference internal="True" refuri="class_packedint32array#class-packedint32array"><inline classes="std std-ref">PackedInt32Array</inline></reference> for more details.</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效运算符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列位标志构成位掩码的整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

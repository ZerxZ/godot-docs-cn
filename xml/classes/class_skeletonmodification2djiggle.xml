<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_skeletonmodification2djiggle.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/SkeletonModification2DJiggle.xml.</comment>
    <target refid="class-skeletonmodification2djiggle"></target>
    <section ids="skeletonmodification2djiggle class-skeletonmodification2djiggle" names="skeletonmodification2djiggle class_skeletonmodification2djiggle">
        <title>SkeletonModification2DJiggle</title>
        <paragraph><strong>实验性：</strong> This class may be changed or removed in future versions.</paragraph>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_skeletonmodification2d#class-skeletonmodification2d"><inline classes="std std-ref">SkeletonModification2D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>让 <reference internal="True" refuri="class_bone2d#class-bone2d"><inline classes="std std-ref">Bone2D</inline></reference> 节点在朝某个目标移动的过程中产生摇晃的修改器。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>这种修改器会将一系列的骨骼朝某个目标移动，这些骨骼通常称作骨骼链。这种修改器的特点在于，它会为骨骼链中的每一个骨骼计算速度和加速度，并使用输入值运行一段非常轻量级的类物理计算。这样这些骨骼就能够越过目标并来回“摇晃”（Jiggle）。根据配置的不同，可以得到类似弹簧的摇晃，也可以得到类似布料的摇晃。</paragraph>
            <paragraph>这种修改器可用于为头发、衣服边缘等添加额外的运动。可以通过不同的设置控制目标移动时关节的移动方式。</paragraph>
            <paragraph><strong>注意：</strong>Jiggle 修改器的 <literal>jiggle_joints</literal> 属性中保存的是数据对象，记录 Jiggle 链中各个关节的数据。这一点与 <reference internal="True" refuri="class_bone2d#class-bone2d"><inline classes="std std-ref">Bone2D</inline></reference> 节点不同！Jiggle 关节保存了 Jiggle 修改器使用的骨骼链中各个 <reference internal="True" refuri="class_bone2d#class-bone2d"><inline classes="std std-ref">Bone2D</inline></reference> 所需的数据。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="33"></colspec>
                    <colspec colwidth="103"></colspec>
                    <colspec colwidth="19"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2djiggle-property-damping"><inline classes="std std-ref">damping</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.75</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2djiggle-property-gravity"><inline classes="std std-ref">gravity</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Vector2(0, 6)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2djiggle-property-jiggle-data-chain-length"><inline classes="std std-ref">jiggle_data_chain_length</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2djiggle-property-mass"><inline classes="std std-ref">mass</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.75</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2djiggle-property-stiffness"><inline classes="std std-ref">stiffness</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>3.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2djiggle-property-target-nodepath"><inline classes="std std-ref">target_nodepath</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>NodePath("")</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2djiggle-property-use-gravity"><inline classes="std std-ref">use_gravity</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="33"></colspec>
                    <colspec colwidth="197"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2djiggle-method-get-collision-mask"><inline classes="std std-ref">get_collision_mask</inline></reference>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2djiggle-method-get-jiggle-joint-bone2d-node"><inline classes="std std-ref">get_jiggle_joint_bone2d_node</inline></reference>(joint_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2djiggle-method-get-jiggle-joint-bone-index"><inline classes="std std-ref">get_jiggle_joint_bone_index</inline></reference>(joint_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2djiggle-method-get-jiggle-joint-damping"><inline classes="std std-ref">get_jiggle_joint_damping</inline></reference>(joint_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2djiggle-method-get-jiggle-joint-gravity"><inline classes="std std-ref">get_jiggle_joint_gravity</inline></reference>(joint_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2djiggle-method-get-jiggle-joint-mass"><inline classes="std std-ref">get_jiggle_joint_mass</inline></reference>(joint_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2djiggle-method-get-jiggle-joint-override"><inline classes="std std-ref">get_jiggle_joint_override</inline></reference>(joint_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2djiggle-method-get-jiggle-joint-stiffness"><inline classes="std std-ref">get_jiggle_joint_stiffness</inline></reference>(joint_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2djiggle-method-get-jiggle-joint-use-gravity"><inline classes="std std-ref">get_jiggle_joint_use_gravity</inline></reference>(joint_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2djiggle-method-get-use-colliders"><inline classes="std std-ref">get_use_colliders</inline></reference>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2djiggle-method-set-collision-mask"><inline classes="std std-ref">set_collision_mask</inline></reference>(collision_mask: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2djiggle-method-set-jiggle-joint-bone2d-node"><inline classes="std std-ref">set_jiggle_joint_bone2d_node</inline></reference>(joint_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, bone2d_node: <reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2djiggle-method-set-jiggle-joint-bone-index"><inline classes="std std-ref">set_jiggle_joint_bone_index</inline></reference>(joint_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2djiggle-method-set-jiggle-joint-damping"><inline classes="std std-ref">set_jiggle_joint_damping</inline></reference>(joint_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, damping: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2djiggle-method-set-jiggle-joint-gravity"><inline classes="std std-ref">set_jiggle_joint_gravity</inline></reference>(joint_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, gravity: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2djiggle-method-set-jiggle-joint-mass"><inline classes="std std-ref">set_jiggle_joint_mass</inline></reference>(joint_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, mass: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2djiggle-method-set-jiggle-joint-override"><inline classes="std std-ref">set_jiggle_joint_override</inline></reference>(joint_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, override: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2djiggle-method-set-jiggle-joint-stiffness"><inline classes="std std-ref">set_jiggle_joint_stiffness</inline></reference>(joint_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, stiffness: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2djiggle-method-set-jiggle-joint-use-gravity"><inline classes="std std-ref">set_jiggle_joint_use_gravity</inline></reference>(joint_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, use_gravity: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2djiggle-method-set-use-colliders"><inline classes="std std-ref">set_use_colliders</inline></reference>(use_colliders: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="属性说明">
            <title>属性说明</title>
            <target refid="class-skeletonmodification2djiggle-property-damping"></target>
            <paragraph classes="classref-property" ids="class-skeletonmodification2djiggle-property-damping" names="class_skeletonmodification2djiggle_property_damping"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>damping</strong> = <literal>0.75</literal> <reference internal="True" refid="class-skeletonmodification2djiggle-property-damping"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_damping</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_damping</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>未被覆盖时，Jiggle 关节所受到的默认阻尼大小。值约高，所应用的计算得到的速度也就约多。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2djiggle-property-gravity"></target>
            <paragraph classes="classref-property" ids="class-skeletonmodification2djiggle-property-gravity" names="class_skeletonmodification2djiggle_property_gravity"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>gravity</strong> = <literal>Vector2(0, 6)</literal> <reference internal="True" refid="class-skeletonmodification2djiggle-property-gravity"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_gravity</strong>(value: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>get_gravity</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>未被覆盖时，Jiggle 关节所受到的默认重力大小。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2djiggle-property-jiggle-data-chain-length"></target>
            <paragraph classes="classref-property" ids="class-skeletonmodification2djiggle-property-jiggle-data-chain-length" names="class_skeletonmodification2djiggle_property_jiggle_data_chain_length"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>jiggle_data_chain_length</strong> = <literal>0</literal> <reference internal="True" refid="class-skeletonmodification2djiggle-property-jiggle-data-chain-length"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_jiggle_data_chain_length</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_jiggle_data_chain_length</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>该 Jiggle 修改器中的 Jiggle 关节的数量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2djiggle-property-mass"></target>
            <paragraph classes="classref-property" ids="class-skeletonmodification2djiggle-property-mass" names="class_skeletonmodification2djiggle_property_mass"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>mass</strong> = <literal>0.75</literal> <reference internal="True" refid="class-skeletonmodification2djiggle-property-mass"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_mass</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_mass</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>未被覆盖时，Jiggle 关节所分配的默认质量大小。值约高，移动速度也就约快，超出的距离也就越大。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2djiggle-property-stiffness"></target>
            <paragraph classes="classref-property" ids="class-skeletonmodification2djiggle-property-stiffness" names="class_skeletonmodification2djiggle_property_stiffness"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>stiffness</strong> = <literal>3.0</literal> <reference internal="True" refid="class-skeletonmodification2djiggle-property-stiffness"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_stiffness</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_stiffness</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>未被覆盖时，Jiggle 关节所分配的默认刚度大小。值约高越像弹簧，会很快到达正确的位置。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2djiggle-property-target-nodepath"></target>
            <paragraph classes="classref-property" ids="class-skeletonmodification2djiggle-property-target-nodepath" names="class_skeletonmodification2djiggle_property_target_nodepath"><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> <strong>target_nodepath</strong> = <literal>NodePath("")</literal> <reference internal="True" refid="class-skeletonmodification2djiggle-property-target-nodepath"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_target_node</strong>(value: <reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> <strong>get_target_node</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>该 Jiggle 修改器目标节点的 NodePath 路径。这个节点是 Jiggle 链所要旋转至的目标。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2djiggle-property-use-gravity"></target>
            <paragraph classes="classref-property" ids="class-skeletonmodification2djiggle-property-use-gravity" names="class_skeletonmodification2djiggle_property_use_gravity"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>use_gravity</strong> = <literal>false</literal> <reference internal="True" refid="class-skeletonmodification2djiggle-property-use-gravity"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_use_gravity</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_use_gravity</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>假设 Jiggle 关节没有覆盖默认设置的前提下，是否应该对这些关节施加重力向量 <reference internal="True" refid="class-skeletonmodification2djiggle-property-gravity"><inline classes="std std-ref">gravity</inline></reference>。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="方法说明">
            <title>方法说明</title>
            <target refid="class-skeletonmodification2djiggle-method-get-collision-mask"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodification2djiggle-method-get-collision-mask" names="class_skeletonmodification2djiggle_method_get_collision_mask"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_collision_mask</strong>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-skeletonmodification2djiggle-method-get-collision-mask"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回在启用碰撞时 Jiggle 修改器所使用的碰撞掩码。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2djiggle-method-get-jiggle-joint-bone2d-node"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodification2djiggle-method-get-jiggle-joint-bone2d-node" names="class_skeletonmodification2djiggle_method_get_jiggle_joint_bone2d_node"><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> <strong>get_jiggle_joint_bone2d_node</strong>(joint_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-skeletonmodification2djiggle-method-get-jiggle-joint-bone2d-node"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回 <literal>joint_idx</literal> 处 Jiggle 关节所分配的 <reference internal="True" refuri="class_bone2d#class-bone2d"><inline classes="std std-ref">Bone2D</inline></reference> 节点。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2djiggle-method-get-jiggle-joint-bone-index"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodification2djiggle-method-get-jiggle-joint-bone-index" names="class_skeletonmodification2djiggle_method_get_jiggle_joint_bone_index"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_jiggle_joint_bone_index</strong>(joint_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-skeletonmodification2djiggle-method-get-jiggle-joint-bone-index"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回 <literal>joint_idx</literal> 处 Jiggle 关节所分配 <reference internal="True" refuri="class_bone2d#class-bone2d"><inline classes="std std-ref">Bone2D</inline></reference> 节点的索引。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2djiggle-method-get-jiggle-joint-damping"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodification2djiggle-method-get-jiggle-joint-damping" names="class_skeletonmodification2djiggle_method_get_jiggle_joint_damping"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_jiggle_joint_damping</strong>(joint_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-skeletonmodification2djiggle-method-get-jiggle-joint-damping"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回 <literal>joint_idx</literal> 处 Jiggle 关节的阻尼大小。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2djiggle-method-get-jiggle-joint-gravity"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodification2djiggle-method-get-jiggle-joint-gravity" names="class_skeletonmodification2djiggle_method_get_jiggle_joint_gravity"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>get_jiggle_joint_gravity</strong>(joint_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-skeletonmodification2djiggle-method-get-jiggle-joint-gravity"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回表示 <literal>joint_idx</literal> 处 Jiggle 关节所受到的重力的 <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2djiggle-method-get-jiggle-joint-mass"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodification2djiggle-method-get-jiggle-joint-mass" names="class_skeletonmodification2djiggle_method_get_jiggle_joint_mass"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_jiggle_joint_mass</strong>(joint_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-skeletonmodification2djiggle-method-get-jiggle-joint-mass"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回 <literal>joint_idx</literal> 处 Jiggle 关节的质量大小。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2djiggle-method-get-jiggle-joint-override"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodification2djiggle-method-get-jiggle-joint-override" names="class_skeletonmodification2djiggle_method_get_jiggle_joint_override"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_jiggle_joint_override</strong>(joint_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-skeletonmodification2djiggle-method-get-jiggle-joint-override"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回表示 <literal>joint_idx</literal> 处 Jiggle 关节是否覆盖修改器中定义的默认 Jiggle 关节数据的布尔值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2djiggle-method-get-jiggle-joint-stiffness"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodification2djiggle-method-get-jiggle-joint-stiffness" names="class_skeletonmodification2djiggle_method_get_jiggle_joint_stiffness"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_jiggle_joint_stiffness</strong>(joint_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-skeletonmodification2djiggle-method-get-jiggle-joint-stiffness"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回 <literal>joint_idx</literal> 处 Jiggle 关节的刚度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2djiggle-method-get-jiggle-joint-use-gravity"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodification2djiggle-method-get-jiggle-joint-use-gravity" names="class_skeletonmodification2djiggle_method_get_jiggle_joint_use_gravity"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_jiggle_joint_use_gravity</strong>(joint_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-skeletonmodification2djiggle-method-get-jiggle-joint-use-gravity"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回表示 <literal>joint_idx</literal> 处 Jiggle 关节是否使用重力的布尔值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2djiggle-method-get-use-colliders"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodification2djiggle-method-get-use-colliders" names="class_skeletonmodification2djiggle_method_get_use_colliders"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_use_colliders</strong>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-skeletonmodification2djiggle-method-get-use-colliders"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回 Jiggle 修改器在求解时是否考虑物理碰撞器。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2djiggle-method-set-collision-mask"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodification2djiggle-method-set-collision-mask" names="class_skeletonmodification2djiggle_method_set_collision_mask"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_collision_mask</strong>(collision_mask: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-skeletonmodification2djiggle-method-set-collision-mask"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>在 Jiggle 修改器被设为考虑碰撞器时，设置该 Jiggle 修改器所需作出反应的碰撞器的碰撞掩码。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2djiggle-method-set-jiggle-joint-bone2d-node"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodification2djiggle-method-set-jiggle-joint-bone2d-node" names="class_skeletonmodification2djiggle_method_set_jiggle_joint_bone2d_node"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_jiggle_joint_bone2d_node</strong>(joint_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, bone2d_node: <reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference>) <reference internal="True" refid="class-skeletonmodification2djiggle-method-set-jiggle-joint-bone2d-node"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置 <literal>joint_idx</literal> 处 Jiggle 关节所分配的 <reference internal="True" refuri="class_bone2d#class-bone2d"><inline classes="std std-ref">Bone2D</inline></reference> 节点。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2djiggle-method-set-jiggle-joint-bone-index"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodification2djiggle-method-set-jiggle-joint-bone-index" names="class_skeletonmodification2djiggle_method_set_jiggle_joint_bone_index"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_jiggle_joint_bone_index</strong>(joint_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-skeletonmodification2djiggle-method-set-jiggle-joint-bone-index"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置 <literal>joint_idx</literal> 处 Jiggle 关节的骨骼索引 <literal>bone_idx</literal>。如果适用，还会根据所链接骨架提供的数据来更新 Jiggle 关节的 <literal>bone2d_node</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2djiggle-method-set-jiggle-joint-damping"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodification2djiggle-method-set-jiggle-joint-damping" names="class_skeletonmodification2djiggle_method_set_jiggle_joint_damping"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_jiggle_joint_damping</strong>(joint_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, damping: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <reference internal="True" refid="class-skeletonmodification2djiggle-method-set-jiggle-joint-damping"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置 <literal>joint_idx</literal> 处 Jiggle 关节的阻尼量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2djiggle-method-set-jiggle-joint-gravity"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodification2djiggle-method-set-jiggle-joint-gravity" names="class_skeletonmodification2djiggle_method_set_jiggle_joint_gravity"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_jiggle_joint_gravity</strong>(joint_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, gravity: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <reference internal="True" refid="class-skeletonmodification2djiggle-method-set-jiggle-joint-gravity"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置 <literal>joint_idx</literal> 处 Jiggle 关节的重力向量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2djiggle-method-set-jiggle-joint-mass"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodification2djiggle-method-set-jiggle-joint-mass" names="class_skeletonmodification2djiggle_method_set_jiggle_joint_mass"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_jiggle_joint_mass</strong>(joint_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, mass: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <reference internal="True" refid="class-skeletonmodification2djiggle-method-set-jiggle-joint-mass"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置 <literal>joint_idx</literal> 处 Jiggle 关节的质量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2djiggle-method-set-jiggle-joint-override"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodification2djiggle-method-set-jiggle-joint-override" names="class_skeletonmodification2djiggle_method_set_jiggle_joint_override"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_jiggle_joint_override</strong>(joint_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, override: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <reference internal="True" refid="class-skeletonmodification2djiggle-method-set-jiggle-joint-override"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置 <literal>joint_idx</literal> 处 Jiggle 关节是否应覆盖默认 Jiggle 关节设置。设置为 <literal>true</literal> 会使该关节使用自身的设置，不使用附加至修改器的设置。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2djiggle-method-set-jiggle-joint-stiffness"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodification2djiggle-method-set-jiggle-joint-stiffness" names="class_skeletonmodification2djiggle_method_set_jiggle_joint_stiffness"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_jiggle_joint_stiffness</strong>(joint_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, stiffness: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <reference internal="True" refid="class-skeletonmodification2djiggle-method-set-jiggle-joint-stiffness"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置 <literal>joint_idx</literal> 处 Jiggle 关节的刚度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2djiggle-method-set-jiggle-joint-use-gravity"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodification2djiggle-method-set-jiggle-joint-use-gravity" names="class_skeletonmodification2djiggle_method_set_jiggle_joint_use_gravity"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_jiggle_joint_use_gravity</strong>(joint_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, use_gravity: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <reference internal="True" refid="class-skeletonmodification2djiggle-method-set-jiggle-joint-use-gravity"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置 <literal>joint_idx</literal> 处 Jiggle 关节是否应使用重力。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2djiggle-method-set-use-colliders"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodification2djiggle-method-set-use-colliders" names="class_skeletonmodification2djiggle_method_set_use_colliders"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_use_colliders</strong>(use_colliders: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <reference internal="True" refid="class-skeletonmodification2djiggle-method-set-use-colliders"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果为 <literal>true</literal>，则 Jiggle 修改器将考虑碰撞器，防止它们进入这些碰撞对象。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效运算符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列位标志构成位掩码的整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_audioeffectchorus.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/AudioEffectChorus.xml.</comment>
    <target refid="class-audioeffectchorus"></target>
    <section ids="audioeffectchorus class-audioeffectchorus" names="audioeffectchorus class_audioeffectchorus">
        <title>AudioEffectChorus</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_audioeffect#class-audioeffect"><inline classes="std std-ref">AudioEffect</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>添加合唱音频效果。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>添加一个合唱音频效果。该效果复制音频源，并应用声音滤波器进行操作。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference internal="True" refuri="../tutorials/audio/audio_buses"><inline classes="doc">音频总线</inline></reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="27"></colspec>
                    <colspec colwidth="78"></colspec>
                    <colspec colwidth="12"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audioeffectchorus-property-dry"><inline classes="std std-ref">dry</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audioeffectchorus-property-voice-1-cutoff-hz"><inline classes="std std-ref">voice/1/cutoff_hz</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>8000.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audioeffectchorus-property-voice-1-delay-ms"><inline classes="std std-ref">voice/1/delay_ms</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>15.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audioeffectchorus-property-voice-1-depth-ms"><inline classes="std std-ref">voice/1/depth_ms</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>2.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audioeffectchorus-property-voice-1-level-db"><inline classes="std std-ref">voice/1/level_db</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audioeffectchorus-property-voice-1-pan"><inline classes="std std-ref">voice/1/pan</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>-0.5</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audioeffectchorus-property-voice-1-rate-hz"><inline classes="std std-ref">voice/1/rate_hz</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.8</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audioeffectchorus-property-voice-2-cutoff-hz"><inline classes="std std-ref">voice/2/cutoff_hz</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>8000.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audioeffectchorus-property-voice-2-delay-ms"><inline classes="std std-ref">voice/2/delay_ms</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>20.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audioeffectchorus-property-voice-2-depth-ms"><inline classes="std std-ref">voice/2/depth_ms</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>3.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audioeffectchorus-property-voice-2-level-db"><inline classes="std std-ref">voice/2/level_db</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audioeffectchorus-property-voice-2-pan"><inline classes="std std-ref">voice/2/pan</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.5</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audioeffectchorus-property-voice-2-rate-hz"><inline classes="std std-ref">voice/2/rate_hz</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.2</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audioeffectchorus-property-voice-3-cutoff-hz"><inline classes="std std-ref">voice/3/cutoff_hz</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audioeffectchorus-property-voice-3-delay-ms"><inline classes="std std-ref">voice/3/delay_ms</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audioeffectchorus-property-voice-3-depth-ms"><inline classes="std std-ref">voice/3/depth_ms</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audioeffectchorus-property-voice-3-level-db"><inline classes="std std-ref">voice/3/level_db</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audioeffectchorus-property-voice-3-pan"><inline classes="std std-ref">voice/3/pan</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audioeffectchorus-property-voice-3-rate-hz"><inline classes="std std-ref">voice/3/rate_hz</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audioeffectchorus-property-voice-4-cutoff-hz"><inline classes="std std-ref">voice/4/cutoff_hz</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audioeffectchorus-property-voice-4-delay-ms"><inline classes="std std-ref">voice/4/delay_ms</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audioeffectchorus-property-voice-4-depth-ms"><inline classes="std std-ref">voice/4/depth_ms</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audioeffectchorus-property-voice-4-level-db"><inline classes="std std-ref">voice/4/level_db</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audioeffectchorus-property-voice-4-pan"><inline classes="std std-ref">voice/4/pan</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audioeffectchorus-property-voice-4-rate-hz"><inline classes="std std-ref">voice/4/rate_hz</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audioeffectchorus-property-voice-count"><inline classes="std std-ref">voice_count</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>2</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audioeffectchorus-property-wet"><inline classes="std std-ref">wet</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.5</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id4" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="27"></colspec>
                    <colspec colwidth="161"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audioeffectchorus-method-get-voice-cutoff-hz"><inline classes="std std-ref">get_voice_cutoff_hz</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audioeffectchorus-method-get-voice-delay-ms"><inline classes="std std-ref">get_voice_delay_ms</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audioeffectchorus-method-get-voice-depth-ms"><inline classes="std std-ref">get_voice_depth_ms</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audioeffectchorus-method-get-voice-level-db"><inline classes="std std-ref">get_voice_level_db</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audioeffectchorus-method-get-voice-pan"><inline classes="std std-ref">get_voice_pan</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audioeffectchorus-method-get-voice-rate-hz"><inline classes="std std-ref">get_voice_rate_hz</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audioeffectchorus-method-set-voice-cutoff-hz"><inline classes="std std-ref">set_voice_cutoff_hz</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> cutoff_hz <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audioeffectchorus-method-set-voice-delay-ms"><inline classes="std std-ref">set_voice_delay_ms</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> delay_ms <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audioeffectchorus-method-set-voice-depth-ms"><inline classes="std std-ref">set_voice_depth_ms</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> depth_ms <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audioeffectchorus-method-set-voice-level-db"><inline classes="std std-ref">set_voice_level_db</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> level_db <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audioeffectchorus-method-set-voice-pan"><inline classes="std std-ref">set_voice_pan</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> pan <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audioeffectchorus-method-set-voice-rate-hz"><inline classes="std std-ref">set_voice_rate_hz</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> rate_hz <strong>)</strong></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="属性说明">
            <title>属性说明</title>
            <target refid="class-audioeffectchorus-property-dry"></target>
            <paragraph classes="classref-property" ids="class-audioeffectchorus-property-dry" names="class_audioeffectchorus_property_dry"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>dry</strong> = <literal>1.0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_dry</strong> <strong>(</strong> <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_dry</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>效果的原始信号。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audioeffectchorus-property-voice-1-cutoff-hz"></target>
            <paragraph classes="classref-property" ids="class-audioeffectchorus-property-voice-1-cutoff-hz" names="class_audioeffectchorus_property_voice/1/cutoff_hz"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>voice/1/cutoff_hz</strong> = <literal>8000.0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_voice_cutoff_hz</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> cutoff_hz <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_voice_cutoff_hz</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>声音的截止频率。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audioeffectchorus-property-voice-1-delay-ms"></target>
            <paragraph classes="classref-property" ids="class-audioeffectchorus-property-voice-1-delay-ms" names="class_audioeffectchorus_property_voice/1/delay_ms"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>voice/1/delay_ms</strong> = <literal>15.0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_voice_delay_ms</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> delay_ms <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_voice_delay_ms</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>声音的信号延迟。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audioeffectchorus-property-voice-1-depth-ms"></target>
            <paragraph classes="classref-property" ids="class-audioeffectchorus-property-voice-1-depth-ms" names="class_audioeffectchorus_property_voice/1/depth_ms"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>voice/1/depth_ms</strong> = <literal>2.0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_voice_depth_ms</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> depth_ms <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_voice_depth_ms</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>声音过滤器的深度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audioeffectchorus-property-voice-1-level-db"></target>
            <paragraph classes="classref-property" ids="class-audioeffectchorus-property-voice-1-level-db" names="class_audioeffectchorus_property_voice/1/level_db"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>voice/1/level_db</strong> = <literal>0.0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_voice_level_db</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> level_db <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_voice_level_db</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>声音的音量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audioeffectchorus-property-voice-1-pan"></target>
            <paragraph classes="classref-property" ids="class-audioeffectchorus-property-voice-1-pan" names="class_audioeffectchorus_property_voice/1/pan"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>voice/1/pan</strong> = <literal>-0.5</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_voice_pan</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> pan <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_voice_pan</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>声音的声像级别。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audioeffectchorus-property-voice-1-rate-hz"></target>
            <paragraph classes="classref-property" ids="class-audioeffectchorus-property-voice-1-rate-hz" names="class_audioeffectchorus_property_voice/1/rate_hz"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>voice/1/rate_hz</strong> = <literal>0.8</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_voice_rate_hz</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> rate_hz <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_voice_rate_hz</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>声音过滤比率。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audioeffectchorus-property-voice-2-cutoff-hz"></target>
            <paragraph classes="classref-property" ids="class-audioeffectchorus-property-voice-2-cutoff-hz" names="class_audioeffectchorus_property_voice/2/cutoff_hz"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>voice/2/cutoff_hz</strong> = <literal>8000.0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_voice_cutoff_hz</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> cutoff_hz <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_voice_cutoff_hz</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>声音的截止频率。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audioeffectchorus-property-voice-2-delay-ms"></target>
            <paragraph classes="classref-property" ids="class-audioeffectchorus-property-voice-2-delay-ms" names="class_audioeffectchorus_property_voice/2/delay_ms"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>voice/2/delay_ms</strong> = <literal>20.0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_voice_delay_ms</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> delay_ms <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_voice_delay_ms</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>声音的信号延迟。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audioeffectchorus-property-voice-2-depth-ms"></target>
            <paragraph classes="classref-property" ids="class-audioeffectchorus-property-voice-2-depth-ms" names="class_audioeffectchorus_property_voice/2/depth_ms"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>voice/2/depth_ms</strong> = <literal>3.0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_voice_depth_ms</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> depth_ms <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_voice_depth_ms</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>声音过滤器的深度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audioeffectchorus-property-voice-2-level-db"></target>
            <paragraph classes="classref-property" ids="class-audioeffectchorus-property-voice-2-level-db" names="class_audioeffectchorus_property_voice/2/level_db"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>voice/2/level_db</strong> = <literal>0.0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_voice_level_db</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> level_db <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_voice_level_db</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>声音的音量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audioeffectchorus-property-voice-2-pan"></target>
            <paragraph classes="classref-property" ids="class-audioeffectchorus-property-voice-2-pan" names="class_audioeffectchorus_property_voice/2/pan"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>voice/2/pan</strong> = <literal>0.5</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_voice_pan</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> pan <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_voice_pan</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>声音的声像级别。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audioeffectchorus-property-voice-2-rate-hz"></target>
            <paragraph classes="classref-property" ids="class-audioeffectchorus-property-voice-2-rate-hz" names="class_audioeffectchorus_property_voice/2/rate_hz"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>voice/2/rate_hz</strong> = <literal>1.2</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_voice_rate_hz</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> rate_hz <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_voice_rate_hz</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>声音过滤比率。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audioeffectchorus-property-voice-3-cutoff-hz"></target>
            <paragraph classes="classref-property" ids="class-audioeffectchorus-property-voice-3-cutoff-hz" names="class_audioeffectchorus_property_voice/3/cutoff_hz"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>voice/3/cutoff_hz</strong></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_voice_cutoff_hz</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> cutoff_hz <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_voice_cutoff_hz</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>声音的截止频率。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audioeffectchorus-property-voice-3-delay-ms"></target>
            <paragraph classes="classref-property" ids="class-audioeffectchorus-property-voice-3-delay-ms" names="class_audioeffectchorus_property_voice/3/delay_ms"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>voice/3/delay_ms</strong></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_voice_delay_ms</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> delay_ms <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_voice_delay_ms</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>声音的信号延迟。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audioeffectchorus-property-voice-3-depth-ms"></target>
            <paragraph classes="classref-property" ids="class-audioeffectchorus-property-voice-3-depth-ms" names="class_audioeffectchorus_property_voice/3/depth_ms"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>voice/3/depth_ms</strong></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_voice_depth_ms</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> depth_ms <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_voice_depth_ms</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>声音过滤器的深度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audioeffectchorus-property-voice-3-level-db"></target>
            <paragraph classes="classref-property" ids="class-audioeffectchorus-property-voice-3-level-db" names="class_audioeffectchorus_property_voice/3/level_db"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>voice/3/level_db</strong></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_voice_level_db</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> level_db <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_voice_level_db</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>声音的音量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audioeffectchorus-property-voice-3-pan"></target>
            <paragraph classes="classref-property" ids="class-audioeffectchorus-property-voice-3-pan" names="class_audioeffectchorus_property_voice/3/pan"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>voice/3/pan</strong></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_voice_pan</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> pan <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_voice_pan</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>声音的声像级别。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audioeffectchorus-property-voice-3-rate-hz"></target>
            <paragraph classes="classref-property" ids="class-audioeffectchorus-property-voice-3-rate-hz" names="class_audioeffectchorus_property_voice/3/rate_hz"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>voice/3/rate_hz</strong></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_voice_rate_hz</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> rate_hz <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_voice_rate_hz</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>声音过滤比率。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audioeffectchorus-property-voice-4-cutoff-hz"></target>
            <paragraph classes="classref-property" ids="class-audioeffectchorus-property-voice-4-cutoff-hz" names="class_audioeffectchorus_property_voice/4/cutoff_hz"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>voice/4/cutoff_hz</strong></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_voice_cutoff_hz</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> cutoff_hz <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_voice_cutoff_hz</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>声音的截止频率。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audioeffectchorus-property-voice-4-delay-ms"></target>
            <paragraph classes="classref-property" ids="class-audioeffectchorus-property-voice-4-delay-ms" names="class_audioeffectchorus_property_voice/4/delay_ms"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>voice/4/delay_ms</strong></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_voice_delay_ms</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> delay_ms <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_voice_delay_ms</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>声音的信号延迟。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audioeffectchorus-property-voice-4-depth-ms"></target>
            <paragraph classes="classref-property" ids="class-audioeffectchorus-property-voice-4-depth-ms" names="class_audioeffectchorus_property_voice/4/depth_ms"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>voice/4/depth_ms</strong></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_voice_depth_ms</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> depth_ms <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_voice_depth_ms</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>声音过滤器的深度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audioeffectchorus-property-voice-4-level-db"></target>
            <paragraph classes="classref-property" ids="class-audioeffectchorus-property-voice-4-level-db" names="class_audioeffectchorus_property_voice/4/level_db"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>voice/4/level_db</strong></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_voice_level_db</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> level_db <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_voice_level_db</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>声音的音量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audioeffectchorus-property-voice-4-pan"></target>
            <paragraph classes="classref-property" ids="class-audioeffectchorus-property-voice-4-pan" names="class_audioeffectchorus_property_voice/4/pan"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>voice/4/pan</strong></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_voice_pan</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> pan <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_voice_pan</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>声音的声像级别。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audioeffectchorus-property-voice-4-rate-hz"></target>
            <paragraph classes="classref-property" ids="class-audioeffectchorus-property-voice-4-rate-hz" names="class_audioeffectchorus_property_voice/4/rate_hz"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>voice/4/rate_hz</strong></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_voice_rate_hz</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> rate_hz <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_voice_rate_hz</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>声音过滤比率。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audioeffectchorus-property-voice-count"></target>
            <paragraph classes="classref-property" ids="class-audioeffectchorus-property-voice-count" names="class_audioeffectchorus_property_voice_count"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>voice_count</strong> = <literal>2</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_voice_count</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_voice_count</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>该效果中的声音数量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audioeffectchorus-property-wet"></target>
            <paragraph classes="classref-property" ids="class-audioeffectchorus-property-wet" names="class_audioeffectchorus_property_wet"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>wet</strong> = <literal>0.5</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_wet</strong> <strong>(</strong> <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_wet</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>效果的处理信号。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="方法说明">
            <title>方法说明</title>
            <target refid="class-audioeffectchorus-method-get-voice-cutoff-hz"></target>
            <paragraph classes="classref-method" ids="class-audioeffectchorus-method-get-voice-cutoff-hz" names="class_audioeffectchorus_method_get_voice_cutoff_hz"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_voice_cutoff_hz</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audioeffectchorus-method-get-voice-delay-ms"></target>
            <paragraph classes="classref-method" ids="class-audioeffectchorus-method-get-voice-delay-ms" names="class_audioeffectchorus_method_get_voice_delay_ms"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_voice_delay_ms</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audioeffectchorus-method-get-voice-depth-ms"></target>
            <paragraph classes="classref-method" ids="class-audioeffectchorus-method-get-voice-depth-ms" names="class_audioeffectchorus_method_get_voice_depth_ms"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_voice_depth_ms</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audioeffectchorus-method-get-voice-level-db"></target>
            <paragraph classes="classref-method" ids="class-audioeffectchorus-method-get-voice-level-db" names="class_audioeffectchorus_method_get_voice_level_db"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_voice_level_db</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audioeffectchorus-method-get-voice-pan"></target>
            <paragraph classes="classref-method" ids="class-audioeffectchorus-method-get-voice-pan" names="class_audioeffectchorus_method_get_voice_pan"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_voice_pan</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audioeffectchorus-method-get-voice-rate-hz"></target>
            <paragraph classes="classref-method" ids="class-audioeffectchorus-method-get-voice-rate-hz" names="class_audioeffectchorus_method_get_voice_rate_hz"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_voice_rate_hz</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audioeffectchorus-method-set-voice-cutoff-hz"></target>
            <paragraph classes="classref-method" ids="class-audioeffectchorus-method-set-voice-cutoff-hz" names="class_audioeffectchorus_method_set_voice_cutoff_hz">void <strong>set_voice_cutoff_hz</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> cutoff_hz <strong>)</strong></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audioeffectchorus-method-set-voice-delay-ms"></target>
            <paragraph classes="classref-method" ids="class-audioeffectchorus-method-set-voice-delay-ms" names="class_audioeffectchorus_method_set_voice_delay_ms">void <strong>set_voice_delay_ms</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> delay_ms <strong>)</strong></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audioeffectchorus-method-set-voice-depth-ms"></target>
            <paragraph classes="classref-method" ids="class-audioeffectchorus-method-set-voice-depth-ms" names="class_audioeffectchorus_method_set_voice_depth_ms">void <strong>set_voice_depth_ms</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> depth_ms <strong>)</strong></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audioeffectchorus-method-set-voice-level-db"></target>
            <paragraph classes="classref-method" ids="class-audioeffectchorus-method-set-voice-level-db" names="class_audioeffectchorus_method_set_voice_level_db">void <strong>set_voice_level_db</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> level_db <strong>)</strong></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audioeffectchorus-method-set-voice-pan"></target>
            <paragraph classes="classref-method" ids="class-audioeffectchorus-method-set-voice-pan" names="class_audioeffectchorus_method_set_voice_pan">void <strong>set_voice_pan</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> pan <strong>)</strong></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audioeffectchorus-method-set-voice-rate-hz"></target>
            <paragraph classes="classref-method" ids="class-audioeffectchorus-method-set-voice-rate-hz" names="class_audioeffectchorus_method_set_voice_rate_hz">void <strong>set_voice_rate_hz</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> voice_idx, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> rate_hz <strong>)</strong></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，所以可以直接使用类名调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

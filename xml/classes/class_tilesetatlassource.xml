<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_tilesetatlassource.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/TileSetAtlasSource.xml.</comment>
    <target refid="class-tilesetatlassource"></target>
    <section ids="tilesetatlassource class-tilesetatlassource" names="tilesetatlassource class_tilesetatlassource">
        <title>TileSetAtlasSource</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_tilesetsource#class-tilesetsource"><inline classes="std std-ref">TileSetSource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>以一组图块的形式向 <reference internal="True" refuri="class_tileset#class-tileset"><inline classes="std std-ref">TileSet</inline></reference> 资源暴露 2D 图集纹理。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>图集是在纹理上铺设的图块栅格。栅格中的每个图块都必须使用 <reference internal="True" refid="class-tilesetatlassource-method-create-tile"><inline classes="std std-ref">create_tile</inline></reference> 公开。然后使用它们在栅格中的坐标，对这些图块进行索引。</paragraph>
            <paragraph>每个图块也可以在栅格坐标中有一个大小，使其在地图集中的单元格更多或更少。</paragraph>
            <paragraph>可以使用 <reference internal="True" refid="class-tilesetatlassource-method-create-alternative-tile"><inline classes="std std-ref">create_alternative_tile</inline></reference> 创建图块的替代版本，然后使用替代 ID 对其进行索引。主图块（栅格中的那个）使用一个等于 0 的替代 ID 进行访问。</paragraph>
            <paragraph>每个图块替代品都有一组由源的 <reference internal="True" refuri="class_tileset#class-tileset"><inline classes="std std-ref">TileSet</inline></reference> 图层定义的属性。这些属性存储在 TileData 对象中，该对象可以使用 <reference internal="True" refid="class-tilesetatlassource-method-get-tile-data"><inline classes="std std-ref">get_tile_data</inline></reference> 来访问和修改。</paragraph>
            <paragraph>由于 TileData 属性直接存储在 TileSetAtlasSource 资源中，它们的属性也可以使用 <literal>TileSetAtlasSource.set("&lt;coords_x&gt;:&lt;coords_y&gt;/&lt;alternative_id&gt;/&lt;tile_data_property&gt;")</literal> 设置。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="35"></colspec>
                    <colspec colwidth="83"></colspec>
                    <colspec colwidth="22"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tilesetatlassource-property-margins"><inline classes="std std-ref">margins</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Vector2i(0, 0)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tilesetatlassource-property-separation"><inline classes="std std-ref">separation</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Vector2i(0, 0)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tilesetatlassource-property-texture"><inline classes="std std-ref">texture</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tilesetatlassource-property-texture-region-size"><inline classes="std std-ref">texture_region_size</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Vector2i(16, 16)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tilesetatlassource-property-use-texture-padding"><inline classes="std std-ref">use_texture_padding</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="69"></colspec>
                    <colspec colwidth="374"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tilesetatlassource-method-clear-tiles-outside-texture"><inline classes="std std-ref">clear_tiles_outside_texture</inline></reference> <strong>(</strong> <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tilesetatlassource-method-create-alternative-tile"><inline classes="std std-ref">create_alternative_tile</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> atlas_coords, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> alternative_id_override=-1 <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tilesetatlassource-method-create-tile"><inline classes="std std-ref">create_tile</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> atlas_coords, <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> size=Vector2i(1, 1) <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tilesetatlassource-method-get-atlas-grid-size"><inline classes="std std-ref">get_atlas_grid_size</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tilesetatlassource-method-get-next-alternative-tile-id"><inline classes="std std-ref">get_next_alternative_tile_id</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> atlas_coords <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tilesetatlassource-method-get-runtime-texture"><inline classes="std std-ref">get_runtime_texture</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rect2i#class-rect2i"><inline classes="std std-ref">Rect2i</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tilesetatlassource-method-get-runtime-tile-texture-region"><inline classes="std std-ref">get_runtime_tile_texture_region</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> atlas_coords, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> frame <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tilesetatlassource-method-get-tile-animation-columns"><inline classes="std std-ref">get_tile_animation_columns</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> atlas_coords <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tilesetatlassource-method-get-tile-animation-frame-duration"><inline classes="std std-ref">get_tile_animation_frame_duration</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> atlas_coords, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> frame_index <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tilesetatlassource-method-get-tile-animation-frames-count"><inline classes="std std-ref">get_tile_animation_frames_count</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> atlas_coords <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-tilesetatlassource-tileanimationmode"><inline classes="std std-ref">TileAnimationMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tilesetatlassource-method-get-tile-animation-mode"><inline classes="std std-ref">get_tile_animation_mode</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> atlas_coords <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tilesetatlassource-method-get-tile-animation-separation"><inline classes="std std-ref">get_tile_animation_separation</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> atlas_coords <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tilesetatlassource-method-get-tile-animation-speed"><inline classes="std std-ref">get_tile_animation_speed</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> atlas_coords <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tilesetatlassource-method-get-tile-animation-total-duration"><inline classes="std std-ref">get_tile_animation_total_duration</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> atlas_coords <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tilesetatlassource-method-get-tile-at-coords"><inline classes="std std-ref">get_tile_at_coords</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> atlas_coords <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_tiledata#class-tiledata"><inline classes="std std-ref">TileData</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tilesetatlassource-method-get-tile-data"><inline classes="std std-ref">get_tile_data</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> atlas_coords, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> alternative_tile <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tilesetatlassource-method-get-tile-size-in-atlas"><inline classes="std std-ref">get_tile_size_in_atlas</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> atlas_coords <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rect2i#class-rect2i"><inline classes="std std-ref">Rect2i</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tilesetatlassource-method-get-tile-texture-region"><inline classes="std std-ref">get_tile_texture_region</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> atlas_coords, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> frame=0 <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_packedvector2array#class-packedvector2array"><inline classes="std std-ref">PackedVector2Array</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tilesetatlassource-method-get-tiles-to-be-removed-on-change"><inline classes="std std-ref">get_tiles_to_be_removed_on_change</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> texture, <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> margins, <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> separation, <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> texture_region_size <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tilesetatlassource-method-has-room-for-tile"><inline classes="std std-ref">has_room_for_tile</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> atlas_coords, <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> size, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> animation_columns, <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> animation_separation, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> frames_count, <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> ignored_tile=Vector2i(-1, -1) <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tilesetatlassource-method-has-tiles-outside-texture"><inline classes="std std-ref">has_tiles_outside_texture</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tilesetatlassource-method-move-tile-in-atlas"><inline classes="std std-ref">move_tile_in_atlas</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> atlas_coords, <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> new_atlas_coords=Vector2i(-1, -1), <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> new_size=Vector2i(-1, -1) <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tilesetatlassource-method-remove-alternative-tile"><inline classes="std std-ref">remove_alternative_tile</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> atlas_coords, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> alternative_tile <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tilesetatlassource-method-remove-tile"><inline classes="std std-ref">remove_tile</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> atlas_coords <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tilesetatlassource-method-set-alternative-tile-id"><inline classes="std std-ref">set_alternative_tile_id</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> atlas_coords, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> alternative_tile, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> new_id <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tilesetatlassource-method-set-tile-animation-columns"><inline classes="std std-ref">set_tile_animation_columns</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> atlas_coords, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> frame_columns <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tilesetatlassource-method-set-tile-animation-frame-duration"><inline classes="std std-ref">set_tile_animation_frame_duration</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> atlas_coords, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> frame_index, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> duration <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tilesetatlassource-method-set-tile-animation-frames-count"><inline classes="std std-ref">set_tile_animation_frames_count</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> atlas_coords, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> frames_count <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tilesetatlassource-method-set-tile-animation-mode"><inline classes="std std-ref">set_tile_animation_mode</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> atlas_coords, <reference internal="True" refid="enum-tilesetatlassource-tileanimationmode"><inline classes="std std-ref">TileAnimationMode</inline></reference> mode <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tilesetatlassource-method-set-tile-animation-separation"><inline classes="std std-ref">set_tile_animation_separation</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> atlas_coords, <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> separation <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tilesetatlassource-method-set-tile-animation-speed"><inline classes="std std-ref">set_tile_animation_speed</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> atlas_coords, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> speed <strong>)</strong></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="枚举">
            <title>枚举</title>
            <target refid="enum-tilesetatlassource-tileanimationmode"></target>
            <paragraph classes="classref-enumeration" ids="enum-tilesetatlassource-tileanimationmode" names="enum_tilesetatlassource_tileanimationmode">enum <strong>TileAnimationMode</strong>:</paragraph>
            <target refid="class-tilesetatlassource-constant-tile-animation-mode-default"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-tilesetatlassource-constant-tile-animation-mode-default" names="class_tilesetatlassource_constant_tile_animation_mode_default"><reference internal="True" refid="enum-tilesetatlassource-tileanimationmode"><inline classes="std std-ref">TileAnimationMode</inline></reference> <strong>TILE_ANIMATION_MODE_DEFAULT</strong> = <literal>0</literal></paragraph>
            <paragraph>图块动画在相同的时间开始，外观一致。</paragraph>
            <target refid="class-tilesetatlassource-constant-tile-animation-mode-random-start-times"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-tilesetatlassource-constant-tile-animation-mode-random-start-times" names="class_tilesetatlassource_constant_tile_animation_mode_random_start_times"><reference internal="True" refid="enum-tilesetatlassource-tileanimationmode"><inline classes="std std-ref">TileAnimationMode</inline></reference> <strong>TILE_ANIMATION_MODE_RANDOM_START_TIMES</strong> = <literal>1</literal></paragraph>
            <paragraph>图块动画在随机的时间开始，外观不同。</paragraph>
            <target refid="class-tilesetatlassource-constant-tile-animation-mode-max"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-tilesetatlassource-constant-tile-animation-mode-max" names="class_tilesetatlassource_constant_tile_animation_mode_max"><reference internal="True" refid="enum-tilesetatlassource-tileanimationmode"><inline classes="std std-ref">TileAnimationMode</inline></reference> <strong>TILE_ANIMATION_MODE_MAX</strong> = <literal>2</literal></paragraph>
            <paragraph>代表 <reference internal="True" refid="enum-tilesetatlassource-tileanimationmode"><inline classes="std std-ref">TileAnimationMode</inline></reference> 枚举的大小。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="常量">
            <title>常量</title>
            <target refid="class-tilesetatlassource-constant-transform-flip-h"></target>
            <paragraph classes="classref-constant" ids="class-tilesetatlassource-constant-transform-flip-h" names="class_tilesetatlassource_constant_transform_flip_h"><strong>TRANSFORM_FLIP_H</strong> = <literal>4096</literal></paragraph>
            <paragraph>代表单元格的水平翻转标志。应该直接对 <reference internal="True" refuri="class_tilemap#class-tilemap"><inline classes="std std-ref">TileMap</inline></reference> 使用，修改放置图块的备选 ID，将其进行翻转。</paragraph>
            <literal_block force="False" language="gdscript" linenos="False" xml:space="preserve">var alternate_id = $TileMap.get_cell_alternative_tile(0, Vector2i(2, 2))
if not alternate_id &amp; TileSetAtlasSource.TRANSFORM_FLIP_H:
    # 如果没有翻转过就进行翻转。
    $TileMap.set_cell(0, Vector2i(2, 2), source_id, atlas_coords, alternate_id | TileSetAtlasSource.TRANSFORM_FLIP_H)</literal_block>
            <target refid="class-tilesetatlassource-constant-transform-flip-v"></target>
            <paragraph classes="classref-constant" ids="class-tilesetatlassource-constant-transform-flip-v" names="class_tilesetatlassource_constant_transform_flip_v"><strong>TRANSFORM_FLIP_V</strong> = <literal>8192</literal></paragraph>
            <paragraph>代表单元格的垂直翻转标志。用法见 <reference internal="True" refid="class-tilesetatlassource-constant-transform-flip-h"><inline classes="std std-ref">TRANSFORM_FLIP_H</inline></reference>。</paragraph>
            <target refid="class-tilesetatlassource-constant-transform-transpose"></target>
            <paragraph classes="classref-constant" ids="class-tilesetatlassource-constant-transform-transpose" names="class_tilesetatlassource_constant_transform_transpose"><strong>TRANSFORM_TRANSPOSE</strong> = <literal>16384</literal></paragraph>
            <paragraph>代表单元格的转置标志。用法见 <reference internal="True" refid="class-tilesetatlassource-constant-transform-flip-h"><inline classes="std std-ref">TRANSFORM_FLIP_H</inline></reference>。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="属性说明">
            <title>属性说明</title>
            <target refid="class-tilesetatlassource-property-margins"></target>
            <paragraph classes="classref-property" ids="class-tilesetatlassource-property-margins" names="class_tilesetatlassource_property_margins"><reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> <strong>margins</strong> = <literal>Vector2i(0, 0)</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_margins</strong> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> <strong>get_margins</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>边距，单位为像素，用于偏移纹理中栅格的原点。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tilesetatlassource-property-separation"></target>
            <paragraph classes="classref-property" ids="class-tilesetatlassource-property-separation" names="class_tilesetatlassource_property_separation"><reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> <strong>separation</strong> = <literal>Vector2i(0, 0)</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_separation</strong> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> <strong>get_separation</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>间隔，单位为像素，是栅格的纹理区域中图块之间的间距。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tilesetatlassource-property-texture"></target>
            <paragraph classes="classref-property" ids="class-tilesetatlassource-property-texture" names="class_tilesetatlassource_property_texture"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>texture</strong></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_texture</strong> <strong>(</strong> <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>get_texture</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>图集纹理。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tilesetatlassource-property-texture-region-size"></target>
            <paragraph classes="classref-property" ids="class-tilesetatlassource-property-texture-region-size" names="class_tilesetatlassource_property_texture_region_size"><reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> <strong>texture_region_size</strong> = <literal>Vector2i(16, 16)</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_texture_region_size</strong> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> <strong>get_texture_region_size</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>纹理中的基础图块大小（以像素为单位）。该大小必须大于该 TileSet 中的 <literal>tile_size</literal> 值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tilesetatlassource-property-use-texture-padding"></target>
            <paragraph classes="classref-property" ids="class-tilesetatlassource-property-use-texture-padding" names="class_tilesetatlassource_property_use_texture_padding"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>use_texture_padding</strong> = <literal>true</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_use_texture_padding</strong> <strong>(</strong> <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_use_texture_padding</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则生成一个内部纹理，每个图块周围有一个额外的单像素填充。纹理填充避免了图块之间出现线条状的常见伪像。</paragraph>
            <paragraph>禁用该设置可能会导致性能略有提高，因为在 TileSetAtlasSource 资源被修改时，生成内部纹理需要内存和处理时间。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id7" names="方法说明">
            <title>方法说明</title>
            <target refid="class-tilesetatlassource-method-clear-tiles-outside-texture"></target>
            <paragraph classes="classref-method" ids="class-tilesetatlassource-method-clear-tiles-outside-texture" names="class_tilesetatlassource_method_clear_tiles_outside_texture">void <strong>clear_tiles_outside_texture</strong> <strong>(</strong> <strong>)</strong></paragraph>
            <paragraph>移除所有位于可用纹理区域之外的图块。这个方法会遍历所有源的图块，因此建议先使用 <reference internal="True" refid="class-tilesetatlassource-method-has-tiles-outside-texture"><inline classes="std std-ref">has_tiles_outside_texture</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tilesetatlassource-method-create-alternative-tile"></target>
            <paragraph classes="classref-method" ids="class-tilesetatlassource-method-create-alternative-tile" names="class_tilesetatlassource_method_create_alternative_tile"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>create_alternative_tile</strong> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> atlas_coords, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> alternative_id_override=-1 <strong>)</strong></paragraph>
            <paragraph>为坐标为 <literal>atlas_coords</literal> 的图块创建备选图块。如果 <literal>alternative_id_override</literal> 为 -1，则会给予自动生成的唯一 ID，否则使用给定的 ID 赋值。</paragraph>
            <paragraph>返回新的备选标识符，如果无法使用提供的 <literal>alternative_id_override</literal> 创建则返回 -1。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tilesetatlassource-method-create-tile"></target>
            <paragraph classes="classref-method" ids="class-tilesetatlassource-method-create-tile" names="class_tilesetatlassource_method_create_tile">void <strong>create_tile</strong> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> atlas_coords, <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> size=Vector2i(1, 1) <strong>)</strong></paragraph>
            <paragraph>在坐标 <literal>atlas_coords</literal> 处新建给定大小 <literal>size</literal> 的图块。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tilesetatlassource-method-get-atlas-grid-size"></target>
            <paragraph classes="classref-method" ids="class-tilesetatlassource-method-get-atlas-grid-size" names="class_tilesetatlassource_method_get_atlas_grid_size"><reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> <strong>get_atlas_grid_size</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回图集栅格大小，这取决于纹理中可以容纳多少个图块。因此，它取决于 <reference internal="True" refid="class-tilesetatlassource-property-texture"><inline classes="std std-ref">texture</inline></reference> 的大小，该图集的 <reference internal="True" refid="class-tilesetatlassource-property-margins"><inline classes="std std-ref">margins</inline></reference>、和该图块的 <reference internal="True" refid="class-tilesetatlassource-property-texture-region-size"><inline classes="std std-ref">texture_region_size</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tilesetatlassource-method-get-next-alternative-tile-id"></target>
            <paragraph classes="classref-method" ids="class-tilesetatlassource-method-get-next-alternative-tile-id" names="class_tilesetatlassource_method_get_next_alternative_tile_id"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_next_alternative_tile_id</strong> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> atlas_coords <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回后续调用 <reference internal="True" refid="class-tilesetatlassource-method-create-alternative-tile"><inline classes="std std-ref">create_alternative_tile</inline></reference> 时将返回的备选 ID。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tilesetatlassource-method-get-runtime-texture"></target>
            <paragraph classes="classref-method" ids="class-tilesetatlassource-method-get-runtime-texture" names="class_tilesetatlassource_method_get_runtime_texture"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>get_runtime_texture</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>如果 <reference internal="True" refid="class-tilesetatlassource-property-use-texture-padding"><inline classes="std std-ref">use_texture_padding</inline></reference> 为 <literal>false</literal>，则返回 <reference internal="True" refid="class-tilesetatlassource-property-texture"><inline classes="std std-ref">texture</inline></reference>。否则，创建并返回包含内边距的内部 <reference internal="True" refuri="class_imagetexture#class-imagetexture"><inline classes="std std-ref">ImageTexture</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tilesetatlassource-method-get-runtime-tile-texture-region"></target>
            <paragraph classes="classref-method" ids="class-tilesetatlassource-method-get-runtime-tile-texture-region" names="class_tilesetatlassource_method_get_runtime_tile_texture_region"><reference internal="True" refuri="class_rect2i#class-rect2i"><inline classes="std std-ref">Rect2i</inline></reference> <strong>get_runtime_tile_texture_region</strong> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> atlas_coords, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> frame <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回由 <reference internal="True" refid="class-tilesetatlassource-method-get-runtime-texture"><inline classes="std std-ref">get_runtime_texture</inline></reference> 返回的纹理内给定 <literal>frame</literal> 的坐标 <literal>atlas_coords</literal> 处的图块区块。</paragraph>
            <paragraph><strong>注意：</strong>如果 <reference internal="True" refid="class-tilesetatlassource-property-use-texture-padding"><inline classes="std std-ref">use_texture_padding</inline></reference> 为 <literal>false</literal>，则返回与 <reference internal="True" refid="class-tilesetatlassource-method-get-tile-texture-region"><inline classes="std std-ref">get_tile_texture_region</inline></reference> 相同的结果。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tilesetatlassource-method-get-tile-animation-columns"></target>
            <paragraph classes="classref-method" ids="class-tilesetatlassource-method-get-tile-animation-columns" names="class_tilesetatlassource_method_get_tile_animation_columns"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_tile_animation_columns</strong> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> atlas_coords <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回位于坐标 <literal>atlas_coords</literal> 的图块的动画布局中有多少列。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tilesetatlassource-method-get-tile-animation-frame-duration"></target>
            <paragraph classes="classref-method" ids="class-tilesetatlassource-method-get-tile-animation-frame-duration" names="class_tilesetatlassource_method_get_tile_animation_frame_duration"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_tile_animation_frame_duration</strong> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> atlas_coords, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> frame_index <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回位于坐标 <literal>atlas_coords</literal> 的图块的第 <literal>frame_index</literal> 帧的动画帧时长。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tilesetatlassource-method-get-tile-animation-frames-count"></target>
            <paragraph classes="classref-method" ids="class-tilesetatlassource-method-get-tile-animation-frames-count" names="class_tilesetatlassource_method_get_tile_animation_frames_count"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_tile_animation_frames_count</strong> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> atlas_coords <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回位于坐标 <literal>atlas_coords</literal> 的图块有多少动画帧。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tilesetatlassource-method-get-tile-animation-mode"></target>
            <paragraph classes="classref-method" ids="class-tilesetatlassource-method-get-tile-animation-mode" names="class_tilesetatlassource_method_get_tile_animation_mode"><reference internal="True" refid="enum-tilesetatlassource-tileanimationmode"><inline classes="std std-ref">TileAnimationMode</inline></reference> <strong>get_tile_animation_mode</strong> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> atlas_coords <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回图集坐标为 <literal>atlas_coords</literal> 的图块的 <reference internal="True" refid="enum-tilesetatlassource-tileanimationmode"><inline classes="std std-ref">TileAnimationMode</inline></reference>。另见 <reference internal="True" refid="class-tilesetatlassource-method-set-tile-animation-mode"><inline classes="std std-ref">set_tile_animation_mode</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tilesetatlassource-method-get-tile-animation-separation"></target>
            <paragraph classes="classref-method" ids="class-tilesetatlassource-method-get-tile-animation-separation" names="class_tilesetatlassource_method_get_tile_animation_separation"><reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> <strong>get_tile_animation_separation</strong> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> atlas_coords <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回位于坐标 <literal>atlas_coords</literal> 的图块的帧与帧之间（在图集网格中）的间隔。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tilesetatlassource-method-get-tile-animation-speed"></target>
            <paragraph classes="classref-method" ids="class-tilesetatlassource-method-get-tile-animation-speed" names="class_tilesetatlassource_method_get_tile_animation_speed"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_tile_animation_speed</strong> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> atlas_coords <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回位于坐标 <literal>atlas_coords</literal> 的图块的动画速度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tilesetatlassource-method-get-tile-animation-total-duration"></target>
            <paragraph classes="classref-method" ids="class-tilesetatlassource-method-get-tile-animation-total-duration" names="class_tilesetatlassource_method_get_tile_animation_total_duration"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_tile_animation_total_duration</strong> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> atlas_coords <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回坐标 <literal>atlas_coords</literal> 处的图块的帧持续时间的总和。这个值需要除以动画速度才能得到实际的动画循环持续时间。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tilesetatlassource-method-get-tile-at-coords"></target>
            <paragraph classes="classref-method" ids="class-tilesetatlassource-method-get-tile-at-coords" names="class_tilesetatlassource_method_get_tile_at_coords"><reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> <strong>get_tile_at_coords</strong> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> atlas_coords <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>如果有覆盖 <literal>atlas_coords</literal> 坐标的图块，则返回该图块左上角的坐标（即它的坐标 ID）。否则返回 <literal>Vector2i(-1, -1)</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tilesetatlassource-method-get-tile-data"></target>
            <paragraph classes="classref-method" ids="class-tilesetatlassource-method-get-tile-data" names="class_tilesetatlassource_method_get_tile_data"><reference internal="True" refuri="class_tiledata#class-tiledata"><inline classes="std std-ref">TileData</inline></reference> <strong>get_tile_data</strong> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> atlas_coords, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> alternative_tile <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回给定图集坐标和备选 ID 对应的 <reference internal="True" refuri="class_tiledata#class-tiledata"><inline classes="std std-ref">TileData</inline></reference> 对象。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tilesetatlassource-method-get-tile-size-in-atlas"></target>
            <paragraph classes="classref-method" ids="class-tilesetatlassource-method-get-tile-size-in-atlas" names="class_tilesetatlassource_method_get_tile_size_in_atlas"><reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> <strong>get_tile_size_in_atlas</strong> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> atlas_coords <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回位于坐标 <literal>atlas_coords</literal> 的图块的大小（使用栅格坐标系）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tilesetatlassource-method-get-tile-texture-region"></target>
            <paragraph classes="classref-method" ids="class-tilesetatlassource-method-get-tile-texture-region" names="class_tilesetatlassource_method_get_tile_texture_region"><reference internal="True" refuri="class_rect2i#class-rect2i"><inline classes="std std-ref">Rect2i</inline></reference> <strong>get_tile_texture_region</strong> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> atlas_coords, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> frame=0 <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回某个图块在图集纹理中的纹理区域。对于动画图块，可以提供 <literal>frame</literal> 参数来获取动画中不同的帧对应的区域。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tilesetatlassource-method-get-tiles-to-be-removed-on-change"></target>
            <paragraph classes="classref-method" ids="class-tilesetatlassource-method-get-tiles-to-be-removed-on-change" names="class_tilesetatlassource_method_get_tiles_to_be_removed_on_change"><reference internal="True" refuri="class_packedvector2array#class-packedvector2array"><inline classes="std std-ref">PackedVector2Array</inline></reference> <strong>get_tiles_to_be_removed_on_change</strong> <strong>(</strong> <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> texture, <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> margins, <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> separation, <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> texture_region_size <strong>)</strong></paragraph>
            <paragraph>返回修改以下任意属性时将会自动移除的图块坐标 ID 的数组：<literal>texture</literal>、<literal>margins</literal>、<literal>separation</literal>、<literal>texture_region_size</literal>。可以用来撤销可能造成图块数据丢失的更改。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tilesetatlassource-method-has-room-for-tile"></target>
            <paragraph classes="classref-method" ids="class-tilesetatlassource-method-has-room-for-tile" names="class_tilesetatlassource_method_has_room_for_tile"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>has_room_for_tile</strong> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> atlas_coords, <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> size, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> animation_columns, <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> animation_separation, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> frames_count, <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> ignored_tile=Vector2i(-1, -1) <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回图集中是否有足够的空间来使用给定的属性创建/修改图块。如果提供了 <literal>ignored_tile</literal>，则判断时会和给定的图块在图集中不存在一样。可以在想要修改某个图块的属性时使用。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tilesetatlassource-method-has-tiles-outside-texture"></target>
            <paragraph classes="classref-method" ids="class-tilesetatlassource-method-has-tiles-outside-texture" names="class_tilesetatlassource_method_has_tiles_outside_texture"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>has_tiles_outside_texture</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>检查该源是否存在位于纹理区域之外的图块（无论是部分位于区域外还是完全位于区域外）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tilesetatlassource-method-move-tile-in-atlas"></target>
            <paragraph classes="classref-method" ids="class-tilesetatlassource-method-move-tile-in-atlas" names="class_tilesetatlassource_method_move_tile_in_atlas">void <strong>move_tile_in_atlas</strong> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> atlas_coords, <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> new_atlas_coords=Vector2i(-1, -1), <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> new_size=Vector2i(-1, -1) <strong>)</strong></paragraph>
            <paragraph>将 <literal>atlas_coords</literal> 坐标处的图块及其替代物移动到具有 <literal>new_size</literal> 大小的 <literal>new_atlas_coords</literal> 坐标。如果给定区域中已经存在一个图块，则该函数将失败。</paragraph>
            <paragraph>如果 <literal>new_atlas_coords</literal> 为 <literal>Vector2i(-1, -1)</literal>，则保持图块的坐标。如果 <literal>new_size</literal> 为 <literal>Vector2i(-1, -1)</literal>，则保持图块的大小。</paragraph>
            <paragraph>为避免错误，请首先使用 <reference internal="True" refid="class-tilesetatlassource-method-has-room-for-tile"><inline classes="std std-ref">has_room_for_tile</inline></reference> 来检查移动是否可行。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tilesetatlassource-method-remove-alternative-tile"></target>
            <paragraph classes="classref-method" ids="class-tilesetatlassource-method-remove-alternative-tile" names="class_tilesetatlassource_method_remove_alternative_tile">void <strong>remove_alternative_tile</strong> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> atlas_coords, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> alternative_tile <strong>)</strong></paragraph>
            <paragraph>移除备选 ID 为 <literal>alternative_tile</literal> 的备选图块。</paragraph>
            <paragraph>使用为 0 的 <literal>alternative_tile</literal> 调用这个函数会失败，因为基础图块备选项无法被移除。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tilesetatlassource-method-remove-tile"></target>
            <paragraph classes="classref-method" ids="class-tilesetatlassource-method-remove-tile" names="class_tilesetatlassource_method_remove_tile">void <strong>remove_tile</strong> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> atlas_coords <strong>)</strong></paragraph>
            <paragraph>移除位于坐标 <literal>atlas_coords</literal> 的图块及其备选项。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tilesetatlassource-method-set-alternative-tile-id"></target>
            <paragraph classes="classref-method" ids="class-tilesetatlassource-method-set-alternative-tile-id" names="class_tilesetatlassource_method_set_alternative_tile_id">void <strong>set_alternative_tile_id</strong> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> atlas_coords, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> alternative_tile, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> new_id <strong>)</strong></paragraph>
            <paragraph>将图块的备选 ID 从 <literal>alternative_tile</literal> 改为 <literal>new_id</literal>。</paragraph>
            <paragraph>调用这个函数时将 <literal>new_id</literal> 设为 0 会导致失败，因为基础图块备选项无法移动。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tilesetatlassource-method-set-tile-animation-columns"></target>
            <paragraph classes="classref-method" ids="class-tilesetatlassource-method-set-tile-animation-columns" names="class_tilesetatlassource_method_set_tile_animation_columns">void <strong>set_tile_animation_columns</strong> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> atlas_coords, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> frame_columns <strong>)</strong></paragraph>
            <paragraph>设置位于坐标 <literal>atlas_coords</literal> 的图块的动画布局中的列数。如果设置为 0，则动画帧在图集中水平排列。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tilesetatlassource-method-set-tile-animation-frame-duration"></target>
            <paragraph classes="classref-method" ids="class-tilesetatlassource-method-set-tile-animation-frame-duration" names="class_tilesetatlassource_method_set_tile_animation_frame_duration">void <strong>set_tile_animation_frame_duration</strong> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> atlas_coords, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> frame_index, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> duration <strong>)</strong></paragraph>
            <paragraph>设置位于坐标 <literal>atlas_coords</literal> 的图块动画帧 <literal>frame_index</literal> 的持续时间 <literal>duration</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tilesetatlassource-method-set-tile-animation-frames-count"></target>
            <paragraph classes="classref-method" ids="class-tilesetatlassource-method-set-tile-animation-frames-count" names="class_tilesetatlassource_method_set_tile_animation_frames_count">void <strong>set_tile_animation_frames_count</strong> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> atlas_coords, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> frames_count <strong>)</strong></paragraph>
            <paragraph>设置位于坐标 <literal>atlas_coords</literal> 的图块有多少动画帧。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tilesetatlassource-method-set-tile-animation-mode"></target>
            <paragraph classes="classref-method" ids="class-tilesetatlassource-method-set-tile-animation-mode" names="class_tilesetatlassource_method_set_tile_animation_mode">void <strong>set_tile_animation_mode</strong> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> atlas_coords, <reference internal="True" refid="enum-tilesetatlassource-tileanimationmode"><inline classes="std std-ref">TileAnimationMode</inline></reference> mode <strong>)</strong></paragraph>
            <paragraph>将图集坐标为 <literal>atlas_coords</literal> 的图块的 <reference internal="True" refid="enum-tilesetatlassource-tileanimationmode"><inline classes="std std-ref">TileAnimationMode</inline></reference> 设置为 <literal>mode</literal>。另见 <reference internal="True" refid="class-tilesetatlassource-method-get-tile-animation-mode"><inline classes="std std-ref">get_tile_animation_mode</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tilesetatlassource-method-set-tile-animation-separation"></target>
            <paragraph classes="classref-method" ids="class-tilesetatlassource-method-set-tile-animation-separation" names="class_tilesetatlassource_method_set_tile_animation_separation">void <strong>set_tile_animation_separation</strong> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> atlas_coords, <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> separation <strong>)</strong></paragraph>
            <paragraph>设置位于坐标 <literal>atlas_coords</literal> 的图块的动画布局中，图块的间距（单位为栅格图块）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tilesetatlassource-method-set-tile-animation-speed"></target>
            <paragraph classes="classref-method" ids="class-tilesetatlassource-method-set-tile-animation-speed" names="class_tilesetatlassource_method_set_tile_animation_speed">void <strong>set_tile_animation_speed</strong> <strong>(</strong> <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> atlas_coords, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> speed <strong>)</strong></paragraph>
            <paragraph>设置位于坐标 <literal>atlas_coords</literal> 的图块的动画速度。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，所以可以直接使用类名调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

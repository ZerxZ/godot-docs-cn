<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_resourceuid.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/ResourceUID.xml.</comment>
    <target refid="class-resourceuid"></target>
    <section ids="resourceuid class-resourceuid" names="resourceuid class_resourceuid">
        <title>ResourceUID</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>管理项目中所有资源的唯一标识符的单例。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>资源 UID（Unique IDentifier，唯一标识符）可以使引擎保持资源之间引用关系的完整性，即使文件发生重命名或移动。可以使用 <literal>uid://</literal> 访问。</paragraph>
            <paragraph><strong>ResourceUID</strong> 能够跟踪项目中所有已注册的资源 UID，生成新的 UID，也能够将标识符在字符串表示和整数表示之间进行转换。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="29"></colspec>
                    <colspec colwidth="118"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-resourceuid-method-add-id"><inline classes="std std-ref">add_id</inline></reference>(id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, path: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-resourceuid-method-create-id"><inline classes="std std-ref">create_id</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-resourceuid-method-get-id-path"><inline classes="std std-ref">get_id_path</inline></reference>(id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-resourceuid-method-has-id"><inline classes="std std-ref">has_id</inline></reference>(id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-resourceuid-method-id-to-text"><inline classes="std std-ref">id_to_text</inline></reference>(id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-resourceuid-method-remove-id"><inline classes="std std-ref">remove_id</inline></reference>(id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-resourceuid-method-set-id"><inline classes="std std-ref">set_id</inline></reference>(id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, path: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-resourceuid-method-text-to-id"><inline classes="std std-ref">text_to_id</inline></reference>(text_id: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="常量">
            <title>常量</title>
            <target refid="class-resourceuid-constant-invalid-id"></target>
            <paragraph classes="classref-constant" ids="class-resourceuid-constant-invalid-id" names="class_resourceuid_constant_invalid_id"><strong>INVALID_ID</strong> = <literal>-1</literal> <reference internal="True" refid="class-resourceuid-constant-invalid-id"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>用于无效 UID 的值，例如无法加载的资源。</paragraph>
            <paragraph>对应的文本表示为 <literal>uid://&lt;invalid&gt;</literal>。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="方法说明">
            <title>方法说明</title>
            <target refid="class-resourceuid-method-add-id"></target>
            <paragraph classes="classref-method" ids="class-resourceuid-method-add-id" names="class_resourceuid_method_add_id"><abbreviation explanation="无返回值。">void</abbreviation> <strong>add_id</strong>(id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, path: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <reference internal="True" refid="class-resourceuid-method-add-id"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>添加一个新的 UID 值，将其映射到给定的资源路径。</paragraph>
            <paragraph>如果 UID 已经存在，则会返回错误，因此请务必先使用 <reference internal="True" refid="class-resourceuid-method-has-id"><inline classes="std std-ref">has_id</inline></reference> 进行检查，或者改用 <reference internal="True" refid="class-resourceuid-method-set-id"><inline classes="std std-ref">set_id</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-resourceuid-method-create-id"></target>
            <paragraph classes="classref-method" ids="class-resourceuid-method-create-id" names="class_resourceuid_method_create_id"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>create_id</strong>() <reference internal="True" refid="class-resourceuid-method-create-id"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>生成随机的资源 UID，该 UID 在当前加载的 UID 列表中保证唯一。</paragraph>
            <paragraph>要注册这个 UID，你必须调用 <reference internal="True" refid="class-resourceuid-method-add-id"><inline classes="std std-ref">add_id</inline></reference> 或 <reference internal="True" refid="class-resourceuid-method-set-id"><inline classes="std std-ref">set_id</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-resourceuid-method-get-id-path"></target>
            <paragraph classes="classref-method" ids="class-resourceuid-method-get-id-path" names="class_resourceuid_method_get_id_path"><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>get_id_path</strong>(id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-resourceuid-method-get-id-path"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回给定 UID 值引用的路径。</paragraph>
            <paragraph>如果 UID 不存在则失败并报错，因此请务必使用 <reference internal="True" refid="class-resourceuid-method-has-id"><inline classes="std std-ref">has_id</inline></reference> 事先检查。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-resourceuid-method-has-id"></target>
            <paragraph classes="classref-method" ids="class-resourceuid-method-has-id" names="class_resourceuid_method_has_id"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>has_id</strong>(id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-resourceuid-method-has-id"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回给定的 UID 值是否为缓存所知。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-resourceuid-method-id-to-text"></target>
            <paragraph classes="classref-method" ids="class-resourceuid-method-id-to-text" names="class_resourceuid_method_id_to_text"><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>id_to_text</strong>(id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-resourceuid-method-id-to-text"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将给定的 UID 转换为 <literal>uid://</literal> 字符串值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-resourceuid-method-remove-id"></target>
            <paragraph classes="classref-method" ids="class-resourceuid-method-remove-id" names="class_resourceuid_method_remove_id"><abbreviation explanation="无返回值。">void</abbreviation> <strong>remove_id</strong>(id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-resourceuid-method-remove-id"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>从缓存中删除一个已加载的 UID 值。</paragraph>
            <paragraph>如果 UID 不存在则失败并报错，因此请务必提前使用 <reference internal="True" refid="class-resourceuid-method-has-id"><inline classes="std std-ref">has_id</inline></reference> 检查。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-resourceuid-method-set-id"></target>
            <paragraph classes="classref-method" ids="class-resourceuid-method-set-id" names="class_resourceuid_method_set_id"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_id</strong>(id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, path: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <reference internal="True" refid="class-resourceuid-method-set-id"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>更新现有 UID 的资源路径。</paragraph>
            <paragraph>如果 UID 不存在，则失败并出现错误，因此请务必提前使用 <reference internal="True" refid="class-resourceuid-method-has-id"><inline classes="std std-ref">has_id</inline></reference> 检查，或者改用 <reference internal="True" refid="class-resourceuid-method-add-id"><inline classes="std std-ref">add_id</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-resourceuid-method-text-to-id"></target>
            <paragraph classes="classref-method" ids="class-resourceuid-method-text-to-id" names="class_resourceuid_method_text_to_id"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>text_to_id</strong>(text_id: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-resourceuid-method-text-to-id"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>从给定的 <literal>uid://</literal> 字符串中提取 UID 值。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

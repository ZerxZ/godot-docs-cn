<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_openxrinteractionprofilemetadata.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/modules/openxr/doc_classes/OpenXRInteractionProfileMetadata.xml.</comment>
    <target refid="class-openxrinteractionprofilemetadata"></target>
    <section ids="openxrinteractionprofilemetadata class-openxrinteractionprofilemetadata" names="openxrinteractionprofilemetadata class_openxrinteractionprofilemetadata">
        <title>OpenXRInteractionProfileMetadata</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>在 OpenXR 中注册受支持设备的元类。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>该类允许 OpenXR 核心和扩展注册与受支持的交互设备（例如控制器、跟踪器、触觉设备等）相关的元数据。它主要由动作映射编辑器使用，并在适用时通过移除依赖于扩展的条目来清理任何动作映射。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="8"></colspec>
                    <colspec colwidth="394"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-openxrinteractionprofilemetadata-method-register-interaction-profile"><inline classes="std std-ref">register_interaction_profile</inline></reference>(display_name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, openxr_path: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, openxr_extension_name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-openxrinteractionprofilemetadata-method-register-io-path"><inline classes="std std-ref">register_io_path</inline></reference>(interaction_profile: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, display_name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, toplevel_path: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, openxr_path: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, openxr_extension_name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, action_type: <reference internal="True" refuri="class_openxraction#enum-openxraction-actiontype"><inline classes="std std-ref">ActionType</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-openxrinteractionprofilemetadata-method-register-profile-rename"><inline classes="std std-ref">register_profile_rename</inline></reference>(old_name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, new_name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-openxrinteractionprofilemetadata-method-register-top-level-path"><inline classes="std std-ref">register_top_level_path</inline></reference>(display_name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, openxr_path: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, openxr_extension_name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>)</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="方法说明">
            <title>方法说明</title>
            <target refid="class-openxrinteractionprofilemetadata-method-register-interaction-profile"></target>
            <paragraph classes="classref-method" ids="class-openxrinteractionprofilemetadata-method-register-interaction-profile" names="class_openxrinteractionprofilemetadata_method_register_interaction_profile"><abbreviation explanation="无返回值。">void</abbreviation> <strong>register_interaction_profile</strong>(display_name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, openxr_path: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, openxr_extension_name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <reference internal="True" refid="class-openxrinteractionprofilemetadata-method-register-interaction-profile"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>使用 OpenXR 名称注册交互配置文件（例如 <literal>/interaction_profiles/khr/simple_controller</literal> 是 OpenXR 简单控制器配置文件的配置文件）。</paragraph>
            <paragraph><literal>display_name</literal> 是向用户显示的描述。<literal>openxr_path</literal> 是正被注册的交互配置文件路径。<literal>openxr_extension_name</literal> 可以选择将该配置文件限制为对给定扩展启用/可用。如果该扩展不可用，则动作映射中使用的配置文件和所有相关条目都会被过滤掉。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-openxrinteractionprofilemetadata-method-register-io-path"></target>
            <paragraph classes="classref-method" ids="class-openxrinteractionprofilemetadata-method-register-io-path" names="class_openxrinteractionprofilemetadata_method_register_io_path"><abbreviation explanation="无返回值。">void</abbreviation> <strong>register_io_path</strong>(interaction_profile: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, display_name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, toplevel_path: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, openxr_path: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, openxr_extension_name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, action_type: <reference internal="True" refuri="class_openxraction#enum-openxraction-actiontype"><inline classes="std std-ref">ActionType</inline></reference>) <reference internal="True" refid="class-openxrinteractionprofilemetadata-method-register-io-path"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>为给定的 <literal>interaction_profile</literal> 注册输入/输出路径。该配置文件之前应已使用 <reference internal="True" refid="class-openxrinteractionprofilemetadata-method-register-interaction-profile"><inline classes="std std-ref">register_interaction_profile</inline></reference> 注册。<literal>display_name</literal> 是向用户显示的描述。<literal>toplevel_path</literal> 指定该输入/输出可以被绑定到的绑定路径（例如 <literal>/user/hand/left</literal> 或 <literal>/user/hand/right</literal>）。<literal>openxr_path</literal> 是正被注册的动作输入/输出（例如 <literal>/user/hand/left/input/aim/pose</literal>）。<literal>openxr_extension_name</literal> 将该输入/输出限制为启用的/可用的扩展，这不需要在配置文件上重复该扩展，但与重叠扩展相关（例如引入 <literal>…/input/palm_ext/pose</literal> 输入路径的 <literal>XR_EXT_palm_pose</literal>）。<literal>action_type</literal> 定义 OpenXR 提供的输入或输出的类型。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-openxrinteractionprofilemetadata-method-register-profile-rename"></target>
            <paragraph classes="classref-method" ids="class-openxrinteractionprofilemetadata-method-register-profile-rename" names="class_openxrinteractionprofilemetadata_method_register_profile_rename"><abbreviation explanation="无返回值。">void</abbreviation> <strong>register_profile_rename</strong>(old_name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, new_name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <reference internal="True" refid="class-openxrinteractionprofilemetadata-method-register-profile-rename"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>允许将旧的交互配置文件路径重命名为新路径，以保持与旧动作映射的向后兼容性。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-openxrinteractionprofilemetadata-method-register-top-level-path"></target>
            <paragraph classes="classref-method" ids="class-openxrinteractionprofilemetadata-method-register-top-level-path" names="class_openxrinteractionprofilemetadata_method_register_top_level_path"><abbreviation explanation="无返回值。">void</abbreviation> <strong>register_top_level_path</strong>(display_name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, openxr_path: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, openxr_extension_name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <reference internal="True" refid="class-openxrinteractionprofilemetadata-method-register-top-level-path"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>注册配置文件可以被绑定到的顶级路径。例如 <literal>/user/hand/left</literal> 指的是玩家左手的绑定点。扩展可以注册额外的顶级路径，例如触觉背心扩展可以注册 <literal>/user/body/vest</literal>。</paragraph>
            <paragraph><literal>display_name</literal> 是向用户显示的名称。<literal>openxr_path</literal> 是正被注册的顶级路径。<literal>openxr_extension_name</literal> 是可选的，可确保仅在指定的扩展可用/启用时才使用顶级路径。</paragraph>
            <paragraph>当顶级路径最终被 OpenXR 绑定时，<reference internal="True" refuri="class_xrpositionaltracker#class-xrpositionaltracker"><inline classes="std std-ref">XRPositionalTracker</inline></reference> 被实例化以管理该设备的状态。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效运算符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列位标志构成位掩码的整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

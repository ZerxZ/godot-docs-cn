<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_resourceimporterdynamicfont.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/ResourceImporterDynamicFont.xml.</comment>
    <target refid="class-resourceimporterdynamicfont"></target>
    <section ids="resourceimporterdynamicfont class-resourceimporterdynamicfont" names="resourceimporterdynamicfont class_resourceimporterdynamicfont">
        <title>ResourceImporterDynamicFont</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_resourceimporter#class-resourceimporter"><inline classes="std std-ref">ResourceImporter</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>导入 TTF、TTC、OTF、OTC、WOFF、WOFF2 字体文件，用于能够适配任何大小的字体渲染。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>与位图字体不同，动态字体可以被调整为任意大小，并且看起来仍然清晰。动态字体还可以选择支持 MSDF 字体渲染，从而允许运行时缩放更改，且没有重新光栅化成本。</paragraph>
            <paragraph>虽然 WOFF（尤其是 WOFF2）往往会产生较小的文件大小，但不存在普遍“更好”的字体格式。在大多数情况下，建议使用字体开发人员网站上提供的字体格式。</paragraph>
            <paragraph>另请参见 <reference internal="True" refuri="class_resourceimporterbmfont#class-resourceimporterbmfont"><inline classes="std std-ref">ResourceImporterBMFont</inline></reference> 和 <reference internal="True" refuri="class_resourceimporterimagefont#class-resourceimporterimagefont"><inline classes="std std-ref">ResourceImporterImageFont</inline></reference>。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference name="动态字体——使用字体" refuri="../tutorials/ui/gui_using_fonts.html#dynamic-fonts">动态字体——使用字体</reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="37"></colspec>
                    <colspec colwidth="122"></colspec>
                    <colspec colwidth="11"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-resourceimporterdynamicfont-property-allow-system-fallback"><inline classes="std std-ref">allow_system_fallback</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-resourceimporterdynamicfont-property-antialiasing"><inline classes="std std-ref">antialiasing</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-resourceimporterdynamicfont-property-compress"><inline classes="std std-ref">compress</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-resourceimporterdynamicfont-property-disable-embedded-bitmaps"><inline classes="std std-ref">disable_embedded_bitmaps</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-resourceimporterdynamicfont-property-fallbacks"><inline classes="std std-ref">fallbacks</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>[]</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-resourceimporterdynamicfont-property-force-autohinter"><inline classes="std std-ref">force_autohinter</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-resourceimporterdynamicfont-property-generate-mipmaps"><inline classes="std std-ref">generate_mipmaps</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-resourceimporterdynamicfont-property-hinting"><inline classes="std std-ref">hinting</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-resourceimporterdynamicfont-property-language-support"><inline classes="std std-ref">language_support</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>{}</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-resourceimporterdynamicfont-property-msdf-pixel-range"><inline classes="std std-ref">msdf_pixel_range</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>8</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-resourceimporterdynamicfont-property-msdf-size"><inline classes="std std-ref">msdf_size</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>48</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-resourceimporterdynamicfont-property-multichannel-signed-distance-field"><inline classes="std std-ref">multichannel_signed_distance_field</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-resourceimporterdynamicfont-property-opentype-features"><inline classes="std std-ref">opentype_features</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>{}</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-resourceimporterdynamicfont-property-oversampling"><inline classes="std std-ref">oversampling</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-resourceimporterdynamicfont-property-preload"><inline classes="std std-ref">preload</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>[]</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-resourceimporterdynamicfont-property-script-support"><inline classes="std std-ref">script_support</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>{}</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-resourceimporterdynamicfont-property-subpixel-positioning"><inline classes="std std-ref">subpixel_positioning</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="属性说明">
            <title>属性说明</title>
            <target refid="class-resourceimporterdynamicfont-property-allow-system-fallback"></target>
            <paragraph classes="classref-property" ids="class-resourceimporterdynamicfont-property-allow-system-fallback" names="class_resourceimporterdynamicfont_property_allow_system_fallback"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>allow_system_fallback</strong> = <literal>true</literal> <reference internal="True" refid="class-resourceimporterdynamicfont-property-allow-system-fallback"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>为 <literal>true</literal> 时，如果在该动态字体中找不到字形，则自动使用系统字体作为后备。这使得支持 CJK 字符或表情符号更加简单，因为你不需要在项目中包含 CJK/表情符号字体。另请参阅 <reference internal="True" refid="class-resourceimporterdynamicfont-property-fallbacks"><inline classes="std std-ref">fallbacks</inline></reference>。</paragraph>
            <paragraph><strong>注意：</strong>系统字体的外观因平台而异。仅 Windows、macOS、Linux、Android 和 iOS 支持加载系统字体。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-resourceimporterdynamicfont-property-antialiasing"></target>
            <paragraph classes="classref-property" ids="class-resourceimporterdynamicfont-property-antialiasing" names="class_resourceimporterdynamicfont_property_antialiasing"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>antialiasing</strong> = <literal>1</literal> <reference internal="True" refid="class-resourceimporterdynamicfont-property-antialiasing"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>要使用的字体抗锯齿方法。</paragraph>
            <paragraph><strong>禁用：</strong>最适合像素艺术字体，如果字体文件创建良好并且字体以其预期大小的整数倍使用，则你不<emphasis>必</emphasis>更改默认的<strong>灰度</strong>抗锯齿。如果像素艺术字体在其预期大小下外观不佳，请尝试将 <reference internal="True" refid="class-resourceimporterdynamicfont-property-subpixel-positioning"><inline classes="std std-ref">subpixel_positioning</inline></reference> 设置为 <strong>Disabled</strong>。</paragraph>
            <paragraph><strong>灰度：</strong>使用灰度抗锯齿。这是 macOS、Android 和 iOS 上的操作系统使用的方法。</paragraph>
            <paragraph><strong>LCD 子像素：</strong>使用子像素模式的抗锯齿，使 LCD 显示器上的字体更加清晰。这是 Windows 和大多数 Linux 发行版上的操作系统使用的方法。缺点是这可能会在边缘产生“边缘”，尤其是在不使用标准 RGB 子像素的显示技术上（例如 OLED 显示器）。LCD 子像素布局由 <reference internal="True" refuri="class_projectsettings#class-projectsettings-property-gui-theme-lcd-subpixel-layout"><inline classes="std std-ref">ProjectSettings.gui/theme/lcd_subpixel_layout</inline></reference> 全局控制，这也允许回退到灰度抗锯齿。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-resourceimporterdynamicfont-property-compress"></target>
            <paragraph classes="classref-property" ids="class-resourceimporterdynamicfont-property-compress" names="class_resourceimporterdynamicfont_property_compress"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>compress</strong> = <literal>true</literal> <reference internal="True" refid="class-resourceimporterdynamicfont-property-compress"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果为 <literal>true</literal>，则会对得到的字体使用无损压缩。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-resourceimporterdynamicfont-property-disable-embedded-bitmaps"></target>
            <paragraph classes="classref-property" ids="class-resourceimporterdynamicfont-property-disable-embedded-bitmaps" names="class_resourceimporterdynamicfont_property_disable_embedded_bitmaps"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>disable_embedded_bitmaps</strong> = <literal>true</literal> <reference internal="True" refid="class-resourceimporterdynamicfont-property-disable-embedded-bitmaps"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果为 <literal>true</literal>，则会禁用内嵌字体位图的加载（仅包含位图的字体以及彩色字体会禁用该属性）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-resourceimporterdynamicfont-property-fallbacks"></target>
            <paragraph classes="classref-property" ids="class-resourceimporterdynamicfont-property-fallbacks" names="class_resourceimporterdynamicfont_property_fallbacks"><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference> <strong>fallbacks</strong> = <literal>[]</literal> <reference internal="True" refid="class-resourceimporterdynamicfont-property-fallbacks"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果在该动态字体中找不到字形，则要使用的字体后备列表。首先尝试位于数组开头的字体，最后尝试不支持字形语言和脚本的后备字体（请参阅 <reference internal="True" refid="class-resourceimporterdynamicfont-property-language-support"><inline classes="std std-ref">language_support</inline></reference> 和 <reference internal="True" refid="class-resourceimporterdynamicfont-property-script-support"><inline classes="std std-ref">script_support</inline></reference>）。另请参阅 <reference internal="True" refid="class-resourceimporterdynamicfont-property-allow-system-fallback"><inline classes="std std-ref">allow_system_fallback</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-resourceimporterdynamicfont-property-force-autohinter"></target>
            <paragraph classes="classref-property" ids="class-resourceimporterdynamicfont-property-force-autohinter" names="class_resourceimporterdynamicfont_property_force_autohinter"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>force_autohinter</strong> = <literal>false</literal> <reference internal="True" refid="class-resourceimporterdynamicfont-property-force-autohinter"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果为 <literal>true</literal>，则使用 <reference name="FreeType" refuri="https://freetype.org/">FreeType</reference> 的自动提示器强制生成字体的提示数据。这将使 <reference internal="True" refid="class-resourceimporterdynamicfont-property-hinting"><inline classes="std std-ref">hinting</inline></reference> 对不包含提示数据的字体有效。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-resourceimporterdynamicfont-property-generate-mipmaps"></target>
            <paragraph classes="classref-property" ids="class-resourceimporterdynamicfont-property-generate-mipmaps" names="class_resourceimporterdynamicfont_property_generate_mipmaps"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>generate_mipmaps</strong> = <literal>false</literal> <reference internal="True" refid="class-resourceimporterdynamicfont-property-generate-mipmaps"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果为 <literal>true</literal>，则该字体将生成 mipmap。这样可以防止文本在 <reference internal="True" refuri="class_control#class-control"><inline classes="std std-ref">Control</inline></reference> 被按比例缩小或从远距离查看 <reference internal="True" refuri="class_label3d#class-label3d"><inline classes="std std-ref">Label3D</inline></reference> 时看起来有颗粒感（如果 <reference internal="True" refuri="class_label3d#class-label3d-property-texture-filter"><inline classes="std std-ref">Label3D.texture_filter</inline></reference> 被设置为显示 mipmap 的模式）。</paragraph>
            <paragraph>启用 <reference internal="True" refid="class-resourceimporterdynamicfont-property-generate-mipmaps"><inline classes="std std-ref">generate_mipmaps</inline></reference> 会增加字体生成时间和内存使用量。请只在你确实需要时才启用此设置。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-resourceimporterdynamicfont-property-hinting"></target>
            <paragraph classes="classref-property" ids="class-resourceimporterdynamicfont-property-hinting" names="class_resourceimporterdynamicfont_property_hinting"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>hinting</strong> = <literal>1</literal> <reference internal="True" refid="class-resourceimporterdynamicfont-property-hinting"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>要使用的提示模式。这控制在光栅化字体时应如何积极地将字形边缘吸附到像素。根据个人喜好，你可能更喜欢使用一种提示模式而不是另一种。除 <strong>None</strong> 之外的提示模式仅在字体包含提示数据时才有效（请参阅 <reference internal="True" refid="class-resourceimporterdynamicfont-property-force-autohinter"><inline classes="std std-ref">force_autohinter</inline></reference>）。</paragraph>
            <paragraph><strong>None：</strong>最平滑的外观，这会使字体在小尺寸下看起来模糊。</paragraph>
            <paragraph><strong>Light：</strong>通过仅将字形边缘吸附到 Y 轴上的像素来获得清晰的结果。</paragraph>
            <paragraph><strong>Full：</strong>通过将字形边缘吸附到 X 轴和 Y 轴上的像素获得最清晰的结果。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-resourceimporterdynamicfont-property-language-support"></target>
            <paragraph classes="classref-property" ids="class-resourceimporterdynamicfont-property-language-support" names="class_resourceimporterdynamicfont_property_language_support"><reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference> <strong>language_support</strong> = <literal>{}</literal> <reference internal="True" refid="class-resourceimporterdynamicfont-property-language-support"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>覆盖该字体支持的语言列表。如果留空，则由字体元数据提供。通常无需更改该设置。另见 <reference internal="True" refid="class-resourceimporterdynamicfont-property-script-support"><inline classes="std std-ref">script_support</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-resourceimporterdynamicfont-property-msdf-pixel-range"></target>
            <paragraph classes="classref-property" ids="class-resourceimporterdynamicfont-property-msdf-pixel-range" names="class_resourceimporterdynamicfont_property_msdf_pixel_range"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>msdf_pixel_range</strong> = <literal>8</literal> <reference internal="True" refid="class-resourceimporterdynamicfont-property-msdf-pixel-range"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>最小和最大可表示的有符号距离之间的形状周围的范围宽度。如果使用字体轮廓，<reference internal="True" refid="class-resourceimporterdynamicfont-property-msdf-pixel-range"><inline classes="std std-ref">msdf_pixel_range</inline></reference> 必须至少设置为最大字体轮廓大小的<emphasis>两倍</emphasis>。<reference internal="True" refid="class-resourceimporterdynamicfont-property-msdf-pixel-range"><inline classes="std std-ref">msdf_pixel_range</inline></reference> 的默认值为 <literal>8</literal>，允许大小最大到 <literal>4</literal> 的轮廓看起来正确。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-resourceimporterdynamicfont-property-msdf-size"></target>
            <paragraph classes="classref-property" ids="class-resourceimporterdynamicfont-property-msdf-size" names="class_resourceimporterdynamicfont_property_msdf_size"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>msdf_size</strong> = <literal>48</literal> <reference internal="True" refid="class-resourceimporterdynamicfont-property-msdf-size"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>用于生成 MSDF 纹理的源字体大小。较高的值允许更高的精度，但渲染速度较慢并且需要更多内存。只有当注意到字形渲染中明显缺乏精度时，才增加该属性的值。仅在 <reference internal="True" refid="class-resourceimporterdynamicfont-property-multichannel-signed-distance-field"><inline classes="std std-ref">multichannel_signed_distance_field</inline></reference> 为 <literal>true</literal> 时有效。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-resourceimporterdynamicfont-property-multichannel-signed-distance-field"></target>
            <paragraph classes="classref-property" ids="class-resourceimporterdynamicfont-property-multichannel-signed-distance-field" names="class_resourceimporterdynamicfont_property_multichannel_signed_distance_field"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>multichannel_signed_distance_field</strong> = <literal>false</literal> <reference internal="True" refid="class-resourceimporterdynamicfont-property-multichannel-signed-distance-field"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果设置为 <literal>true</literal>，默认字体将使用多通道带符号距离场（MSDF），任何尺寸都能够进行清晰的渲染。由于这种方法不需要在每次字体大小更改时都对字体进行光栅化，因此可以实时调整字体大小，不会造成任何性能损失。对于按比例缩小的 <reference internal="True" refuri="class_control#class-control"><inline classes="std std-ref">Control</inline></reference>（或从远距离查看的 <reference internal="True" refuri="class_label3d#class-label3d"><inline classes="std std-ref">Label3D</inline></reference>），文本也不会看起来有颗粒感。</paragraph>
            <paragraph>MSDF 字体渲染可以与 <reference internal="True" refid="class-resourceimporterdynamicfont-property-generate-mipmaps"><inline classes="std std-ref">generate_mipmaps</inline></reference> 结合使用，从而进一步提高缩小时的字体渲染质量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-resourceimporterdynamicfont-property-opentype-features"></target>
            <paragraph classes="classref-property" ids="class-resourceimporterdynamicfont-property-opentype-features" names="class_resourceimporterdynamicfont_property_opentype_features"><reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference> <strong>opentype_features</strong> = <literal>{}</literal> <reference internal="True" refid="class-resourceimporterdynamicfont-property-opentype-features"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>要为这个字体启用、禁用或设值的 OpenType 特性。可以用来启用字体所提供的可选特性，例如合字和备选字形。不同字体所支持的 OpenType 特性列表各有不同。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-resourceimporterdynamicfont-property-oversampling"></target>
            <paragraph classes="classref-property" ids="class-resourceimporterdynamicfont-property-oversampling" names="class_resourceimporterdynamicfont_property_oversampling"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>oversampling</strong> = <literal>0.0</literal> <reference internal="True" refid="class-resourceimporterdynamicfont-property-oversampling"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果设为大于 <literal>0.0</literal> 的值，则会覆盖字体的过采样系数。可以用来在保持字体物理大小的前提下，使用比原计划更高或更低的分辨率渲染。大多数情况下应该保持为 <literal>0.0</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-resourceimporterdynamicfont-property-preload"></target>
            <paragraph classes="classref-property" ids="class-resourceimporterdynamicfont-property-preload" names="class_resourceimporterdynamicfont_property_preload"><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference> <strong>preload</strong> = <literal>[]</literal> <reference internal="True" refid="class-resourceimporterdynamicfont-property-preload"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>要预渲染的字形范围。这可以避免在游戏过程中需要渲染新角色时出现卡顿，特别是在启用 <reference internal="True" refid="class-resourceimporterdynamicfont-property-subpixel-positioning"><inline classes="std std-ref">subpixel_positioning</inline></reference> 的情况下。使用预加载的缺点是初始项目加载时间会增加，内存使用量也会增加。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-resourceimporterdynamicfont-property-script-support"></target>
            <paragraph classes="classref-property" ids="class-resourceimporterdynamicfont-property-script-support" names="class_resourceimporterdynamicfont_property_script_support"><reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference> <strong>script_support</strong> = <literal>{}</literal> <reference internal="True" refid="class-resourceimporterdynamicfont-property-script-support"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>覆盖该字体支持的语言脚本列表。如果留空，则由字体元数据提供。通常无需更改该设置。另见 <reference internal="True" refid="class-resourceimporterdynamicfont-property-language-support"><inline classes="std std-ref">language_support</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-resourceimporterdynamicfont-property-subpixel-positioning"></target>
            <paragraph classes="classref-property" ids="class-resourceimporterdynamicfont-property-subpixel-positioning" names="class_resourceimporterdynamicfont_property_subpixel_positioning"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>subpixel_positioning</strong> = <literal>1</literal> <reference internal="True" refid="class-resourceimporterdynamicfont-property-subpixel-positioning"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>子像素定位可改善字体渲染外观，尤其是在较小的字体大小下。缺点是初始渲染字体需要更多时间，这可能会导致游戏过程中出现卡顿，特别是在使用大字体时。对于具有像素艺术外观的字体，应将其设置为<strong>禁用</strong>。</paragraph>
            <paragraph><strong>禁用：</strong>无子像素定位。质量最低，渲染最快。</paragraph>
            <paragraph><strong>自动：</strong>在小字体大小下使用子像素定位（所选质量根据字体大小而变化）。大字体不会使用子像素定位。这是性能和质量之间的良好权衡。</paragraph>
            <paragraph><strong>半像素：</strong>无论字体大小如何，始终执行中间子像素定位。质量高，渲染速度慢。</paragraph>
            <paragraph><strong>四分之一像素：</strong>无论字体大小如何，始终执行精确的子像素定位。质量最高，渲染最慢。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效运算符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列位标志构成位掩码的整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

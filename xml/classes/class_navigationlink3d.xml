<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_navigationlink3d.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/NavigationLink3D.xml.</comment>
    <target refid="class-navigationlink3d"></target>
    <section ids="navigationlink3d class-navigationlink3d" names="navigationlink3d class_navigationlink3d">
        <title>NavigationLink3D</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_node3d#class-node3d"><inline classes="std std-ref">Node3D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>连接两个位于 <reference internal="True" refuri="class_navigationregion3d#class-navigationregion3d"><inline classes="std std-ref">NavigationRegion3D</inline></reference> 上的位置的链接，导航时能够让代理走这个链接。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>连接两个位于 <reference internal="True" refuri="class_navigationregion3d#class-navigationregion3d"><inline classes="std std-ref">NavigationRegion3D</inline></reference> 上的位置的链接，导航时能够让代理走这个链接。这两个位置可以在同一个 <reference internal="True" refuri="class_navigationregion3d#class-navigationregion3d"><inline classes="std std-ref">NavigationRegion3D</inline></reference> 上，也可以是在两个不同的区块上。链接可以用来表达沿着导航网格表面行进以外的导航方法，例如滑锁、传送、跳过沟壑等等。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference internal="True" refuri="../tutorials/navigation/navigation_using_navigationlinks"><inline classes="doc">使用 NavigationLink</inline></reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="31"></colspec>
                    <colspec colwidth="77"></colspec>
                    <colspec colwidth="22"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-navigationlink3d-property-bidirectional"><inline classes="std std-ref">bidirectional</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-navigationlink3d-property-enabled"><inline classes="std std-ref">enabled</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-navigationlink3d-property-end-position"><inline classes="std std-ref">end_position</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Vector3(0, 0, 0)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-navigationlink3d-property-enter-cost"><inline classes="std std-ref">enter_cost</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-navigationlink3d-property-navigation-layers"><inline classes="std std-ref">navigation_layers</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-navigationlink3d-property-start-position"><inline classes="std std-ref">start_position</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Vector3(0, 0, 0)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-navigationlink3d-property-travel-cost"><inline classes="std std-ref">travel_cost</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id4" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="31"></colspec>
                    <colspec colwidth="171"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-navigationlink3d-method-get-global-end-position"><inline classes="std std-ref">get_global_end_position</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-navigationlink3d-method-get-global-start-position"><inline classes="std std-ref">get_global_start_position</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-navigationlink3d-method-get-navigation-layer-value"><inline classes="std std-ref">get_navigation_layer_value</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> layer_number <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-navigationlink3d-method-get-rid"><inline classes="std std-ref">get_rid</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-navigationlink3d-method-set-global-end-position"><inline classes="std std-ref">set_global_end_position</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> position <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-navigationlink3d-method-set-global-start-position"><inline classes="std std-ref">set_global_start_position</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> position <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-navigationlink3d-method-set-navigation-layer-value"><inline classes="std std-ref">set_navigation_layer_value</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> layer_number, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> value <strong>)</strong></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="属性说明">
            <title>属性说明</title>
            <target refid="class-navigationlink3d-property-bidirectional"></target>
            <paragraph classes="classref-property" ids="class-navigationlink3d-property-bidirectional" names="class_navigationlink3d_property_bidirectional"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>bidirectional</strong> = <literal>true</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_bidirectional</strong> <strong>(</strong> <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_bidirectional</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>返回这个连接是可以双向通行，还是只能从 <reference internal="True" refid="class-navigationlink3d-property-start-position"><inline classes="std std-ref">start_position</inline></reference> 通向 <reference internal="True" refid="class-navigationlink3d-property-end-position"><inline classes="std std-ref">end_position</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-navigationlink3d-property-enabled"></target>
            <paragraph classes="classref-property" ids="class-navigationlink3d-property-enabled" names="class_navigationlink3d_property_enabled"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>enabled</strong> = <literal>true</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_enabled</strong> <strong>(</strong> <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_enabled</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>该链接当前是否处于活动状态。如果为 <literal>false</literal> ，则 <reference internal="True" refuri="class_navigationserver3d#class-navigationserver3d-method-map-get-path"><inline classes="std std-ref">NavigationServer3D.map_get_path</inline></reference> 会忽略这个链接。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-navigationlink3d-property-end-position"></target>
            <paragraph classes="classref-property" ids="class-navigationlink3d-property-end-position" names="class_navigationlink3d_property_end_position"><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> <strong>end_position</strong> = <literal>Vector3(0, 0, 0)</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_end_position</strong> <strong>(</strong> <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> <strong>get_end_position</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>链接的结束位置。</paragraph>
            <paragraph>链接会搜索导航网格中最接近这个位置的多边形，并将自身与该多边形相关联。</paragraph>
            <paragraph>链接搜索的距离由 <reference internal="True" refuri="class_navigationserver3d#class-navigationserver3d-method-map-set-link-connection-radius"><inline classes="std std-ref">NavigationServer3D.map_set_link_connection_radius</inline></reference> 控制。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-navigationlink3d-property-enter-cost"></target>
            <paragraph classes="classref-property" ids="class-navigationlink3d-property-enter-cost" names="class_navigationlink3d_property_enter_cost"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>enter_cost</strong> = <literal>0.0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_enter_cost</strong> <strong>(</strong> <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_enter_cost</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>当寻路从其他地区的导航网格进入该链接时，<reference internal="True" refid="class-navigationlink3d-property-enter-cost"><inline classes="std std-ref">enter_cost</inline></reference> 会加到路径距离中，用于确定最短路径。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-navigationlink3d-property-navigation-layers"></target>
            <paragraph classes="classref-property" ids="class-navigationlink3d-property-navigation-layers" names="class_navigationlink3d_property_navigation_layers"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>navigation_layers</strong> = <literal>1</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_navigation_layers</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_navigation_layers</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>决定链接所属导航层的位域。使用 <reference internal="True" refuri="class_navigationserver3d#class-navigationserver3d-method-map-get-path"><inline classes="std std-ref">NavigationServer3D.map_get_path</inline></reference> 请求路径时会检查这些导航层。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-navigationlink3d-property-start-position"></target>
            <paragraph classes="classref-property" ids="class-navigationlink3d-property-start-position" names="class_navigationlink3d_property_start_position"><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> <strong>start_position</strong> = <literal>Vector3(0, 0, 0)</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_start_position</strong> <strong>(</strong> <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> <strong>get_start_position</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>链接的起始位置。</paragraph>
            <paragraph>链接会搜索导航网格中最接近这个位置的多边形，并将自身与该多边形相关联。</paragraph>
            <paragraph>链接搜索的距离由 <reference internal="True" refuri="class_navigationserver3d#class-navigationserver3d-method-map-set-link-connection-radius"><inline classes="std std-ref">NavigationServer3D.map_set_link_connection_radius</inline></reference> 控制。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-navigationlink3d-property-travel-cost"></target>
            <paragraph classes="classref-property" ids="class-navigationlink3d-property-travel-cost" names="class_navigationlink3d_property_travel_cost"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>travel_cost</strong> = <literal>1.0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_travel_cost</strong> <strong>(</strong> <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_travel_cost</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>当寻路沿着该链接移动时，移动距离会和 <reference internal="True" refid="class-navigationlink3d-property-travel-cost"><inline classes="std std-ref">travel_cost</inline></reference> 相乘，用于确定最短路径。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="方法说明">
            <title>方法说明</title>
            <target refid="class-navigationlink3d-method-get-global-end-position"></target>
            <paragraph classes="classref-method" ids="class-navigationlink3d-method-get-global-end-position" names="class_navigationlink3d_method_get_global_end_position"><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> <strong>get_global_end_position</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回该链接的 <reference internal="True" refid="class-navigationlink3d-property-end-position"><inline classes="std std-ref">end_position</inline></reference> 的全局位置。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-navigationlink3d-method-get-global-start-position"></target>
            <paragraph classes="classref-method" ids="class-navigationlink3d-method-get-global-start-position" names="class_navigationlink3d_method_get_global_start_position"><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> <strong>get_global_start_position</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回该链接的 <reference internal="True" refid="class-navigationlink3d-property-start-position"><inline classes="std std-ref">start_position</inline></reference> 的全局位置。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-navigationlink3d-method-get-navigation-layer-value"></target>
            <paragraph classes="classref-method" ids="class-navigationlink3d-method-get-navigation-layer-value" names="class_navigationlink3d_method_get_navigation_layer_value"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_navigation_layer_value</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> layer_number <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回 <reference internal="True" refid="class-navigationlink3d-property-navigation-layers"><inline classes="std std-ref">navigation_layers</inline></reference> 位掩码中指定的层是否启用，给定的 <literal>layer_number</literal> 应在 1 和 32 之间。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-navigationlink3d-method-get-rid"></target>
            <paragraph classes="classref-method" ids="class-navigationlink3d-method-get-rid" names="class_navigationlink3d_method_get_rid"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>get_rid</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回 <reference internal="True" refuri="class_navigationserver3d#class-navigationserver3d"><inline classes="std std-ref">NavigationServer3D</inline></reference> 上该链接的 <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-navigationlink3d-method-set-global-end-position"></target>
            <paragraph classes="classref-method" ids="class-navigationlink3d-method-set-global-end-position" names="class_navigationlink3d_method_set_global_end_position">void <strong>set_global_end_position</strong> <strong>(</strong> <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> position <strong>)</strong></paragraph>
            <paragraph>设置该链接的 <reference internal="True" refid="class-navigationlink3d-property-end-position"><inline classes="std std-ref">end_position</inline></reference> 的全局位置。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-navigationlink3d-method-set-global-start-position"></target>
            <paragraph classes="classref-method" ids="class-navigationlink3d-method-set-global-start-position" names="class_navigationlink3d_method_set_global_start_position">void <strong>set_global_start_position</strong> <strong>(</strong> <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> position <strong>)</strong></paragraph>
            <paragraph>设置该链接的 <reference internal="True" refid="class-navigationlink3d-property-start-position"><inline classes="std std-ref">start_position</inline></reference> 的全局位置。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-navigationlink3d-method-set-navigation-layer-value"></target>
            <paragraph classes="classref-method" ids="class-navigationlink3d-method-set-navigation-layer-value" names="class_navigationlink3d_method_set_navigation_layer_value">void <strong>set_navigation_layer_value</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> layer_number, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> value <strong>)</strong></paragraph>
            <paragraph>根据 <literal>value</literal>，启用或禁用 <reference internal="True" refid="class-navigationlink3d-property-navigation-layers"><inline classes="std std-ref">navigation_layers</inline></reference> 位掩码中指定的层，给定的 <literal>layer_number</literal> 应在 1 和 32 之间。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，所以可以直接使用类名调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

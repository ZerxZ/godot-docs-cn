<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_rdsamplerstate.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/RDSamplerState.xml.</comment>
    <target refid="class-rdsamplerstate"></target>
    <section ids="rdsamplerstate class-rdsamplerstate" names="rdsamplerstate class_rdsamplerstate">
        <title>RDSamplerState</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>采样器状态（由 <reference internal="True" refuri="class_renderingdevice#class-renderingdevice"><inline classes="std std-ref">RenderingDevice</inline></reference> 使用）。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>这个对象由 <reference internal="True" refuri="class_renderingdevice#class-renderingdevice"><inline classes="std std-ref">RenderingDevice</inline></reference> 使用。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="68"></colspec>
                    <colspec colwidth="73"></colspec>
                    <colspec colwidth="11"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rdsamplerstate-property-anisotropy-max"><inline classes="std std-ref">anisotropy_max</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-samplerbordercolor"><inline classes="std std-ref">SamplerBorderColor</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rdsamplerstate-property-border-color"><inline classes="std std-ref">border_color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>2</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-compareoperator"><inline classes="std std-ref">CompareOperator</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rdsamplerstate-property-compare-op"><inline classes="std std-ref">compare_op</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>7</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rdsamplerstate-property-enable-compare"><inline classes="std std-ref">enable_compare</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rdsamplerstate-property-lod-bias"><inline classes="std std-ref">lod_bias</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-samplerfilter"><inline classes="std std-ref">SamplerFilter</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rdsamplerstate-property-mag-filter"><inline classes="std std-ref">mag_filter</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rdsamplerstate-property-max-lod"><inline classes="std std-ref">max_lod</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1e+20</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-samplerfilter"><inline classes="std std-ref">SamplerFilter</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rdsamplerstate-property-min-filter"><inline classes="std std-ref">min_filter</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rdsamplerstate-property-min-lod"><inline classes="std std-ref">min_lod</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-samplerfilter"><inline classes="std std-ref">SamplerFilter</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rdsamplerstate-property-mip-filter"><inline classes="std std-ref">mip_filter</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-samplerrepeatmode"><inline classes="std std-ref">SamplerRepeatMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rdsamplerstate-property-repeat-u"><inline classes="std std-ref">repeat_u</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>2</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-samplerrepeatmode"><inline classes="std std-ref">SamplerRepeatMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rdsamplerstate-property-repeat-v"><inline classes="std std-ref">repeat_v</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>2</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-samplerrepeatmode"><inline classes="std std-ref">SamplerRepeatMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rdsamplerstate-property-repeat-w"><inline classes="std std-ref">repeat_w</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>2</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rdsamplerstate-property-unnormalized-uvw"><inline classes="std std-ref">unnormalized_uvw</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rdsamplerstate-property-use-anisotropy"><inline classes="std std-ref">use_anisotropy</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="属性说明">
            <title>属性说明</title>
            <target refid="class-rdsamplerstate-property-anisotropy-max"></target>
            <paragraph classes="classref-property" ids="class-rdsamplerstate-property-anisotropy-max" names="class_rdsamplerstate_property_anisotropy_max"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>anisotropy_max</strong> = <literal>1.0</literal> <reference internal="True" refid="class-rdsamplerstate-property-anisotropy-max"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_anisotropy_max</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_anisotropy_max</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>采样时能够使用的最大各向异性。仅在 <reference internal="True" refid="class-rdsamplerstate-property-use-anisotropy"><inline classes="std std-ref">use_anisotropy</inline></reference> 为 <literal>true</literal> 时有效。值越高，倾斜角度下得到的采样越锐利，但性能开销也越大（由于显存带宽的原因）。这个值可能受到使用的图形硬件的限制。大多数图形硬件最多仅支持 <literal>16.0</literal>。</paragraph>
            <paragraph>如果 <reference internal="True" refid="class-rdsamplerstate-property-anisotropy-max"><inline classes="std std-ref">anisotropy_max</inline></reference> 为 <literal>1.0</literal>，则会强制禁用各向异性，即便 <reference internal="True" refid="class-rdsamplerstate-property-use-anisotropy"><inline classes="std std-ref">use_anisotropy</inline></reference> 为 <literal>true</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-rdsamplerstate-property-border-color"></target>
            <paragraph classes="classref-property" ids="class-rdsamplerstate-property-border-color" names="class_rdsamplerstate_property_border_color"><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-samplerbordercolor"><inline classes="std std-ref">SamplerBorderColor</inline></reference> <strong>border_color</strong> = <literal>2</literal> <reference internal="True" refid="class-rdsamplerstate-property-border-color"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_border_color</strong>(value: <reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-samplerbordercolor"><inline classes="std std-ref">SamplerBorderColor</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-samplerbordercolor"><inline classes="std std-ref">SamplerBorderColor</inline></reference> <strong>get_border_color</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>对采样器范围外进行采样，并且 <reference internal="True" refid="class-rdsamplerstate-property-repeat-u"><inline classes="std std-ref">repeat_u</inline></reference>、<reference internal="True" refid="class-rdsamplerstate-property-repeat-v"><inline classes="std std-ref">repeat_v</inline></reference> 或 <reference internal="True" refid="class-rdsamplerstate-property-repeat-w"><inline classes="std std-ref">repeat_w</inline></reference> 的模式禁用了重复时，返回的边框颜色。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-rdsamplerstate-property-compare-op"></target>
            <paragraph classes="classref-property" ids="class-rdsamplerstate-property-compare-op" names="class_rdsamplerstate_property_compare_op"><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-compareoperator"><inline classes="std std-ref">CompareOperator</inline></reference> <strong>compare_op</strong> = <literal>7</literal> <reference internal="True" refid="class-rdsamplerstate-property-compare-op"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_compare_op</strong>(value: <reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-compareoperator"><inline classes="std std-ref">CompareOperator</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-compareoperator"><inline classes="std std-ref">CompareOperator</inline></reference> <strong>get_compare_op</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>要使用的比较运算。仅在 <reference internal="True" refid="class-rdsamplerstate-property-enable-compare"><inline classes="std std-ref">enable_compare</inline></reference> 为 <literal>true</literal> 时有效。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-rdsamplerstate-property-enable-compare"></target>
            <paragraph classes="classref-property" ids="class-rdsamplerstate-property-enable-compare" names="class_rdsamplerstate_property_enable_compare"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>enable_compare</strong> = <literal>false</literal> <reference internal="True" refid="class-rdsamplerstate-property-enable-compare"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_enable_compare</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_enable_compare</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则返回值基于 <reference internal="True" refid="class-rdsamplerstate-property-compare-op"><inline classes="std std-ref">compare_op</inline></reference> 定义的比较运算。这种做法基于硬件，因此比手动在着色器中执行要快。例如，渲染阴影贴图时就会对阴影采样器的深度值进行比较运算。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-rdsamplerstate-property-lod-bias"></target>
            <paragraph classes="classref-property" ids="class-rdsamplerstate-property-lod-bias" names="class_rdsamplerstate_property_lod_bias"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>lod_bias</strong> = <literal>0.0</literal> <reference internal="True" refid="class-rdsamplerstate-property-lod-bias"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_lod_bias</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_lod_bias</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>要使用的 mipmap LOD 偏置。正值会让采样器在给定距离处更模糊，而负值会让采样器在给定距离处更锐利（有可能看上去会很颗粒化）。推荐值在 <literal>-0.5</literal> 到 <literal>0.0</literal> 之间。仅在采样器的 mipmap 可用时有效。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-rdsamplerstate-property-mag-filter"></target>
            <paragraph classes="classref-property" ids="class-rdsamplerstate-property-mag-filter" names="class_rdsamplerstate_property_mag_filter"><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-samplerfilter"><inline classes="std std-ref">SamplerFilter</inline></reference> <strong>mag_filter</strong> = <literal>0</literal> <reference internal="True" refid="class-rdsamplerstate-property-mag-filter"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_mag_filter</strong>(value: <reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-samplerfilter"><inline classes="std std-ref">SamplerFilter</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-samplerfilter"><inline classes="std std-ref">SamplerFilter</inline></reference> <strong>get_mag_filter</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>采样器的放大过滤器。如果采样的纹素比屏幕像素显示得大，就会使用这个过滤方法。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-rdsamplerstate-property-max-lod"></target>
            <paragraph classes="classref-property" ids="class-rdsamplerstate-property-max-lod" names="class_rdsamplerstate_property_max_lod"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>max_lod</strong> = <literal>1e+20</literal> <reference internal="True" refid="class-rdsamplerstate-property-max-lod"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_max_lod</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_max_lod</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>用于显示的最大 mipmap LOD 偏置（最低分辨率）。仅在采样器有 mipmap 可用时有效。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-rdsamplerstate-property-min-filter"></target>
            <paragraph classes="classref-property" ids="class-rdsamplerstate-property-min-filter" names="class_rdsamplerstate_property_min_filter"><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-samplerfilter"><inline classes="std std-ref">SamplerFilter</inline></reference> <strong>min_filter</strong> = <literal>0</literal> <reference internal="True" refid="class-rdsamplerstate-property-min-filter"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_min_filter</strong>(value: <reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-samplerfilter"><inline classes="std std-ref">SamplerFilter</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-samplerfilter"><inline classes="std std-ref">SamplerFilter</inline></reference> <strong>get_min_filter</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>采样器的缩小过滤器。如果采样的纹素比屏幕像素显示得小，就会使用这个过滤方法。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-rdsamplerstate-property-min-lod"></target>
            <paragraph classes="classref-property" ids="class-rdsamplerstate-property-min-lod" names="class_rdsamplerstate_property_min_lod"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>min_lod</strong> = <literal>0.0</literal> <reference internal="True" refid="class-rdsamplerstate-property-min-lod"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_min_lod</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_min_lod</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>用于显示的最小 mipmap LOD 偏置（最高分辨率）。仅在采样器有 mipmap 可用时有效。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-rdsamplerstate-property-mip-filter"></target>
            <paragraph classes="classref-property" ids="class-rdsamplerstate-property-mip-filter" names="class_rdsamplerstate_property_mip_filter"><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-samplerfilter"><inline classes="std std-ref">SamplerFilter</inline></reference> <strong>mip_filter</strong> = <literal>0</literal> <reference internal="True" refid="class-rdsamplerstate-property-mip-filter"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_mip_filter</strong>(value: <reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-samplerfilter"><inline classes="std std-ref">SamplerFilter</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-samplerfilter"><inline classes="std std-ref">SamplerFilter</inline></reference> <strong>get_mip_filter</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>Mipmap 使用的过滤方法。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-rdsamplerstate-property-repeat-u"></target>
            <paragraph classes="classref-property" ids="class-rdsamplerstate-property-repeat-u" names="class_rdsamplerstate_property_repeat_u"><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-samplerrepeatmode"><inline classes="std std-ref">SamplerRepeatMode</inline></reference> <strong>repeat_u</strong> = <literal>2</literal> <reference internal="True" refid="class-rdsamplerstate-property-repeat-u"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_repeat_u</strong>(value: <reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-samplerrepeatmode"><inline classes="std std-ref">SamplerRepeatMode</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-samplerrepeatmode"><inline classes="std std-ref">SamplerRepeatMode</inline></reference> <strong>get_repeat_u</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>沿着 UV 坐标 U 轴的重复模式。影响采样超出 UV 边界时的返回值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-rdsamplerstate-property-repeat-v"></target>
            <paragraph classes="classref-property" ids="class-rdsamplerstate-property-repeat-v" names="class_rdsamplerstate_property_repeat_v"><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-samplerrepeatmode"><inline classes="std std-ref">SamplerRepeatMode</inline></reference> <strong>repeat_v</strong> = <literal>2</literal> <reference internal="True" refid="class-rdsamplerstate-property-repeat-v"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_repeat_v</strong>(value: <reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-samplerrepeatmode"><inline classes="std std-ref">SamplerRepeatMode</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-samplerrepeatmode"><inline classes="std std-ref">SamplerRepeatMode</inline></reference> <strong>get_repeat_v</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>沿着 UV 坐标 V 轴的重复模式。影响采样超出 UV 边界时的返回值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-rdsamplerstate-property-repeat-w"></target>
            <paragraph classes="classref-property" ids="class-rdsamplerstate-property-repeat-w" names="class_rdsamplerstate_property_repeat_w"><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-samplerrepeatmode"><inline classes="std std-ref">SamplerRepeatMode</inline></reference> <strong>repeat_w</strong> = <literal>2</literal> <reference internal="True" refid="class-rdsamplerstate-property-repeat-w"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_repeat_w</strong>(value: <reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-samplerrepeatmode"><inline classes="std std-ref">SamplerRepeatMode</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-samplerrepeatmode"><inline classes="std std-ref">SamplerRepeatMode</inline></reference> <strong>get_repeat_w</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>沿着 UV 坐标 W 轴的重复模式。影响采样超出 UV 边界时的返回值。仅对 3D 采样器有效。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-rdsamplerstate-property-unnormalized-uvw"></target>
            <paragraph classes="classref-property" ids="class-rdsamplerstate-property-unnormalized-uvw" names="class_rdsamplerstate_property_unnormalized_uvw"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>unnormalized_uvw</strong> = <literal>false</literal> <reference internal="True" refid="class-rdsamplerstate-property-unnormalized-uvw"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_unnormalized_uvw</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_unnormalized_uvw</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则纹理将使用范围从 0 到纹理分辨率的坐标进行采样。否则，坐标将被归一化，范围从 0 到 1。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-rdsamplerstate-property-use-anisotropy"></target>
            <paragraph classes="classref-property" ids="class-rdsamplerstate-property-use-anisotropy" names="class_rdsamplerstate_property_use_anisotropy"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>use_anisotropy</strong> = <literal>false</literal> <reference internal="True" refid="class-rdsamplerstate-property-use-anisotropy"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_use_anisotropy</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_use_anisotropy</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则执行各向异性采样。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效运算符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列位标志构成位掩码的整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

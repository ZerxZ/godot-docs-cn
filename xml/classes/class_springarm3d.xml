<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_springarm3d.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/SpringArm3D.xml.</comment>
    <target refid="class-springarm3d"></target>
    <section ids="springarm3d class-springarm3d" names="springarm3d class_springarm3d">
        <title>SpringArm3D</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_node3d#class-node3d"><inline classes="std std-ref">Node3D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>能够动态地将子节点朝碰撞点移动的 3D 射线投射。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph><strong>SpringArm3D</strong> 会朝它的 Z 轴投射射线或形状，并将所有直接子节点朝碰撞点移动，可以保留一定的边距。可用于第三人称相机，让其在狭窄空间中朝玩家移动（你可能需要在 <strong>SpringArm3D</strong> 的碰撞检查中排除玩家的碰撞体）。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="31"></colspec>
                    <colspec colwidth="66"></colspec>
                    <colspec colwidth="10"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-springarm3d-property-collision-mask"><inline classes="std std-ref">collision_mask</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-springarm3d-property-margin"><inline classes="std std-ref">margin</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.01</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_shape3d#class-shape3d"><inline classes="std std-ref">Shape3D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-springarm3d-property-shape"><inline classes="std std-ref">shape</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-springarm3d-property-spring-length"><inline classes="std std-ref">spring_length</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="27"></colspec>
                    <colspec colwidth="115"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-springarm3d-method-add-excluded-object"><inline classes="std std-ref">add_excluded_object</inline></reference>(RID: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-springarm3d-method-clear-excluded-objects"><inline classes="std std-ref">clear_excluded_objects</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-springarm3d-method-get-hit-length"><inline classes="std std-ref">get_hit_length</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-springarm3d-method-remove-excluded-object"><inline classes="std std-ref">remove_excluded_object</inline></reference>(RID: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>)</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="属性说明">
            <title>属性说明</title>
            <target refid="class-springarm3d-property-collision-mask"></target>
            <paragraph classes="classref-property" ids="class-springarm3d-property-collision-mask" names="class_springarm3d_property_collision_mask"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>collision_mask</strong> = <literal>1</literal> <reference internal="True" refid="class-springarm3d-property-collision-mask"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_collision_mask</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_collision_mask</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>碰撞检测的目标层。更多信息请参阅文档中的<reference name="《碰撞层与遮罩》" refuri="../tutorials/physics/physics_introduction.html#collision-layers-and-masks">《碰撞层与遮罩》</reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-springarm3d-property-margin"></target>
            <paragraph classes="classref-property" ids="class-springarm3d-property-margin" names="class_springarm3d_property_margin"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>margin</strong> = <literal>0.01</literal> <reference internal="True" refid="class-springarm3d-property-margin"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_margin</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_margin</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>进行碰撞检测时，会给出 SpringArm3D 的一个候选长度。</paragraph>
            <paragraph>然后将边距减去该长度，并将该平移应用于该 SpringArm3D 的子对象。</paragraph>
            <paragraph>当 SpringArm3D 有一个 <reference internal="True" refuri="class_camera3d#class-camera3d"><inline classes="std std-ref">Camera3D</inline></reference> 作为子节点时，该边距很有用：如果没有边距，该 <reference internal="True" refuri="class_camera3d#class-camera3d"><inline classes="std std-ref">Camera3D</inline></reference> 将被放置在准确的碰撞点上；而有边距时，该 <reference internal="True" refuri="class_camera3d#class-camera3d"><inline classes="std std-ref">Camera3D</inline></reference> 将被放置在靠近碰撞点的地方。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-springarm3d-property-shape"></target>
            <paragraph classes="classref-property" ids="class-springarm3d-property-shape" names="class_springarm3d_property_shape"><reference internal="True" refuri="class_shape3d#class-shape3d"><inline classes="std std-ref">Shape3D</inline></reference> <strong>shape</strong> <reference internal="True" refid="class-springarm3d-property-shape"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_shape</strong>(value: <reference internal="True" refuri="class_shape3d#class-shape3d"><inline classes="std std-ref">Shape3D</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_shape3d#class-shape3d"><inline classes="std std-ref">Shape3D</inline></reference> <strong>get_shape</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>用于该 SpringArm3D 的 <reference internal="True" refuri="class_shape3d#class-shape3d"><inline classes="std std-ref">Shape3D</inline></reference>。</paragraph>
            <paragraph>当该形状被设置后，SpringArm3D 将在其 z 轴上投射该 <reference internal="True" refuri="class_shape3d#class-shape3d"><inline classes="std std-ref">Shape3D</inline></reference>，而不是执行一个射线投射。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-springarm3d-property-spring-length"></target>
            <paragraph classes="classref-property" ids="class-springarm3d-property-spring-length" names="class_springarm3d_property_spring_length"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>spring_length</strong> = <literal>1.0</literal> <reference internal="True" refid="class-springarm3d-property-spring-length"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_length</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_length</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>SpringArm3D 的最大范围。这用作内部使用的射线和形状投射的长度，以计算 SpringArm3D 子节点的所需位置。</paragraph>
            <paragraph>要了解有关如何执行形状投射或射线投射的更多信息，请参阅 <reference internal="True" refuri="class_physicsdirectspacestate3d#class-physicsdirectspacestate3d"><inline classes="std std-ref">PhysicsDirectSpaceState3D</inline></reference> 文档。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="方法说明">
            <title>方法说明</title>
            <target refid="class-springarm3d-method-add-excluded-object"></target>
            <paragraph classes="classref-method" ids="class-springarm3d-method-add-excluded-object" names="class_springarm3d_method_add_excluded_object"><abbreviation explanation="无返回值。">void</abbreviation> <strong>add_excluded_object</strong>(RID: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <reference internal="True" refid="class-springarm3d-method-add-excluded-object"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将具有给定 <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> 的 <reference internal="True" refuri="class_physicsbody3d#class-physicsbody3d"><inline classes="std std-ref">PhysicsBody3D</inline></reference> 对象，添加到从碰撞检查中排除的 <reference internal="True" refuri="class_physicsbody3d#class-physicsbody3d"><inline classes="std std-ref">PhysicsBody3D</inline></reference> 对象列表中。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-springarm3d-method-clear-excluded-objects"></target>
            <paragraph classes="classref-method" ids="class-springarm3d-method-clear-excluded-objects" names="class_springarm3d_method_clear_excluded_objects"><abbreviation explanation="无返回值。">void</abbreviation> <strong>clear_excluded_objects</strong>() <reference internal="True" refid="class-springarm3d-method-clear-excluded-objects"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>清空碰撞检测排除 <reference internal="True" refuri="class_physicsbody3d#class-physicsbody3d"><inline classes="std std-ref">PhysicsBody3D</inline></reference> 对象的列表。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-springarm3d-method-get-hit-length"></target>
            <paragraph classes="classref-method" ids="class-springarm3d-method-get-hit-length" names="class_springarm3d_method_get_hit_length"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_hit_length</strong>() <reference internal="True" refid="class-springarm3d-method-get-hit-length"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回弹簧臂的当前长度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-springarm3d-method-remove-excluded-object"></target>
            <paragraph classes="classref-method" ids="class-springarm3d-method-remove-excluded-object" names="class_springarm3d_method_remove_excluded_object"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>remove_excluded_object</strong>(RID: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <reference internal="True" refid="class-springarm3d-method-remove-excluded-object"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>从碰撞检测排除 <reference internal="True" refuri="class_physicsbody3d#class-physicsbody3d"><inline classes="std std-ref">PhysicsBody3D</inline></reference> 对象的列表中移除给定的 <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效运算符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列位标志构成位掩码的整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_audiolistener3d.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <meta content="sound" name="keywords">
    </meta>
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/AudioListener3D.xml.</comment>
    <target refid="class-audiolistener3d"></target>
    <section ids="audiolistener3d class-audiolistener3d" names="audiolistener3d class_audiolistener3d">
        <title>AudioListener3D</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_node3d#class-node3d"><inline classes="std std-ref">Node3D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>覆盖听到声音的位置。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>一旦添加到场景树并使用 <reference internal="True" refid="class-audiolistener3d-method-make-current"><inline classes="std std-ref">make_current</inline></reference> 启用，该节点将覆盖听到声音的位置。这可用于从与 <reference internal="True" refuri="class_camera3d#class-camera3d"><inline classes="std std-ref">Camera3D</inline></reference> 不同的位置聆听。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="39"></colspec>
                    <colspec colwidth="98"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiolistener3d-method-clear-current"><inline classes="std std-ref">clear_current</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiolistener3d-method-get-listener-transform"><inline classes="std std-ref">get_listener_transform</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiolistener3d-method-is-current"><inline classes="std std-ref">is_current</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiolistener3d-method-make-current"><inline classes="std std-ref">make_current</inline></reference>()</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="方法说明">
            <title>方法说明</title>
            <target refid="class-audiolistener3d-method-clear-current"></target>
            <paragraph classes="classref-method" ids="class-audiolistener3d-method-clear-current" names="class_audiolistener3d_method_clear_current"><abbreviation explanation="无返回值。">void</abbreviation> <strong>clear_current</strong>() <reference internal="True" refid="class-audiolistener3d-method-clear-current"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>禁用该监听器，用当前相机的监听器代替。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiolistener3d-method-get-listener-transform"></target>
            <paragraph classes="classref-method" ids="class-audiolistener3d-method-get-listener-transform" names="class_audiolistener3d_method_get_listener_transform"><reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference> <strong>get_listener_transform</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-audiolistener3d-method-get-listener-transform"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回该监听器的全局正交归一化 <reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiolistener3d-method-is-current"></target>
            <paragraph classes="classref-method" ids="class-audiolistener3d-method-is-current" names="class_audiolistener3d_method_is_current"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_current</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-audiolistener3d-method-is-current"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果使用 <reference internal="True" refid="class-audiolistener3d-method-make-current"><inline classes="std std-ref">make_current</inline></reference> 将监听器设为当前，则返回 <literal>true</literal>，否则返回 <literal>false</literal>。</paragraph>
            <paragraph><strong>注意：</strong>场景树中标记为“当前”的 AudioListener3D 可能不止一个，但只会使用最后被设置为当前的那个。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiolistener3d-method-make-current"></target>
            <paragraph classes="classref-method" ids="class-audiolistener3d-method-make-current" names="class_audiolistener3d_method_make_current"><abbreviation explanation="无返回值。">void</abbreviation> <strong>make_current</strong>() <reference internal="True" refid="class-audiolistener3d-method-make-current"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>启用该监听器。将覆盖当前相机的监听器。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

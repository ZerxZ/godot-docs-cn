<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_audiostreamrandomizer.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/AudioStreamRandomizer.xml.</comment>
    <target refid="class-audiostreamrandomizer"></target>
    <section ids="audiostreamrandomizer class-audiostreamrandomizer" names="audiostreamrandomizer class_audiostreamrandomizer">
        <title>AudioStreamRandomizer</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_audiostream#class-audiostream"><inline classes="std std-ref">AudioStream</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>用音高和音量偏移，包装一个音频流池。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>根据播放模式，从池中随机选择一个 AudioStream，并在播放期间应用随机音高偏移和音量偏移。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="62"></colspec>
                    <colspec colwidth="94"></colspec>
                    <colspec colwidth="9"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-audiostreamrandomizer-playbackmode"><inline classes="std std-ref">PlaybackMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamrandomizer-property-playback-mode"><inline classes="std std-ref">playback_mode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamrandomizer-property-random-pitch"><inline classes="std std-ref">random_pitch</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamrandomizer-property-random-volume-offset-db"><inline classes="std std-ref">random_volume_offset_db</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamrandomizer-property-streams-count"><inline classes="std std-ref">streams_count</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="39"></colspec>
                    <colspec colwidth="193"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamrandomizer-method-add-stream"><inline classes="std std-ref">add_stream</inline></reference>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, stream: <reference internal="True" refuri="class_audiostream#class-audiostream"><inline classes="std std-ref">AudioStream</inline></reference>, weight: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> = 1.0)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_audiostream#class-audiostream"><inline classes="std std-ref">AudioStream</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamrandomizer-method-get-stream"><inline classes="std std-ref">get_stream</inline></reference>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamrandomizer-method-get-stream-probability-weight"><inline classes="std std-ref">get_stream_probability_weight</inline></reference>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamrandomizer-method-move-stream"><inline classes="std std-ref">move_stream</inline></reference>(index_from: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, index_to: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamrandomizer-method-remove-stream"><inline classes="std std-ref">remove_stream</inline></reference>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamrandomizer-method-set-stream"><inline classes="std std-ref">set_stream</inline></reference>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, stream: <reference internal="True" refuri="class_audiostream#class-audiostream"><inline classes="std std-ref">AudioStream</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamrandomizer-method-set-stream-probability-weight"><inline classes="std std-ref">set_stream_probability_weight</inline></reference>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, weight: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="枚举">
            <title>枚举</title>
            <target refid="enum-audiostreamrandomizer-playbackmode"></target>
            <paragraph classes="classref-enumeration" ids="enum-audiostreamrandomizer-playbackmode" names="enum_audiostreamrandomizer_playbackmode">enum <strong>PlaybackMode</strong>: <reference internal="True" refid="enum-audiostreamrandomizer-playbackmode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-audiostreamrandomizer-constant-playback-random-no-repeats"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-audiostreamrandomizer-constant-playback-random-no-repeats" names="class_audiostreamrandomizer_constant_playback_random_no_repeats"><reference internal="True" refid="enum-audiostreamrandomizer-playbackmode"><inline classes="std std-ref">PlaybackMode</inline></reference> <strong>PLAYBACK_RANDOM_NO_REPEATS</strong> = <literal>0</literal></paragraph>
            <paragraph>根据为每个流选择的概率权重随机挑选一个流，但尽可能避免连续两次播放同一个流。如果池中只有 1 个声音，则将始终播放同一个声音，从而有效地允许重复发生。</paragraph>
            <target refid="class-audiostreamrandomizer-constant-playback-random"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-audiostreamrandomizer-constant-playback-random" names="class_audiostreamrandomizer_constant_playback_random"><reference internal="True" refid="enum-audiostreamrandomizer-playbackmode"><inline classes="std std-ref">PlaybackMode</inline></reference> <strong>PLAYBACK_RANDOM</strong> = <literal>1</literal></paragraph>
            <paragraph>根据为每个流选择的概率权重随机挑选一个流。如果池中只有 1 个声音，则将始终播放同一个声音。</paragraph>
            <target refid="class-audiostreamrandomizer-constant-playback-sequential"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-audiostreamrandomizer-constant-playback-sequential" names="class_audiostreamrandomizer_constant_playback_sequential"><reference internal="True" refid="enum-audiostreamrandomizer-playbackmode"><inline classes="std std-ref">PlaybackMode</inline></reference> <strong>PLAYBACK_SEQUENTIAL</strong> = <literal>2</literal></paragraph>
            <paragraph>按照流池中出现的顺序播放流。如果池中只有 1 个声音，则将始终播放同一个声音。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="属性说明">
            <title>属性说明</title>
            <target refid="class-audiostreamrandomizer-property-playback-mode"></target>
            <paragraph classes="classref-property" ids="class-audiostreamrandomizer-property-playback-mode" names="class_audiostreamrandomizer_property_playback_mode"><reference internal="True" refid="enum-audiostreamrandomizer-playbackmode"><inline classes="std std-ref">PlaybackMode</inline></reference> <strong>playback_mode</strong> = <literal>0</literal> <reference internal="True" refid="class-audiostreamrandomizer-property-playback-mode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_playback_mode</strong>(value: <reference internal="True" refid="enum-audiostreamrandomizer-playbackmode"><inline classes="std std-ref">PlaybackMode</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-audiostreamrandomizer-playbackmode"><inline classes="std std-ref">PlaybackMode</inline></reference> <strong>get_playback_mode</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>控制该 AudioStreamRandomizer 如何选择下一个要播放的 AudioStream。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamrandomizer-property-random-pitch"></target>
            <paragraph classes="classref-property" ids="class-audiostreamrandomizer-property-random-pitch" names="class_audiostreamrandomizer_property_random_pitch"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>random_pitch</strong> = <literal>1.0</literal> <reference internal="True" refid="class-audiostreamrandomizer-property-random-pitch"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_random_pitch</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_random_pitch</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>随机音高变化的强度。值为 1 表示没有变化。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamrandomizer-property-random-volume-offset-db"></target>
            <paragraph classes="classref-property" ids="class-audiostreamrandomizer-property-random-volume-offset-db" names="class_audiostreamrandomizer_property_random_volume_offset_db"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>random_volume_offset_db</strong> = <literal>0.0</literal> <reference internal="True" refid="class-audiostreamrandomizer-property-random-volume-offset-db"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_random_volume_offset_db</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_random_volume_offset_db</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>随机音量变化的强度。值为 0 表示没有变化。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamrandomizer-property-streams-count"></target>
            <paragraph classes="classref-property" ids="class-audiostreamrandomizer-property-streams-count" names="class_audiostreamrandomizer_property_streams_count"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>streams_count</strong> = <literal>0</literal> <reference internal="True" refid="class-audiostreamrandomizer-property-streams-count"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_streams_count</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_streams_count</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>流池中流的数量。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="方法说明">
            <title>方法说明</title>
            <target refid="class-audiostreamrandomizer-method-add-stream"></target>
            <paragraph classes="classref-method" ids="class-audiostreamrandomizer-method-add-stream" names="class_audiostreamrandomizer_method_add_stream"><abbreviation explanation="无返回值。">void</abbreviation> <strong>add_stream</strong>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, stream: <reference internal="True" refuri="class_audiostream#class-audiostream"><inline classes="std std-ref">AudioStream</inline></reference>, weight: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> = 1.0) <reference internal="True" refid="class-audiostreamrandomizer-method-add-stream"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>在指定索引处插入一个流。如果索引小于零，则插入发生在底层池的末尾。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamrandomizer-method-get-stream"></target>
            <paragraph classes="classref-method" ids="class-audiostreamrandomizer-method-get-stream" names="class_audiostreamrandomizer_method_get_stream"><reference internal="True" refuri="class_audiostream#class-audiostream"><inline classes="std std-ref">AudioStream</inline></reference> <strong>get_stream</strong>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-audiostreamrandomizer-method-get-stream"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回指定索引处的流。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamrandomizer-method-get-stream-probability-weight"></target>
            <paragraph classes="classref-method" ids="class-audiostreamrandomizer-method-get-stream-probability-weight" names="class_audiostreamrandomizer_method_get_stream_probability_weight"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_stream_probability_weight</strong>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-audiostreamrandomizer-method-get-stream-probability-weight"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回与给定索引处的流关联的概率权重。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamrandomizer-method-move-stream"></target>
            <paragraph classes="classref-method" ids="class-audiostreamrandomizer-method-move-stream" names="class_audiostreamrandomizer_method_move_stream"><abbreviation explanation="无返回值。">void</abbreviation> <strong>move_stream</strong>(index_from: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, index_to: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-audiostreamrandomizer-method-move-stream"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将流从一个索引移动到另一个索引。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamrandomizer-method-remove-stream"></target>
            <paragraph classes="classref-method" ids="class-audiostreamrandomizer-method-remove-stream" names="class_audiostreamrandomizer_method_remove_stream"><abbreviation explanation="无返回值。">void</abbreviation> <strong>remove_stream</strong>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-audiostreamrandomizer-method-remove-stream"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>移除指定索引处的流。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamrandomizer-method-set-stream"></target>
            <paragraph classes="classref-method" ids="class-audiostreamrandomizer-method-set-stream" names="class_audiostreamrandomizer_method_set_stream"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_stream</strong>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, stream: <reference internal="True" refuri="class_audiostream#class-audiostream"><inline classes="std std-ref">AudioStream</inline></reference>) <reference internal="True" refid="class-audiostreamrandomizer-method-set-stream"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置指定索引处的 AudioStream。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamrandomizer-method-set-stream-probability-weight"></target>
            <paragraph classes="classref-method" ids="class-audiostreamrandomizer-method-set-stream-probability-weight" names="class_audiostreamrandomizer_method_set_stream_probability_weight"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_stream_probability_weight</strong>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, weight: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <reference internal="True" refid="class-audiostreamrandomizer-method-set-stream-probability-weight"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置流在指定索引处的概率权重。该值越高，随机化器在随机播放模式下选择该流的可能性就越大。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

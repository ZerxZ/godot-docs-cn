<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_audioeffectfilter.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/AudioEffectFilter.xml.</comment>
    <target refid="class-audioeffectfilter"></target>
    <section ids="audioeffectfilter class-audioeffectfilter" names="audioeffectfilter class_audioeffectfilter">
        <title>AudioEffectFilter</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_audioeffect#class-audioeffect"><inline classes="std std-ref">AudioEffect</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph><strong>派生：</strong> <reference internal="True" refuri="class_audioeffectbandlimitfilter#class-audioeffectbandlimitfilter"><inline classes="std std-ref">AudioEffectBandLimitFilter</inline></reference>, <reference internal="True" refuri="class_audioeffectbandpassfilter#class-audioeffectbandpassfilter"><inline classes="std std-ref">AudioEffectBandPassFilter</inline></reference>, <reference internal="True" refuri="class_audioeffecthighpassfilter#class-audioeffecthighpassfilter"><inline classes="std std-ref">AudioEffectHighPassFilter</inline></reference>, <reference internal="True" refuri="class_audioeffecthighshelffilter#class-audioeffecthighshelffilter"><inline classes="std std-ref">AudioEffectHighShelfFilter</inline></reference>, <reference internal="True" refuri="class_audioeffectlowpassfilter#class-audioeffectlowpassfilter"><inline classes="std std-ref">AudioEffectLowPassFilter</inline></reference>, <reference internal="True" refuri="class_audioeffectlowshelffilter#class-audioeffectlowshelffilter"><inline classes="std std-ref">AudioEffectLowShelfFilter</inline></reference>, <reference internal="True" refuri="class_audioeffectnotchfilter#class-audioeffectnotchfilter"><inline classes="std std-ref">AudioEffectNotchFilter</inline></reference></paragraph>
        <paragraph>为音频总线添加一个滤波器。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>允许通过 <reference internal="True" refid="class-audioeffectfilter-property-cutoff-hz"><inline classes="std std-ref">cutoff_hz</inline></reference> 以外的频率。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference internal="True" refuri="../tutorials/audio/audio_buses"><inline classes="doc">音频总线</inline></reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="50"></colspec>
                    <colspec colwidth="62"></colspec>
                    <colspec colwidth="12"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audioeffectfilter-property-cutoff-hz"><inline classes="std std-ref">cutoff_hz</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>2000.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-audioeffectfilter-filterdb"><inline classes="std std-ref">FilterDB</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audioeffectfilter-property-db"><inline classes="std std-ref">db</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audioeffectfilter-property-gain"><inline classes="std std-ref">gain</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audioeffectfilter-property-resonance"><inline classes="std std-ref">resonance</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.5</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="枚举">
            <title>枚举</title>
            <target refid="enum-audioeffectfilter-filterdb"></target>
            <paragraph classes="classref-enumeration" ids="enum-audioeffectfilter-filterdb" names="enum_audioeffectfilter_filterdb">enum <strong>FilterDB</strong>: <reference internal="True" refid="enum-audioeffectfilter-filterdb"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-audioeffectfilter-constant-filter-6db"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-audioeffectfilter-constant-filter-6db" names="class_audioeffectfilter_constant_filter_6db"><reference internal="True" refid="enum-audioeffectfilter-filterdb"><inline classes="std std-ref">FilterDB</inline></reference> <strong>FILTER_6DB</strong> = <literal>0</literal></paragraph>
            <container classes="contribute">
                <paragraph>该枚举目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
            <target refid="class-audioeffectfilter-constant-filter-12db"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-audioeffectfilter-constant-filter-12db" names="class_audioeffectfilter_constant_filter_12db"><reference internal="True" refid="enum-audioeffectfilter-filterdb"><inline classes="std std-ref">FilterDB</inline></reference> <strong>FILTER_12DB</strong> = <literal>1</literal></paragraph>
            <container classes="contribute">
                <paragraph>该枚举目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
            <target refid="class-audioeffectfilter-constant-filter-18db"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-audioeffectfilter-constant-filter-18db" names="class_audioeffectfilter_constant_filter_18db"><reference internal="True" refid="enum-audioeffectfilter-filterdb"><inline classes="std std-ref">FilterDB</inline></reference> <strong>FILTER_18DB</strong> = <literal>2</literal></paragraph>
            <container classes="contribute">
                <paragraph>该枚举目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
            <target refid="class-audioeffectfilter-constant-filter-24db"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-audioeffectfilter-constant-filter-24db" names="class_audioeffectfilter_constant_filter_24db"><reference internal="True" refid="enum-audioeffectfilter-filterdb"><inline classes="std std-ref">FilterDB</inline></reference> <strong>FILTER_24DB</strong> = <literal>3</literal></paragraph>
            <container classes="contribute">
                <paragraph>该枚举目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="属性说明">
            <title>属性说明</title>
            <target refid="class-audioeffectfilter-property-cutoff-hz"></target>
            <paragraph classes="classref-property" ids="class-audioeffectfilter-property-cutoff-hz" names="class_audioeffectfilter_property_cutoff_hz"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>cutoff_hz</strong> = <literal>2000.0</literal> <reference internal="True" refid="class-audioeffectfilter-property-cutoff-hz"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_cutoff</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_cutoff</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>滤波器的阈值频率，单位为 Hz。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audioeffectfilter-property-db"></target>
            <paragraph classes="classref-property" ids="class-audioeffectfilter-property-db" names="class_audioeffectfilter_property_db"><reference internal="True" refid="enum-audioeffectfilter-filterdb"><inline classes="std std-ref">FilterDB</inline></reference> <strong>db</strong> = <literal>0</literal> <reference internal="True" refid="class-audioeffectfilter-property-db"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_db</strong>(value: <reference internal="True" refid="enum-audioeffectfilter-filterdb"><inline classes="std std-ref">FilterDB</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-audioeffectfilter-filterdb"><inline classes="std std-ref">FilterDB</inline></reference> <strong>get_db</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <container classes="contribute">
                <paragraph>该属性目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audioeffectfilter-property-gain"></target>
            <paragraph classes="classref-property" ids="class-audioeffectfilter-property-gain" names="class_audioeffectfilter_property_gain"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>gain</strong> = <literal>1.0</literal> <reference internal="True" refid="class-audioeffectfilter-property-gain"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_gain</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_gain</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>滤波后频率的增益量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audioeffectfilter-property-resonance"></target>
            <paragraph classes="classref-property" ids="class-audioeffectfilter-property-resonance" names="class_audioeffectfilter_property_resonance"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>resonance</strong> = <literal>0.5</literal> <reference internal="True" refid="class-audioeffectfilter-property-resonance"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_resonance</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_resonance</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>在截断频率附近的频率范围内的提升量。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效运算符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列位标志构成位掩码的整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

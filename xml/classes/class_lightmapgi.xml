<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_lightmapgi.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/LightmapGI.xml.</comment>
    <target refid="class-lightmapgi"></target>
    <section ids="lightmapgi class-lightmapgi" names="lightmapgi class_lightmapgi">
        <title>LightmapGI</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_visualinstance3d#class-visualinstance3d"><inline classes="std std-ref">VisualInstance3D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node3d#class-node3d"><inline classes="std std-ref">Node3D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>计算并存储烘焙光照贴图，以实现快速全局照明。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph><strong>LightmapGI</strong> 节点用于计算和存储烘焙的光照贴图。光照贴图用于提供高质量的间接照明，并且漏光很少。如果启用 <reference internal="True" refid="class-lightmapgi-property-directional"><inline classes="std std-ref">directional</inline></reference>，<strong>LightmapGI</strong> 还可以使用球谐函数，以提供粗略的反射。由于<emphasis>光照探针</emphasis>，动态物体可以接收间接光照，可以通过将 <reference internal="True" refid="class-lightmapgi-property-generate-probes-subdiv"><inline classes="std std-ref">generate_probes_subdiv</inline></reference> 设置为 <reference internal="True" refid="class-lightmapgi-constant-generate-probes-disabled"><inline classes="std std-ref">GENERATE_PROBES_DISABLED</inline></reference> 以外的值，来自动放置光照探针。也可以通过创建 <reference internal="True" refuri="class_lightmapprobe#class-lightmapprobe"><inline classes="std std-ref">LightmapProbe</inline></reference> 节点，来添加额外的光照贴图探针。缺点是光照贴图是完全静态的，不能在导出的项目中烘焙。与 <reference internal="True" refuri="class_voxelgi#class-voxelgi"><inline classes="std std-ref">VoxelGI</inline></reference> 相比，烘焙 <strong>LightmapGI</strong> 节点也更慢。</paragraph>
            <paragraph><strong>程序生成：</strong>光照贴图烘焙功能仅在编辑器中可用。这意味着 <strong>LightmapGI</strong> 不适合程序生成或用户构建的关卡。对于程序生成或用户构建的关卡，请改用 <reference internal="True" refuri="class_voxelgi#class-voxelgi"><inline classes="std std-ref">VoxelGI</inline></reference> 或 SDFGI（请参阅 <reference internal="True" refuri="class_environment#class-environment-property-sdfgi-enabled"><inline classes="std std-ref">Environment.sdfgi_enabled</inline></reference>）。</paragraph>
            <paragraph><strong>性能：</strong><strong>LightmapGI</strong> 为全局照明提供最佳的运行时性能。它适用于包括集成显卡和移动设备在内的低端硬件。</paragraph>
            <paragraph><strong>注意：</strong>由于光照贴图的工作方式，大多数属性只有在光照贴图被再次烘焙后，才会产生可见效果。</paragraph>
            <paragraph><strong>注意：</strong>不支持在 <reference internal="True" refuri="class_csgshape3d#class-csgshape3d"><inline classes="std std-ref">CSGShape3D</inline></reference> 和 <reference internal="True" refuri="class_primitivemesh#class-primitivemesh"><inline classes="std std-ref">PrimitiveMesh</inline></reference> 上烘焙光照贴图，因为它们无法存储烘焙所需的 UV2 数据。</paragraph>
            <paragraph><strong>注意：</strong>如果没有安装自定义光照贴图器，则只能从支持 Forward+ 或 Mobile 渲染后端的设备烘焙 <strong>LightmapGI</strong>。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference internal="True" refuri="../tutorials/3d/global_illumination/using_lightmap_gi"><inline classes="doc">使用光照贴图全局光照</inline></reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="57"></colspec>
                    <colspec colwidth="87"></colspec>
                    <colspec colwidth="12"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-lightmapgi-property-bias"><inline classes="std std-ref">bias</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0005</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-lightmapgi-property-bounce-indirect-energy"><inline classes="std std-ref">bounce_indirect_energy</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-lightmapgi-property-bounces"><inline classes="std std-ref">bounces</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>3</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_cameraattributes#class-cameraattributes"><inline classes="std std-ref">CameraAttributes</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-lightmapgi-property-camera-attributes"><inline classes="std std-ref">camera_attributes</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-lightmapgi-property-denoiser-range"><inline classes="std std-ref">denoiser_range</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>10</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-lightmapgi-property-denoiser-strength"><inline classes="std std-ref">denoiser_strength</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-lightmapgi-property-directional"><inline classes="std std-ref">directional</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-lightmapgi-property-environment-custom-color"><inline classes="std std-ref">environment_custom_color</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-lightmapgi-property-environment-custom-energy"><inline classes="std std-ref">environment_custom_energy</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_sky#class-sky"><inline classes="std std-ref">Sky</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-lightmapgi-property-environment-custom-sky"><inline classes="std std-ref">environment_custom_sky</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-lightmapgi-environmentmode"><inline classes="std std-ref">EnvironmentMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-lightmapgi-property-environment-mode"><inline classes="std std-ref">environment_mode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-lightmapgi-generateprobes"><inline classes="std std-ref">GenerateProbes</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-lightmapgi-property-generate-probes-subdiv"><inline classes="std std-ref">generate_probes_subdiv</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>2</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-lightmapgi-property-interior"><inline classes="std std-ref">interior</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_lightmapgidata#class-lightmapgidata"><inline classes="std std-ref">LightmapGIData</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-lightmapgi-property-light-data"><inline classes="std std-ref">light_data</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-lightmapgi-property-max-texture-size"><inline classes="std std-ref">max_texture_size</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>16384</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-lightmapgi-bakequality"><inline classes="std std-ref">BakeQuality</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-lightmapgi-property-quality"><inline classes="std std-ref">quality</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-lightmapgi-property-texel-scale"><inline classes="std std-ref">texel_scale</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-lightmapgi-property-use-denoiser"><inline classes="std std-ref">use_denoiser</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-lightmapgi-property-use-texture-for-bounces"><inline classes="std std-ref">use_texture_for_bounces</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="枚举">
            <title>枚举</title>
            <target refid="enum-lightmapgi-bakequality"></target>
            <paragraph classes="classref-enumeration" ids="enum-lightmapgi-bakequality" names="enum_lightmapgi_bakequality">enum <strong>BakeQuality</strong>: <reference internal="True" refid="enum-lightmapgi-bakequality"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-lightmapgi-constant-bake-quality-low"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-lightmapgi-constant-bake-quality-low" names="class_lightmapgi_constant_bake_quality_low"><reference internal="True" refid="enum-lightmapgi-bakequality"><inline classes="std std-ref">BakeQuality</inline></reference> <strong>BAKE_QUALITY_LOW</strong> = <literal>0</literal></paragraph>
            <paragraph>较低的烘焙质量（最快的烘焙时间）。可以通过更改 <reference internal="True" refuri="class_projectsettings#class-projectsettings-property-rendering-lightmapping-bake-quality-low-quality-ray-count"><inline classes="std std-ref">ProjectSettings.rendering/lightmapping/bake_quality/low_quality_ray_count</inline></reference> 和 <reference internal="True" refuri="class_projectsettings#class-projectsettings-property-rendering-lightmapping-bake-quality-low-quality-probe-ray-count"><inline classes="std std-ref">ProjectSettings.rendering/lightmapping/bake_quality/low_quality_probe_ray_count</inline></reference> 来调整此预设的质量。</paragraph>
            <target refid="class-lightmapgi-constant-bake-quality-medium"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-lightmapgi-constant-bake-quality-medium" names="class_lightmapgi_constant_bake_quality_medium"><reference internal="True" refid="enum-lightmapgi-bakequality"><inline classes="std std-ref">BakeQuality</inline></reference> <strong>BAKE_QUALITY_MEDIUM</strong> = <literal>1</literal></paragraph>
            <paragraph>中等的烘焙质量（较快的烘焙时间）。可以通过更改 <reference internal="True" refuri="class_projectsettings#class-projectsettings-property-rendering-lightmapping-bake-quality-medium-quality-ray-count"><inline classes="std std-ref">ProjectSettings.rendering/lightmapping/bake_quality/medium_quality_ray_count</inline></reference> 和 <reference internal="True" refuri="class_projectsettings#class-projectsettings-property-rendering-lightmapping-bake-quality-medium-quality-probe-ray-count"><inline classes="std std-ref">ProjectSettings.rendering/lightmapping/bake_quality/medium_quality_probe_ray_count</inline></reference> 来调整此预设的质量。</paragraph>
            <target refid="class-lightmapgi-constant-bake-quality-high"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-lightmapgi-constant-bake-quality-high" names="class_lightmapgi_constant_bake_quality_high"><reference internal="True" refid="enum-lightmapgi-bakequality"><inline classes="std std-ref">BakeQuality</inline></reference> <strong>BAKE_QUALITY_HIGH</strong> = <literal>2</literal></paragraph>
            <paragraph>较高的烘焙质量（较慢的烘焙时间）。可以通过更改 <reference internal="True" refuri="class_projectsettings#class-projectsettings-property-rendering-lightmapping-bake-quality-high-quality-ray-count"><inline classes="std std-ref">ProjectSettings.rendering/lightmapping/bake_quality/high_quality_ray_count</inline></reference> 和 <reference internal="True" refuri="class_projectsettings#class-projectsettings-property-rendering-lightmapping-bake-quality-high-quality-probe-ray-count"><inline classes="std std-ref">ProjectSettings.rendering/lightmapping/bake_quality/high_quality_probe_ray_count</inline></reference> 来调整此预设的质量。</paragraph>
            <target refid="class-lightmapgi-constant-bake-quality-ultra"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-lightmapgi-constant-bake-quality-ultra" names="class_lightmapgi_constant_bake_quality_ultra"><reference internal="True" refid="enum-lightmapgi-bakequality"><inline classes="std std-ref">BakeQuality</inline></reference> <strong>BAKE_QUALITY_ULTRA</strong> = <literal>3</literal></paragraph>
            <paragraph>最高的烘焙质量（最慢的烘焙时间）。可以通过更改 <reference internal="True" refuri="class_projectsettings#class-projectsettings-property-rendering-lightmapping-bake-quality-high-quality-ray-count"><inline classes="std std-ref">ProjectSettings.rendering/lightmapping/bake_quality/high_quality_ray_count</inline></reference> 和 <reference internal="True" refuri="class_projectsettings#class-projectsettings-property-rendering-lightmapping-bake-quality-ultra-quality-probe-ray-count"><inline classes="std std-ref">ProjectSettings.rendering/lightmapping/bake_quality/ultra_quality_probe_ray_count</inline></reference> 来调整此预设的质量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-lightmapgi-generateprobes"></target>
            <paragraph classes="classref-enumeration" ids="enum-lightmapgi-generateprobes" names="enum_lightmapgi_generateprobes">enum <strong>GenerateProbes</strong>: <reference internal="True" refid="enum-lightmapgi-generateprobes"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-lightmapgi-constant-generate-probes-disabled"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-lightmapgi-constant-generate-probes-disabled" names="class_lightmapgi_constant_generate_probes_disabled"><reference internal="True" refid="enum-lightmapgi-generateprobes"><inline classes="std std-ref">GenerateProbes</inline></reference> <strong>GENERATE_PROBES_DISABLED</strong> = <literal>0</literal></paragraph>
            <paragraph>不要为光照动态对象生成光照贴图探针。</paragraph>
            <target refid="class-lightmapgi-constant-generate-probes-subdiv-4"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-lightmapgi-constant-generate-probes-subdiv-4" names="class_lightmapgi_constant_generate_probes_subdiv_4"><reference internal="True" refid="enum-lightmapgi-generateprobes"><inline classes="std std-ref">GenerateProbes</inline></reference> <strong>GENERATE_PROBES_SUBDIV_4</strong> = <literal>1</literal></paragraph>
            <paragraph>最低级别的细分（烘焙时间最快，文件大小最小）。</paragraph>
            <target refid="class-lightmapgi-constant-generate-probes-subdiv-8"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-lightmapgi-constant-generate-probes-subdiv-8" names="class_lightmapgi_constant_generate_probes_subdiv_8"><reference internal="True" refid="enum-lightmapgi-generateprobes"><inline classes="std std-ref">GenerateProbes</inline></reference> <strong>GENERATE_PROBES_SUBDIV_8</strong> = <literal>2</literal></paragraph>
            <paragraph>较低级别的细分（烘焙时间较快，文件大小较小）。</paragraph>
            <target refid="class-lightmapgi-constant-generate-probes-subdiv-16"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-lightmapgi-constant-generate-probes-subdiv-16" names="class_lightmapgi_constant_generate_probes_subdiv_16"><reference internal="True" refid="enum-lightmapgi-generateprobes"><inline classes="std std-ref">GenerateProbes</inline></reference> <strong>GENERATE_PROBES_SUBDIV_16</strong> = <literal>3</literal></paragraph>
            <paragraph>较高级别的细分（烘焙时间较慢，文件大小较大）。</paragraph>
            <target refid="class-lightmapgi-constant-generate-probes-subdiv-32"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-lightmapgi-constant-generate-probes-subdiv-32" names="class_lightmapgi_constant_generate_probes_subdiv_32"><reference internal="True" refid="enum-lightmapgi-generateprobes"><inline classes="std std-ref">GenerateProbes</inline></reference> <strong>GENERATE_PROBES_SUBDIV_32</strong> = <literal>4</literal></paragraph>
            <paragraph>最高级别的细分（烘焙时间最慢，文件大小最大）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-lightmapgi-bakeerror"></target>
            <paragraph classes="classref-enumeration" ids="enum-lightmapgi-bakeerror" names="enum_lightmapgi_bakeerror">enum <strong>BakeError</strong>: <reference internal="True" refid="enum-lightmapgi-bakeerror"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-lightmapgi-constant-bake-error-ok"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-lightmapgi-constant-bake-error-ok" names="class_lightmapgi_constant_bake_error_ok"><reference internal="True" refid="enum-lightmapgi-bakeerror"><inline classes="std std-ref">BakeError</inline></reference> <strong>BAKE_ERROR_OK</strong> = <literal>0</literal></paragraph>
            <paragraph>光照贴图烘焙成功。</paragraph>
            <target refid="class-lightmapgi-constant-bake-error-no-scene-root"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-lightmapgi-constant-bake-error-no-scene-root" names="class_lightmapgi_constant_bake_error_no_scene_root"><reference internal="True" refid="enum-lightmapgi-bakeerror"><inline classes="std std-ref">BakeError</inline></reference> <strong>BAKE_ERROR_NO_SCENE_ROOT</strong> = <literal>1</literal></paragraph>
            <paragraph>光照贴图烘焙失败，原因是无法访问所编辑场景的根节点。</paragraph>
            <target refid="class-lightmapgi-constant-bake-error-foreign-data"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-lightmapgi-constant-bake-error-foreign-data" names="class_lightmapgi_constant_bake_error_foreign_data"><reference internal="True" refid="enum-lightmapgi-bakeerror"><inline classes="std std-ref">BakeError</inline></reference> <strong>BAKE_ERROR_FOREIGN_DATA</strong> = <literal>2</literal></paragraph>
            <paragraph>光照贴图烘焙失败，原因是光照贴图数据嵌入在外部资源之中。</paragraph>
            <target refid="class-lightmapgi-constant-bake-error-no-lightmapper"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-lightmapgi-constant-bake-error-no-lightmapper" names="class_lightmapgi_constant_bake_error_no_lightmapper"><reference internal="True" refid="enum-lightmapgi-bakeerror"><inline classes="std std-ref">BakeError</inline></reference> <strong>BAKE_ERROR_NO_LIGHTMAPPER</strong> = <literal>3</literal></paragraph>
            <paragraph>光照贴图烘焙失败，原因是这个 Godot 构建中没有可用的光照贴图器。</paragraph>
            <target refid="class-lightmapgi-constant-bake-error-no-save-path"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-lightmapgi-constant-bake-error-no-save-path" names="class_lightmapgi_constant_bake_error_no_save_path"><reference internal="True" refid="enum-lightmapgi-bakeerror"><inline classes="std std-ref">BakeError</inline></reference> <strong>BAKE_ERROR_NO_SAVE_PATH</strong> = <literal>4</literal></paragraph>
            <paragraph>光照贴图烘焙失败，原因是资源中没有配置 <reference internal="True" refuri="class_lightmapgidata#class-lightmapgidata"><inline classes="std std-ref">LightmapGIData</inline></reference> 保存路径。</paragraph>
            <target refid="class-lightmapgi-constant-bake-error-no-meshes"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-lightmapgi-constant-bake-error-no-meshes" names="class_lightmapgi_constant_bake_error_no_meshes"><reference internal="True" refid="enum-lightmapgi-bakeerror"><inline classes="std std-ref">BakeError</inline></reference> <strong>BAKE_ERROR_NO_MESHES</strong> = <literal>5</literal></paragraph>
            <paragraph>光照贴图烘焙失败，原因是当前场景中没有 <reference internal="True" refuri="class_geometryinstance3d#class-geometryinstance3d-property-gi-mode"><inline classes="std std-ref">GeometryInstance3D.gi_mode</inline></reference> 为 <reference internal="True" refuri="class_geometryinstance3d#class-geometryinstance3d-constant-gi-mode-static"><inline classes="std std-ref">GeometryInstance3D.GI_MODE_STATIC</inline></reference> 且具有有效 UV2 映射的网格。可能需要在导入停靠面板中选择 3D 场景，并相应地更改它们的全局照明模式。</paragraph>
            <target refid="class-lightmapgi-constant-bake-error-meshes-invalid"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-lightmapgi-constant-bake-error-meshes-invalid" names="class_lightmapgi_constant_bake_error_meshes_invalid"><reference internal="True" refid="enum-lightmapgi-bakeerror"><inline classes="std std-ref">BakeError</inline></reference> <strong>BAKE_ERROR_MESHES_INVALID</strong> = <literal>6</literal></paragraph>
            <paragraph>光照贴图烘焙失败，原因是光照贴图器无法分析一些标记为静态的网格以进行烘焙。</paragraph>
            <target refid="class-lightmapgi-constant-bake-error-cant-create-image"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-lightmapgi-constant-bake-error-cant-create-image" names="class_lightmapgi_constant_bake_error_cant_create_image"><reference internal="True" refid="enum-lightmapgi-bakeerror"><inline classes="std std-ref">BakeError</inline></reference> <strong>BAKE_ERROR_CANT_CREATE_IMAGE</strong> = <literal>7</literal></paragraph>
            <paragraph>光照贴图烘焙失败，原因是最终的图像无法保存，或保存后无法被 Godot 导入。</paragraph>
            <target refid="class-lightmapgi-constant-bake-error-user-aborted"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-lightmapgi-constant-bake-error-user-aborted" names="class_lightmapgi_constant_bake_error_user_aborted"><reference internal="True" refid="enum-lightmapgi-bakeerror"><inline classes="std std-ref">BakeError</inline></reference> <strong>BAKE_ERROR_USER_ABORTED</strong> = <literal>8</literal></paragraph>
            <paragraph>用户中止了光照贴图烘焙操作（通常通过点击进度对话框中的<strong>取消</strong>按钮）。</paragraph>
            <target refid="class-lightmapgi-constant-bake-error-texture-size-too-small"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-lightmapgi-constant-bake-error-texture-size-too-small" names="class_lightmapgi_constant_bake_error_texture_size_too_small"><reference internal="True" refid="enum-lightmapgi-bakeerror"><inline classes="std std-ref">BakeError</inline></reference> <strong>BAKE_ERROR_TEXTURE_SIZE_TOO_SMALL</strong> = <literal>9</literal></paragraph>
            <paragraph>光照贴图烘焙失败，因为最大纹理尺寸太小，无法容纳某些被标记为烘焙的网格。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-lightmapgi-environmentmode"></target>
            <paragraph classes="classref-enumeration" ids="enum-lightmapgi-environmentmode" names="enum_lightmapgi_environmentmode">enum <strong>EnvironmentMode</strong>: <reference internal="True" refid="enum-lightmapgi-environmentmode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-lightmapgi-constant-environment-mode-disabled"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-lightmapgi-constant-environment-mode-disabled" names="class_lightmapgi_constant_environment_mode_disabled"><reference internal="True" refid="enum-lightmapgi-environmentmode"><inline classes="std std-ref">EnvironmentMode</inline></reference> <strong>ENVIRONMENT_MODE_DISABLED</strong> = <literal>0</literal></paragraph>
            <paragraph>烘焙光照贴图时忽略环境光照。</paragraph>
            <target refid="class-lightmapgi-constant-environment-mode-scene"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-lightmapgi-constant-environment-mode-scene" names="class_lightmapgi_constant_environment_mode_scene"><reference internal="True" refid="enum-lightmapgi-environmentmode"><inline classes="std std-ref">EnvironmentMode</inline></reference> <strong>ENVIRONMENT_MODE_SCENE</strong> = <literal>1</literal></paragraph>
            <paragraph>烘焙光照贴图时，使用场景的环境光照。</paragraph>
            <paragraph><strong>注意：</strong>如果在没有 <reference internal="True" refuri="class_worldenvironment#class-worldenvironment"><inline classes="std std-ref">WorldEnvironment</inline></reference> 节点的场景中烘焙光照贴图，这将表现得像 <reference internal="True" refid="class-lightmapgi-constant-environment-mode-disabled"><inline classes="std std-ref">ENVIRONMENT_MODE_DISABLED</inline></reference>。在烘焙光照贴图时，<strong>LightmapGI</strong> <emphasis>不会</emphasis>考虑编辑器的预览天空和太阳。</paragraph>
            <target refid="class-lightmapgi-constant-environment-mode-custom-sky"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-lightmapgi-constant-environment-mode-custom-sky" names="class_lightmapgi_constant_environment_mode_custom_sky"><reference internal="True" refid="enum-lightmapgi-environmentmode"><inline classes="std std-ref">EnvironmentMode</inline></reference> <strong>ENVIRONMENT_MODE_CUSTOM_SKY</strong> = <literal>2</literal></paragraph>
            <paragraph>烘焙光照贴图时，使用 <reference internal="True" refid="class-lightmapgi-property-environment-custom-sky"><inline classes="std std-ref">environment_custom_sky</inline></reference> 作为环境光照来源。</paragraph>
            <target refid="class-lightmapgi-constant-environment-mode-custom-color"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-lightmapgi-constant-environment-mode-custom-color" names="class_lightmapgi_constant_environment_mode_custom_color"><reference internal="True" refid="enum-lightmapgi-environmentmode"><inline classes="std std-ref">EnvironmentMode</inline></reference> <strong>ENVIRONMENT_MODE_CUSTOM_COLOR</strong> = <literal>3</literal></paragraph>
            <paragraph>烘焙光照贴图时，使用 <reference internal="True" refid="class-lightmapgi-property-environment-custom-color"><inline classes="std std-ref">environment_custom_color</inline></reference> 和 <reference internal="True" refid="class-lightmapgi-property-environment-custom-energy"><inline classes="std std-ref">environment_custom_energy</inline></reference> 相乘的结果作为环境光照的恒定来源。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="属性说明">
            <title>属性说明</title>
            <target refid="class-lightmapgi-property-bias"></target>
            <paragraph classes="classref-property" ids="class-lightmapgi-property-bias" names="class_lightmapgi_property_bias"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>bias</strong> = <literal>0.0005</literal> <reference internal="True" refid="class-lightmapgi-property-bias"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_bias</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_bias</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>计算阴影时使用的偏置。增加 <reference internal="True" refid="class-lightmapgi-property-bias"><inline classes="std std-ref">bias</inline></reference> 可以修复生成的烘焙光照贴图上的阴影失真，但会引入阴影悬浮（阴影未连接到其障碍物）。实时 <reference internal="True" refuri="class_light3d#class-light3d"><inline classes="std std-ref">Light3D</inline></reference> 阴影不受该 <reference internal="True" refid="class-lightmapgi-property-bias"><inline classes="std std-ref">bias</inline></reference> 属性的影响。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-lightmapgi-property-bounce-indirect-energy"></target>
            <paragraph classes="classref-property" ids="class-lightmapgi-property-bounce-indirect-energy" names="class_lightmapgi_property_bounce_indirect_energy"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>bounce_indirect_energy</strong> = <literal>1.0</literal> <reference internal="True" refid="class-lightmapgi-property-bounce-indirect-energy"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_bounce_indirect_energy</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_bounce_indirect_energy</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>每次反弹的能量乘数。较高的值将使间接照明更亮。值 <literal>1.0</literal> 代表物理上准确的行为，但较高的值可用于在使用少量反弹时使间接照明传播更明显。这可以通过减少 <reference internal="True" refid="class-lightmapgi-property-bounces"><inline classes="std std-ref">bounces</inline></reference> 数量，然后增加 <reference internal="True" refid="class-lightmapgi-property-bounce-indirect-energy"><inline classes="std std-ref">bounce_indirect_energy</inline></reference> 来加速烘焙时间。</paragraph>
            <paragraph><strong>注意：</strong><reference internal="True" refid="class-lightmapgi-property-bounce-indirect-energy"><inline classes="std std-ref">bounce_indirect_energy</inline></reference> 仅在 <reference internal="True" refid="class-lightmapgi-property-bounces"><inline classes="std std-ref">bounces</inline></reference> 被设置为大于或等于 <literal>1</literal> 的值时才有效。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-lightmapgi-property-bounces"></target>
            <paragraph classes="classref-property" ids="class-lightmapgi-property-bounces" names="class_lightmapgi_property_bounces"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>bounces</strong> = <literal>3</literal> <reference internal="True" refid="class-lightmapgi-property-bounces"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_bounces</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_bounces</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>烘焙过程中考虑的光反弹次数。较高的值会产生更明亮、更逼真的光线，但代价是更长的烘焙时间。如果设置为 <literal>0</literal>，则仅烘焙环境光线、直接光线和自发光光线。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-lightmapgi-property-camera-attributes"></target>
            <paragraph classes="classref-property" ids="class-lightmapgi-property-camera-attributes" names="class_lightmapgi_property_camera_attributes"><reference internal="True" refuri="class_cameraattributes#class-cameraattributes"><inline classes="std std-ref">CameraAttributes</inline></reference> <strong>camera_attributes</strong> <reference internal="True" refid="class-lightmapgi-property-camera-attributes"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_camera_attributes</strong>(value: <reference internal="True" refuri="class_cameraattributes#class-cameraattributes"><inline classes="std std-ref">CameraAttributes</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_cameraattributes#class-cameraattributes"><inline classes="std std-ref">CameraAttributes</inline></reference> <strong>get_camera_attributes</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph><reference internal="True" refuri="class_cameraattributes#class-cameraattributes"><inline classes="std std-ref">CameraAttributes</inline></reference> 资源，指定要烘焙的曝光级别。自动曝光和非曝光属性将被忽略。应该使用曝光设置来减少烘焙时出现的动态范围。如果曝光度太高，<strong>LightmapGI</strong> 将出现带状伪影，或可能出现过度曝光伪影。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-lightmapgi-property-denoiser-range"></target>
            <paragraph classes="classref-property" ids="class-lightmapgi-property-denoiser-range" names="class_lightmapgi_property_denoiser_range"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>denoiser_range</strong> = <literal>10</literal> <reference internal="True" refid="class-lightmapgi-property-denoiser-range"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_denoiser_range</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_denoiser_range</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>The distance in pixels from which the denoiser samples. Lower values preserve more details, but may give blotchy results if the lightmap quality is not high enough. Only effective if <reference internal="True" refid="class-lightmapgi-property-use-denoiser"><inline classes="std std-ref">use_denoiser</inline></reference> is <literal>true</literal> and <reference internal="True" refuri="class_projectsettings#class-projectsettings-property-rendering-lightmapping-denoising-denoiser"><inline classes="std std-ref">ProjectSettings.rendering/lightmapping/denoising/denoiser</inline></reference> is set to JNLM.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-lightmapgi-property-denoiser-strength"></target>
            <paragraph classes="classref-property" ids="class-lightmapgi-property-denoiser-strength" names="class_lightmapgi_property_denoiser_strength"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>denoiser_strength</strong> = <literal>0.1</literal> <reference internal="True" refid="class-lightmapgi-property-denoiser-strength"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_denoiser_strength</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_denoiser_strength</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>应用于生成的光照贴图的去噪步骤的强度。仅当 <reference internal="True" refid="class-lightmapgi-property-use-denoiser"><inline classes="std std-ref">use_denoiser</inline></reference> 为 <literal>true</literal> 且 <reference internal="True" refuri="class_projectsettings#class-projectsettings-property-rendering-lightmapping-denoising-denoiser"><inline classes="std std-ref">ProjectSettings.rendering/lightmapping/denoising/denoiser</inline></reference> 被设置为 JNLM 时有效。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-lightmapgi-property-directional"></target>
            <paragraph classes="classref-property" ids="class-lightmapgi-property-directional" names="class_lightmapgi_property_directional"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>directional</strong> = <literal>false</literal> <reference internal="True" refid="class-lightmapgi-property-directional"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_directional</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_directional</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，烘焙光照贴图以包含作为球谐函数的方向信息。这会产生更逼真的光照外观，尤其是使用法线贴图材质和烘焙了直射光的灯光（<reference internal="True" refuri="class_light3d#class-light3d-property-light-bake-mode"><inline classes="std std-ref">Light3D.light_bake_mode</inline></reference> 设置为 <reference internal="True" refuri="class_light3d#class-light3d-constant-bake-static"><inline classes="std std-ref">Light3D.BAKE_STATIC</inline></reference> 并将 <reference internal="True" refuri="class_light3d#class-light3d-property-editor-only"><inline classes="std std-ref">Light3D.editor_only</inline></reference> 设置为 <literal>false</literal>）。方向信息还用于为静态和动态对象提供粗略的反射。这有一个小的运行时性能成本，因为着色器必须执行更多的工作，来解释来自光照贴图的方向信息。定向光照贴图也需要更长的时间来烘焙并产生更大的文件大小。</paragraph>
            <paragraph><strong>注意：</strong>属性的名称与 <reference internal="True" refuri="class_directionallight3d#class-directionallight3d"><inline classes="std std-ref">DirectionalLight3D</inline></reference> 没有关系。<reference internal="True" refid="class-lightmapgi-property-directional"><inline classes="std std-ref">directional</inline></reference> 适用于所有灯光类型。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-lightmapgi-property-environment-custom-color"></target>
            <paragraph classes="classref-property" ids="class-lightmapgi-property-environment-custom-color" names="class_lightmapgi_property_environment_custom_color"><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>environment_custom_color</strong> <reference internal="True" refid="class-lightmapgi-property-environment-custom-color"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_environment_custom_color</strong>(value: <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>get_environment_custom_color</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>用于环境照明的颜色。仅在 <reference internal="True" refid="class-lightmapgi-property-environment-mode"><inline classes="std std-ref">environment_mode</inline></reference> 为 <reference internal="True" refid="class-lightmapgi-constant-environment-mode-custom-color"><inline classes="std std-ref">ENVIRONMENT_MODE_CUSTOM_COLOR</inline></reference> 时有效。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-lightmapgi-property-environment-custom-energy"></target>
            <paragraph classes="classref-property" ids="class-lightmapgi-property-environment-custom-energy" names="class_lightmapgi_property_environment_custom_energy"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>environment_custom_energy</strong> <reference internal="True" refid="class-lightmapgi-property-environment-custom-energy"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_environment_custom_energy</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_environment_custom_energy</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>用于环境照明的颜色倍数。仅在 <reference internal="True" refid="class-lightmapgi-property-environment-mode"><inline classes="std std-ref">environment_mode</inline></reference> 为 <reference internal="True" refid="class-lightmapgi-constant-environment-mode-custom-color"><inline classes="std std-ref">ENVIRONMENT_MODE_CUSTOM_COLOR</inline></reference> 时有效。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-lightmapgi-property-environment-custom-sky"></target>
            <paragraph classes="classref-property" ids="class-lightmapgi-property-environment-custom-sky" names="class_lightmapgi_property_environment_custom_sky"><reference internal="True" refuri="class_sky#class-sky"><inline classes="std std-ref">Sky</inline></reference> <strong>environment_custom_sky</strong> <reference internal="True" refid="class-lightmapgi-property-environment-custom-sky"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_environment_custom_sky</strong>(value: <reference internal="True" refuri="class_sky#class-sky"><inline classes="std std-ref">Sky</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_sky#class-sky"><inline classes="std std-ref">Sky</inline></reference> <strong>get_environment_custom_sky</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>用作环境照明光源的天空。仅在 <reference internal="True" refid="class-lightmapgi-property-environment-mode"><inline classes="std std-ref">environment_mode</inline></reference> 为 <reference internal="True" refid="class-lightmapgi-constant-environment-mode-custom-sky"><inline classes="std std-ref">ENVIRONMENT_MODE_CUSTOM_SKY</inline></reference> 时有效。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-lightmapgi-property-environment-mode"></target>
            <paragraph classes="classref-property" ids="class-lightmapgi-property-environment-mode" names="class_lightmapgi_property_environment_mode"><reference internal="True" refid="enum-lightmapgi-environmentmode"><inline classes="std std-ref">EnvironmentMode</inline></reference> <strong>environment_mode</strong> = <literal>1</literal> <reference internal="True" refid="class-lightmapgi-property-environment-mode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_environment_mode</strong>(value: <reference internal="True" refid="enum-lightmapgi-environmentmode"><inline classes="std std-ref">EnvironmentMode</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-lightmapgi-environmentmode"><inline classes="std std-ref">EnvironmentMode</inline></reference> <strong>get_environment_mode</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>烘焙光照贴图时使用的环境模式。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-lightmapgi-property-generate-probes-subdiv"></target>
            <paragraph classes="classref-property" ids="class-lightmapgi-property-generate-probes-subdiv" names="class_lightmapgi_property_generate_probes_subdiv"><reference internal="True" refid="enum-lightmapgi-generateprobes"><inline classes="std std-ref">GenerateProbes</inline></reference> <strong>generate_probes_subdiv</strong> = <literal>2</literal> <reference internal="True" refid="class-lightmapgi-property-generate-probes-subdiv"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_generate_probes</strong>(value: <reference internal="True" refid="enum-lightmapgi-generateprobes"><inline classes="std std-ref">GenerateProbes</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-lightmapgi-generateprobes"><inline classes="std std-ref">GenerateProbes</inline></reference> <strong>get_generate_probes</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>为动态对象照明自动生成 <reference internal="True" refuri="class_lightmapprobe#class-lightmapprobe"><inline classes="std std-ref">LightmapProbe</inline></reference> 时使用的细分级别。较高的值会在动态对象上产生更准确的间接照明，但代价是更长的烘焙时间和更大的文件大小。</paragraph>
            <paragraph><strong>注意：</strong>自动生成的 <reference internal="True" refuri="class_lightmapprobe#class-lightmapprobe"><inline classes="std std-ref">LightmapProbe</inline></reference>，不作为在场景树停靠面板中的节点可见，并且生成后无法通过这种方式修改。</paragraph>
            <paragraph><strong>注意：</strong>不管 <reference internal="True" refid="class-lightmapgi-property-generate-probes-subdiv"><inline classes="std std-ref">generate_probes_subdiv</inline></reference>，动态对象上的直接光照，总是使用 <reference internal="True" refuri="class_light3d#class-light3d"><inline classes="std std-ref">Light3D</inline></reference> 节点实时应用。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-lightmapgi-property-interior"></target>
            <paragraph classes="classref-property" ids="class-lightmapgi-property-interior" names="class_lightmapgi_property_interior"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>interior</strong> = <literal>false</literal> <reference internal="True" refid="class-lightmapgi-property-interior"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_interior</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_interior</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则会在烘焙光照贴图时忽略环境光照。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-lightmapgi-property-light-data"></target>
            <paragraph classes="classref-property" ids="class-lightmapgi-property-light-data" names="class_lightmapgi_property_light_data"><reference internal="True" refuri="class_lightmapgidata#class-lightmapgidata"><inline classes="std std-ref">LightmapGIData</inline></reference> <strong>light_data</strong> <reference internal="True" refid="class-lightmapgi-property-light-data"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_light_data</strong>(value: <reference internal="True" refuri="class_lightmapgidata#class-lightmapgidata"><inline classes="std std-ref">LightmapGIData</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_lightmapgidata#class-lightmapgidata"><inline classes="std std-ref">LightmapGIData</inline></reference> <strong>get_light_data</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>与该 <strong>LightmapGI</strong> 节点关联的 <reference internal="True" refuri="class_lightmapgidata#class-lightmapgidata"><inline classes="std std-ref">LightmapGIData</inline></reference>。该资源是在烘焙后自动创建的，并不意味着要手动创建。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-lightmapgi-property-max-texture-size"></target>
            <paragraph classes="classref-property" ids="class-lightmapgi-property-max-texture-size" names="class_lightmapgi_property_max_texture_size"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>max_texture_size</strong> = <literal>16384</literal> <reference internal="True" refid="class-lightmapgi-property-max-texture-size"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_max_texture_size</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_max_texture_size</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>生成的纹理图集的最大纹理大小。更高的值将导致生成的切片更少，但由于硬件对纹理大小的限制，可能无法在所有硬件上工作。如果不确定，请将 <reference internal="True" refid="class-lightmapgi-property-max-texture-size"><inline classes="std std-ref">max_texture_size</inline></reference> 保留为其默认值 <literal>16384</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-lightmapgi-property-quality"></target>
            <paragraph classes="classref-property" ids="class-lightmapgi-property-quality" names="class_lightmapgi_property_quality"><reference internal="True" refid="enum-lightmapgi-bakequality"><inline classes="std std-ref">BakeQuality</inline></reference> <strong>quality</strong> = <literal>1</literal> <reference internal="True" refid="class-lightmapgi-property-quality"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_bake_quality</strong>(value: <reference internal="True" refid="enum-lightmapgi-bakequality"><inline classes="std std-ref">BakeQuality</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-lightmapgi-bakequality"><inline classes="std std-ref">BakeQuality</inline></reference> <strong>get_bake_quality</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>烘焙光照贴图时使用的质量预设。这会影响烘焙时间，但输出文件的大小在所有质量级别上基本相同。</paragraph>
            <paragraph>要进一步加快烘焙时间，请在导入停靠面板中减少 <reference internal="True" refid="class-lightmapgi-property-bounces"><inline classes="std std-ref">bounces</inline></reference>、禁用 <reference internal="True" refid="class-lightmapgi-property-use-denoiser"><inline classes="std std-ref">use_denoiser</inline></reference>、并增加 3D 场景的光照贴图纹素大小。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-lightmapgi-property-texel-scale"></target>
            <paragraph classes="classref-property" ids="class-lightmapgi-property-texel-scale" names="class_lightmapgi_property_texel_scale"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>texel_scale</strong> = <literal>1.0</literal> <reference internal="True" refid="class-lightmapgi-property-texel-scale"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_texel_scale</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_texel_scale</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>缩放当前烘焙的所有网格的光照贴图纹素密度。这是一个基于每个导入的 3D 场景中定义的已有光照贴图纹素大小、以及每个网格密度乘数（设计用于在不同缩放使用相同网格时使用）的乘数。较低的值将导致更快的烘焙时间。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-lightmapgi-property-use-denoiser"></target>
            <paragraph classes="classref-property" ids="class-lightmapgi-property-use-denoiser" names="class_lightmapgi_property_use_denoiser"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>use_denoiser</strong> = <literal>true</literal> <reference internal="True" refid="class-lightmapgi-property-use-denoiser"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_use_denoiser</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_using_denoiser</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则在生成的光照贴图上，使用基于 GPU 的降噪算法。这以更长的烘焙时间为代价，消除了生成的光照贴图中的大部分噪点。尽管无损压缩在压缩降噪图像方面可能做得更好，但使用降噪器通常不会显著影响文件大小。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-lightmapgi-property-use-texture-for-bounces"></target>
            <paragraph classes="classref-property" ids="class-lightmapgi-property-use-texture-for-bounces" names="class_lightmapgi_property_use_texture_for_bounces"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>use_texture_for_bounces</strong> = <literal>true</literal> <reference internal="True" refid="class-lightmapgi-property-use-texture-for-bounces"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_use_texture_for_bounces</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_using_texture_for_bounces</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，将生成带有照明信息的纹理，以加快间接照明的生成速度，但会牺牲一定的精度。当使用低分辨率光照贴图或在表面上显著拉伸光照贴图的 UV 时，几何体可能会出现额外的漏光伪影。如果不确定，请将 <reference internal="True" refid="class-lightmapgi-property-use-texture-for-bounces"><inline classes="std std-ref">use_texture_for_bounces</inline></reference> 保留为其默认值 <literal>true</literal>。</paragraph>
            <paragraph><strong>注意：</strong><reference internal="True" refid="class-lightmapgi-property-use-texture-for-bounces"><inline classes="std std-ref">use_texture_for_bounces</inline></reference> 仅在 <reference internal="True" refid="class-lightmapgi-property-bounces"><inline classes="std std-ref">bounces</inline></reference> 被设置为大于或等于 <literal>1</literal> 的值时才有效。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

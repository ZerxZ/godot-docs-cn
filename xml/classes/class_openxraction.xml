<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_openxraction.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/modules/openxr/doc_classes/OpenXRAction.xml.</comment>
    <target refid="class-openxraction"></target>
    <section ids="openxraction class-openxraction" names="openxraction class_openxraction">
        <title>OpenXRAction</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>OpenXR 动作。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>该资源定义了一个 OpenXR 动作。动作可用于输入（按钮、操纵杆、触发器等）和输出（触觉）。</paragraph>
            <paragraph>只要有可能，OpenXR 就会在动作类型和输入类型之间执行自动转换。因此，如果触发器被按下，则绑定到一个布尔动作的模拟触发器将返回 <literal>false</literal>，如果完全按下则返回 <literal>true</literal>。</paragraph>
            <paragraph>动作并不被直接绑定到特定设备，相反，OpenXR 识别了有限数量的顶级路径，这些路径按用途识别设备。我们可以通过这些顶级路径来限制一个动作可以被绑定到哪些设备上。例如，一个只应用于手持控制器的动作，可以具有与其关联的顶级路径“/user/hand/left”和“/user/hand/right”。有关顶级路径的详细信息，请参阅 OpenXR 规范中的<reference name="保留路径部分" refuri="https://www.khronos.org/registry/OpenXR/specs/1.0/html/xrspec.html#semantic-path-reserved">保留路径部分</reference>。</paragraph>
            <paragraph>注意，资源的名字是用来注册动作的。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="51"></colspec>
                    <colspec colwidth="67"></colspec>
                    <colspec colwidth="25"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-openxraction-actiontype"><inline classes="std std-ref">ActionType</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-openxraction-property-action-type"><inline classes="std std-ref">action_type</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-openxraction-property-localized-name"><inline classes="std std-ref">localized_name</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>""</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_packedstringarray#class-packedstringarray"><inline classes="std std-ref">PackedStringArray</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-openxraction-property-toplevel-paths"><inline classes="std std-ref">toplevel_paths</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>PackedStringArray()</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="枚举">
            <title>枚举</title>
            <target refid="enum-openxraction-actiontype"></target>
            <paragraph classes="classref-enumeration" ids="enum-openxraction-actiontype" names="enum_openxraction_actiontype">enum <strong>ActionType</strong>: <reference internal="True" refid="enum-openxraction-actiontype"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-openxraction-constant-openxr-action-bool"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-openxraction-constant-openxr-action-bool" names="class_openxraction_constant_openxr_action_bool"><reference internal="True" refid="enum-openxraction-actiontype"><inline classes="std std-ref">ActionType</inline></reference> <strong>OPENXR_ACTION_BOOL</strong> = <literal>0</literal></paragraph>
            <paragraph>该动作提供布尔值。</paragraph>
            <target refid="class-openxraction-constant-openxr-action-float"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-openxraction-constant-openxr-action-float" names="class_openxraction_constant_openxr_action_float"><reference internal="True" refid="enum-openxraction-actiontype"><inline classes="std std-ref">ActionType</inline></reference> <strong>OPENXR_ACTION_FLOAT</strong> = <literal>1</literal></paragraph>
            <paragraph>该动作提供 <literal>0.0</literal> 和 <literal>1.0</literal> 之间的浮点值，用于扳机等模拟输入。</paragraph>
            <target refid="class-openxraction-constant-openxr-action-vector2"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-openxraction-constant-openxr-action-vector2" names="class_openxraction_constant_openxr_action_vector2"><reference internal="True" refid="enum-openxraction-actiontype"><inline classes="std std-ref">ActionType</inline></reference> <strong>OPENXR_ACTION_VECTOR2</strong> = <literal>2</literal></paragraph>
            <paragraph>该动作提供 <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> 值，可以和嵌入式控制板与操纵杆绑定。</paragraph>
            <target refid="class-openxraction-constant-openxr-action-pose"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-openxraction-constant-openxr-action-pose" names="class_openxraction_constant_openxr_action_pose"><reference internal="True" refid="enum-openxraction-actiontype"><inline classes="std std-ref">ActionType</inline></reference> <strong>OPENXR_ACTION_POSE</strong> = <literal>3</literal></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个枚举的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="属性说明">
            <title>属性说明</title>
            <target refid="class-openxraction-property-action-type"></target>
            <paragraph classes="classref-property" ids="class-openxraction-property-action-type" names="class_openxraction_property_action_type"><reference internal="True" refid="enum-openxraction-actiontype"><inline classes="std std-ref">ActionType</inline></reference> <strong>action_type</strong> = <literal>1</literal> <reference internal="True" refid="class-openxraction-property-action-type"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_action_type</strong>(value: <reference internal="True" refid="enum-openxraction-actiontype"><inline classes="std std-ref">ActionType</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-openxraction-actiontype"><inline classes="std std-ref">ActionType</inline></reference> <strong>get_action_type</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>动作的类型。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-openxraction-property-localized-name"></target>
            <paragraph classes="classref-property" ids="class-openxraction-property-localized-name" names="class_openxraction_property_localized_name"><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>localized_name</strong> = <literal>""</literal> <reference internal="True" refid="class-openxraction-property-localized-name"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_localized_name</strong>(value: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>get_localized_name</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>该动作的本地化描述。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-openxraction-property-toplevel-paths"></target>
            <paragraph classes="classref-property" ids="class-openxraction-property-toplevel-paths" names="class_openxraction_property_toplevel_paths"><reference internal="True" refuri="class_packedstringarray#class-packedstringarray"><inline classes="std std-ref">PackedStringArray</inline></reference> <strong>toplevel_paths</strong> = <literal>PackedStringArray()</literal> <reference internal="True" refid="class-openxraction-property-toplevel-paths"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_toplevel_paths</strong>(value: <reference internal="True" refuri="class_packedstringarray#class-packedstringarray"><inline classes="std std-ref">PackedStringArray</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_packedstringarray#class-packedstringarray"><inline classes="std std-ref">PackedStringArray</inline></reference> <strong>get_toplevel_paths</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>该动作所能绑定到的顶级路径的合集。</paragraph>
            <paragraph><strong>Note:</strong> The returned array is <emphasis>copied</emphasis> and any changes to it will not update the original property value. See <reference internal="True" refuri="class_packedstringarray#class-packedstringarray"><inline classes="std std-ref">PackedStringArray</inline></reference> for more details.</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_tabbar.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/TabBar.xml.</comment>
    <target refid="class-tabbar"></target>
    <section ids="tabbar class-tabbar" names="tabbar class_tabbar">
        <title>TabBar</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_control#class-control"><inline classes="std std-ref">Control</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_canvasitem#class-canvasitem"><inline classes="std std-ref">CanvasItem</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>提供水平选项卡栏的控件。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>提供水平选项卡栏的控件。类似于 <reference internal="True" refuri="class_tabcontainer#class-tabcontainer"><inline classes="std std-ref">TabContainer</inline></reference>，但只负责绘制选项卡，不与子节点互动。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="71"></colspec>
                    <colspec colwidth="83"></colspec>
                    <colspec colwidth="69"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-property-clip-tabs"><inline classes="std std-ref">clip_tabs</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-property-current-tab"><inline classes="std std-ref">current_tab</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>-1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-property-deselect-enabled"><inline classes="std std-ref">deselect_enabled</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-property-drag-to-rearrange-enabled"><inline classes="std std-ref">drag_to_rearrange_enabled</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_control#enum-control-focusmode"><inline classes="std std-ref">FocusMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph>focus_mode</paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>2</literal> (overrides <reference internal="True" refuri="class_control#class-control-property-focus-mode"><inline classes="std std-ref">Control</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-property-max-tab-width"><inline classes="std std-ref">max_tab_width</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-property-scroll-to-selected"><inline classes="std std-ref">scroll_to_selected</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-property-scrolling-enabled"><inline classes="std std-ref">scrolling_enabled</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-property-select-with-rmb"><inline classes="std std-ref">select_with_rmb</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-tabbar-alignmentmode"><inline classes="std std-ref">AlignmentMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-property-tab-alignment"><inline classes="std std-ref">tab_alignment</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-tabbar-closebuttondisplaypolicy"><inline classes="std std-ref">CloseButtonDisplayPolicy</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-property-tab-close-display-policy"><inline classes="std std-ref">tab_close_display_policy</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-property-tab-count"><inline classes="std std-ref">tab_count</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-property-tabs-rearrange-group"><inline classes="std std-ref">tabs_rearrange_group</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>-1</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="50"></colspec>
                    <colspec colwidth="176"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-method-add-tab"><inline classes="std std-ref">add_tab</inline></reference>(title: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> = "", icon: <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> = null)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-method-clear-tabs"><inline classes="std std-ref">clear_tabs</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-method-ensure-tab-visible"><inline classes="std std-ref">ensure_tab_visible</inline></reference>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-method-get-offset-buttons-visible"><inline classes="std std-ref">get_offset_buttons_visible</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-method-get-previous-tab"><inline classes="std std-ref">get_previous_tab</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-method-get-tab-button-icon"><inline classes="std std-ref">get_tab_button_icon</inline></reference>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-method-get-tab-icon"><inline classes="std std-ref">get_tab_icon</inline></reference>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-method-get-tab-icon-max-width"><inline classes="std std-ref">get_tab_icon_max_width</inline></reference>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-method-get-tab-idx-at-point"><inline classes="std std-ref">get_tab_idx_at_point</inline></reference>(point: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-method-get-tab-language"><inline classes="std std-ref">get_tab_language</inline></reference>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-method-get-tab-metadata"><inline classes="std std-ref">get_tab_metadata</inline></reference>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-method-get-tab-offset"><inline classes="std std-ref">get_tab_offset</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rect2#class-rect2"><inline classes="std std-ref">Rect2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-method-get-tab-rect"><inline classes="std std-ref">get_tab_rect</inline></reference>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_control#enum-control-textdirection"><inline classes="std std-ref">TextDirection</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-method-get-tab-text-direction"><inline classes="std std-ref">get_tab_text_direction</inline></reference>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-method-get-tab-title"><inline classes="std std-ref">get_tab_title</inline></reference>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-method-get-tab-tooltip"><inline classes="std std-ref">get_tab_tooltip</inline></reference>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-method-is-tab-disabled"><inline classes="std std-ref">is_tab_disabled</inline></reference>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-method-is-tab-hidden"><inline classes="std std-ref">is_tab_hidden</inline></reference>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-method-move-tab"><inline classes="std std-ref">move_tab</inline></reference>(from: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, to: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-method-remove-tab"><inline classes="std std-ref">remove_tab</inline></reference>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-method-select-next-available"><inline classes="std std-ref">select_next_available</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-method-select-previous-available"><inline classes="std std-ref">select_previous_available</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-method-set-tab-button-icon"><inline classes="std std-ref">set_tab_button_icon</inline></reference>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, icon: <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-method-set-tab-disabled"><inline classes="std std-ref">set_tab_disabled</inline></reference>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, disabled: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-method-set-tab-hidden"><inline classes="std std-ref">set_tab_hidden</inline></reference>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, hidden: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-method-set-tab-icon"><inline classes="std std-ref">set_tab_icon</inline></reference>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, icon: <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-method-set-tab-icon-max-width"><inline classes="std std-ref">set_tab_icon_max_width</inline></reference>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, width: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-method-set-tab-language"><inline classes="std std-ref">set_tab_language</inline></reference>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, language: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-method-set-tab-metadata"><inline classes="std std-ref">set_tab_metadata</inline></reference>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, metadata: <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-method-set-tab-text-direction"><inline classes="std std-ref">set_tab_text_direction</inline></reference>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, direction: <reference internal="True" refuri="class_control#enum-control-textdirection"><inline classes="std std-ref">TextDirection</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-method-set-tab-title"><inline classes="std std-ref">set_tab_title</inline></reference>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, title: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-method-set-tab-tooltip"><inline classes="std std-ref">set_tab_tooltip</inline></reference>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, tooltip: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>)</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id4" names="主题属性">
            <title>主题属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="35"></colspec>
                    <colspec colwidth="78"></colspec>
                    <colspec colwidth="37"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-theme-color-drop-mark-color"><inline classes="std std-ref">drop_mark_color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Color(1, 1, 1, 1)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-theme-color-font-disabled-color"><inline classes="std std-ref">font_disabled_color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Color(0.875, 0.875, 0.875, 0.5)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-theme-color-font-hovered-color"><inline classes="std std-ref">font_hovered_color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Color(0.95, 0.95, 0.95, 1)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-theme-color-font-outline-color"><inline classes="std std-ref">font_outline_color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Color(0, 0, 0, 1)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-theme-color-font-selected-color"><inline classes="std std-ref">font_selected_color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Color(0.95, 0.95, 0.95, 1)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-theme-color-font-unselected-color"><inline classes="std std-ref">font_unselected_color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Color(0.7, 0.7, 0.7, 1)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-theme-constant-h-separation"><inline classes="std std-ref">h_separation</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>4</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-theme-constant-icon-max-width"><inline classes="std std-ref">icon_max_width</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-theme-constant-outline-size"><inline classes="std std-ref">outline_size</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_font#class-font"><inline classes="std std-ref">Font</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-theme-font-font"><inline classes="std std-ref">font</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-theme-font-size-font-size"><inline classes="std std-ref">font_size</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-theme-icon-close"><inline classes="std std-ref">close</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-theme-icon-decrement"><inline classes="std std-ref">decrement</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-theme-icon-decrement-highlight"><inline classes="std std-ref">decrement_highlight</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-theme-icon-drop-mark"><inline classes="std std-ref">drop_mark</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-theme-icon-increment"><inline classes="std std-ref">increment</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-theme-icon-increment-highlight"><inline classes="std std-ref">increment_highlight</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-theme-style-button-highlight"><inline classes="std std-ref">button_highlight</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-theme-style-button-pressed"><inline classes="std std-ref">button_pressed</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-theme-style-tab-disabled"><inline classes="std std-ref">tab_disabled</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-theme-style-tab-focus"><inline classes="std std-ref">tab_focus</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-theme-style-tab-hovered"><inline classes="std std-ref">tab_hovered</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-theme-style-tab-selected"><inline classes="std std-ref">tab_selected</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tabbar-theme-style-tab-unselected"><inline classes="std std-ref">tab_unselected</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="信号">
            <title>信号</title>
            <target refid="class-tabbar-signal-active-tab-rearranged"></target>
            <paragraph classes="classref-signal" ids="class-tabbar-signal-active-tab-rearranged" names="class_tabbar_signal_active_tab_rearranged"><strong>active_tab_rearranged</strong>(idx_to: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-tabbar-signal-active-tab-rearranged"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>通过鼠标拖动重新排列活动选项卡时发出。见 <reference internal="True" refid="class-tabbar-property-drag-to-rearrange-enabled"><inline classes="std std-ref">drag_to_rearrange_enabled</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-signal-tab-button-pressed"></target>
            <paragraph classes="classref-signal" ids="class-tabbar-signal-tab-button-pressed" names="class_tabbar_signal_tab_button_pressed"><strong>tab_button_pressed</strong>(tab: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-tabbar-signal-tab-button-pressed"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>选项卡的右侧按钮被按下时发出。见 <reference internal="True" refid="class-tabbar-method-set-tab-button-icon"><inline classes="std std-ref">set_tab_button_icon</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-signal-tab-changed"></target>
            <paragraph classes="classref-signal" ids="class-tabbar-signal-tab-changed" names="class_tabbar_signal_tab_changed"><strong>tab_changed</strong>(tab: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-tabbar-signal-tab-changed"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>切换到另一个选项卡时发出。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-signal-tab-clicked"></target>
            <paragraph classes="classref-signal" ids="class-tabbar-signal-tab-clicked" names="class_tabbar_signal_tab_clicked"><strong>tab_clicked</strong>(tab: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-tabbar-signal-tab-clicked"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>单击选项卡时发出，即使它是当前选项卡。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-signal-tab-close-pressed"></target>
            <paragraph classes="classref-signal" ids="class-tabbar-signal-tab-close-pressed" names="class_tabbar_signal_tab_close_pressed"><strong>tab_close_pressed</strong>(tab: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-tabbar-signal-tab-close-pressed"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>按下某个选项卡的关闭按钮时发出。</paragraph>
            <paragraph><strong>注意：</strong>按下关闭按钮后选项卡不会自动移除，这种行为需要手动实现。例如：</paragraph>
            <container classes="sphinx-tabs" type="tab-element">
                <div aria-label="Tabbed content" role="tablist">
                    <button aria-controls="panel-0-R0RTY3JpcHQ=" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-0-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tab" tabindex="0">GDScript</button>
                    <button aria-controls="panel-0-QyM=" aria-selected="false" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-0-QyM=" name="QyM=" role="tab" tabindex="-1">C#</button>
                </div>
                <div aria-labelledby="tab-0-R0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-0-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve">$TabBar.tab_close_pressed.connect($TabBar.remove_tab)</literal_block>
                </div>
                <div aria-labelledby="tab-0-QyM=" classes="sphinx-tabs-panel code-tab group-tab" hidden="true" ids="panel-0-QyM=" name="QyM=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="csharp" linenos="False" xml:space="preserve">GetNode&lt;TabBar&gt;("TabBar").TabClosePressed += GetNode&lt;TabBar&gt;("TabBar").RemoveTab;</literal_block>
                </div>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-signal-tab-hovered"></target>
            <paragraph classes="classref-signal" ids="class-tabbar-signal-tab-hovered" names="class_tabbar_signal_tab_hovered"><strong>tab_hovered</strong>(tab: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-tabbar-signal-tab-hovered"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当鼠标悬停选项卡时发出。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-signal-tab-rmb-clicked"></target>
            <paragraph classes="classref-signal" ids="class-tabbar-signal-tab-rmb-clicked" names="class_tabbar_signal_tab_rmb_clicked"><strong>tab_rmb_clicked</strong>(tab: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-tabbar-signal-tab-rmb-clicked"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>右键单击选项卡时发出。必须启用 <reference internal="True" refid="class-tabbar-property-select-with-rmb"><inline classes="std std-ref">select_with_rmb</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-signal-tab-selected"></target>
            <paragraph classes="classref-signal" ids="class-tabbar-signal-tab-selected" names="class_tabbar_signal_tab_selected"><strong>tab_selected</strong>(tab: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-tabbar-signal-tab-selected"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>通过点击、定向输入或脚本选中某个选项卡时发出，即便该选项卡本来就是当前选项卡。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="枚举">
            <title>枚举</title>
            <target refid="enum-tabbar-alignmentmode"></target>
            <paragraph classes="classref-enumeration" ids="enum-tabbar-alignmentmode" names="enum_tabbar_alignmentmode">enum <strong>AlignmentMode</strong>: <reference internal="True" refid="enum-tabbar-alignmentmode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-tabbar-constant-alignment-left"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-tabbar-constant-alignment-left" names="class_tabbar_constant_alignment_left"><reference internal="True" refid="enum-tabbar-alignmentmode"><inline classes="std std-ref">AlignmentMode</inline></reference> <strong>ALIGNMENT_LEFT</strong> = <literal>0</literal></paragraph>
            <paragraph>将选项卡置于左侧。</paragraph>
            <target refid="class-tabbar-constant-alignment-center"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-tabbar-constant-alignment-center" names="class_tabbar_constant_alignment_center"><reference internal="True" refid="enum-tabbar-alignmentmode"><inline classes="std std-ref">AlignmentMode</inline></reference> <strong>ALIGNMENT_CENTER</strong> = <literal>1</literal></paragraph>
            <paragraph>将选项卡置于中间。</paragraph>
            <target refid="class-tabbar-constant-alignment-right"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-tabbar-constant-alignment-right" names="class_tabbar_constant_alignment_right"><reference internal="True" refid="enum-tabbar-alignmentmode"><inline classes="std std-ref">AlignmentMode</inline></reference> <strong>ALIGNMENT_RIGHT</strong> = <literal>2</literal></paragraph>
            <paragraph>将选项卡置于右侧。</paragraph>
            <target refid="class-tabbar-constant-alignment-max"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-tabbar-constant-alignment-max" names="class_tabbar_constant_alignment_max"><reference internal="True" refid="enum-tabbar-alignmentmode"><inline classes="std std-ref">AlignmentMode</inline></reference> <strong>ALIGNMENT_MAX</strong> = <literal>3</literal></paragraph>
            <paragraph>代表 <reference internal="True" refid="enum-tabbar-alignmentmode"><inline classes="std std-ref">AlignmentMode</inline></reference> 枚举的大小。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-tabbar-closebuttondisplaypolicy"></target>
            <paragraph classes="classref-enumeration" ids="enum-tabbar-closebuttondisplaypolicy" names="enum_tabbar_closebuttondisplaypolicy">enum <strong>CloseButtonDisplayPolicy</strong>: <reference internal="True" refid="enum-tabbar-closebuttondisplaypolicy"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-tabbar-constant-close-button-show-never"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-tabbar-constant-close-button-show-never" names="class_tabbar_constant_close_button_show_never"><reference internal="True" refid="enum-tabbar-closebuttondisplaypolicy"><inline classes="std std-ref">CloseButtonDisplayPolicy</inline></reference> <strong>CLOSE_BUTTON_SHOW_NEVER</strong> = <literal>0</literal></paragraph>
            <paragraph>永远不会显示关闭按钮。</paragraph>
            <target refid="class-tabbar-constant-close-button-show-active-only"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-tabbar-constant-close-button-show-active-only" names="class_tabbar_constant_close_button_show_active_only"><reference internal="True" refid="enum-tabbar-closebuttondisplaypolicy"><inline classes="std std-ref">CloseButtonDisplayPolicy</inline></reference> <strong>CLOSE_BUTTON_SHOW_ACTIVE_ONLY</strong> = <literal>1</literal></paragraph>
            <paragraph>仅在当前活动选项卡上显示关闭按钮。</paragraph>
            <target refid="class-tabbar-constant-close-button-show-always"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-tabbar-constant-close-button-show-always" names="class_tabbar_constant_close_button_show_always"><reference internal="True" refid="enum-tabbar-closebuttondisplaypolicy"><inline classes="std std-ref">CloseButtonDisplayPolicy</inline></reference> <strong>CLOSE_BUTTON_SHOW_ALWAYS</strong> = <literal>2</literal></paragraph>
            <paragraph>在所有选项卡上显示关闭按钮。</paragraph>
            <target refid="class-tabbar-constant-close-button-max"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-tabbar-constant-close-button-max" names="class_tabbar_constant_close_button_max"><reference internal="True" refid="enum-tabbar-closebuttondisplaypolicy"><inline classes="std std-ref">CloseButtonDisplayPolicy</inline></reference> <strong>CLOSE_BUTTON_MAX</strong> = <literal>3</literal></paragraph>
            <paragraph>代表 <reference internal="True" refid="enum-tabbar-closebuttondisplaypolicy"><inline classes="std std-ref">CloseButtonDisplayPolicy</inline></reference> 枚举的大小。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id7" names="属性说明">
            <title>属性说明</title>
            <target refid="class-tabbar-property-clip-tabs"></target>
            <paragraph classes="classref-property" ids="class-tabbar-property-clip-tabs" names="class_tabbar_property_clip_tabs"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>clip_tabs</strong> = <literal>true</literal> <reference internal="True" refid="class-tabbar-property-clip-tabs"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_clip_tabs</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_clip_tabs</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则会隐藏超出该节点宽度的选项卡，改为显示两个导航按钮。否则，会更新该节点的最小尺寸，让所有选项卡均可见。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-property-current-tab"></target>
            <paragraph classes="classref-property" ids="class-tabbar-property-current-tab" names="class_tabbar_property_current_tab"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>current_tab</strong> = <literal>-1</literal> <reference internal="True" refid="class-tabbar-property-current-tab"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_current_tab</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_current_tab</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>当前选中选项卡的索引号。<literal>-1</literal> 表示没有选中任何选项卡，只有在 <reference internal="True" refid="class-tabbar-property-deselect-enabled"><inline classes="std std-ref">deselect_enabled</inline></reference> 为 <literal>true</literal> 或所有选项卡都处于隐藏或禁用状态下才能够设置。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-property-deselect-enabled"></target>
            <paragraph classes="classref-property" ids="class-tabbar-property-deselect-enabled" names="class_tabbar_property_deselect_enabled"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>deselect_enabled</strong> = <literal>false</literal> <reference internal="True" refid="class-tabbar-property-deselect-enabled"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_deselect_enabled</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_deselect_enabled</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则所有选项卡都可以被取消选择，不选中任何选项卡。单击当前选项卡取消选中。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-property-drag-to-rearrange-enabled"></target>
            <paragraph classes="classref-property" ids="class-tabbar-property-drag-to-rearrange-enabled" names="class_tabbar_property_drag_to_rearrange_enabled"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>drag_to_rearrange_enabled</strong> = <literal>false</literal> <reference internal="True" refid="class-tabbar-property-drag-to-rearrange-enabled"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_drag_to_rearrange_enabled</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_drag_to_rearrange_enabled</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，可以通过鼠标拖动重新排列选项卡。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-property-max-tab-width"></target>
            <paragraph classes="classref-property" ids="class-tabbar-property-max-tab-width" names="class_tabbar_property_max_tab_width"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>max_tab_width</strong> = <literal>0</literal> <reference internal="True" refid="class-tabbar-property-max-tab-width"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_max_tab_width</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_max_tab_width</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>设置所有选项卡应被限制的最大宽度。如果设置为 <literal>0</literal>，则无限制。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-property-scroll-to-selected"></target>
            <paragraph classes="classref-property" ids="class-tabbar-property-scroll-to-selected" names="class_tabbar_property_scroll_to_selected"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>scroll_to_selected</strong> = <literal>true</literal> <reference internal="True" refid="class-tabbar-property-scroll-to-selected"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_scroll_to_selected</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_scroll_to_selected</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则会更改选项卡偏移量，从而保持当前选中的选项卡可见。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-property-scrolling-enabled"></target>
            <paragraph classes="classref-property" ids="class-tabbar-property-scrolling-enabled" names="class_tabbar_property_scrolling_enabled"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>scrolling_enabled</strong> = <literal>true</literal> <reference internal="True" refid="class-tabbar-property-scrolling-enabled"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_scrolling_enabled</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_scrolling_enabled</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，鼠标的滚轮可用于导航滚动视图。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-property-select-with-rmb"></target>
            <paragraph classes="classref-property" ids="class-tabbar-property-select-with-rmb" names="class_tabbar_property_select_with_rmb"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>select_with_rmb</strong> = <literal>false</literal> <reference internal="True" refid="class-tabbar-property-select-with-rmb"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_select_with_rmb</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_select_with_rmb</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，启用鼠标右键选择选项卡。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-property-tab-alignment"></target>
            <paragraph classes="classref-property" ids="class-tabbar-property-tab-alignment" names="class_tabbar_property_tab_alignment"><reference internal="True" refid="enum-tabbar-alignmentmode"><inline classes="std std-ref">AlignmentMode</inline></reference> <strong>tab_alignment</strong> = <literal>0</literal> <reference internal="True" refid="class-tabbar-property-tab-alignment"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_tab_alignment</strong>(value: <reference internal="True" refid="enum-tabbar-alignmentmode"><inline classes="std std-ref">AlignmentMode</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-tabbar-alignmentmode"><inline classes="std std-ref">AlignmentMode</inline></reference> <strong>get_tab_alignment</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>设置放置选项卡的位置。详情见 <reference internal="True" refid="enum-tabbar-alignmentmode"><inline classes="std std-ref">AlignmentMode</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-property-tab-close-display-policy"></target>
            <paragraph classes="classref-property" ids="class-tabbar-property-tab-close-display-policy" names="class_tabbar_property_tab_close_display_policy"><reference internal="True" refid="enum-tabbar-closebuttondisplaypolicy"><inline classes="std std-ref">CloseButtonDisplayPolicy</inline></reference> <strong>tab_close_display_policy</strong> = <literal>0</literal> <reference internal="True" refid="class-tabbar-property-tab-close-display-policy"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_tab_close_display_policy</strong>(value: <reference internal="True" refid="enum-tabbar-closebuttondisplaypolicy"><inline classes="std std-ref">CloseButtonDisplayPolicy</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-tabbar-closebuttondisplaypolicy"><inline classes="std std-ref">CloseButtonDisplayPolicy</inline></reference> <strong>get_tab_close_display_policy</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>设置关闭按钮何时出现在选项卡上。有关详细信息，请参阅 <reference internal="True" refid="enum-tabbar-closebuttondisplaypolicy"><inline classes="std std-ref">CloseButtonDisplayPolicy</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-property-tab-count"></target>
            <paragraph classes="classref-property" ids="class-tabbar-property-tab-count" names="class_tabbar_property_tab_count"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>tab_count</strong> = <literal>0</literal> <reference internal="True" refid="class-tabbar-property-tab-count"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_tab_count</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_tab_count</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>选项卡栏中当前的选项卡数量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-property-tabs-rearrange-group"></target>
            <paragraph classes="classref-property" ids="class-tabbar-property-tabs-rearrange-group" names="class_tabbar_property_tabs_rearrange_group"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>tabs_rearrange_group</strong> = <literal>-1</literal> <reference internal="True" refid="class-tabbar-property-tabs-rearrange-group"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_tabs_rearrange_group</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_tabs_rearrange_group</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>具有相同重新排列组 ID 的 <strong>TabBar</strong> 将允许在它们之间拖动选项卡。使用 <reference internal="True" refid="class-tabbar-property-drag-to-rearrange-enabled"><inline classes="std std-ref">drag_to_rearrange_enabled</inline></reference> 启用拖动。</paragraph>
            <paragraph>将该属性设置为 <literal>-1</literal> 将禁用 <strong>TabBar</strong> 之间的重新排列。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id8" names="方法说明">
            <title>方法说明</title>
            <target refid="class-tabbar-method-add-tab"></target>
            <paragraph classes="classref-method" ids="class-tabbar-method-add-tab" names="class_tabbar_method_add_tab"><abbreviation explanation="无返回值。">void</abbreviation> <strong>add_tab</strong>(title: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> = "", icon: <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> = null) <reference internal="True" refid="class-tabbar-method-add-tab"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>添加新选项卡。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-method-clear-tabs"></target>
            <paragraph classes="classref-method" ids="class-tabbar-method-clear-tabs" names="class_tabbar_method_clear_tabs"><abbreviation explanation="无返回值。">void</abbreviation> <strong>clear_tabs</strong>() <reference internal="True" refid="class-tabbar-method-clear-tabs"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>清空所有选项卡。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-method-ensure-tab-visible"></target>
            <paragraph classes="classref-method" ids="class-tabbar-method-ensure-tab-visible" names="class_tabbar_method_ensure_tab_visible"><abbreviation explanation="无返回值。">void</abbreviation> <strong>ensure_tab_visible</strong>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-tabbar-method-ensure-tab-visible"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>移动滚动视图，使标签可见。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-method-get-offset-buttons-visible"></target>
            <paragraph classes="classref-method" ids="class-tabbar-method-get-offset-buttons-visible" names="class_tabbar_method_get_offset_buttons_visible"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_offset_buttons_visible</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tabbar-method-get-offset-buttons-visible"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果偏移按钮（所有选项卡没有足够空间时出现的按钮）可见，则返回 <literal>true</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-method-get-previous-tab"></target>
            <paragraph classes="classref-method" ids="class-tabbar-method-get-previous-tab" names="class_tabbar_method_get_previous_tab"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_previous_tab</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tabbar-method-get-previous-tab"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回上一个活动选项卡的索引。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-method-get-tab-button-icon"></target>
            <paragraph classes="classref-method" ids="class-tabbar-method-get-tab-button-icon" names="class_tabbar_method_get_tab_button_icon"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>get_tab_button_icon</strong>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tabbar-method-get-tab-button-icon"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回索引 <literal>tab_idx</literal> 处选项卡右侧按钮的图标，如果该按钮没有图标，则返回 <literal>null</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-method-get-tab-icon"></target>
            <paragraph classes="classref-method" ids="class-tabbar-method-get-tab-icon" names="class_tabbar_method_get_tab_icon"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>get_tab_icon</strong>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tabbar-method-get-tab-icon"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回索引 <literal>tab_idx</literal> 处选项卡的图标，如果该选项卡没有图标，则返回 <literal>null</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-method-get-tab-icon-max-width"></target>
            <paragraph classes="classref-method" ids="class-tabbar-method-get-tab-icon-max-width" names="class_tabbar_method_get_tab_icon_max_width"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_tab_icon_max_width</strong>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tabbar-method-get-tab-icon-max-width"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置索引为 <literal>tab_idx</literal> 处选项卡所允许的最大图标宽度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-method-get-tab-idx-at-point"></target>
            <paragraph classes="classref-method" ids="class-tabbar-method-get-tab-idx-at-point" names="class_tabbar_method_get_tab_idx_at_point"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_tab_idx_at_point</strong>(point: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tabbar-method-get-tab-idx-at-point"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回位于局部坐标 <literal>point</literal> 处的选项卡的索引。如果该点在控件边界之外或查询位置没有选项卡，则返回 <literal>-1</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-method-get-tab-language"></target>
            <paragraph classes="classref-method" ids="class-tabbar-method-get-tab-language" names="class_tabbar_method_get_tab_language"><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>get_tab_language</strong>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tabbar-method-get-tab-language"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回选项卡标题的语言代码。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-method-get-tab-metadata"></target>
            <paragraph classes="classref-method" ids="class-tabbar-method-get-tab-metadata" names="class_tabbar_method_get_tab_metadata"><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> <strong>get_tab_metadata</strong>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tabbar-method-get-tab-metadata"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回索引为 <literal>tab_idx</literal> 的选项卡的元数据的值，由 <reference internal="True" refid="class-tabbar-method-set-tab-metadata"><inline classes="std std-ref">set_tab_metadata</inline></reference> 设置。如果之前没有设置元数据，则默认返回 <literal>null</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-method-get-tab-offset"></target>
            <paragraph classes="classref-method" ids="class-tabbar-method-get-tab-offset" names="class_tabbar_method_get_tab_offset"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_tab_offset</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tabbar-method-get-tab-offset"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回向左偏移的隐藏选项卡的数量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-method-get-tab-rect"></target>
            <paragraph classes="classref-method" ids="class-tabbar-method-get-tab-rect" names="class_tabbar_method_get_tab_rect"><reference internal="True" refuri="class_rect2#class-rect2"><inline classes="std std-ref">Rect2</inline></reference> <strong>get_tab_rect</strong>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tabbar-method-get-tab-rect"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回带有局部位置和大小的选项卡 <reference internal="True" refuri="class_rect2#class-rect2"><inline classes="std std-ref">Rect2</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-method-get-tab-text-direction"></target>
            <paragraph classes="classref-method" ids="class-tabbar-method-get-tab-text-direction" names="class_tabbar_method_get_tab_text_direction"><reference internal="True" refuri="class_control#enum-control-textdirection"><inline classes="std std-ref">TextDirection</inline></reference> <strong>get_tab_text_direction</strong>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tabbar-method-get-tab-text-direction"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回选项卡标题文本的基础书写方向。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-method-get-tab-title"></target>
            <paragraph classes="classref-method" ids="class-tabbar-method-get-tab-title" names="class_tabbar_method_get_tab_title"><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>get_tab_title</strong>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tabbar-method-get-tab-title"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回索引 <literal>tab_idx</literal> 处的选项卡的标题。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-method-get-tab-tooltip"></target>
            <paragraph classes="classref-method" ids="class-tabbar-method-get-tab-tooltip" names="class_tabbar_method_get_tab_tooltip"><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>get_tab_tooltip</strong>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tabbar-method-get-tab-tooltip"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Returns the tooltip text of the tab at index <literal>tab_idx</literal>.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-method-is-tab-disabled"></target>
            <paragraph classes="classref-method" ids="class-tabbar-method-is-tab-disabled" names="class_tabbar_method_is_tab_disabled"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_tab_disabled</strong>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tabbar-method-is-tab-disabled"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果索引 <literal>tab_idx</literal> 处的选项卡被禁用，则返回 <literal>true</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-method-is-tab-hidden"></target>
            <paragraph classes="classref-method" ids="class-tabbar-method-is-tab-hidden" names="class_tabbar_method_is_tab_hidden"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_tab_hidden</strong>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tabbar-method-is-tab-hidden"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果索引 <literal>tab_idx</literal> 处的选项卡被隐藏，则返回 <literal>true</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-method-move-tab"></target>
            <paragraph classes="classref-method" ids="class-tabbar-method-move-tab" names="class_tabbar_method_move_tab"><abbreviation explanation="无返回值。">void</abbreviation> <strong>move_tab</strong>(from: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, to: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-tabbar-method-move-tab"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将选项卡从 <literal>from</literal> 移动到 <literal>to</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-method-remove-tab"></target>
            <paragraph classes="classref-method" ids="class-tabbar-method-remove-tab" names="class_tabbar_method_remove_tab"><abbreviation explanation="无返回值。">void</abbreviation> <strong>remove_tab</strong>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-tabbar-method-remove-tab"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>删除索引 <literal>tab_idx</literal> 处的选项卡。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-method-select-next-available"></target>
            <paragraph classes="classref-method" ids="class-tabbar-method-select-next-available" names="class_tabbar_method_select_next_available"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>select_next_available</strong>() <reference internal="True" refid="class-tabbar-method-select-next-available"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>选择索引大于当前所选选项卡索引的第一个可用选项卡。如果选项卡选择发生改变，则返回 <literal>true</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-method-select-previous-available"></target>
            <paragraph classes="classref-method" ids="class-tabbar-method-select-previous-available" names="class_tabbar_method_select_previous_available"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>select_previous_available</strong>() <reference internal="True" refid="class-tabbar-method-select-previous-available"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>选择索引低于当前所选选项卡索引的第一个可用选项卡。如果选项卡选择发生改变，则返回 <literal>true</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-method-set-tab-button-icon"></target>
            <paragraph classes="classref-method" ids="class-tabbar-method-set-tab-button-icon" names="class_tabbar_method_set_tab_button_icon"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_tab_button_icon</strong>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, icon: <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference>) <reference internal="True" refid="class-tabbar-method-set-tab-button-icon"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置索引为 <literal>tab_idx</literal> 的选项卡按钮的图标 <literal>icon</literal>（位于右侧，在关闭按钮之前），会将该按钮设为可见且可点击（见 <reference internal="True" refid="class-tabbar-signal-tab-button-pressed"><inline classes="std std-ref">tab_button_pressed</inline></reference>）。给定 <literal>null</literal> 值会隐藏该按钮。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-method-set-tab-disabled"></target>
            <paragraph classes="classref-method" ids="class-tabbar-method-set-tab-disabled" names="class_tabbar_method_set_tab_disabled"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_tab_disabled</strong>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, disabled: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <reference internal="True" refid="class-tabbar-method-set-tab-disabled"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果 <literal>disabled</literal> 为 <literal>true</literal>，则禁用索引 <literal>tab_idx</literal> 处的选项卡，使其不可交互。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-method-set-tab-hidden"></target>
            <paragraph classes="classref-method" ids="class-tabbar-method-set-tab-hidden" names="class_tabbar_method_set_tab_hidden"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_tab_hidden</strong>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, hidden: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <reference internal="True" refid="class-tabbar-method-set-tab-hidden"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果 <literal>hidden</literal> 为 <literal>true</literal>，则隐藏索引 <literal>tab_idx</literal> 处的选项卡，使其从选项卡区域消失。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-method-set-tab-icon"></target>
            <paragraph classes="classref-method" ids="class-tabbar-method-set-tab-icon" names="class_tabbar_method_set_tab_icon"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_tab_icon</strong>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, icon: <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference>) <reference internal="True" refid="class-tabbar-method-set-tab-icon"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置索引 <literal>tab_idx</literal> 处的选项卡的图标。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-method-set-tab-icon-max-width"></target>
            <paragraph classes="classref-method" ids="class-tabbar-method-set-tab-icon-max-width" names="class_tabbar_method_set_tab_icon_max_width"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_tab_icon_max_width</strong>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, width: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-tabbar-method-set-tab-icon-max-width"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置索引为 <literal>tab_idx</literal> 处选项卡所允许的最大图标宽度。这是在图标的默认大小和 <reference internal="True" refid="class-tabbar-theme-constant-icon-max-width"><inline classes="std std-ref">icon_max_width</inline></reference> 的基础上的限制。高度会根据图标的长宽比调整。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-method-set-tab-language"></target>
            <paragraph classes="classref-method" ids="class-tabbar-method-set-tab-language" names="class_tabbar_method_set_tab_language"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_tab_language</strong>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, language: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <reference internal="True" refid="class-tabbar-method-set-tab-language"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置选项卡标题的语言代码，用于断行和文本塑形算法，如果留空则使用当前区域设置。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-method-set-tab-metadata"></target>
            <paragraph classes="classref-method" ids="class-tabbar-method-set-tab-metadata" names="class_tabbar_method_set_tab_metadata"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_tab_metadata</strong>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, metadata: <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference>) <reference internal="True" refid="class-tabbar-method-set-tab-metadata"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>为 <literal>tab_idx</literal> 的选项卡设置元数据的值，之后可以使用 <reference internal="True" refid="class-tabbar-method-get-tab-metadata"><inline classes="std std-ref">get_tab_metadata</inline></reference> 获取。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-method-set-tab-text-direction"></target>
            <paragraph classes="classref-method" ids="class-tabbar-method-set-tab-text-direction" names="class_tabbar_method_set_tab_text_direction"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_tab_text_direction</strong>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, direction: <reference internal="True" refuri="class_control#enum-control-textdirection"><inline classes="std std-ref">TextDirection</inline></reference>) <reference internal="True" refid="class-tabbar-method-set-tab-text-direction"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置选项卡标题的基础书写方向。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-method-set-tab-title"></target>
            <paragraph classes="classref-method" ids="class-tabbar-method-set-tab-title" names="class_tabbar_method_set_tab_title"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_tab_title</strong>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, title: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <reference internal="True" refid="class-tabbar-method-set-tab-title"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置索引 <literal>tab_idx</literal> 处的选项卡的标题 <literal>title</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-method-set-tab-tooltip"></target>
            <paragraph classes="classref-method" ids="class-tabbar-method-set-tab-tooltip" names="class_tabbar_method_set_tab_tooltip"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_tab_tooltip</strong>(tab_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, tooltip: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <reference internal="True" refid="class-tabbar-method-set-tab-tooltip"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置索引 <literal>tab_idx</literal> 处的选项卡的工具提示 <literal>tooltip</literal>。</paragraph>
            <paragraph><strong>注意：</strong>默认情况下，如果 <literal>tooltip</literal> 为空而选项卡文本发生了裁剪（选项卡无法完整显示所有字符），那么就会将标题作为工具提示显示。要隐藏工具提示，请将 <literal>tooltip</literal> 文本设置为 <literal>" "</literal>。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id9" names="主题属性说明">
            <title>主题属性说明</title>
            <target refid="class-tabbar-theme-color-drop-mark-color"></target>
            <paragraph classes="classref-themeproperty" ids="class-tabbar-theme-color-drop-mark-color" names="class_tabbar_theme_color_drop_mark_color"><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>drop_mark_color</strong> = <literal>Color(1, 1, 1, 1)</literal> <reference internal="True" refid="class-tabbar-theme-color-drop-mark-color"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refid="class-tabbar-theme-icon-drop-mark"><inline classes="std std-ref">drop_mark</inline></reference> 图标的调制颜色。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-theme-color-font-disabled-color"></target>
            <paragraph classes="classref-themeproperty" ids="class-tabbar-theme-color-font-disabled-color" names="class_tabbar_theme_color_font_disabled_color"><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>font_disabled_color</strong> = <literal>Color(0.875, 0.875, 0.875, 0.5)</literal> <reference internal="True" refid="class-tabbar-theme-color-font-disabled-color"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>禁用选项卡的字体颜色。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-theme-color-font-hovered-color"></target>
            <paragraph classes="classref-themeproperty" ids="class-tabbar-theme-color-font-hovered-color" names="class_tabbar_theme_color_font_hovered_color"><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>font_hovered_color</strong> = <literal>Color(0.95, 0.95, 0.95, 1)</literal> <reference internal="True" refid="class-tabbar-theme-color-font-hovered-color"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当前悬停选项卡的字体颜色。不适用于选中的选项卡。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-theme-color-font-outline-color"></target>
            <paragraph classes="classref-themeproperty" ids="class-tabbar-theme-color-font-outline-color" names="class_tabbar_theme_color_font_outline_color"><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>font_outline_color</strong> = <literal>Color(0, 0, 0, 1)</literal> <reference internal="True" refid="class-tabbar-theme-color-font-outline-color"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>选项卡名称的文本轮廓的色调。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-theme-color-font-selected-color"></target>
            <paragraph classes="classref-themeproperty" ids="class-tabbar-theme-color-font-selected-color" names="class_tabbar_theme_color_font_selected_color"><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>font_selected_color</strong> = <literal>Color(0.95, 0.95, 0.95, 1)</literal> <reference internal="True" refid="class-tabbar-theme-color-font-selected-color"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当前所选选项卡的字体颜色。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-theme-color-font-unselected-color"></target>
            <paragraph classes="classref-themeproperty" ids="class-tabbar-theme-color-font-unselected-color" names="class_tabbar_theme_color_font_unselected_color"><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>font_unselected_color</strong> = <literal>Color(0.7, 0.7, 0.7, 1)</literal> <reference internal="True" refid="class-tabbar-theme-color-font-unselected-color"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>其他未被选中的选项卡的字体颜色。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-theme-constant-h-separation"></target>
            <paragraph classes="classref-themeproperty" ids="class-tabbar-theme-constant-h-separation" names="class_tabbar_theme_constant_h_separation"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>h_separation</strong> = <literal>4</literal> <reference internal="True" refid="class-tabbar-theme-constant-h-separation"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>选项卡内元素之间的水平分隔。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-theme-constant-icon-max-width"></target>
            <paragraph classes="classref-themeproperty" ids="class-tabbar-theme-constant-icon-max-width" names="class_tabbar_theme_constant_icon_max_width"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>icon_max_width</strong> = <literal>0</literal> <reference internal="True" refid="class-tabbar-theme-constant-icon-max-width"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>选项卡图标所允许的最大宽度。这个限制应用在该图标默认大小之上，但是应用在 <reference internal="True" refid="class-tabbar-method-set-tab-icon-max-width"><inline classes="std std-ref">set_tab_icon_max_width</inline></reference> 所设置的值之前。高度会根据图标比例调整。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-theme-constant-outline-size"></target>
            <paragraph classes="classref-themeproperty" ids="class-tabbar-theme-constant-outline-size" names="class_tabbar_theme_constant_outline_size"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>outline_size</strong> = <literal>0</literal> <reference internal="True" refid="class-tabbar-theme-constant-outline-size"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>选项卡文字轮廓的大小。</paragraph>
            <paragraph><strong>注意：</strong>如果使用启用了 <reference internal="True" refuri="class_fontfile#class-fontfile-property-multichannel-signed-distance-field"><inline classes="std std-ref">FontFile.multichannel_signed_distance_field</inline></reference> 的字体，其 <reference internal="True" refuri="class_fontfile#class-fontfile-property-msdf-pixel-range"><inline classes="std std-ref">FontFile.msdf_pixel_range</inline></reference> 必须至少设置为 <reference internal="True" refid="class-tabbar-theme-constant-outline-size"><inline classes="std std-ref">outline_size</inline></reference> 的<emphasis>两倍</emphasis>，轮廓渲染才能看起来正确。否则，轮廓可能会比预期的更早被切断。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-theme-font-font"></target>
            <paragraph classes="classref-themeproperty" ids="class-tabbar-theme-font-font" names="class_tabbar_theme_font_font"><reference internal="True" refuri="class_font#class-font"><inline classes="std std-ref">Font</inline></reference> <strong>font</strong> <reference internal="True" refid="class-tabbar-theme-font-font"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>用于绘制选项卡名称的字体。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-theme-font-size-font-size"></target>
            <paragraph classes="classref-themeproperty" ids="class-tabbar-theme-font-size-font-size" names="class_tabbar_theme_font_size_font_size"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>font_size</strong> <reference internal="True" refid="class-tabbar-theme-font-size-font-size"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>选项卡名称的字体大小。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-theme-icon-close"></target>
            <paragraph classes="classref-themeproperty" ids="class-tabbar-theme-icon-close" names="class_tabbar_theme_icon_close"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>close</strong> <reference internal="True" refid="class-tabbar-theme-icon-close"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>关闭按钮的图标（见 <reference internal="True" refid="class-tabbar-property-tab-close-display-policy"><inline classes="std std-ref">tab_close_display_policy</inline></reference>）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-theme-icon-decrement"></target>
            <paragraph classes="classref-themeproperty" ids="class-tabbar-theme-icon-decrement" names="class_tabbar_theme_icon_decrement"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>decrement</strong> <reference internal="True" refid="class-tabbar-theme-icon-decrement"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>左边的箭头按钮的图标，当有太多的标签无法容纳在容器的宽度内时出现。当该按钮被禁用时（即第一个标签是可见的），它显示为半透明的。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-theme-icon-decrement-highlight"></target>
            <paragraph classes="classref-themeproperty" ids="class-tabbar-theme-icon-decrement-highlight" names="class_tabbar_theme_icon_decrement_highlight"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>decrement_highlight</strong> <reference internal="True" refid="class-tabbar-theme-icon-decrement-highlight"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当标签太多无法适应容器宽度时出现的左箭头按钮图标。当鼠标悬停在按钮上时使用。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-theme-icon-drop-mark"></target>
            <paragraph classes="classref-themeproperty" ids="class-tabbar-theme-icon-drop-mark" names="class_tabbar_theme_icon_drop_mark"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>drop_mark</strong> <reference internal="True" refid="class-tabbar-theme-icon-drop-mark"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>图标，用于指示拖动的选项卡将被放置到哪里（见 <reference internal="True" refid="class-tabbar-property-drag-to-rearrange-enabled"><inline classes="std std-ref">drag_to_rearrange_enabled</inline></reference>）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-theme-icon-increment"></target>
            <paragraph classes="classref-themeproperty" ids="class-tabbar-theme-icon-increment" names="class_tabbar_theme_icon_increment"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>increment</strong> <reference internal="True" refid="class-tabbar-theme-icon-increment"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>右箭头按钮的图标，当有太多的标签无法容纳在容器的宽度内时出现。当该按钮被禁用时（即最后一个标签是可见的），它显示为半透明的。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-theme-icon-increment-highlight"></target>
            <paragraph classes="classref-themeproperty" ids="class-tabbar-theme-icon-increment-highlight" names="class_tabbar_theme_icon_increment_highlight"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>increment_highlight</strong> <reference internal="True" refid="class-tabbar-theme-icon-increment-highlight"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当标签太多无法适应容器宽度时出现的右箭头按钮图标。当鼠标悬停在按钮上时使用。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-theme-style-button-highlight"></target>
            <paragraph classes="classref-themeproperty" ids="class-tabbar-theme-style-button-highlight" names="class_tabbar_theme_style_button_highlight"><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference> <strong>button_highlight</strong> <reference internal="True" refid="class-tabbar-theme-style-button-highlight"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>选项卡和关闭按钮的背景，处于鼠标悬停状态时使用。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-theme-style-button-pressed"></target>
            <paragraph classes="classref-themeproperty" ids="class-tabbar-theme-style-button-pressed" names="class_tabbar_theme_style_button_pressed"><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference> <strong>button_pressed</strong> <reference internal="True" refid="class-tabbar-theme-style-button-pressed"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>选项卡和关闭按钮的背景，处于按下状态时使用。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-theme-style-tab-disabled"></target>
            <paragraph classes="classref-themeproperty" ids="class-tabbar-theme-style-tab-disabled" names="class_tabbar_theme_style_tab_disabled"><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference> <strong>tab_disabled</strong> <reference internal="True" refid="class-tabbar-theme-style-tab-disabled"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>选项卡处于禁用状态时的样式。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-theme-style-tab-focus"></target>
            <paragraph classes="classref-themeproperty" ids="class-tabbar-theme-style-tab-focus" names="class_tabbar_theme_style_tab_focus"><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference> <strong>tab_focus</strong> <reference internal="True" refid="class-tabbar-theme-style-tab-focus"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>该 <strong>TabBar</strong> 处于聚焦状态时使用的 <reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference>。<reference internal="True" refid="class-tabbar-theme-style-tab-focus"><inline classes="std std-ref">tab_focus</inline></reference> <reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference> 显示在基础 <reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference> <emphasis>之上</emphasis>，所以应该使用部分透明的 <reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference>，确保基础 <reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference> 仍然可见。代表轮廓或下划线的 <reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference> 可以很好地实现这个目的。要禁用聚焦的视觉效果，请指定 <reference internal="True" refuri="class_styleboxempty#class-styleboxempty"><inline classes="std std-ref">StyleBoxEmpty</inline></reference> 资源。请注意，禁用聚焦的视觉效果会影响使用键盘/手柄进行导航的可用性，所以出于可访问性的原因，不建议这样做。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-theme-style-tab-hovered"></target>
            <paragraph classes="classref-themeproperty" ids="class-tabbar-theme-style-tab-hovered" names="class_tabbar_theme_style_tab_hovered"><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference> <strong>tab_hovered</strong> <reference internal="True" refid="class-tabbar-theme-style-tab-hovered"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当前悬停选项卡的样式。不适用于选择的选项卡。</paragraph>
            <paragraph><strong>注意：</strong>该样式将以至少与 <reference internal="True" refid="class-tabbar-theme-style-tab-unselected"><inline classes="std std-ref">tab_unselected</inline></reference> 相同的宽度绘制。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-theme-style-tab-selected"></target>
            <paragraph classes="classref-themeproperty" ids="class-tabbar-theme-style-tab-selected" names="class_tabbar_theme_style_tab_selected"><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference> <strong>tab_selected</strong> <reference internal="True" refid="class-tabbar-theme-style-tab-selected"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当前选中的选项卡的样式。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tabbar-theme-style-tab-unselected"></target>
            <paragraph classes="classref-themeproperty" ids="class-tabbar-theme-style-tab-unselected" names="class_tabbar_theme_style_tab_unselected"><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference> <strong>tab_unselected</strong> <reference internal="True" refid="class-tabbar-theme-style-tab-unselected"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>其他未被选中的选项卡的样式。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_gridmap.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <meta content="tilemap" name="keywords">
    </meta>
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/modules/gridmap/doc_classes/GridMap.xml.</comment>
    <target refid="class-gridmap"></target>
    <section ids="gridmap class-gridmap" names="gridmap class_gridmap">
        <title>GridMap</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_node3d#class-node3d"><inline classes="std std-ref">Node3D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>基于 3D 图块地图的节点。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>GridMap 允许以交互的方式将网格放置在栅格上。它在编辑器和脚本中均可使用，可帮助创建游戏内的关卡编辑器。</paragraph>
            <paragraph>GridMap 使用一个包含图块列表的 <reference internal="True" refuri="class_meshlibrary#class-meshlibrary"><inline classes="std std-ref">MeshLibrary</inline></reference>。每个图块都是一个带有材质的网格以及可选的碰撞和导航形状。</paragraph>
            <paragraph>GridMap 包含一组单元格。每个栅格单元格引用 <reference internal="True" refuri="class_meshlibrary#class-meshlibrary"><inline classes="std std-ref">MeshLibrary</inline></reference> 中的一个图块。地图中的所有单元格都具有相同的大小。</paragraph>
            <paragraph>在内部，GridMap 会根据卦限进行拆分，形成卦限的稀疏合集，能够进行高效的渲染和物理处理。每个卦限的大小是相同的，可以包含多个单元格。</paragraph>
            <paragraph><strong>注意：</strong>GridMap 不是从 <reference internal="True" refuri="class_visualinstance3d#class-visualinstance3d"><inline classes="std std-ref">VisualInstance3D</inline></reference> 扩展的，因此不能基于 <reference internal="True" refuri="class_visualinstance3d#class-visualinstance3d-property-layers"><inline classes="std std-ref">VisualInstance3D.layers</inline></reference> 隐藏或剔除掩码。如果使灯光不影响第一层，则整个 GridMap 将不会被该灯光照亮。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference internal="True" refuri="../tutorials/3d/using_gridmaps"><inline classes="doc">使用网格地图</inline></reference></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference name="3D 平台跳跃演示" refuri="https://godotengine.org/asset-library/asset/2748">3D 平台跳跃演示</reference></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference name="3D 动力学角色演示" refuri="https://godotengine.org/asset-library/asset/2739">3D 动力学角色演示</reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="47"></colspec>
                    <colspec colwidth="70"></colspec>
                    <colspec colwidth="22"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gridmap-property-bake-navigation"><inline classes="std std-ref">bake_navigation</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gridmap-property-cell-center-x"><inline classes="std std-ref">cell_center_x</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gridmap-property-cell-center-y"><inline classes="std std-ref">cell_center_y</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gridmap-property-cell-center-z"><inline classes="std std-ref">cell_center_z</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gridmap-property-cell-octant-size"><inline classes="std std-ref">cell_octant_size</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>8</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gridmap-property-cell-scale"><inline classes="std std-ref">cell_scale</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gridmap-property-cell-size"><inline classes="std std-ref">cell_size</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Vector3(2, 2, 2)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gridmap-property-collision-layer"><inline classes="std std-ref">collision_layer</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gridmap-property-collision-mask"><inline classes="std std-ref">collision_mask</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gridmap-property-collision-priority"><inline classes="std std-ref">collision_priority</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_meshlibrary#class-meshlibrary"><inline classes="std std-ref">MeshLibrary</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gridmap-property-mesh-library"><inline classes="std std-ref">mesh_library</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_physicsmaterial#class-physicsmaterial"><inline classes="std std-ref">PhysicsMaterial</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gridmap-property-physics-material"><inline classes="std std-ref">physics_material</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id4" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="62"></colspec>
                    <colspec colwidth="181"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gridmap-method-clear"><inline classes="std std-ref">clear</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gridmap-method-clear-baked-meshes"><inline classes="std std-ref">clear_baked_meshes</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gridmap-method-get-bake-mesh-instance"><inline classes="std std-ref">get_bake_mesh_instance</inline></reference>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gridmap-method-get-bake-meshes"><inline classes="std std-ref">get_bake_meshes</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_basis#class-basis"><inline classes="std std-ref">Basis</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gridmap-method-get-basis-with-orthogonal-index"><inline classes="std std-ref">get_basis_with_orthogonal_index</inline></reference>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gridmap-method-get-cell-item"><inline classes="std std-ref">get_cell_item</inline></reference>(position: <reference internal="True" refuri="class_vector3i#class-vector3i"><inline classes="std std-ref">Vector3i</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_basis#class-basis"><inline classes="std std-ref">Basis</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gridmap-method-get-cell-item-basis"><inline classes="std std-ref">get_cell_item_basis</inline></reference>(position: <reference internal="True" refuri="class_vector3i#class-vector3i"><inline classes="std std-ref">Vector3i</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gridmap-method-get-cell-item-orientation"><inline classes="std std-ref">get_cell_item_orientation</inline></reference>(position: <reference internal="True" refuri="class_vector3i#class-vector3i"><inline classes="std std-ref">Vector3i</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gridmap-method-get-collision-layer-value"><inline classes="std std-ref">get_collision_layer_value</inline></reference>(layer_number: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gridmap-method-get-collision-mask-value"><inline classes="std std-ref">get_collision_mask_value</inline></reference>(layer_number: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gridmap-method-get-meshes"><inline classes="std std-ref">get_meshes</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gridmap-method-get-navigation-map"><inline classes="std std-ref">get_navigation_map</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gridmap-method-get-orthogonal-index-from-basis"><inline classes="std std-ref">get_orthogonal_index_from_basis</inline></reference>(basis: <reference internal="True" refuri="class_basis#class-basis"><inline classes="std std-ref">Basis</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_vector3i#class-vector3i"><inline classes="std std-ref">Vector3i</inline></reference>]</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gridmap-method-get-used-cells"><inline classes="std std-ref">get_used_cells</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_vector3i#class-vector3i"><inline classes="std std-ref">Vector3i</inline></reference>]</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gridmap-method-get-used-cells-by-item"><inline classes="std std-ref">get_used_cells_by_item</inline></reference>(item: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector3i#class-vector3i"><inline classes="std std-ref">Vector3i</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gridmap-method-local-to-map"><inline classes="std std-ref">local_to_map</inline></reference>(local_position: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gridmap-method-make-baked-meshes"><inline classes="std std-ref">make_baked_meshes</inline></reference>(gen_lightmap_uv: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = false, lightmap_uv_texel_size: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> = 0.1)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gridmap-method-map-to-local"><inline classes="std std-ref">map_to_local</inline></reference>(map_position: <reference internal="True" refuri="class_vector3i#class-vector3i"><inline classes="std std-ref">Vector3i</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gridmap-method-resource-changed"><inline classes="std std-ref">resource_changed</inline></reference>(resource: <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gridmap-method-set-cell-item"><inline classes="std std-ref">set_cell_item</inline></reference>(position: <reference internal="True" refuri="class_vector3i#class-vector3i"><inline classes="std std-ref">Vector3i</inline></reference>, item: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, orientation: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> = 0)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gridmap-method-set-collision-layer-value"><inline classes="std std-ref">set_collision_layer_value</inline></reference>(layer_number: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gridmap-method-set-collision-mask-value"><inline classes="std std-ref">set_collision_mask_value</inline></reference>(layer_number: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gridmap-method-set-navigation-map"><inline classes="std std-ref">set_navigation_map</inline></reference>(navigation_map: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>)</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="信号">
            <title>信号</title>
            <target refid="class-gridmap-signal-cell-size-changed"></target>
            <paragraph classes="classref-signal" ids="class-gridmap-signal-cell-size-changed" names="class_gridmap_signal_cell_size_changed"><strong>cell_size_changed</strong>(cell_size: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>) <reference internal="True" refid="class-gridmap-signal-cell-size-changed"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当 <reference internal="True" refid="class-gridmap-property-cell-size"><inline classes="std std-ref">cell_size</inline></reference> 改变时触发。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gridmap-signal-changed"></target>
            <paragraph classes="classref-signal" ids="class-gridmap-signal-changed" names="class_gridmap_signal_changed"><strong>changed</strong>() <reference internal="True" refid="class-gridmap-signal-changed"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>该 GridMap 的 <reference internal="True" refuri="class_meshlibrary#class-meshlibrary"><inline classes="std std-ref">MeshLibrary</inline></reference> 发生改变时发出。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="常量">
            <title>常量</title>
            <target refid="class-gridmap-constant-invalid-cell-item"></target>
            <paragraph classes="classref-constant" ids="class-gridmap-constant-invalid-cell-item" names="class_gridmap_constant_invalid_cell_item"><strong>INVALID_CELL_ITEM</strong> = <literal>-1</literal> <reference internal="True" refid="class-gridmap-constant-invalid-cell-item"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>可以在 <reference internal="True" refid="class-gridmap-method-set-cell-item"><inline classes="std std-ref">set_cell_item</inline></reference> 中清除单元格（或在 <reference internal="True" refid="class-gridmap-method-get-cell-item"><inline classes="std std-ref">get_cell_item</inline></reference> 中重新代表一个空的单元格）的无效单元格。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id7" names="属性说明">
            <title>属性说明</title>
            <target refid="class-gridmap-property-bake-navigation"></target>
            <paragraph classes="classref-property" ids="class-gridmap-property-bake-navigation" names="class_gridmap_property_bake_navigation"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>bake_navigation</strong> = <literal>false</literal> <reference internal="True" refid="class-gridmap-property-bake-navigation"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_bake_navigation</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_baking_navigation</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则为每个使用带有导航网格的 <reference internal="True" refid="class-gridmap-property-mesh-library"><inline classes="std std-ref">mesh_library</inline></reference> 项目的单元格，该 GridMap 将创建一个导航区域。创建的导航区域将使用分配给该 <reference internal="True" refuri="class_meshlibrary#class-meshlibrary"><inline classes="std std-ref">MeshLibrary</inline></reference> 项目的导航层位掩码。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gridmap-property-cell-center-x"></target>
            <paragraph classes="classref-property" ids="class-gridmap-property-cell-center-x" names="class_gridmap_property_cell_center_x"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>cell_center_x</strong> = <literal>true</literal> <reference internal="True" refid="class-gridmap-property-cell-center-x"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_center_x</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_center_x</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则网格项以 X 轴为中心。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gridmap-property-cell-center-y"></target>
            <paragraph classes="classref-property" ids="class-gridmap-property-cell-center-y" names="class_gridmap_property_cell_center_y"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>cell_center_y</strong> = <literal>true</literal> <reference internal="True" refid="class-gridmap-property-cell-center-y"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_center_y</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_center_y</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则网格项以 Y 轴为中心。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gridmap-property-cell-center-z"></target>
            <paragraph classes="classref-property" ids="class-gridmap-property-cell-center-z" names="class_gridmap_property_cell_center_z"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>cell_center_z</strong> = <literal>true</literal> <reference internal="True" refid="class-gridmap-property-cell-center-z"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_center_z</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_center_z</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则网格项以 Z 轴为中心。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gridmap-property-cell-octant-size"></target>
            <paragraph classes="classref-property" ids="class-gridmap-property-cell-octant-size" names="class_gridmap_property_cell_octant_size"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>cell_octant_size</strong> = <literal>8</literal> <reference internal="True" refid="class-gridmap-property-cell-octant-size"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_octant_size</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_octant_size</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>每个卦限的大小，单位为单元格的数量。适用于全部三个轴。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gridmap-property-cell-scale"></target>
            <paragraph classes="classref-property" ids="class-gridmap-property-cell-scale" names="class_gridmap_property_cell_scale"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>cell_scale</strong> = <literal>1.0</literal> <reference internal="True" refid="class-gridmap-property-cell-scale"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_cell_scale</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_cell_scale</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>单元格项目的比例。</paragraph>
            <paragraph>这不会影响网格单元本身的大小，只会影响其中的项目。这可用于使单元格项目与其邻居重叠。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gridmap-property-cell-size"></target>
            <paragraph classes="classref-property" ids="class-gridmap-property-cell-size" names="class_gridmap_property_cell_size"><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> <strong>cell_size</strong> = <literal>Vector3(2, 2, 2)</literal> <reference internal="True" refid="class-gridmap-property-cell-size"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_cell_size</strong>(value: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> <strong>get_cell_size</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>网格单元的尺寸。</paragraph>
            <paragraph>这并不影响网格的尺寸大小。见 <reference internal="True" refid="class-gridmap-property-cell-scale"><inline classes="std std-ref">cell_scale</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gridmap-property-collision-layer"></target>
            <paragraph classes="classref-property" ids="class-gridmap-property-collision-layer" names="class_gridmap_property_collision_layer"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>collision_layer</strong> = <literal>1</literal> <reference internal="True" refid="class-gridmap-property-collision-layer"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_collision_layer</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_collision_layer</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>这个 GridMap 所处的物理层。</paragraph>
            <paragraph>GridMap 作为静态体，意味着它们不会受到重力或是其他力的影响。它们只会受到其他与它们碰撞的物理体的影响。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gridmap-property-collision-mask"></target>
            <paragraph classes="classref-property" ids="class-gridmap-property-collision-mask" names="class_gridmap_property_collision_mask"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>collision_mask</strong> = <literal>1</literal> <reference internal="True" refid="class-gridmap-property-collision-mask"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_collision_mask</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_collision_mask</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>此 GridMap 检测碰撞的物理层。更多信息请参阅文档<reference name="《碰撞层与掩码》" refuri="../tutorials/physics/physics_introduction.html#collision-layers-and-masks">《碰撞层与掩码》</reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gridmap-property-collision-priority"></target>
            <paragraph classes="classref-property" ids="class-gridmap-property-collision-priority" names="class_gridmap_property_collision_priority"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>collision_priority</strong> = <literal>1.0</literal> <reference internal="True" refid="class-gridmap-property-collision-priority"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_collision_priority</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_collision_priority</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>发生穿透时用于解决碰撞的优先级。优先级越高，对物体的穿透度就越低。例如，可以用来防止玩家突破关卡的边界。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gridmap-property-mesh-library"></target>
            <paragraph classes="classref-property" ids="class-gridmap-property-mesh-library" names="class_gridmap_property_mesh_library"><reference internal="True" refuri="class_meshlibrary#class-meshlibrary"><inline classes="std std-ref">MeshLibrary</inline></reference> <strong>mesh_library</strong> <reference internal="True" refid="class-gridmap-property-mesh-library"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_mesh_library</strong>(value: <reference internal="True" refuri="class_meshlibrary#class-meshlibrary"><inline classes="std std-ref">MeshLibrary</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_meshlibrary#class-meshlibrary"><inline classes="std std-ref">MeshLibrary</inline></reference> <strong>get_mesh_library</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>指定的 <reference internal="True" refuri="class_meshlibrary#class-meshlibrary"><inline classes="std std-ref">MeshLibrary</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gridmap-property-physics-material"></target>
            <paragraph classes="classref-property" ids="class-gridmap-property-physics-material" names="class_gridmap_property_physics_material"><reference internal="True" refuri="class_physicsmaterial#class-physicsmaterial"><inline classes="std std-ref">PhysicsMaterial</inline></reference> <strong>physics_material</strong> <reference internal="True" refid="class-gridmap-property-physics-material"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_physics_material</strong>(value: <reference internal="True" refuri="class_physicsmaterial#class-physicsmaterial"><inline classes="std std-ref">PhysicsMaterial</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_physicsmaterial#class-physicsmaterial"><inline classes="std std-ref">PhysicsMaterial</inline></reference> <strong>get_physics_material</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>覆盖整个 <strong>GridMap</strong> 的默认摩擦力和反弹物理属性。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id8" names="方法说明">
            <title>方法说明</title>
            <target refid="class-gridmap-method-clear"></target>
            <paragraph classes="classref-method" ids="class-gridmap-method-clear" names="class_gridmap_method_clear"><abbreviation explanation="无返回值。">void</abbreviation> <strong>clear</strong>() <reference internal="True" refid="class-gridmap-method-clear"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>清除所有单元格。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gridmap-method-clear-baked-meshes"></target>
            <paragraph classes="classref-method" ids="class-gridmap-method-clear-baked-meshes" names="class_gridmap_method_clear_baked_meshes"><abbreviation explanation="无返回值。">void</abbreviation> <strong>clear_baked_meshes</strong>() <reference internal="True" refid="class-gridmap-method-clear-baked-meshes"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>清除所有烘焙过的网格。见 <reference internal="True" refid="class-gridmap-method-make-baked-meshes"><inline classes="std std-ref">make_baked_meshes</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gridmap-method-get-bake-mesh-instance"></target>
            <paragraph classes="classref-method" ids="class-gridmap-method-get-bake-mesh-instance" names="class_gridmap_method_get_bake_mesh_instance"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>get_bake_mesh_instance</strong>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-gridmap-method-get-bake-mesh-instance"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回是否存在带有给定 ID 的节点。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gridmap-method-get-bake-meshes"></target>
            <paragraph classes="classref-method" ids="class-gridmap-method-get-bake-meshes" names="class_gridmap_method_get_bake_meshes"><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference> <strong>get_bake_meshes</strong>() <reference internal="True" refid="class-gridmap-method-get-bake-meshes"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回当前 GridMap 中存在的所有烘焙网格的 <reference internal="True" refuri="class_arraymesh#class-arraymesh"><inline classes="std std-ref">ArrayMesh</inline></reference> 和 <reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference> 引用的数组。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gridmap-method-get-basis-with-orthogonal-index"></target>
            <paragraph classes="classref-method" ids="class-gridmap-method-get-basis-with-orthogonal-index" names="class_gridmap_method_get_basis_with_orthogonal_index"><reference internal="True" refuri="class_basis#class-basis"><inline classes="std std-ref">Basis</inline></reference> <strong>get_basis_with_orthogonal_index</strong>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-gridmap-method-get-basis-with-orthogonal-index"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回沿向量 (x,y,z) 的 24 种可能旋转中的一种，每个分量为 -1、0 或 1。有关详细信息，请参阅 Godot 源代码。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gridmap-method-get-cell-item"></target>
            <paragraph classes="classref-method" ids="class-gridmap-method-get-cell-item" names="class_gridmap_method_get_cell_item"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_cell_item</strong>(position: <reference internal="True" refuri="class_vector3i#class-vector3i"><inline classes="std std-ref">Vector3i</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-gridmap-method-get-cell-item"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>位于给定栅格坐标的 <reference internal="True" refuri="class_meshlibrary#class-meshlibrary"><inline classes="std std-ref">MeshLibrary</inline></reference> 项目的索引。如果单元格为空，则将返回 <reference internal="True" refid="class-gridmap-constant-invalid-cell-item"><inline classes="std std-ref">INVALID_CELL_ITEM</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gridmap-method-get-cell-item-basis"></target>
            <paragraph classes="classref-method" ids="class-gridmap-method-get-cell-item-basis" names="class_gridmap_method_get_cell_item_basis"><reference internal="True" refuri="class_basis#class-basis"><inline classes="std std-ref">Basis</inline></reference> <strong>get_cell_item_basis</strong>(position: <reference internal="True" refuri="class_vector3i#class-vector3i"><inline classes="std std-ref">Vector3i</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-gridmap-method-get-cell-item-basis"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回为指定单元格提供方向的基。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gridmap-method-get-cell-item-orientation"></target>
            <paragraph classes="classref-method" ids="class-gridmap-method-get-cell-item-orientation" names="class_gridmap_method_get_cell_item_orientation"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_cell_item_orientation</strong>(position: <reference internal="True" refuri="class_vector3i#class-vector3i"><inline classes="std std-ref">Vector3i</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-gridmap-method-get-cell-item-orientation"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>给定栅格坐标处的单元格的方向。如果该单元格为空，则返回 <literal>-1</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gridmap-method-get-collision-layer-value"></target>
            <paragraph classes="classref-method" ids="class-gridmap-method-get-collision-layer-value" names="class_gridmap_method_get_collision_layer_value"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_collision_layer_value</strong>(layer_number: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-gridmap-method-get-collision-layer-value"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回 <reference internal="True" refid="class-gridmap-property-collision-layer"><inline classes="std std-ref">collision_layer</inline></reference> 中是否启用了指定的层，给定的 <literal>layer_number</literal> 应在 1 和 32 之间。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gridmap-method-get-collision-mask-value"></target>
            <paragraph classes="classref-method" ids="class-gridmap-method-get-collision-mask-value" names="class_gridmap_method_get_collision_mask_value"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_collision_mask_value</strong>(layer_number: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-gridmap-method-get-collision-mask-value"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回 <reference internal="True" refid="class-gridmap-property-collision-mask"><inline classes="std std-ref">collision_mask</inline></reference> 中是否启用了指定的层，给定的 <literal>layer_number</literal> 应在 1 和 32 之间。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gridmap-method-get-meshes"></target>
            <paragraph classes="classref-method" ids="class-gridmap-method-get-meshes" names="class_gridmap_method_get_meshes"><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference> <strong>get_meshes</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-gridmap-method-get-meshes"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回对应于栅格中非空单元格的 <reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference> 和 <reference internal="True" refuri="class_mesh#class-mesh"><inline classes="std std-ref">Mesh</inline></reference> 引用的数组。变换在局部空间中指定。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gridmap-method-get-navigation-map"></target>
            <paragraph classes="classref-method" ids="class-gridmap-method-get-navigation-map" names="class_gridmap_method_get_navigation_map"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>get_navigation_map</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-gridmap-method-get-navigation-map"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回该 GridMap 节点用于其单元格烘焙导航网格的导航地图的 <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>。</paragraph>
            <paragraph>该函数始终返回在 GridMap 节点上设置的地图，而不是 NavigationServer 上的地图。如果直接使用 NavigationServer API 更改地图，则 GridMap 节点将不会感知到地图的更改。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gridmap-method-get-orthogonal-index-from-basis"></target>
            <paragraph classes="classref-method" ids="class-gridmap-method-get-orthogonal-index-from-basis" names="class_gridmap_method_get_orthogonal_index_from_basis"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_orthogonal_index_from_basis</strong>(basis: <reference internal="True" refuri="class_basis#class-basis"><inline classes="std std-ref">Basis</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-gridmap-method-get-orthogonal-index-from-basis"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>该函数考虑将旋转离散化为单位球体上的 24 个点，沿向量 (x,y,z) 放置，每个分量为 -1、0 或 1，并返回索引（在 0 到 23 的范围内 ) 最能代表物体方向的点。 有关详细信息，请参阅 Godot 源代码。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gridmap-method-get-used-cells"></target>
            <paragraph classes="classref-method" ids="class-gridmap-method-get-used-cells" names="class_gridmap_method_get_used_cells"><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_vector3i#class-vector3i"><inline classes="std std-ref">Vector3i</inline></reference>] <strong>get_used_cells</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-gridmap-method-get-used-cells"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回一个包含网格中非空单元格坐标的 <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> 数组。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gridmap-method-get-used-cells-by-item"></target>
            <paragraph classes="classref-method" ids="class-gridmap-method-get-used-cells-by-item" names="class_gridmap_method_get_used_cells_by_item"><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_vector3i#class-vector3i"><inline classes="std std-ref">Vector3i</inline></reference>] <strong>get_used_cells_by_item</strong>(item: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-gridmap-method-get-used-cells-by-item"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回所有具有 <literal>item</literal> 中指定的项目索引的单元格的数组。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gridmap-method-local-to-map"></target>
            <paragraph classes="classref-method" ids="class-gridmap-method-local-to-map" names="class_gridmap_method_local_to_map"><reference internal="True" refuri="class_vector3i#class-vector3i"><inline classes="std std-ref">Vector3i</inline></reference> <strong>local_to_map</strong>(local_position: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-gridmap-method-local-to-map"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回包含给定 <literal>local_position</literal> 的单元格的地图坐标。如果 <literal>local_position</literal> 在全局坐标中，请考虑在将其传递给该方法之前使用 <reference internal="True" refuri="class_node3d#class-node3d-method-to-local"><inline classes="std std-ref">Node3D.to_local</inline></reference>。另请参阅 <reference internal="True" refid="class-gridmap-method-map-to-local"><inline classes="std std-ref">map_to_local</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gridmap-method-make-baked-meshes"></target>
            <paragraph classes="classref-method" ids="class-gridmap-method-make-baked-meshes" names="class_gridmap_method_make_baked_meshes"><abbreviation explanation="无返回值。">void</abbreviation> <strong>make_baked_meshes</strong>(gen_lightmap_uv: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = false, lightmap_uv_texel_size: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> = 0.1) <reference internal="True" refid="class-gridmap-method-make-baked-meshes"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>为指定的 <reference internal="True" refuri="class_meshlibrary#class-meshlibrary"><inline classes="std std-ref">MeshLibrary</inline></reference> 中的所有网格烘焙光照贴图数据。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gridmap-method-map-to-local"></target>
            <paragraph classes="classref-method" ids="class-gridmap-method-map-to-local" names="class_gridmap_method_map_to_local"><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> <strong>map_to_local</strong>(map_position: <reference internal="True" refuri="class_vector3i#class-vector3i"><inline classes="std std-ref">Vector3i</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-gridmap-method-map-to-local"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Returns the position of a grid cell in the GridMap's local coordinate space. To convert the returned value into global coordinates, use <reference internal="True" refuri="class_node3d#class-node3d-method-to-global"><inline classes="std std-ref">Node3D.to_global</inline></reference>. See also <reference internal="True" refid="class-gridmap-method-local-to-map"><inline classes="std std-ref">local_to_map</inline></reference>.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gridmap-method-resource-changed"></target>
            <paragraph classes="classref-method" ids="class-gridmap-method-resource-changed" names="class_gridmap_method_resource_changed"><abbreviation explanation="无返回值。">void</abbreviation> <strong>resource_changed</strong>(resource: <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference>) <reference internal="True" refid="class-gridmap-method-resource-changed"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><strong>已弃用：</strong> Use <reference internal="True" refuri="class_resource#class-resource-signal-changed"><inline classes="std std-ref">Resource.changed</inline></reference> instead.</paragraph>
            <paragraph>这个方法什么也不做。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gridmap-method-set-cell-item"></target>
            <paragraph classes="classref-method" ids="class-gridmap-method-set-cell-item" names="class_gridmap_method_set_cell_item"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_cell_item</strong>(position: <reference internal="True" refuri="class_vector3i#class-vector3i"><inline classes="std std-ref">Vector3i</inline></reference>, item: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, orientation: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> = 0) <reference internal="True" refid="class-gridmap-method-set-cell-item"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置由其栅格坐标引用的单元格的网格索引。</paragraph>
            <paragraph>诸如 <reference internal="True" refid="class-gridmap-constant-invalid-cell-item"><inline classes="std std-ref">INVALID_CELL_ITEM</inline></reference> 之类的负的项目索引将清除该单元格。</paragraph>
            <paragraph>可选地，可以传入该项目的方向。有关有效的方向值，请参阅 <reference internal="True" refid="class-gridmap-method-get-orthogonal-index-from-basis"><inline classes="std std-ref">get_orthogonal_index_from_basis</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gridmap-method-set-collision-layer-value"></target>
            <paragraph classes="classref-method" ids="class-gridmap-method-set-collision-layer-value" names="class_gridmap_method_set_collision_layer_value"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_collision_layer_value</strong>(layer_number: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <reference internal="True" refid="class-gridmap-method-set-collision-layer-value"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>根据 <literal>value</literal>，启用或禁用 <reference internal="True" refid="class-gridmap-property-collision-layer"><inline classes="std std-ref">collision_layer</inline></reference> 中指定的层，给定的 <literal>layer_number</literal> 应在 1 和 32 之间。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gridmap-method-set-collision-mask-value"></target>
            <paragraph classes="classref-method" ids="class-gridmap-method-set-collision-mask-value" names="class_gridmap_method_set_collision_mask_value"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_collision_mask_value</strong>(layer_number: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <reference internal="True" refid="class-gridmap-method-set-collision-mask-value"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>根据 <literal>value</literal>，启用或禁用 <reference internal="True" refid="class-gridmap-property-collision-mask"><inline classes="std std-ref">collision_mask</inline></reference> 中指定的层，给定的 <literal>layer_number</literal> 应在 1 和 32 之间。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gridmap-method-set-navigation-map"></target>
            <paragraph classes="classref-method" ids="class-gridmap-method-set-navigation-map" names="class_gridmap_method_set_navigation_map"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_navigation_map</strong>(navigation_map: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <reference internal="True" refid="class-gridmap-method-set-navigation-map"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置该导航地图的 <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>，该 GridMap 节点应该用于其单元格烘焙导航网格。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

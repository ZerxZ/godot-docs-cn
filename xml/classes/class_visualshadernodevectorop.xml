<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_visualshadernodevectorop.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/VisualShaderNodeVectorOp.xml.</comment>
    <target refid="class-visualshadernodevectorop"></target>
    <section ids="visualshadernodevectorop class-visualshadernodevectorop" names="visualshadernodevectorop class_visualshadernodevectorop">
        <title>VisualShaderNodeVectorOp</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_visualshadernodevectorbase#class-visualshadernodevectorbase"><inline classes="std std-ref">VisualShaderNodeVectorBase</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_visualshadernode#class-visualshadernode"><inline classes="std std-ref">VisualShaderNode</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>在可视化着色器图中使用的向量运算符。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>用于使用向量运算符的可视化着色器节点。对向量<literal>a</literal>和向量<literal>b</literal>进行操作。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="57"></colspec>
                    <colspec colwidth="67"></colspec>
                    <colspec colwidth="7"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-visualshadernodevectorop-operator"><inline classes="std std-ref">Operator</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-visualshadernodevectorop-property-operator"><inline classes="std std-ref">operator</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="枚举">
            <title>枚举</title>
            <target refid="enum-visualshadernodevectorop-operator"></target>
            <paragraph classes="classref-enumeration" ids="enum-visualshadernodevectorop-operator" names="enum_visualshadernodevectorop_operator">enum <strong>Operator</strong>: <reference internal="True" refid="enum-visualshadernodevectorop-operator"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-visualshadernodevectorop-constant-op-add"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-visualshadernodevectorop-constant-op-add" names="class_visualshadernodevectorop_constant_op_add"><reference internal="True" refid="enum-visualshadernodevectorop-operator"><inline classes="std std-ref">Operator</inline></reference> <strong>OP_ADD</strong> = <literal>0</literal></paragraph>
            <paragraph>将两个向量相加。</paragraph>
            <target refid="class-visualshadernodevectorop-constant-op-sub"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-visualshadernodevectorop-constant-op-sub" names="class_visualshadernodevectorop_constant_op_sub"><reference internal="True" refid="enum-visualshadernodevectorop-operator"><inline classes="std std-ref">Operator</inline></reference> <strong>OP_SUB</strong> = <literal>1</literal></paragraph>
            <paragraph>从一个向量中减去一个向量。</paragraph>
            <target refid="class-visualshadernodevectorop-constant-op-mul"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-visualshadernodevectorop-constant-op-mul" names="class_visualshadernodevectorop_constant_op_mul"><reference internal="True" refid="enum-visualshadernodevectorop-operator"><inline classes="std std-ref">Operator</inline></reference> <strong>OP_MUL</strong> = <literal>2</literal></paragraph>
            <paragraph>将两个向量相乘。</paragraph>
            <target refid="class-visualshadernodevectorop-constant-op-div"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-visualshadernodevectorop-constant-op-div" names="class_visualshadernodevectorop_constant_op_div"><reference internal="True" refid="enum-visualshadernodevectorop-operator"><inline classes="std std-ref">Operator</inline></reference> <strong>OP_DIV</strong> = <literal>3</literal></paragraph>
            <paragraph>将向量除以向量。</paragraph>
            <target refid="class-visualshadernodevectorop-constant-op-mod"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-visualshadernodevectorop-constant-op-mod" names="class_visualshadernodevectorop_constant_op_mod"><reference internal="True" refid="enum-visualshadernodevectorop-operator"><inline classes="std std-ref">Operator</inline></reference> <strong>OP_MOD</strong> = <literal>4</literal></paragraph>
            <paragraph>返回两个向量的余数。</paragraph>
            <target refid="class-visualshadernodevectorop-constant-op-pow"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-visualshadernodevectorop-constant-op-pow" names="class_visualshadernodevectorop_constant_op_pow"><reference internal="True" refid="enum-visualshadernodevectorop-operator"><inline classes="std std-ref">Operator</inline></reference> <strong>OP_POW</strong> = <literal>5</literal></paragraph>
            <paragraph>返回第一个参数的值提高到第二个参数的幂，对于向量的每个分量。</paragraph>
            <target refid="class-visualshadernodevectorop-constant-op-max"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-visualshadernodevectorop-constant-op-max" names="class_visualshadernodevectorop_constant_op_max"><reference internal="True" refid="enum-visualshadernodevectorop-operator"><inline classes="std std-ref">Operator</inline></reference> <strong>OP_MAX</strong> = <literal>6</literal></paragraph>
            <paragraph>对于向量的每个分量，返回两个值中的较大值。</paragraph>
            <target refid="class-visualshadernodevectorop-constant-op-min"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-visualshadernodevectorop-constant-op-min" names="class_visualshadernodevectorop_constant_op_min"><reference internal="True" refid="enum-visualshadernodevectorop-operator"><inline classes="std std-ref">Operator</inline></reference> <strong>OP_MIN</strong> = <literal>7</literal></paragraph>
            <paragraph>对于向量的每个分量，返回两个数值中的较小者。</paragraph>
            <target refid="class-visualshadernodevectorop-constant-op-cross"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-visualshadernodevectorop-constant-op-cross" names="class_visualshadernodevectorop_constant_op_cross"><reference internal="True" refid="enum-visualshadernodevectorop-operator"><inline classes="std std-ref">Operator</inline></reference> <strong>OP_CROSS</strong> = <literal>8</literal></paragraph>
            <paragraph>计算两个向量的叉积。</paragraph>
            <target refid="class-visualshadernodevectorop-constant-op-atan2"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-visualshadernodevectorop-constant-op-atan2" names="class_visualshadernodevectorop_constant_op_atan2"><reference internal="True" refid="enum-visualshadernodevectorop-operator"><inline classes="std std-ref">Operator</inline></reference> <strong>OP_ATAN2</strong> = <literal>9</literal></paragraph>
            <paragraph>返回参数的反正切值。</paragraph>
            <target refid="class-visualshadernodevectorop-constant-op-reflect"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-visualshadernodevectorop-constant-op-reflect" names="class_visualshadernodevectorop_constant_op_reflect"><reference internal="True" refid="enum-visualshadernodevectorop-operator"><inline classes="std std-ref">Operator</inline></reference> <strong>OP_REFLECT</strong> = <literal>10</literal></paragraph>
            <paragraph>返回指向反射方向的向量。<literal>a</literal> 是入射向量，<literal>b</literal> 是法向量。</paragraph>
            <target refid="class-visualshadernodevectorop-constant-op-step"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-visualshadernodevectorop-constant-op-step" names="class_visualshadernodevectorop_constant_op_step"><reference internal="True" refid="enum-visualshadernodevectorop-operator"><inline classes="std std-ref">Operator</inline></reference> <strong>OP_STEP</strong> = <literal>11</literal></paragraph>
            <paragraph>向量步长运算符。如果<literal>a</literal>小于<literal>b</literal>，返回 <literal>0.0</literal>，否则返回 <literal>1.0</literal>。</paragraph>
            <target refid="class-visualshadernodevectorop-constant-op-enum-size"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-visualshadernodevectorop-constant-op-enum-size" names="class_visualshadernodevectorop_constant_op_enum_size"><reference internal="True" refid="enum-visualshadernodevectorop-operator"><inline classes="std std-ref">Operator</inline></reference> <strong>OP_ENUM_SIZE</strong> = <literal>12</literal></paragraph>
            <paragraph>代表 <reference internal="True" refid="enum-visualshadernodevectorop-operator"><inline classes="std std-ref">Operator</inline></reference> 枚举的大小。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="属性说明">
            <title>属性说明</title>
            <target refid="class-visualshadernodevectorop-property-operator"></target>
            <paragraph classes="classref-property" ids="class-visualshadernodevectorop-property-operator" names="class_visualshadernodevectorop_property_operator"><reference internal="True" refid="enum-visualshadernodevectorop-operator"><inline classes="std std-ref">Operator</inline></reference> <strong>operator</strong> = <literal>0</literal> <reference internal="True" refid="class-visualshadernodevectorop-property-operator"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_operator</strong>(value: <reference internal="True" refid="enum-visualshadernodevectorop-operator"><inline classes="std std-ref">Operator</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-visualshadernodevectorop-operator"><inline classes="std std-ref">Operator</inline></reference> <strong>get_operator</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>要使用的运算符。参阅<reference internal="True" refid="enum-visualshadernodevectorop-operator"><inline classes="std std-ref">Operator</inline></reference>的选项。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_openxrhand.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/modules/openxr/doc_classes/OpenXRHand.xml.</comment>
    <target refid="class-openxrhand"></target>
    <section ids="openxrhand class-openxrhand" names="openxrhand class_openxrhand">
        <title>OpenXRHand</title>
        <paragraph><strong>已弃用：</strong> Use <reference internal="True" refuri="class_xrhandmodifier3d#class-xrhandmodifier3d"><inline classes="std std-ref">XRHandModifier3D</inline></reference> instead.</paragraph>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_node3d#class-node3d"><inline classes="std std-ref">Node3D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>OpenXR 中支持手和手指跟踪的节点。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>该节点启用 OpenXR 的手部跟踪功能。该节点应该是 <reference internal="True" refuri="class_xrorigin3d#class-xrorigin3d"><inline classes="std std-ref">XROrigin3D</inline></reference> 节点的子节点，跟踪会将其位置更新为玩家被跟踪的手掌关节位置（中指的掌骨中心）。该节点还会更新正确蒙皮的手或头像模型的骨架。</paragraph>
            <paragraph>如果骨架是一只手（手部骨骼之一是该骨架的根节点），则该骨架将相对于手掌位置放置，并且手部网格和骨架应该是 OpenXRHand 节点的子级。</paragraph>
            <paragraph>如果手骨是完整骨架的一部分，假设使用 IK 来定位手和胳膊，则手的根部将保持其位置。</paragraph>
            <paragraph>默认情况下，骨架手骨会被重新定位以匹配跟踪的手的大小。要保留建模的骨骼大小，请更改 <reference internal="True" refid="class-openxrhand-property-bone-update"><inline classes="std std-ref">bone_update</inline></reference> 以仅应用旋转。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="49"></colspec>
                    <colspec colwidth="63"></colspec>
                    <colspec colwidth="18"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-openxrhand-boneupdate"><inline classes="std std-ref">BoneUpdate</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-openxrhand-property-bone-update"><inline classes="std std-ref">bone_update</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-openxrhand-hands"><inline classes="std std-ref">Hands</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-openxrhand-property-hand"><inline classes="std std-ref">hand</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-openxrhand-property-hand-skeleton"><inline classes="std std-ref">hand_skeleton</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>NodePath("")</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-openxrhand-motionrange"><inline classes="std std-ref">MotionRange</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-openxrhand-property-motion-range"><inline classes="std std-ref">motion_range</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-openxrhand-skeletonrig"><inline classes="std std-ref">SkeletonRig</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-openxrhand-property-skeleton-rig"><inline classes="std std-ref">skeleton_rig</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="枚举">
            <title>枚举</title>
            <target refid="enum-openxrhand-hands"></target>
            <paragraph classes="classref-enumeration" ids="enum-openxrhand-hands" names="enum_openxrhand_hands">enum <strong>Hands</strong>: <reference internal="True" refid="enum-openxrhand-hands"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-openxrhand-constant-hand-left"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-openxrhand-constant-hand-left" names="class_openxrhand_constant_hand_left"><reference internal="True" refid="enum-openxrhand-hands"><inline classes="std std-ref">Hands</inline></reference> <strong>HAND_LEFT</strong> = <literal>0</literal></paragraph>
            <paragraph>追踪玩家的左手。</paragraph>
            <target refid="class-openxrhand-constant-hand-right"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-openxrhand-constant-hand-right" names="class_openxrhand_constant_hand_right"><reference internal="True" refid="enum-openxrhand-hands"><inline classes="std std-ref">Hands</inline></reference> <strong>HAND_RIGHT</strong> = <literal>1</literal></paragraph>
            <paragraph>追踪玩家的右手。</paragraph>
            <target refid="class-openxrhand-constant-hand-max"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-openxrhand-constant-hand-max" names="class_openxrhand_constant_hand_max"><reference internal="True" refid="enum-openxrhand-hands"><inline classes="std std-ref">Hands</inline></reference> <strong>HAND_MAX</strong> = <literal>2</literal></paragraph>
            <paragraph>最大支持的手数。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-openxrhand-motionrange"></target>
            <paragraph classes="classref-enumeration" ids="enum-openxrhand-motionrange" names="enum_openxrhand_motionrange">enum <strong>MotionRange</strong>: <reference internal="True" refid="enum-openxrhand-motionrange"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-openxrhand-constant-motion-range-unobstructed"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-openxrhand-constant-motion-range-unobstructed" names="class_openxrhand_constant_motion_range_unobstructed"><reference internal="True" refid="enum-openxrhand-motionrange"><inline classes="std std-ref">MotionRange</inline></reference> <strong>MOTION_RANGE_UNOBSTRUCTED</strong> = <literal>0</literal></paragraph>
            <paragraph>玩家抓握时，手部骨架呈握拳状。</paragraph>
            <target refid="class-openxrhand-constant-motion-range-conform-to-controller"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-openxrhand-constant-motion-range-conform-to-controller" names="class_openxrhand_constant_motion_range_conform_to_controller"><reference internal="True" refid="enum-openxrhand-motionrange"><inline classes="std std-ref">MotionRange</inline></reference> <strong>MOTION_RANGE_CONFORM_TO_CONTROLLER</strong> = <literal>1</literal></paragraph>
            <paragraph>玩家抓握时，手部骨架遵循玩家所持的控制器。</paragraph>
            <target refid="class-openxrhand-constant-motion-range-max"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-openxrhand-constant-motion-range-max" names="class_openxrhand_constant_motion_range_max"><reference internal="True" refid="enum-openxrhand-motionrange"><inline classes="std std-ref">MotionRange</inline></reference> <strong>MOTION_RANGE_MAX</strong> = <literal>2</literal></paragraph>
            <paragraph>最大支持的运动范围。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-openxrhand-skeletonrig"></target>
            <paragraph classes="classref-enumeration" ids="enum-openxrhand-skeletonrig" names="enum_openxrhand_skeletonrig">enum <strong>SkeletonRig</strong>: <reference internal="True" refid="enum-openxrhand-skeletonrig"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-openxrhand-constant-skeleton-rig-openxr"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-openxrhand-constant-skeleton-rig-openxr" names="class_openxrhand_constant_skeleton_rig_openxr"><reference internal="True" refid="enum-openxrhand-skeletonrig"><inline classes="std std-ref">SkeletonRig</inline></reference> <strong>SKELETON_RIG_OPENXR</strong> = <literal>0</literal></paragraph>
            <paragraph>符合 OpenXR 标准的骨架。</paragraph>
            <target refid="class-openxrhand-constant-skeleton-rig-humanoid"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-openxrhand-constant-skeleton-rig-humanoid" names="class_openxrhand_constant_skeleton_rig_humanoid"><reference internal="True" refid="enum-openxrhand-skeletonrig"><inline classes="std std-ref">SkeletonRig</inline></reference> <strong>SKELETON_RIG_HUMANOID</strong> = <literal>1</literal></paragraph>
            <paragraph>符合 <reference internal="True" refuri="class_skeletonprofilehumanoid#class-skeletonprofilehumanoid"><inline classes="std std-ref">SkeletonProfileHumanoid</inline></reference> 标准的骨架。</paragraph>
            <target refid="class-openxrhand-constant-skeleton-rig-max"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-openxrhand-constant-skeleton-rig-max" names="class_openxrhand_constant_skeleton_rig_max"><reference internal="True" refid="enum-openxrhand-skeletonrig"><inline classes="std std-ref">SkeletonRig</inline></reference> <strong>SKELETON_RIG_MAX</strong> = <literal>2</literal></paragraph>
            <paragraph>最大支持的手数。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-openxrhand-boneupdate"></target>
            <paragraph classes="classref-enumeration" ids="enum-openxrhand-boneupdate" names="enum_openxrhand_boneupdate">enum <strong>BoneUpdate</strong>: <reference internal="True" refid="enum-openxrhand-boneupdate"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-openxrhand-constant-bone-update-full"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-openxrhand-constant-bone-update-full" names="class_openxrhand_constant_bone_update_full"><reference internal="True" refid="enum-openxrhand-boneupdate"><inline classes="std std-ref">BoneUpdate</inline></reference> <strong>BONE_UPDATE_FULL</strong> = <literal>0</literal></paragraph>
            <paragraph>骨架骨骼已完全更新（位置和旋转）以匹配跟踪的骨骼。</paragraph>
            <target refid="class-openxrhand-constant-bone-update-rotation-only"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-openxrhand-constant-bone-update-rotation-only" names="class_openxrhand_constant_bone_update_rotation_only"><reference internal="True" refid="enum-openxrhand-boneupdate"><inline classes="std std-ref">BoneUpdate</inline></reference> <strong>BONE_UPDATE_ROTATION_ONLY</strong> = <literal>1</literal></paragraph>
            <paragraph>骨架骨骼仅旋转以与跟踪的骨骼对齐，从而保留骨骼长度。</paragraph>
            <target refid="class-openxrhand-constant-bone-update-max"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-openxrhand-constant-bone-update-max" names="class_openxrhand_constant_bone_update_max"><reference internal="True" refid="enum-openxrhand-boneupdate"><inline classes="std std-ref">BoneUpdate</inline></reference> <strong>BONE_UPDATE_MAX</strong> = <literal>2</literal></paragraph>
            <paragraph>最大支持的骨骼更新模式。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="属性说明">
            <title>属性说明</title>
            <target refid="class-openxrhand-property-bone-update"></target>
            <paragraph classes="classref-property" ids="class-openxrhand-property-bone-update" names="class_openxrhand_property_bone_update"><reference internal="True" refid="enum-openxrhand-boneupdate"><inline classes="std std-ref">BoneUpdate</inline></reference> <strong>bone_update</strong> = <literal>0</literal> <reference internal="True" refid="class-openxrhand-property-bone-update"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_bone_update</strong>(value: <reference internal="True" refid="enum-openxrhand-boneupdate"><inline classes="std std-ref">BoneUpdate</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-openxrhand-boneupdate"><inline classes="std std-ref">BoneUpdate</inline></reference> <strong>get_bone_update</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>指定要在骨骼上执行的更新类型。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-openxrhand-property-hand"></target>
            <paragraph classes="classref-property" ids="class-openxrhand-property-hand" names="class_openxrhand_property_hand"><reference internal="True" refid="enum-openxrhand-hands"><inline classes="std std-ref">Hands</inline></reference> <strong>hand</strong> = <literal>0</literal> <reference internal="True" refid="class-openxrhand-property-hand"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_hand</strong>(value: <reference internal="True" refid="enum-openxrhand-hands"><inline classes="std std-ref">Hands</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-openxrhand-hands"><inline classes="std std-ref">Hands</inline></reference> <strong>get_hand</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>指定该节点是追踪玩家的左手还是右手。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-openxrhand-property-hand-skeleton"></target>
            <paragraph classes="classref-property" ids="class-openxrhand-property-hand-skeleton" names="class_openxrhand_property_hand_skeleton"><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> <strong>hand_skeleton</strong> = <literal>NodePath("")</literal> <reference internal="True" refid="class-openxrhand-property-hand-skeleton"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_hand_skeleton</strong>(value: <reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> <strong>get_hand_skeleton</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>设置一个<reference internal="True" refuri="class_skeleton3d#class-skeleton3d"><inline classes="std std-ref">Skeleton3D</inline></reference>节点，该节点的姿势位置将被更新。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-openxrhand-property-motion-range"></target>
            <paragraph classes="classref-property" ids="class-openxrhand-property-motion-range" names="class_openxrhand_property_motion_range"><reference internal="True" refid="enum-openxrhand-motionrange"><inline classes="std std-ref">MotionRange</inline></reference> <strong>motion_range</strong> = <literal>0</literal> <reference internal="True" refid="class-openxrhand-property-motion-range"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_motion_range</strong>(value: <reference internal="True" refid="enum-openxrhand-motionrange"><inline classes="std std-ref">MotionRange</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-openxrhand-motionrange"><inline classes="std std-ref">MotionRange</inline></reference> <strong>get_motion_range</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>设置限制手部运动的运动范围（前提是支持）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-openxrhand-property-skeleton-rig"></target>
            <paragraph classes="classref-property" ids="class-openxrhand-property-skeleton-rig" names="class_openxrhand_property_skeleton_rig"><reference internal="True" refid="enum-openxrhand-skeletonrig"><inline classes="std std-ref">SkeletonRig</inline></reference> <strong>skeleton_rig</strong> = <literal>0</literal> <reference internal="True" refid="class-openxrhand-property-skeleton-rig"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_skeleton_rig</strong>(value: <reference internal="True" refid="enum-openxrhand-skeletonrig"><inline classes="std std-ref">SkeletonRig</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-openxrhand-skeletonrig"><inline classes="std std-ref">SkeletonRig</inline></reference> <strong>get_skeleton_rig</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>设置 <reference internal="True" refid="class-openxrhand-property-hand-skeleton"><inline classes="std std-ref">hand_skeleton</inline></reference> 所兼容的骨架绑定类型。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_skeletonprofile.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/SkeletonProfile.xml.</comment>
    <target refid="class-skeletonprofile"></target>
    <section ids="skeletonprofile class-skeletonprofile" names="skeletonprofile class_skeletonprofile">
        <title>SkeletonProfile</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph><strong>派生：</strong> <reference internal="True" refuri="class_skeletonprofilehumanoid#class-skeletonprofilehumanoid"><inline classes="std std-ref">SkeletonProfileHumanoid</inline></reference></paragraph>
        <paragraph>用作重定向目标的虚拟骨架的配置文件的基类。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>这个资源在 <reference internal="True" refuri="class_editorscenepostimport#class-editorscenepostimport"><inline classes="std std-ref">EditorScenePostImport</inline></reference> 中使用。一些参数是指 <reference internal="True" refuri="class_skeleton3d#class-skeleton3d"><inline classes="std std-ref">Skeleton3D</inline></reference>、<reference internal="True" refuri="class_skin#class-skin"><inline classes="std std-ref">Skin</inline></reference>、<reference internal="True" refuri="class_animation#class-animation"><inline classes="std std-ref">Animation</inline></reference> 中的骨骼，还有一些节点是根据 <strong>SkeletonProfile</strong> 中的参数改写的。</paragraph>
            <paragraph><strong>注意：</strong>只有在创建自定义配置时这些参数才需要被设置。在 <reference internal="True" refuri="class_skeletonprofilehumanoid#class-skeletonprofilehumanoid"><inline classes="std std-ref">SkeletonProfileHumanoid</inline></reference> 中，它们在内部被定义为只读值。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference internal="True" refuri="../tutorials/assets_pipeline/retargeting_3d_skeletons"><inline classes="doc">重定向 3D 骨架</inline></reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="37"></colspec>
                    <colspec colwidth="72"></colspec>
                    <colspec colwidth="9"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonprofile-property-bone-size"><inline classes="std std-ref">bone_size</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonprofile-property-group-size"><inline classes="std std-ref">group_size</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonprofile-property-root-bone"><inline classes="std std-ref">root_bone</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>&amp;""</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonprofile-property-scale-base-bone"><inline classes="std std-ref">scale_base_bone</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>&amp;""</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id4" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="58"></colspec>
                    <colspec colwidth="191"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonprofile-method-find-bone"><inline classes="std std-ref">find_bone</inline></reference>(bone_name: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonprofile-method-get-bone-name"><inline classes="std std-ref">get_bone_name</inline></reference>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonprofile-method-get-bone-parent"><inline classes="std std-ref">get_bone_parent</inline></reference>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonprofile-method-get-bone-tail"><inline classes="std std-ref">get_bone_tail</inline></reference>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonprofile-method-get-group"><inline classes="std std-ref">get_group</inline></reference>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonprofile-method-get-group-name"><inline classes="std std-ref">get_group_name</inline></reference>(group_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonprofile-method-get-handle-offset"><inline classes="std std-ref">get_handle_offset</inline></reference>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonprofile-method-get-reference-pose"><inline classes="std std-ref">get_reference_pose</inline></reference>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-skeletonprofile-taildirection"><inline classes="std std-ref">TailDirection</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonprofile-method-get-tail-direction"><inline classes="std std-ref">get_tail_direction</inline></reference>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonprofile-method-get-texture"><inline classes="std std-ref">get_texture</inline></reference>(group_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonprofile-method-is-required"><inline classes="std std-ref">is_required</inline></reference>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonprofile-method-set-bone-name"><inline classes="std std-ref">set_bone_name</inline></reference>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, bone_name: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonprofile-method-set-bone-parent"><inline classes="std std-ref">set_bone_parent</inline></reference>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, bone_parent: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonprofile-method-set-bone-tail"><inline classes="std std-ref">set_bone_tail</inline></reference>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, bone_tail: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonprofile-method-set-group"><inline classes="std std-ref">set_group</inline></reference>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, group: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonprofile-method-set-group-name"><inline classes="std std-ref">set_group_name</inline></reference>(group_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, group_name: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonprofile-method-set-handle-offset"><inline classes="std std-ref">set_handle_offset</inline></reference>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, handle_offset: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonprofile-method-set-reference-pose"><inline classes="std std-ref">set_reference_pose</inline></reference>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, bone_name: <reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonprofile-method-set-required"><inline classes="std std-ref">set_required</inline></reference>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, required: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonprofile-method-set-tail-direction"><inline classes="std std-ref">set_tail_direction</inline></reference>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, tail_direction: <reference internal="True" refid="enum-skeletonprofile-taildirection"><inline classes="std std-ref">TailDirection</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonprofile-method-set-texture"><inline classes="std std-ref">set_texture</inline></reference>(group_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, texture: <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference>)</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="信号">
            <title>信号</title>
            <target refid="class-skeletonprofile-signal-profile-updated"></target>
            <paragraph classes="classref-signal" ids="class-skeletonprofile-signal-profile-updated" names="class_skeletonprofile_signal_profile_updated"><strong>profile_updated</strong>() <reference internal="True" refid="class-skeletonprofile-signal-profile-updated"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>更改配置中的值时会发出该信号。这被用于更新 <reference internal="True" refuri="class_bonemap#class-bonemap"><inline classes="std std-ref">BoneMap</inline></reference> 中的键名并重绘 <reference internal="True" refuri="class_bonemap#class-bonemap"><inline classes="std std-ref">BoneMap</inline></reference> 编辑器。</paragraph>
            <paragraph><strong>注意：</strong>为了简化引用，这个信号没有直接连接到编辑器，而是通过 <reference internal="True" refuri="class_bonemap#class-bonemap"><inline classes="std std-ref">BoneMap</inline></reference> 传递给编辑器。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="枚举">
            <title>枚举</title>
            <target refid="enum-skeletonprofile-taildirection"></target>
            <paragraph classes="classref-enumeration" ids="enum-skeletonprofile-taildirection" names="enum_skeletonprofile_taildirection">enum <strong>TailDirection</strong>: <reference internal="True" refid="enum-skeletonprofile-taildirection"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-skeletonprofile-constant-tail-direction-average-children"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-skeletonprofile-constant-tail-direction-average-children" names="class_skeletonprofile_constant_tail_direction_average_children"><reference internal="True" refid="enum-skeletonprofile-taildirection"><inline classes="std std-ref">TailDirection</inline></reference> <strong>TAIL_DIRECTION_AVERAGE_CHILDREN</strong> = <literal>0</literal></paragraph>
            <paragraph>子级骨骼平均坐标的方向。</paragraph>
            <target refid="class-skeletonprofile-constant-tail-direction-specific-child"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-skeletonprofile-constant-tail-direction-specific-child" names="class_skeletonprofile_constant_tail_direction_specific_child"><reference internal="True" refid="enum-skeletonprofile-taildirection"><inline classes="std std-ref">TailDirection</inline></reference> <strong>TAIL_DIRECTION_SPECIFIC_CHILD</strong> = <literal>1</literal></paragraph>
            <paragraph>指定子级骨骼坐标的方向。</paragraph>
            <target refid="class-skeletonprofile-constant-tail-direction-end"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-skeletonprofile-constant-tail-direction-end" names="class_skeletonprofile_constant_tail_direction_end"><reference internal="True" refid="enum-skeletonprofile-taildirection"><inline classes="std std-ref">TailDirection</inline></reference> <strong>TAIL_DIRECTION_END</strong> = <literal>2</literal></paragraph>
            <paragraph>不计算方向。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id7" names="属性说明">
            <title>属性说明</title>
            <target refid="class-skeletonprofile-property-bone-size"></target>
            <paragraph classes="classref-property" ids="class-skeletonprofile-property-bone-size" names="class_skeletonprofile_property_bone_size"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>bone_size</strong> = <literal>0</literal> <reference internal="True" refid="class-skeletonprofile-property-bone-size"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_bone_size</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_bone_size</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>重定向部分的 <reference internal="True" refuri="class_bonemap#class-bonemap"><inline classes="std std-ref">BoneMap</inline></reference> 编辑器中的骨骼数量。例如，<reference internal="True" refuri="class_skeletonprofilehumanoid#class-skeletonprofilehumanoid"><inline classes="std std-ref">SkeletonProfileHumanoid</inline></reference> 有 56 块骨头。</paragraph>
            <paragraph><reference internal="True" refuri="class_bonemap#class-bonemap"><inline classes="std std-ref">BoneMap</inline></reference> 中元素的大小在其分配的 <strong>SkeletonProfile</strong> 中更改该属性时更新。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonprofile-property-group-size"></target>
            <paragraph classes="classref-property" ids="class-skeletonprofile-property-group-size" names="class_skeletonprofile_property_group_size"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>group_size</strong> = <literal>0</literal> <reference internal="True" refid="class-skeletonprofile-property-group-size"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_group_size</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_group_size</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>重定向部分的 <reference internal="True" refuri="class_bonemap#class-bonemap"><inline classes="std std-ref">BoneMap</inline></reference> 编辑器中的骨骼组的数量。例如，<reference internal="True" refuri="class_skeletonprofilehumanoid#class-skeletonprofilehumanoid"><inline classes="std std-ref">SkeletonProfileHumanoid</inline></reference> 有 4 个组。</paragraph>
            <paragraph>这个属性的存在是为了在编辑器中把骨骼列表分成几个部分。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonprofile-property-root-bone"></target>
            <paragraph classes="classref-property" ids="class-skeletonprofile-property-root-bone" names="class_skeletonprofile_property_root_bone"><reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference> <strong>root_bone</strong> = <literal>&amp;""</literal> <reference internal="True" refid="class-skeletonprofile-property-root-bone"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_root_bone</strong>(value: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference> <strong>get_root_bone</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>会被用作 <reference internal="True" refuri="class_animationtree#class-animationtree"><inline classes="std std-ref">AnimationTree</inline></reference> 中根骨骼的骨骼名称。应该是髋部父级的骨骼，位于世界原点。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonprofile-property-scale-base-bone"></target>
            <paragraph classes="classref-property" ids="class-skeletonprofile-property-scale-base-bone" names="class_skeletonprofile_property_scale_base_bone"><reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference> <strong>scale_base_bone</strong> = <literal>&amp;""</literal> <reference internal="True" refid="class-skeletonprofile-property-scale-base-bone"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_scale_base_bone</strong>(value: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference> <strong>get_scale_base_bone</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>骨骼的名称，将使用模型的高度作为归一化的系数。例如，<reference internal="True" refuri="class_skeletonprofilehumanoid#class-skeletonprofilehumanoid"><inline classes="std std-ref">SkeletonProfileHumanoid</inline></reference> 将其定义为 <literal>Hips</literal> 。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id8" names="方法说明">
            <title>方法说明</title>
            <target refid="class-skeletonprofile-method-find-bone"></target>
            <paragraph classes="classref-method" ids="class-skeletonprofile-method-find-bone" names="class_skeletonprofile_method_find_bone"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>find_bone</strong>(bone_name: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-skeletonprofile-method-find-bone"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回名称与 <literal>bone_name</literal> 匹配的骨骼的索引。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonprofile-method-get-bone-name"></target>
            <paragraph classes="classref-method" ids="class-skeletonprofile-method-get-bone-name" names="class_skeletonprofile_method_get_bone_name"><reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference> <strong>get_bone_name</strong>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-skeletonprofile-method-get-bone-name"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回位于 <literal>bone_idx</literal> 的骨骼的名称，会成为 <reference internal="True" refuri="class_bonemap#class-bonemap"><inline classes="std std-ref">BoneMap</inline></reference> 中的键名。</paragraph>
            <paragraph>在重定向过程中，返回的骨骼名称是目标骨架中的骨骼名称。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonprofile-method-get-bone-parent"></target>
            <paragraph classes="classref-method" ids="class-skeletonprofile-method-get-bone-parent" names="class_skeletonprofile_method_get_bone_parent"><reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference> <strong>get_bone_parent</strong>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-skeletonprofile-method-get-bone-parent"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回位于 <literal>bone_idx</literal> 的骨骼的父级骨骼的名称。如果该骨骼没有父级，则结果为空。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonprofile-method-get-bone-tail"></target>
            <paragraph classes="classref-method" ids="class-skeletonprofile-method-get-bone-tail" names="class_skeletonprofile_method_get_bone_tail"><reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference> <strong>get_bone_tail</strong>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-skeletonprofile-method-get-bone-tail"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回 <literal>bone_idx</literal> 处骨骼的尾部骨骼的名称。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonprofile-method-get-group"></target>
            <paragraph classes="classref-method" ids="class-skeletonprofile-method-get-group" names="class_skeletonprofile_method_get_group"><reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference> <strong>get_group</strong>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-skeletonprofile-method-get-group"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回索引为 <literal>bone_idx</literal> 的骨骼的分组。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonprofile-method-get-group-name"></target>
            <paragraph classes="classref-method" ids="class-skeletonprofile-method-get-group-name" names="class_skeletonprofile_method_get_group_name"><reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference> <strong>get_group_name</strong>(group_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-skeletonprofile-method-get-group-name"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回 <literal>group_idx</literal> 处的组的名称，该组将成为 <reference internal="True" refuri="class_bonemap#class-bonemap"><inline classes="std std-ref">BoneMap</inline></reference> 编辑器中的绘制组。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonprofile-method-get-handle-offset"></target>
            <paragraph classes="classref-method" ids="class-skeletonprofile-method-get-handle-offset" names="class_skeletonprofile_method_get_handle_offset"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>get_handle_offset</strong>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-skeletonprofile-method-get-handle-offset"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回在 <literal>bone_idx</literal> 处的骨骼的偏移量，这将是 <reference internal="True" refuri="class_bonemap#class-bonemap"><inline classes="std std-ref">BoneMap</inline></reference> 编辑器中的按钮位置。</paragraph>
            <paragraph>这是一个偏移量，原点在正方形的左上角。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonprofile-method-get-reference-pose"></target>
            <paragraph classes="classref-method" ids="class-skeletonprofile-method-get-reference-pose" names="class_skeletonprofile_method_get_reference_pose"><reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference> <strong>get_reference_pose</strong>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-skeletonprofile-method-get-reference-pose"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回索引为 <literal>bone_idx</literal> 的骨骼的参考姿势变换。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonprofile-method-get-tail-direction"></target>
            <paragraph classes="classref-method" ids="class-skeletonprofile-method-get-tail-direction" names="class_skeletonprofile_method_get_tail_direction"><reference internal="True" refid="enum-skeletonprofile-taildirection"><inline classes="std std-ref">TailDirection</inline></reference> <strong>get_tail_direction</strong>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-skeletonprofile-method-get-tail-direction"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回索引为 <literal>bone_idx</literal> 的骨骼的尾部方向。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonprofile-method-get-texture"></target>
            <paragraph classes="classref-method" ids="class-skeletonprofile-method-get-texture" names="class_skeletonprofile_method_get_texture"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>get_texture</strong>(group_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-skeletonprofile-method-get-texture"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回 <literal>group_idx</literal> 处的组的纹理，该组将作为 <reference internal="True" refuri="class_bonemap#class-bonemap"><inline classes="std std-ref">BoneMap</inline></reference> 编辑器中的绘制组的背景图像。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonprofile-method-is-required"></target>
            <paragraph classes="classref-method" ids="class-skeletonprofile-method-is-required" names="class_skeletonprofile_method_is_required"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_required</strong>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-skeletonprofile-method-is-required"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Returns whether the bone at <literal>bone_idx</literal> is required for retargeting.</paragraph>
            <paragraph>This value is used by the bone map editor. If this method returns <literal>true</literal>, and no bone is assigned, the handle color will be red on the bone map editor.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonprofile-method-set-bone-name"></target>
            <paragraph classes="classref-method" ids="class-skeletonprofile-method-set-bone-name" names="class_skeletonprofile_method_set_bone_name"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_bone_name</strong>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, bone_name: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>) <reference internal="True" refid="class-skeletonprofile-method-set-bone-name"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置在 <literal>bone_idx</literal> 处的骨骼的名称，这将是 <reference internal="True" refuri="class_bonemap#class-bonemap"><inline classes="std std-ref">BoneMap</inline></reference> 中的键名。</paragraph>
            <paragraph>在重定向过程中，设置的骨骼名称是目标骨架的骨骼名称。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonprofile-method-set-bone-parent"></target>
            <paragraph classes="classref-method" ids="class-skeletonprofile-method-set-bone-parent" names="class_skeletonprofile_method_set_bone_parent"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_bone_parent</strong>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, bone_parent: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>) <reference internal="True" refid="class-skeletonprofile-method-set-bone-parent"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将名称为 <literal>bone_parent</literal> 的骨骼设置为索引为 <literal>bone_idx</literal> 的骨骼的父级。如果传入的是空字符串，则该骨骼没有父级。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonprofile-method-set-bone-tail"></target>
            <paragraph classes="classref-method" ids="class-skeletonprofile-method-set-bone-tail" names="class_skeletonprofile_method_set_bone_tail"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_bone_tail</strong>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, bone_tail: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>) <reference internal="True" refid="class-skeletonprofile-method-set-bone-tail"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将名称为 <literal>bone_tail</literal> 的骨骼设置为索引为 <literal>bone_idx</literal> 的骨骼的尾部。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonprofile-method-set-group"></target>
            <paragraph classes="classref-method" ids="class-skeletonprofile-method-set-group" names="class_skeletonprofile_method_set_group"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_group</strong>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, group: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>) <reference internal="True" refid="class-skeletonprofile-method-set-group"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置索引为 <literal>bone_idx</literal> 的骨骼的分组。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonprofile-method-set-group-name"></target>
            <paragraph classes="classref-method" ids="class-skeletonprofile-method-set-group-name" names="class_skeletonprofile_method_set_group_name"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_group_name</strong>(group_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, group_name: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>) <reference internal="True" refid="class-skeletonprofile-method-set-group-name"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置在 <literal>group_idx</literal> 处的组的名称，这将是 <reference internal="True" refuri="class_bonemap#class-bonemap"><inline classes="std std-ref">BoneMap</inline></reference> 编辑器中的绘制组。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonprofile-method-set-handle-offset"></target>
            <paragraph classes="classref-method" ids="class-skeletonprofile-method-set-handle-offset" names="class_skeletonprofile_method_set_handle_offset"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_handle_offset</strong>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, handle_offset: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <reference internal="True" refid="class-skeletonprofile-method-set-handle-offset"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置在 <literal>bone_idx</literal> 处的骨骼的偏移量，这将是 <reference internal="True" refuri="class_bonemap#class-bonemap"><inline classes="std std-ref">BoneMap</inline></reference> 编辑器中的按钮位置。</paragraph>
            <paragraph>这是原点在正方形左上角的偏移量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonprofile-method-set-reference-pose"></target>
            <paragraph classes="classref-method" ids="class-skeletonprofile-method-set-reference-pose" names="class_skeletonprofile_method_set_reference_pose"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_reference_pose</strong>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, bone_name: <reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference>) <reference internal="True" refid="class-skeletonprofile-method-set-reference-pose"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置骨骼 <literal>bone_idx</literal> 的参考姿势变换。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonprofile-method-set-required"></target>
            <paragraph classes="classref-method" ids="class-skeletonprofile-method-set-required" names="class_skeletonprofile_method_set_required"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_required</strong>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, required: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <reference internal="True" refid="class-skeletonprofile-method-set-required"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Sets the required status for bone <literal>bone_idx</literal> to <literal>required</literal>.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonprofile-method-set-tail-direction"></target>
            <paragraph classes="classref-method" ids="class-skeletonprofile-method-set-tail-direction" names="class_skeletonprofile_method_set_tail_direction"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_tail_direction</strong>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, tail_direction: <reference internal="True" refid="enum-skeletonprofile-taildirection"><inline classes="std std-ref">TailDirection</inline></reference>) <reference internal="True" refid="class-skeletonprofile-method-set-tail-direction"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置在 <literal>bone_idx</literal> 处的骨骼的尾部方向。</paragraph>
            <paragraph><strong>注意：</strong>这里只规定了计算方法。所需的实际坐标应该存储在外部骨架中，因此计算本身需要在外部完成。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonprofile-method-set-texture"></target>
            <paragraph classes="classref-method" ids="class-skeletonprofile-method-set-texture" names="class_skeletonprofile_method_set_texture"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_texture</strong>(group_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, texture: <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference>) <reference internal="True" refid="class-skeletonprofile-method-set-texture"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置在 <literal>group_idx</literal> 处的组的纹理，这将是 <reference internal="True" refuri="class_bonemap#class-bonemap"><inline classes="std std-ref">BoneMap</inline></reference> 编辑器中绘制组的背景图像。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

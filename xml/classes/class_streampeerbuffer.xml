<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_streampeerbuffer.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/StreamPeerBuffer.xml.</comment>
    <target refid="class-streampeerbuffer"></target>
    <section ids="streampeerbuffer class-streampeerbuffer" names="streampeerbuffer class_streampeerbuffer">
        <title>StreamPeerBuffer</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_streampeer#class-streampeer"><inline classes="std std-ref">StreamPeer</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>用于处理二进制数据流的流对等体。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>使用字节数组作为流的数据缓冲区流对等体。该对象可用于处理来自网络会话的二进制数据。要处理保存在文件中的二进制数据，可以直接使用 <reference internal="True" refuri="class_fileaccess#class-fileaccess"><inline classes="std std-ref">FileAccess</inline></reference>。</paragraph>
            <paragraph><strong>StreamPeerBuffer</strong> 对象会保存一个内部指针，是距离该缓冲区开头的字节偏移量。Get 和 put 操作都在该指针处进行，并会将其进行对应的移动。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="47"></colspec>
                    <colspec colwidth="63"></colspec>
                    <colspec colwidth="23"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_packedbytearray#class-packedbytearray"><inline classes="std std-ref">PackedByteArray</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-streampeerbuffer-property-data-array"><inline classes="std std-ref">data_array</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>PackedByteArray()</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="49"></colspec>
                    <colspec colwidth="92"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-streampeerbuffer-method-clear"><inline classes="std std-ref">clear</inline></reference> <strong>(</strong> <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="class-streampeerbuffer"><inline classes="std std-ref">StreamPeerBuffer</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-streampeerbuffer-method-duplicate"><inline classes="std std-ref">duplicate</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-streampeerbuffer-method-get-position"><inline classes="std std-ref">get_position</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-streampeerbuffer-method-get-size"><inline classes="std std-ref">get_size</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-streampeerbuffer-method-resize"><inline classes="std std-ref">resize</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> size <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-streampeerbuffer-method-seek"><inline classes="std std-ref">seek</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> position <strong>)</strong></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="属性说明">
            <title>属性说明</title>
            <target refid="class-streampeerbuffer-property-data-array"></target>
            <paragraph classes="classref-property" ids="class-streampeerbuffer-property-data-array" names="class_streampeerbuffer_property_data_array"><reference internal="True" refuri="class_packedbytearray#class-packedbytearray"><inline classes="std std-ref">PackedByteArray</inline></reference> <strong>data_array</strong> = <literal>PackedByteArray()</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_data_array</strong> <strong>(</strong> <reference internal="True" refuri="class_packedbytearray#class-packedbytearray"><inline classes="std std-ref">PackedByteArray</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_packedbytearray#class-packedbytearray"><inline classes="std std-ref">PackedByteArray</inline></reference> <strong>get_data_array</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>内部的数据缓冲。设置该值会重置指针。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="方法说明">
            <title>方法说明</title>
            <target refid="class-streampeerbuffer-method-clear"></target>
            <paragraph classes="classref-method" ids="class-streampeerbuffer-method-clear" names="class_streampeerbuffer_method_clear">void <strong>clear</strong> <strong>(</strong> <strong>)</strong></paragraph>
            <paragraph>清除 <reference internal="True" refid="class-streampeerbuffer-property-data-array"><inline classes="std std-ref">data_array</inline></reference> 并重置指针。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-streampeerbuffer-method-duplicate"></target>
            <paragraph classes="classref-method" ids="class-streampeerbuffer-method-duplicate" names="class_streampeerbuffer_method_duplicate"><reference internal="True" refid="class-streampeerbuffer"><inline classes="std std-ref">StreamPeerBuffer</inline></reference> <strong>duplicate</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回新的 <strong>StreamPeerBuffer</strong>，具有相同的 <reference internal="True" refid="class-streampeerbuffer-property-data-array"><inline classes="std std-ref">data_array</inline></reference> 内容。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-streampeerbuffer-method-get-position"></target>
            <paragraph classes="classref-method" ids="class-streampeerbuffer-method-get-position" names="class_streampeerbuffer_method_get_position"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_position</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回当前的指针位置。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-streampeerbuffer-method-get-size"></target>
            <paragraph classes="classref-method" ids="class-streampeerbuffer-method-get-size" names="class_streampeerbuffer_method_get_size"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_size</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回 <reference internal="True" refid="class-streampeerbuffer-property-data-array"><inline classes="std std-ref">data_array</inline></reference> 的大小。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-streampeerbuffer-method-resize"></target>
            <paragraph classes="classref-method" ids="class-streampeerbuffer-method-resize" names="class_streampeerbuffer_method_resize">void <strong>resize</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> size <strong>)</strong></paragraph>
            <paragraph>调整 <reference internal="True" refid="class-streampeerbuffer-property-data-array"><inline classes="std std-ref">data_array</inline></reference> 的大小。<emphasis>不会</emphasis>更新指针。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-streampeerbuffer-method-seek"></target>
            <paragraph classes="classref-method" ids="class-streampeerbuffer-method-seek" names="class_streampeerbuffer_method_seek">void <strong>seek</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> position <strong>)</strong></paragraph>
            <paragraph>将指针移动到指定的位置。<literal>position</literal> 必须是 <reference internal="True" refid="class-streampeerbuffer-property-data-array"><inline classes="std std-ref">data_array</inline></reference> 的有效索引。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，所以可以直接使用类名调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

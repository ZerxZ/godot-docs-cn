<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_resourceimportertextureatlas.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/ResourceImporterTextureAtlas.xml.</comment>
    <target refid="class-resourceimportertextureatlas"></target>
    <section ids="resourceimportertextureatlas class-resourceimportertextureatlas" names="resourceimportertextureatlas class_resourceimportertextureatlas">
        <title>ResourceImporterTextureAtlas</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_resourceimporter#class-resourceimporter"><inline classes="std std-ref">ResourceImporter</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>将 PNG 图像中的纹理集合导入到优化的 <reference internal="True" refuri="class_atlastexture#class-atlastexture"><inline classes="std std-ref">AtlasTexture</inline></reference> 中以进行 2D 渲染。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>这会将 PNG 图像中的纹理集合导入到 <reference internal="True" refuri="class_atlastexture#class-atlastexture"><inline classes="std std-ref">AtlasTexture</inline></reference> 或 2D <reference internal="True" refuri="class_arraymesh#class-arraymesh"><inline classes="std std-ref">ArrayMesh</inline></reference> 中。从精灵表导入 2D 动画时，这可被用于节省内存。纹理图集仅支持在 2D 中渲染，不支持 3D。另请参见 <reference internal="True" refuri="class_resourceimportertexture#class-resourceimportertexture"><inline classes="std std-ref">ResourceImporterTexture</inline></reference> 和 <reference internal="True" refuri="class_resourceimporterlayeredtexture#class-resourceimporterlayeredtexture"><inline classes="std std-ref">ResourceImporterLayeredTexture</inline></reference>。</paragraph>
            <paragraph><strong>注意：</strong><strong>ResourceImporterTextureAtlas</strong> 不处理导入 <reference internal="True" refuri="class_tilesetatlassource#class-tilesetatlassource"><inline classes="std std-ref">TileSetAtlasSource</inline></reference>，它是使用 <reference internal="True" refuri="class_tileset#class-tileset"><inline classes="std std-ref">TileSet</inline></reference> 编辑器创建的。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="29"></colspec>
                    <colspec colwidth="113"></colspec>
                    <colspec colwidth="11"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-resourceimportertextureatlas-property-atlas-file"><inline classes="std std-ref">atlas_file</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>""</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-resourceimportertextureatlas-property-crop-to-region"><inline classes="std std-ref">crop_to_region</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-resourceimportertextureatlas-property-import-mode"><inline classes="std std-ref">import_mode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-resourceimportertextureatlas-property-trim-alpha-border-from-region"><inline classes="std std-ref">trim_alpha_border_from_region</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="属性说明">
            <title>属性说明</title>
            <target refid="class-resourceimportertextureatlas-property-atlas-file"></target>
            <paragraph classes="classref-property" ids="class-resourceimportertextureatlas-property-atlas-file" names="class_resourceimportertextureatlas_property_atlas_file"><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>atlas_file</strong> = <literal>""</literal> <reference internal="True" refid="class-resourceimportertextureatlas-property-atlas-file"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>图集精灵表的路径。该属性<emphasis>必须</emphasis>被设置为 PNG 图像的有效路径。否则，图集将无法导入。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-resourceimportertextureatlas-property-crop-to-region"></target>
            <paragraph classes="classref-property" ids="class-resourceimportertextureatlas-property-crop-to-region" names="class_resourceimportertextureatlas_property_crop_to_region"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>crop_to_region</strong> = <literal>false</literal> <reference internal="True" refid="class-resourceimportertextureatlas-property-crop-to-region"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果为 <literal>true</literal>，则丢弃图集中的空白区域。这仅影响最终的精灵定位，而不影响存储。另请参见 <reference internal="True" refid="class-resourceimportertextureatlas-property-trim-alpha-border-from-region"><inline classes="std std-ref">trim_alpha_border_from_region</inline></reference>。</paragraph>
            <paragraph><strong>注意：</strong>仅当 <reference internal="True" refid="class-resourceimportertextureatlas-property-import-mode"><inline classes="std std-ref">import_mode</inline></reference> 为<strong>区块</strong>时有效。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-resourceimportertextureatlas-property-import-mode"></target>
            <paragraph classes="classref-property" ids="class-resourceimportertextureatlas-property-import-mode" names="class_resourceimportertextureatlas_property_import_mode"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>import_mode</strong> = <literal>0</literal> <reference internal="True" refid="class-resourceimportertextureatlas-property-import-mode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><strong>区块：</strong>将图集导入到 <reference internal="True" refuri="class_atlastexture#class-atlastexture"><inline classes="std std-ref">AtlasTexture</inline></reference> 资源中，该资源被渲染为矩形。这渲染速度很快，但如果 <reference internal="True" refid="class-resourceimportertextureatlas-property-trim-alpha-border-from-region"><inline classes="std std-ref">trim_alpha_border_from_region</inline></reference> 无法有效修剪透明区域，则仍然必须渲染透明区域。 在屏幕上渲染大型精灵时，这会降低性能。</paragraph>
            <paragraph><strong>网格：</strong>将图集导入为 <reference internal="True" refuri="class_arraymesh#class-arraymesh"><inline classes="std std-ref">ArrayMesh</inline></reference> 资源，保持原始位图可见（但被渲染为多边形）。这可被用于在渲染大型透明精灵时降低填充率，但代价是如果精灵中几乎没有透明区域，则渲染速度会变慢。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-resourceimportertextureatlas-property-trim-alpha-border-from-region"></target>
            <paragraph classes="classref-property" ids="class-resourceimportertextureatlas-property-trim-alpha-border-from-region" names="class_resourceimportertextureatlas_property_trim_alpha_border_from_region"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>trim_alpha_border_from_region</strong> = <literal>true</literal> <reference internal="True" refid="class-resourceimportertextureatlas-property-trim-alpha-border-from-region"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果为 <literal>true</literal>，则使用裁剪矩形（从不旋转）修剪区块以排除完全透明的像素。这可以被用来节省内存。另请参见 <reference internal="True" refid="class-resourceimportertextureatlas-property-crop-to-region"><inline classes="std std-ref">crop_to_region</inline></reference>。</paragraph>
            <paragraph><strong>注意：</strong>仅当 <reference internal="True" refid="class-resourceimportertextureatlas-property-import-mode"><inline classes="std std-ref">import_mode</inline></reference> 为<strong>区块</strong>时有效。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

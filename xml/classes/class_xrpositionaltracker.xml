<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_xrpositionaltracker.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/XRPositionalTracker.xml.</comment>
    <target refid="class-xrpositionaltracker"></target>
    <section ids="xrpositionaltracker class-xrpositionaltracker" names="xrpositionaltracker class_xrpositionaltracker">
        <title>XRPositionalTracker</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_xrtracker#class-xrtracker"><inline classes="std std-ref">XRTracker</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph><strong>派生：</strong> <reference internal="True" refuri="class_xrbodytracker#class-xrbodytracker"><inline classes="std std-ref">XRBodyTracker</inline></reference>, <reference internal="True" refuri="class_xrcontrollertracker#class-xrcontrollertracker"><inline classes="std std-ref">XRControllerTracker</inline></reference>, <reference internal="True" refuri="class_xrhandtracker#class-xrhandtracker"><inline classes="std std-ref">XRHandTracker</inline></reference></paragraph>
        <paragraph>追踪对象。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>An instance of this object represents a device that is tracked, such as a controller or anchor point. HMDs aren't represented here as they are handled internally.</paragraph>
            <paragraph>As controllers are turned on and the <reference internal="True" refuri="class_xrinterface#class-xrinterface"><inline classes="std std-ref">XRInterface</inline></reference> detects them, instances of this object are automatically added to this list of active tracking objects accessible through the <reference internal="True" refuri="class_xrserver#class-xrserver"><inline classes="std std-ref">XRServer</inline></reference>.</paragraph>
            <paragraph>The <reference internal="True" refuri="class_xrnode3d#class-xrnode3d"><inline classes="std std-ref">XRNode3D</inline></reference> and <reference internal="True" refuri="class_xranchor3d#class-xranchor3d"><inline classes="std std-ref">XRAnchor3D</inline></reference> both consume objects of this type and should be used in your project. The positional trackers are just under-the-hood objects that make this all work. These are mostly exposed so that GDExtension-based interfaces can interact with them.</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference internal="True" refuri="../tutorials/xr/index"><inline classes="doc">XR 文档索引</inline></reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="58"></colspec>
                    <colspec colwidth="60"></colspec>
                    <colspec colwidth="8"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-xrpositionaltracker-trackerhand"><inline classes="std std-ref">TrackerHand</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-xrpositionaltracker-property-hand"><inline classes="std std-ref">hand</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-xrpositionaltracker-property-profile"><inline classes="std std-ref">profile</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>""</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id4" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="31"></colspec>
                    <colspec colwidth="341"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-xrpositionaltracker-method-get-input"><inline classes="std std-ref">get_input</inline></reference>(name: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_xrpose#class-xrpose"><inline classes="std std-ref">XRPose</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-xrpositionaltracker-method-get-pose"><inline classes="std std-ref">get_pose</inline></reference>(name: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-xrpositionaltracker-method-has-pose"><inline classes="std std-ref">has_pose</inline></reference>(name: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-xrpositionaltracker-method-invalidate-pose"><inline classes="std std-ref">invalidate_pose</inline></reference>(name: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-xrpositionaltracker-method-set-input"><inline classes="std std-ref">set_input</inline></reference>(name: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>, value: <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-xrpositionaltracker-method-set-pose"><inline classes="std std-ref">set_pose</inline></reference>(name: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>, transform: <reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference>, linear_velocity: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>, angular_velocity: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>, tracking_confidence: <reference internal="True" refuri="class_xrpose#enum-xrpose-trackingconfidence"><inline classes="std std-ref">TrackingConfidence</inline></reference>)</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="信号">
            <title>信号</title>
            <target refid="class-xrpositionaltracker-signal-button-pressed"></target>
            <paragraph classes="classref-signal" ids="class-xrpositionaltracker-signal-button-pressed" names="class_xrpositionaltracker_signal_button_pressed"><strong>button_pressed</strong>(name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <reference internal="True" refid="class-xrpositionaltracker-signal-button-pressed"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当该追踪器上的一个按钮被按下时发出。请注意，许多 XR 运行时允许将其他输入映射到按钮。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-xrpositionaltracker-signal-button-released"></target>
            <paragraph classes="classref-signal" ids="class-xrpositionaltracker-signal-button-released" names="class_xrpositionaltracker_signal_button_released"><strong>button_released</strong>(name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <reference internal="True" refid="class-xrpositionaltracker-signal-button-released"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当该追踪器上的一个按钮被释放时发出。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-xrpositionaltracker-signal-input-float-changed"></target>
            <paragraph classes="classref-signal" ids="class-xrpositionaltracker-signal-input-float-changed" names="class_xrpositionaltracker_signal_input_float_changed"><strong>input_float_changed</strong>(name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <reference internal="True" refid="class-xrpositionaltracker-signal-input-float-changed"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当此追踪器上的一个触发器或类似输入更改值时发出。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-xrpositionaltracker-signal-input-vector2-changed"></target>
            <paragraph classes="classref-signal" ids="class-xrpositionaltracker-signal-input-vector2-changed" names="class_xrpositionaltracker_signal_input_vector2_changed"><strong>input_vector2_changed</strong>(name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, vector: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <reference internal="True" refid="class-xrpositionaltracker-signal-input-vector2-changed"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当该追踪器上的一个拇指杆或拇指板移动时发出。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-xrpositionaltracker-signal-pose-changed"></target>
            <paragraph classes="classref-signal" ids="class-xrpositionaltracker-signal-pose-changed" names="class_xrpositionaltracker_signal_pose_changed"><strong>pose_changed</strong>(pose: <reference internal="True" refuri="class_xrpose#class-xrpose"><inline classes="std std-ref">XRPose</inline></reference>) <reference internal="True" refid="class-xrpositionaltracker-signal-pose-changed"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当被此追踪器追踪的一个姿势状态发生变化时发出。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-xrpositionaltracker-signal-pose-lost-tracking"></target>
            <paragraph classes="classref-signal" ids="class-xrpositionaltracker-signal-pose-lost-tracking" names="class_xrpositionaltracker_signal_pose_lost_tracking"><strong>pose_lost_tracking</strong>(pose: <reference internal="True" refuri="class_xrpose#class-xrpose"><inline classes="std std-ref">XRPose</inline></reference>) <reference internal="True" refid="class-xrpositionaltracker-signal-pose-lost-tracking"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当被该追踪器追踪的一个姿势停止获取更新的跟踪数据时发出。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-xrpositionaltracker-signal-profile-changed"></target>
            <paragraph classes="classref-signal" ids="class-xrpositionaltracker-signal-profile-changed" names="class_xrpositionaltracker_signal_profile_changed"><strong>profile_changed</strong>(role: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <reference internal="True" refid="class-xrpositionaltracker-signal-profile-changed"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当我们的追踪器的配置发生变化时发出。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="枚举">
            <title>枚举</title>
            <target refid="enum-xrpositionaltracker-trackerhand"></target>
            <paragraph classes="classref-enumeration" ids="enum-xrpositionaltracker-trackerhand" names="enum_xrpositionaltracker_trackerhand">enum <strong>TrackerHand</strong>: <reference internal="True" refid="enum-xrpositionaltracker-trackerhand"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-xrpositionaltracker-constant-tracker-hand-unknown"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-xrpositionaltracker-constant-tracker-hand-unknown" names="class_xrpositionaltracker_constant_tracker_hand_unknown"><reference internal="True" refid="enum-xrpositionaltracker-trackerhand"><inline classes="std std-ref">TrackerHand</inline></reference> <strong>TRACKER_HAND_UNKNOWN</strong> = <literal>0</literal></paragraph>
            <paragraph>手持该追踪器的手是未知的或不适用的。</paragraph>
            <target refid="class-xrpositionaltracker-constant-tracker-hand-left"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-xrpositionaltracker-constant-tracker-hand-left" names="class_xrpositionaltracker_constant_tracker_hand_left"><reference internal="True" refid="enum-xrpositionaltracker-trackerhand"><inline classes="std std-ref">TrackerHand</inline></reference> <strong>TRACKER_HAND_LEFT</strong> = <literal>1</literal></paragraph>
            <paragraph>此跟踪器是左手控制器。</paragraph>
            <target refid="class-xrpositionaltracker-constant-tracker-hand-right"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-xrpositionaltracker-constant-tracker-hand-right" names="class_xrpositionaltracker_constant_tracker_hand_right"><reference internal="True" refid="enum-xrpositionaltracker-trackerhand"><inline classes="std std-ref">TrackerHand</inline></reference> <strong>TRACKER_HAND_RIGHT</strong> = <literal>2</literal></paragraph>
            <paragraph>此跟踪器是右手控制器。</paragraph>
            <target refid="class-xrpositionaltracker-constant-tracker-hand-max"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-xrpositionaltracker-constant-tracker-hand-max" names="class_xrpositionaltracker_constant_tracker_hand_max"><reference internal="True" refid="enum-xrpositionaltracker-trackerhand"><inline classes="std std-ref">TrackerHand</inline></reference> <strong>TRACKER_HAND_MAX</strong> = <literal>3</literal></paragraph>
            <paragraph>代表 <reference internal="True" refid="enum-xrpositionaltracker-trackerhand"><inline classes="std std-ref">TrackerHand</inline></reference> 枚举的大小。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id7" names="属性说明">
            <title>属性说明</title>
            <target refid="class-xrpositionaltracker-property-hand"></target>
            <paragraph classes="classref-property" ids="class-xrpositionaltracker-property-hand" names="class_xrpositionaltracker_property_hand"><reference internal="True" refid="enum-xrpositionaltracker-trackerhand"><inline classes="std std-ref">TrackerHand</inline></reference> <strong>hand</strong> = <literal>0</literal> <reference internal="True" refid="class-xrpositionaltracker-property-hand"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_tracker_hand</strong>(value: <reference internal="True" refid="enum-xrpositionaltracker-trackerhand"><inline classes="std std-ref">TrackerHand</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-xrpositionaltracker-trackerhand"><inline classes="std std-ref">TrackerHand</inline></reference> <strong>get_tracker_hand</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>定义此追踪器与哪只手相关。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-xrpositionaltracker-property-profile"></target>
            <paragraph classes="classref-property" ids="class-xrpositionaltracker-property-profile" names="class_xrpositionaltracker_property_profile"><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>profile</strong> = <literal>""</literal> <reference internal="True" refid="class-xrpositionaltracker-property-profile"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_tracker_profile</strong>(value: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>get_tracker_profile</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>与此追踪器关联的配置，取决于接口，但将指示被追踪的控制器类型。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id8" names="方法说明">
            <title>方法说明</title>
            <target refid="class-xrpositionaltracker-method-get-input"></target>
            <paragraph classes="classref-method" ids="class-xrpositionaltracker-method-get-input" names="class_xrpositionaltracker_method_get_input"><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> <strong>get_input</strong>(name: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-xrpositionaltracker-method-get-input"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><strong>已弃用：</strong> Use through <reference internal="True" refuri="class_xrcontrollertracker#class-xrcontrollertracker"><inline classes="std std-ref">XRControllerTracker</inline></reference>.</paragraph>
            <paragraph>返回此追踪器的输入。它可以返回一个布尔值、浮点数或 <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> 值，具体取决于输入是一个按钮、触发器还是拇指杆/拇指板。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-xrpositionaltracker-method-get-pose"></target>
            <paragraph classes="classref-method" ids="class-xrpositionaltracker-method-get-pose" names="class_xrpositionaltracker_method_get_pose"><reference internal="True" refuri="class_xrpose#class-xrpose"><inline classes="std std-ref">XRPose</inline></reference> <strong>get_pose</strong>(name: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-xrpositionaltracker-method-get-pose"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回绑定 <literal>name</literal> 姿势的当前 <reference internal="True" refuri="class_xrpose#class-xrpose"><inline classes="std std-ref">XRPose</inline></reference> 状态对象。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-xrpositionaltracker-method-has-pose"></target>
            <paragraph classes="classref-method" ids="class-xrpositionaltracker-method-has-pose" names="class_xrpositionaltracker_method_has_pose"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>has_pose</strong>(name: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-xrpositionaltracker-method-has-pose"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果追踪器可用，并且当前正在追踪绑定的 <literal>name</literal> 姿势，则返回 <literal>true</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-xrpositionaltracker-method-invalidate-pose"></target>
            <paragraph classes="classref-method" ids="class-xrpositionaltracker-method-invalidate-pose" names="class_xrpositionaltracker_method_invalidate_pose"><abbreviation explanation="无返回值。">void</abbreviation> <strong>invalidate_pose</strong>(name: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>) <reference internal="True" refid="class-xrpositionaltracker-method-invalidate-pose"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将此姿势标记为无效，我们不会清除最后报告的状态，但如果我们失去追踪，它允许用户决定是否需要隐藏追踪器，或仅保留在其最后一个已知位置。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-xrpositionaltracker-method-set-input"></target>
            <paragraph classes="classref-method" ids="class-xrpositionaltracker-method-set-input" names="class_xrpositionaltracker_method_set_input"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_input</strong>(name: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>, value: <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference>) <reference internal="True" refid="class-xrpositionaltracker-method-set-input"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><strong>已弃用：</strong> Use through <reference internal="True" refuri="class_xrcontrollertracker#class-xrcontrollertracker"><inline classes="std std-ref">XRControllerTracker</inline></reference>.</paragraph>
            <paragraph>更改给定输入的值。此方法由一个 <reference internal="True" refuri="class_xrinterface#class-xrinterface"><inline classes="std std-ref">XRInterface</inline></reference> 实现调用，不应直接使用。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-xrpositionaltracker-method-set-pose"></target>
            <paragraph classes="classref-method" ids="class-xrpositionaltracker-method-set-pose" names="class_xrpositionaltracker_method_set_pose"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_pose</strong>(name: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>, transform: <reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference>, linear_velocity: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>, angular_velocity: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>, tracking_confidence: <reference internal="True" refuri="class_xrpose#enum-xrpose-trackingconfidence"><inline classes="std std-ref">TrackingConfidence</inline></reference>) <reference internal="True" refid="class-xrpositionaltracker-method-set-pose"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置给定姿势的变换、线速度、角速度和追踪置信度。此方法由一个 <reference internal="True" refuri="class_xrinterface#class-xrinterface"><inline classes="std std-ref">XRInterface</inline></reference> 实现调用，不应直接使用。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

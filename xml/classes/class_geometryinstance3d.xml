<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_geometryinstance3d.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/GeometryInstance3D.xml.</comment>
    <target refid="class-geometryinstance3d"></target>
    <section ids="geometryinstance3d class-geometryinstance3d" names="geometryinstance3d class_geometryinstance3d">
        <title>GeometryInstance3D</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_visualinstance3d#class-visualinstance3d"><inline classes="std std-ref">VisualInstance3D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node3d#class-node3d"><inline classes="std std-ref">Node3D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph><strong>派生：</strong> <reference internal="True" refuri="class_cpuparticles3d#class-cpuparticles3d"><inline classes="std std-ref">CPUParticles3D</inline></reference>, <reference internal="True" refuri="class_csgshape3d#class-csgshape3d"><inline classes="std std-ref">CSGShape3D</inline></reference>, <reference internal="True" refuri="class_gpuparticles3d#class-gpuparticles3d"><inline classes="std std-ref">GPUParticles3D</inline></reference>, <reference internal="True" refuri="class_label3d#class-label3d"><inline classes="std std-ref">Label3D</inline></reference>, <reference internal="True" refuri="class_meshinstance3d#class-meshinstance3d"><inline classes="std std-ref">MeshInstance3D</inline></reference>, <reference internal="True" refuri="class_multimeshinstance3d#class-multimeshinstance3d"><inline classes="std std-ref">MultiMeshInstance3D</inline></reference>, <reference internal="True" refuri="class_spritebase3d#class-spritebase3d"><inline classes="std std-ref">SpriteBase3D</inline></reference></paragraph>
        <paragraph>基于几何图形的视觉实例的基础节点。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>基于几何图形的视觉实例的基础节点。分享一些共同的机制，如可见性和自定义材质。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference internal="True" refuri="../tutorials/3d/visibility_ranges"><inline classes="doc">可见范围（HLOD）</inline></reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="81"></colspec>
                    <colspec colwidth="103"></colspec>
                    <colspec colwidth="28"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-geometryinstance3d-shadowcastingsetting"><inline classes="std std-ref">ShadowCastingSetting</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-geometryinstance3d-property-cast-shadow"><inline classes="std std-ref">cast_shadow</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_aabb#class-aabb"><inline classes="std std-ref">AABB</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-geometryinstance3d-property-custom-aabb"><inline classes="std std-ref">custom_aabb</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>AABB(0, 0, 0, 0, 0, 0)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-geometryinstance3d-property-extra-cull-margin"><inline classes="std std-ref">extra_cull_margin</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-geometryinstance3d-lightmapscale"><inline classes="std std-ref">LightmapScale</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-geometryinstance3d-property-gi-lightmap-scale"><inline classes="std std-ref">gi_lightmap_scale</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-geometryinstance3d-gimode"><inline classes="std std-ref">GIMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-geometryinstance3d-property-gi-mode"><inline classes="std std-ref">gi_mode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-geometryinstance3d-property-ignore-occlusion-culling"><inline classes="std std-ref">ignore_occlusion_culling</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-geometryinstance3d-property-lod-bias"><inline classes="std std-ref">lod_bias</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_material#class-material"><inline classes="std std-ref">Material</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-geometryinstance3d-property-material-overlay"><inline classes="std std-ref">material_overlay</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_material#class-material"><inline classes="std std-ref">Material</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-geometryinstance3d-property-material-override"><inline classes="std std-ref">material_override</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-geometryinstance3d-property-transparency"><inline classes="std std-ref">transparency</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-geometryinstance3d-property-visibility-range-begin"><inline classes="std std-ref">visibility_range_begin</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-geometryinstance3d-property-visibility-range-begin-margin"><inline classes="std std-ref">visibility_range_begin_margin</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-geometryinstance3d-property-visibility-range-end"><inline classes="std std-ref">visibility_range_end</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-geometryinstance3d-property-visibility-range-end-margin"><inline classes="std std-ref">visibility_range_end_margin</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-geometryinstance3d-visibilityrangefademode"><inline classes="std std-ref">VisibilityRangeFadeMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-geometryinstance3d-property-visibility-range-fade-mode"><inline classes="std std-ref">visibility_range_fade_mode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id4" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="31"></colspec>
                    <colspec colwidth="190"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-geometryinstance3d-method-get-instance-shader-parameter"><inline classes="std std-ref">get_instance_shader_parameter</inline></reference>(name: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-geometryinstance3d-method-set-instance-shader-parameter"><inline classes="std std-ref">set_instance_shader_parameter</inline></reference>(name: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>, value: <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference>)</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="枚举">
            <title>枚举</title>
            <target refid="enum-geometryinstance3d-shadowcastingsetting"></target>
            <paragraph classes="classref-enumeration" ids="enum-geometryinstance3d-shadowcastingsetting" names="enum_geometryinstance3d_shadowcastingsetting">enum <strong>ShadowCastingSetting</strong>: <reference internal="True" refid="enum-geometryinstance3d-shadowcastingsetting"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-geometryinstance3d-constant-shadow-casting-setting-off"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-geometryinstance3d-constant-shadow-casting-setting-off" names="class_geometryinstance3d_constant_shadow_casting_setting_off"><reference internal="True" refid="enum-geometryinstance3d-shadowcastingsetting"><inline classes="std std-ref">ShadowCastingSetting</inline></reference> <strong>SHADOW_CASTING_SETTING_OFF</strong> = <literal>0</literal></paragraph>
            <paragraph>不会投射任何阴影。使用该选项，可提高不太可能投射明显阴影的小型几何体（例如碎片）的性能。</paragraph>
            <target refid="class-geometryinstance3d-constant-shadow-casting-setting-on"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-geometryinstance3d-constant-shadow-casting-setting-on" names="class_geometryinstance3d_constant_shadow_casting_setting_on"><reference internal="True" refid="enum-geometryinstance3d-shadowcastingsetting"><inline classes="std std-ref">ShadowCastingSetting</inline></reference> <strong>SHADOW_CASTING_SETTING_ON</strong> = <literal>1</literal></paragraph>
            <paragraph>将从 GeometryInstance3D 中的所有可见面投射阴影。</paragraph>
            <paragraph>将考虑剔除，因此在阴影投射时，不会考虑那些不会被渲染的面。</paragraph>
            <target refid="class-geometryinstance3d-constant-shadow-casting-setting-double-sided"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-geometryinstance3d-constant-shadow-casting-setting-double-sided" names="class_geometryinstance3d_constant_shadow_casting_setting_double_sided"><reference internal="True" refid="enum-geometryinstance3d-shadowcastingsetting"><inline classes="std std-ref">ShadowCastingSetting</inline></reference> <strong>SHADOW_CASTING_SETTING_DOUBLE_SIDED</strong> = <literal>2</literal></paragraph>
            <paragraph>将从 GeometryInstance3D 中的所有可见面投射阴影。</paragraph>
            <paragraph>不会考虑剔除，因此在阴影投射时，将考虑所有面。</paragraph>
            <target refid="class-geometryinstance3d-constant-shadow-casting-setting-shadows-only"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-geometryinstance3d-constant-shadow-casting-setting-shadows-only" names="class_geometryinstance3d_constant_shadow_casting_setting_shadows_only"><reference internal="True" refid="enum-geometryinstance3d-shadowcastingsetting"><inline classes="std std-ref">ShadowCastingSetting</inline></reference> <strong>SHADOW_CASTING_SETTING_SHADOWS_ONLY</strong> = <literal>3</literal></paragraph>
            <paragraph>只显示从这个物体投射出来的阴影。</paragraph>
            <paragraph>换句话说，实际的网格将不可见，只有网格投影可见。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-geometryinstance3d-gimode"></target>
            <paragraph classes="classref-enumeration" ids="enum-geometryinstance3d-gimode" names="enum_geometryinstance3d_gimode">enum <strong>GIMode</strong>: <reference internal="True" refid="enum-geometryinstance3d-gimode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-geometryinstance3d-constant-gi-mode-disabled"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-geometryinstance3d-constant-gi-mode-disabled" names="class_geometryinstance3d_constant_gi_mode_disabled"><reference internal="True" refid="enum-geometryinstance3d-gimode"><inline classes="std std-ref">GIMode</inline></reference> <strong>GI_MODE_DISABLED</strong> = <literal>0</literal></paragraph>
            <paragraph>禁用全局照明模式。用于对全局照明没有贡献的动态对象（例如角色）。使用 <reference internal="True" refuri="class_voxelgi#class-voxelgi"><inline classes="std std-ref">VoxelGI</inline></reference> 和 SDFGI 时，几何体将<emphasis>接收</emphasis>间接照明和反射，但在 GI 烘焙中不会考虑几何体。</paragraph>
            <target refid="class-geometryinstance3d-constant-gi-mode-static"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-geometryinstance3d-constant-gi-mode-static" names="class_geometryinstance3d_constant_gi_mode_static"><reference internal="True" refid="enum-geometryinstance3d-gimode"><inline classes="std std-ref">GIMode</inline></reference> <strong>GI_MODE_STATIC</strong> = <literal>1</literal></paragraph>
            <paragraph>烘焙全局照明模式。用于有助于全局照明的静态对象（例如关卡几何体）。该 GI 模式在使用 <reference internal="True" refuri="class_voxelgi#class-voxelgi"><inline classes="std std-ref">VoxelGI</inline></reference>、SDFGI 和 <reference internal="True" refuri="class_lightmapgi#class-lightmapgi"><inline classes="std std-ref">LightmapGI</inline></reference> 时有效。</paragraph>
            <target refid="class-geometryinstance3d-constant-gi-mode-dynamic"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-geometryinstance3d-constant-gi-mode-dynamic" names="class_geometryinstance3d_constant_gi_mode_dynamic"><reference internal="True" refid="enum-geometryinstance3d-gimode"><inline classes="std std-ref">GIMode</inline></reference> <strong>GI_MODE_DYNAMIC</strong> = <literal>2</literal></paragraph>
            <paragraph>动态全局照明模式。用于有助于全局照明的动态对象。这种 GI 模式只有在使用 <reference internal="True" refuri="class_voxelgi#class-voxelgi"><inline classes="std std-ref">VoxelGI</inline></reference> 时才有效，但它对性能的影响，比 <reference internal="True" refid="class-geometryinstance3d-constant-gi-mode-static"><inline classes="std std-ref">GI_MODE_STATIC</inline></reference> 更高。当使用其他 GI 方法时，它的作用与 <reference internal="True" refid="class-geometryinstance3d-constant-gi-mode-disabled"><inline classes="std std-ref">GI_MODE_DISABLED</inline></reference> 相同。使用 <reference internal="True" refuri="class_lightmapgi#class-lightmapgi"><inline classes="std std-ref">LightmapGI</inline></reference> 时，对象将使用光照贴图探针接收间接光照，而不是使用烘焙的光照贴图纹理。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-geometryinstance3d-lightmapscale"></target>
            <paragraph classes="classref-enumeration" ids="enum-geometryinstance3d-lightmapscale" names="enum_geometryinstance3d_lightmapscale">enum <strong>LightmapScale</strong>: <reference internal="True" refid="enum-geometryinstance3d-lightmapscale"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-geometryinstance3d-constant-lightmap-scale-1x"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-geometryinstance3d-constant-lightmap-scale-1x" names="class_geometryinstance3d_constant_lightmap_scale_1x"><reference internal="True" refid="enum-geometryinstance3d-lightmapscale"><inline classes="std std-ref">LightmapScale</inline></reference> <strong>LIGHTMAP_SCALE_1X</strong> = <literal>0</literal></paragraph>
            <paragraph>使用 <reference internal="True" refuri="class_lightmapgi#class-lightmapgi"><inline classes="std std-ref">LightmapGI</inline></reference> 进行光照贴图的标准纹素密度。</paragraph>
            <target refid="class-geometryinstance3d-constant-lightmap-scale-2x"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-geometryinstance3d-constant-lightmap-scale-2x" names="class_geometryinstance3d_constant_lightmap_scale_2x"><reference internal="True" refid="enum-geometryinstance3d-lightmapscale"><inline classes="std std-ref">LightmapScale</inline></reference> <strong>LIGHTMAP_SCALE_2X</strong> = <literal>1</literal></paragraph>
            <paragraph>使用 <reference internal="True" refuri="class_lightmapgi#class-lightmapgi"><inline classes="std std-ref">LightmapGI</inline></reference> 进行光照贴图时，将纹素密度乘以 2 倍。为确保纹素密度的一致性，请在按 1.5 到 3.0 之间的系数缩放网格时，使用该选项。</paragraph>
            <target refid="class-geometryinstance3d-constant-lightmap-scale-4x"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-geometryinstance3d-constant-lightmap-scale-4x" names="class_geometryinstance3d_constant_lightmap_scale_4x"><reference internal="True" refid="enum-geometryinstance3d-lightmapscale"><inline classes="std std-ref">LightmapScale</inline></reference> <strong>LIGHTMAP_SCALE_4X</strong> = <literal>2</literal></paragraph>
            <paragraph>使用 <reference internal="True" refuri="class_lightmapgi#class-lightmapgi"><inline classes="std std-ref">LightmapGI</inline></reference> 进行光照贴图时，将纹素密度乘以 4 倍。为确保纹素密度的一致性，请在按 3.0 到 6.0 之间的系数缩放网格时，使用该选项。</paragraph>
            <target refid="class-geometryinstance3d-constant-lightmap-scale-8x"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-geometryinstance3d-constant-lightmap-scale-8x" names="class_geometryinstance3d_constant_lightmap_scale_8x"><reference internal="True" refid="enum-geometryinstance3d-lightmapscale"><inline classes="std std-ref">LightmapScale</inline></reference> <strong>LIGHTMAP_SCALE_8X</strong> = <literal>3</literal></paragraph>
            <paragraph>使用 <reference internal="True" refuri="class_lightmapgi#class-lightmapgi"><inline classes="std std-ref">LightmapGI</inline></reference> 进行光照贴图时，将纹素密度乘以 8 倍。为确保纹素密度的一致性，请在以大于 6.0 的系数缩放网格时，使用该选项。</paragraph>
            <target refid="class-geometryinstance3d-constant-lightmap-scale-max"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-geometryinstance3d-constant-lightmap-scale-max" names="class_geometryinstance3d_constant_lightmap_scale_max"><reference internal="True" refid="enum-geometryinstance3d-lightmapscale"><inline classes="std std-ref">LightmapScale</inline></reference> <strong>LIGHTMAP_SCALE_MAX</strong> = <literal>4</literal></paragraph>
            <paragraph>代表 <reference internal="True" refid="enum-geometryinstance3d-lightmapscale"><inline classes="std std-ref">LightmapScale</inline></reference> 枚举的大小。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-geometryinstance3d-visibilityrangefademode"></target>
            <paragraph classes="classref-enumeration" ids="enum-geometryinstance3d-visibilityrangefademode" names="enum_geometryinstance3d_visibilityrangefademode">enum <strong>VisibilityRangeFadeMode</strong>: <reference internal="True" refid="enum-geometryinstance3d-visibilityrangefademode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-geometryinstance3d-constant-visibility-range-fade-disabled"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-geometryinstance3d-constant-visibility-range-fade-disabled" names="class_geometryinstance3d_constant_visibility_range_fade_disabled"><reference internal="True" refid="enum-geometryinstance3d-visibilityrangefademode"><inline classes="std std-ref">VisibilityRangeFadeMode</inline></reference> <strong>VISIBILITY_RANGE_FADE_DISABLED</strong> = <literal>0</literal></paragraph>
            <paragraph>不会自行淡化，也不会淡化其可见性依赖项，而是使用滞后。这是手动 LOD 的最快方法，但它可能会导致明显的 LOD 过渡，具体取决于 LOD 网格的创作方式。有关更多信息，请参阅 <reference internal="True" refid="class-geometryinstance3d-property-visibility-range-begin"><inline classes="std std-ref">visibility_range_begin</inline></reference> 和 <reference internal="True" refuri="class_node3d#class-node3d-property-visibility-parent"><inline classes="std std-ref">Node3D.visibility_parent</inline></reference>。</paragraph>
            <target refid="class-geometryinstance3d-constant-visibility-range-fade-self"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-geometryinstance3d-constant-visibility-range-fade-self" names="class_geometryinstance3d_constant_visibility_range_fade_self"><reference internal="True" refid="enum-geometryinstance3d-visibilityrangefademode"><inline classes="std std-ref">VisibilityRangeFadeMode</inline></reference> <strong>VISIBILITY_RANGE_FADE_SELF</strong> = <literal>1</literal></paragraph>
            <paragraph>当达到自身可见范围的极限时，会自行淡出。这比 <reference internal="True" refid="class-geometryinstance3d-constant-visibility-range-fade-disabled"><inline classes="std std-ref">VISIBILITY_RANGE_FADE_DISABLED</inline></reference> 慢，但它可以提供更平滑的过渡。淡出范围由 <reference internal="True" refid="class-geometryinstance3d-property-visibility-range-begin-margin"><inline classes="std std-ref">visibility_range_begin_margin</inline></reference> 和 <reference internal="True" refid="class-geometryinstance3d-property-visibility-range-end-margin"><inline classes="std std-ref">visibility_range_end_margin</inline></reference> 决定。</paragraph>
            <paragraph><strong>注意：</strong>仅支持使用 Forward+ 渲染方法。使用 Mobile 或 Compatibility 渲染方法时，该模式与 <reference internal="True" refid="class-geometryinstance3d-constant-visibility-range-fade-disabled"><inline classes="std std-ref">VISIBILITY_RANGE_FADE_DISABLED</inline></reference> 类似，但会禁用迟滞。</paragraph>
            <target refid="class-geometryinstance3d-constant-visibility-range-fade-dependencies"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-geometryinstance3d-constant-visibility-range-fade-dependencies" names="class_geometryinstance3d_constant_visibility_range_fade_dependencies"><reference internal="True" refid="enum-geometryinstance3d-visibilityrangefademode"><inline classes="std std-ref">VisibilityRangeFadeMode</inline></reference> <strong>VISIBILITY_RANGE_FADE_DEPENDENCIES</strong> = <literal>2</literal></paragraph>
            <paragraph>当达到其自身可见性范围的限制时，将淡入其可见性依赖项（见 <reference internal="True" refuri="class_node3d#class-node3d-property-visibility-parent"><inline classes="std std-ref">Node3D.visibility_parent</inline></reference>）。这比 <reference internal="True" refid="class-geometryinstance3d-constant-visibility-range-fade-disabled"><inline classes="std std-ref">VISIBILITY_RANGE_FADE_DISABLED</inline></reference> 慢，但它可以提供更平滑的过渡。淡出范围由 <reference internal="True" refid="class-geometryinstance3d-property-visibility-range-begin-margin"><inline classes="std std-ref">visibility_range_begin_margin</inline></reference> 和 <reference internal="True" refid="class-geometryinstance3d-property-visibility-range-end-margin"><inline classes="std std-ref">visibility_range_end_margin</inline></reference> 决定。</paragraph>
            <paragraph><strong>注意：</strong>仅支持使用 Forward+ 渲染方法。使用 Mobile 或 Compatibility 渲染方法时，该模式与 <reference internal="True" refid="class-geometryinstance3d-constant-visibility-range-fade-disabled"><inline classes="std std-ref">VISIBILITY_RANGE_FADE_DISABLED</inline></reference> 类似，但会禁用迟滞。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="属性说明">
            <title>属性说明</title>
            <target refid="class-geometryinstance3d-property-cast-shadow"></target>
            <paragraph classes="classref-property" ids="class-geometryinstance3d-property-cast-shadow" names="class_geometryinstance3d_property_cast_shadow"><reference internal="True" refid="enum-geometryinstance3d-shadowcastingsetting"><inline classes="std std-ref">ShadowCastingSetting</inline></reference> <strong>cast_shadow</strong> = <literal>1</literal> <reference internal="True" refid="class-geometryinstance3d-property-cast-shadow"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_cast_shadows_setting</strong>(value: <reference internal="True" refid="enum-geometryinstance3d-shadowcastingsetting"><inline classes="std std-ref">ShadowCastingSetting</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-geometryinstance3d-shadowcastingsetting"><inline classes="std std-ref">ShadowCastingSetting</inline></reference> <strong>get_cast_shadows_setting</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>选择的阴影投射标志。可能的取值见 <reference internal="True" refid="enum-geometryinstance3d-shadowcastingsetting"><inline classes="std std-ref">ShadowCastingSetting</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-geometryinstance3d-property-custom-aabb"></target>
            <paragraph classes="classref-property" ids="class-geometryinstance3d-property-custom-aabb" names="class_geometryinstance3d_property_custom_aabb"><reference internal="True" refuri="class_aabb#class-aabb"><inline classes="std std-ref">AABB</inline></reference> <strong>custom_aabb</strong> = <literal>AABB(0, 0, 0, 0, 0, 0)</literal> <reference internal="True" refid="class-geometryinstance3d-property-custom-aabb"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_custom_aabb</strong>(value: <reference internal="True" refuri="class_aabb#class-aabb"><inline classes="std std-ref">AABB</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_aabb#class-aabb"><inline classes="std std-ref">AABB</inline></reference> <strong>get_custom_aabb</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>使用自定义边界框覆盖该节点的边界框。骨架使用 <reference internal="True" refuri="class_meshinstance3d#class-meshinstance3d"><inline classes="std std-ref">MeshInstance3D</inline></reference> 时可以避免重新计算 <reference internal="True" refuri="class_aabb#class-aabb"><inline classes="std std-ref">AABB</inline></reference> 节省性能，也可以用来对 <reference internal="True" refuri="class_meshinstance3d#class-meshinstance3d"><inline classes="std std-ref">MeshInstance3D</inline></reference> 的边界框进行精确控制。要使用默认的 AABB，请将其设为所有字段均为 <literal>0.0</literal> 的 <reference internal="True" refuri="class_aabb#class-aabb"><inline classes="std std-ref">AABB</inline></reference>。要避免视锥剔除，请将 <reference internal="True" refid="class-geometryinstance3d-property-custom-aabb"><inline classes="std std-ref">custom_aabb</inline></reference> 设为大到能够覆盖整个游戏世界的 AABB，例如 <literal>AABB(-10000, -10000, -10000, 20000, 20000, 20000)</literal>。要禁用所有形式的剔除（包括遮挡剔除），请使用该 <strong>GeometryInstance3D</strong> 的 <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> 调用 <reference internal="True" refuri="class_renderingserver#class-renderingserver-method-instance-set-ignore-culling"><inline classes="std std-ref">RenderingServer.instance_set_ignore_culling</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-geometryinstance3d-property-extra-cull-margin"></target>
            <paragraph classes="classref-property" ids="class-geometryinstance3d-property-extra-cull-margin" names="class_geometryinstance3d_property_extra_cull_margin"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>extra_cull_margin</strong> = <literal>0.0</literal> <reference internal="True" refid="class-geometryinstance3d-property-extra-cull-margin"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_extra_cull_margin</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_extra_cull_margin</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>添加到 GeometryInstance3D 的边界框（<reference internal="True" refuri="class_aabb#class-aabb"><inline classes="std std-ref">AABB</inline></reference>），以增加其剔除框的额外距离。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-geometryinstance3d-property-gi-lightmap-scale"></target>
            <paragraph classes="classref-property" ids="class-geometryinstance3d-property-gi-lightmap-scale" names="class_geometryinstance3d_property_gi_lightmap_scale"><reference internal="True" refid="enum-geometryinstance3d-lightmapscale"><inline classes="std std-ref">LightmapScale</inline></reference> <strong>gi_lightmap_scale</strong> = <literal>0</literal> <reference internal="True" refid="class-geometryinstance3d-property-gi-lightmap-scale"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_lightmap_scale</strong>(value: <reference internal="True" refid="enum-geometryinstance3d-lightmapscale"><inline classes="std std-ref">LightmapScale</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-geometryinstance3d-lightmapscale"><inline classes="std std-ref">LightmapScale</inline></reference> <strong>get_lightmap_scale</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph><reference internal="True" refuri="class_lightmapgi#class-lightmapgi"><inline classes="std std-ref">LightmapGI</inline></reference> 中用于光照贴图的纹素密度。较大的缩放值可在光照贴图中提供更高的分辨率，这可以为同时烘焙了直接光和间接光的灯光，生成更清晰的阴影。但是，更大的缩放值也会增加光照贴图纹理中网格占用的空间，从而增加需要的内存、存储空间和烘焙时间。在不同缩放下使用单个网格时，请考虑调整该值，以保持光照贴图纹素密度在网格之间保持一致。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-geometryinstance3d-property-gi-mode"></target>
            <paragraph classes="classref-property" ids="class-geometryinstance3d-property-gi-mode" names="class_geometryinstance3d_property_gi_mode"><reference internal="True" refid="enum-geometryinstance3d-gimode"><inline classes="std std-ref">GIMode</inline></reference> <strong>gi_mode</strong> = <literal>1</literal> <reference internal="True" refid="class-geometryinstance3d-property-gi-mode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_gi_mode</strong>(value: <reference internal="True" refid="enum-geometryinstance3d-gimode"><inline classes="std std-ref">GIMode</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-geometryinstance3d-gimode"><inline classes="std std-ref">GIMode</inline></reference> <strong>get_gi_mode</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>用于整个几何体的全局照明模式。为避免结果不一致，请在游戏过程中，使用与网格用途相匹配的模式（静态/动态）。</paragraph>
            <paragraph><strong>注意：</strong>灯光的烘焙模式，也会影响全局照明渲染。请参阅 <reference internal="True" refuri="class_light3d#class-light3d-property-light-bake-mode"><inline classes="std std-ref">Light3D.light_bake_mode</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-geometryinstance3d-property-ignore-occlusion-culling"></target>
            <paragraph classes="classref-property" ids="class-geometryinstance3d-property-ignore-occlusion-culling" names="class_geometryinstance3d_property_ignore_occlusion_culling"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>ignore_occlusion_culling</strong> = <literal>false</literal> <reference internal="True" refid="class-geometryinstance3d-property-ignore-occlusion-culling"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_ignore_occlusion_culling</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_ignoring_occlusion_culling</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则禁用这个实例的遮挡剔除。可用于即便开启遮挡剔除也必须渲染的小工具。</paragraph>
            <paragraph><strong>注意：</strong><reference internal="True" refid="class-geometryinstance3d-property-ignore-occlusion-culling"><inline classes="std std-ref">ignore_occlusion_culling</inline></reference> 不会影响视锥剔除（对象因为相机的角度而不可见时触发）。要避免视锥剔除，请将 <reference internal="True" refid="class-geometryinstance3d-property-custom-aabb"><inline classes="std std-ref">custom_aabb</inline></reference> 设置为很大的 AABB，覆盖住整个游戏世界，例如 <literal>AABB(-10000, -10000, -10000, 20000, 20000, 20000)</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-geometryinstance3d-property-lod-bias"></target>
            <paragraph classes="classref-property" ids="class-geometryinstance3d-property-lod-bias" names="class_geometryinstance3d_property_lod_bias"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>lod_bias</strong> = <literal>1.0</literal> <reference internal="True" refid="class-geometryinstance3d-property-lod-bias"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_lod_bias</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_lod_bias</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>改变网格过渡到较低细节级别的速度。值为 0 将强制网格达到最低细节级别，值为 1 将使用默认设置，更大的值将使网格在更远的距离处保持更高的细节级别。</paragraph>
            <paragraph>对于测试编辑器中的细节级别的过渡很有用。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-geometryinstance3d-property-material-overlay"></target>
            <paragraph classes="classref-property" ids="class-geometryinstance3d-property-material-overlay" names="class_geometryinstance3d_property_material_overlay"><reference internal="True" refuri="class_material#class-material"><inline classes="std std-ref">Material</inline></reference> <strong>material_overlay</strong> <reference internal="True" refid="class-geometryinstance3d-property-material-overlay"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_material_overlay</strong>(value: <reference internal="True" refuri="class_material#class-material"><inline classes="std std-ref">Material</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_material#class-material"><inline classes="std std-ref">Material</inline></reference> <strong>get_material_overlay</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>整个几何体的材质覆盖层。</paragraph>
            <paragraph>如果一个材质被分配给这个属性，它将会被渲染在所有表面的任何其他活动材质之上。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-geometryinstance3d-property-material-override"></target>
            <paragraph classes="classref-property" ids="class-geometryinstance3d-property-material-override" names="class_geometryinstance3d_property_material_override"><reference internal="True" refuri="class_material#class-material"><inline classes="std std-ref">Material</inline></reference> <strong>material_override</strong> <reference internal="True" refid="class-geometryinstance3d-property-material-override"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_material_override</strong>(value: <reference internal="True" refuri="class_material#class-material"><inline classes="std std-ref">Material</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_material#class-material"><inline classes="std std-ref">Material</inline></reference> <strong>get_material_override</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>整个几何体的材质覆盖。</paragraph>
            <paragraph>如果一个材质被分配给这个属性，它将会被用来代替在网格的任何材质槽中设置的任何材质。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-geometryinstance3d-property-transparency"></target>
            <paragraph classes="classref-property" ids="class-geometryinstance3d-property-transparency" names="class_geometryinstance3d_property_transparency"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>transparency</strong> = <literal>0.0</literal> <reference internal="True" refid="class-geometryinstance3d-property-transparency"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_transparency</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_transparency</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>应用于整个几何体的透明度（作为材质现有透明度的乘数）。<literal>0.0</literal> 是完全不透明的，而 <literal>1.0</literal> 是完全透明的。大于 <literal>0.0</literal>（不含）的值将强制几何体的材质通过透明管道，这会导致渲染速度变慢，并且可能会因不正确的透明度排序而出现渲染问题。但是，与使用透明材质不同的是，将 <reference internal="True" refid="class-geometryinstance3d-property-transparency"><inline classes="std std-ref">transparency</inline></reference> 设置为大于 <literal>0.0</literal>（不含）的值并<emphasis>不会</emphasis>禁用阴影渲染。</paragraph>
            <paragraph>在空间着色器中，<literal>1.0 - transparency</literal> 被设置为内置 <literal>ALPHA</literal> 的默认值。</paragraph>
            <paragraph><strong>注意：</strong><reference internal="True" refid="class-geometryinstance3d-property-transparency"><inline classes="std std-ref">transparency</inline></reference> 被钳制在 <literal>0.0</literal> 和 <literal>1.0</literal> 之间，所以这个属性不能被用来使透明材质变得比原来更加不透明。</paragraph>
            <paragraph><strong>注意：</strong>仅在使用 Forward+ 渲染方法时受支持。使用 Mobile 或 Compatibility 渲染方法时，<reference internal="True" refid="class-geometryinstance3d-property-transparency"><inline classes="std std-ref">transparency</inline></reference> 将被忽略并被视为始终为 <literal>0.0</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-geometryinstance3d-property-visibility-range-begin"></target>
            <paragraph classes="classref-property" ids="class-geometryinstance3d-property-visibility-range-begin" names="class_geometryinstance3d_property_visibility_range_begin"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>visibility_range_begin</strong> = <literal>0.0</literal> <reference internal="True" refid="class-geometryinstance3d-property-visibility-range-begin"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_visibility_range_begin</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_visibility_range_begin</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>GeometryInstance3D 可见的起始距离，同时考虑 <reference internal="True" refid="class-geometryinstance3d-property-visibility-range-begin-margin"><inline classes="std std-ref">visibility_range_begin_margin</inline></reference>。默认值 0 用于禁用范围检查。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-geometryinstance3d-property-visibility-range-begin-margin"></target>
            <paragraph classes="classref-property" ids="class-geometryinstance3d-property-visibility-range-begin-margin" names="class_geometryinstance3d_property_visibility_range_begin_margin"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>visibility_range_begin_margin</strong> = <literal>0.0</literal> <reference internal="True" refid="class-geometryinstance3d-property-visibility-range-begin-margin"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_visibility_range_begin_margin</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_visibility_range_begin_margin</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph><reference internal="True" refid="class-geometryinstance3d-property-visibility-range-begin"><inline classes="std std-ref">visibility_range_begin</inline></reference> 阈值的边距。GeometryInstance3D 只有在超出或低于 <reference internal="True" refid="class-geometryinstance3d-property-visibility-range-begin"><inline classes="std std-ref">visibility_range_begin</inline></reference> 阈值达到这个量时，才会更改其可见性状态。</paragraph>
            <paragraph>如果 <reference internal="True" refid="class-geometryinstance3d-property-visibility-range-fade-mode"><inline classes="std std-ref">visibility_range_fade_mode</inline></reference> 为 <reference internal="True" refid="class-geometryinstance3d-constant-visibility-range-fade-disabled"><inline classes="std std-ref">VISIBILITY_RANGE_FADE_DISABLED</inline></reference>，这将作为滞后距离。如果 <reference internal="True" refid="class-geometryinstance3d-property-visibility-range-fade-mode"><inline classes="std std-ref">visibility_range_fade_mode</inline></reference> 为 <reference internal="True" refid="class-geometryinstance3d-constant-visibility-range-fade-self"><inline classes="std std-ref">VISIBILITY_RANGE_FADE_SELF</inline></reference> 或 <reference internal="True" refid="class-geometryinstance3d-constant-visibility-range-fade-dependencies"><inline classes="std std-ref">VISIBILITY_RANGE_FADE_DEPENDENCIES</inline></reference>，这将作为淡入淡出过渡距离，并且必须被设置为大于 <literal>0.0</literal> 的值，才能使效果显眼。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-geometryinstance3d-property-visibility-range-end"></target>
            <paragraph classes="classref-property" ids="class-geometryinstance3d-property-visibility-range-end" names="class_geometryinstance3d_property_visibility_range_end"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>visibility_range_end</strong> = <literal>0.0</literal> <reference internal="True" refid="class-geometryinstance3d-property-visibility-range-end"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_visibility_range_end</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_visibility_range_end</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>GeometryInstance3D 将被隐藏的距离，同时考虑 <reference internal="True" refid="class-geometryinstance3d-property-visibility-range-end-margin"><inline classes="std std-ref">visibility_range_end_margin</inline></reference>。默认值 0 用于禁用范围检查。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-geometryinstance3d-property-visibility-range-end-margin"></target>
            <paragraph classes="classref-property" ids="class-geometryinstance3d-property-visibility-range-end-margin" names="class_geometryinstance3d_property_visibility_range_end_margin"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>visibility_range_end_margin</strong> = <literal>0.0</literal> <reference internal="True" refid="class-geometryinstance3d-property-visibility-range-end-margin"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_visibility_range_end_margin</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_visibility_range_end_margin</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph><reference internal="True" refid="class-geometryinstance3d-property-visibility-range-end"><inline classes="std std-ref">visibility_range_end</inline></reference> 阈值的边距。GeometryInstance3D 只有在超出或低于 <reference internal="True" refid="class-geometryinstance3d-property-visibility-range-end"><inline classes="std std-ref">visibility_range_end</inline></reference> 阈值达到这个量时，才会更改其可见性状态。</paragraph>
            <paragraph>如果 <reference internal="True" refid="class-geometryinstance3d-property-visibility-range-fade-mode"><inline classes="std std-ref">visibility_range_fade_mode</inline></reference> 为 <reference internal="True" refid="class-geometryinstance3d-constant-visibility-range-fade-disabled"><inline classes="std std-ref">VISIBILITY_RANGE_FADE_DISABLED</inline></reference>，这将作为滞后距离。如果 <reference internal="True" refid="class-geometryinstance3d-property-visibility-range-fade-mode"><inline classes="std std-ref">visibility_range_fade_mode</inline></reference> 为 <reference internal="True" refid="class-geometryinstance3d-constant-visibility-range-fade-self"><inline classes="std std-ref">VISIBILITY_RANGE_FADE_SELF</inline></reference> 或 <reference internal="True" refid="class-geometryinstance3d-constant-visibility-range-fade-dependencies"><inline classes="std std-ref">VISIBILITY_RANGE_FADE_DEPENDENCIES</inline></reference>，这将作为淡入淡出过渡距离，并且必须被设置为大于 <literal>0.0</literal> 的值，才能使效果显眼。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-geometryinstance3d-property-visibility-range-fade-mode"></target>
            <paragraph classes="classref-property" ids="class-geometryinstance3d-property-visibility-range-fade-mode" names="class_geometryinstance3d_property_visibility_range_fade_mode"><reference internal="True" refid="enum-geometryinstance3d-visibilityrangefademode"><inline classes="std std-ref">VisibilityRangeFadeMode</inline></reference> <strong>visibility_range_fade_mode</strong> = <literal>0</literal> <reference internal="True" refid="class-geometryinstance3d-property-visibility-range-fade-mode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_visibility_range_fade_mode</strong>(value: <reference internal="True" refid="enum-geometryinstance3d-visibilityrangefademode"><inline classes="std std-ref">VisibilityRangeFadeMode</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-geometryinstance3d-visibilityrangefademode"><inline classes="std std-ref">VisibilityRangeFadeMode</inline></reference> <strong>get_visibility_range_fade_mode</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>控制在接近可见范围的限制时，哪些实例将被淡化。有关可能的值，请参阅 <reference internal="True" refid="enum-geometryinstance3d-visibilityrangefademode"><inline classes="std std-ref">VisibilityRangeFadeMode</inline></reference>。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id7" names="方法说明">
            <title>方法说明</title>
            <target refid="class-geometryinstance3d-method-get-instance-shader-parameter"></target>
            <paragraph classes="classref-method" ids="class-geometryinstance3d-method-get-instance-shader-parameter" names="class_geometryinstance3d_method_get_instance_shader_parameter"><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> <strong>get_instance_shader_parameter</strong>(name: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-geometryinstance3d-method-get-instance-shader-parameter"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>获取在该实例上设置的着色器参数值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-geometryinstance3d-method-set-instance-shader-parameter"></target>
            <paragraph classes="classref-method" ids="class-geometryinstance3d-method-set-instance-shader-parameter" names="class_geometryinstance3d_method_set_instance_shader_parameter"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_instance_shader_parameter</strong>(name: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>, value: <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference>) <reference internal="True" refid="class-geometryinstance3d-method-set-instance-shader-parameter"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>仅为该实例设置一个着色器 uniform 值（<reference name="每实例 uniform" refuri="../tutorials/shaders/shader_reference/shading_language.html#per-instance-uniforms">每实例 uniform</reference>） 。另请参阅 <reference internal="True" refuri="class_shadermaterial#class-shadermaterial-method-set-shader-parameter"><inline classes="std std-ref">ShaderMaterial.set_shader_parameter</inline></reference> 以使用相同的 <reference internal="True" refuri="class_shadermaterial#class-shadermaterial"><inline classes="std std-ref">ShaderMaterial</inline></reference> 在所有实例上分配一个 uniform。</paragraph>
            <paragraph><strong>注意：</strong>要在每个实例的基础上分配一个着色器 uniform，则<emphasis>必须</emphasis>在着色器代码中，使用 <literal>instance uniform ...</literal>，而不是 <literal>uniform ...</literal> 来定义。</paragraph>
            <paragraph><strong>注意：</strong><literal>name</literal> 是区分大小写的，并且必须与代码中的 uniform 名称完全匹配（而不是检查器中大写的名称）。</paragraph>
            <paragraph><strong>注意：</strong>逐实例着色器 uniform 目前仅在 3D 中可用，因此没有该方法的 2D 等效方法。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效运算符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列位标志构成位掩码的整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

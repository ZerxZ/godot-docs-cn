<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_tiledata.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/TileData.xml.</comment>
    <target refid="class-tiledata"></target>
    <section ids="tiledata class-tiledata" names="tiledata class_tiledata">
        <title>TileData</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph><reference internal="True" refuri="class_tileset#class-tileset"><inline classes="std std-ref">TileSet</inline></reference> 中单个图块的设置。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph><strong>TileData</strong> 对象代表 <reference internal="True" refuri="class_tileset#class-tileset"><inline classes="std std-ref">TileSet</inline></reference> 中的单个图块，通常使用图块集编辑器进行编辑，但也可以在运行时使用 <reference internal="True" refuri="class_tilemap#class-tilemap-private-method-tile-data-runtime-update"><inline classes="std std-ref">TileMap._tile_data_runtime_update</inline></reference> 进行修改。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="33"></colspec>
                    <colspec colwidth="63"></colspec>
                    <colspec colwidth="23"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tiledata-property-flip-h"><inline classes="std std-ref">flip_h</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tiledata-property-flip-v"><inline classes="std std-ref">flip_v</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_material#class-material"><inline classes="std std-ref">Material</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tiledata-property-material"><inline classes="std std-ref">material</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tiledata-property-modulate"><inline classes="std std-ref">modulate</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Color(1, 1, 1, 1)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tiledata-property-probability"><inline classes="std std-ref">probability</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tiledata-property-terrain"><inline classes="std std-ref">terrain</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>-1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tiledata-property-terrain-set"><inline classes="std std-ref">terrain_set</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>-1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tiledata-property-texture-origin"><inline classes="std std-ref">texture_origin</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Vector2i(0, 0)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tiledata-property-transpose"><inline classes="std std-ref">transpose</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tiledata-property-y-sort-origin"><inline classes="std std-ref">y_sort_origin</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tiledata-property-z-index"><inline classes="std std-ref">z_index</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="53"></colspec>
                    <colspec colwidth="254"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tiledata-method-add-collision-polygon"><inline classes="std std-ref">add_collision_polygon</inline></reference>(layer_id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tiledata-method-get-collision-polygon-one-way-margin"><inline classes="std std-ref">get_collision_polygon_one_way_margin</inline></reference>(layer_id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, polygon_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_packedvector2array#class-packedvector2array"><inline classes="std std-ref">PackedVector2Array</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tiledata-method-get-collision-polygon-points"><inline classes="std std-ref">get_collision_polygon_points</inline></reference>(layer_id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, polygon_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tiledata-method-get-collision-polygons-count"><inline classes="std std-ref">get_collision_polygons_count</inline></reference>(layer_id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tiledata-method-get-constant-angular-velocity"><inline classes="std std-ref">get_constant_angular_velocity</inline></reference>(layer_id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tiledata-method-get-constant-linear-velocity"><inline classes="std std-ref">get_constant_linear_velocity</inline></reference>(layer_id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tiledata-method-get-custom-data"><inline classes="std std-ref">get_custom_data</inline></reference>(layer_name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tiledata-method-get-custom-data-by-layer-id"><inline classes="std std-ref">get_custom_data_by_layer_id</inline></reference>(layer_id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_navigationpolygon#class-navigationpolygon"><inline classes="std std-ref">NavigationPolygon</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tiledata-method-get-navigation-polygon"><inline classes="std std-ref">get_navigation_polygon</inline></reference>(layer_id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, flip_h: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = false, flip_v: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = false, transpose: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = false) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_occluderpolygon2d#class-occluderpolygon2d"><inline classes="std std-ref">OccluderPolygon2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tiledata-method-get-occluder"><inline classes="std std-ref">get_occluder</inline></reference>(layer_id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, flip_h: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = false, flip_v: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = false, transpose: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = false) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tiledata-method-get-terrain-peering-bit"><inline classes="std std-ref">get_terrain_peering_bit</inline></reference>(peering_bit: <reference internal="True" refuri="class_tileset#enum-tileset-cellneighbor"><inline classes="std std-ref">CellNeighbor</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tiledata-method-is-collision-polygon-one-way"><inline classes="std std-ref">is_collision_polygon_one_way</inline></reference>(layer_id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, polygon_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tiledata-method-is-valid-terrain-peering-bit"><inline classes="std std-ref">is_valid_terrain_peering_bit</inline></reference>(peering_bit: <reference internal="True" refuri="class_tileset#enum-tileset-cellneighbor"><inline classes="std std-ref">CellNeighbor</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tiledata-method-remove-collision-polygon"><inline classes="std std-ref">remove_collision_polygon</inline></reference>(layer_id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, polygon_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tiledata-method-set-collision-polygon-one-way"><inline classes="std std-ref">set_collision_polygon_one_way</inline></reference>(layer_id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, polygon_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, one_way: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tiledata-method-set-collision-polygon-one-way-margin"><inline classes="std std-ref">set_collision_polygon_one_way_margin</inline></reference>(layer_id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, polygon_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, one_way_margin: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tiledata-method-set-collision-polygon-points"><inline classes="std std-ref">set_collision_polygon_points</inline></reference>(layer_id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, polygon_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, polygon: <reference internal="True" refuri="class_packedvector2array#class-packedvector2array"><inline classes="std std-ref">PackedVector2Array</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tiledata-method-set-collision-polygons-count"><inline classes="std std-ref">set_collision_polygons_count</inline></reference>(layer_id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, polygons_count: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tiledata-method-set-constant-angular-velocity"><inline classes="std std-ref">set_constant_angular_velocity</inline></reference>(layer_id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, velocity: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tiledata-method-set-constant-linear-velocity"><inline classes="std std-ref">set_constant_linear_velocity</inline></reference>(layer_id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, velocity: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tiledata-method-set-custom-data"><inline classes="std std-ref">set_custom_data</inline></reference>(layer_name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, value: <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tiledata-method-set-custom-data-by-layer-id"><inline classes="std std-ref">set_custom_data_by_layer_id</inline></reference>(layer_id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, value: <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tiledata-method-set-navigation-polygon"><inline classes="std std-ref">set_navigation_polygon</inline></reference>(layer_id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, navigation_polygon: <reference internal="True" refuri="class_navigationpolygon#class-navigationpolygon"><inline classes="std std-ref">NavigationPolygon</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tiledata-method-set-occluder"><inline classes="std std-ref">set_occluder</inline></reference>(layer_id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, occluder_polygon: <reference internal="True" refuri="class_occluderpolygon2d#class-occluderpolygon2d"><inline classes="std std-ref">OccluderPolygon2D</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tiledata-method-set-terrain-peering-bit"><inline classes="std std-ref">set_terrain_peering_bit</inline></reference>(peering_bit: <reference internal="True" refuri="class_tileset#enum-tileset-cellneighbor"><inline classes="std std-ref">CellNeighbor</inline></reference>, terrain: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="信号">
            <title>信号</title>
            <target refid="class-tiledata-signal-changed"></target>
            <paragraph classes="classref-signal" ids="class-tiledata-signal-changed" names="class_tiledata_signal_changed"><strong>changed</strong>() <reference internal="True" refid="class-tiledata-signal-changed"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>任何属性发生变化时发出。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="属性说明">
            <title>属性说明</title>
            <target refid="class-tiledata-property-flip-h"></target>
            <paragraph classes="classref-property" ids="class-tiledata-property-flip-h" names="class_tiledata_property_flip_h"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>flip_h</strong> = <literal>false</literal> <reference internal="True" refid="class-tiledata-property-flip-h"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_flip_h</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_flip_h</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则该图块的纹理会被水平翻转。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tiledata-property-flip-v"></target>
            <paragraph classes="classref-property" ids="class-tiledata-property-flip-v" names="class_tiledata_property_flip_v"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>flip_v</strong> = <literal>false</literal> <reference internal="True" refid="class-tiledata-property-flip-v"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_flip_v</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_flip_v</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则该图块的纹理会被垂直翻转。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tiledata-property-material"></target>
            <paragraph classes="classref-property" ids="class-tiledata-property-material" names="class_tiledata_property_material"><reference internal="True" refuri="class_material#class-material"><inline classes="std std-ref">Material</inline></reference> <strong>material</strong> <reference internal="True" refid="class-tiledata-property-material"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_material</strong>(value: <reference internal="True" refuri="class_material#class-material"><inline classes="std std-ref">Material</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_material#class-material"><inline classes="std std-ref">Material</inline></reference> <strong>get_material</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>用于此 <strong>TileData</strong> 的 <reference internal="True" refuri="class_material#class-material"><inline classes="std std-ref">Material</inline></reference>。使用默认着色器可以设为 <reference internal="True" refuri="class_canvasitemmaterial#class-canvasitemmaterial"><inline classes="std std-ref">CanvasItemMaterial</inline></reference>，使用自定义着色器可以设为 <reference internal="True" refuri="class_shadermaterial#class-shadermaterial"><inline classes="std std-ref">ShaderMaterial</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tiledata-property-modulate"></target>
            <paragraph classes="classref-property" ids="class-tiledata-property-modulate" names="class_tiledata_property_modulate"><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>modulate</strong> = <literal>Color(1, 1, 1, 1)</literal> <reference internal="True" refid="class-tiledata-property-modulate"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_modulate</strong>(value: <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>get_modulate</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>该图块的颜色调制。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tiledata-property-probability"></target>
            <paragraph classes="classref-property" ids="class-tiledata-property-probability" names="class_tiledata_property_probability"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>probability</strong> = <literal>1.0</literal> <reference internal="True" refid="class-tiledata-property-probability"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_probability</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_probability</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>绘制随机图块图案时选择该图块的相对概率。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tiledata-property-terrain"></target>
            <paragraph classes="classref-property" ids="class-tiledata-property-terrain" names="class_tiledata_property_terrain"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>terrain</strong> = <literal>-1</literal> <reference internal="True" refid="class-tiledata-property-terrain"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_terrain</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_terrain</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>该图块所使用的地形集中地形的 ID。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tiledata-property-terrain-set"></target>
            <paragraph classes="classref-property" ids="class-tiledata-property-terrain-set" names="class_tiledata_property_terrain_set"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>terrain_set</strong> = <literal>-1</literal> <reference internal="True" refid="class-tiledata-property-terrain-set"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_terrain_set</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_terrain_set</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>该图块所使用的地形集的 ID。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tiledata-property-texture-origin"></target>
            <paragraph classes="classref-property" ids="class-tiledata-property-texture-origin" names="class_tiledata_property_texture_origin"><reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> <strong>texture_origin</strong> = <literal>Vector2i(0, 0)</literal> <reference internal="True" refid="class-tiledata-property-texture-origin"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_texture_origin</strong>(value: <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> <strong>get_texture_origin</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>该图块绘制时的位置偏移量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tiledata-property-transpose"></target>
            <paragraph classes="classref-property" ids="class-tiledata-property-transpose" names="class_tiledata_property_transpose"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>transpose</strong> = <literal>false</literal> <reference internal="True" refid="class-tiledata-property-transpose"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_transpose</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_transpose</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则该图块会转置显示，即调换水平和垂直纹理 UV。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tiledata-property-y-sort-origin"></target>
            <paragraph classes="classref-property" ids="class-tiledata-property-y-sort-origin" names="class_tiledata_property_y_sort_origin"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>y_sort_origin</strong> = <literal>0</literal> <reference internal="True" refid="class-tiledata-property-y-sort-origin"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_y_sort_origin</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_y_sort_origin</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>该图块用于确定 Y 排序顺序的垂直点。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tiledata-property-z-index"></target>
            <paragraph classes="classref-property" ids="class-tiledata-property-z-index" names="class_tiledata_property_z_index"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>z_index</strong> = <literal>0</literal> <reference internal="True" refid="class-tiledata-property-z-index"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_z_index</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_z_index</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>该图块的排序索引，相对于 <reference internal="True" refuri="class_tilemap#class-tilemap"><inline classes="std std-ref">TileMap</inline></reference>。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="方法说明">
            <title>方法说明</title>
            <target refid="class-tiledata-method-add-collision-polygon"></target>
            <paragraph classes="classref-method" ids="class-tiledata-method-add-collision-polygon" names="class_tiledata_method_add_collision_polygon"><abbreviation explanation="无返回值。">void</abbreviation> <strong>add_collision_polygon</strong>(layer_id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-tiledata-method-add-collision-polygon"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>为该图块在给定的 TileSet 物理层上添加碰撞多边形。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tiledata-method-get-collision-polygon-one-way-margin"></target>
            <paragraph classes="classref-method" ids="class-tiledata-method-get-collision-polygon-one-way-margin" names="class_tiledata_method_get_collision_polygon_one_way_margin"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_collision_polygon_one_way_margin</strong>(layer_id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, polygon_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tiledata-method-get-collision-polygon-one-way-margin"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回在索引为 <literal>layer_id</literal> 的 TileSet 物理层上，索引为 <literal>polygon_index</literal> 的多边形的单向边距（用于单向平台）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tiledata-method-get-collision-polygon-points"></target>
            <paragraph classes="classref-method" ids="class-tiledata-method-get-collision-polygon-points" names="class_tiledata_method_get_collision_polygon_points"><reference internal="True" refuri="class_packedvector2array#class-packedvector2array"><inline classes="std std-ref">PackedVector2Array</inline></reference> <strong>get_collision_polygon_points</strong>(layer_id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, polygon_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tiledata-method-get-collision-polygon-points"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回在索引为 <literal>layer_id</literal> 的 TileSet 物理层上，索引为 <literal>polygon_index</literal> 的多边形的点。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tiledata-method-get-collision-polygons-count"></target>
            <paragraph classes="classref-method" ids="class-tiledata-method-get-collision-polygons-count" names="class_tiledata_method_get_collision_polygons_count"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_collision_polygons_count</strong>(layer_id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tiledata-method-get-collision-polygons-count"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置该图块中索引为 <literal>layer_id</literal> 的 TileSet 物理层中多边形的数量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tiledata-method-get-constant-angular-velocity"></target>
            <paragraph classes="classref-method" ids="class-tiledata-method-get-constant-angular-velocity" names="class_tiledata_method_get_constant_angular_velocity"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_constant_angular_velocity</strong>(layer_id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tiledata-method-get-constant-angular-velocity"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回恒定角速度，将应用于与此图块碰撞的对象。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tiledata-method-get-constant-linear-velocity"></target>
            <paragraph classes="classref-method" ids="class-tiledata-method-get-constant-linear-velocity" names="class_tiledata_method_get_constant_linear_velocity"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>get_constant_linear_velocity</strong>(layer_id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tiledata-method-get-constant-linear-velocity"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回恒定线速度，将应用于与此图块碰撞的对象。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tiledata-method-get-custom-data"></target>
            <paragraph classes="classref-method" ids="class-tiledata-method-get-custom-data" names="class_tiledata_method_get_custom_data"><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> <strong>get_custom_data</strong>(layer_name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tiledata-method-get-custom-data"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回自定义数据层的自定义数据值，自定义数据层用名称 <literal>layer_name</literal> 指定。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tiledata-method-get-custom-data-by-layer-id"></target>
            <paragraph classes="classref-method" ids="class-tiledata-method-get-custom-data-by-layer-id" names="class_tiledata_method_get_custom_data_by_layer_id"><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> <strong>get_custom_data_by_layer_id</strong>(layer_id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tiledata-method-get-custom-data-by-layer-id"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回自定义数据层的自定义数据值，自定义数据层用索引 <literal>layer_id</literal> 指定。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tiledata-method-get-navigation-polygon"></target>
            <paragraph classes="classref-method" ids="class-tiledata-method-get-navigation-polygon" names="class_tiledata_method_get_navigation_polygon"><reference internal="True" refuri="class_navigationpolygon#class-navigationpolygon"><inline classes="std std-ref">NavigationPolygon</inline></reference> <strong>get_navigation_polygon</strong>(layer_id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, flip_h: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = false, flip_v: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = false, transpose: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = false) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tiledata-method-get-navigation-polygon"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回图块的导航多边形，对应的 TileSet 导航层由索引 <literal>layer_id</literal> 指定。</paragraph>
            <paragraph>可以使用 <literal>flip_h</literal>、<literal>flip_v</literal>、<literal>transpose</literal> 对返回的多边形进行变换。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tiledata-method-get-occluder"></target>
            <paragraph classes="classref-method" ids="class-tiledata-method-get-occluder" names="class_tiledata_method_get_occluder"><reference internal="True" refuri="class_occluderpolygon2d#class-occluderpolygon2d"><inline classes="std std-ref">OccluderPolygon2D</inline></reference> <strong>get_occluder</strong>(layer_id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, flip_h: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = false, flip_v: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = false, transpose: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = false) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tiledata-method-get-occluder"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回图块的遮挡器多边形，对应的 TileSet 遮挡层由索引 <literal>layer_id</literal> 指定。</paragraph>
            <paragraph>可以使用 <literal>flip_h</literal>、<literal>flip_v</literal>、<literal>transpose</literal> 对返回的多边形进行变换。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tiledata-method-get-terrain-peering-bit"></target>
            <paragraph classes="classref-method" ids="class-tiledata-method-get-terrain-peering-bit" names="class_tiledata_method_get_terrain_peering_bit"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_terrain_peering_bit</strong>(peering_bit: <reference internal="True" refuri="class_tileset#enum-tileset-cellneighbor"><inline classes="std std-ref">CellNeighbor</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tiledata-method-get-terrain-peering-bit"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Returns the tile's terrain bit for the given <literal>peering_bit</literal> direction. To check that a direction is valid, use <reference internal="True" refid="class-tiledata-method-is-valid-terrain-peering-bit"><inline classes="std std-ref">is_valid_terrain_peering_bit</inline></reference>.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tiledata-method-is-collision-polygon-one-way"></target>
            <paragraph classes="classref-method" ids="class-tiledata-method-is-collision-polygon-one-way" names="class_tiledata_method_is_collision_polygon_one_way"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_collision_polygon_one_way</strong>(layer_id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, polygon_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tiledata-method-is-collision-polygon-one-way"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回索引为 <literal>layer_id</literal> 的 TileSet 物理层上索引为 <literal>polygon_index</literal> 的多边形是否启用了单向碰撞。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tiledata-method-is-valid-terrain-peering-bit"></target>
            <paragraph classes="classref-method" ids="class-tiledata-method-is-valid-terrain-peering-bit" names="class_tiledata_method_is_valid_terrain_peering_bit"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_valid_terrain_peering_bit</strong>(peering_bit: <reference internal="True" refuri="class_tileset#enum-tileset-cellneighbor"><inline classes="std std-ref">CellNeighbor</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tiledata-method-is-valid-terrain-peering-bit"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Returns whether the given <literal>peering_bit</literal> direction is valid for this tile.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tiledata-method-remove-collision-polygon"></target>
            <paragraph classes="classref-method" ids="class-tiledata-method-remove-collision-polygon" names="class_tiledata_method_remove_collision_polygon"><abbreviation explanation="无返回值。">void</abbreviation> <strong>remove_collision_polygon</strong>(layer_id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, polygon_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-tiledata-method-remove-collision-polygon"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>移除索引为 <literal>layer_id</literal> 的 TileSet 物理层上索引为 <literal>polygon_index</literal> 的多边形。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tiledata-method-set-collision-polygon-one-way"></target>
            <paragraph classes="classref-method" ids="class-tiledata-method-set-collision-polygon-one-way" names="class_tiledata_method_set_collision_polygon_one_way"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_collision_polygon_one_way</strong>(layer_id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, polygon_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, one_way: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <reference internal="True" refid="class-tiledata-method-set-collision-polygon-one-way"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>启用/禁用索引为 <literal>layer_id</literal> 的 TileSet 物理层上索引为 <literal>polygon_index</literal> 的多边形的单向碰撞。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tiledata-method-set-collision-polygon-one-way-margin"></target>
            <paragraph classes="classref-method" ids="class-tiledata-method-set-collision-polygon-one-way-margin" names="class_tiledata_method_set_collision_polygon_one_way_margin"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_collision_polygon_one_way_margin</strong>(layer_id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, polygon_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, one_way_margin: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <reference internal="True" refid="class-tiledata-method-set-collision-polygon-one-way-margin"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>启用/禁用索引为 <literal>layer_id</literal> 的 TileSet 物理层上索引为 <literal>polygon_index</literal> 的多边形的单向碰撞。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tiledata-method-set-collision-polygon-points"></target>
            <paragraph classes="classref-method" ids="class-tiledata-method-set-collision-polygon-points" names="class_tiledata_method_set_collision_polygon_points"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_collision_polygon_points</strong>(layer_id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, polygon_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, polygon: <reference internal="True" refuri="class_packedvector2array#class-packedvector2array"><inline classes="std std-ref">PackedVector2Array</inline></reference>) <reference internal="True" refid="class-tiledata-method-set-collision-polygon-points"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置索引为 <literal>layer_id</literal> 的 TileSet 物理层上索引为 <literal>polygon_index</literal> 的多边形的顶点。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tiledata-method-set-collision-polygons-count"></target>
            <paragraph classes="classref-method" ids="class-tiledata-method-set-collision-polygons-count" names="class_tiledata_method_set_collision_polygons_count"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_collision_polygons_count</strong>(layer_id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, polygons_count: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-tiledata-method-set-collision-polygons-count"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置索引为 <literal>layer_id</literal> 的 TileSet 物理层中多边形的数量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tiledata-method-set-constant-angular-velocity"></target>
            <paragraph classes="classref-method" ids="class-tiledata-method-set-constant-angular-velocity" names="class_tiledata_method_set_constant_angular_velocity"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_constant_angular_velocity</strong>(layer_id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, velocity: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <reference internal="True" refid="class-tiledata-method-set-constant-angular-velocity"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置恒定角速度。不会旋转图块。会对与该图块发生碰撞的对象应用该角速度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tiledata-method-set-constant-linear-velocity"></target>
            <paragraph classes="classref-method" ids="class-tiledata-method-set-constant-linear-velocity" names="class_tiledata_method_set_constant_linear_velocity"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_constant_linear_velocity</strong>(layer_id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, velocity: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <reference internal="True" refid="class-tiledata-method-set-constant-linear-velocity"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置恒定线速度。不会旋转图块。会对与该图块发生碰撞的对象应用该线速度。可用于创建传送带。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tiledata-method-set-custom-data"></target>
            <paragraph classes="classref-method" ids="class-tiledata-method-set-custom-data" names="class_tiledata_method_set_custom_data"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_custom_data</strong>(layer_name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, value: <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference>) <reference internal="True" refid="class-tiledata-method-set-custom-data"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置该图块的自定义数据值，TileSet 自定义数据层由名称 <literal>layer_name</literal> 指定。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tiledata-method-set-custom-data-by-layer-id"></target>
            <paragraph classes="classref-method" ids="class-tiledata-method-set-custom-data-by-layer-id" names="class_tiledata_method_set_custom_data_by_layer_id"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_custom_data_by_layer_id</strong>(layer_id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, value: <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference>) <reference internal="True" refid="class-tiledata-method-set-custom-data-by-layer-id"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置该图块的自定义数据值，TileSet 自定义数据层由索引 <literal>layer_id</literal> 指定。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tiledata-method-set-navigation-polygon"></target>
            <paragraph classes="classref-method" ids="class-tiledata-method-set-navigation-polygon" names="class_tiledata_method_set_navigation_polygon"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_navigation_polygon</strong>(layer_id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, navigation_polygon: <reference internal="True" refuri="class_navigationpolygon#class-navigationpolygon"><inline classes="std std-ref">NavigationPolygon</inline></reference>) <reference internal="True" refid="class-tiledata-method-set-navigation-polygon"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置索引为 <literal>layer_id</literal> 的 TileSet 导航层的导航多边形。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tiledata-method-set-occluder"></target>
            <paragraph classes="classref-method" ids="class-tiledata-method-set-occluder" names="class_tiledata_method_set_occluder"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_occluder</strong>(layer_id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, occluder_polygon: <reference internal="True" refuri="class_occluderpolygon2d#class-occluderpolygon2d"><inline classes="std std-ref">OccluderPolygon2D</inline></reference>) <reference internal="True" refid="class-tiledata-method-set-occluder"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置索引为 <literal>layer_id</literal> 的 TileSet 遮挡层的遮挡器。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tiledata-method-set-terrain-peering-bit"></target>
            <paragraph classes="classref-method" ids="class-tiledata-method-set-terrain-peering-bit" names="class_tiledata_method_set_terrain_peering_bit"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_terrain_peering_bit</strong>(peering_bit: <reference internal="True" refuri="class_tileset#enum-tileset-cellneighbor"><inline classes="std std-ref">CellNeighbor</inline></reference>, terrain: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-tiledata-method-set-terrain-peering-bit"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Sets the tile's terrain bit for the given <literal>peering_bit</literal> direction. To check that a direction is valid, use <reference internal="True" refid="class-tiledata-method-is-valid-terrain-peering-bit"><inline classes="std std-ref">is_valid_terrain_peering_bit</inline></reference>.</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

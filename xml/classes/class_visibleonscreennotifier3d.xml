<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_visibleonscreennotifier3d.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/VisibleOnScreenNotifier3D.xml.</comment>
    <target refid="class-visibleonscreennotifier3d"></target>
    <section ids="visibleonscreennotifier3d class-visibleonscreennotifier3d" names="visibleonscreennotifier3d class_visibleonscreennotifier3d">
        <title>VisibleOnScreenNotifier3D</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_visualinstance3d#class-visualinstance3d"><inline classes="std std-ref">VisualInstance3D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node3d#class-node3d"><inline classes="std std-ref">Node3D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph><strong>派生：</strong> <reference internal="True" refuri="class_visibleonscreenenabler3d#class-visibleonscreenenabler3d"><inline classes="std std-ref">VisibleOnScreenEnabler3D</inline></reference></paragraph>
        <paragraph>3D 空间的盒形区块，用于检测其在屏幕上是否可见。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph><reference internal="True" refuri="class_visibleonscreenenabler3d#class-visibleonscreenenabler3d"><inline classes="std std-ref">VisibleOnScreenEnabler3D</inline></reference> 表示 3D 空间的盒形区块。当该区块的任何部分在屏幕或 <reference internal="True" refuri="class_camera3d#class-camera3d"><inline classes="std std-ref">Camera3D</inline></reference> 视图中可见时，它将发出 <reference internal="True" refid="class-visibleonscreennotifier3d-signal-screen-entered"><inline classes="std std-ref">screen_entered</inline></reference> 信号；同样，当其任何部分都不可见时，它将发出 <reference internal="True" refid="class-visibleonscreennotifier3d-signal-screen-exited"><inline classes="std std-ref">screen_exited</inline></reference> 信号。</paragraph>
            <paragraph>如果你希望当该区块在屏幕上可见时自动启用节点，请使用 <reference internal="True" refuri="class_visibleonscreenenabler3d#class-visibleonscreenenabler3d"><inline classes="std std-ref">VisibleOnScreenEnabler3D</inline></reference>。</paragraph>
            <paragraph><strong>注意：</strong><strong>VisibleOnScreenNotifier3D</strong> 使用近似启发式，不考虑墙壁和其他遮挡，除非使用遮挡剔除。除非将 <reference internal="True" refuri="class_node3d#class-node3d-property-visible"><inline classes="std std-ref">Node3D.visible</inline></reference> 设置为 <literal>true</literal>，否则它也不会起作用。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="25"></colspec>
                    <colspec colwidth="60"></colspec>
                    <colspec colwidth="31"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_aabb#class-aabb"><inline classes="std std-ref">AABB</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-visibleonscreennotifier3d-property-aabb"><inline classes="std std-ref">aabb</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>AABB(-1, -1, -1, 2, 2, 2)</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="25"></colspec>
                    <colspec colwidth="88"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-visibleonscreennotifier3d-method-is-on-screen"><inline classes="std std-ref">is_on_screen</inline></reference>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="信号">
            <title>信号</title>
            <target refid="class-visibleonscreennotifier3d-signal-screen-entered"></target>
            <paragraph classes="classref-signal" ids="class-visibleonscreennotifier3d-signal-screen-entered" names="class_visibleonscreennotifier3d_signal_screen_entered"><strong>screen_entered</strong>() <reference internal="True" refid="class-visibleonscreennotifier3d-signal-screen-entered"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当该 <strong>VisibleOnScreenNotifier3D</strong> 进入屏幕时发出。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-visibleonscreennotifier3d-signal-screen-exited"></target>
            <paragraph classes="classref-signal" ids="class-visibleonscreennotifier3d-signal-screen-exited" names="class_visibleonscreennotifier3d_signal_screen_exited"><strong>screen_exited</strong>() <reference internal="True" refid="class-visibleonscreennotifier3d-signal-screen-exited"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当该 <strong>VisibleOnScreenNotifier3D</strong> 退出屏幕时发出。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="属性说明">
            <title>属性说明</title>
            <target refid="class-visibleonscreennotifier3d-property-aabb"></target>
            <paragraph classes="classref-property" ids="class-visibleonscreennotifier3d-property-aabb" names="class_visibleonscreennotifier3d_property_aabb"><reference internal="True" refuri="class_aabb#class-aabb"><inline classes="std std-ref">AABB</inline></reference> <strong>aabb</strong> = <literal>AABB(-1, -1, -1, 2, 2, 2)</literal> <reference internal="True" refid="class-visibleonscreennotifier3d-property-aabb"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_aabb</strong>(value: <reference internal="True" refuri="class_aabb#class-aabb"><inline classes="std std-ref">AABB</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_aabb#class-aabb"><inline classes="std std-ref">AABB</inline></reference> <strong>get_aabb</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>该 <strong>VisibleOnScreenNotifier3D</strong> 的边界框。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="方法说明">
            <title>方法说明</title>
            <target refid="class-visibleonscreennotifier3d-method-is-on-screen"></target>
            <paragraph classes="classref-method" ids="class-visibleonscreennotifier3d-method-is-on-screen" names="class_visibleonscreennotifier3d_method_is_on_screen"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_on_screen</strong>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-visibleonscreennotifier3d-method-is-on-screen"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果为 <literal>true</literal>，则边界框在屏幕上。</paragraph>
            <paragraph><strong>注意：</strong><strong>VisibleOnScreenNotifier3D</strong> 被添加到场景树后需要一帧来评估其可见性，因此该方法在实例化后将始终返回 <literal>false</literal> 。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效运算符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列位标志构成位掩码的整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

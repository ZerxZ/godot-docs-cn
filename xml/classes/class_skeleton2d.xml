<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_skeleton2d.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/Skeleton2D.xml.</comment>
    <target refid="class-skeleton2d"></target>
    <section ids="skeleton2d class-skeleton2d" names="skeleton2d class_skeleton2d">
        <title>Skeleton2D</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_node2d#class-node2d"><inline classes="std std-ref">Node2D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_canvasitem#class-canvasitem"><inline classes="std std-ref">CanvasItem</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph><reference internal="True" refuri="class_bone2d#class-bone2d"><inline classes="std std-ref">Bone2D</inline></reference> 层级结构的父节点，用于创建 2D 骨骼动画。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph><strong>Skeleton2D</strong> 是 <reference internal="True" refuri="class_bone2d#class-bone2d"><inline classes="std std-ref">Bone2D</inline></reference> 节点层级结构的父节点，持有对每个 <reference internal="True" refuri="class_bone2d#class-bone2d"><inline classes="std std-ref">Bone2D</inline></reference> 的放松姿势的引用，充当其骨骼的单一访问点。</paragraph>
            <paragraph>要为给定的 Skeleton2D 设置不同类型的反向运动学机制，应当创建一个 <reference internal="True" refuri="class_skeletonmodificationstack2d#class-skeletonmodificationstack2d"><inline classes="std std-ref">SkeletonModificationStack2D</inline></reference>。增加 <reference internal="True" refuri="class_skeletonmodificationstack2d#class-skeletonmodificationstack2d-property-modification-count"><inline classes="std std-ref">SkeletonModificationStack2D.modification_count</inline></reference> 并创建所需数量的修改器即可应用反向运动学机制。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference internal="True" refuri="../tutorials/animation/2d_skeletons"><inline classes="doc">2D 骨架</inline></reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="71"></colspec>
                    <colspec colwidth="262"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeleton2d-method-execute-modifications"><inline classes="std std-ref">execute_modifications</inline></reference>(delta: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>, execution_mode: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bone2d#class-bone2d"><inline classes="std std-ref">Bone2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeleton2d-method-get-bone"><inline classes="std std-ref">get_bone</inline></reference>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeleton2d-method-get-bone-count"><inline classes="std std-ref">get_bone_count</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeleton2d-method-get-bone-local-pose-override"><inline classes="std std-ref">get_bone_local_pose_override</inline></reference>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_skeletonmodificationstack2d#class-skeletonmodificationstack2d"><inline classes="std std-ref">SkeletonModificationStack2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeleton2d-method-get-modification-stack"><inline classes="std std-ref">get_modification_stack</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeleton2d-method-get-skeleton"><inline classes="std std-ref">get_skeleton</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeleton2d-method-set-bone-local-pose-override"><inline classes="std std-ref">set_bone_local_pose_override</inline></reference>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, override_pose: <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference>, strength: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>, persistent: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeleton2d-method-set-modification-stack"><inline classes="std std-ref">set_modification_stack</inline></reference>(modification_stack: <reference internal="True" refuri="class_skeletonmodificationstack2d#class-skeletonmodificationstack2d"><inline classes="std std-ref">SkeletonModificationStack2D</inline></reference>)</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="信号">
            <title>信号</title>
            <target refid="class-skeleton2d-signal-bone-setup-changed"></target>
            <paragraph classes="classref-signal" ids="class-skeleton2d-signal-bone-setup-changed" names="class_skeleton2d_signal_bone_setup_changed"><strong>bone_setup_changed</strong>() <reference internal="True" refid="class-skeleton2d-signal-bone-setup-changed"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当附加到该骨架的 <reference internal="True" refuri="class_bone2d#class-bone2d"><inline classes="std std-ref">Bone2D</inline></reference> 设置更改时发出。这主要在骨架内部使用。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="方法说明">
            <title>方法说明</title>
            <target refid="class-skeleton2d-method-execute-modifications"></target>
            <paragraph classes="classref-method" ids="class-skeleton2d-method-execute-modifications" names="class_skeleton2d_method_execute_modifications"><abbreviation explanation="无返回值。">void</abbreviation> <strong>execute_modifications</strong>(delta: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>, execution_mode: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-skeleton2d-method-execute-modifications"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果该 Skeleton2D 分配有 <reference internal="True" refuri="class_skeletonmodificationstack2d#class-skeletonmodificationstack2d"><inline classes="std std-ref">SkeletonModificationStack2D</inline></reference>，则执行其中的所有修改。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton2d-method-get-bone"></target>
            <paragraph classes="classref-method" ids="class-skeleton2d-method-get-bone" names="class_skeleton2d_method_get_bone"><reference internal="True" refuri="class_bone2d#class-bone2d"><inline classes="std std-ref">Bone2D</inline></reference> <strong>get_bone</strong>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-skeleton2d-method-get-bone"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>从由 Skeleton2D 为父节点的节点层次结构中返回 <reference internal="True" refuri="class_bone2d#class-bone2d"><inline classes="std std-ref">Bone2D</inline></reference>。要返回的对象由参数 <literal>idx</literal> 标识。骨骼通过从上到下降低节点层次结构来索引，在移动到下一个兄弟节点之前添加每个分支的子节点。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton2d-method-get-bone-count"></target>
            <paragraph classes="classref-method" ids="class-skeleton2d-method-get-bone-count" names="class_skeleton2d_method_get_bone_count"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_bone_count</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-skeleton2d-method-get-bone-count"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回由 Skeleton2D 为父节点的节点层次结构中 <reference internal="True" refuri="class_bone2d#class-bone2d"><inline classes="std std-ref">Bone2D</inline></reference> 节点的数量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton2d-method-get-bone-local-pose-override"></target>
            <paragraph classes="classref-method" ids="class-skeleton2d-method-get-bone-local-pose-override" names="class_skeleton2d_method_get_bone_local_pose_override"><reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference> <strong>get_bone_local_pose_override</strong>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-skeleton2d-method-get-bone-local-pose-override"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回骨骼 <literal>bone_idx</literal> 的局部姿势覆盖变换。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton2d-method-get-modification-stack"></target>
            <paragraph classes="classref-method" ids="class-skeleton2d-method-get-modification-stack" names="class_skeleton2d_method_get_modification_stack"><reference internal="True" refuri="class_skeletonmodificationstack2d#class-skeletonmodificationstack2d"><inline classes="std std-ref">SkeletonModificationStack2D</inline></reference> <strong>get_modification_stack</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-skeleton2d-method-get-modification-stack"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果存在，则返回附加到此骨架的 <reference internal="True" refuri="class_skeletonmodificationstack2d#class-skeletonmodificationstack2d"><inline classes="std std-ref">SkeletonModificationStack2D</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton2d-method-get-skeleton"></target>
            <paragraph classes="classref-method" ids="class-skeleton2d-method-get-skeleton" names="class_skeleton2d_method_get_skeleton"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>get_skeleton</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-skeleton2d-method-get-skeleton"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回 Skeleton2D 实例的 <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton2d-method-set-bone-local-pose-override"></target>
            <paragraph classes="classref-method" ids="class-skeleton2d-method-set-bone-local-pose-override" names="class_skeleton2d_method_set_bone_local_pose_override"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_bone_local_pose_override</strong>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, override_pose: <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference>, strength: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>, persistent: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <reference internal="True" refid="class-skeleton2d-method-set-bone-local-pose-override"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>为 <literal>bone_idx</literal> 处的骨骼设置局部姿势变换 <literal>override_pose</literal>。</paragraph>
            <paragraph><literal>strength</literal> 是应用姿势时将使用的插值强度，<literal>persistent</literal> 决定是否会保持应用的姿势。</paragraph>
            <paragraph><strong>注意：</strong>姿势变换需要是相对于 <literal>bone_idx</literal> 处的 <reference internal="True" refuri="class_bone2d#class-bone2d"><inline classes="std std-ref">Bone2D</inline></reference> 节点的局部变换！</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton2d-method-set-modification-stack"></target>
            <paragraph classes="classref-method" ids="class-skeleton2d-method-set-modification-stack" names="class_skeleton2d_method_set_modification_stack"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_modification_stack</strong>(modification_stack: <reference internal="True" refuri="class_skeletonmodificationstack2d#class-skeletonmodificationstack2d"><inline classes="std std-ref">SkeletonModificationStack2D</inline></reference>) <reference internal="True" refid="class-skeleton2d-method-set-modification-stack"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置附加到此骨架的 <reference internal="True" refuri="class_skeletonmodificationstack2d#class-skeletonmodificationstack2d"><inline classes="std std-ref">SkeletonModificationStack2D</inline></reference>。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

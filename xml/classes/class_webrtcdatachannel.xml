<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_webrtcdatachannel.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/4.2/modules/webrtc/doc_classes/WebRTCDataChannel.xml.</comment>
    <target refid="class-webrtcdatachannel"></target>
    <section ids="webrtcdatachannel class-webrtcdatachannel" names="webrtcdatachannel class_webrtcdatachannel">
        <title>WebRTCDataChannel</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_packetpeer#class-packetpeer"><inline classes="std std-ref">PacketPeer</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph><strong>派生：</strong> <reference internal="True" refuri="class_webrtcdatachannelextension#class-webrtcdatachannelextension"><inline classes="std std-ref">WebRTCDataChannelExtension</inline></reference></paragraph>
        <container classes="contribute">
            <paragraph>目前没有这个类的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
        </container>
        <section classes="classref-reftable-group" ids="id1" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="52"></colspec>
                    <colspec colwidth="64"></colspec>
                    <colspec colwidth="7"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-webrtcdatachannel-writemode"><inline classes="std std-ref">WriteMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-webrtcdatachannel-property-write-mode"><inline classes="std std-ref">write_mode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="58"></colspec>
                    <colspec colwidth="110"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-webrtcdatachannel-method-close"><inline classes="std std-ref">close</inline></reference> <strong>(</strong> <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-webrtcdatachannel-method-get-buffered-amount"><inline classes="std std-ref">get_buffered_amount</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-webrtcdatachannel-method-get-id"><inline classes="std std-ref">get_id</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-webrtcdatachannel-method-get-label"><inline classes="std std-ref">get_label</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-webrtcdatachannel-method-get-max-packet-life-time"><inline classes="std std-ref">get_max_packet_life_time</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-webrtcdatachannel-method-get-max-retransmits"><inline classes="std std-ref">get_max_retransmits</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-webrtcdatachannel-method-get-protocol"><inline classes="std std-ref">get_protocol</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-webrtcdatachannel-channelstate"><inline classes="std std-ref">ChannelState</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-webrtcdatachannel-method-get-ready-state"><inline classes="std std-ref">get_ready_state</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-webrtcdatachannel-method-is-negotiated"><inline classes="std std-ref">is_negotiated</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-webrtcdatachannel-method-is-ordered"><inline classes="std std-ref">is_ordered</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_@globalscope#enum-globalscope-error"><inline classes="std std-ref">Error</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-webrtcdatachannel-method-poll"><inline classes="std std-ref">poll</inline></reference> <strong>(</strong> <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-webrtcdatachannel-method-was-string-packet"><inline classes="std std-ref">was_string_packet</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="枚举">
            <title>枚举</title>
            <target refid="enum-webrtcdatachannel-writemode"></target>
            <paragraph classes="classref-enumeration" ids="enum-webrtcdatachannel-writemode" names="enum_webrtcdatachannel_writemode">enum <strong>WriteMode</strong>:</paragraph>
            <target refid="class-webrtcdatachannel-constant-write-mode-text"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-webrtcdatachannel-constant-write-mode-text" names="class_webrtcdatachannel_constant_write_mode_text"><reference internal="True" refid="enum-webrtcdatachannel-writemode"><inline classes="std std-ref">WriteMode</inline></reference> <strong>WRITE_MODE_TEXT</strong> = <literal>0</literal></paragraph>
            <paragraph>告诉通道以文本形式在这个通道上发送数据。外部对等体（非 Godot）会以字符串的形式接收。</paragraph>
            <target refid="class-webrtcdatachannel-constant-write-mode-binary"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-webrtcdatachannel-constant-write-mode-binary" names="class_webrtcdatachannel_constant_write_mode_binary"><reference internal="True" refid="enum-webrtcdatachannel-writemode"><inline classes="std std-ref">WriteMode</inline></reference> <strong>WRITE_MODE_BINARY</strong> = <literal>1</literal></paragraph>
            <paragraph>告诉通道以二进制形式在此通道上发送数据。外部对等体（非 Godot）将以数组缓冲区或 blob 的形式接收。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-webrtcdatachannel-channelstate"></target>
            <paragraph classes="classref-enumeration" ids="enum-webrtcdatachannel-channelstate" names="enum_webrtcdatachannel_channelstate">enum <strong>ChannelState</strong>:</paragraph>
            <target refid="class-webrtcdatachannel-constant-state-connecting"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-webrtcdatachannel-constant-state-connecting" names="class_webrtcdatachannel_constant_state_connecting"><reference internal="True" refid="enum-webrtcdatachannel-channelstate"><inline classes="std std-ref">ChannelState</inline></reference> <strong>STATE_CONNECTING</strong> = <literal>0</literal></paragraph>
            <paragraph>通道已经创建，但它仍在尝试连接。</paragraph>
            <target refid="class-webrtcdatachannel-constant-state-open"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-webrtcdatachannel-constant-state-open" names="class_webrtcdatachannel_constant_state_open"><reference internal="True" refid="enum-webrtcdatachannel-channelstate"><inline classes="std std-ref">ChannelState</inline></reference> <strong>STATE_OPEN</strong> = <literal>1</literal></paragraph>
            <paragraph>该通道目前是打开的，数据可以在其上流动。</paragraph>
            <target refid="class-webrtcdatachannel-constant-state-closing"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-webrtcdatachannel-constant-state-closing" names="class_webrtcdatachannel_constant_state_closing"><reference internal="True" refid="enum-webrtcdatachannel-channelstate"><inline classes="std std-ref">ChannelState</inline></reference> <strong>STATE_CLOSING</strong> = <literal>2</literal></paragraph>
            <paragraph>通道正在关闭，将不接受新的消息，但已经在队列中的消息将被刷新。</paragraph>
            <target refid="class-webrtcdatachannel-constant-state-closed"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-webrtcdatachannel-constant-state-closed" names="class_webrtcdatachannel_constant_state_closed"><reference internal="True" refid="enum-webrtcdatachannel-channelstate"><inline classes="std std-ref">ChannelState</inline></reference> <strong>STATE_CLOSED</strong> = <literal>3</literal></paragraph>
            <paragraph>通道已关闭，或连接失败。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="属性说明">
            <title>属性说明</title>
            <target refid="class-webrtcdatachannel-property-write-mode"></target>
            <paragraph classes="classref-property" ids="class-webrtcdatachannel-property-write-mode" names="class_webrtcdatachannel_property_write_mode"><reference internal="True" refid="enum-webrtcdatachannel-writemode"><inline classes="std std-ref">WriteMode</inline></reference> <strong>write_mode</strong> = <literal>1</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_write_mode</strong> <strong>(</strong> <reference internal="True" refid="enum-webrtcdatachannel-writemode"><inline classes="std std-ref">WriteMode</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-webrtcdatachannel-writemode"><inline classes="std std-ref">WriteMode</inline></reference> <strong>get_write_mode</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>发送出去数据包时要使用的传输模式。可以是文本或二进制。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="方法说明">
            <title>方法说明</title>
            <target refid="class-webrtcdatachannel-method-close"></target>
            <paragraph classes="classref-method" ids="class-webrtcdatachannel-method-close" names="class_webrtcdatachannel_method_close">void <strong>close</strong> <strong>(</strong> <strong>)</strong></paragraph>
            <paragraph>关闭此数据通道，通知另一个对等体。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-webrtcdatachannel-method-get-buffered-amount"></target>
            <paragraph classes="classref-method" ids="class-webrtcdatachannel-method-get-buffered-amount" names="class_webrtcdatachannel_method_get_buffered_amount"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_buffered_amount</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回当前排队在此通道上发送的字节数。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-webrtcdatachannel-method-get-id"></target>
            <paragraph classes="classref-method" ids="class-webrtcdatachannel-method-get-id" names="class_webrtcdatachannel_method_get_id"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_id</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回创建时分配给该通道的 ID（或是在协商时自动分配的）。</paragraph>
            <paragraph>如果该通道没有进行带外协商，那么该 ID 将只在连接建立后可用（在此之前将返回 <literal>65535</literal>）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-webrtcdatachannel-method-get-label"></target>
            <paragraph classes="classref-method" ids="class-webrtcdatachannel-method-get-label" names="class_webrtcdatachannel_method_get_label"><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>get_label</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回创建时分配给该通道的标签。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-webrtcdatachannel-method-get-max-packet-life-time"></target>
            <paragraph classes="classref-method" ids="class-webrtcdatachannel-method-get-max-packet-life-time" names="class_webrtcdatachannel_method_get_max_packet_life_time"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_max_packet_life_time</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回创建时分配给这个通道的 <literal>maxPacketLifeTime</literal> 值。</paragraph>
            <paragraph>如果没有指定，将是 <literal>65535</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-webrtcdatachannel-method-get-max-retransmits"></target>
            <paragraph classes="classref-method" ids="class-webrtcdatachannel-method-get-max-retransmits" names="class_webrtcdatachannel_method_get_max_retransmits"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_max_retransmits</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回创建时分配给这个通道的 <literal>maxRetransmits</literal> 值。</paragraph>
            <paragraph>如果没有指定，将是 <literal>65535</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-webrtcdatachannel-method-get-protocol"></target>
            <paragraph classes="classref-method" ids="class-webrtcdatachannel-method-get-protocol" names="class_webrtcdatachannel_method_get_protocol"><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>get_protocol</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回创建时分配给这个通道的子协议。如果没有指定，则为空字符串。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-webrtcdatachannel-method-get-ready-state"></target>
            <paragraph classes="classref-method" ids="class-webrtcdatachannel-method-get-ready-state" names="class_webrtcdatachannel_method_get_ready_state"><reference internal="True" refid="enum-webrtcdatachannel-channelstate"><inline classes="std std-ref">ChannelState</inline></reference> <strong>get_ready_state</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回该通道的当前状态，见 <reference internal="True" refid="enum-webrtcdatachannel-channelstate"><inline classes="std std-ref">ChannelState</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-webrtcdatachannel-method-is-negotiated"></target>
            <paragraph classes="classref-method" ids="class-webrtcdatachannel-method-is-negotiated" names="class_webrtcdatachannel_method_is_negotiated"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_negotiated</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>如果这个通道是用带外配置创建的，返回 <literal>true</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-webrtcdatachannel-method-is-ordered"></target>
            <paragraph classes="classref-method" ids="class-webrtcdatachannel-method-is-ordered" names="class_webrtcdatachannel_method_is_ordered"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_ordered</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>如果这个通道在创建时启用了排序功能，则默认返回 <literal>true</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-webrtcdatachannel-method-poll"></target>
            <paragraph classes="classref-method" ids="class-webrtcdatachannel-method-poll" names="class_webrtcdatachannel_method_poll"><reference internal="True" refuri="class_@globalscope#enum-globalscope-error"><inline classes="std std-ref">Error</inline></reference> <strong>poll</strong> <strong>(</strong> <strong>)</strong></paragraph>
            <paragraph>保留，目前未使用。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-webrtcdatachannel-method-was-string-packet"></target>
            <paragraph classes="classref-method" ids="class-webrtcdatachannel-method-was-string-packet" names="class_webrtcdatachannel_method_was_string_packet"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>was_string_packet</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>如果最后收到的数据包是以文本形式传输，则返回 <literal>true</literal>。见 <reference internal="True" refid="class-webrtcdatachannel-property-write-mode"><inline classes="std std-ref">write_mode</inline></reference>。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，所以可以直接使用类名调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

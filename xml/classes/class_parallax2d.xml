<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_parallax2d.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/Parallax2D.xml.</comment>
    <target refid="class-parallax2d"></target>
    <section ids="parallax2d class-parallax2d" names="parallax2d class_parallax2d">
        <title>Parallax2D</title>
        <paragraph><strong>实验性：</strong> This node is meant to replace <reference internal="True" refuri="class_parallaxbackground#class-parallaxbackground"><inline classes="std std-ref">ParallaxBackground</inline></reference> and <reference internal="True" refuri="class_parallaxlayer#class-parallaxlayer"><inline classes="std std-ref">ParallaxLayer</inline></reference>. The implementation may change in the future.</paragraph>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_node2d#class-node2d"><inline classes="std std-ref">Node2D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_canvasitem#class-canvasitem"><inline classes="std std-ref">CanvasItem</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>用于创建视差滚动背景的节点。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph><strong>Parallax2D</strong> 可用于创造视差效果。使用 <reference internal="True" refid="class-parallax2d-property-scroll-scale"><inline classes="std std-ref">scroll_scale</inline></reference> 可以在相机移动时，以不同的相对速度移动，这样就在 2D 游戏中创造出了深度的错觉。如果需要手动滚动，也可以使用 <reference internal="True" refid="class-parallax2d-property-ignore-camera-scroll"><inline classes="std std-ref">ignore_camera_scroll</inline></reference> 忽略 <reference internal="True" refuri="class_camera2d#class-camera2d"><inline classes="std std-ref">Camera2D</inline></reference> 的位置。</paragraph>
            <paragraph><strong>注意：</strong>如果 <reference internal="True" refid="class-parallax2d-property-ignore-camera-scroll"><inline classes="std std-ref">ignore_camera_scroll</inline></reference> 为 <literal>false</literal> 或者修改了 <reference internal="True" refid="class-parallax2d-property-screen-offset"><inline classes="std std-ref">screen_offset</inline></reference>，那么该节点进入场景树后发生的任何位移都会被覆盖。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference internal="True" refuri="../tutorials/2d/2d_parallax"><inline classes="doc">2D Parallax</inline></reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="69"></colspec>
                    <colspec colwidth="77"></colspec>
                    <colspec colwidth="79"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-parallax2d-property-autoscroll"><inline classes="std std-ref">autoscroll</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Vector2(0, 0)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-parallax2d-property-follow-viewport"><inline classes="std std-ref">follow_viewport</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-parallax2d-property-ignore-camera-scroll"><inline classes="std std-ref">ignore_camera_scroll</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-parallax2d-property-limit-begin"><inline classes="std std-ref">limit_begin</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Vector2(-1e+07, -1e+07)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-parallax2d-property-limit-end"><inline classes="std std-ref">limit_end</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Vector2(1e+07, 1e+07)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_node#enum-node-physicsinterpolationmode"><inline classes="std std-ref">PhysicsInterpolationMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph>physics_interpolation_mode</paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>2</literal> (overrides <reference internal="True" refuri="class_node#class-node-property-physics-interpolation-mode"><inline classes="std std-ref">Node</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-parallax2d-property-repeat-size"><inline classes="std std-ref">repeat_size</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Vector2(0, 0)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-parallax2d-property-repeat-times"><inline classes="std std-ref">repeat_times</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-parallax2d-property-screen-offset"><inline classes="std std-ref">screen_offset</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Vector2(0, 0)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-parallax2d-property-scroll-offset"><inline classes="std std-ref">scroll_offset</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Vector2(0, 0)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-parallax2d-property-scroll-scale"><inline classes="std std-ref">scroll_scale</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Vector2(1, 1)</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="属性说明">
            <title>属性说明</title>
            <target refid="class-parallax2d-property-autoscroll"></target>
            <paragraph classes="classref-property" ids="class-parallax2d-property-autoscroll" names="class_parallax2d_property_autoscroll"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>autoscroll</strong> = <literal>Vector2(0, 0)</literal> <reference internal="True" refid="class-parallax2d-property-autoscroll"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_autoscroll</strong>(value: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>get_autoscroll</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>偏移量自动滚动的速度，单位为像素每秒。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-parallax2d-property-follow-viewport"></target>
            <paragraph classes="classref-property" ids="class-parallax2d-property-follow-viewport" names="class_parallax2d_property_follow_viewport"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>follow_viewport</strong> = <literal>true</literal> <reference internal="True" refid="class-parallax2d-property-follow-viewport"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_follow_viewport</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_follow_viewport</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则会根据当前相机的位置对 <strong>Parallax2D</strong> 进行偏移。如果 <strong>Parallax2D</strong> 所处的 <reference internal="True" refuri="class_canvaslayer#class-canvaslayer"><inline classes="std std-ref">CanvasLayer</inline></reference> 与当前相机不同，也可以使用 <reference internal="True" refuri="class_canvaslayer#class-canvaslayer-property-follow-viewport-enabled"><inline classes="std std-ref">CanvasLayer.follow_viewport_enabled</inline></reference> 进行匹配。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-parallax2d-property-ignore-camera-scroll"></target>
            <paragraph classes="classref-property" ids="class-parallax2d-property-ignore-camera-scroll" names="class_parallax2d_property_ignore_camera_scroll"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>ignore_camera_scroll</strong> = <literal>false</literal> <reference internal="True" refid="class-parallax2d-property-ignore-camera-scroll"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_ignore_camera_scroll</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_ignore_camera_scroll</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则 <strong>Parallax2D</strong> 的位置不受相机位置的影响。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-parallax2d-property-limit-begin"></target>
            <paragraph classes="classref-property" ids="class-parallax2d-property-limit-begin" names="class_parallax2d_property_limit_begin"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>limit_begin</strong> = <literal>Vector2(-1e+07, -1e+07)</literal> <reference internal="True" refid="class-parallax2d-property-limit-begin"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_limit_begin</strong>(value: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>get_limit_begin</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>开始滚动的左上角限制。如果相机超出这个限制，<strong>Parallax2D</strong> 将停止滚动。必须低于 <reference internal="True" refid="class-parallax2d-property-limit-end"><inline classes="std std-ref">limit_end</inline></reference> 减去视口大小才能正常工作。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-parallax2d-property-limit-end"></target>
            <paragraph classes="classref-property" ids="class-parallax2d-property-limit-end" names="class_parallax2d_property_limit_end"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>limit_end</strong> = <literal>Vector2(1e+07, 1e+07)</literal> <reference internal="True" refid="class-parallax2d-property-limit-end"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_limit_end</strong>(value: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>get_limit_end</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>滚动结束的右下角限制。如果相机超出这个限制，<strong>Parallax2D</strong> 将停止滚动。必须高于 <reference internal="True" refid="class-parallax2d-property-limit-begin"><inline classes="std std-ref">limit_begin</inline></reference> 和视口大小的总和才能工作。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-parallax2d-property-repeat-size"></target>
            <paragraph classes="classref-property" ids="class-parallax2d-property-repeat-size" names="class_parallax2d_property_repeat_size"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>repeat_size</strong> = <literal>Vector2(0, 0)</literal> <reference internal="True" refid="class-parallax2d-property-repeat-size"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_repeat_size</strong>(value: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>get_repeat_size</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>根据这个值将每个子节点的 <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> 进行重复和偏移。滚动时该节点的位置会发生循环，取值大于屏幕尺寸时就会造成背景无限滚动的错觉。某个轴如果为 <literal>0</literal>，则 <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> 不会重复。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-parallax2d-property-repeat-times"></target>
            <paragraph classes="classref-property" ids="class-parallax2d-property-repeat-times" names="class_parallax2d_property_repeat_times"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>repeat_times</strong> = <literal>1</literal> <reference internal="True" refid="class-parallax2d-property-repeat-times"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_repeat_times</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_repeat_times</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>覆盖纹理重复的次数。每个纹理副本都会相对于前一个往后挪 <reference internal="True" refid="class-parallax2d-property-repeat-size"><inline classes="std std-ref">repeat_size</inline></reference>。适用于相机远离的情况。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-parallax2d-property-screen-offset"></target>
            <paragraph classes="classref-property" ids="class-parallax2d-property-screen-offset" names="class_parallax2d_property_screen_offset"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>screen_offset</strong> = <literal>Vector2(0, 0)</literal> <reference internal="True" refid="class-parallax2d-property-screen-offset"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_screen_offset</strong>(value: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>get_screen_offset</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>用于滚动 <strong>Parallax2D</strong> 的偏移量。<reference internal="True" refid="class-parallax2d-property-ignore-camera-scroll"><inline classes="std std-ref">ignore_camera_scroll</inline></reference> 为 <literal>false</literal> 时这个值会自动更新。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-parallax2d-property-scroll-offset"></target>
            <paragraph classes="classref-property" ids="class-parallax2d-property-scroll-offset" names="class_parallax2d_property_scroll_offset"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>scroll_offset</strong> = <literal>Vector2(0, 0)</literal> <reference internal="True" refid="class-parallax2d-property-scroll-offset"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_scroll_offset</strong>(value: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>get_scroll_offset</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph><strong>Parallax2D</strong> 的偏移量。与 <reference internal="True" refid="class-parallax2d-property-screen-offset"><inline classes="std std-ref">screen_offset</inline></reference> 和 <reference internal="True" refuri="class_node2d#class-node2d-property-position"><inline classes="std std-ref">Node2D.position</inline></reference> 类似，但是不会被覆盖。</paragraph>
            <paragraph><strong>注意：</strong>如果 <reference internal="True" refid="class-parallax2d-property-repeat-size"><inline classes="std std-ref">repeat_size</inline></reference> 大于 <literal>0</literal>，则这个值会发生循环。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-parallax2d-property-scroll-scale"></target>
            <paragraph classes="classref-property" ids="class-parallax2d-property-scroll-scale" names="class_parallax2d_property_scroll_scale"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>scroll_scale</strong> = <literal>Vector2(1, 1)</literal> <reference internal="True" refid="class-parallax2d-property-scroll-scale"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_scroll_scale</strong>(value: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>get_scroll_scale</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph><strong>Parallax2D</strong> 最终偏移量的乘数。可用于模拟相对于相机的距离。</paragraph>
            <paragraph>例如，<literal>1</literal> 的值表示滚动速度与相机相同。大于 <literal>1</literal> 的值表示滚动速度更快，使物体看起来更近。小于 <literal>1</literal> 的值表示滚动速度更慢，使物体看起来更远，而 <literal>0</literal> 的值表示物体完全停止。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效运算符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列位标志构成位掩码的整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

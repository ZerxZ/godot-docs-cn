<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_joint2d.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/Joint2D.xml.</comment>
    <target refid="class-joint2d"></target>
    <section ids="joint2d class-joint2d" names="joint2d class_joint2d">
        <title>Joint2D</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_node2d#class-node2d"><inline classes="std std-ref">Node2D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_canvasitem#class-canvasitem"><inline classes="std std-ref">CanvasItem</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph><strong>派生：</strong> <reference internal="True" refuri="class_dampedspringjoint2d#class-dampedspringjoint2d"><inline classes="std std-ref">DampedSpringJoint2D</inline></reference>, <reference internal="True" refuri="class_groovejoint2d#class-groovejoint2d"><inline classes="std std-ref">GrooveJoint2D</inline></reference>, <reference internal="True" refuri="class_pinjoint2d#class-pinjoint2d"><inline classes="std std-ref">PinJoint2D</inline></reference></paragraph>
        <paragraph>所有 2D 物理关节的抽象基类。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>2D 物理中所有关节的抽象基类。2D 关节能够将两个物理体绑定在一起并施加约束。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="33"></colspec>
                    <colspec colwidth="68"></colspec>
                    <colspec colwidth="18"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-joint2d-property-bias"><inline classes="std std-ref">bias</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-joint2d-property-disable-collision"><inline classes="std std-ref">disable_collision</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-joint2d-property-node-a"><inline classes="std std-ref">node_a</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>NodePath("")</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-joint2d-property-node-b"><inline classes="std std-ref">node_b</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>NodePath("")</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="23"></colspec>
                    <colspec colwidth="66"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-joint2d-method-get-rid"><inline classes="std std-ref">get_rid</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="属性说明">
            <title>属性说明</title>
            <target refid="class-joint2d-property-bias"></target>
            <paragraph classes="classref-property" ids="class-joint2d-property-bias" names="class_joint2d_property_bias"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>bias</strong> = <literal>0.0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_bias</strong> <strong>(</strong> <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_bias</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>当 <reference internal="True" refid="class-joint2d-property-node-a"><inline classes="std std-ref">node_a</inline></reference> 和 <reference internal="True" refid="class-joint2d-property-node-b"><inline classes="std std-ref">node_b</inline></reference> 向不同方向移动时，<reference internal="True" refid="class-joint2d-property-bias"><inline classes="std std-ref">bias</inline></reference> 控制关节将它们拉回到原始位置的速度。<reference internal="True" refid="class-joint2d-property-bias"><inline classes="std std-ref">bias</inline></reference> 越低，两个实体对该关节的拉力就越大。</paragraph>
            <paragraph>当被设置为 <literal>0</literal> 时，使用来自 <reference internal="True" refuri="class_projectsettings#class-projectsettings-property-physics-2d-solver-default-constraint-bias"><inline classes="std std-ref">ProjectSettings.physics/2d/solver/default_constraint_bias</inline></reference> 的默认值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-joint2d-property-disable-collision"></target>
            <paragraph classes="classref-property" ids="class-joint2d-property-disable-collision" names="class_joint2d_property_disable_collision"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>disable_collision</strong> = <literal>true</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_exclude_nodes_from_collision</strong> <strong>(</strong> <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_exclude_nodes_from_collision</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则 <reference internal="True" refid="class-joint2d-property-node-a"><inline classes="std std-ref">node_a</inline></reference> 和 <reference internal="True" refid="class-joint2d-property-node-b"><inline classes="std std-ref">node_b</inline></reference> 无法碰撞。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-joint2d-property-node-a"></target>
            <paragraph classes="classref-property" ids="class-joint2d-property-node-a" names="class_joint2d_property_node_a"><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> <strong>node_a</strong> = <literal>NodePath("")</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_node_a</strong> <strong>(</strong> <reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> <strong>get_node_a</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>连接到关节的第一个实体。必须继承自 <reference internal="True" refuri="class_physicsbody2d#class-physicsbody2d"><inline classes="std std-ref">PhysicsBody2D</inline></reference> 。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-joint2d-property-node-b"></target>
            <paragraph classes="classref-property" ids="class-joint2d-property-node-b" names="class_joint2d_property_node_b"><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> <strong>node_b</strong> = <literal>NodePath("")</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_node_b</strong> <strong>(</strong> <reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> <strong>get_node_b</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>连接到关节的第二个实体。必须继承自 <reference internal="True" refuri="class_physicsbody2d#class-physicsbody2d"><inline classes="std std-ref">PhysicsBody2D</inline></reference>。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="方法说明">
            <title>方法说明</title>
            <target refid="class-joint2d-method-get-rid"></target>
            <paragraph classes="classref-method" ids="class-joint2d-method-get-rid" names="class_joint2d_method_get_rid"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>get_rid</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回关节的 <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，所以可以直接使用类名调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

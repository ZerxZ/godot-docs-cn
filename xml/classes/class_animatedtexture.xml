<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_animatedtexture.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/AnimatedTexture.xml.</comment>
    <target refid="class-animatedtexture"></target>
    <section ids="animatedtexture class-animatedtexture" names="animatedtexture class_animatedtexture">
        <title>AnimatedTexture</title>
        <paragraph><strong>已弃用：</strong> This class does not work properly in current versions and may be removed in the future. There is currently no equivalent workaround.</paragraph>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_texture#class-texture"><inline classes="std std-ref">Texture</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>用于简单帧动画的代理纹理。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph><strong>AnimatedTexture</strong> 是一种用于帧动画的资源格式，其中多个纹理可以自动链接，每个帧都有预定义的延迟。与 <reference internal="True" refuri="class_animationplayer#class-animationplayer"><inline classes="std std-ref">AnimationPlayer</inline></reference> 或 <reference internal="True" refuri="class_animatedsprite2d#class-animatedsprite2d"><inline classes="std std-ref">AnimatedSprite2D</inline></reference> 不同，它不是 <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference>，但具有可在任何可以使用 <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> 资源的地方使用的优势，例如在 <reference internal="True" refuri="class_tileset#class-tileset"><inline classes="std std-ref">TileSet</inline></reference> 中。</paragraph>
            <paragraph>动画的播放由 <reference internal="True" refid="class-animatedtexture-property-speed-scale"><inline classes="std std-ref">speed_scale</inline></reference> 属性以及每帧的持续时间（见 <reference internal="True" refid="class-animatedtexture-method-set-frame-duration"><inline classes="std std-ref">set_frame_duration</inline></reference>）控制。动画是循环播放的，即它会在播放完最后一帧后自动从第 0 帧重新开始。</paragraph>
            <paragraph><strong>AnimatedTexture</strong> 目前要求所有帧的纹理具有相同的大小，否则较大的纹理将被裁剪以匹配最小的纹理。</paragraph>
            <paragraph><strong>注意：</strong>AnimatedTexture 不支持使用 <reference internal="True" refuri="class_atlastexture#class-atlastexture"><inline classes="std std-ref">AtlasTexture</inline></reference>。 每个帧都需要是一个单独的 <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference>。</paragraph>
            <paragraph><strong>警告：</strong>当前的实现对于现代渲染器来说效率不高。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="27"></colspec>
                    <colspec colwidth="68"></colspec>
                    <colspec colwidth="88"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-animatedtexture-property-current-frame"><inline classes="std std-ref">current_frame</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-animatedtexture-property-frames"><inline classes="std std-ref">frames</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-animatedtexture-property-one-shot"><inline classes="std std-ref">one_shot</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-animatedtexture-property-pause"><inline classes="std std-ref">pause</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph>resource_local_to_scene</paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal> (overrides <reference internal="True" refuri="class_resource#class-resource-property-resource-local-to-scene"><inline classes="std std-ref">Resource</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-animatedtexture-property-speed-scale"><inline classes="std std-ref">speed_scale</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="35"></colspec>
                    <colspec colwidth="156"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-animatedtexture-method-get-frame-duration"><inline classes="std std-ref">get_frame_duration</inline></reference>(frame: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-animatedtexture-method-get-frame-texture"><inline classes="std std-ref">get_frame_texture</inline></reference>(frame: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-animatedtexture-method-set-frame-duration"><inline classes="std std-ref">set_frame_duration</inline></reference>(frame: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, duration: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-animatedtexture-method-set-frame-texture"><inline classes="std std-ref">set_frame_texture</inline></reference>(frame: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, texture: <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference>)</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="常量">
            <title>常量</title>
            <target refid="class-animatedtexture-constant-max-frames"></target>
            <paragraph classes="classref-constant" ids="class-animatedtexture-constant-max-frames" names="class_animatedtexture_constant_max_frames"><strong>MAX_FRAMES</strong> = <literal>256</literal> <reference internal="True" refid="class-animatedtexture-constant-max-frames"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><strong>AnimatedTexture</strong> 支持的最大帧数。如果动画需要更多帧，请使用 <reference internal="True" refuri="class_animationplayer#class-animationplayer"><inline classes="std std-ref">AnimationPlayer</inline></reference> 或 <reference internal="True" refuri="class_animatedsprite2d#class-animatedsprite2d"><inline classes="std std-ref">AnimatedSprite2D</inline></reference>。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="属性说明">
            <title>属性说明</title>
            <target refid="class-animatedtexture-property-current-frame"></target>
            <paragraph classes="classref-property" ids="class-animatedtexture-property-current-frame" names="class_animatedtexture_property_current_frame"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>current_frame</strong> <reference internal="True" refid="class-animatedtexture-property-current-frame"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_current_frame</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_current_frame</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>设置纹理的当前可见帧。在播放时设置此帧会重置当前帧时间，因此新选择的帧将播放为其配置的整个帧持续时间。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-animatedtexture-property-frames"></target>
            <paragraph classes="classref-property" ids="class-animatedtexture-property-frames" names="class_animatedtexture_property_frames"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>frames</strong> = <literal>1</literal> <reference internal="True" refid="class-animatedtexture-property-frames"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_frames</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_frames</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>动画中要使用的帧数。虽然你可以使用 <reference internal="True" refid="class-animatedtexture-method-set-frame-texture"><inline classes="std std-ref">set_frame_texture</inline></reference> 独立创建帧，但是你需要为动画设置这个值，才能考虑到新帧。最大帧数为 <reference internal="True" refid="class-animatedtexture-constant-max-frames"><inline classes="std std-ref">MAX_FRAMES</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-animatedtexture-property-one-shot"></target>
            <paragraph classes="classref-property" ids="class-animatedtexture-property-one-shot" names="class_animatedtexture_property_one_shot"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>one_shot</strong> = <literal>false</literal> <reference internal="True" refid="class-animatedtexture-property-one-shot"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_one_shot</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_one_shot</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则动画将只播放一次，并且在到达结尾后将不会循环回到第一帧。请注意，到达终点不会将 <reference internal="True" refid="class-animatedtexture-property-pause"><inline classes="std std-ref">pause</inline></reference> 设置为 <literal>true</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-animatedtexture-property-pause"></target>
            <paragraph classes="classref-property" ids="class-animatedtexture-property-pause" names="class_animatedtexture_property_pause"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>pause</strong> = <literal>false</literal> <reference internal="True" refid="class-animatedtexture-property-pause"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_pause</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_pause</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则动画将暂停在当前位置（即 <reference internal="True" refid="class-animatedtexture-property-current-frame"><inline classes="std std-ref">current_frame</inline></reference>）。将此属性更改为 <literal>false</literal> 时，动画将从暂停处继续播放。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-animatedtexture-property-speed-scale"></target>
            <paragraph classes="classref-property" ids="class-animatedtexture-property-speed-scale" names="class_animatedtexture_property_speed_scale"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>speed_scale</strong> = <literal>1.0</literal> <reference internal="True" refid="class-animatedtexture-property-speed-scale"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_speed_scale</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_speed_scale</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>动画速度将乘以该值。如果设置为负值，则动画反向播放。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="方法说明">
            <title>方法说明</title>
            <target refid="class-animatedtexture-method-get-frame-duration"></target>
            <paragraph classes="classref-method" ids="class-animatedtexture-method-get-frame-duration" names="class_animatedtexture_method_get_frame_duration"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_frame_duration</strong>(frame: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-animatedtexture-method-get-frame-duration"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回给定的 <literal>frame</literal> 的持续时间，以秒为单位。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-animatedtexture-method-get-frame-texture"></target>
            <paragraph classes="classref-method" ids="class-animatedtexture-method-get-frame-texture" names="class_animatedtexture_method_get_frame_texture"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>get_frame_texture</strong>(frame: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-animatedtexture-method-get-frame-texture"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回给定帧的 <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-animatedtexture-method-set-frame-duration"></target>
            <paragraph classes="classref-method" ids="class-animatedtexture-method-set-frame-duration" names="class_animatedtexture_method_set_frame_duration"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_frame_duration</strong>(frame: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, duration: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <reference internal="True" refid="class-animatedtexture-method-set-frame-duration"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置任何给定 <literal>frame</literal> 的持续时间。最终的持续时间受 <reference internal="True" refid="class-animatedtexture-property-speed-scale"><inline classes="std std-ref">speed_scale</inline></reference> 影响。如果设置为 <literal>0</literal>，则该帧在播放过程中被跳过。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-animatedtexture-method-set-frame-texture"></target>
            <paragraph classes="classref-method" ids="class-animatedtexture-method-set-frame-texture" names="class_animatedtexture_method_set_frame_texture"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_frame_texture</strong>(frame: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, texture: <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference>) <reference internal="True" refid="class-animatedtexture-method-set-frame-texture"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将 <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> 分配给给定的帧。帧 ID 从 0 开始，因此第一帧的 ID 为 0，动画的最后一帧的 ID 为 <reference internal="True" refid="class-animatedtexture-property-frames"><inline classes="std std-ref">frames</inline></reference> - 1。</paragraph>
            <paragraph>最多可以定义 <reference internal="True" refid="class-animatedtexture-constant-max-frames"><inline classes="std std-ref">MAX_FRAMES</inline></reference> 个纹理，但要记住，只有 0 到 <reference internal="True" refid="class-animatedtexture-property-frames"><inline classes="std std-ref">frames</inline></reference> - 1 的帧会成为动画的一部分。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

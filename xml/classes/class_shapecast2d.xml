<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_shapecast2d.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/ShapeCast2D.xml.</comment>
    <target refid="class-shapecast2d"></target>
    <section ids="shapecast2d class-shapecast2d" names="shapecast2d class_shapecast2d">
        <title>ShapeCast2D</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_node2d#class-node2d"><inline classes="std std-ref">Node2D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_canvasitem#class-canvasitem"><inline classes="std std-ref">CanvasItem</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>2D 形状，会扫描空间中某个区域，用于检测 <reference internal="True" refuri="class_collisionobject2d#class-collisionobject2d"><inline classes="std std-ref">CollisionObject2D</inline></reference>。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>形状投射会将其 <reference internal="True" refid="class-shapecast2d-property-shape"><inline classes="std std-ref">shape</inline></reference> 沿着 <reference internal="True" refid="class-shapecast2d-property-target-position"><inline classes="std std-ref">target_position</inline></reference> 确定的投射方向进行扫描，能够检测到碰撞对象。类似于 <reference internal="True" refuri="class_raycast2d#class-raycast2d"><inline classes="std std-ref">RayCast2D</inline></reference>，但是能够扫描空间中的一个区域，而不仅仅是一条直线。<strong>ShapeCast2D</strong> 能够检测到多个碰撞对象。可用于实现较宽的激光射线，或者将简单的形状吸附到地面。</paragraph>
            <paragraph>要立即检测碰撞重叠，可以将 <reference internal="True" refid="class-shapecast2d-property-target-position"><inline classes="std std-ref">target_position</inline></reference> 设置为 <literal>Vector2(0, 0)</literal>，并在同一个物理帧中调用 <reference internal="True" refid="class-shapecast2d-method-force-shapecast-update"><inline classes="std std-ref">force_shapecast_update</inline></reference>。这样就能够克服 <reference internal="True" refuri="class_area2d#class-area2d"><inline classes="std std-ref">Area2D</inline></reference> 在进行连续区域检测时的局限性，因为它无法立即获取碰撞信息。</paragraph>
            <paragraph><strong>注意：</strong>形状投射比射线投射的计算量更大。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="31"></colspec>
                    <colspec colwidth="76"></colspec>
                    <colspec colwidth="20"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-shapecast2d-property-collide-with-areas"><inline classes="std std-ref">collide_with_areas</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-shapecast2d-property-collide-with-bodies"><inline classes="std std-ref">collide_with_bodies</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-shapecast2d-property-collision-mask"><inline classes="std std-ref">collision_mask</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-shapecast2d-property-collision-result"><inline classes="std std-ref">collision_result</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>[]</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-shapecast2d-property-enabled"><inline classes="std std-ref">enabled</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-shapecast2d-property-exclude-parent"><inline classes="std std-ref">exclude_parent</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-shapecast2d-property-margin"><inline classes="std std-ref">margin</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-shapecast2d-property-max-results"><inline classes="std std-ref">max_results</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>32</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_shape2d#class-shape2d"><inline classes="std std-ref">Shape2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-shapecast2d-property-shape"><inline classes="std std-ref">shape</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-shapecast2d-property-target-position"><inline classes="std std-ref">target_position</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Vector2(0, 50)</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="31"></colspec>
                    <colspec colwidth="161"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-shapecast2d-method-add-exception"><inline classes="std std-ref">add_exception</inline></reference>(node: <reference internal="True" refuri="class_collisionobject2d#class-collisionobject2d"><inline classes="std std-ref">CollisionObject2D</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-shapecast2d-method-add-exception-rid"><inline classes="std std-ref">add_exception_rid</inline></reference>(rid: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-shapecast2d-method-clear-exceptions"><inline classes="std std-ref">clear_exceptions</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-shapecast2d-method-force-shapecast-update"><inline classes="std std-ref">force_shapecast_update</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-shapecast2d-method-get-closest-collision-safe-fraction"><inline classes="std std-ref">get_closest_collision_safe_fraction</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-shapecast2d-method-get-closest-collision-unsafe-fraction"><inline classes="std std-ref">get_closest_collision_unsafe_fraction</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-shapecast2d-method-get-collider"><inline classes="std std-ref">get_collider</inline></reference>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-shapecast2d-method-get-collider-rid"><inline classes="std std-ref">get_collider_rid</inline></reference>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-shapecast2d-method-get-collider-shape"><inline classes="std std-ref">get_collider_shape</inline></reference>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-shapecast2d-method-get-collision-count"><inline classes="std std-ref">get_collision_count</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-shapecast2d-method-get-collision-mask-value"><inline classes="std std-ref">get_collision_mask_value</inline></reference>(layer_number: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-shapecast2d-method-get-collision-normal"><inline classes="std std-ref">get_collision_normal</inline></reference>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-shapecast2d-method-get-collision-point"><inline classes="std std-ref">get_collision_point</inline></reference>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-shapecast2d-method-is-colliding"><inline classes="std std-ref">is_colliding</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-shapecast2d-method-remove-exception"><inline classes="std std-ref">remove_exception</inline></reference>(node: <reference internal="True" refuri="class_collisionobject2d#class-collisionobject2d"><inline classes="std std-ref">CollisionObject2D</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-shapecast2d-method-remove-exception-rid"><inline classes="std std-ref">remove_exception_rid</inline></reference>(rid: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-shapecast2d-method-set-collision-mask-value"><inline classes="std std-ref">set_collision_mask_value</inline></reference>(layer_number: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="属性说明">
            <title>属性说明</title>
            <target refid="class-shapecast2d-property-collide-with-areas"></target>
            <paragraph classes="classref-property" ids="class-shapecast2d-property-collide-with-areas" names="class_shapecast2d_property_collide_with_areas"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>collide_with_areas</strong> = <literal>false</literal> <reference internal="True" refid="class-shapecast2d-property-collide-with-areas"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_collide_with_areas</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_collide_with_areas_enabled</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则会报告与 <reference internal="True" refuri="class_area2d#class-area2d"><inline classes="std std-ref">Area2D</inline></reference> 的碰撞。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-shapecast2d-property-collide-with-bodies"></target>
            <paragraph classes="classref-property" ids="class-shapecast2d-property-collide-with-bodies" names="class_shapecast2d_property_collide_with_bodies"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>collide_with_bodies</strong> = <literal>true</literal> <reference internal="True" refid="class-shapecast2d-property-collide-with-bodies"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_collide_with_bodies</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_collide_with_bodies_enabled</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则会报告与 <reference internal="True" refuri="class_physicsbody2d#class-physicsbody2d"><inline classes="std std-ref">PhysicsBody2D</inline></reference> 的碰撞。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-shapecast2d-property-collision-mask"></target>
            <paragraph classes="classref-property" ids="class-shapecast2d-property-collision-mask" names="class_shapecast2d_property_collision_mask"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>collision_mask</strong> = <literal>1</literal> <reference internal="True" refid="class-shapecast2d-property-collision-mask"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_collision_mask</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_collision_mask</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>该形状的碰撞掩码。只有至少启用了一个在该掩码中的碰撞层的对象才会被检测到。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-shapecast2d-property-collision-result"></target>
            <paragraph classes="classref-property" ids="class-shapecast2d-property-collision-result" names="class_shapecast2d_property_collision_result"><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference> <strong>collision_result</strong> = <literal>[]</literal> <reference internal="True" refid="class-shapecast2d-property-collision-result"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>从碰撞扫描中返回完整的碰撞信息。返回的数据与 <reference internal="True" refuri="class_physicsdirectspacestate2d#class-physicsdirectspacestate2d-method-get-rest-info"><inline classes="std std-ref">PhysicsDirectSpaceState2D.get_rest_info</inline></reference> 方法中的数据相同。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-shapecast2d-property-enabled"></target>
            <paragraph classes="classref-property" ids="class-shapecast2d-property-enabled" names="class_shapecast2d_property_enabled"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>enabled</strong> = <literal>true</literal> <reference internal="True" refid="class-shapecast2d-property-enabled"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_enabled</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_enabled</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，将报告碰撞。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-shapecast2d-property-exclude-parent"></target>
            <paragraph classes="classref-property" ids="class-shapecast2d-property-exclude-parent" names="class_shapecast2d_property_exclude_parent"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>exclude_parent</strong> = <literal>true</literal> <reference internal="True" refid="class-shapecast2d-property-exclude-parent"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_exclude_parent_body</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_exclude_parent_body</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，父节点将被排除在碰撞检测之外。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-shapecast2d-property-margin"></target>
            <paragraph classes="classref-property" ids="class-shapecast2d-property-margin" names="class_shapecast2d_property_margin"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>margin</strong> = <literal>0.0</literal> <reference internal="True" refid="class-shapecast2d-property-margin"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_margin</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_margin</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>该形状的碰撞边距。较大的边距有助于更一致地检测碰撞，但代价是牺牲精度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-shapecast2d-property-max-results"></target>
            <paragraph classes="classref-property" ids="class-shapecast2d-property-max-results" names="class_shapecast2d_property_max_results"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>max_results</strong> = <literal>32</literal> <reference internal="True" refid="class-shapecast2d-property-max-results"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_max_results</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_max_results</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>可以使用这个参数来限制相交点的数量，减少处理时间。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-shapecast2d-property-shape"></target>
            <paragraph classes="classref-property" ids="class-shapecast2d-property-shape" names="class_shapecast2d_property_shape"><reference internal="True" refuri="class_shape2d#class-shape2d"><inline classes="std std-ref">Shape2D</inline></reference> <strong>shape</strong> <reference internal="True" refid="class-shapecast2d-property-shape"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_shape</strong>(value: <reference internal="True" refuri="class_shape2d#class-shape2d"><inline classes="std std-ref">Shape2D</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_shape2d#class-shape2d"><inline classes="std std-ref">Shape2D</inline></reference> <strong>get_shape</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>派生自 <reference internal="True" refuri="class_shape2d#class-shape2d"><inline classes="std std-ref">Shape2D</inline></reference> 的形状，用于碰撞查询。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-shapecast2d-property-target-position"></target>
            <paragraph classes="classref-property" ids="class-shapecast2d-property-target-position" names="class_shapecast2d_property_target_position"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>target_position</strong> = <literal>Vector2(0, 50)</literal> <reference internal="True" refid="class-shapecast2d-property-target-position"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_target_position</strong>(value: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>get_target_position</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>该形状的目标点，相对于该节点的 <literal>position</literal>。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="方法说明">
            <title>方法说明</title>
            <target refid="class-shapecast2d-method-add-exception"></target>
            <paragraph classes="classref-method" ids="class-shapecast2d-method-add-exception" names="class_shapecast2d_method_add_exception"><abbreviation explanation="无返回值。">void</abbreviation> <strong>add_exception</strong>(node: <reference internal="True" refuri="class_collisionobject2d#class-collisionobject2d"><inline classes="std std-ref">CollisionObject2D</inline></reference>) <reference internal="True" refid="class-shapecast2d-method-add-exception"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>添加碰撞例外，使该形状不汇报与指定 <reference internal="True" refuri="class_collisionobject2d#class-collisionobject2d"><inline classes="std std-ref">CollisionObject2D</inline></reference> 节点的碰撞。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-shapecast2d-method-add-exception-rid"></target>
            <paragraph classes="classref-method" ids="class-shapecast2d-method-add-exception-rid" names="class_shapecast2d_method_add_exception_rid"><abbreviation explanation="无返回值。">void</abbreviation> <strong>add_exception_rid</strong>(rid: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <reference internal="True" refid="class-shapecast2d-method-add-exception-rid"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>添加碰撞例外，使该形状不汇报与指定 <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> 节点的碰撞。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-shapecast2d-method-clear-exceptions"></target>
            <paragraph classes="classref-method" ids="class-shapecast2d-method-clear-exceptions" names="class_shapecast2d_method_clear_exceptions"><abbreviation explanation="无返回值。">void</abbreviation> <strong>clear_exceptions</strong>() <reference internal="True" refid="class-shapecast2d-method-clear-exceptions"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>移除该形状的所有碰撞例外。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-shapecast2d-method-force-shapecast-update"></target>
            <paragraph classes="classref-method" ids="class-shapecast2d-method-force-shapecast-update" names="class_shapecast2d_method_force_shapecast_update"><abbreviation explanation="无返回值。">void</abbreviation> <strong>force_shapecast_update</strong>() <reference internal="True" refid="class-shapecast2d-method-force-shapecast-update"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>立即更新形状的碰撞信息，不等待下一次的 <literal>_physics_process</literal> 调用。例如，请在形状或其父级更改状态后使用该方法。</paragraph>
            <paragraph><strong>注意：</strong>不需要 <literal>enabled == true</literal> 即可生效。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-shapecast2d-method-get-closest-collision-safe-fraction"></target>
            <paragraph classes="classref-method" ids="class-shapecast2d-method-get-closest-collision-safe-fraction" names="class_shapecast2d_method_get_closest_collision_safe_fraction"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_closest_collision_safe_fraction</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-shapecast2d-method-get-closest-collision-safe-fraction"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>从 <strong>ShapeCast2D</strong> 的原点到其 <reference internal="True" refid="class-shapecast2d-property-target-position"><inline classes="std std-ref">target_position</inline></reference>（介于 0 和 1 之间）的分数，即形状可以在不触发碰撞的情况下移动多远。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-shapecast2d-method-get-closest-collision-unsafe-fraction"></target>
            <paragraph classes="classref-method" ids="class-shapecast2d-method-get-closest-collision-unsafe-fraction" names="class_shapecast2d_method_get_closest_collision_unsafe_fraction"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_closest_collision_unsafe_fraction</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-shapecast2d-method-get-closest-collision-unsafe-fraction"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>The fraction from the <strong>ShapeCast2D</strong>'s origin to its <reference internal="True" refid="class-shapecast2d-property-target-position"><inline classes="std std-ref">target_position</inline></reference> (between 0 and 1) of how far the shape must move to trigger a collision.</paragraph>
            <paragraph>In ideal conditions this would be the same as <reference internal="True" refid="class-shapecast2d-method-get-closest-collision-safe-fraction"><inline classes="std std-ref">get_closest_collision_safe_fraction</inline></reference>, however shape casting is calculated in discrete steps, so the precise point of collision can occur between two calculated positions.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-shapecast2d-method-get-collider"></target>
            <paragraph classes="classref-method" ids="class-shapecast2d-method-get-collider" names="class_shapecast2d_method_get_collider"><reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference> <strong>get_collider</strong>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-shapecast2d-method-get-collider"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回 <literal>index</literal> 处多次碰撞之一的碰撞 <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference>，如果没有对象与形状相交（即 <reference internal="True" refid="class-shapecast2d-method-is-colliding"><inline classes="std std-ref">is_colliding</inline></reference> 返回 <literal>false</literal>），则返回 <literal>null</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-shapecast2d-method-get-collider-rid"></target>
            <paragraph classes="classref-method" ids="class-shapecast2d-method-get-collider-rid" names="class_shapecast2d_method_get_collider_rid"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>get_collider_rid</strong>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-shapecast2d-method-get-collider-rid"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回 <literal>index</literal> 处多次碰撞之一的碰撞对象的 <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-shapecast2d-method-get-collider-shape"></target>
            <paragraph classes="classref-method" ids="class-shapecast2d-method-get-collider-shape" names="class_shapecast2d_method_get_collider_shape"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_collider_shape</strong>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-shapecast2d-method-get-collider-shape"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回 <literal>index</literal> 处多次碰撞之一的碰撞形状的形状 ID，如果没有对象与该形状相交（即 <reference internal="True" refid="class-shapecast2d-method-is-colliding"><inline classes="std std-ref">is_colliding</inline></reference> 返回 <literal>false</literal>），则返回 <literal>0</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-shapecast2d-method-get-collision-count"></target>
            <paragraph classes="classref-method" ids="class-shapecast2d-method-get-collision-count" names="class_shapecast2d_method_get_collision_count"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_collision_count</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-shapecast2d-method-get-collision-count"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>在撞击点检测到的碰撞次数。使用它来迭代由 <reference internal="True" refid="class-shapecast2d-method-get-collider"><inline classes="std std-ref">get_collider</inline></reference>、<reference internal="True" refid="class-shapecast2d-method-get-collider-shape"><inline classes="std std-ref">get_collider_shape</inline></reference>、<reference internal="True" refid="class-shapecast2d-method-get-collision-point"><inline classes="std std-ref">get_collision_point</inline></reference> 和 <reference internal="True" refid="class-shapecast2d-method-get-collision-normal"><inline classes="std std-ref">get_collision_normal</inline></reference> 方法提供的多个碰撞。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-shapecast2d-method-get-collision-mask-value"></target>
            <paragraph classes="classref-method" ids="class-shapecast2d-method-get-collision-mask-value" names="class_shapecast2d_method_get_collision_mask_value"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_collision_mask_value</strong>(layer_number: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-shapecast2d-method-get-collision-mask-value"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回 <reference internal="True" refid="class-shapecast2d-property-collision-mask"><inline classes="std std-ref">collision_mask</inline></reference> 中是否启用了指定的层，给定的 <literal>layer_number</literal> 应在 1 和 32 之间。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-shapecast2d-method-get-collision-normal"></target>
            <paragraph classes="classref-method" ids="class-shapecast2d-method-get-collision-normal" names="class_shapecast2d_method_get_collision_normal"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>get_collision_normal</strong>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-shapecast2d-method-get-collision-normal"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回相交对象 <literal>index</literal> 处多次碰撞之一的法线。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-shapecast2d-method-get-collision-point"></target>
            <paragraph classes="classref-method" ids="class-shapecast2d-method-get-collision-point" names="class_shapecast2d_method_get_collision_point"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>get_collision_point</strong>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-shapecast2d-method-get-collision-point"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回形状与碰撞对象相交的 <literal>index</literal> 处多次碰撞之一的碰撞点。</paragraph>
            <paragraph><strong>注意：</strong>这个点在<strong>全局</strong>坐标系中。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-shapecast2d-method-is-colliding"></target>
            <paragraph classes="classref-method" ids="class-shapecast2d-method-is-colliding" names="class_shapecast2d_method_is_colliding"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_colliding</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-shapecast2d-method-is-colliding"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回是否有任何对象与形状的向量相交（考虑向量长度）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-shapecast2d-method-remove-exception"></target>
            <paragraph classes="classref-method" ids="class-shapecast2d-method-remove-exception" names="class_shapecast2d_method_remove_exception"><abbreviation explanation="无返回值。">void</abbreviation> <strong>remove_exception</strong>(node: <reference internal="True" refuri="class_collisionobject2d#class-collisionobject2d"><inline classes="std std-ref">CollisionObject2D</inline></reference>) <reference internal="True" refid="class-shapecast2d-method-remove-exception"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>移除碰撞例外，使该形状能够汇报与指定 <reference internal="True" refuri="class_collisionobject2d#class-collisionobject2d"><inline classes="std std-ref">CollisionObject2D</inline></reference> 节点的碰撞。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-shapecast2d-method-remove-exception-rid"></target>
            <paragraph classes="classref-method" ids="class-shapecast2d-method-remove-exception-rid" names="class_shapecast2d_method_remove_exception_rid"><abbreviation explanation="无返回值。">void</abbreviation> <strong>remove_exception_rid</strong>(rid: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <reference internal="True" refid="class-shapecast2d-method-remove-exception-rid"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>移除碰撞例外，使该形状能够汇报与指定 <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> 的碰撞。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-shapecast2d-method-set-collision-mask-value"></target>
            <paragraph classes="classref-method" ids="class-shapecast2d-method-set-collision-mask-value" names="class_shapecast2d_method_set_collision_mask_value"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_collision_mask_value</strong>(layer_number: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <reference internal="True" refid="class-shapecast2d-method-set-collision-mask-value"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>根据 <literal>value</literal>，启用或禁用 <reference internal="True" refid="class-shapecast2d-property-collision-mask"><inline classes="std std-ref">collision_mask</inline></reference> 中指定的层，给定的 <literal>layer_number</literal> 应在 1 和 32 之间。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

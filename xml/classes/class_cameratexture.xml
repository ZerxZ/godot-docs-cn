<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_cameratexture.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/CameraTexture.xml.</comment>
    <target refid="class-cameratexture"></target>
    <section ids="cameratexture class-cameratexture" names="cameratexture class_cameratexture">
        <title>CameraTexture</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_texture#class-texture"><inline classes="std std-ref">Texture</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>由 <reference internal="True" refuri="class_camerafeed#class-camerafeed"><inline classes="std std-ref">CameraFeed</inline></reference> 提供的纹理。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>该纹理可以访问 <reference internal="True" refuri="class_camerafeed#class-camerafeed"><inline classes="std std-ref">CameraFeed</inline></reference> 提供的相机纹理。</paragraph>
            <paragraph><strong>注意：</strong>许多相机提供的都是 YCbCr 图像，需要在着色器中进行转换。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="47"></colspec>
                    <colspec colwidth="72"></colspec>
                    <colspec colwidth="88"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cameratexture-property-camera-feed-id"><inline classes="std std-ref">camera_feed_id</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cameratexture-property-camera-is-active"><inline classes="std std-ref">camera_is_active</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph>resource_local_to_scene</paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal> (overrides <reference internal="True" refuri="class_resource#class-resource-property-resource-local-to-scene"><inline classes="std std-ref">Resource</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_cameraserver#enum-cameraserver-feedimage"><inline classes="std std-ref">FeedImage</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cameratexture-property-which-feed"><inline classes="std std-ref">which_feed</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="属性说明">
            <title>属性说明</title>
            <target refid="class-cameratexture-property-camera-feed-id"></target>
            <paragraph classes="classref-property" ids="class-cameratexture-property-camera-feed-id" names="class_cameratexture_property_camera_feed_id"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>camera_feed_id</strong> = <literal>0</literal> <reference internal="True" refid="class-cameratexture-property-camera-feed-id"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_camera_feed_id</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_camera_feed_id</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>我们要显示图像的 <reference internal="True" refuri="class_camerafeed#class-camerafeed"><inline classes="std std-ref">CameraFeed</inline></reference> 的 ID。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cameratexture-property-camera-is-active"></target>
            <paragraph classes="classref-property" ids="class-cameratexture-property-camera-is-active" names="class_cameratexture_property_camera_is_active"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>camera_is_active</strong> = <literal>false</literal> <reference internal="True" refid="class-cameratexture-property-camera-is-active"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_camera_active</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_camera_active</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>给予访问 <reference internal="True" refuri="class_camerafeed#class-camerafeed"><inline classes="std std-ref">CameraFeed</inline></reference> 的活动属性的便利属性。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cameratexture-property-which-feed"></target>
            <paragraph classes="classref-property" ids="class-cameratexture-property-which-feed" names="class_cameratexture_property_which_feed"><reference internal="True" refuri="class_cameraserver#enum-cameraserver-feedimage"><inline classes="std std-ref">FeedImage</inline></reference> <strong>which_feed</strong> = <literal>0</literal> <reference internal="True" refid="class-cameratexture-property-which-feed"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_which_feed</strong>(value: <reference internal="True" refuri="class_cameraserver#enum-cameraserver-feedimage"><inline classes="std std-ref">FeedImage</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_cameraserver#enum-cameraserver-feedimage"><inline classes="std std-ref">FeedImage</inline></reference> <strong>get_which_feed</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>我们要访问 <reference internal="True" refuri="class_camerafeed#class-camerafeed"><inline classes="std std-ref">CameraFeed</inline></reference> 中的哪个图像，如果相机图像被分割成 Y 和 CbCr 分量，这一点很重要。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_cameraserver.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/CameraServer.xml.</comment>
    <target refid="class-cameraserver"></target>
    <section ids="cameraserver class-cameraserver" names="cameraserver class_cameraserver">
        <title>CameraServer</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>跟踪 Godot 中可访问的不同摄像头的服务器。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph><strong>CameraServer</strong> 记录了 Godot 中可访问的不同相机。此处的相机指外部相机，例如网络摄像头或手机上的摄像头。</paragraph>
            <paragraph>主要用于为 AR 模块提供来自相机的视频源。</paragraph>
            <paragraph><strong>注意：</strong>这个类目前只在 macOS 和 iOS 上实现。在其他平台上没有可用的 <reference internal="True" refuri="class_camerafeed#class-camerafeed"><inline classes="std std-ref">CameraFeed</inline></reference>。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="39"></colspec>
                    <colspec colwidth="112"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cameraserver-method-add-feed"><inline classes="std std-ref">add_feed</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_camerafeed#class-camerafeed"><inline classes="std std-ref">CameraFeed</inline></reference> feed <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_camerafeed#class-camerafeed"><inline classes="std std-ref">CameraFeed[]</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cameraserver-method-feeds"><inline classes="std std-ref">feeds</inline></reference> <strong>(</strong> <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_camerafeed#class-camerafeed"><inline classes="std std-ref">CameraFeed</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cameraserver-method-get-feed"><inline classes="std std-ref">get_feed</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cameraserver-method-get-feed-count"><inline classes="std std-ref">get_feed_count</inline></reference> <strong>(</strong> <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cameraserver-method-remove-feed"><inline classes="std std-ref">remove_feed</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_camerafeed#class-camerafeed"><inline classes="std std-ref">CameraFeed</inline></reference> feed <strong>)</strong></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="信号">
            <title>信号</title>
            <target refid="class-cameraserver-signal-camera-feed-added"></target>
            <paragraph classes="classref-signal" ids="class-cameraserver-signal-camera-feed-added" names="class_cameraserver_signal_camera_feed_added"><strong>camera_feed_added</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id <strong>)</strong></paragraph>
            <paragraph>当添加 <reference internal="True" refuri="class_camerafeed#class-camerafeed"><inline classes="std std-ref">CameraFeed</inline></reference> 时发出（例如插入网络摄像头时）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cameraserver-signal-camera-feed-removed"></target>
            <paragraph classes="classref-signal" ids="class-cameraserver-signal-camera-feed-removed" names="class_cameraserver_signal_camera_feed_removed"><strong>camera_feed_removed</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id <strong>)</strong></paragraph>
            <paragraph>当移除 <reference internal="True" refuri="class_camerafeed#class-camerafeed"><inline classes="std std-ref">CameraFeed</inline></reference> 时发出（例如拔掉网络摄像头时）。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="枚举">
            <title>枚举</title>
            <target refid="enum-cameraserver-feedimage"></target>
            <paragraph classes="classref-enumeration" ids="enum-cameraserver-feedimage" names="enum_cameraserver_feedimage">enum <strong>FeedImage</strong>:</paragraph>
            <target refid="class-cameraserver-constant-feed-rgba-image"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-cameraserver-constant-feed-rgba-image" names="class_cameraserver_constant_feed_rgba_image"><reference internal="True" refid="enum-cameraserver-feedimage"><inline classes="std std-ref">FeedImage</inline></reference> <strong>FEED_RGBA_IMAGE</strong> = <literal>0</literal></paragraph>
            <paragraph>RGBA 相机图像。</paragraph>
            <target refid="class-cameraserver-constant-feed-ycbcr-image"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-cameraserver-constant-feed-ycbcr-image" names="class_cameraserver_constant_feed_ycbcr_image"><reference internal="True" refid="enum-cameraserver-feedimage"><inline classes="std std-ref">FeedImage</inline></reference> <strong>FEED_YCBCR_IMAGE</strong> = <literal>0</literal></paragraph>
            <paragraph><reference name="YCbCr" refuri="https://zh.wikipedia.org/zh-cn/YCbCr">YCbCr</reference> 相机图像。</paragraph>
            <target refid="class-cameraserver-constant-feed-y-image"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-cameraserver-constant-feed-y-image" names="class_cameraserver_constant_feed_y_image"><reference internal="True" refid="enum-cameraserver-feedimage"><inline classes="std std-ref">FeedImage</inline></reference> <strong>FEED_Y_IMAGE</strong> = <literal>0</literal></paragraph>
            <paragraph>Y 分量相机图像。</paragraph>
            <target refid="class-cameraserver-constant-feed-cbcr-image"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-cameraserver-constant-feed-cbcr-image" names="class_cameraserver_constant_feed_cbcr_image"><reference internal="True" refid="enum-cameraserver-feedimage"><inline classes="std std-ref">FeedImage</inline></reference> <strong>FEED_CBCR_IMAGE</strong> = <literal>1</literal></paragraph>
            <paragraph>CbCr 分量相机图像。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="方法说明">
            <title>方法说明</title>
            <target refid="class-cameraserver-method-add-feed"></target>
            <paragraph classes="classref-method" ids="class-cameraserver-method-add-feed" names="class_cameraserver_method_add_feed">void <strong>add_feed</strong> <strong>(</strong> <reference internal="True" refuri="class_camerafeed#class-camerafeed"><inline classes="std std-ref">CameraFeed</inline></reference> feed <strong>)</strong></paragraph>
            <paragraph>将相机源 <literal>feed</literal> 添加到相机服务器中。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cameraserver-method-feeds"></target>
            <paragraph classes="classref-method" ids="class-cameraserver-method-feeds" names="class_cameraserver_method_feeds"><reference internal="True" refuri="class_camerafeed#class-camerafeed"><inline classes="std std-ref">CameraFeed[]</inline></reference> <strong>feeds</strong> <strong>(</strong> <strong>)</strong></paragraph>
            <paragraph>返回一个 <reference internal="True" refuri="class_camerafeed#class-camerafeed"><inline classes="std std-ref">CameraFeed</inline></reference> 数组。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cameraserver-method-get-feed"></target>
            <paragraph classes="classref-method" ids="class-cameraserver-method-get-feed" names="class_cameraserver_method_get_feed"><reference internal="True" refuri="class_camerafeed#class-camerafeed"><inline classes="std std-ref">CameraFeed</inline></reference> <strong>get_feed</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index <strong>)</strong></paragraph>
            <paragraph>返回与给定索引 <literal>index</literal> 的相机对应的 <reference internal="True" refuri="class_camerafeed#class-camerafeed"><inline classes="std std-ref">CameraFeed</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cameraserver-method-get-feed-count"></target>
            <paragraph classes="classref-method" ids="class-cameraserver-method-get-feed-count" names="class_cameraserver_method_get_feed_count"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_feed_count</strong> <strong>(</strong> <strong>)</strong></paragraph>
            <paragraph>返回注册的 <reference internal="True" refuri="class_camerafeed#class-camerafeed"><inline classes="std std-ref">CameraFeed</inline></reference> 的数量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-cameraserver-method-remove-feed"></target>
            <paragraph classes="classref-method" ids="class-cameraserver-method-remove-feed" names="class_cameraserver_method_remove_feed">void <strong>remove_feed</strong> <strong>(</strong> <reference internal="True" refuri="class_camerafeed#class-camerafeed"><inline classes="std std-ref">CameraFeed</inline></reference> feed <strong>)</strong></paragraph>
            <paragraph>移除指定的相机源 <literal>feed</literal>。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，所以可以直接使用类名调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_skeletonmodificationstack2d.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/SkeletonModificationStack2D.xml.</comment>
    <target refid="class-skeletonmodificationstack2d"></target>
    <section ids="skeletonmodificationstack2d class-skeletonmodificationstack2d" names="skeletonmodificationstack2d class_skeletonmodificationstack2d">
        <title>SkeletonModificationStack2D</title>
        <paragraph><strong>实验性：</strong> This class may be changed or removed in future versions.</paragraph>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>存放 <reference internal="True" refuri="class_skeletonmodification2d#class-skeletonmodification2d"><inline classes="std std-ref">SkeletonModification2D</inline></reference> 栈的资源。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>该资源由 Skeleton 使用，并持有一个 <reference internal="True" refuri="class_skeletonmodification2d#class-skeletonmodification2d"><inline classes="std std-ref">SkeletonModification2D</inline></reference> 堆栈。</paragraph>
            <paragraph>这控制了修改的顺序以及它们的应用方式。修改顺序对于全身 IK 设置尤为重要，因为需要以正确的顺序执行修改以获得所需的结果。例如，想在人形骨骼的手臂<emphasis>之前</emphasis>对脊柱执行一个修改。</paragraph>
            <paragraph>该资源还控制所有修改被应用于 <reference internal="True" refuri="class_skeleton2d#class-skeleton2d"><inline classes="std std-ref">Skeleton2D</inline></reference> 的强度。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="27"></colspec>
                    <colspec colwidth="90"></colspec>
                    <colspec colwidth="11"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodificationstack2d-property-enabled"><inline classes="std std-ref">enabled</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodificationstack2d-property-modification-count"><inline classes="std std-ref">modification_count</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodificationstack2d-property-strength"><inline classes="std std-ref">strength</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="61"></colspec>
                    <colspec colwidth="199"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodificationstack2d-method-add-modification"><inline classes="std std-ref">add_modification</inline></reference>(modification: <reference internal="True" refuri="class_skeletonmodification2d#class-skeletonmodification2d"><inline classes="std std-ref">SkeletonModification2D</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodificationstack2d-method-delete-modification"><inline classes="std std-ref">delete_modification</inline></reference>(mod_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodificationstack2d-method-enable-all-modifications"><inline classes="std std-ref">enable_all_modifications</inline></reference>(enabled: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodificationstack2d-method-execute"><inline classes="std std-ref">execute</inline></reference>(delta: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>, execution_mode: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodificationstack2d-method-get-is-setup"><inline classes="std std-ref">get_is_setup</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_skeletonmodification2d#class-skeletonmodification2d"><inline classes="std std-ref">SkeletonModification2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodificationstack2d-method-get-modification"><inline classes="std std-ref">get_modification</inline></reference>(mod_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_skeleton2d#class-skeleton2d"><inline classes="std std-ref">Skeleton2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodificationstack2d-method-get-skeleton"><inline classes="std std-ref">get_skeleton</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodificationstack2d-method-set-modification"><inline classes="std std-ref">set_modification</inline></reference>(mod_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, modification: <reference internal="True" refuri="class_skeletonmodification2d#class-skeletonmodification2d"><inline classes="std std-ref">SkeletonModification2D</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodificationstack2d-method-setup"><inline classes="std std-ref">setup</inline></reference>()</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="属性说明">
            <title>属性说明</title>
            <target refid="class-skeletonmodificationstack2d-property-enabled"></target>
            <paragraph classes="classref-property" ids="class-skeletonmodificationstack2d-property-enabled" names="class_skeletonmodificationstack2d_property_enabled"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>enabled</strong> = <literal>false</literal> <reference internal="True" refid="class-skeletonmodificationstack2d-property-enabled"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_enabled</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_enabled</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则会调用该堆栈中的修改器。这是通过 <reference internal="True" refuri="class_skeleton2d#class-skeleton2d"><inline classes="std std-ref">Skeleton2D</inline></reference> 节点自动处理的。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodificationstack2d-property-modification-count"></target>
            <paragraph classes="classref-property" ids="class-skeletonmodificationstack2d-property-modification-count" names="class_skeletonmodificationstack2d_property_modification_count"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>modification_count</strong> = <literal>0</literal> <reference internal="True" refid="class-skeletonmodificationstack2d-property-modification-count"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_modification_count</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_modification_count</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>栈中修改器的数量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodificationstack2d-property-strength"></target>
            <paragraph classes="classref-property" ids="class-skeletonmodificationstack2d-property-strength" names="class_skeletonmodificationstack2d_property_strength"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>strength</strong> = <literal>1.0</literal> <reference internal="True" refid="class-skeletonmodificationstack2d-property-strength"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_strength</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_strength</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>堆栈中修改的插值强度。<literal>0</literal> 的值将使修改不被应用，<literal>0.5</literal> 的强度将应用一半，<literal>1</literal> 的强度将允许修改被完全应用并覆盖 <reference internal="True" refuri="class_skeleton2d#class-skeleton2d"><inline classes="std std-ref">Skeleton2D</inline></reference> <reference internal="True" refuri="class_bone2d#class-bone2d"><inline classes="std std-ref">Bone2D</inline></reference> 姿势。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="方法说明">
            <title>方法说明</title>
            <target refid="class-skeletonmodificationstack2d-method-add-modification"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodificationstack2d-method-add-modification" names="class_skeletonmodificationstack2d_method_add_modification"><abbreviation explanation="无返回值。">void</abbreviation> <strong>add_modification</strong>(modification: <reference internal="True" refuri="class_skeletonmodification2d#class-skeletonmodification2d"><inline classes="std std-ref">SkeletonModification2D</inline></reference>) <reference internal="True" refid="class-skeletonmodificationstack2d-method-add-modification"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将传入的 <reference internal="True" refuri="class_skeletonmodification2d#class-skeletonmodification2d"><inline classes="std std-ref">SkeletonModification2D</inline></reference> 入栈。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodificationstack2d-method-delete-modification"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodificationstack2d-method-delete-modification" names="class_skeletonmodificationstack2d_method_delete_modification"><abbreviation explanation="无返回值。">void</abbreviation> <strong>delete_modification</strong>(mod_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-skeletonmodificationstack2d-method-delete-modification"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果存在，则删除位于索引位置 <literal>mod_idx</literal> 的 <reference internal="True" refuri="class_skeletonmodification2d#class-skeletonmodification2d"><inline classes="std std-ref">SkeletonModification2D</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodificationstack2d-method-enable-all-modifications"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodificationstack2d-method-enable-all-modifications" names="class_skeletonmodificationstack2d_method_enable_all_modifications"><abbreviation explanation="无返回值。">void</abbreviation> <strong>enable_all_modifications</strong>(enabled: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <reference internal="True" refid="class-skeletonmodificationstack2d-method-enable-all-modifications"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>启用栈中的所有 <reference internal="True" refuri="class_skeletonmodification2d#class-skeletonmodification2d"><inline classes="std std-ref">SkeletonModification2D</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodificationstack2d-method-execute"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodificationstack2d-method-execute" names="class_skeletonmodificationstack2d_method_execute"><abbreviation explanation="无返回值。">void</abbreviation> <strong>execute</strong>(delta: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>, execution_mode: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-skeletonmodificationstack2d-method-execute"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>使用传入的执行模式 <literal>execution_mode</literal> 执行栈中的所有 <reference internal="True" refuri="class_skeletonmodification2d#class-skeletonmodification2d"><inline classes="std std-ref">SkeletonModification2D</inline></reference>，从索引 <literal>0</literal> 执行到 <reference internal="True" refid="class-skeletonmodificationstack2d-property-modification-count"><inline classes="std std-ref">modification_count</inline></reference>。</paragraph>
            <paragraph><strong>注意：</strong>根据修改器的不同，结果可能会因修改器顺序的不同而不同。例如，对脊柱的修改应该在对手臂的修改之前执行，这样才能得到正确的结果。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodificationstack2d-method-get-is-setup"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodificationstack2d-method-get-is-setup" names="class_skeletonmodificationstack2d_method_get_is_setup"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_is_setup</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-skeletonmodificationstack2d-method-get-is-setup"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回一个布尔值，指示该修改堆栈是否已被设置并可以执行。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodificationstack2d-method-get-modification"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodificationstack2d-method-get-modification" names="class_skeletonmodificationstack2d_method_get_modification"><reference internal="True" refuri="class_skeletonmodification2d#class-skeletonmodification2d"><inline classes="std std-ref">SkeletonModification2D</inline></reference> <strong>get_modification</strong>(mod_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-skeletonmodificationstack2d-method-get-modification"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回传入索引 <literal>mod_idx</literal> 处的 <reference internal="True" refuri="class_skeletonmodification2d#class-skeletonmodification2d"><inline classes="std std-ref">SkeletonModification2D</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodificationstack2d-method-get-skeleton"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodificationstack2d-method-get-skeleton" names="class_skeletonmodificationstack2d_method_get_skeleton"><reference internal="True" refuri="class_skeleton2d#class-skeleton2d"><inline classes="std std-ref">Skeleton2D</inline></reference> <strong>get_skeleton</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-skeletonmodificationstack2d-method-get-skeleton"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回 SkeletonModification2D 绑定到的 <reference internal="True" refuri="class_skeleton2d#class-skeleton2d"><inline classes="std std-ref">Skeleton2D</inline></reference> 节点。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodificationstack2d-method-set-modification"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodificationstack2d-method-set-modification" names="class_skeletonmodificationstack2d_method_set_modification"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_modification</strong>(mod_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, modification: <reference internal="True" refuri="class_skeletonmodification2d#class-skeletonmodification2d"><inline classes="std std-ref">SkeletonModification2D</inline></reference>) <reference internal="True" refid="class-skeletonmodificationstack2d-method-set-modification"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将位于 <literal>mod_idx</literal> 的修改器设置为传入的 <literal>modification</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodificationstack2d-method-setup"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodificationstack2d-method-setup" names="class_skeletonmodificationstack2d_method_setup"><abbreviation explanation="无返回值。">void</abbreviation> <strong>setup</strong>() <reference internal="True" refid="class-skeletonmodificationstack2d-method-setup"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置该修改堆栈以便它可以执行。该函数应由 <reference internal="True" refuri="class_skeleton2d#class-skeleton2d"><inline classes="std std-ref">Skeleton2D</inline></reference> 调用，除非知道自己在做什么，否则不应被手动调用。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_physicsdirectbodystate2dextension.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/PhysicsDirectBodyState2DExtension.xml.</comment>
    <target refid="class-physicsdirectbodystate2dextension"></target>
    <section ids="physicsdirectbodystate2dextension class-physicsdirectbodystate2dextension" names="physicsdirectbodystate2dextension class_physicsdirectbodystate2dextension">
        <title>PhysicsDirectBodyState2DExtension</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_physicsdirectbodystate2d#class-physicsdirectbodystate2d"><inline classes="std std-ref">PhysicsDirectBodyState2D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>提供能够覆盖的虚方法，用于创建 <reference internal="True" refuri="class_physicsdirectbodystate2d#class-physicsdirectbodystate2d"><inline classes="std std-ref">PhysicsDirectBodyState2D</inline></reference> 的自定义实现。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>这个类扩展自 <reference internal="True" refuri="class_physicsdirectbodystate2d#class-physicsdirectbodystate2d"><inline classes="std std-ref">PhysicsDirectBodyState2D</inline></reference>，额外提供了可覆盖的虚方法。调用时会使用这些覆盖后的方法代替物理服务器中的内部方法。</paragraph>
            <paragraph>旨在用于 GDExtension，用于创建 <reference internal="True" refuri="class_physicsdirectbodystate2d#class-physicsdirectbodystate2d"><inline classes="std std-ref">PhysicsDirectBodyState2D</inline></reference> 的自定义实现。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="67"></colspec>
                    <colspec colwidth="211"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-add-constant-central-force"><inline classes="std std-ref">_add_constant_central_force</inline></reference>(force: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-add-constant-force"><inline classes="std std-ref">_add_constant_force</inline></reference>(force: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>, position: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-add-constant-torque"><inline classes="std std-ref">_add_constant_torque</inline></reference>(torque: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-apply-central-force"><inline classes="std std-ref">_apply_central_force</inline></reference>(force: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-apply-central-impulse"><inline classes="std std-ref">_apply_central_impulse</inline></reference>(impulse: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-apply-force"><inline classes="std std-ref">_apply_force</inline></reference>(force: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>, position: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-apply-impulse"><inline classes="std std-ref">_apply_impulse</inline></reference>(impulse: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>, position: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-apply-torque"><inline classes="std std-ref">_apply_torque</inline></reference>(torque: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-apply-torque-impulse"><inline classes="std std-ref">_apply_torque_impulse</inline></reference>(impulse: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-get-angular-velocity"><inline classes="std std-ref">_get_angular_velocity</inline></reference>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-get-center-of-mass"><inline classes="std std-ref">_get_center_of_mass</inline></reference>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-get-center-of-mass-local"><inline classes="std std-ref">_get_center_of_mass_local</inline></reference>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-get-constant-force"><inline classes="std std-ref">_get_constant_force</inline></reference>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-get-constant-torque"><inline classes="std std-ref">_get_constant_torque</inline></reference>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-get-contact-collider"><inline classes="std std-ref">_get_contact_collider</inline></reference>(contact_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-get-contact-collider-id"><inline classes="std std-ref">_get_contact_collider_id</inline></reference>(contact_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-get-contact-collider-object"><inline classes="std std-ref">_get_contact_collider_object</inline></reference>(contact_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-get-contact-collider-position"><inline classes="std std-ref">_get_contact_collider_position</inline></reference>(contact_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-get-contact-collider-shape"><inline classes="std std-ref">_get_contact_collider_shape</inline></reference>(contact_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-get-contact-collider-velocity-at-position"><inline classes="std std-ref">_get_contact_collider_velocity_at_position</inline></reference>(contact_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-get-contact-count"><inline classes="std std-ref">_get_contact_count</inline></reference>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-get-contact-impulse"><inline classes="std std-ref">_get_contact_impulse</inline></reference>(contact_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-get-contact-local-normal"><inline classes="std std-ref">_get_contact_local_normal</inline></reference>(contact_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-get-contact-local-position"><inline classes="std std-ref">_get_contact_local_position</inline></reference>(contact_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-get-contact-local-shape"><inline classes="std std-ref">_get_contact_local_shape</inline></reference>(contact_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-get-contact-local-velocity-at-position"><inline classes="std std-ref">_get_contact_local_velocity_at_position</inline></reference>(contact_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-get-inverse-inertia"><inline classes="std std-ref">_get_inverse_inertia</inline></reference>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-get-inverse-mass"><inline classes="std std-ref">_get_inverse_mass</inline></reference>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-get-linear-velocity"><inline classes="std std-ref">_get_linear_velocity</inline></reference>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_physicsdirectspacestate2d#class-physicsdirectspacestate2d"><inline classes="std std-ref">PhysicsDirectSpaceState2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-get-space-state"><inline classes="std std-ref">_get_space_state</inline></reference>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-get-step"><inline classes="std std-ref">_get_step</inline></reference>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-get-total-angular-damp"><inline classes="std std-ref">_get_total_angular_damp</inline></reference>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-get-total-gravity"><inline classes="std std-ref">_get_total_gravity</inline></reference>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-get-total-linear-damp"><inline classes="std std-ref">_get_total_linear_damp</inline></reference>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-get-transform"><inline classes="std std-ref">_get_transform</inline></reference>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-get-velocity-at-local-position"><inline classes="std std-ref">_get_velocity_at_local_position</inline></reference>(local_position: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-integrate-forces"><inline classes="std std-ref">_integrate_forces</inline></reference>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-is-sleeping"><inline classes="std std-ref">_is_sleeping</inline></reference>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-set-angular-velocity"><inline classes="std std-ref">_set_angular_velocity</inline></reference>(velocity: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-set-constant-force"><inline classes="std std-ref">_set_constant_force</inline></reference>(force: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-set-constant-torque"><inline classes="std std-ref">_set_constant_torque</inline></reference>(torque: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-set-linear-velocity"><inline classes="std std-ref">_set_linear_velocity</inline></reference>(velocity: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-set-sleep-state"><inline classes="std std-ref">_set_sleep_state</inline></reference>(enabled: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-set-transform"><inline classes="std std-ref">_set_transform</inline></reference>(transform: <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="方法说明">
            <title>方法说明</title>
            <target refid="class-physicsdirectbodystate2dextension-private-method-add-constant-central-force"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2dextension-private-method-add-constant-central-force" names="class_physicsdirectbodystate2dextension_private_method__add_constant_central_force"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_add_constant_central_force</strong>(force: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-add-constant-central-force"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsdirectbodystate2d#class-physicsdirectbodystate2d-method-add-constant-central-force"><inline classes="std std-ref">PhysicsDirectBodyState2D.add_constant_central_force</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2dextension-private-method-add-constant-force"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2dextension-private-method-add-constant-force" names="class_physicsdirectbodystate2dextension_private_method__add_constant_force"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_add_constant_force</strong>(force: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>, position: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-add-constant-force"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsdirectbodystate2d#class-physicsdirectbodystate2d-method-add-constant-force"><inline classes="std std-ref">PhysicsDirectBodyState2D.add_constant_force</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2dextension-private-method-add-constant-torque"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2dextension-private-method-add-constant-torque" names="class_physicsdirectbodystate2dextension_private_method__add_constant_torque"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_add_constant_torque</strong>(torque: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-add-constant-torque"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsdirectbodystate2d#class-physicsdirectbodystate2d-method-add-constant-torque"><inline classes="std std-ref">PhysicsDirectBodyState2D.add_constant_torque</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2dextension-private-method-apply-central-force"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2dextension-private-method-apply-central-force" names="class_physicsdirectbodystate2dextension_private_method__apply_central_force"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_apply_central_force</strong>(force: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-apply-central-force"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsdirectbodystate2d#class-physicsdirectbodystate2d-method-apply-central-force"><inline classes="std std-ref">PhysicsDirectBodyState2D.apply_central_force</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2dextension-private-method-apply-central-impulse"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2dextension-private-method-apply-central-impulse" names="class_physicsdirectbodystate2dextension_private_method__apply_central_impulse"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_apply_central_impulse</strong>(impulse: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-apply-central-impulse"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsdirectbodystate2d#class-physicsdirectbodystate2d-method-apply-central-impulse"><inline classes="std std-ref">PhysicsDirectBodyState2D.apply_central_impulse</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2dextension-private-method-apply-force"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2dextension-private-method-apply-force" names="class_physicsdirectbodystate2dextension_private_method__apply_force"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_apply_force</strong>(force: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>, position: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-apply-force"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsdirectbodystate2d#class-physicsdirectbodystate2d-method-apply-force"><inline classes="std std-ref">PhysicsDirectBodyState2D.apply_force</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2dextension-private-method-apply-impulse"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2dextension-private-method-apply-impulse" names="class_physicsdirectbodystate2dextension_private_method__apply_impulse"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_apply_impulse</strong>(impulse: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>, position: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-apply-impulse"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsdirectbodystate2d#class-physicsdirectbodystate2d-method-apply-impulse"><inline classes="std std-ref">PhysicsDirectBodyState2D.apply_impulse</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2dextension-private-method-apply-torque"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2dextension-private-method-apply-torque" names="class_physicsdirectbodystate2dextension_private_method__apply_torque"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_apply_torque</strong>(torque: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-apply-torque"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsdirectbodystate2d#class-physicsdirectbodystate2d-method-apply-torque"><inline classes="std std-ref">PhysicsDirectBodyState2D.apply_torque</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2dextension-private-method-apply-torque-impulse"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2dextension-private-method-apply-torque-impulse" names="class_physicsdirectbodystate2dextension_private_method__apply_torque_impulse"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_apply_torque_impulse</strong>(impulse: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-apply-torque-impulse"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsdirectbodystate2d#class-physicsdirectbodystate2d-method-apply-torque-impulse"><inline classes="std std-ref">PhysicsDirectBodyState2D.apply_torque_impulse</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2dextension-private-method-get-angular-velocity"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2dextension-private-method-get-angular-velocity" names="class_physicsdirectbodystate2dextension_private_method__get_angular_velocity"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>_get_angular_velocity</strong>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-get-angular-velocity"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Implement to override the behavior of <reference internal="True" refuri="class_physicsdirectbodystate2d#class-physicsdirectbodystate2d-property-angular-velocity"><inline classes="std std-ref">PhysicsDirectBodyState2D.angular_velocity</inline></reference> and its respective getter.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2dextension-private-method-get-center-of-mass"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2dextension-private-method-get-center-of-mass" names="class_physicsdirectbodystate2dextension_private_method__get_center_of_mass"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>_get_center_of_mass</strong>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-get-center-of-mass"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Implement to override the behavior of <reference internal="True" refuri="class_physicsdirectbodystate2d#class-physicsdirectbodystate2d-property-center-of-mass"><inline classes="std std-ref">PhysicsDirectBodyState2D.center_of_mass</inline></reference> and its respective getter.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2dextension-private-method-get-center-of-mass-local"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2dextension-private-method-get-center-of-mass-local" names="class_physicsdirectbodystate2dextension_private_method__get_center_of_mass_local"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>_get_center_of_mass_local</strong>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-get-center-of-mass-local"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Implement to override the behavior of <reference internal="True" refuri="class_physicsdirectbodystate2d#class-physicsdirectbodystate2d-property-center-of-mass-local"><inline classes="std std-ref">PhysicsDirectBodyState2D.center_of_mass_local</inline></reference> and its respective getter.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2dextension-private-method-get-constant-force"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2dextension-private-method-get-constant-force" names="class_physicsdirectbodystate2dextension_private_method__get_constant_force"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>_get_constant_force</strong>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-get-constant-force"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsdirectbodystate2d#class-physicsdirectbodystate2d-method-get-constant-force"><inline classes="std std-ref">PhysicsDirectBodyState2D.get_constant_force</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2dextension-private-method-get-constant-torque"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2dextension-private-method-get-constant-torque" names="class_physicsdirectbodystate2dextension_private_method__get_constant_torque"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>_get_constant_torque</strong>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-get-constant-torque"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsdirectbodystate2d#class-physicsdirectbodystate2d-method-get-constant-torque"><inline classes="std std-ref">PhysicsDirectBodyState2D.get_constant_torque</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2dextension-private-method-get-contact-collider"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2dextension-private-method-get-contact-collider" names="class_physicsdirectbodystate2dextension_private_method__get_contact_collider"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>_get_contact_collider</strong>(contact_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-get-contact-collider"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsdirectbodystate2d#class-physicsdirectbodystate2d-method-get-contact-collider"><inline classes="std std-ref">PhysicsDirectBodyState2D.get_contact_collider</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2dextension-private-method-get-contact-collider-id"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2dextension-private-method-get-contact-collider-id" names="class_physicsdirectbodystate2dextension_private_method__get_contact_collider_id"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>_get_contact_collider_id</strong>(contact_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-get-contact-collider-id"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsdirectbodystate2d#class-physicsdirectbodystate2d-method-get-contact-collider-id"><inline classes="std std-ref">PhysicsDirectBodyState2D.get_contact_collider_id</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2dextension-private-method-get-contact-collider-object"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2dextension-private-method-get-contact-collider-object" names="class_physicsdirectbodystate2dextension_private_method__get_contact_collider_object"><reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference> <strong>_get_contact_collider_object</strong>(contact_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-get-contact-collider-object"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsdirectbodystate2d#class-physicsdirectbodystate2d-method-get-contact-collider-object"><inline classes="std std-ref">PhysicsDirectBodyState2D.get_contact_collider_object</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2dextension-private-method-get-contact-collider-position"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2dextension-private-method-get-contact-collider-position" names="class_physicsdirectbodystate2dextension_private_method__get_contact_collider_position"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>_get_contact_collider_position</strong>(contact_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-get-contact-collider-position"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsdirectbodystate2d#class-physicsdirectbodystate2d-method-get-contact-collider-position"><inline classes="std std-ref">PhysicsDirectBodyState2D.get_contact_collider_position</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2dextension-private-method-get-contact-collider-shape"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2dextension-private-method-get-contact-collider-shape" names="class_physicsdirectbodystate2dextension_private_method__get_contact_collider_shape"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>_get_contact_collider_shape</strong>(contact_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-get-contact-collider-shape"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsdirectbodystate2d#class-physicsdirectbodystate2d-method-get-contact-collider-shape"><inline classes="std std-ref">PhysicsDirectBodyState2D.get_contact_collider_shape</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2dextension-private-method-get-contact-collider-velocity-at-position"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2dextension-private-method-get-contact-collider-velocity-at-position" names="class_physicsdirectbodystate2dextension_private_method__get_contact_collider_velocity_at_position"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>_get_contact_collider_velocity_at_position</strong>(contact_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-get-contact-collider-velocity-at-position"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsdirectbodystate2d#class-physicsdirectbodystate2d-method-get-contact-collider-velocity-at-position"><inline classes="std std-ref">PhysicsDirectBodyState2D.get_contact_collider_velocity_at_position</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2dextension-private-method-get-contact-count"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2dextension-private-method-get-contact-count" names="class_physicsdirectbodystate2dextension_private_method__get_contact_count"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>_get_contact_count</strong>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-get-contact-count"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsdirectbodystate2d#class-physicsdirectbodystate2d-method-get-contact-count"><inline classes="std std-ref">PhysicsDirectBodyState2D.get_contact_count</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2dextension-private-method-get-contact-impulse"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2dextension-private-method-get-contact-impulse" names="class_physicsdirectbodystate2dextension_private_method__get_contact_impulse"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>_get_contact_impulse</strong>(contact_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-get-contact-impulse"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsdirectbodystate2d#class-physicsdirectbodystate2d-method-get-contact-impulse"><inline classes="std std-ref">PhysicsDirectBodyState2D.get_contact_impulse</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2dextension-private-method-get-contact-local-normal"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2dextension-private-method-get-contact-local-normal" names="class_physicsdirectbodystate2dextension_private_method__get_contact_local_normal"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>_get_contact_local_normal</strong>(contact_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-get-contact-local-normal"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsdirectbodystate2d#class-physicsdirectbodystate2d-method-get-contact-local-normal"><inline classes="std std-ref">PhysicsDirectBodyState2D.get_contact_local_normal</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2dextension-private-method-get-contact-local-position"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2dextension-private-method-get-contact-local-position" names="class_physicsdirectbodystate2dextension_private_method__get_contact_local_position"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>_get_contact_local_position</strong>(contact_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-get-contact-local-position"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsdirectbodystate2d#class-physicsdirectbodystate2d-method-get-contact-local-position"><inline classes="std std-ref">PhysicsDirectBodyState2D.get_contact_local_position</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2dextension-private-method-get-contact-local-shape"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2dextension-private-method-get-contact-local-shape" names="class_physicsdirectbodystate2dextension_private_method__get_contact_local_shape"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>_get_contact_local_shape</strong>(contact_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-get-contact-local-shape"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsdirectbodystate2d#class-physicsdirectbodystate2d-method-get-contact-local-shape"><inline classes="std std-ref">PhysicsDirectBodyState2D.get_contact_local_shape</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2dextension-private-method-get-contact-local-velocity-at-position"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2dextension-private-method-get-contact-local-velocity-at-position" names="class_physicsdirectbodystate2dextension_private_method__get_contact_local_velocity_at_position"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>_get_contact_local_velocity_at_position</strong>(contact_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-get-contact-local-velocity-at-position"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsdirectbodystate2d#class-physicsdirectbodystate2d-method-get-contact-local-velocity-at-position"><inline classes="std std-ref">PhysicsDirectBodyState2D.get_contact_local_velocity_at_position</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2dextension-private-method-get-inverse-inertia"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2dextension-private-method-get-inverse-inertia" names="class_physicsdirectbodystate2dextension_private_method__get_inverse_inertia"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>_get_inverse_inertia</strong>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-get-inverse-inertia"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Implement to override the behavior of <reference internal="True" refuri="class_physicsdirectbodystate2d#class-physicsdirectbodystate2d-property-inverse-inertia"><inline classes="std std-ref">PhysicsDirectBodyState2D.inverse_inertia</inline></reference> and its respective getter.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2dextension-private-method-get-inverse-mass"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2dextension-private-method-get-inverse-mass" names="class_physicsdirectbodystate2dextension_private_method__get_inverse_mass"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>_get_inverse_mass</strong>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-get-inverse-mass"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Implement to override the behavior of <reference internal="True" refuri="class_physicsdirectbodystate2d#class-physicsdirectbodystate2d-property-inverse-mass"><inline classes="std std-ref">PhysicsDirectBodyState2D.inverse_mass</inline></reference> and its respective getter.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2dextension-private-method-get-linear-velocity"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2dextension-private-method-get-linear-velocity" names="class_physicsdirectbodystate2dextension_private_method__get_linear_velocity"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>_get_linear_velocity</strong>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-get-linear-velocity"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Implement to override the behavior of <reference internal="True" refuri="class_physicsdirectbodystate2d#class-physicsdirectbodystate2d-property-linear-velocity"><inline classes="std std-ref">PhysicsDirectBodyState2D.linear_velocity</inline></reference> and its respective getter.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2dextension-private-method-get-space-state"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2dextension-private-method-get-space-state" names="class_physicsdirectbodystate2dextension_private_method__get_space_state"><reference internal="True" refuri="class_physicsdirectspacestate2d#class-physicsdirectspacestate2d"><inline classes="std std-ref">PhysicsDirectSpaceState2D</inline></reference> <strong>_get_space_state</strong>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-get-space-state"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsdirectbodystate2d#class-physicsdirectbodystate2d-method-get-space-state"><inline classes="std std-ref">PhysicsDirectBodyState2D.get_space_state</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2dextension-private-method-get-step"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2dextension-private-method-get-step" names="class_physicsdirectbodystate2dextension_private_method__get_step"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>_get_step</strong>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-get-step"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Implement to override the behavior of <reference internal="True" refuri="class_physicsdirectbodystate2d#class-physicsdirectbodystate2d-property-step"><inline classes="std std-ref">PhysicsDirectBodyState2D.step</inline></reference> and its respective getter.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2dextension-private-method-get-total-angular-damp"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2dextension-private-method-get-total-angular-damp" names="class_physicsdirectbodystate2dextension_private_method__get_total_angular_damp"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>_get_total_angular_damp</strong>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-get-total-angular-damp"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Implement to override the behavior of <reference internal="True" refuri="class_physicsdirectbodystate2d#class-physicsdirectbodystate2d-property-total-angular-damp"><inline classes="std std-ref">PhysicsDirectBodyState2D.total_angular_damp</inline></reference> and its respective getter.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2dextension-private-method-get-total-gravity"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2dextension-private-method-get-total-gravity" names="class_physicsdirectbodystate2dextension_private_method__get_total_gravity"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>_get_total_gravity</strong>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-get-total-gravity"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Implement to override the behavior of <reference internal="True" refuri="class_physicsdirectbodystate2d#class-physicsdirectbodystate2d-property-total-gravity"><inline classes="std std-ref">PhysicsDirectBodyState2D.total_gravity</inline></reference> and its respective getter.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2dextension-private-method-get-total-linear-damp"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2dextension-private-method-get-total-linear-damp" names="class_physicsdirectbodystate2dextension_private_method__get_total_linear_damp"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>_get_total_linear_damp</strong>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-get-total-linear-damp"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Implement to override the behavior of <reference internal="True" refuri="class_physicsdirectbodystate2d#class-physicsdirectbodystate2d-property-total-linear-damp"><inline classes="std std-ref">PhysicsDirectBodyState2D.total_linear_damp</inline></reference> and its respective getter.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2dextension-private-method-get-transform"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2dextension-private-method-get-transform" names="class_physicsdirectbodystate2dextension_private_method__get_transform"><reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference> <strong>_get_transform</strong>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-get-transform"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Implement to override the behavior of <reference internal="True" refuri="class_physicsdirectbodystate2d#class-physicsdirectbodystate2d-property-transform"><inline classes="std std-ref">PhysicsDirectBodyState2D.transform</inline></reference> and its respective getter.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2dextension-private-method-get-velocity-at-local-position"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2dextension-private-method-get-velocity-at-local-position" names="class_physicsdirectbodystate2dextension_private_method__get_velocity_at_local_position"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>_get_velocity_at_local_position</strong>(local_position: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-get-velocity-at-local-position"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsdirectbodystate2d#class-physicsdirectbodystate2d-method-get-velocity-at-local-position"><inline classes="std std-ref">PhysicsDirectBodyState2D.get_velocity_at_local_position</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2dextension-private-method-integrate-forces"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2dextension-private-method-integrate-forces" names="class_physicsdirectbodystate2dextension_private_method__integrate_forces"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_integrate_forces</strong>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-integrate-forces"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsdirectbodystate2d#class-physicsdirectbodystate2d-method-integrate-forces"><inline classes="std std-ref">PhysicsDirectBodyState2D.integrate_forces</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2dextension-private-method-is-sleeping"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2dextension-private-method-is-sleeping" names="class_physicsdirectbodystate2dextension_private_method__is_sleeping"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>_is_sleeping</strong>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-is-sleeping"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Implement to override the behavior of <reference internal="True" refuri="class_physicsdirectbodystate2d#class-physicsdirectbodystate2d-property-sleeping"><inline classes="std std-ref">PhysicsDirectBodyState2D.sleeping</inline></reference> and its respective getter.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2dextension-private-method-set-angular-velocity"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2dextension-private-method-set-angular-velocity" names="class_physicsdirectbodystate2dextension_private_method__set_angular_velocity"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_set_angular_velocity</strong>(velocity: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-set-angular-velocity"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Implement to override the behavior of <reference internal="True" refuri="class_physicsdirectbodystate2d#class-physicsdirectbodystate2d-property-angular-velocity"><inline classes="std std-ref">PhysicsDirectBodyState2D.angular_velocity</inline></reference> and its respective setter.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2dextension-private-method-set-constant-force"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2dextension-private-method-set-constant-force" names="class_physicsdirectbodystate2dextension_private_method__set_constant_force"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_set_constant_force</strong>(force: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-set-constant-force"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsdirectbodystate2d#class-physicsdirectbodystate2d-method-set-constant-force"><inline classes="std std-ref">PhysicsDirectBodyState2D.set_constant_force</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2dextension-private-method-set-constant-torque"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2dextension-private-method-set-constant-torque" names="class_physicsdirectbodystate2dextension_private_method__set_constant_torque"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_set_constant_torque</strong>(torque: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-set-constant-torque"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><reference internal="True" refuri="class_physicsdirectbodystate2d#class-physicsdirectbodystate2d-method-set-constant-torque"><inline classes="std std-ref">PhysicsDirectBodyState2D.set_constant_torque</inline></reference> 的可覆盖版本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2dextension-private-method-set-linear-velocity"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2dextension-private-method-set-linear-velocity" names="class_physicsdirectbodystate2dextension_private_method__set_linear_velocity"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_set_linear_velocity</strong>(velocity: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-set-linear-velocity"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Implement to override the behavior of <reference internal="True" refuri="class_physicsdirectbodystate2d#class-physicsdirectbodystate2d-property-linear-velocity"><inline classes="std std-ref">PhysicsDirectBodyState2D.linear_velocity</inline></reference> and its respective setter.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2dextension-private-method-set-sleep-state"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2dextension-private-method-set-sleep-state" names="class_physicsdirectbodystate2dextension_private_method__set_sleep_state"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_set_sleep_state</strong>(enabled: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-set-sleep-state"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Implement to override the behavior of <reference internal="True" refuri="class_physicsdirectbodystate2d#class-physicsdirectbodystate2d-property-sleeping"><inline classes="std std-ref">PhysicsDirectBodyState2D.sleeping</inline></reference> and its respective setter.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2dextension-private-method-set-transform"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2dextension-private-method-set-transform" names="class_physicsdirectbodystate2dextension_private_method__set_transform"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_set_transform</strong>(transform: <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2dextension-private-method-set-transform"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Implement to override the behavior of <reference internal="True" refuri="class_physicsdirectbodystate2d#class-physicsdirectbodystate2d-property-transform"><inline classes="std std-ref">PhysicsDirectBodyState2D.transform</inline></reference> and its respective setter.</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

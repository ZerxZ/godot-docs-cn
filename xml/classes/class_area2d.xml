<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_area2d.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <meta content="trigger" name="keywords">
    </meta>
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/Area2D.xml.</comment>
    <target refid="class-area2d"></target>
    <section ids="area2d class-area2d" names="area2d class_area2d">
        <title>Area2D</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_collisionobject2d#class-collisionobject2d"><inline classes="std std-ref">CollisionObject2D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node2d#class-node2d"><inline classes="std std-ref">Node2D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_canvasitem#class-canvasitem"><inline classes="std std-ref">CanvasItem</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>2D 空间中的一个区域，能够检测到其他 <reference internal="True" refuri="class_collisionobject2d#class-collisionobject2d"><inline classes="std std-ref">CollisionObject2D</inline></reference> 的进入或退出。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph><strong>Area2D</strong> 是 2D 空间中的一个区域，由一个或多个 <reference internal="True" refuri="class_collisionshape2d#class-collisionshape2d"><inline classes="std std-ref">CollisionShape2D</inline></reference> 或 <reference internal="True" refuri="class_collisionpolygon2d#class-collisionpolygon2d"><inline classes="std std-ref">CollisionPolygon2D</inline></reference> 子节点定义，能够检测到其他 <reference internal="True" refuri="class_collisionobject2d#class-collisionobject2d"><inline classes="std std-ref">CollisionObject2D</inline></reference> 进入或退出该区域，同时也会记录哪些碰撞对象尚未退出（即哪些对象与其存在重叠）。</paragraph>
            <paragraph>这个节点也可以在局部修改或覆盖物理参数（重力、阻尼），将音频引导至自定义音频总线。</paragraph>
            <paragraph><strong>注意：</strong>使用 <reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d"><inline classes="std std-ref">PhysicsServer2D</inline></reference> 创建的区域和物体可能无法按预期与 <strong>Area2D</strong> 交互，并且可能无法正确发出信号或跟踪对象。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference internal="True" refuri="../tutorials/physics/using_area_2d"><inline classes="doc">使用 Area2D</inline></reference></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference name="2D Dodge The Creeps 演示" refuri="https://godotengine.org/asset-library/asset/2712">2D Dodge The Creeps 演示</reference></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference name="2D Pong 演示" refuri="https://godotengine.org/asset-library/asset/2728">2D Pong 演示</reference></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference name="2D 平台跳跃演示" refuri="https://godotengine.org/asset-library/asset/2727">2D 平台跳跃演示</reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="49"></colspec>
                    <colspec colwidth="87"></colspec>
                    <colspec colwidth="19"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-area2d-property-angular-damp"><inline classes="std std-ref">angular_damp</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-area2d-spaceoverride"><inline classes="std std-ref">SpaceOverride</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-area2d-property-angular-damp-space-override"><inline classes="std std-ref">angular_damp_space_override</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-area2d-property-audio-bus-name"><inline classes="std std-ref">audio_bus_name</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>&amp;"Master"</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-area2d-property-audio-bus-override"><inline classes="std std-ref">audio_bus_override</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-area2d-property-gravity"><inline classes="std std-ref">gravity</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>980.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-area2d-property-gravity-direction"><inline classes="std std-ref">gravity_direction</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Vector2(0, 1)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-area2d-property-gravity-point"><inline classes="std std-ref">gravity_point</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-area2d-property-gravity-point-center"><inline classes="std std-ref">gravity_point_center</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Vector2(0, 1)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-area2d-property-gravity-point-unit-distance"><inline classes="std std-ref">gravity_point_unit_distance</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-area2d-spaceoverride"><inline classes="std std-ref">SpaceOverride</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-area2d-property-gravity-space-override"><inline classes="std std-ref">gravity_space_override</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-area2d-property-linear-damp"><inline classes="std std-ref">linear_damp</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-area2d-spaceoverride"><inline classes="std std-ref">SpaceOverride</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-area2d-property-linear-damp-space-override"><inline classes="std std-ref">linear_damp_space_override</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-area2d-property-monitorable"><inline classes="std std-ref">monitorable</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-area2d-property-monitoring"><inline classes="std std-ref">monitoring</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-area2d-property-priority"><inline classes="std std-ref">priority</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id4" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="58"></colspec>
                    <colspec colwidth="103"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refid="class-area2d"><inline classes="std std-ref">Area2D</inline></reference>]</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-area2d-method-get-overlapping-areas"><inline classes="std std-ref">get_overlapping_areas</inline></reference>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_node2d#class-node2d"><inline classes="std std-ref">Node2D</inline></reference>]</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-area2d-method-get-overlapping-bodies"><inline classes="std std-ref">get_overlapping_bodies</inline></reference>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-area2d-method-has-overlapping-areas"><inline classes="std std-ref">has_overlapping_areas</inline></reference>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-area2d-method-has-overlapping-bodies"><inline classes="std std-ref">has_overlapping_bodies</inline></reference>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-area2d-method-overlaps-area"><inline classes="std std-ref">overlaps_area</inline></reference>(area: <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-area2d-method-overlaps-body"><inline classes="std std-ref">overlaps_body</inline></reference>(body: <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="信号">
            <title>信号</title>
            <target refid="class-area2d-signal-area-entered"></target>
            <paragraph classes="classref-signal" ids="class-area2d-signal-area-entered" names="class_area2d_signal_area_entered"><strong>area_entered</strong>(area: <reference internal="True" refid="class-area2d"><inline classes="std std-ref">Area2D</inline></reference>) <reference internal="True" refid="class-area2d-signal-area-entered"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当接收的 <literal>area</literal> 进入此区域时发出。需要 <reference internal="True" refid="class-area2d-property-monitoring"><inline classes="std std-ref">monitoring</inline></reference> 被设置为 <literal>true</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-area2d-signal-area-exited"></target>
            <paragraph classes="classref-signal" ids="class-area2d-signal-area-exited" names="class_area2d_signal_area_exited"><strong>area_exited</strong>(area: <reference internal="True" refid="class-area2d"><inline classes="std std-ref">Area2D</inline></reference>) <reference internal="True" refid="class-area2d-signal-area-exited"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当接收的 <literal>area</literal> 退出此区域时发出。需要 <reference internal="True" refid="class-area2d-property-monitoring"><inline classes="std std-ref">monitoring</inline></reference> 被设置为 <literal>true</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-area2d-signal-area-shape-entered"></target>
            <paragraph classes="classref-signal" ids="class-area2d-signal-area-shape-entered" names="class_area2d_signal_area_shape_entered"><strong>area_shape_entered</strong>(area_rid: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, area: <reference internal="True" refid="class-area2d"><inline classes="std std-ref">Area2D</inline></reference>, area_shape_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, local_shape_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-area2d-signal-area-shape-entered"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当收到的 <literal>area</literal> 的 <reference internal="True" refuri="class_shape2d#class-shape2d"><inline classes="std std-ref">Shape2D</inline></reference> 进入这个区域的形状时发出。要求 <reference internal="True" refid="class-area2d-property-monitoring"><inline classes="std std-ref">monitoring</inline></reference> 被设置为 <literal>true</literal> 。</paragraph>
            <paragraph><literal>local_shape_index</literal> 和 <literal>area_shape_index</literal> 分别包含来自这个区域和另一个区域的交互形状的索引。<literal>area_rid</literal> 包含另一个区域的 <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>。这些值可以与 <reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d"><inline classes="std std-ref">PhysicsServer2D</inline></reference> 一起使用。</paragraph>
            <paragraph><strong>从形状索引中获取</strong> <reference internal="True" refuri="class_collisionshape2d#class-collisionshape2d"><inline classes="std std-ref">CollisionShape2D</inline></reference><strong>节点的例子：</strong></paragraph>
            <container classes="sphinx-tabs" type="tab-element">
                <div aria-label="Tabbed content" role="tablist">
                    <button aria-controls="panel-0-R0RTY3JpcHQ=" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-0-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tab" tabindex="0">GDScript</button>
                </div>
                <div aria-labelledby="tab-0-R0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-0-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve">var other_shape_owner = area.shape_find_owner( area_shape_index)
var other_shape_node = area.shape_owner_get_owner(other_shape_owner)

var local_shape_owner = shape_find_owner(local_shape_index)
var local_shape_node = shape_owner_get_owner(local_shape_owner)</literal_block>
                </div>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-area2d-signal-area-shape-exited"></target>
            <paragraph classes="classref-signal" ids="class-area2d-signal-area-shape-exited" names="class_area2d_signal_area_shape_exited"><strong>area_shape_exited</strong>(area_rid: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, area: <reference internal="True" refid="class-area2d"><inline classes="std std-ref">Area2D</inline></reference>, area_shape_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, local_shape_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-area2d-signal-area-shape-exited"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当接收的 <literal>area</literal> 的 <reference internal="True" refuri="class_shape2d#class-shape2d"><inline classes="std std-ref">Shape2D</inline></reference> 退出此区域的形状时发出。需要 <reference internal="True" refid="class-area2d-property-monitoring"><inline classes="std std-ref">monitoring</inline></reference> 被设置为 <literal>true</literal>。</paragraph>
            <paragraph>另见 <reference internal="True" refid="class-area2d-signal-area-shape-entered"><inline classes="std std-ref">area_shape_entered</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-area2d-signal-body-entered"></target>
            <paragraph classes="classref-signal" ids="class-area2d-signal-body-entered" names="class_area2d_signal_body_entered"><strong>body_entered</strong>(body: <reference internal="True" refuri="class_node2d#class-node2d"><inline classes="std std-ref">Node2D</inline></reference>) <reference internal="True" refid="class-area2d-signal-body-entered"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当接收到的 <literal>body</literal> 进入这个区域时发出的。<literal>body</literal> 可以是一个 <reference internal="True" refuri="class_physicsbody2d#class-physicsbody2d"><inline classes="std std-ref">PhysicsBody2D</inline></reference> 或一个 <reference internal="True" refuri="class_tilemap#class-tilemap"><inline classes="std std-ref">TileMap</inline></reference>。如果 <reference internal="True" refuri="class_tilemap#class-tilemap"><inline classes="std std-ref">TileMap</inline></reference> 的 <reference internal="True" refuri="class_tileset#class-tileset"><inline classes="std std-ref">TileSet</inline></reference> 配置了碰撞形状，就会被检测到。需要将 <reference internal="True" refid="class-area2d-property-monitoring"><inline classes="std std-ref">monitoring</inline></reference> 设置为 <literal>true</literal> 。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-area2d-signal-body-exited"></target>
            <paragraph classes="classref-signal" ids="class-area2d-signal-body-exited" names="class_area2d_signal_body_exited"><strong>body_exited</strong>(body: <reference internal="True" refuri="class_node2d#class-node2d"><inline classes="std std-ref">Node2D</inline></reference>) <reference internal="True" refid="class-area2d-signal-body-exited"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当接收到的 <literal>body</literal> 离开这个区域时发出的。<literal>body</literal> 可以是一个 <reference internal="True" refuri="class_physicsbody2d#class-physicsbody2d"><inline classes="std std-ref">PhysicsBody2D</inline></reference> 或一个 <reference internal="True" refuri="class_tilemap#class-tilemap"><inline classes="std std-ref">TileMap</inline></reference>。如果 <reference internal="True" refuri="class_tilemap#class-tilemap"><inline classes="std std-ref">TileMap</inline></reference> 的 <reference internal="True" refuri="class_tileset#class-tileset"><inline classes="std std-ref">TileSet</inline></reference> 配置了碰撞形状，就会被检测到。要求 <reference internal="True" refid="class-area2d-property-monitoring"><inline classes="std std-ref">monitoring</inline></reference> 被设置为 <literal>true</literal> 。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-area2d-signal-body-shape-entered"></target>
            <paragraph classes="classref-signal" ids="class-area2d-signal-body-shape-entered" names="class_area2d_signal_body_shape_entered"><strong>body_shape_entered</strong>(body_rid: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, body: <reference internal="True" refuri="class_node2d#class-node2d"><inline classes="std std-ref">Node2D</inline></reference>, body_shape_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, local_shape_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-area2d-signal-body-shape-entered"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当收到的 <literal>body</literal> 的 <reference internal="True" refuri="class_shape2d#class-shape2d"><inline classes="std std-ref">Shape2D</inline></reference> 进入这个区域的形状时发出。<literal>body</literal> 可以是一个 <reference internal="True" refuri="class_physicsbody2d#class-physicsbody2d"><inline classes="std std-ref">PhysicsBody2D</inline></reference> 或一个 <reference internal="True" refuri="class_tilemap#class-tilemap"><inline classes="std std-ref">TileMap</inline></reference>。如果 <reference internal="True" refuri="class_tilemap#class-tilemap"><inline classes="std std-ref">TileMap</inline></reference> 的 <reference internal="True" refuri="class_tileset#class-tileset"><inline classes="std std-ref">TileSet</inline></reference> 配置了碰撞形状，则会被检测到。要求 <reference internal="True" refid="class-area2d-property-monitoring"><inline classes="std std-ref">monitoring</inline></reference> 被设置为 <literal>true</literal> 。</paragraph>
            <paragraph><literal>local_shape_index</literal> 和 <literal>body_shape_index</literal> 分别包含来自这个区域和交互体的交互形状的指数。<literal>body_rid</literal> 包含体的 <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>。这些值可以与 <reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d"><inline classes="std std-ref">PhysicsServer2D</inline></reference> 一起使用。</paragraph>
            <paragraph><strong>从形状索引中获取</strong> <reference internal="True" refuri="class_collisionshape2d#class-collisionshape2d"><inline classes="std std-ref">CollisionShape2D</inline></reference> <strong>节点的例子。</strong></paragraph>
            <container classes="sphinx-tabs" type="tab-element">
                <div aria-label="Tabbed content" role="tablist">
                    <button aria-controls="panel-1-R0RTY3JpcHQ=" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-1-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tab" tabindex="0">GDScript</button>
                </div>
                <div aria-labelledby="tab-1-R0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-1-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve">var body_shape_owner = body.shape_find_owner(body_shape_index)
var body_shape_node = body.shape_owner_get_owner(body_shape_owner)

var local_shape_owner = shape_find_owner(local_shape_index)
var local_shape_node = shape_owner_get_owner(local_shape_owner)</literal_block>
                </div>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-area2d-signal-body-shape-exited"></target>
            <paragraph classes="classref-signal" ids="class-area2d-signal-body-shape-exited" names="class_area2d_signal_body_shape_exited"><strong>body_shape_exited</strong>(body_rid: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, body: <reference internal="True" refuri="class_node2d#class-node2d"><inline classes="std std-ref">Node2D</inline></reference>, body_shape_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, local_shape_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-area2d-signal-body-shape-exited"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当收到的 <literal>body</literal> 的 <reference internal="True" refuri="class_shape2d#class-shape2d"><inline classes="std std-ref">Shape2D</inline></reference> 退出这个区域的形状时发出。<literal>body</literal> 可以是一个 <reference internal="True" refuri="class_physicsbody2d#class-physicsbody2d"><inline classes="std std-ref">PhysicsBody2D</inline></reference> 或一个 <reference internal="True" refuri="class_tilemap#class-tilemap"><inline classes="std std-ref">TileMap</inline></reference>。如果 <reference internal="True" refuri="class_tilemap#class-tilemap"><inline classes="std std-ref">TileMap</inline></reference> 的 <reference internal="True" refuri="class_tileset#class-tileset"><inline classes="std std-ref">TileSet</inline></reference> 配置了碰撞形状，则会被检测到。要求 <reference internal="True" refid="class-area2d-property-monitoring"><inline classes="std std-ref">monitoring</inline></reference> 被设置为 <literal>true</literal> 。</paragraph>
            <paragraph>另请参阅 <reference internal="True" refid="class-area2d-signal-body-shape-entered"><inline classes="std std-ref">body_shape_entered</inline></reference>。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="枚举">
            <title>枚举</title>
            <target refid="enum-area2d-spaceoverride"></target>
            <paragraph classes="classref-enumeration" ids="enum-area2d-spaceoverride" names="enum_area2d_spaceoverride">enum <strong>SpaceOverride</strong>: <reference internal="True" refid="enum-area2d-spaceoverride"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-area2d-constant-space-override-disabled"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-area2d-constant-space-override-disabled" names="class_area2d_constant_space_override_disabled"><reference internal="True" refid="enum-area2d-spaceoverride"><inline classes="std std-ref">SpaceOverride</inline></reference> <strong>SPACE_OVERRIDE_DISABLED</strong> = <literal>0</literal></paragraph>
            <paragraph>该区域不影响重力/阻尼。</paragraph>
            <target refid="class-area2d-constant-space-override-combine"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-area2d-constant-space-override-combine" names="class_area2d_constant_space_override_combine"><reference internal="True" refid="enum-area2d-spaceoverride"><inline classes="std std-ref">SpaceOverride</inline></reference> <strong>SPACE_OVERRIDE_COMBINE</strong> = <literal>1</literal></paragraph>
            <paragraph>该区域将其重力/阻尼值加到目前已经计算出的结果上（按 <reference internal="True" refid="class-area2d-property-priority"><inline classes="std std-ref">priority</inline></reference> 顺序）。</paragraph>
            <target refid="class-area2d-constant-space-override-combine-replace"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-area2d-constant-space-override-combine-replace" names="class_area2d_constant_space_override_combine_replace"><reference internal="True" refid="enum-area2d-spaceoverride"><inline classes="std std-ref">SpaceOverride</inline></reference> <strong>SPACE_OVERRIDE_COMBINE_REPLACE</strong> = <literal>2</literal></paragraph>
            <paragraph>该区域将其重力/阻尼值加到目前已经计算出的结果上（按 <reference internal="True" refid="class-area2d-property-priority"><inline classes="std std-ref">priority</inline></reference> 顺序），将忽略任何较低优先级的区域。</paragraph>
            <target refid="class-area2d-constant-space-override-replace"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-area2d-constant-space-override-replace" names="class_area2d_constant_space_override_replace"><reference internal="True" refid="enum-area2d-spaceoverride"><inline classes="std std-ref">SpaceOverride</inline></reference> <strong>SPACE_OVERRIDE_REPLACE</strong> = <literal>3</literal></paragraph>
            <paragraph>该区域将替换所有重力/阻尼，甚至是默认值，将忽略任何较低优先级的区域。</paragraph>
            <target refid="class-area2d-constant-space-override-replace-combine"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-area2d-constant-space-override-replace-combine" names="class_area2d_constant_space_override_replace_combine"><reference internal="True" refid="enum-area2d-spaceoverride"><inline classes="std std-ref">SpaceOverride</inline></reference> <strong>SPACE_OVERRIDE_REPLACE_COMBINE</strong> = <literal>4</literal></paragraph>
            <paragraph>该区域将替换目前已经计算出的任何重力/阻尼（按 <reference internal="True" refid="class-area2d-property-priority"><inline classes="std std-ref">priority</inline></reference> 顺序），但仍将继续计算其余区域。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id7" names="属性说明">
            <title>属性说明</title>
            <target refid="class-area2d-property-angular-damp"></target>
            <paragraph classes="classref-property" ids="class-area2d-property-angular-damp" names="class_area2d_property_angular_damp"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>angular_damp</strong> = <literal>1.0</literal> <reference internal="True" refid="class-area2d-property-angular-damp"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_angular_damp</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_angular_damp</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>物体在此区域停止旋转的速度。代表每秒损失的角速度。</paragraph>
            <paragraph>关于阻尼的更多细节见 <reference internal="True" refuri="class_projectsettings#class-projectsettings-property-physics-2d-default-angular-damp"><inline classes="std std-ref">ProjectSettings.physics/2d/default_angular_damp</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-area2d-property-angular-damp-space-override"></target>
            <paragraph classes="classref-property" ids="class-area2d-property-angular-damp-space-override" names="class_area2d_property_angular_damp_space_override"><reference internal="True" refid="enum-area2d-spaceoverride"><inline classes="std std-ref">SpaceOverride</inline></reference> <strong>angular_damp_space_override</strong> = <literal>0</literal> <reference internal="True" refid="class-area2d-property-angular-damp-space-override"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_angular_damp_space_override_mode</strong>(value: <reference internal="True" refid="enum-area2d-spaceoverride"><inline classes="std std-ref">SpaceOverride</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-area2d-spaceoverride"><inline classes="std std-ref">SpaceOverride</inline></reference> <strong>get_angular_damp_space_override_mode</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>此区域内的角阻尼计算的覆盖模式。有关可能的值，请参阅 <reference internal="True" refid="enum-area2d-spaceoverride"><inline classes="std std-ref">SpaceOverride</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-area2d-property-audio-bus-name"></target>
            <paragraph classes="classref-property" ids="class-area2d-property-audio-bus-name" names="class_area2d_property_audio_bus_name"><reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference> <strong>audio_bus_name</strong> = <literal>&amp;"Master"</literal> <reference internal="True" refid="class-area2d-property-audio-bus-name"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_audio_bus_name</strong>(value: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference> <strong>get_audio_bus_name</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>该区域音频总线的名称。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-area2d-property-audio-bus-override"></target>
            <paragraph classes="classref-property" ids="class-area2d-property-audio-bus-override" names="class_area2d_property_audio_bus_override"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>audio_bus_override</strong> = <literal>false</literal> <reference internal="True" refid="class-area2d-property-audio-bus-override"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_audio_bus_override</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_overriding_audio_bus</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，该区域的音频总线将覆盖默认的音频总线。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-area2d-property-gravity"></target>
            <paragraph classes="classref-property" ids="class-area2d-property-gravity" names="class_area2d_property_gravity"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>gravity</strong> = <literal>980.0</literal> <reference internal="True" refid="class-area2d-property-gravity"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_gravity</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_gravity</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>该区域的重力强度（以像素每平方秒为单位）。这个值是重力向量的倍数。这对于改变重力大小而不改变其方向很有用。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-area2d-property-gravity-direction"></target>
            <paragraph classes="classref-property" ids="class-area2d-property-gravity-direction" names="class_area2d_property_gravity_direction"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>gravity_direction</strong> = <literal>Vector2(0, 1)</literal> <reference internal="True" refid="class-area2d-property-gravity-direction"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_gravity_direction</strong>(value: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>get_gravity_direction</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>该区域的重力向量（未归一化）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-area2d-property-gravity-point"></target>
            <paragraph classes="classref-property" ids="class-area2d-property-gravity-point" names="class_area2d_property_gravity_point"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>gravity_point</strong> = <literal>false</literal> <reference internal="True" refid="class-area2d-property-gravity-point"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_gravity_is_point</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_gravity_a_point</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则从一个点（通过 <reference internal="True" refid="class-area2d-property-gravity-point-center"><inline classes="std std-ref">gravity_point_center</inline></reference> 设置）计算重力。参阅 <reference internal="True" refid="class-area2d-property-gravity-space-override"><inline classes="std std-ref">gravity_space_override</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-area2d-property-gravity-point-center"></target>
            <paragraph classes="classref-property" ids="class-area2d-property-gravity-point-center" names="class_area2d_property_gravity_point_center"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>gravity_point_center</strong> = <literal>Vector2(0, 1)</literal> <reference internal="True" refid="class-area2d-property-gravity-point-center"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_gravity_point_center</strong>(value: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>get_gravity_point_center</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果重力是一个点（参见 <reference internal="True" refid="class-area2d-property-gravity-point"><inline classes="std std-ref">gravity_point</inline></reference>），这将是吸引力点。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-area2d-property-gravity-point-unit-distance"></target>
            <paragraph classes="classref-property" ids="class-area2d-property-gravity-point-unit-distance" names="class_area2d_property_gravity_point_unit_distance"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>gravity_point_unit_distance</strong> = <literal>0.0</literal> <reference internal="True" refid="class-area2d-property-gravity-point-unit-distance"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_gravity_point_unit_distance</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_gravity_point_unit_distance</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>重力强度等于 <reference internal="True" refid="class-area2d-property-gravity"><inline classes="std std-ref">gravity</inline></reference> 的距离。例如，在一个半径为 100 像素、表面重力为 4.0 px/s² 的行星上，将 <reference internal="True" refid="class-area2d-property-gravity"><inline classes="std std-ref">gravity</inline></reference> 设置为 4.0，将单位距离设置为 100.0。重力将根据平方反比定律衰减，因此在该示例中，距离中心 200 像素处的重力将为 1.0 px/s²（距离的两倍，重力的 1/4），距离 50 像素处为 16.0 px/s²（距离的一半，重力的 4 倍），依此类推。</paragraph>
            <paragraph>仅当单位距离为正数时，上述情况才成立。当该属性被设置为 0.0 时，无论距离如何，重力都将保持不变。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-area2d-property-gravity-space-override"></target>
            <paragraph classes="classref-property" ids="class-area2d-property-gravity-space-override" names="class_area2d_property_gravity_space_override"><reference internal="True" refid="enum-area2d-spaceoverride"><inline classes="std std-ref">SpaceOverride</inline></reference> <strong>gravity_space_override</strong> = <literal>0</literal> <reference internal="True" refid="class-area2d-property-gravity-space-override"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_gravity_space_override_mode</strong>(value: <reference internal="True" refid="enum-area2d-spaceoverride"><inline classes="std std-ref">SpaceOverride</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-area2d-spaceoverride"><inline classes="std std-ref">SpaceOverride</inline></reference> <strong>get_gravity_space_override_mode</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>该区域内重力计算的覆盖模式。有关可能的值，请参阅 <reference internal="True" refid="enum-area2d-spaceoverride"><inline classes="std std-ref">SpaceOverride</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-area2d-property-linear-damp"></target>
            <paragraph classes="classref-property" ids="class-area2d-property-linear-damp" names="class_area2d_property_linear_damp"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>linear_damp</strong> = <literal>0.1</literal> <reference internal="True" refid="class-area2d-property-linear-damp"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_linear_damp</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_linear_damp</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>物体在此区域停止运动的速度。代表每秒损失的线速度。</paragraph>
            <paragraph>关于阻尼的更多细节见 <reference internal="True" refuri="class_projectsettings#class-projectsettings-property-physics-2d-default-linear-damp"><inline classes="std std-ref">ProjectSettings.physics/2d/default_linear_damp</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-area2d-property-linear-damp-space-override"></target>
            <paragraph classes="classref-property" ids="class-area2d-property-linear-damp-space-override" names="class_area2d_property_linear_damp_space_override"><reference internal="True" refid="enum-area2d-spaceoverride"><inline classes="std std-ref">SpaceOverride</inline></reference> <strong>linear_damp_space_override</strong> = <literal>0</literal> <reference internal="True" refid="class-area2d-property-linear-damp-space-override"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_linear_damp_space_override_mode</strong>(value: <reference internal="True" refid="enum-area2d-spaceoverride"><inline classes="std std-ref">SpaceOverride</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-area2d-spaceoverride"><inline classes="std std-ref">SpaceOverride</inline></reference> <strong>get_linear_damp_space_override_mode</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>该区域内线性阻尼计算的覆盖模式。可取的值见 <reference internal="True" refid="enum-area2d-spaceoverride"><inline classes="std std-ref">SpaceOverride</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-area2d-property-monitorable"></target>
            <paragraph classes="classref-property" ids="class-area2d-property-monitorable" names="class_area2d_property_monitorable"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>monitorable</strong> = <literal>true</literal> <reference internal="True" refid="class-area2d-property-monitorable"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_monitorable</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_monitorable</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，其他监测区域可以检测到这个区域。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-area2d-property-monitoring"></target>
            <paragraph classes="classref-property" ids="class-area2d-property-monitoring" names="class_area2d_property_monitoring"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>monitoring</strong> = <literal>true</literal> <reference internal="True" refid="class-area2d-property-monitoring"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_monitoring</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_monitoring</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>为 <literal>true</literal> 时，该区域能够检测到进入和退出该区域的实体或区域。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-area2d-property-priority"></target>
            <paragraph classes="classref-property" ids="class-area2d-property-priority" names="class_area2d_property_priority"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>priority</strong> = <literal>0</literal> <reference internal="True" refid="class-area2d-property-priority"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_priority</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_priority</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>该区域的优先级。将优先处理优先级较高的区域。<reference internal="True" refuri="class_world2d#class-world2d"><inline classes="std std-ref">World2D</inline></reference> 的物理始终在所有区域之后处理。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id8" names="方法说明">
            <title>方法说明</title>
            <target refid="class-area2d-method-get-overlapping-areas"></target>
            <paragraph classes="classref-method" ids="class-area2d-method-get-overlapping-areas" names="class_area2d_method_get_overlapping_areas"><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refid="class-area2d"><inline classes="std std-ref">Area2D</inline></reference>] <strong>get_overlapping_areas</strong>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-area2d-method-get-overlapping-areas"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回相交的 <strong>Area2D</strong> 的列表。重叠区域的 <reference internal="True" refuri="class_collisionobject2d#class-collisionobject2d-property-collision-layer"><inline classes="std std-ref">CollisionObject2D.collision_layer</inline></reference> 必须是这个区域 <reference internal="True" refuri="class_collisionobject2d#class-collisionobject2d-property-collision-mask"><inline classes="std std-ref">CollisionObject2D.collision_mask</inline></reference> 的一部分，这样才能被检测到。</paragraph>
            <paragraph>出于性能的考虑（所有碰撞都是一起处理的），这个列表会在物理迭代时进行一次修改，而不是在物体被移动后立即修改。可考虑改用信号。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-area2d-method-get-overlapping-bodies"></target>
            <paragraph classes="classref-method" ids="class-area2d-method-get-overlapping-bodies" names="class_area2d_method_get_overlapping_bodies"><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_node2d#class-node2d"><inline classes="std std-ref">Node2D</inline></reference>] <strong>get_overlapping_bodies</strong>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-area2d-method-get-overlapping-bodies"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回相交的 <reference internal="True" refuri="class_physicsbody2d#class-physicsbody2d"><inline classes="std std-ref">PhysicsBody2D</inline></reference> 和 <reference internal="True" refuri="class_tilemap#class-tilemap"><inline classes="std std-ref">TileMap</inline></reference>。重叠物体的 <reference internal="True" refuri="class_collisionobject2d#class-collisionobject2d-property-collision-layer"><inline classes="std std-ref">CollisionObject2D.collision_layer</inline></reference> 必须是该区域 <reference internal="True" refuri="class_collisionobject2d#class-collisionobject2d-property-collision-mask"><inline classes="std std-ref">CollisionObject2D.collision_mask</inline></reference> 的一部分，才能被检测到。</paragraph>
            <paragraph>出于性能原因（所有碰撞都是一起处理的），这个列表只会在每次物理迭代时发生一次更改，不会在对象移动后立即更改。请考虑使用信号。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-area2d-method-has-overlapping-areas"></target>
            <paragraph classes="classref-method" ids="class-area2d-method-has-overlapping-areas" names="class_area2d_method_has_overlapping_areas"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>has_overlapping_areas</strong>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-area2d-method-has-overlapping-areas"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果与其他 <strong>Area2D</strong> 相交，则返回 <literal>true</literal>，否则返回 <literal>false</literal>。重叠区域的 <reference internal="True" refuri="class_collisionobject2d#class-collisionobject2d-property-collision-layer"><inline classes="std std-ref">CollisionObject2D.collision_layer</inline></reference> 必须是该区域 <reference internal="True" refuri="class_collisionobject2d#class-collisionobject2d-property-collision-mask"><inline classes="std std-ref">CollisionObject2D.collision_mask</inline></reference> 的一部分，才能被检测到。</paragraph>
            <paragraph>出于性能原因（所有碰撞都是一起处理的），重叠区域的列表只会在每次物理迭代时发生一次更改，不会在对象移动后立即更改。请考虑使用信号。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-area2d-method-has-overlapping-bodies"></target>
            <paragraph classes="classref-method" ids="class-area2d-method-has-overlapping-bodies" names="class_area2d_method_has_overlapping_bodies"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>has_overlapping_bodies</strong>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-area2d-method-has-overlapping-bodies"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果与其他 <reference internal="True" refuri="class_physicsbody2d#class-physicsbody2d"><inline classes="std std-ref">PhysicsBody2D</inline></reference> 或 <reference internal="True" refuri="class_tilemap#class-tilemap"><inline classes="std std-ref">TileMap</inline></reference> 相交，则返回 <literal>true</literal>，否则返回 <literal>false</literal>。重叠物体的 <reference internal="True" refuri="class_collisionobject2d#class-collisionobject2d-property-collision-layer"><inline classes="std std-ref">CollisionObject2D.collision_layer</inline></reference> 必须是该区域 <reference internal="True" refuri="class_collisionobject2d#class-collisionobject2d-property-collision-mask"><inline classes="std std-ref">CollisionObject2D.collision_mask</inline></reference> 的一部分，才能被检测到。</paragraph>
            <paragraph>出于性能原因（所有碰撞都是一起处理的），重叠物体的列表只会在每次物理迭代时发生一次更改，不会在对象移动后立即更改。请考虑使用信号。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-area2d-method-overlaps-area"></target>
            <paragraph classes="classref-method" ids="class-area2d-method-overlaps-area" names="class_area2d_method_overlaps_area"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>overlaps_area</strong>(area: <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-area2d-method-overlaps-area"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果给定的 <strong>Area2D</strong> 与此 <strong>Area2D</strong> 相交或重叠，则返回 <literal>true</literal>，否则返回 <literal>false</literal>。</paragraph>
            <paragraph><strong>注意：</strong>测试结果不反映对象移动后的即时状态。出于性能原因，重叠列表每帧只会在物理迭代前更新一次。请考虑使用信号。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-area2d-method-overlaps-body"></target>
            <paragraph classes="classref-method" ids="class-area2d-method-overlaps-body" names="class_area2d_method_overlaps_body"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>overlaps_body</strong>(body: <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-area2d-method-overlaps-body"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果给定的物理物体与此 <strong>Area2D</strong> 相交或重叠，则返回 <literal>true</literal>，否则返回 <literal>false</literal>。</paragraph>
            <paragraph><strong>注意：</strong>测试结果不反映对象移动后的即时状态。出于性能原因，重叠列表每帧只会在物理迭代前更新一次。请考虑使用信号。</paragraph>
            <paragraph>参数 <literal>body</literal> 可以是 <reference internal="True" refuri="class_physicsbody2d#class-physicsbody2d"><inline classes="std std-ref">PhysicsBody2D</inline></reference> 实例，也可以是 <reference internal="True" refuri="class_tilemap#class-tilemap"><inline classes="std std-ref">TileMap</inline></reference> 实例。TileMap 虽然不是物理物体，但会把图块的碰撞形状注册为虚拟物理物体。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效运算符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列位标志构成位掩码的整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

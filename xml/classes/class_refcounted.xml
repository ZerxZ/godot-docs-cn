<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_refcounted.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/RefCounted.xml.</comment>
    <target refid="class-refcounted"></target>
    <section ids="refcounted class-refcounted" names="refcounted class_refcounted">
        <title>RefCounted</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph><strong>派生：</strong> <reference internal="True" refuri="class_aescontext#class-aescontext"><inline classes="std std-ref">AESContext</inline></reference>, <reference internal="True" refuri="class_astar2d#class-astar2d"><inline classes="std std-ref">AStar2D</inline></reference>, <reference internal="True" refuri="class_astar3d#class-astar3d"><inline classes="std std-ref">AStar3D</inline></reference>, <reference internal="True" refuri="class_astargrid2d#class-astargrid2d"><inline classes="std std-ref">AStarGrid2D</inline></reference>, <reference internal="True" refuri="class_audioeffectinstance#class-audioeffectinstance"><inline classes="std std-ref">AudioEffectInstance</inline></reference>, <reference internal="True" refuri="class_audiostreamplayback#class-audiostreamplayback"><inline classes="std std-ref">AudioStreamPlayback</inline></reference>, <reference internal="True" refuri="class_camerafeed#class-camerafeed"><inline classes="std std-ref">CameraFeed</inline></reference>, <reference internal="True" refuri="class_charfxtransform#class-charfxtransform"><inline classes="std std-ref">CharFXTransform</inline></reference>, <reference internal="True" refuri="class_configfile#class-configfile"><inline classes="std std-ref">ConfigFile</inline></reference>, <reference internal="True" refuri="class_crypto#class-crypto"><inline classes="std std-ref">Crypto</inline></reference>, <reference internal="True" refuri="class_diraccess#class-diraccess"><inline classes="std std-ref">DirAccess</inline></reference>, <reference internal="True" refuri="class_dtlsserver#class-dtlsserver"><inline classes="std std-ref">DTLSServer</inline></reference>, <reference internal="True" refuri="class_editordebuggerplugin#class-editordebuggerplugin"><inline classes="std std-ref">EditorDebuggerPlugin</inline></reference>, <reference internal="True" refuri="class_editordebuggersession#class-editordebuggersession"><inline classes="std std-ref">EditorDebuggerSession</inline></reference>, <reference internal="True" refuri="class_editorexportplatform#class-editorexportplatform"><inline classes="std std-ref">EditorExportPlatform</inline></reference>, <reference internal="True" refuri="class_editorexportplugin#class-editorexportplugin"><inline classes="std std-ref">EditorExportPlugin</inline></reference>, <reference internal="True" refuri="class_editorfeatureprofile#class-editorfeatureprofile"><inline classes="std std-ref">EditorFeatureProfile</inline></reference>, <reference internal="True" refuri="class_editorfilesystemimportformatsupportquery#class-editorfilesystemimportformatsupportquery"><inline classes="std std-ref">EditorFileSystemImportFormatSupportQuery</inline></reference>, <reference internal="True" refuri="class_editorinspectorplugin#class-editorinspectorplugin"><inline classes="std std-ref">EditorInspectorPlugin</inline></reference>, <reference internal="True" refuri="class_editorresourceconversionplugin#class-editorresourceconversionplugin"><inline classes="std std-ref">EditorResourceConversionPlugin</inline></reference>, <reference internal="True" refuri="class_editorresourcepreviewgenerator#class-editorresourcepreviewgenerator"><inline classes="std std-ref">EditorResourcePreviewGenerator</inline></reference>, <reference internal="True" refuri="class_editorresourcetooltipplugin#class-editorresourcetooltipplugin"><inline classes="std std-ref">EditorResourceTooltipPlugin</inline></reference>, <reference internal="True" refuri="class_editorsceneformatimporter#class-editorsceneformatimporter"><inline classes="std std-ref">EditorSceneFormatImporter</inline></reference>, <reference internal="True" refuri="class_editorscenepostimport#class-editorscenepostimport"><inline classes="std std-ref">EditorScenePostImport</inline></reference>, <reference internal="True" refuri="class_editorscenepostimportplugin#class-editorscenepostimportplugin"><inline classes="std std-ref">EditorScenePostImportPlugin</inline></reference>, <reference internal="True" refuri="class_editorscript#class-editorscript"><inline classes="std std-ref">EditorScript</inline></reference>, <reference internal="True" refuri="class_editortranslationparserplugin#class-editortranslationparserplugin"><inline classes="std std-ref">EditorTranslationParserPlugin</inline></reference>, <reference internal="True" refuri="class_encodedobjectasid#class-encodedobjectasid"><inline classes="std std-ref">EncodedObjectAsID</inline></reference>, <reference internal="True" refuri="class_enetconnection#class-enetconnection"><inline classes="std std-ref">ENetConnection</inline></reference>, <reference internal="True" refuri="class_engineprofiler#class-engineprofiler"><inline classes="std std-ref">EngineProfiler</inline></reference>, <reference internal="True" refuri="class_expression#class-expression"><inline classes="std std-ref">Expression</inline></reference>, <reference internal="True" refuri="class_fileaccess#class-fileaccess"><inline classes="std std-ref">FileAccess</inline></reference>, <reference internal="True" refuri="class_hashingcontext#class-hashingcontext"><inline classes="std std-ref">HashingContext</inline></reference>, <reference internal="True" refuri="class_hmaccontext#class-hmaccontext"><inline classes="std std-ref">HMACContext</inline></reference>, <reference internal="True" refuri="class_httpclient#class-httpclient"><inline classes="std std-ref">HTTPClient</inline></reference>, <reference internal="True" refuri="class_imageformatloader#class-imageformatloader"><inline classes="std std-ref">ImageFormatLoader</inline></reference>, <reference internal="True" refuri="class_javaclass#class-javaclass"><inline classes="std std-ref">JavaClass</inline></reference>, <reference internal="True" refuri="class_javascriptobject#class-javascriptobject"><inline classes="std std-ref">JavaScriptObject</inline></reference>, <reference internal="True" refuri="class_kinematiccollision2d#class-kinematiccollision2d"><inline classes="std std-ref">KinematicCollision2D</inline></reference>, <reference internal="True" refuri="class_kinematiccollision3d#class-kinematiccollision3d"><inline classes="std std-ref">KinematicCollision3D</inline></reference>, <reference internal="True" refuri="class_lightmapper#class-lightmapper"><inline classes="std std-ref">Lightmapper</inline></reference>, <reference internal="True" refuri="class_meshconvexdecompositionsettings#class-meshconvexdecompositionsettings"><inline classes="std std-ref">MeshConvexDecompositionSettings</inline></reference>, <reference internal="True" refuri="class_meshdatatool#class-meshdatatool"><inline classes="std std-ref">MeshDataTool</inline></reference>, <reference internal="True" refuri="class_multiplayerapi#class-multiplayerapi"><inline classes="std std-ref">MultiplayerAPI</inline></reference>, <reference internal="True" refuri="class_mutex#class-mutex"><inline classes="std std-ref">Mutex</inline></reference>, <reference internal="True" refuri="class_navigationpathqueryparameters2d#class-navigationpathqueryparameters2d"><inline classes="std std-ref">NavigationPathQueryParameters2D</inline></reference>, <reference internal="True" refuri="class_navigationpathqueryparameters3d#class-navigationpathqueryparameters3d"><inline classes="std std-ref">NavigationPathQueryParameters3D</inline></reference>, <reference internal="True" refuri="class_navigationpathqueryresult2d#class-navigationpathqueryresult2d"><inline classes="std std-ref">NavigationPathQueryResult2D</inline></reference>, <reference internal="True" refuri="class_navigationpathqueryresult3d#class-navigationpathqueryresult3d"><inline classes="std std-ref">NavigationPathQueryResult3D</inline></reference>, <reference internal="True" refuri="class_node3dgizmo#class-node3dgizmo"><inline classes="std std-ref">Node3DGizmo</inline></reference>, <reference internal="True" refuri="class_oggpacketsequenceplayback#class-oggpacketsequenceplayback"><inline classes="std std-ref">OggPacketSequencePlayback</inline></reference>, <reference internal="True" refuri="class_openxrapiextension#class-openxrapiextension"><inline classes="std std-ref">OpenXRAPIExtension</inline></reference>, <reference internal="True" refuri="class_packeddatacontainerref#class-packeddatacontainerref"><inline classes="std std-ref">PackedDataContainerRef</inline></reference>, <reference internal="True" refuri="class_packetpeer#class-packetpeer"><inline classes="std std-ref">PacketPeer</inline></reference>, <reference internal="True" refuri="class_pckpacker#class-pckpacker"><inline classes="std std-ref">PCKPacker</inline></reference>, <reference internal="True" refuri="class_physicspointqueryparameters2d#class-physicspointqueryparameters2d"><inline classes="std std-ref">PhysicsPointQueryParameters2D</inline></reference>, <reference internal="True" refuri="class_physicspointqueryparameters3d#class-physicspointqueryparameters3d"><inline classes="std std-ref">PhysicsPointQueryParameters3D</inline></reference>, <reference internal="True" refuri="class_physicsrayqueryparameters2d#class-physicsrayqueryparameters2d"><inline classes="std std-ref">PhysicsRayQueryParameters2D</inline></reference>, <reference internal="True" refuri="class_physicsrayqueryparameters3d#class-physicsrayqueryparameters3d"><inline classes="std std-ref">PhysicsRayQueryParameters3D</inline></reference>, <reference internal="True" refuri="class_physicsshapequeryparameters2d#class-physicsshapequeryparameters2d"><inline classes="std std-ref">PhysicsShapeQueryParameters2D</inline></reference>, <reference internal="True" refuri="class_physicsshapequeryparameters3d#class-physicsshapequeryparameters3d"><inline classes="std std-ref">PhysicsShapeQueryParameters3D</inline></reference>, <reference internal="True" refuri="class_physicstestmotionparameters2d#class-physicstestmotionparameters2d"><inline classes="std std-ref">PhysicsTestMotionParameters2D</inline></reference>, <reference internal="True" refuri="class_physicstestmotionparameters3d#class-physicstestmotionparameters3d"><inline classes="std std-ref">PhysicsTestMotionParameters3D</inline></reference>, <reference internal="True" refuri="class_physicstestmotionresult2d#class-physicstestmotionresult2d"><inline classes="std std-ref">PhysicsTestMotionResult2D</inline></reference>, <reference internal="True" refuri="class_physicstestmotionresult3d#class-physicstestmotionresult3d"><inline classes="std std-ref">PhysicsTestMotionResult3D</inline></reference>, <reference internal="True" refuri="class_randomnumbergenerator#class-randomnumbergenerator"><inline classes="std std-ref">RandomNumberGenerator</inline></reference>, <reference internal="True" refuri="class_rdattachmentformat#class-rdattachmentformat"><inline classes="std std-ref">RDAttachmentFormat</inline></reference>, <reference internal="True" refuri="class_rdframebufferpass#class-rdframebufferpass"><inline classes="std std-ref">RDFramebufferPass</inline></reference>, <reference internal="True" refuri="class_rdpipelinecolorblendstate#class-rdpipelinecolorblendstate"><inline classes="std std-ref">RDPipelineColorBlendState</inline></reference>, <reference internal="True" refuri="class_rdpipelinecolorblendstateattachment#class-rdpipelinecolorblendstateattachment"><inline classes="std std-ref">RDPipelineColorBlendStateAttachment</inline></reference>, <reference internal="True" refuri="class_rdpipelinedepthstencilstate#class-rdpipelinedepthstencilstate"><inline classes="std std-ref">RDPipelineDepthStencilState</inline></reference>, <reference internal="True" refuri="class_rdpipelinemultisamplestate#class-rdpipelinemultisamplestate"><inline classes="std std-ref">RDPipelineMultisampleState</inline></reference>, <reference internal="True" refuri="class_rdpipelinerasterizationstate#class-rdpipelinerasterizationstate"><inline classes="std std-ref">RDPipelineRasterizationState</inline></reference>, <reference internal="True" refuri="class_rdpipelinespecializationconstant#class-rdpipelinespecializationconstant"><inline classes="std std-ref">RDPipelineSpecializationConstant</inline></reference>, <reference internal="True" refuri="class_rdsamplerstate#class-rdsamplerstate"><inline classes="std std-ref">RDSamplerState</inline></reference>, <reference internal="True" refuri="class_rdshadersource#class-rdshadersource"><inline classes="std std-ref">RDShaderSource</inline></reference>, <reference internal="True" refuri="class_rdtextureformat#class-rdtextureformat"><inline classes="std std-ref">RDTextureFormat</inline></reference>, <reference internal="True" refuri="class_rdtextureview#class-rdtextureview"><inline classes="std std-ref">RDTextureView</inline></reference>, <reference internal="True" refuri="class_rduniform#class-rduniform"><inline classes="std std-ref">RDUniform</inline></reference>, <reference internal="True" refuri="class_rdvertexattribute#class-rdvertexattribute"><inline classes="std std-ref">RDVertexAttribute</inline></reference>, <reference internal="True" refuri="class_regex#class-regex"><inline classes="std std-ref">RegEx</inline></reference>, <reference internal="True" refuri="class_regexmatch#class-regexmatch"><inline classes="std std-ref">RegExMatch</inline></reference>, <reference internal="True" refuri="class_renderscenebuffers#class-renderscenebuffers"><inline classes="std std-ref">RenderSceneBuffers</inline></reference>, <reference internal="True" refuri="class_renderscenebuffersconfiguration#class-renderscenebuffersconfiguration"><inline classes="std std-ref">RenderSceneBuffersConfiguration</inline></reference>, <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference>, <reference internal="True" refuri="class_resourceformatloader#class-resourceformatloader"><inline classes="std std-ref">ResourceFormatLoader</inline></reference>, <reference internal="True" refuri="class_resourceformatsaver#class-resourceformatsaver"><inline classes="std std-ref">ResourceFormatSaver</inline></reference>, <reference internal="True" refuri="class_resourceimporter#class-resourceimporter"><inline classes="std std-ref">ResourceImporter</inline></reference>, <reference internal="True" refuri="class_scenestate#class-scenestate"><inline classes="std std-ref">SceneState</inline></reference>, <reference internal="True" refuri="class_scenetreetimer#class-scenetreetimer"><inline classes="std std-ref">SceneTreeTimer</inline></reference>, <reference internal="True" refuri="class_semaphore#class-semaphore"><inline classes="std std-ref">Semaphore</inline></reference>, <reference internal="True" refuri="class_skinreference#class-skinreference"><inline classes="std std-ref">SkinReference</inline></reference>, <reference internal="True" refuri="class_streampeer#class-streampeer"><inline classes="std std-ref">StreamPeer</inline></reference>, <reference internal="True" refuri="class_surfacetool#class-surfacetool"><inline classes="std std-ref">SurfaceTool</inline></reference>, <reference internal="True" refuri="class_tcpserver#class-tcpserver"><inline classes="std std-ref">TCPServer</inline></reference>, <reference internal="True" refuri="class_textline#class-textline"><inline classes="std std-ref">TextLine</inline></reference>, <reference internal="True" refuri="class_textparagraph#class-textparagraph"><inline classes="std std-ref">TextParagraph</inline></reference>, <reference internal="True" refuri="class_textserver#class-textserver"><inline classes="std std-ref">TextServer</inline></reference>, <reference internal="True" refuri="class_thread#class-thread"><inline classes="std std-ref">Thread</inline></reference>, <reference internal="True" refuri="class_tlsoptions#class-tlsoptions"><inline classes="std std-ref">TLSOptions</inline></reference>, <reference internal="True" refuri="class_trianglemesh#class-trianglemesh"><inline classes="std std-ref">TriangleMesh</inline></reference>, <reference internal="True" refuri="class_tween#class-tween"><inline classes="std std-ref">Tween</inline></reference>, <reference internal="True" refuri="class_tweener#class-tweener"><inline classes="std std-ref">Tweener</inline></reference>, <reference internal="True" refuri="class_udpserver#class-udpserver"><inline classes="std std-ref">UDPServer</inline></reference>, <reference internal="True" refuri="class_upnp#class-upnp"><inline classes="std std-ref">UPNP</inline></reference>, <reference internal="True" refuri="class_upnpdevice#class-upnpdevice"><inline classes="std std-ref">UPNPDevice</inline></reference>, <reference internal="True" refuri="class_weakref#class-weakref"><inline classes="std std-ref">WeakRef</inline></reference>, <reference internal="True" refuri="class_webrtcpeerconnection#class-webrtcpeerconnection"><inline classes="std std-ref">WebRTCPeerConnection</inline></reference>, <reference internal="True" refuri="class_xmlparser#class-xmlparser"><inline classes="std std-ref">XMLParser</inline></reference>, <reference internal="True" refuri="class_xrinterface#class-xrinterface"><inline classes="std std-ref">XRInterface</inline></reference>, <reference internal="True" refuri="class_xrpose#class-xrpose"><inline classes="std std-ref">XRPose</inline></reference>, <reference internal="True" refuri="class_xrpositionaltracker#class-xrpositionaltracker"><inline classes="std std-ref">XRPositionalTracker</inline></reference>, <reference internal="True" refuri="class_zippacker#class-zippacker"><inline classes="std std-ref">ZIPPacker</inline></reference>, <reference internal="True" refuri="class_zipreader#class-zipreader"><inline classes="std std-ref">ZIPReader</inline></reference></paragraph>
        <paragraph>引用计数对象的基类。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>所有保持引用计数的对象的基类。<reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> 和许多其他辅助对象继承该类。</paragraph>
            <paragraph>与其他 <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference> 类型不同，<strong>RefCounted</strong> 保留一个内部引用计数器，以便它们在不再使用时自动释放，并且仅在那时才会如此。因此，<strong>RefCounted</strong> 不需要使用 <reference internal="True" refuri="class_object#class-object-method-free"><inline classes="std std-ref">Object.free</inline></reference> 手动释放。</paragraph>
            <paragraph>陷入循环引用的 <strong>RefCounted</strong> 实例将<strong>不会</strong>自动释放。例如，如果节点持有对实例 <literal>A</literal> 的引用，而该实例直接或间接持有对 <literal>A</literal> 的引用，则 <literal>A</literal> 的引用计数将为 2。该节点的销毁将使 <literal>A</literal> 悬空，引用计数为 1，并且会出现内存泄漏。为了防止这种情况，可以使用 <reference internal="True" refuri="class_@globalscope#class-globalscope-method-weakref"><inline classes="std std-ref">@GlobalScope.weakref</inline></reference> 将循环中的引用之一设置为弱引用。</paragraph>
            <paragraph>在绝大多数用例中，只需实例化和使用 <strong>RefCounted</strong> 派生类型即可。该类中提供的方法仅适用于高级用户，如果使用不当可能会导致问题。</paragraph>
            <paragraph><strong>注意：</strong>在 C# 中，引用计数的对象在不再使用后不会立即被释放。相反，垃圾收集将定期运行，并释放不再使用的引用计数对象。这意味着未使用的引用计数对象会在被移除之前停留一段时间。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference internal="True" refuri="../tutorials/best_practices/node_alternatives"><inline classes="doc">何时以及如何避免为任何事情使用节点</inline></reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="25"></colspec>
                    <colspec colwidth="93"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-refcounted-method-get-reference-count"><inline classes="std std-ref">get_reference_count</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-refcounted-method-init-ref"><inline classes="std std-ref">init_ref</inline></reference> <strong>(</strong> <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-refcounted-method-reference"><inline classes="std std-ref">reference</inline></reference> <strong>(</strong> <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-refcounted-method-unreference"><inline classes="std std-ref">unreference</inline></reference> <strong>(</strong> <strong>)</strong></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="方法说明">
            <title>方法说明</title>
            <target refid="class-refcounted-method-get-reference-count"></target>
            <paragraph classes="classref-method" ids="class-refcounted-method-get-reference-count" names="class_refcounted_method_get_reference_count"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_reference_count</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回当前的引用计数。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-refcounted-method-init-ref"></target>
            <paragraph classes="classref-method" ids="class-refcounted-method-init-ref" names="class_refcounted_method_init_ref"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>init_ref</strong> <strong>(</strong> <strong>)</strong></paragraph>
            <paragraph>初始化内部引用计数器。只有在你真的知道你在做什么的时候才使用这个。</paragraph>
            <paragraph>返回初始化是否成功。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-refcounted-method-reference"></target>
            <paragraph classes="classref-method" ids="class-refcounted-method-reference" names="class_refcounted_method_reference"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>reference</strong> <strong>(</strong> <strong>)</strong></paragraph>
            <paragraph>内部引用增量计数器。只有在你真的知道你在做什么的时候才使用这个。</paragraph>
            <paragraph>如果增量成功，返回 <literal>true</literal>，否则返回 <literal>false</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-refcounted-method-unreference"></target>
            <paragraph classes="classref-method" ids="class-refcounted-method-unreference" names="class_refcounted_method_unreference"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>unreference</strong> <strong>(</strong> <strong>)</strong></paragraph>
            <paragraph>内部引用减量计数器。只有在你真的知道你在做什么的时候才使用这个。</paragraph>
            <paragraph>如果该对象在递减后应被释放，则返回 <literal>true</literal>，否则返回 <literal>false</literal>。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，所以可以直接使用类名调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

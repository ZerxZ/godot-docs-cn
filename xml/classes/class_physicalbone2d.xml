<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_physicalbone2d.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <meta content="ragdoll" name="keywords">
    </meta>
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/PhysicalBone2D.xml.</comment>
    <target refid="class-physicalbone2d"></target>
    <section ids="physicalbone2d class-physicalbone2d" names="physicalbone2d class_physicalbone2d">
        <title>PhysicalBone2D</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_rigidbody2d#class-rigidbody2d"><inline classes="std std-ref">RigidBody2D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_physicsbody2d#class-physicsbody2d"><inline classes="std std-ref">PhysicsBody2D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_collisionobject2d#class-collisionobject2d"><inline classes="std std-ref">CollisionObject2D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node2d#class-node2d"><inline classes="std std-ref">Node2D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_canvasitem#class-canvasitem"><inline classes="std std-ref">CanvasItem</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>派生自 <reference internal="True" refuri="class_rigidbody2d#class-rigidbody2d"><inline classes="std std-ref">RigidBody2D</inline></reference> 的节点，用于让 <reference internal="True" refuri="class_skeleton2d#class-skeleton2d"><inline classes="std std-ref">Skeleton2D</inline></reference> 中的 <reference internal="True" refuri="class_bone2d#class-bone2d"><inline classes="std std-ref">Bone2D</inline></reference> 对物理作出反应。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph><strong>PhysicalBone2D</strong> 节点基于 <reference internal="True" refuri="class_rigidbody2d#class-rigidbody2d"><inline classes="std std-ref">RigidBody2D</inline></reference>，可以用来使 <reference internal="True" refuri="class_skeleton2d#class-skeleton2d"><inline classes="std std-ref">Skeleton2D</inline></reference> 中的 <reference internal="True" refuri="class_bone2d#class-bone2d"><inline classes="std std-ref">Bone2D</inline></reference> 节点对物理作出反应。</paragraph>
            <paragraph><strong>注意：</strong>为了让 <reference internal="True" refuri="class_bone2d#class-bone2d"><inline classes="std std-ref">Bone2D</inline></reference> 节点在视觉上跟随 <strong>PhysicalBone2D</strong> 节点，请在父级 <reference internal="True" refuri="class_skeleton2d#class-skeleton2d"><inline classes="std std-ref">Skeleton2D</inline></reference> 节点上使用 <reference internal="True" refuri="class_skeletonmodification2dphysicalbones#class-skeletonmodification2dphysicalbones"><inline classes="std std-ref">SkeletonModification2DPhysicalBones</inline></reference> 修改。</paragraph>
            <paragraph><strong>注意：</strong><strong>PhysicalBone2D</strong> 节点不会自动创建 <reference internal="True" refuri="class_joint2d#class-joint2d"><inline classes="std std-ref">Joint2D</inline></reference> 节点来让 <strong>PhysicalBone2D</strong> 节点保持在一起。你需要手动创建这些节点。大多数情况下，你想要使用的都是 <reference internal="True" refuri="class_pinjoint2d#class-pinjoint2d"><inline classes="std std-ref">PinJoint2D</inline></reference> 节点。创建 <strong>PhysicalBone2D</strong> 子节点后会自动配置 <reference internal="True" refuri="class_joint2d#class-joint2d"><inline classes="std std-ref">Joint2D</inline></reference> 节点。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="33"></colspec>
                    <colspec colwidth="95"></colspec>
                    <colspec colwidth="18"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicalbone2d-property-auto-configure-joint"><inline classes="std std-ref">auto_configure_joint</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicalbone2d-property-bone2d-index"><inline classes="std std-ref">bone2d_index</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>-1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicalbone2d-property-bone2d-nodepath"><inline classes="std std-ref">bone2d_nodepath</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>NodePath("")</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicalbone2d-property-follow-bone-when-simulating"><inline classes="std std-ref">follow_bone_when_simulating</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicalbone2d-property-simulate-physics"><inline classes="std std-ref">simulate_physics</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="31"></colspec>
                    <colspec colwidth="95"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_joint2d#class-joint2d"><inline classes="std std-ref">Joint2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicalbone2d-method-get-joint"><inline classes="std std-ref">get_joint</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicalbone2d-method-is-simulating-physics"><inline classes="std std-ref">is_simulating_physics</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="属性说明">
            <title>属性说明</title>
            <target refid="class-physicalbone2d-property-auto-configure-joint"></target>
            <paragraph classes="classref-property" ids="class-physicalbone2d-property-auto-configure-joint" names="class_physicalbone2d_property_auto_configure_joint"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>auto_configure_joint</strong> = <literal>true</literal> <reference internal="True" refid="class-physicalbone2d-property-auto-configure-joint"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_auto_configure_joint</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_auto_configure_joint</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，<strong>PhysicalBone2D</strong> 节点会自动配置第一个 <reference internal="True" refuri="class_joint2d#class-joint2d"><inline classes="std std-ref">Joint2D</inline></reference> 子节点。自动配置仅限于设置节点属性和定位该 <reference internal="True" refuri="class_joint2d#class-joint2d"><inline classes="std std-ref">Joint2D</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicalbone2d-property-bone2d-index"></target>
            <paragraph classes="classref-property" ids="class-physicalbone2d-property-bone2d-index" names="class_physicalbone2d_property_bone2d_index"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>bone2d_index</strong> = <literal>-1</literal> <reference internal="True" refid="class-physicalbone2d-property-bone2d-index"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_bone2d_index</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_bone2d_index</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>该 <strong>PhysicalBone2D</strong> 节点所模拟的 <reference internal="True" refuri="class_bone2d#class-bone2d"><inline classes="std std-ref">Bone2D</inline></reference> 节点的索引。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicalbone2d-property-bone2d-nodepath"></target>
            <paragraph classes="classref-property" ids="class-physicalbone2d-property-bone2d-nodepath" names="class_physicalbone2d_property_bone2d_nodepath"><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> <strong>bone2d_nodepath</strong> = <literal>NodePath("")</literal> <reference internal="True" refid="class-physicalbone2d-property-bone2d-nodepath"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_bone2d_nodepath</strong>(value: <reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> <strong>get_bone2d_nodepath</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>该 <strong>PhysicalBone2D</strong> 所模拟的 <reference internal="True" refuri="class_bone2d#class-bone2d"><inline classes="std std-ref">Bone2D</inline></reference> 的 <reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicalbone2d-property-follow-bone-when-simulating"></target>
            <paragraph classes="classref-property" ids="class-physicalbone2d-property-follow-bone-when-simulating" names="class_physicalbone2d_property_follow_bone_when_simulating"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>follow_bone_when_simulating</strong> = <literal>false</literal> <reference internal="True" refid="class-physicalbone2d-property-follow-bone-when-simulating"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_follow_bone_when_simulating</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_follow_bone_when_simulating</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则该 <strong>PhysicalBone2D</strong> 在模拟物理时会保持其绑定的骨骼的变换。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicalbone2d-property-simulate-physics"></target>
            <paragraph classes="classref-property" ids="class-physicalbone2d-property-simulate-physics" names="class_physicalbone2d_property_simulate_physics"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>simulate_physics</strong> = <literal>false</literal> <reference internal="True" refid="class-physicalbone2d-property-simulate-physics"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_simulate_physics</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_simulate_physics</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，<strong>PhysicalBone2D</strong> 将开始使用物理进行模拟。如果为 <literal>false</literal>，<strong>PhysicalBone2D</strong> 将跟随 <reference internal="True" refuri="class_bone2d#class-bone2d"><inline classes="std std-ref">Bone2D</inline></reference> 节点的变换。</paragraph>
            <paragraph><strong>注意：</strong>要使 <reference internal="True" refuri="class_bone2d#class-bone2d"><inline classes="std std-ref">Bone2D</inline></reference> 节点在视觉上跟随 <strong>PhysicalBone2D</strong> 节点，请在具有 <reference internal="True" refuri="class_bone2d#class-bone2d"><inline classes="std std-ref">Bone2D</inline></reference> 节点的 <reference internal="True" refuri="class_skeleton2d#class-skeleton2d"><inline classes="std std-ref">Skeleton2D</inline></reference> 节点上使用一个 <reference internal="True" refuri="class_skeletonmodification2dphysicalbones#class-skeletonmodification2dphysicalbones"><inline classes="std std-ref">SkeletonModification2DPhysicalBones</inline></reference> 修改。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="方法说明">
            <title>方法说明</title>
            <target refid="class-physicalbone2d-method-get-joint"></target>
            <paragraph classes="classref-method" ids="class-physicalbone2d-method-get-joint" names="class_physicalbone2d_method_get_joint"><reference internal="True" refuri="class_joint2d#class-joint2d"><inline classes="std std-ref">Joint2D</inline></reference> <strong>get_joint</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicalbone2d-method-get-joint"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果存在，则返回第一个 <reference internal="True" refuri="class_joint2d#class-joint2d"><inline classes="std std-ref">Joint2D</inline></reference> 子节点。主要是辅助函数，用于简化对 <strong>PhysicalBone2D</strong> 所自动配置的 <reference internal="True" refuri="class_joint2d#class-joint2d"><inline classes="std std-ref">Joint2D</inline></reference> 的获取。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicalbone2d-method-is-simulating-physics"></target>
            <paragraph classes="classref-method" ids="class-physicalbone2d-method-is-simulating-physics" names="class_physicalbone2d_method_is_simulating_physics"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_simulating_physics</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicalbone2d-method-is-simulating-physics"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回一个布尔值，表示 <strong>PhysicalBone2D</strong> 节点是否处于运行状态，正在使用 Godot 2D 物理引擎进行仿真。为 <literal>true</literal> 时，该 PhysicalBone2D 节点正在使用物理。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

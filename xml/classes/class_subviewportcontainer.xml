<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_subviewportcontainer.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/SubViewportContainer.xml.</comment>
    <target refid="class-subviewportcontainer"></target>
    <section ids="subviewportcontainer class-subviewportcontainer" names="subviewportcontainer class_subviewportcontainer">
        <title>SubViewportContainer</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_container#class-container"><inline classes="std std-ref">Container</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_control#class-control"><inline classes="std std-ref">Control</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_canvasitem#class-canvasitem"><inline classes="std std-ref">CanvasItem</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>用于显示 <reference internal="True" refuri="class_subviewport#class-subviewport"><inline classes="std std-ref">SubViewport</inline></reference> 内容的容器。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>显示其 <reference internal="True" refuri="class_subviewport#class-subviewport"><inline classes="std std-ref">SubViewport</inline></reference> 子节点内容的容器。除非启用 <reference internal="True" refid="class-subviewportcontainer-property-stretch"><inline classes="std std-ref">stretch</inline></reference>，否则会使用 <reference internal="True" refuri="class_subviewport#class-subviewport"><inline classes="std std-ref">SubViewport</inline></reference> 的大小作为最小尺寸。</paragraph>
            <paragraph><strong>注意：</strong>更改 <strong>SubViewportContainer</strong> 的 <reference internal="True" refuri="class_control#class-control-property-scale"><inline classes="std std-ref">Control.scale</inline></reference>，将导致其内容出现扭曲。要更改其视觉大小，并且不造成失真，请改为调整节点的边距（如果还不在容器中）。</paragraph>
            <paragraph><strong>注意：</strong>该 <strong>SubViewportContainer</strong> 会将鼠标进入和鼠标退出通知转发到子视口。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="42"></colspec>
                    <colspec colwidth="75"></colspec>
                    <colspec colwidth="69"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_control#enum-control-focusmode"><inline classes="std std-ref">FocusMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph>focus_mode</paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1</literal> (overrides <reference internal="True" refuri="class_control#class-control-property-focus-mode"><inline classes="std std-ref">Control</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-subviewportcontainer-property-stretch"><inline classes="std std-ref">stretch</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-subviewportcontainer-property-stretch-shrink"><inline classes="std std-ref">stretch_shrink</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="25"></colspec>
                    <colspec colwidth="169"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-subviewportcontainer-private-method-propagate-input-event"><inline classes="std std-ref">_propagate_input_event</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_inputevent#class-inputevent"><inline classes="std std-ref">InputEvent</inline></reference> event <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="属性说明">
            <title>属性说明</title>
            <target refid="class-subviewportcontainer-property-stretch"></target>
            <paragraph classes="classref-property" ids="class-subviewportcontainer-property-stretch" names="class_subviewportcontainer_property_stretch"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>stretch</strong> = <literal>false</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_stretch</strong> <strong>(</strong> <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_stretch_enabled</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，子视口将自动调整为该控件的大小。</paragraph>
            <paragraph><strong>注意：</strong>如果为 <literal>true</literal>，则会禁止手动改变其子节点的 <reference internal="True" refuri="class_subviewport#class-subviewport-property-size"><inline classes="std std-ref">SubViewport.size</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-subviewportcontainer-property-stretch-shrink"></target>
            <paragraph classes="classref-property" ids="class-subviewportcontainer-property-stretch-shrink" names="class_subviewportcontainer_property_stretch_shrink"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>stretch_shrink</strong> = <literal>1</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_stretch_shrink</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_stretch_shrink</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>将子视口的有效分辨率除以该值，同时保持比例。可以用来加速渲染。</paragraph>
            <paragraph>例如子视口的大小为 1280×720，当 <reference internal="True" refid="class-subviewportcontainer-property-stretch-shrink"><inline classes="std std-ref">stretch_shrink</inline></reference> 被设置为 <literal>2</literal> 时，将以 640×360 渲染，同时在该容器中占据相同大小。</paragraph>
            <paragraph><strong>注意：</strong><reference internal="True" refid="class-subviewportcontainer-property-stretch"><inline classes="std std-ref">stretch</inline></reference> 必须为 <literal>true</literal>，才能使此属性生效。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="方法说明">
            <title>方法说明</title>
            <target refid="class-subviewportcontainer-private-method-propagate-input-event"></target>
            <paragraph classes="classref-method" ids="class-subviewportcontainer-private-method-propagate-input-event" names="class_subviewportcontainer_private_method__propagate_input_event"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>_propagate_input_event</strong> <strong>(</strong> <reference internal="True" refuri="class_inputevent#class-inputevent"><inline classes="std std-ref">InputEvent</inline></reference> event <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>由用户实现的虚方法。如果它返回 <literal>true</literal>，则 <literal>event</literal> 将被传播到 <reference internal="True" refuri="class_subviewport#class-subviewport"><inline classes="std std-ref">SubViewport</inline></reference> 子级。如果返回 <literal>false</literal>，则传播不会发生。如果未实现该功能，则所有事件都会被传播到子视口。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，所以可以直接使用类名调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

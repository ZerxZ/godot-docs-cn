<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_physicalbone3d.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/PhysicalBone3D.xml.</comment>
    <target refid="class-physicalbone3d"></target>
    <section ids="physicalbone3d class-physicalbone3d" names="physicalbone3d class_physicalbone3d">
        <title>PhysicalBone3D</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_physicsbody3d#class-physicsbody3d"><inline classes="std std-ref">PhysicsBody3D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_collisionobject3d#class-collisionobject3d"><inline classes="std std-ref">CollisionObject3D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node3d#class-node3d"><inline classes="std std-ref">Node3D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>用于让 <reference internal="True" refuri="class_skeleton3d#class-skeleton3d"><inline classes="std std-ref">Skeleton3D</inline></reference> 中的骨骼对物理作出反应的物理体。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph><strong>PhysicalBone3D</strong> 节点是一种能够让 <reference internal="True" refuri="class_skeleton3d#class-skeleton3d"><inline classes="std std-ref">Skeleton3D</inline></reference> 中的骨骼对物理作出反应的物理体。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="49"></colspec>
                    <colspec colwidth="75"></colspec>
                    <colspec colwidth="53"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicalbone3d-property-angular-damp"><inline classes="std std-ref">angular_damp</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-physicalbone3d-dampmode"><inline classes="std std-ref">DampMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicalbone3d-property-angular-damp-mode"><inline classes="std std-ref">angular_damp_mode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicalbone3d-property-angular-velocity"><inline classes="std std-ref">angular_velocity</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Vector3(0, 0, 0)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicalbone3d-property-body-offset"><inline classes="std std-ref">body_offset</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicalbone3d-property-bounce"><inline classes="std std-ref">bounce</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicalbone3d-property-can-sleep"><inline classes="std std-ref">can_sleep</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicalbone3d-property-custom-integrator"><inline classes="std std-ref">custom_integrator</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicalbone3d-property-friction"><inline classes="std std-ref">friction</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicalbone3d-property-gravity-scale"><inline classes="std std-ref">gravity_scale</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicalbone3d-property-joint-offset"><inline classes="std std-ref">joint_offset</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicalbone3d-property-joint-rotation"><inline classes="std std-ref">joint_rotation</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Vector3(0, 0, 0)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-physicalbone3d-jointtype"><inline classes="std std-ref">JointType</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicalbone3d-property-joint-type"><inline classes="std std-ref">joint_type</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicalbone3d-property-linear-damp"><inline classes="std std-ref">linear_damp</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-physicalbone3d-dampmode"><inline classes="std std-ref">DampMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicalbone3d-property-linear-damp-mode"><inline classes="std std-ref">linear_damp_mode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicalbone3d-property-linear-velocity"><inline classes="std std-ref">linear_velocity</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Vector3(0, 0, 0)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicalbone3d-property-mass"><inline classes="std std-ref">mass</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="25"></colspec>
                    <colspec colwidth="173"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicalbone3d-private-method-integrate-forces"><inline classes="std std-ref">_integrate_forces</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_physicsdirectbodystate3d#class-physicsdirectbodystate3d"><inline classes="std std-ref">PhysicsDirectBodyState3D</inline></reference> state <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicalbone3d-method-apply-central-impulse"><inline classes="std std-ref">apply_central_impulse</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> impulse <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicalbone3d-method-apply-impulse"><inline classes="std std-ref">apply_impulse</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> impulse, <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> position=Vector3(0, 0, 0) <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicalbone3d-method-get-bone-id"><inline classes="std std-ref">get_bone_id</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicalbone3d-method-get-simulate-physics"><inline classes="std std-ref">get_simulate_physics</inline></reference> <strong>(</strong> <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicalbone3d-method-is-simulating-physics"><inline classes="std std-ref">is_simulating_physics</inline></reference> <strong>(</strong> <strong>)</strong></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="枚举">
            <title>枚举</title>
            <target refid="enum-physicalbone3d-dampmode"></target>
            <paragraph classes="classref-enumeration" ids="enum-physicalbone3d-dampmode" names="enum_physicalbone3d_dampmode">enum <strong>DampMode</strong>:</paragraph>
            <target refid="class-physicalbone3d-constant-damp-mode-combine"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicalbone3d-constant-damp-mode-combine" names="class_physicalbone3d_constant_damp_mode_combine"><reference internal="True" refid="enum-physicalbone3d-dampmode"><inline classes="std std-ref">DampMode</inline></reference> <strong>DAMP_MODE_COMBINE</strong> = <literal>0</literal></paragraph>
            <paragraph>在这种模式下，物体的阻尼值将被加到区域中设置的任何值或默认值。</paragraph>
            <target refid="class-physicalbone3d-constant-damp-mode-replace"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicalbone3d-constant-damp-mode-replace" names="class_physicalbone3d_constant_damp_mode_replace"><reference internal="True" refid="enum-physicalbone3d-dampmode"><inline classes="std std-ref">DampMode</inline></reference> <strong>DAMP_MODE_REPLACE</strong> = <literal>1</literal></paragraph>
            <paragraph>在这种模式下，物体的阻尼值将替换掉区域中设置的任何值或默认值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-physicalbone3d-jointtype"></target>
            <paragraph classes="classref-enumeration" ids="enum-physicalbone3d-jointtype" names="enum_physicalbone3d_jointtype">enum <strong>JointType</strong>:</paragraph>
            <target refid="class-physicalbone3d-constant-joint-type-none"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicalbone3d-constant-joint-type-none" names="class_physicalbone3d_constant_joint_type_none"><reference internal="True" refid="enum-physicalbone3d-jointtype"><inline classes="std std-ref">JointType</inline></reference> <strong>JOINT_TYPE_NONE</strong> = <literal>0</literal></paragraph>
            <target refid="class-physicalbone3d-constant-joint-type-pin"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicalbone3d-constant-joint-type-pin" names="class_physicalbone3d_constant_joint_type_pin"><reference internal="True" refid="enum-physicalbone3d-jointtype"><inline classes="std std-ref">JointType</inline></reference> <strong>JOINT_TYPE_PIN</strong> = <literal>1</literal></paragraph>
            <target refid="class-physicalbone3d-constant-joint-type-cone"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicalbone3d-constant-joint-type-cone" names="class_physicalbone3d_constant_joint_type_cone"><reference internal="True" refid="enum-physicalbone3d-jointtype"><inline classes="std std-ref">JointType</inline></reference> <strong>JOINT_TYPE_CONE</strong> = <literal>2</literal></paragraph>
            <target refid="class-physicalbone3d-constant-joint-type-hinge"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicalbone3d-constant-joint-type-hinge" names="class_physicalbone3d_constant_joint_type_hinge"><reference internal="True" refid="enum-physicalbone3d-jointtype"><inline classes="std std-ref">JointType</inline></reference> <strong>JOINT_TYPE_HINGE</strong> = <literal>3</literal></paragraph>
            <target refid="class-physicalbone3d-constant-joint-type-slider"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicalbone3d-constant-joint-type-slider" names="class_physicalbone3d_constant_joint_type_slider"><reference internal="True" refid="enum-physicalbone3d-jointtype"><inline classes="std std-ref">JointType</inline></reference> <strong>JOINT_TYPE_SLIDER</strong> = <literal>4</literal></paragraph>
            <target refid="class-physicalbone3d-constant-joint-type-6dof"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicalbone3d-constant-joint-type-6dof" names="class_physicalbone3d_constant_joint_type_6dof"><reference internal="True" refid="enum-physicalbone3d-jointtype"><inline classes="std std-ref">JointType</inline></reference> <strong>JOINT_TYPE_6DOF</strong> = <literal>5</literal></paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="属性说明">
            <title>属性说明</title>
            <target refid="class-physicalbone3d-property-angular-damp"></target>
            <paragraph classes="classref-property" ids="class-physicalbone3d-property-angular-damp" names="class_physicalbone3d_property_angular_damp"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>angular_damp</strong> = <literal>0.0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_angular_damp</strong> <strong>(</strong> <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_angular_damp</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>阻碍物体的旋转。默认情况下，物体将使用 <strong>项目 &gt; 项目设置 &gt; 物理 &gt; 3d</strong> 中的<strong>默认角度阻尼</strong>，或物体所在的 <reference internal="True" refuri="class_area3d#class-area3d"><inline classes="std std-ref">Area3D</inline></reference> 中设置的任何覆盖值。取决于 <reference internal="True" refid="class-physicalbone3d-property-angular-damp-mode"><inline classes="std std-ref">angular_damp_mode</inline></reference>，可以设置 <reference internal="True" refid="class-physicalbone3d-property-angular-damp"><inline classes="std std-ref">angular_damp</inline></reference> 以增加或替换物体的阻尼值。</paragraph>
            <paragraph>有关阻尼的更多详细信息，请参阅 <reference internal="True" refuri="class_projectsettings#class-projectsettings-property-physics-3d-default-angular-damp"><inline classes="std std-ref">ProjectSettings.physics/3d/default_angular_damp</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicalbone3d-property-angular-damp-mode"></target>
            <paragraph classes="classref-property" ids="class-physicalbone3d-property-angular-damp-mode" names="class_physicalbone3d_property_angular_damp_mode"><reference internal="True" refid="enum-physicalbone3d-dampmode"><inline classes="std std-ref">DampMode</inline></reference> <strong>angular_damp_mode</strong> = <literal>0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_angular_damp_mode</strong> <strong>(</strong> <reference internal="True" refid="enum-physicalbone3d-dampmode"><inline classes="std std-ref">DampMode</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-physicalbone3d-dampmode"><inline classes="std std-ref">DampMode</inline></reference> <strong>get_angular_damp_mode</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>定义如何应用 <reference internal="True" refid="class-physicalbone3d-property-angular-damp"><inline classes="std std-ref">angular_damp</inline></reference>。可能的取值见 <reference internal="True" refid="enum-physicalbone3d-dampmode"><inline classes="std std-ref">DampMode</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicalbone3d-property-angular-velocity"></target>
            <paragraph classes="classref-property" ids="class-physicalbone3d-property-angular-velocity" names="class_physicalbone3d_property_angular_velocity"><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> <strong>angular_velocity</strong> = <literal>Vector3(0, 0, 0)</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_angular_velocity</strong> <strong>(</strong> <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> <strong>get_angular_velocity</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>该 PhysicalBone3D 的旋转速度，以每秒<emphasis>弧度</emphasis>为单位。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicalbone3d-property-body-offset"></target>
            <paragraph classes="classref-property" ids="class-physicalbone3d-property-body-offset" names="class_physicalbone3d_property_body_offset"><reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference> <strong>body_offset</strong> = <literal>Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0)</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_body_offset</strong> <strong>(</strong> <reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference> <strong>get_body_offset</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>设置该物体的变换。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicalbone3d-property-bounce"></target>
            <paragraph classes="classref-property" ids="class-physicalbone3d-property-bounce" names="class_physicalbone3d_property_bounce"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>bounce</strong> = <literal>0.0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_bounce</strong> <strong>(</strong> <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_bounce</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>实体的弹性。值的范围从 <literal>0</literal>（无反弹）到 <literal>1</literal>（完全反弹）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicalbone3d-property-can-sleep"></target>
            <paragraph classes="classref-property" ids="class-physicalbone3d-property-can-sleep" names="class_physicalbone3d_property_can_sleep"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>can_sleep</strong> = <literal>true</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_can_sleep</strong> <strong>(</strong> <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_able_to_sleep</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则会在不移动时停用该物体，所以它在被外力唤醒前不会参与模拟。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicalbone3d-property-custom-integrator"></target>
            <paragraph classes="classref-property" ids="class-physicalbone3d-property-custom-integrator" names="class_physicalbone3d_property_custom_integrator"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>custom_integrator</strong> = <literal>false</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_use_custom_integrator</strong> <strong>(</strong> <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_using_custom_integrator</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则该物体的内力积分将被禁用（如重力或空气摩擦）。除了碰撞响应之外，物体将仅根据 <reference internal="True" refid="class-physicalbone3d-private-method-integrate-forces"><inline classes="std std-ref">_integrate_forces</inline></reference> 函数确定的方式移动（如果已定义）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicalbone3d-property-friction"></target>
            <paragraph classes="classref-property" ids="class-physicalbone3d-property-friction" names="class_physicalbone3d_property_friction"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>friction</strong> = <literal>1.0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_friction</strong> <strong>(</strong> <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_friction</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>该物体的摩擦，从 <literal>0</literal>（无摩擦）到 <literal>1</literal>（最大摩擦）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicalbone3d-property-gravity-scale"></target>
            <paragraph classes="classref-property" ids="class-physicalbone3d-property-gravity-scale" names="class_physicalbone3d_property_gravity_scale"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>gravity_scale</strong> = <literal>1.0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_gravity_scale</strong> <strong>(</strong> <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_gravity_scale</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>与<strong>设置 &gt; 项目设置 &gt; 物理 &gt; 3D</strong> 中的全局 3D 重力设置相乘，得到该物体的重力。例如，取值为 1 就是正常重力，2 就是双倍重力，0.5 会让应用到这个对象的重力减半。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicalbone3d-property-joint-offset"></target>
            <paragraph classes="classref-property" ids="class-physicalbone3d-property-joint-offset" names="class_physicalbone3d_property_joint_offset"><reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference> <strong>joint_offset</strong> = <literal>Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0)</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_joint_offset</strong> <strong>(</strong> <reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference> <strong>get_joint_offset</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>设置该关节的变换。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicalbone3d-property-joint-rotation"></target>
            <paragraph classes="classref-property" ids="class-physicalbone3d-property-joint-rotation" names="class_physicalbone3d_property_joint_rotation"><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> <strong>joint_rotation</strong> = <literal>Vector3(0, 0, 0)</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_joint_rotation</strong> <strong>(</strong> <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> <strong>get_joint_rotation</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>设置该关节的旋转，单位为弧度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicalbone3d-property-joint-type"></target>
            <paragraph classes="classref-property" ids="class-physicalbone3d-property-joint-type" names="class_physicalbone3d_property_joint_type"><reference internal="True" refid="enum-physicalbone3d-jointtype"><inline classes="std std-ref">JointType</inline></reference> <strong>joint_type</strong> = <literal>0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_joint_type</strong> <strong>(</strong> <reference internal="True" refid="enum-physicalbone3d-jointtype"><inline classes="std std-ref">JointType</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-physicalbone3d-jointtype"><inline classes="std std-ref">JointType</inline></reference> <strong>get_joint_type</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>设置关节的类型。可能的值见 <reference internal="True" refid="enum-physicalbone3d-jointtype"><inline classes="std std-ref">JointType</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicalbone3d-property-linear-damp"></target>
            <paragraph classes="classref-property" ids="class-physicalbone3d-property-linear-damp" names="class_physicalbone3d_property_linear_damp"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>linear_damp</strong> = <literal>0.0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_linear_damp</strong> <strong>(</strong> <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_linear_damp</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>阻碍物体的运动。默认情况下，物体将使用 <strong>项目 &gt; 项目设置 &gt; 物理 &gt; 3d</strong> 中的<strong>默认线性阻尼</strong>，或物体所在的 <reference internal="True" refuri="class_area3d#class-area3d"><inline classes="std std-ref">Area3D</inline></reference> 中设置的任何覆盖值。取决于 <reference internal="True" refid="class-physicalbone3d-property-linear-damp-mode"><inline classes="std std-ref">linear_damp_mode</inline></reference>，可以设置 <reference internal="True" refid="class-physicalbone3d-property-linear-damp"><inline classes="std std-ref">linear_damp</inline></reference> 以增加或替换物体的阻尼值。</paragraph>
            <paragraph>有关阻尼的更多详细信息，请参阅 <reference internal="True" refuri="class_projectsettings#class-projectsettings-property-physics-3d-default-linear-damp"><inline classes="std std-ref">ProjectSettings.physics/3d/default_linear_damp</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicalbone3d-property-linear-damp-mode"></target>
            <paragraph classes="classref-property" ids="class-physicalbone3d-property-linear-damp-mode" names="class_physicalbone3d_property_linear_damp_mode"><reference internal="True" refid="enum-physicalbone3d-dampmode"><inline classes="std std-ref">DampMode</inline></reference> <strong>linear_damp_mode</strong> = <literal>0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_linear_damp_mode</strong> <strong>(</strong> <reference internal="True" refid="enum-physicalbone3d-dampmode"><inline classes="std std-ref">DampMode</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-physicalbone3d-dampmode"><inline classes="std std-ref">DampMode</inline></reference> <strong>get_linear_damp_mode</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>定义如何应用 <reference internal="True" refid="class-physicalbone3d-property-linear-damp"><inline classes="std std-ref">linear_damp</inline></reference>。有关可能的值，请参阅 <reference internal="True" refid="enum-physicalbone3d-dampmode"><inline classes="std std-ref">DampMode</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicalbone3d-property-linear-velocity"></target>
            <paragraph classes="classref-property" ids="class-physicalbone3d-property-linear-velocity" names="class_physicalbone3d_property_linear_velocity"><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> <strong>linear_velocity</strong> = <literal>Vector3(0, 0, 0)</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_linear_velocity</strong> <strong>(</strong> <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> <strong>get_linear_velocity</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>物体的线速度，单位为单位每秒。可以偶尔使用，但是<strong>不要每一帧都设置它</strong>，因为物理可能在另一个线程中运行，并且以不同的间隔。使用 <reference internal="True" refid="class-physicalbone3d-private-method-integrate-forces"><inline classes="std std-ref">_integrate_forces</inline></reference> 作为你的进程循环，以精确控制物体状态。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicalbone3d-property-mass"></target>
            <paragraph classes="classref-property" ids="class-physicalbone3d-property-mass" names="class_physicalbone3d_property_mass"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>mass</strong> = <literal>1.0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_mass</strong> <strong>(</strong> <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_mass</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>实体的质量。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="方法说明">
            <title>方法说明</title>
            <target refid="class-physicalbone3d-private-method-integrate-forces"></target>
            <paragraph classes="classref-method" ids="class-physicalbone3d-private-method-integrate-forces" names="class_physicalbone3d_private_method__integrate_forces">void <strong>_integrate_forces</strong> <strong>(</strong> <reference internal="True" refuri="class_physicsdirectbodystate3d#class-physicsdirectbodystate3d"><inline classes="std std-ref">PhysicsDirectBodyState3D</inline></reference> state <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <paragraph>在物理处理过程中被调用，允许你读取并安全地修改对象的模拟状态。默认情况下，它会和通常的物理行为一起生效，但是你可以通过 <reference internal="True" refid="class-physicalbone3d-property-custom-integrator"><inline classes="std std-ref">custom_integrator</inline></reference> 属性禁用默认行为，为物体施加完全自定义的合力。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicalbone3d-method-apply-central-impulse"></target>
            <paragraph classes="classref-method" ids="class-physicalbone3d-method-apply-central-impulse" names="class_physicalbone3d_method_apply_central_impulse">void <strong>apply_central_impulse</strong> <strong>(</strong> <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> impulse <strong>)</strong></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicalbone3d-method-apply-impulse"></target>
            <paragraph classes="classref-method" ids="class-physicalbone3d-method-apply-impulse" names="class_physicalbone3d_method_apply_impulse">void <strong>apply_impulse</strong> <strong>(</strong> <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> impulse, <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> position=Vector3(0, 0, 0) <strong>)</strong></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicalbone3d-method-get-bone-id"></target>
            <paragraph classes="classref-method" ids="class-physicalbone3d-method-get-bone-id" names="class_physicalbone3d_method_get_bone_id"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_bone_id</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicalbone3d-method-get-simulate-physics"></target>
            <paragraph classes="classref-method" ids="class-physicalbone3d-method-get-simulate-physics" names="class_physicalbone3d_method_get_simulate_physics"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_simulate_physics</strong> <strong>(</strong> <strong>)</strong></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicalbone3d-method-is-simulating-physics"></target>
            <paragraph classes="classref-method" ids="class-physicalbone3d-method-is-simulating-physics" names="class_physicalbone3d_method_is_simulating_physics"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_simulating_physics</strong> <strong>(</strong> <strong>)</strong></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，所以可以直接使用类名调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

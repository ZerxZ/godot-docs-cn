<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_texturebutton.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/TextureButton.xml.</comment>
    <target refid="class-texturebutton"></target>
    <section ids="texturebutton class-texturebutton" names="texturebutton class_texturebutton">
        <title>TextureButton</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_basebutton#class-basebutton"><inline classes="std std-ref">BaseButton</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_control#class-control"><inline classes="std std-ref">Control</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_canvasitem#class-canvasitem"><inline classes="std std-ref">CanvasItem</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>基于纹理的按钮。支持按下、悬停、停用和焦点状态。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph><strong>TextureButton</strong> 的功能与 <reference internal="True" refuri="class_button#class-button"><inline classes="std std-ref">Button</inline></reference> 相同，只是它使用精灵而不是 Godot 的 <reference internal="True" refuri="class_theme#class-theme"><inline classes="std std-ref">Theme</inline></reference> 主题资源。它的创建速度更快，但它不像更复杂的 <reference internal="True" refuri="class_control#class-control"><inline classes="std std-ref">Control</inline></reference> 那样支持本地化。</paragraph>
            <paragraph>“正常”状态必须包含一个纹理（<reference internal="True" refid="class-texturebutton-property-texture-normal"><inline classes="std std-ref">texture_normal</inline></reference>）；其他纹理是可选的。</paragraph>
            <paragraph>也请参阅 <reference internal="True" refuri="class_basebutton#class-basebutton"><inline classes="std std-ref">BaseButton</inline></reference>，它包含了与该节点相关的通用属性和方法。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference name="3D 体素演示" refuri="https://godotengine.org/asset-library/asset/676">3D 体素演示</reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="52"></colspec>
                    <colspec colwidth="78"></colspec>
                    <colspec colwidth="11"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-texturebutton-property-flip-h"><inline classes="std std-ref">flip_h</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-texturebutton-property-flip-v"><inline classes="std std-ref">flip_v</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-texturebutton-property-ignore-texture-size"><inline classes="std std-ref">ignore_texture_size</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-texturebutton-stretchmode"><inline classes="std std-ref">StretchMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-texturebutton-property-stretch-mode"><inline classes="std std-ref">stretch_mode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>2</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bitmap#class-bitmap"><inline classes="std std-ref">BitMap</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-texturebutton-property-texture-click-mask"><inline classes="std std-ref">texture_click_mask</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-texturebutton-property-texture-disabled"><inline classes="std std-ref">texture_disabled</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-texturebutton-property-texture-focused"><inline classes="std std-ref">texture_focused</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-texturebutton-property-texture-hover"><inline classes="std std-ref">texture_hover</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-texturebutton-property-texture-normal"><inline classes="std std-ref">texture_normal</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-texturebutton-property-texture-pressed"><inline classes="std std-ref">texture_pressed</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="枚举">
            <title>枚举</title>
            <target refid="enum-texturebutton-stretchmode"></target>
            <paragraph classes="classref-enumeration" ids="enum-texturebutton-stretchmode" names="enum_texturebutton_stretchmode">enum <strong>StretchMode</strong>:</paragraph>
            <target refid="class-texturebutton-constant-stretch-scale"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-texturebutton-constant-stretch-scale" names="class_texturebutton_constant_stretch_scale"><reference internal="True" refid="enum-texturebutton-stretchmode"><inline classes="std std-ref">StretchMode</inline></reference> <strong>STRETCH_SCALE</strong> = <literal>0</literal></paragraph>
            <paragraph>缩放以适应节点的边界矩形。</paragraph>
            <target refid="class-texturebutton-constant-stretch-tile"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-texturebutton-constant-stretch-tile" names="class_texturebutton_constant_stretch_tile"><reference internal="True" refid="enum-texturebutton-stretchmode"><inline classes="std std-ref">StretchMode</inline></reference> <strong>STRETCH_TILE</strong> = <literal>1</literal></paragraph>
            <paragraph>在节点的边界矩形内平铺。</paragraph>
            <target refid="class-texturebutton-constant-stretch-keep"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-texturebutton-constant-stretch-keep" names="class_texturebutton_constant_stretch_keep"><reference internal="True" refid="enum-texturebutton-stretchmode"><inline classes="std std-ref">StretchMode</inline></reference> <strong>STRETCH_KEEP</strong> = <literal>2</literal></paragraph>
            <paragraph>纹理保持它的原始尺寸，并保持在边界矩形的左上角。</paragraph>
            <target refid="class-texturebutton-constant-stretch-keep-centered"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-texturebutton-constant-stretch-keep-centered" names="class_texturebutton_constant_stretch_keep_centered"><reference internal="True" refid="enum-texturebutton-stretchmode"><inline classes="std std-ref">StretchMode</inline></reference> <strong>STRETCH_KEEP_CENTERED</strong> = <literal>3</literal></paragraph>
            <paragraph>纹理保持其原始大小，并在节点的边界矩形中保持居中。</paragraph>
            <target refid="class-texturebutton-constant-stretch-keep-aspect"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-texturebutton-constant-stretch-keep-aspect" names="class_texturebutton_constant_stretch_keep_aspect"><reference internal="True" refid="enum-texturebutton-stretchmode"><inline classes="std std-ref">StretchMode</inline></reference> <strong>STRETCH_KEEP_ASPECT</strong> = <literal>4</literal></paragraph>
            <paragraph>缩放纹理以适应节点的边界矩形，但保持纹理的长宽比。</paragraph>
            <target refid="class-texturebutton-constant-stretch-keep-aspect-centered"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-texturebutton-constant-stretch-keep-aspect-centered" names="class_texturebutton_constant_stretch_keep_aspect_centered"><reference internal="True" refid="enum-texturebutton-stretchmode"><inline classes="std std-ref">StretchMode</inline></reference> <strong>STRETCH_KEEP_ASPECT_CENTERED</strong> = <literal>5</literal></paragraph>
            <paragraph>缩放纹理以适应节点的边界矩形，使其居中，并保持长宽比。</paragraph>
            <target refid="class-texturebutton-constant-stretch-keep-aspect-covered"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-texturebutton-constant-stretch-keep-aspect-covered" names="class_texturebutton_constant_stretch_keep_aspect_covered"><reference internal="True" refid="enum-texturebutton-stretchmode"><inline classes="std std-ref">StretchMode</inline></reference> <strong>STRETCH_KEEP_ASPECT_COVERED</strong> = <literal>6</literal></paragraph>
            <paragraph>缩放纹理，使较短的一边适应边界矩形。另一边则裁剪到节点的界限内。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="属性说明">
            <title>属性说明</title>
            <target refid="class-texturebutton-property-flip-h"></target>
            <paragraph classes="classref-property" ids="class-texturebutton-property-flip-h" names="class_texturebutton_property_flip_h"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>flip_h</strong> = <literal>false</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_flip_h</strong> <strong>(</strong> <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_flipped_h</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，纹理将被水平翻转。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-texturebutton-property-flip-v"></target>
            <paragraph classes="classref-property" ids="class-texturebutton-property-flip-v" names="class_texturebutton_property_flip_v"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>flip_v</strong> = <literal>false</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_flip_v</strong> <strong>(</strong> <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_flipped_v</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，纹理将被垂直翻转。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-texturebutton-property-ignore-texture-size"></target>
            <paragraph classes="classref-property" ids="class-texturebutton-property-ignore-texture-size" names="class_texturebutton_property_ignore_texture_size"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>ignore_texture_size</strong> = <literal>false</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_ignore_texture_size</strong> <strong>(</strong> <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_ignore_texture_size</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则计算最小尺寸时不会考虑该纹理的大小，因此 <strong>TextureButton</strong> 能够调整地比该纹理大小还要小。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-texturebutton-property-stretch-mode"></target>
            <paragraph classes="classref-property" ids="class-texturebutton-property-stretch-mode" names="class_texturebutton_property_stretch_mode"><reference internal="True" refid="enum-texturebutton-stretchmode"><inline classes="std std-ref">StretchMode</inline></reference> <strong>stretch_mode</strong> = <literal>2</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_stretch_mode</strong> <strong>(</strong> <reference internal="True" refid="enum-texturebutton-stretchmode"><inline classes="std std-ref">StretchMode</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-texturebutton-stretchmode"><inline classes="std std-ref">StretchMode</inline></reference> <strong>get_stretch_mode</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>控制调整节点包围矩形时纹理的行为。可用的选项见 <reference internal="True" refid="enum-texturebutton-stretchmode"><inline classes="std std-ref">StretchMode</inline></reference> 常量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-texturebutton-property-texture-click-mask"></target>
            <paragraph classes="classref-property" ids="class-texturebutton-property-texture-click-mask" names="class_texturebutton_property_texture_click_mask"><reference internal="True" refuri="class_bitmap#class-bitmap"><inline classes="std std-ref">BitMap</inline></reference> <strong>texture_click_mask</strong></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_click_mask</strong> <strong>(</strong> <reference internal="True" refuri="class_bitmap#class-bitmap"><inline classes="std std-ref">BitMap</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bitmap#class-bitmap"><inline classes="std std-ref">BitMap</inline></reference> <strong>get_click_mask</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>用于点击检测的纯黑白 <reference internal="True" refuri="class_bitmap#class-bitmap"><inline classes="std std-ref">BitMap</inline></reference> 图像。在遮罩上，白色像素代表按钮的可点击区域。可用它来创建具有弯曲形状的按钮。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-texturebutton-property-texture-disabled"></target>
            <paragraph classes="classref-property" ids="class-texturebutton-property-texture-disabled" names="class_texturebutton_property_texture_disabled"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>texture_disabled</strong></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_texture_disabled</strong> <strong>(</strong> <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>get_texture_disabled</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>节点被禁用时显示的纹理。参阅 <reference internal="True" refuri="class_basebutton#class-basebutton-property-disabled"><inline classes="std std-ref">BaseButton.disabled</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-texturebutton-property-texture-focused"></target>
            <paragraph classes="classref-property" ids="class-texturebutton-property-texture-focused" names="class_texturebutton_property_texture_focused"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>texture_focused</strong></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_texture_focused</strong> <strong>(</strong> <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>get_texture_focused</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>该节点具有鼠标或键盘焦点时显示的纹理。<reference internal="True" refid="class-texturebutton-property-texture-focused"><inline classes="std std-ref">texture_focused</inline></reference> 会在基础纹理<emphasis>之上</emphasis>显示，所以要让基础纹理可见就应该使用半透明纹理。这种情况下比较适用代表轮廓或者下划线的纹理。要禁用焦点的视觉效果，请分配一张任意大小的全透明纹理。请注意，禁用焦点的视觉效果不利于键盘/控制器的导航，所以出于可用性的原因并不建议这么做。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-texturebutton-property-texture-hover"></target>
            <paragraph classes="classref-property" ids="class-texturebutton-property-texture-hover" names="class_texturebutton_property_texture_hover"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>texture_hover</strong></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_texture_hover</strong> <strong>(</strong> <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>get_texture_hover</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>当鼠标悬停在节点上时显示的纹理。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-texturebutton-property-texture-normal"></target>
            <paragraph classes="classref-property" ids="class-texturebutton-property-texture-normal" names="class_texturebutton_property_texture_normal"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>texture_normal</strong></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_texture_normal</strong> <strong>(</strong> <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>get_texture_normal</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>节点<strong>不处于</strong>禁用、悬停、按下状态时，默认显示的纹理。该纹理仍会在聚焦状态下显示，上层绘制的是 <reference internal="True" refid="class-texturebutton-property-texture-focused"><inline classes="std std-ref">texture_focused</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-texturebutton-property-texture-pressed"></target>
            <paragraph classes="classref-property" ids="class-texturebutton-property-texture-pressed" names="class_texturebutton_property_texture_pressed"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>texture_pressed</strong></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_texture_pressed</strong> <strong>(</strong> <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>get_texture_pressed</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果节点有键盘焦点且玩家按下回车键，或者玩家按下 <reference internal="True" refuri="class_basebutton#class-basebutton-property-shortcut"><inline classes="std std-ref">BaseButton.shortcut</inline></reference> 键，则鼠标悬停在节点上时显示的纹理。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，所以可以直接使用类名调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

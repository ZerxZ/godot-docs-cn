<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_editorfilesystem.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/EditorFileSystem.xml.</comment>
    <target refid="class-editorfilesystem"></target>
    <section ids="editorfilesystem class-editorfilesystem" names="editorfilesystem class_editorfilesystem">
        <title>EditorFileSystem</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>编辑器可以浏览的资源文件系统。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>这个对象储存着文件系统里所有的资源的信息，类型和其他。</paragraph>
            <paragraph><strong>注意：</strong>这个类不应该被直接实例化。应该使用下列方法 <reference internal="True" refuri="class_editorinterface#class-editorinterface-method-get-resource-filesystem"><inline classes="std std-ref">EditorInterface.get_resource_filesystem</inline></reference> 来读取单例。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="67"></colspec>
                    <colspec colwidth="134"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorfilesystem-method-get-file-type"><inline classes="std std-ref">get_file_type</inline></reference>(path: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_editorfilesystemdirectory#class-editorfilesystemdirectory"><inline classes="std std-ref">EditorFileSystemDirectory</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorfilesystem-method-get-filesystem"><inline classes="std std-ref">get_filesystem</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_editorfilesystemdirectory#class-editorfilesystemdirectory"><inline classes="std std-ref">EditorFileSystemDirectory</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorfilesystem-method-get-filesystem-path"><inline classes="std std-ref">get_filesystem_path</inline></reference>(path: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorfilesystem-method-get-scanning-progress"><inline classes="std std-ref">get_scanning_progress</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorfilesystem-method-is-scanning"><inline classes="std std-ref">is_scanning</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorfilesystem-method-reimport-files"><inline classes="std std-ref">reimport_files</inline></reference>(files: <reference internal="True" refuri="class_packedstringarray#class-packedstringarray"><inline classes="std std-ref">PackedStringArray</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorfilesystem-method-scan"><inline classes="std std-ref">scan</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorfilesystem-method-scan-sources"><inline classes="std std-ref">scan_sources</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorfilesystem-method-update-file"><inline classes="std std-ref">update_file</inline></reference>(path: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>)</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="信号">
            <title>信号</title>
            <target refid="class-editorfilesystem-signal-filesystem-changed"></target>
            <paragraph classes="classref-signal" ids="class-editorfilesystem-signal-filesystem-changed" names="class_editorfilesystem_signal_filesystem_changed"><strong>filesystem_changed</strong>() <reference internal="True" refid="class-editorfilesystem-signal-filesystem-changed"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>在文件系统更改的时候触发。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorfilesystem-signal-resources-reimported"></target>
            <paragraph classes="classref-signal" ids="class-editorfilesystem-signal-resources-reimported" names="class_editorfilesystem_signal_resources_reimported"><strong>resources_reimported</strong>(resources: <reference internal="True" refuri="class_packedstringarray#class-packedstringarray"><inline classes="std std-ref">PackedStringArray</inline></reference>) <reference internal="True" refid="class-editorfilesystem-signal-resources-reimported"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>重新导入资源时触发。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorfilesystem-signal-resources-reload"></target>
            <paragraph classes="classref-signal" ids="class-editorfilesystem-signal-resources-reload" names="class_editorfilesystem_signal_resources_reload"><strong>resources_reload</strong>(resources: <reference internal="True" refuri="class_packedstringarray#class-packedstringarray"><inline classes="std std-ref">PackedStringArray</inline></reference>) <reference internal="True" refid="class-editorfilesystem-signal-resources-reload"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果在扫描文件系统的时候，至少有一个资源被重新加载，则触发该信号。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorfilesystem-signal-script-classes-updated"></target>
            <paragraph classes="classref-signal" ids="class-editorfilesystem-signal-script-classes-updated" names="class_editorfilesystem_signal_script_classes_updated"><strong>script_classes_updated</strong>() <reference internal="True" refid="class-editorfilesystem-signal-script-classes-updated"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>更新全局脚本类列表时触发。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorfilesystem-signal-sources-changed"></target>
            <paragraph classes="classref-signal" ids="class-editorfilesystem-signal-sources-changed" names="class_editorfilesystem_signal_sources_changed"><strong>sources_changed</strong>(exist: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <reference internal="True" refid="class-editorfilesystem-signal-sources-changed"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果导入文件的来源发生变化，则触发。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="方法说明">
            <title>方法说明</title>
            <target refid="class-editorfilesystem-method-get-file-type"></target>
            <paragraph classes="classref-method" ids="class-editorfilesystem-method-get-file-type" names="class_editorfilesystem_method_get_file_type"><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>get_file_type</strong>(path: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-editorfilesystem-method-get-file-type"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回文件的资源类型，给定完整路径。这将返回字符串，如 <literal>"Resource"</literal> 或 <literal>"GDScript"</literal>，<emphasis>不是</emphasis>文件扩展名，如 <literal>".gd"</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorfilesystem-method-get-filesystem"></target>
            <paragraph classes="classref-method" ids="class-editorfilesystem-method-get-filesystem" names="class_editorfilesystem_method_get_filesystem"><reference internal="True" refuri="class_editorfilesystemdirectory#class-editorfilesystemdirectory"><inline classes="std std-ref">EditorFileSystemDirectory</inline></reference> <strong>get_filesystem</strong>() <reference internal="True" refid="class-editorfilesystem-method-get-filesystem"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>获取根目录对象。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorfilesystem-method-get-filesystem-path"></target>
            <paragraph classes="classref-method" ids="class-editorfilesystem-method-get-filesystem-path" names="class_editorfilesystem_method_get_filesystem_path"><reference internal="True" refuri="class_editorfilesystemdirectory#class-editorfilesystemdirectory"><inline classes="std std-ref">EditorFileSystemDirectory</inline></reference> <strong>get_filesystem_path</strong>(path: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <reference internal="True" refid="class-editorfilesystem-method-get-filesystem-path"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回在 <literal>path</literal> 下文件系统的视图。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorfilesystem-method-get-scanning-progress"></target>
            <paragraph classes="classref-method" ids="class-editorfilesystem-method-get-scanning-progress" names="class_editorfilesystem_method_get_scanning_progress"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_scanning_progress</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-editorfilesystem-method-get-scanning-progress"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果文件系统正在被扫描，返回扫描的进度，值为 0-1。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorfilesystem-method-is-scanning"></target>
            <paragraph classes="classref-method" ids="class-editorfilesystem-method-is-scanning" names="class_editorfilesystem_method_is_scanning"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_scanning</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-editorfilesystem-method-is-scanning"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果文件系统正在进行扫描，则返回 <literal>true</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorfilesystem-method-reimport-files"></target>
            <paragraph classes="classref-method" ids="class-editorfilesystem-method-reimport-files" names="class_editorfilesystem_method_reimport_files"><abbreviation explanation="无返回值。">void</abbreviation> <strong>reimport_files</strong>(files: <reference internal="True" refuri="class_packedstringarray#class-packedstringarray"><inline classes="std std-ref">PackedStringArray</inline></reference>) <reference internal="True" refid="class-editorfilesystem-method-reimport-files"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>重新导入一组文件。如果这些文件或其 <literal>.import</literal> 文件是由脚本或外部程序直接编辑的，请调用此函数。</paragraph>
            <paragraph>如果文件类型已更改或文件是新创建的，请使用 <reference internal="True" refid="class-editorfilesystem-method-update-file"><inline classes="std std-ref">update_file</inline></reference> 或 <reference internal="True" refid="class-editorfilesystem-method-scan"><inline classes="std std-ref">scan</inline></reference>。</paragraph>
            <paragraph><strong>注意：</strong>此函数会阻塞，直到导入完成。但由于进度条更新，主循环迭代，包括计时器和 <reference internal="True" refuri="class_node#class-node-private-method-process"><inline classes="std std-ref">Node._process</inline></reference>，将在导入过程中发生。避免在导入正在进行时调用 <reference internal="True" refid="class-editorfilesystem-method-reimport-files"><inline classes="std std-ref">reimport_files</inline></reference> 或 <reference internal="True" refid="class-editorfilesystem-method-scan"><inline classes="std std-ref">scan</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorfilesystem-method-scan"></target>
            <paragraph classes="classref-method" ids="class-editorfilesystem-method-scan" names="class_editorfilesystem_method_scan"><abbreviation explanation="无返回值。">void</abbreviation> <strong>scan</strong>() <reference internal="True" refid="class-editorfilesystem-method-scan"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>扫描文件系统的改动。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorfilesystem-method-scan-sources"></target>
            <paragraph classes="classref-method" ids="class-editorfilesystem-method-scan-sources" names="class_editorfilesystem_method_scan_sources"><abbreviation explanation="无返回值。">void</abbreviation> <strong>scan_sources</strong>() <reference internal="True" refid="class-editorfilesystem-method-scan-sources"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>检查是否更改了已导入资源的来源。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorfilesystem-method-update-file"></target>
            <paragraph classes="classref-method" ids="class-editorfilesystem-method-update-file" names="class_editorfilesystem_method_update_file"><abbreviation explanation="无返回值。">void</abbreviation> <strong>update_file</strong>(path: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <reference internal="True" refid="class-editorfilesystem-method-update-file"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>在现有目录中添加文件，或计划在编辑器重新启动时更新文件信息。可用于更新由外部程序保存的文本文件。</paragraph>
            <paragraph>这不会导入文件。要重新导入，请调用 <reference internal="True" refid="class-editorfilesystem-method-reimport-files"><inline classes="std std-ref">reimport_files</inline></reference> 或 <reference internal="True" refid="class-editorfilesystem-method-scan"><inline classes="std std-ref">scan</inline></reference> 方法。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

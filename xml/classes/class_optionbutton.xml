<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_optionbutton.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/OptionButton.xml.</comment>
    <target refid="class-optionbutton"></target>
    <section ids="optionbutton class-optionbutton" names="optionbutton class_optionbutton">
        <title>OptionButton</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_button#class-button"><inline classes="std std-ref">Button</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_basebutton#class-basebutton"><inline classes="std std-ref">BaseButton</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_control#class-control"><inline classes="std std-ref">Control</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_canvasitem#class-canvasitem"><inline classes="std std-ref">CanvasItem</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>按下时弹出下拉菜单的按钮。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph><strong>OptionButton</strong> 是一种按下时弹出下拉菜单的按钮。选中的菜单项会成为“当前”菜单项，作为按钮文本显示。</paragraph>
            <paragraph>另见 <reference internal="True" refuri="class_basebutton#class-basebutton"><inline classes="std std-ref">BaseButton</inline></reference>，其中包含与此节点相关联的通用属性和方法。</paragraph>
            <paragraph><strong>注意：</strong>菜单项的 ID 值有 32 位的限制，并不是完整的 64 位 <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>。取值范围为 <literal>-2^32</literal> 到 <literal>2^32 - 1</literal>，即 <literal>-2147483648</literal> 到 <literal>2147483647</literal>。</paragraph>
            <paragraph><strong>注意：</strong><reference internal="True" refuri="class_button#class-button-property-text"><inline classes="std std-ref">Button.text</inline></reference> 和 <reference internal="True" refuri="class_button#class-button-property-icon"><inline classes="std std-ref">Button.icon</inline></reference> 属性会根据当前所选菜单项自动设置。不应该手动更改。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="67"></colspec>
                    <colspec colwidth="77"></colspec>
                    <colspec colwidth="79"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_basebutton#enum-basebutton-actionmode"><inline classes="std std-ref">ActionMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph>action_mode</paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal> (overrides <reference internal="True" refuri="class_basebutton#class-basebutton-property-action-mode"><inline classes="std std-ref">BaseButton</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_@globalscope#enum-globalscope-horizontalalignment"><inline classes="std std-ref">HorizontalAlignment</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph>alignment</paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal> (overrides <reference internal="True" refuri="class_button#class-button-property-alignment"><inline classes="std std-ref">Button</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-optionbutton-property-allow-reselect"><inline classes="std std-ref">allow_reselect</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-optionbutton-property-fit-to-longest-item"><inline classes="std std-ref">fit_to_longest_item</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-optionbutton-property-item-count"><inline classes="std std-ref">item_count</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-optionbutton-property-selected"><inline classes="std std-ref">selected</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>-1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph>toggle_mode</paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal> (overrides <reference internal="True" refuri="class_basebutton#class-basebutton-property-toggle-mode"><inline classes="std std-ref">BaseButton</inline></reference>)</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="35"></colspec>
                    <colspec colwidth="181"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-optionbutton-method-add-icon-item"><inline classes="std std-ref">add_icon_item</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> texture, <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> label, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id=-1 <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-optionbutton-method-add-item"><inline classes="std std-ref">add_item</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> label, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id=-1 <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-optionbutton-method-add-separator"><inline classes="std std-ref">add_separator</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> text="" <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-optionbutton-method-clear"><inline classes="std std-ref">clear</inline></reference> <strong>(</strong> <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-optionbutton-method-get-item-icon"><inline classes="std std-ref">get_item_icon</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-optionbutton-method-get-item-id"><inline classes="std std-ref">get_item_id</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-optionbutton-method-get-item-index"><inline classes="std std-ref">get_item_index</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-optionbutton-method-get-item-metadata"><inline classes="std std-ref">get_item_metadata</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-optionbutton-method-get-item-text"><inline classes="std std-ref">get_item_text</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-optionbutton-method-get-item-tooltip"><inline classes="std std-ref">get_item_tooltip</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_popupmenu#class-popupmenu"><inline classes="std std-ref">PopupMenu</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-optionbutton-method-get-popup"><inline classes="std std-ref">get_popup</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-optionbutton-method-get-selectable-item"><inline classes="std std-ref">get_selectable_item</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> from_last=false <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-optionbutton-method-get-selected-id"><inline classes="std std-ref">get_selected_id</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-optionbutton-method-get-selected-metadata"><inline classes="std std-ref">get_selected_metadata</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-optionbutton-method-has-selectable-items"><inline classes="std std-ref">has_selectable_items</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-optionbutton-method-is-item-disabled"><inline classes="std std-ref">is_item_disabled</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-optionbutton-method-is-item-separator"><inline classes="std std-ref">is_item_separator</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-optionbutton-method-remove-item"><inline classes="std std-ref">remove_item</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> idx <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-optionbutton-method-select"><inline classes="std std-ref">select</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> idx <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-optionbutton-method-set-disable-shortcuts"><inline classes="std std-ref">set_disable_shortcuts</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> disabled <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-optionbutton-method-set-item-disabled"><inline classes="std std-ref">set_item_disabled</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> idx, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> disabled <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-optionbutton-method-set-item-icon"><inline classes="std std-ref">set_item_icon</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> idx, <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> texture <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-optionbutton-method-set-item-id"><inline classes="std std-ref">set_item_id</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> idx, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-optionbutton-method-set-item-metadata"><inline classes="std std-ref">set_item_metadata</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> idx, <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> metadata <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-optionbutton-method-set-item-text"><inline classes="std std-ref">set_item_text</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> idx, <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> text <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-optionbutton-method-set-item-tooltip"><inline classes="std std-ref">set_item_tooltip</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> idx, <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> tooltip <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-optionbutton-method-show-popup"><inline classes="std std-ref">show_popup</inline></reference> <strong>(</strong> <strong>)</strong></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id4" names="主题属性">
            <title>主题属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="35"></colspec>
                    <colspec colwidth="73"></colspec>
                    <colspec colwidth="7"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-optionbutton-theme-constant-arrow-margin"><inline classes="std std-ref">arrow_margin</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>4</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-optionbutton-theme-constant-modulate-arrow"><inline classes="std std-ref">modulate_arrow</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-optionbutton-theme-icon-arrow"><inline classes="std std-ref">arrow</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="信号">
            <title>信号</title>
            <target refid="class-optionbutton-signal-item-focused"></target>
            <paragraph classes="classref-signal" ids="class-optionbutton-signal-item-focused" names="class_optionbutton_signal_item_focused"><strong>item_focused</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index <strong>)</strong></paragraph>
            <paragraph>当用户使用 <reference internal="True" refuri="class_projectsettings#class-projectsettings-property-input-ui-up"><inline classes="std std-ref">ProjectSettings.input/ui_up</inline></reference> 或 <reference internal="True" refuri="class_projectsettings#class-projectsettings-property-input-ui-down"><inline classes="std std-ref">ProjectSettings.input/ui_down</inline></reference> 输入动作导航到某个项目时发出。所选项目的索引将作为参数传递。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-optionbutton-signal-item-selected"></target>
            <paragraph classes="classref-signal" ids="class-optionbutton-signal-item-selected" names="class_optionbutton_signal_item_selected"><strong>item_selected</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index <strong>)</strong></paragraph>
            <paragraph>当用户更改当前项时触发。所选项目的索引作为参数传递。</paragraph>
            <paragraph>必须启用 <reference internal="True" refid="class-optionbutton-property-allow-reselect"><inline classes="std std-ref">allow_reselect</inline></reference> 才能重新选中项目。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="属性说明">
            <title>属性说明</title>
            <target refid="class-optionbutton-property-allow-reselect"></target>
            <paragraph classes="classref-property" ids="class-optionbutton-property-allow-reselect" names="class_optionbutton_property_allow_reselect"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>allow_reselect</strong> = <literal>false</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_allow_reselect</strong> <strong>(</strong> <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_allow_reselect</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则可以再次选择当前选中的项目。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-optionbutton-property-fit-to-longest-item"></target>
            <paragraph classes="classref-property" ids="class-optionbutton-property-fit-to-longest-item" names="class_optionbutton_property_fit_to_longest_item"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>fit_to_longest_item</strong> = <literal>true</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_fit_to_longest_item</strong> <strong>(</strong> <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_fit_to_longest_item</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，最小尺寸将由最长项目的文本确定，而不是当前选定的文本。</paragraph>
            <paragraph><strong>注意：</strong>出于性能原因，在添加、移除、或修改项目时，最小尺寸不会立即更新。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-optionbutton-property-item-count"></target>
            <paragraph classes="classref-property" ids="class-optionbutton-property-item-count" names="class_optionbutton_property_item_count"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>item_count</strong> = <literal>0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_item_count</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_item_count</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>可供挑选的菜单项的数量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-optionbutton-property-selected"></target>
            <paragraph classes="classref-property" ids="class-optionbutton-property-selected" names="class_optionbutton_property_selected"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>selected</strong> = <literal>-1</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_selected</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>当前选定项的索引，如果没有选定项，则为<literal>-1</literal>。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id7" names="方法说明">
            <title>方法说明</title>
            <target refid="class-optionbutton-method-add-icon-item"></target>
            <paragraph classes="classref-method" ids="class-optionbutton-method-add-icon-item" names="class_optionbutton_method_add_icon_item">void <strong>add_icon_item</strong> <strong>(</strong> <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> texture, <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> label, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id=-1 <strong>)</strong></paragraph>
            <paragraph>添加一个菜单项，图标为 <literal>texture</literal>，文本为 <literal>label</literal>，（可选）ID 为 <literal>id</literal>。如果没有传入 <literal>id</literal>，则会将菜单项的索引用作 ID。新菜单项会追加到末尾。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-optionbutton-method-add-item"></target>
            <paragraph classes="classref-method" ids="class-optionbutton-method-add-item" names="class_optionbutton_method_add_item">void <strong>add_item</strong> <strong>(</strong> <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> label, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id=-1 <strong>)</strong></paragraph>
            <paragraph>添加一个菜单项，文本为 <literal>label</literal>，（可选）ID 为 <literal>id</literal>。如果没有传入 <literal>id</literal>，则会将菜单项的索引用作 ID。新菜单项会追加到末尾。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-optionbutton-method-add-separator"></target>
            <paragraph classes="classref-method" ids="class-optionbutton-method-add-separator" names="class_optionbutton_method_add_separator">void <strong>add_separator</strong> <strong>(</strong> <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> text="" <strong>)</strong></paragraph>
            <paragraph>在菜单项列表中添加分隔符。分隔符可以用来对菜单项进行分组，还可以给出标题文本 <literal>text</literal>。分隔符也设有索引，会追加到菜单项列表的末尾。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-optionbutton-method-clear"></target>
            <paragraph classes="classref-method" ids="class-optionbutton-method-clear" names="class_optionbutton_method_clear">void <strong>clear</strong> <strong>(</strong> <strong>)</strong></paragraph>
            <paragraph>清除<strong>OptionButton</strong>中的所有项目。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-optionbutton-method-get-item-icon"></target>
            <paragraph classes="classref-method" ids="class-optionbutton-method-get-item-icon" names="class_optionbutton_method_get_item_icon"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>get_item_icon</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回索引为 <literal>idx</literal> 的菜单项的图标。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-optionbutton-method-get-item-id"></target>
            <paragraph classes="classref-method" ids="class-optionbutton-method-get-item-id" names="class_optionbutton_method_get_item_id"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_item_id</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回索引为 <literal>idx</literal> 的菜单项的 ID。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-optionbutton-method-get-item-index"></target>
            <paragraph classes="classref-method" ids="class-optionbutton-method-get-item-index" names="class_optionbutton_method_get_item_index"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_item_index</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回 ID 为 <literal>id</literal> 的菜单项的索引。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-optionbutton-method-get-item-metadata"></target>
            <paragraph classes="classref-method" ids="class-optionbutton-method-get-item-metadata" names="class_optionbutton_method_get_item_metadata"><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> <strong>get_item_metadata</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>检索项的元数据。元数据可以是任何类型，并可用于存储关于项的额外信息，如外部字符串ID。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-optionbutton-method-get-item-text"></target>
            <paragraph classes="classref-method" ids="class-optionbutton-method-get-item-text" names="class_optionbutton_method_get_item_text"><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>get_item_text</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回索引为 <literal>idx</literal> 的菜单项的文本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-optionbutton-method-get-item-tooltip"></target>
            <paragraph classes="classref-method" ids="class-optionbutton-method-get-item-tooltip" names="class_optionbutton_method_get_item_tooltip"><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>get_item_tooltip</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回索引为 <literal>idx</literal> 的菜单项的工具提示。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-optionbutton-method-get-popup"></target>
            <paragraph classes="classref-method" ids="class-optionbutton-method-get-popup" names="class_optionbutton_method_get_popup"><reference internal="True" refuri="class_popupmenu#class-popupmenu"><inline classes="std std-ref">PopupMenu</inline></reference> <strong>get_popup</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回这个按钮中包含的 <reference internal="True" refuri="class_popupmenu#class-popupmenu"><inline classes="std std-ref">PopupMenu</inline></reference>。</paragraph>
            <paragraph><strong>警告：</strong>这是一个必需的内部节点，移除和释放它可能会导致崩溃。如果你想隐藏它或它的任何子节点，请使用其 <reference internal="True" refuri="class_window#class-window-property-visible"><inline classes="std std-ref">Window.visible</inline></reference> 属性。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-optionbutton-method-get-selectable-item"></target>
            <paragraph classes="classref-method" ids="class-optionbutton-method-get-selectable-item" names="class_optionbutton_method_get_selectable_item"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_selectable_item</strong> <strong>(</strong> <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> from_last=false <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回第一个处于非禁用状态或被标记为分隔符的菜单项的索引。如果 <literal>from_last</literal> 为 <literal>true</literal>，则会逆序搜索菜单项。</paragraph>
            <paragraph>如果没有找到则返回 <literal>-1</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-optionbutton-method-get-selected-id"></target>
            <paragraph classes="classref-method" ids="class-optionbutton-method-get-selected-id" names="class_optionbutton_method_get_selected_id"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_selected_id</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回所选项目的 ID，如果没有选择项目，则返回 <literal>-1</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-optionbutton-method-get-selected-metadata"></target>
            <paragraph classes="classref-method" ids="class-optionbutton-method-get-selected-metadata" names="class_optionbutton_method_get_selected_metadata"><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> <strong>get_selected_metadata</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>获取选定项的元数据。可以使用 <reference internal="True" refid="class-optionbutton-method-set-item-metadata"><inline classes="std std-ref">set_item_metadata</inline></reference> 设置项的元数据。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-optionbutton-method-has-selectable-items"></target>
            <paragraph classes="classref-method" ids="class-optionbutton-method-has-selectable-items" names="class_optionbutton_method_has_selectable_items"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>has_selectable_items</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>如果这个按钮至少包含一个未禁用或被标记为分隔符的菜单项，则返回 <literal>true</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-optionbutton-method-is-item-disabled"></target>
            <paragraph classes="classref-method" ids="class-optionbutton-method-is-item-disabled" names="class_optionbutton_method_is_item_disabled"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_item_disabled</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>如果索引为 <literal>idx</literal> 的菜单项被禁用，则返回 <literal>true</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-optionbutton-method-is-item-separator"></target>
            <paragraph classes="classref-method" ids="class-optionbutton-method-is-item-separator" names="class_optionbutton_method_is_item_separator"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_item_separator</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>如果索引为 <literal>idx</literal> 的菜单项被标记为分隔符，则返回 <literal>true</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-optionbutton-method-remove-item"></target>
            <paragraph classes="classref-method" ids="class-optionbutton-method-remove-item" names="class_optionbutton_method_remove_item">void <strong>remove_item</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> idx <strong>)</strong></paragraph>
            <paragraph>移除索引为 <literal>idx</literal> 的菜单项。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-optionbutton-method-select"></target>
            <paragraph classes="classref-method" ids="class-optionbutton-method-select" names="class_optionbutton_method_select">void <strong>select</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> idx <strong>)</strong></paragraph>
            <paragraph>按索引选择项并使其为当前选中项。即使该项是禁用的，这也将起作用。</paragraph>
            <paragraph>将 <literal>-1</literal> 作为索引传入会取消选中任何当前选中的项目。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-optionbutton-method-set-disable-shortcuts"></target>
            <paragraph classes="classref-method" ids="class-optionbutton-method-set-disable-shortcuts" names="class_optionbutton_method_set_disable_shortcuts">void <strong>set_disable_shortcuts</strong> <strong>(</strong> <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> disabled <strong>)</strong></paragraph>
            <paragraph>如果为 <literal>true</literal>，快捷方式将被禁用，无法用于触发按钮。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-optionbutton-method-set-item-disabled"></target>
            <paragraph classes="classref-method" ids="class-optionbutton-method-set-item-disabled" names="class_optionbutton_method_set_item_disabled">void <strong>set_item_disabled</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> idx, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> disabled <strong>)</strong></paragraph>
            <paragraph>设置是否禁用索引为 <literal>idx</literal> 的菜单项。</paragraph>
            <paragraph>处于禁用状态的菜单项在下拉列表中绘制的方式不同，用户无法选中这个菜单项。如果将当前选中的菜单项设为了禁用，则仍然会处于选中状态。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-optionbutton-method-set-item-icon"></target>
            <paragraph classes="classref-method" ids="class-optionbutton-method-set-item-icon" names="class_optionbutton_method_set_item_icon">void <strong>set_item_icon</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> idx, <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> texture <strong>)</strong></paragraph>
            <paragraph>设置索引为 <literal>idx</literal> 的菜单项的图标。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-optionbutton-method-set-item-id"></target>
            <paragraph classes="classref-method" ids="class-optionbutton-method-set-item-id" names="class_optionbutton_method_set_item_id">void <strong>set_item_id</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> idx, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id <strong>)</strong></paragraph>
            <paragraph>设置索引为 <literal>idx</literal> 的菜单项的 ID。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-optionbutton-method-set-item-metadata"></target>
            <paragraph classes="classref-method" ids="class-optionbutton-method-set-item-metadata" names="class_optionbutton_method_set_item_metadata">void <strong>set_item_metadata</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> idx, <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> metadata <strong>)</strong></paragraph>
            <paragraph>设置项的元数据。元数据可以是任何类型，可以用来存储关于项目的额外信息，比如外部字符串ID。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-optionbutton-method-set-item-text"></target>
            <paragraph classes="classref-method" ids="class-optionbutton-method-set-item-text" names="class_optionbutton_method_set_item_text">void <strong>set_item_text</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> idx, <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> text <strong>)</strong></paragraph>
            <paragraph>设置索引为 <literal>idx</literal> 的菜单项的文本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-optionbutton-method-set-item-tooltip"></target>
            <paragraph classes="classref-method" ids="class-optionbutton-method-set-item-tooltip" names="class_optionbutton_method_set_item_tooltip">void <strong>set_item_tooltip</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> idx, <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> tooltip <strong>)</strong></paragraph>
            <paragraph>设置索引为 <literal>idx</literal> 的菜单项的工具提示。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-optionbutton-method-show-popup"></target>
            <paragraph classes="classref-method" ids="class-optionbutton-method-show-popup" names="class_optionbutton_method_show_popup">void <strong>show_popup</strong> <strong>(</strong> <strong>)</strong></paragraph>
            <paragraph>调整 <strong>OptionButton</strong> 弹出项的位置和大小，然后显示 <reference internal="True" refuri="class_popupmenu#class-popupmenu"><inline classes="std std-ref">PopupMenu</inline></reference>。请优先使用这个方法，而不是 <literal>get_popup().popup()</literal>。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id8" names="主题属性说明">
            <title>主题属性说明</title>
            <target refid="class-optionbutton-theme-constant-arrow-margin"></target>
            <paragraph classes="classref-themeproperty" ids="class-optionbutton-theme-constant-arrow-margin" names="class_optionbutton_theme_constant_arrow_margin"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>arrow_margin</strong> = <literal>4</literal></paragraph>
            <paragraph>箭头图标和按钮的右边缘之间的水平空间。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-optionbutton-theme-constant-modulate-arrow"></target>
            <paragraph classes="classref-themeproperty" ids="class-optionbutton-theme-constant-modulate-arrow" names="class_optionbutton_theme_constant_modulate_arrow"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>modulate_arrow</strong> = <literal>0</literal></paragraph>
            <paragraph>如果不为 <literal>0</literal>，箭头图标会与字体颜色进行调制。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-optionbutton-theme-icon-arrow"></target>
            <paragraph classes="classref-themeproperty" ids="class-optionbutton-theme-icon-arrow" names="class_optionbutton_theme_icon_arrow"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>arrow</strong></paragraph>
            <paragraph>要绘制在按钮右侧的箭头图标。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，所以可以直接使用类名调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

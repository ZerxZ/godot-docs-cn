<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_rdpipelinedepthstencilstate.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/RDPipelineDepthStencilState.xml.</comment>
    <target refid="class-rdpipelinedepthstencilstate"></target>
    <section ids="rdpipelinedepthstencilstate class-rdpipelinedepthstencilstate" names="rdpipelinedepthstencilstate class_rdpipelinedepthstencilstate">
        <title>RDPipelineDepthStencilState</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>管线的深度/模板状态（由 <reference internal="True" refuri="class_renderingdevice#class-renderingdevice"><inline classes="std std-ref">RenderingDevice</inline></reference> 使用）。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph><strong>RDPipelineDepthStencilState</strong> 控制的是在使用 <reference internal="True" refuri="class_renderingdevice#class-renderingdevice"><inline classes="std std-ref">RenderingDevice</inline></reference> 对深度和模板进行采样时，如何进行深度和模板的比较。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="64"></colspec>
                    <colspec colwidth="98"></colspec>
                    <colspec colwidth="11"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-compareoperator"><inline classes="std std-ref">CompareOperator</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rdpipelinedepthstencilstate-property-back-op-compare"><inline classes="std std-ref">back_op_compare</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>7</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rdpipelinedepthstencilstate-property-back-op-compare-mask"><inline classes="std std-ref">back_op_compare_mask</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-stenciloperation"><inline classes="std std-ref">StencilOperation</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rdpipelinedepthstencilstate-property-back-op-depth-fail"><inline classes="std std-ref">back_op_depth_fail</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-stenciloperation"><inline classes="std std-ref">StencilOperation</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rdpipelinedepthstencilstate-property-back-op-fail"><inline classes="std std-ref">back_op_fail</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-stenciloperation"><inline classes="std std-ref">StencilOperation</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rdpipelinedepthstencilstate-property-back-op-pass"><inline classes="std std-ref">back_op_pass</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rdpipelinedepthstencilstate-property-back-op-reference"><inline classes="std std-ref">back_op_reference</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rdpipelinedepthstencilstate-property-back-op-write-mask"><inline classes="std std-ref">back_op_write_mask</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-compareoperator"><inline classes="std std-ref">CompareOperator</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rdpipelinedepthstencilstate-property-depth-compare-operator"><inline classes="std std-ref">depth_compare_operator</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>7</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rdpipelinedepthstencilstate-property-depth-range-max"><inline classes="std std-ref">depth_range_max</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rdpipelinedepthstencilstate-property-depth-range-min"><inline classes="std std-ref">depth_range_min</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rdpipelinedepthstencilstate-property-enable-depth-range"><inline classes="std std-ref">enable_depth_range</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rdpipelinedepthstencilstate-property-enable-depth-test"><inline classes="std std-ref">enable_depth_test</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rdpipelinedepthstencilstate-property-enable-depth-write"><inline classes="std std-ref">enable_depth_write</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rdpipelinedepthstencilstate-property-enable-stencil"><inline classes="std std-ref">enable_stencil</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-compareoperator"><inline classes="std std-ref">CompareOperator</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rdpipelinedepthstencilstate-property-front-op-compare"><inline classes="std std-ref">front_op_compare</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>7</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rdpipelinedepthstencilstate-property-front-op-compare-mask"><inline classes="std std-ref">front_op_compare_mask</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-stenciloperation"><inline classes="std std-ref">StencilOperation</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rdpipelinedepthstencilstate-property-front-op-depth-fail"><inline classes="std std-ref">front_op_depth_fail</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-stenciloperation"><inline classes="std std-ref">StencilOperation</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rdpipelinedepthstencilstate-property-front-op-fail"><inline classes="std std-ref">front_op_fail</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-stenciloperation"><inline classes="std std-ref">StencilOperation</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rdpipelinedepthstencilstate-property-front-op-pass"><inline classes="std std-ref">front_op_pass</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rdpipelinedepthstencilstate-property-front-op-reference"><inline classes="std std-ref">front_op_reference</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rdpipelinedepthstencilstate-property-front-op-write-mask"><inline classes="std std-ref">front_op_write_mask</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="属性说明">
            <title>属性说明</title>
            <target refid="class-rdpipelinedepthstencilstate-property-back-op-compare"></target>
            <paragraph classes="classref-property" ids="class-rdpipelinedepthstencilstate-property-back-op-compare" names="class_rdpipelinedepthstencilstate_property_back_op_compare"><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-compareoperator"><inline classes="std std-ref">CompareOperator</inline></reference> <strong>back_op_compare</strong> = <literal>7</literal> <reference internal="True" refid="class-rdpipelinedepthstencilstate-property-back-op-compare"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_back_op_compare</strong>(value: <reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-compareoperator"><inline classes="std std-ref">CompareOperator</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-compareoperator"><inline classes="std std-ref">CompareOperator</inline></reference> <strong>get_back_op_compare</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>用于比较前一个背面模板值和 <reference internal="True" refid="class-rdpipelinedepthstencilstate-property-back-op-reference"><inline classes="std std-ref">back_op_reference</inline></reference> 的方法。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-rdpipelinedepthstencilstate-property-back-op-compare-mask"></target>
            <paragraph classes="classref-property" ids="class-rdpipelinedepthstencilstate-property-back-op-compare-mask" names="class_rdpipelinedepthstencilstate_property_back_op_compare_mask"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>back_op_compare_mask</strong> = <literal>0</literal> <reference internal="True" refid="class-rdpipelinedepthstencilstate-property-back-op-compare-mask"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_back_op_compare_mask</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_back_op_compare_mask</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>选择将比较背面模板值中的哪些位。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-rdpipelinedepthstencilstate-property-back-op-depth-fail"></target>
            <paragraph classes="classref-property" ids="class-rdpipelinedepthstencilstate-property-back-op-depth-fail" names="class_rdpipelinedepthstencilstate_property_back_op_depth_fail"><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-stenciloperation"><inline classes="std std-ref">StencilOperation</inline></reference> <strong>back_op_depth_fail</strong> = <literal>1</literal> <reference internal="True" refid="class-rdpipelinedepthstencilstate-property-back-op-depth-fail"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_back_op_depth_fail</strong>(value: <reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-stenciloperation"><inline classes="std std-ref">StencilOperation</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-stenciloperation"><inline classes="std std-ref">StencilOperation</inline></reference> <strong>get_back_op_depth_fail</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>对通过模板测试但未通过深度测试的背面像素的模板缓冲区执行的操作。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-rdpipelinedepthstencilstate-property-back-op-fail"></target>
            <paragraph classes="classref-property" ids="class-rdpipelinedepthstencilstate-property-back-op-fail" names="class_rdpipelinedepthstencilstate_property_back_op_fail"><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-stenciloperation"><inline classes="std std-ref">StencilOperation</inline></reference> <strong>back_op_fail</strong> = <literal>1</literal> <reference internal="True" refid="class-rdpipelinedepthstencilstate-property-back-op-fail"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_back_op_fail</strong>(value: <reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-stenciloperation"><inline classes="std std-ref">StencilOperation</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-stenciloperation"><inline classes="std std-ref">StencilOperation</inline></reference> <strong>get_back_op_fail</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>对模板缓冲区中未通过模板测试的背面像素执行的操作</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-rdpipelinedepthstencilstate-property-back-op-pass"></target>
            <paragraph classes="classref-property" ids="class-rdpipelinedepthstencilstate-property-back-op-pass" names="class_rdpipelinedepthstencilstate_property_back_op_pass"><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-stenciloperation"><inline classes="std std-ref">StencilOperation</inline></reference> <strong>back_op_pass</strong> = <literal>1</literal> <reference internal="True" refid="class-rdpipelinedepthstencilstate-property-back-op-pass"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_back_op_pass</strong>(value: <reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-stenciloperation"><inline classes="std std-ref">StencilOperation</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-stenciloperation"><inline classes="std std-ref">StencilOperation</inline></reference> <strong>get_back_op_pass</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>对通过模板测试的背面像素的模板缓冲区执行的操作。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-rdpipelinedepthstencilstate-property-back-op-reference"></target>
            <paragraph classes="classref-property" ids="class-rdpipelinedepthstencilstate-property-back-op-reference" names="class_rdpipelinedepthstencilstate_property_back_op_reference"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>back_op_reference</strong> = <literal>0</literal> <reference internal="True" refid="class-rdpipelinedepthstencilstate-property-back-op-reference"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_back_op_reference</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_back_op_reference</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>将与前一个背面模板值进行比较的值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-rdpipelinedepthstencilstate-property-back-op-write-mask"></target>
            <paragraph classes="classref-property" ids="class-rdpipelinedepthstencilstate-property-back-op-write-mask" names="class_rdpipelinedepthstencilstate_property_back_op_write_mask"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>back_op_write_mask</strong> = <literal>0</literal> <reference internal="True" refid="class-rdpipelinedepthstencilstate-property-back-op-write-mask"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_back_op_write_mask</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_back_op_write_mask</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>选择背面模板值中的哪些位将被更改。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-rdpipelinedepthstencilstate-property-depth-compare-operator"></target>
            <paragraph classes="classref-property" ids="class-rdpipelinedepthstencilstate-property-depth-compare-operator" names="class_rdpipelinedepthstencilstate_property_depth_compare_operator"><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-compareoperator"><inline classes="std std-ref">CompareOperator</inline></reference> <strong>depth_compare_operator</strong> = <literal>7</literal> <reference internal="True" refid="class-rdpipelinedepthstencilstate-property-depth-compare-operator"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_depth_compare_operator</strong>(value: <reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-compareoperator"><inline classes="std std-ref">CompareOperator</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-compareoperator"><inline classes="std std-ref">CompareOperator</inline></reference> <strong>get_depth_compare_operator</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>用于比较前一个和当前深度值的方法。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-rdpipelinedepthstencilstate-property-depth-range-max"></target>
            <paragraph classes="classref-property" ids="class-rdpipelinedepthstencilstate-property-depth-range-max" names="class_rdpipelinedepthstencilstate_property_depth_range_max"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>depth_range_max</strong> = <literal>0.0</literal> <reference internal="True" refid="class-rdpipelinedepthstencilstate-property-depth-range-max"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_depth_range_max</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_depth_range_max</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph><reference internal="True" refid="class-rdpipelinedepthstencilstate-property-enable-depth-range"><inline classes="std std-ref">enable_depth_range</inline></reference> 将返回 true 的最大深度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-rdpipelinedepthstencilstate-property-depth-range-min"></target>
            <paragraph classes="classref-property" ids="class-rdpipelinedepthstencilstate-property-depth-range-min" names="class_rdpipelinedepthstencilstate_property_depth_range_min"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>depth_range_min</strong> = <literal>0.0</literal> <reference internal="True" refid="class-rdpipelinedepthstencilstate-property-depth-range-min"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_depth_range_min</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_depth_range_min</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph><reference internal="True" refid="class-rdpipelinedepthstencilstate-property-enable-depth-range"><inline classes="std std-ref">enable_depth_range</inline></reference> 将返回 true 的最小深度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-rdpipelinedepthstencilstate-property-enable-depth-range"></target>
            <paragraph classes="classref-property" ids="class-rdpipelinedepthstencilstate-property-enable-depth-range" names="class_rdpipelinedepthstencilstate_property_enable_depth_range"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>enable_depth_range</strong> = <literal>false</literal> <reference internal="True" refid="class-rdpipelinedepthstencilstate-property-enable-depth-range"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_enable_depth_range</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_enable_depth_range</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则将测试每个深度值以查看它是否在 <reference internal="True" refid="class-rdpipelinedepthstencilstate-property-depth-range-min"><inline classes="std std-ref">depth_range_min</inline></reference> 和 <reference internal="True" refid="class-rdpipelinedepthstencilstate-property-depth-range-max"><inline classes="std std-ref">depth_range_max</inline></reference> 之间。如果超出这些值，则将其丢弃。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-rdpipelinedepthstencilstate-property-enable-depth-test"></target>
            <paragraph classes="classref-property" ids="class-rdpipelinedepthstencilstate-property-enable-depth-test" names="class_rdpipelinedepthstencilstate_property_enable_depth_test"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>enable_depth_test</strong> = <literal>false</literal> <reference internal="True" refid="class-rdpipelinedepthstencilstate-property-enable-depth-test"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_enable_depth_test</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_enable_depth_test</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则会启用深度测试，能够让对象根据深度自动被其他对象遮挡。这样对象就能够被其他对象部分遮挡。如果为 <literal>false</literal>，则对象会按照绘制顺序显示（类似 Godot 的 2D 渲染器）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-rdpipelinedepthstencilstate-property-enable-depth-write"></target>
            <paragraph classes="classref-property" ids="class-rdpipelinedepthstencilstate-property-enable-depth-write" names="class_rdpipelinedepthstencilstate_property_enable_depth_write"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>enable_depth_write</strong> = <literal>false</literal> <reference internal="True" refid="class-rdpipelinedepthstencilstate-property-enable-depth-write"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_enable_depth_write</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_enable_depth_write</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则每当深度测试返回 true 时写入深度缓冲区。仅当 enable_depth_test 也为 true 时才有效。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-rdpipelinedepthstencilstate-property-enable-stencil"></target>
            <paragraph classes="classref-property" ids="class-rdpipelinedepthstencilstate-property-enable-stencil" names="class_rdpipelinedepthstencilstate_property_enable_stencil"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>enable_stencil</strong> = <literal>false</literal> <reference internal="True" refid="class-rdpipelinedepthstencilstate-property-enable-stencil"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_enable_stencil</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_enable_stencil</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则启用模板测试。正面三角形和背面三角形有单独的模板缓冲区。请参阅每个以“front_op”开头和以“back_op”开头的属性。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-rdpipelinedepthstencilstate-property-front-op-compare"></target>
            <paragraph classes="classref-property" ids="class-rdpipelinedepthstencilstate-property-front-op-compare" names="class_rdpipelinedepthstencilstate_property_front_op_compare"><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-compareoperator"><inline classes="std std-ref">CompareOperator</inline></reference> <strong>front_op_compare</strong> = <literal>7</literal> <reference internal="True" refid="class-rdpipelinedepthstencilstate-property-front-op-compare"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_front_op_compare</strong>(value: <reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-compareoperator"><inline classes="std std-ref">CompareOperator</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-compareoperator"><inline classes="std std-ref">CompareOperator</inline></reference> <strong>get_front_op_compare</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>该方法用于比较前一个正面模板值和 <reference internal="True" refid="class-rdpipelinedepthstencilstate-property-front-op-reference"><inline classes="std std-ref">front_op_reference</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-rdpipelinedepthstencilstate-property-front-op-compare-mask"></target>
            <paragraph classes="classref-property" ids="class-rdpipelinedepthstencilstate-property-front-op-compare-mask" names="class_rdpipelinedepthstencilstate_property_front_op_compare_mask"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>front_op_compare_mask</strong> = <literal>0</literal> <reference internal="True" refid="class-rdpipelinedepthstencilstate-property-front-op-compare-mask"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_front_op_compare_mask</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_front_op_compare_mask</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>选择正面模板值中的哪些位将被比较。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-rdpipelinedepthstencilstate-property-front-op-depth-fail"></target>
            <paragraph classes="classref-property" ids="class-rdpipelinedepthstencilstate-property-front-op-depth-fail" names="class_rdpipelinedepthstencilstate_property_front_op_depth_fail"><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-stenciloperation"><inline classes="std std-ref">StencilOperation</inline></reference> <strong>front_op_depth_fail</strong> = <literal>1</literal> <reference internal="True" refid="class-rdpipelinedepthstencilstate-property-front-op-depth-fail"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_front_op_depth_fail</strong>(value: <reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-stenciloperation"><inline classes="std std-ref">StencilOperation</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-stenciloperation"><inline classes="std std-ref">StencilOperation</inline></reference> <strong>get_front_op_depth_fail</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>对通过模板测试但未通过深度测试的正面像素的模板缓冲区执行的操作。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-rdpipelinedepthstencilstate-property-front-op-fail"></target>
            <paragraph classes="classref-property" ids="class-rdpipelinedepthstencilstate-property-front-op-fail" names="class_rdpipelinedepthstencilstate_property_front_op_fail"><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-stenciloperation"><inline classes="std std-ref">StencilOperation</inline></reference> <strong>front_op_fail</strong> = <literal>1</literal> <reference internal="True" refid="class-rdpipelinedepthstencilstate-property-front-op-fail"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_front_op_fail</strong>(value: <reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-stenciloperation"><inline classes="std std-ref">StencilOperation</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-stenciloperation"><inline classes="std std-ref">StencilOperation</inline></reference> <strong>get_front_op_fail</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>对模板缓冲区中未通过模板测试的正面像素执行的操作。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-rdpipelinedepthstencilstate-property-front-op-pass"></target>
            <paragraph classes="classref-property" ids="class-rdpipelinedepthstencilstate-property-front-op-pass" names="class_rdpipelinedepthstencilstate_property_front_op_pass"><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-stenciloperation"><inline classes="std std-ref">StencilOperation</inline></reference> <strong>front_op_pass</strong> = <literal>1</literal> <reference internal="True" refid="class-rdpipelinedepthstencilstate-property-front-op-pass"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_front_op_pass</strong>(value: <reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-stenciloperation"><inline classes="std std-ref">StencilOperation</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_renderingdevice#enum-renderingdevice-stenciloperation"><inline classes="std std-ref">StencilOperation</inline></reference> <strong>get_front_op_pass</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>对通过模板测试的正面像素的模板缓冲区执行的操作。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-rdpipelinedepthstencilstate-property-front-op-reference"></target>
            <paragraph classes="classref-property" ids="class-rdpipelinedepthstencilstate-property-front-op-reference" names="class_rdpipelinedepthstencilstate_property_front_op_reference"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>front_op_reference</strong> = <literal>0</literal> <reference internal="True" refid="class-rdpipelinedepthstencilstate-property-front-op-reference"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_front_op_reference</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_front_op_reference</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>将与前一个正面模板值进行比较的值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-rdpipelinedepthstencilstate-property-front-op-write-mask"></target>
            <paragraph classes="classref-property" ids="class-rdpipelinedepthstencilstate-property-front-op-write-mask" names="class_rdpipelinedepthstencilstate_property_front_op_write_mask"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>front_op_write_mask</strong> = <literal>0</literal> <reference internal="True" refid="class-rdpipelinedepthstencilstate-property-front-op-write-mask"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_front_op_write_mask</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_front_op_write_mask</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>选择正面模板值中的哪些位将被更改。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效运算符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列位标志构成位掩码的整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

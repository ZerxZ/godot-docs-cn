<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_physicsserver3d.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/PhysicsServer3D.xml.</comment>
    <target refid="class-physicsserver3d"></target>
    <section ids="physicsserver3d class-physicsserver3d" names="physicsserver3d class_physicsserver3d">
        <title>PhysicsServer3D</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph><strong>派生：</strong> <reference internal="True" refuri="class_physicsserver3dextension#class-physicsserver3dextension"><inline classes="std std-ref">PhysicsServer3DExtension</inline></reference></paragraph>
        <paragraph>用于访问低阶 3D 物理的服务器接口。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>PhysicsServer3D 是负责所有 3D 物理的服务器。它可以直接创建和操作所有物理对象：</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><emphasis>Space（空间）</emphasis>是用于物理仿真的自包含世界。它包含实体、区域和关节。可以对其状态进行查询，获取碰撞和相交信息，并且可以修改部分仿真参数。</paragraph>
                </list_item>
                <list_item>
                    <paragraph><emphasis>Shape（形状）</emphasis>是球形、盒形、圆柱形、多边形等几何形状。加入到实体/区域中就可以用来进行碰撞检测，还可以带有相对于实体/区域原点的额外变换。实体/区域中可以添加多个（变换后的）形状，并且可以使用不同的局部变换将单个形状多次添加到实体/区域中。</paragraph>
                </list_item>
                <list_item>
                    <paragraph><emphasis>Body（实体）</emphasis>是物理对象，可以处于静态、运动学或刚性模式。可以对其状态进行查询和更新（例如位置、速度等）。可以设置力的集成回调，自定义实体的物理特性。</paragraph>
                </list_item>
                <list_item>
                    <paragraph><emphasis>Area（区域）</emphasis>是空间中的区块，可用于检测进入和离开它的实体和区域。可以设置实体的监视回调，报告进入/离开的实体形状，同样可以设置区域的监视回调。通过设置区域参数，可以在区域内覆盖重力和阻尼。</paragraph>
                </list_item>
                <list_item>
                    <paragraph><emphasis>Joint（关节）</emphasis>是两个实体之间或一个实体相对于某个点的约束。可以调整关节偏置和弹簧关节的放松长度等参数。</paragraph>
                </list_item>
            </bullet_list>
            <paragraph><strong>PhysicsServer3D</strong> 中的物理对象可以独立创建和操作；不必将它们绑定到场景树中的节点。</paragraph>
            <paragraph><strong>注意：</strong>所有 3D 物理节点都在内部使用这个物理服务器。将物理节点添加到场景树，就会导致在物理服务器中创建相应的物理对象。刚体节点会注册回调，该回调会（在每次物理更新时）使用物理服务器中相应实体对象的变换更新该节点的变换。区域节点会注册回调，用来通知区域节点与物理服务器中相应区域对象的重叠。射线投射节点会查询物理服务器中相关空间的直接状态。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="67"></colspec>
                    <colspec colwidth="293"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-area-add-shape"><inline classes="std std-ref">area_add_shape</inline></reference>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, transform: <reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference> = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0), disabled: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = false)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-area-attach-object-instance-id"><inline classes="std std-ref">area_attach_object_instance_id</inline></reference>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-area-clear-shapes"><inline classes="std std-ref">area_clear_shapes</inline></reference>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-area-create"><inline classes="std std-ref">area_create</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-area-get-collision-layer"><inline classes="std std-ref">area_get_collision_layer</inline></reference>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-area-get-collision-mask"><inline classes="std std-ref">area_get_collision_mask</inline></reference>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-area-get-object-instance-id"><inline classes="std std-ref">area_get_object_instance_id</inline></reference>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-area-get-param"><inline classes="std std-ref">area_get_param</inline></reference>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, param: <reference internal="True" refid="enum-physicsserver3d-areaparameter"><inline classes="std std-ref">AreaParameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-area-get-shape"><inline classes="std std-ref">area_get_shape</inline></reference>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-area-get-shape-count"><inline classes="std std-ref">area_get_shape_count</inline></reference>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-area-get-shape-transform"><inline classes="std std-ref">area_get_shape_transform</inline></reference>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-area-get-space"><inline classes="std std-ref">area_get_space</inline></reference>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-area-get-transform"><inline classes="std std-ref">area_get_transform</inline></reference>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-area-remove-shape"><inline classes="std std-ref">area_remove_shape</inline></reference>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-area-set-area-monitor-callback"><inline classes="std std-ref">area_set_area_monitor_callback</inline></reference>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, callback: <reference internal="True" refuri="class_callable#class-callable"><inline classes="std std-ref">Callable</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-area-set-collision-layer"><inline classes="std std-ref">area_set_collision_layer</inline></reference>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, layer: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-area-set-collision-mask"><inline classes="std std-ref">area_set_collision_mask</inline></reference>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, mask: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-area-set-monitor-callback"><inline classes="std std-ref">area_set_monitor_callback</inline></reference>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, callback: <reference internal="True" refuri="class_callable#class-callable"><inline classes="std std-ref">Callable</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-area-set-monitorable"><inline classes="std std-ref">area_set_monitorable</inline></reference>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, monitorable: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-area-set-param"><inline classes="std std-ref">area_set_param</inline></reference>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, param: <reference internal="True" refid="enum-physicsserver3d-areaparameter"><inline classes="std std-ref">AreaParameter</inline></reference>, value: <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-area-set-ray-pickable"><inline classes="std std-ref">area_set_ray_pickable</inline></reference>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, enable: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-area-set-shape"><inline classes="std std-ref">area_set_shape</inline></reference>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, shape: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-area-set-shape-disabled"><inline classes="std std-ref">area_set_shape_disabled</inline></reference>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, disabled: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-area-set-shape-transform"><inline classes="std std-ref">area_set_shape_transform</inline></reference>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, transform: <reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-area-set-space"><inline classes="std std-ref">area_set_space</inline></reference>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, space: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-area-set-transform"><inline classes="std std-ref">area_set_transform</inline></reference>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, transform: <reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-body-add-collision-exception"><inline classes="std std-ref">body_add_collision_exception</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, excepted_body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-body-add-constant-central-force"><inline classes="std std-ref">body_add_constant_central_force</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, force: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-body-add-constant-force"><inline classes="std std-ref">body_add_constant_force</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, force: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>, position: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> = Vector3(0, 0, 0))</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-body-add-constant-torque"><inline classes="std std-ref">body_add_constant_torque</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, torque: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-body-add-shape"><inline classes="std std-ref">body_add_shape</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, transform: <reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference> = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0), disabled: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = false)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-body-apply-central-force"><inline classes="std std-ref">body_apply_central_force</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, force: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-body-apply-central-impulse"><inline classes="std std-ref">body_apply_central_impulse</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, impulse: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-body-apply-force"><inline classes="std std-ref">body_apply_force</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, force: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>, position: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> = Vector3(0, 0, 0))</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-body-apply-impulse"><inline classes="std std-ref">body_apply_impulse</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, impulse: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>, position: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> = Vector3(0, 0, 0))</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-body-apply-torque"><inline classes="std std-ref">body_apply_torque</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, torque: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-body-apply-torque-impulse"><inline classes="std std-ref">body_apply_torque_impulse</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, impulse: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-body-attach-object-instance-id"><inline classes="std std-ref">body_attach_object_instance_id</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-body-clear-shapes"><inline classes="std std-ref">body_clear_shapes</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-body-create"><inline classes="std std-ref">body_create</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-body-get-collision-layer"><inline classes="std std-ref">body_get_collision_layer</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-body-get-collision-mask"><inline classes="std std-ref">body_get_collision_mask</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-body-get-collision-priority"><inline classes="std std-ref">body_get_collision_priority</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-body-get-constant-force"><inline classes="std std-ref">body_get_constant_force</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-body-get-constant-torque"><inline classes="std std-ref">body_get_constant_torque</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_physicsdirectbodystate3d#class-physicsdirectbodystate3d"><inline classes="std std-ref">PhysicsDirectBodyState3D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-body-get-direct-state"><inline classes="std std-ref">body_get_direct_state</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-body-get-max-contacts-reported"><inline classes="std std-ref">body_get_max_contacts_reported</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-physicsserver3d-bodymode"><inline classes="std std-ref">BodyMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-body-get-mode"><inline classes="std std-ref">body_get_mode</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-body-get-object-instance-id"><inline classes="std std-ref">body_get_object_instance_id</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-body-get-param"><inline classes="std std-ref">body_get_param</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, param: <reference internal="True" refid="enum-physicsserver3d-bodyparameter"><inline classes="std std-ref">BodyParameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-body-get-shape"><inline classes="std std-ref">body_get_shape</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-body-get-shape-count"><inline classes="std std-ref">body_get_shape_count</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-body-get-shape-transform"><inline classes="std std-ref">body_get_shape_transform</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-body-get-space"><inline classes="std std-ref">body_get_space</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-body-get-state"><inline classes="std std-ref">body_get_state</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, state: <reference internal="True" refid="enum-physicsserver3d-bodystate"><inline classes="std std-ref">BodyState</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-body-is-axis-locked"><inline classes="std std-ref">body_is_axis_locked</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, axis: <reference internal="True" refid="enum-physicsserver3d-bodyaxis"><inline classes="std std-ref">BodyAxis</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-body-is-continuous-collision-detection-enabled"><inline classes="std std-ref">body_is_continuous_collision_detection_enabled</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-body-is-omitting-force-integration"><inline classes="std std-ref">body_is_omitting_force_integration</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-body-remove-collision-exception"><inline classes="std std-ref">body_remove_collision_exception</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, excepted_body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-body-remove-shape"><inline classes="std std-ref">body_remove_shape</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-body-reset-mass-properties"><inline classes="std std-ref">body_reset_mass_properties</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-body-set-axis-lock"><inline classes="std std-ref">body_set_axis_lock</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, axis: <reference internal="True" refid="enum-physicsserver3d-bodyaxis"><inline classes="std std-ref">BodyAxis</inline></reference>, lock: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-body-set-axis-velocity"><inline classes="std std-ref">body_set_axis_velocity</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, axis_velocity: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-body-set-collision-layer"><inline classes="std std-ref">body_set_collision_layer</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, layer: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-body-set-collision-mask"><inline classes="std std-ref">body_set_collision_mask</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, mask: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-body-set-collision-priority"><inline classes="std std-ref">body_set_collision_priority</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, priority: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-body-set-constant-force"><inline classes="std std-ref">body_set_constant_force</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, force: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-body-set-constant-torque"><inline classes="std std-ref">body_set_constant_torque</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, torque: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-body-set-enable-continuous-collision-detection"><inline classes="std std-ref">body_set_enable_continuous_collision_detection</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, enable: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-body-set-force-integration-callback"><inline classes="std std-ref">body_set_force_integration_callback</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, callable: <reference internal="True" refuri="class_callable#class-callable"><inline classes="std std-ref">Callable</inline></reference>, userdata: <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> = null)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-body-set-max-contacts-reported"><inline classes="std std-ref">body_set_max_contacts_reported</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, amount: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-body-set-mode"><inline classes="std std-ref">body_set_mode</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, mode: <reference internal="True" refid="enum-physicsserver3d-bodymode"><inline classes="std std-ref">BodyMode</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-body-set-omit-force-integration"><inline classes="std std-ref">body_set_omit_force_integration</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, enable: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-body-set-param"><inline classes="std std-ref">body_set_param</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, param: <reference internal="True" refid="enum-physicsserver3d-bodyparameter"><inline classes="std std-ref">BodyParameter</inline></reference>, value: <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-body-set-ray-pickable"><inline classes="std std-ref">body_set_ray_pickable</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, enable: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-body-set-shape"><inline classes="std std-ref">body_set_shape</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, shape: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-body-set-shape-disabled"><inline classes="std std-ref">body_set_shape_disabled</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, disabled: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-body-set-shape-transform"><inline classes="std std-ref">body_set_shape_transform</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, transform: <reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-body-set-space"><inline classes="std std-ref">body_set_space</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, space: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-body-set-state"><inline classes="std std-ref">body_set_state</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, state: <reference internal="True" refid="enum-physicsserver3d-bodystate"><inline classes="std std-ref">BodyState</inline></reference>, value: <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-body-set-state-sync-callback"><inline classes="std std-ref">body_set_state_sync_callback</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, callable: <reference internal="True" refuri="class_callable#class-callable"><inline classes="std std-ref">Callable</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-body-test-motion"><inline classes="std std-ref">body_test_motion</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, parameters: <reference internal="True" refuri="class_physicstestmotionparameters3d#class-physicstestmotionparameters3d"><inline classes="std std-ref">PhysicsTestMotionParameters3D</inline></reference>, result: <reference internal="True" refuri="class_physicstestmotionresult3d#class-physicstestmotionresult3d"><inline classes="std std-ref">PhysicsTestMotionResult3D</inline></reference> = null)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-box-shape-create"><inline classes="std std-ref">box_shape_create</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-capsule-shape-create"><inline classes="std std-ref">capsule_shape_create</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-concave-polygon-shape-create"><inline classes="std std-ref">concave_polygon_shape_create</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-cone-twist-joint-get-param"><inline classes="std std-ref">cone_twist_joint_get_param</inline></reference>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, param: <reference internal="True" refid="enum-physicsserver3d-conetwistjointparam"><inline classes="std std-ref">ConeTwistJointParam</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-cone-twist-joint-set-param"><inline classes="std std-ref">cone_twist_joint_set_param</inline></reference>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, param: <reference internal="True" refid="enum-physicsserver3d-conetwistjointparam"><inline classes="std std-ref">ConeTwistJointParam</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-convex-polygon-shape-create"><inline classes="std std-ref">convex_polygon_shape_create</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-custom-shape-create"><inline classes="std std-ref">custom_shape_create</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-cylinder-shape-create"><inline classes="std std-ref">cylinder_shape_create</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-free-rid"><inline classes="std std-ref">free_rid</inline></reference>(rid: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-generic-6dof-joint-get-flag"><inline classes="std std-ref">generic_6dof_joint_get_flag</inline></reference>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, axis: Vector3.Axis, flag: <reference internal="True" refid="enum-physicsserver3d-g6dofjointaxisflag"><inline classes="std std-ref">G6DOFJointAxisFlag</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-generic-6dof-joint-get-param"><inline classes="std std-ref">generic_6dof_joint_get_param</inline></reference>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, axis: Vector3.Axis, param: <reference internal="True" refid="enum-physicsserver3d-g6dofjointaxisparam"><inline classes="std std-ref">G6DOFJointAxisParam</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-generic-6dof-joint-set-flag"><inline classes="std std-ref">generic_6dof_joint_set_flag</inline></reference>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, axis: Vector3.Axis, flag: <reference internal="True" refid="enum-physicsserver3d-g6dofjointaxisflag"><inline classes="std std-ref">G6DOFJointAxisFlag</inline></reference>, enable: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-generic-6dof-joint-set-param"><inline classes="std std-ref">generic_6dof_joint_set_param</inline></reference>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, axis: Vector3.Axis, param: <reference internal="True" refid="enum-physicsserver3d-g6dofjointaxisparam"><inline classes="std std-ref">G6DOFJointAxisParam</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-get-process-info"><inline classes="std std-ref">get_process_info</inline></reference>(process_info: <reference internal="True" refid="enum-physicsserver3d-processinfo"><inline classes="std std-ref">ProcessInfo</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-heightmap-shape-create"><inline classes="std std-ref">heightmap_shape_create</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-hinge-joint-get-flag"><inline classes="std std-ref">hinge_joint_get_flag</inline></reference>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, flag: <reference internal="True" refid="enum-physicsserver3d-hingejointflag"><inline classes="std std-ref">HingeJointFlag</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-hinge-joint-get-param"><inline classes="std std-ref">hinge_joint_get_param</inline></reference>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, param: <reference internal="True" refid="enum-physicsserver3d-hingejointparam"><inline classes="std std-ref">HingeJointParam</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-hinge-joint-set-flag"><inline classes="std std-ref">hinge_joint_set_flag</inline></reference>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, flag: <reference internal="True" refid="enum-physicsserver3d-hingejointflag"><inline classes="std std-ref">HingeJointFlag</inline></reference>, enabled: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-hinge-joint-set-param"><inline classes="std std-ref">hinge_joint_set_param</inline></reference>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, param: <reference internal="True" refid="enum-physicsserver3d-hingejointparam"><inline classes="std std-ref">HingeJointParam</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-joint-clear"><inline classes="std std-ref">joint_clear</inline></reference>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-joint-create"><inline classes="std std-ref">joint_create</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-joint-disable-collisions-between-bodies"><inline classes="std std-ref">joint_disable_collisions_between_bodies</inline></reference>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, disable: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-joint-get-solver-priority"><inline classes="std std-ref">joint_get_solver_priority</inline></reference>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-physicsserver3d-jointtype"><inline classes="std std-ref">JointType</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-joint-get-type"><inline classes="std std-ref">joint_get_type</inline></reference>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-joint-is-disabled-collisions-between-bodies"><inline classes="std std-ref">joint_is_disabled_collisions_between_bodies</inline></reference>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-joint-make-cone-twist"><inline classes="std std-ref">joint_make_cone_twist</inline></reference>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, body_A: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, local_ref_A: <reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference>, body_B: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, local_ref_B: <reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-joint-make-generic-6dof"><inline classes="std std-ref">joint_make_generic_6dof</inline></reference>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, body_A: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, local_ref_A: <reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference>, body_B: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, local_ref_B: <reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-joint-make-hinge"><inline classes="std std-ref">joint_make_hinge</inline></reference>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, body_A: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, hinge_A: <reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference>, body_B: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, hinge_B: <reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-joint-make-pin"><inline classes="std std-ref">joint_make_pin</inline></reference>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, body_A: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, local_A: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>, body_B: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, local_B: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-joint-make-slider"><inline classes="std std-ref">joint_make_slider</inline></reference>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, body_A: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, local_ref_A: <reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference>, body_B: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, local_ref_B: <reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-joint-set-solver-priority"><inline classes="std std-ref">joint_set_solver_priority</inline></reference>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, priority: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-pin-joint-get-local-a"><inline classes="std std-ref">pin_joint_get_local_a</inline></reference>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-pin-joint-get-local-b"><inline classes="std std-ref">pin_joint_get_local_b</inline></reference>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-pin-joint-get-param"><inline classes="std std-ref">pin_joint_get_param</inline></reference>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, param: <reference internal="True" refid="enum-physicsserver3d-pinjointparam"><inline classes="std std-ref">PinJointParam</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-pin-joint-set-local-a"><inline classes="std std-ref">pin_joint_set_local_a</inline></reference>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, local_A: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-pin-joint-set-local-b"><inline classes="std std-ref">pin_joint_set_local_b</inline></reference>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, local_B: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-pin-joint-set-param"><inline classes="std std-ref">pin_joint_set_param</inline></reference>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, param: <reference internal="True" refid="enum-physicsserver3d-pinjointparam"><inline classes="std std-ref">PinJointParam</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-separation-ray-shape-create"><inline classes="std std-ref">separation_ray_shape_create</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-set-active"><inline classes="std std-ref">set_active</inline></reference>(active: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-shape-get-data"><inline classes="std std-ref">shape_get_data</inline></reference>(shape: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-shape-get-margin"><inline classes="std std-ref">shape_get_margin</inline></reference>(shape: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-physicsserver3d-shapetype"><inline classes="std std-ref">ShapeType</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-shape-get-type"><inline classes="std std-ref">shape_get_type</inline></reference>(shape: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-shape-set-data"><inline classes="std std-ref">shape_set_data</inline></reference>(shape: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, data: <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-shape-set-margin"><inline classes="std std-ref">shape_set_margin</inline></reference>(shape: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, margin: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-slider-joint-get-param"><inline classes="std std-ref">slider_joint_get_param</inline></reference>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, param: <reference internal="True" refid="enum-physicsserver3d-sliderjointparam"><inline classes="std std-ref">SliderJointParam</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-slider-joint-set-param"><inline classes="std std-ref">slider_joint_set_param</inline></reference>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, param: <reference internal="True" refid="enum-physicsserver3d-sliderjointparam"><inline classes="std std-ref">SliderJointParam</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-soft-body-add-collision-exception"><inline classes="std std-ref">soft_body_add_collision_exception</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, body_b: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-soft-body-create"><inline classes="std std-ref">soft_body_create</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_aabb#class-aabb"><inline classes="std std-ref">AABB</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-soft-body-get-bounds"><inline classes="std std-ref">soft_body_get_bounds</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-soft-body-get-collision-layer"><inline classes="std std-ref">soft_body_get_collision_layer</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-soft-body-get-collision-mask"><inline classes="std std-ref">soft_body_get_collision_mask</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-soft-body-get-damping-coefficient"><inline classes="std std-ref">soft_body_get_damping_coefficient</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-soft-body-get-drag-coefficient"><inline classes="std std-ref">soft_body_get_drag_coefficient</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-soft-body-get-linear-stiffness"><inline classes="std std-ref">soft_body_get_linear_stiffness</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-soft-body-get-point-global-position"><inline classes="std std-ref">soft_body_get_point_global_position</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, point_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-soft-body-get-pressure-coefficient"><inline classes="std std-ref">soft_body_get_pressure_coefficient</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-soft-body-get-simulation-precision"><inline classes="std std-ref">soft_body_get_simulation_precision</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-soft-body-get-space"><inline classes="std std-ref">soft_body_get_space</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-soft-body-get-state"><inline classes="std std-ref">soft_body_get_state</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, state: <reference internal="True" refid="enum-physicsserver3d-bodystate"><inline classes="std std-ref">BodyState</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-soft-body-get-total-mass"><inline classes="std std-ref">soft_body_get_total_mass</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-soft-body-is-point-pinned"><inline classes="std std-ref">soft_body_is_point_pinned</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, point_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-soft-body-move-point"><inline classes="std std-ref">soft_body_move_point</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, point_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, global_position: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-soft-body-pin-point"><inline classes="std std-ref">soft_body_pin_point</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, point_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, pin: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-soft-body-remove-all-pinned-points"><inline classes="std std-ref">soft_body_remove_all_pinned_points</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-soft-body-remove-collision-exception"><inline classes="std std-ref">soft_body_remove_collision_exception</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, body_b: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-soft-body-set-collision-layer"><inline classes="std std-ref">soft_body_set_collision_layer</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, layer: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-soft-body-set-collision-mask"><inline classes="std std-ref">soft_body_set_collision_mask</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, mask: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-soft-body-set-damping-coefficient"><inline classes="std std-ref">soft_body_set_damping_coefficient</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, damping_coefficient: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-soft-body-set-drag-coefficient"><inline classes="std std-ref">soft_body_set_drag_coefficient</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, drag_coefficient: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-soft-body-set-linear-stiffness"><inline classes="std std-ref">soft_body_set_linear_stiffness</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, stiffness: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-soft-body-set-mesh"><inline classes="std std-ref">soft_body_set_mesh</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, mesh: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-soft-body-set-pressure-coefficient"><inline classes="std std-ref">soft_body_set_pressure_coefficient</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, pressure_coefficient: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-soft-body-set-ray-pickable"><inline classes="std std-ref">soft_body_set_ray_pickable</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, enable: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-soft-body-set-simulation-precision"><inline classes="std std-ref">soft_body_set_simulation_precision</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, simulation_precision: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-soft-body-set-space"><inline classes="std std-ref">soft_body_set_space</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, space: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-soft-body-set-state"><inline classes="std std-ref">soft_body_set_state</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, state: <reference internal="True" refid="enum-physicsserver3d-bodystate"><inline classes="std std-ref">BodyState</inline></reference>, variant: <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-soft-body-set-total-mass"><inline classes="std std-ref">soft_body_set_total_mass</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, total_mass: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-soft-body-set-transform"><inline classes="std std-ref">soft_body_set_transform</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, transform: <reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-soft-body-update-rendering-server"><inline classes="std std-ref">soft_body_update_rendering_server</inline></reference>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, rendering_server_handler: <reference internal="True" refuri="class_physicsserver3drenderingserverhandler#class-physicsserver3drenderingserverhandler"><inline classes="std std-ref">PhysicsServer3DRenderingServerHandler</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-space-create"><inline classes="std std-ref">space_create</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_physicsdirectspacestate3d#class-physicsdirectspacestate3d"><inline classes="std std-ref">PhysicsDirectSpaceState3D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-space-get-direct-state"><inline classes="std std-ref">space_get_direct_state</inline></reference>(space: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-space-get-param"><inline classes="std std-ref">space_get_param</inline></reference>(space: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, param: <reference internal="True" refid="enum-physicsserver3d-spaceparameter"><inline classes="std std-ref">SpaceParameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-space-is-active"><inline classes="std std-ref">space_is_active</inline></reference>(space: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-space-set-active"><inline classes="std std-ref">space_set_active</inline></reference>(space: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, active: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-space-set-param"><inline classes="std std-ref">space_set_param</inline></reference>(space: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, param: <reference internal="True" refid="enum-physicsserver3d-spaceparameter"><inline classes="std std-ref">SpaceParameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-sphere-shape-create"><inline classes="std std-ref">sphere_shape_create</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsserver3d-method-world-boundary-shape-create"><inline classes="std std-ref">world_boundary_shape_create</inline></reference>()</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="枚举">
            <title>枚举</title>
            <target refid="enum-physicsserver3d-jointtype"></target>
            <paragraph classes="classref-enumeration" ids="enum-physicsserver3d-jointtype" names="enum_physicsserver3d_jointtype">enum <strong>JointType</strong>: <reference internal="True" refid="enum-physicsserver3d-jointtype"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-physicsserver3d-constant-joint-type-pin"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-joint-type-pin" names="class_physicsserver3d_constant_joint_type_pin"><reference internal="True" refid="enum-physicsserver3d-jointtype"><inline classes="std std-ref">JointType</inline></reference> <strong>JOINT_TYPE_PIN</strong> = <literal>0</literal></paragraph>
            <paragraph>该 <reference internal="True" refuri="class_joint3d#class-joint3d"><inline classes="std std-ref">Joint3D</inline></reference> 为 <reference internal="True" refuri="class_pinjoint3d#class-pinjoint3d"><inline classes="std std-ref">PinJoint3D</inline></reference>。</paragraph>
            <target refid="class-physicsserver3d-constant-joint-type-hinge"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-joint-type-hinge" names="class_physicsserver3d_constant_joint_type_hinge"><reference internal="True" refid="enum-physicsserver3d-jointtype"><inline classes="std std-ref">JointType</inline></reference> <strong>JOINT_TYPE_HINGE</strong> = <literal>1</literal></paragraph>
            <paragraph>该 <reference internal="True" refuri="class_joint3d#class-joint3d"><inline classes="std std-ref">Joint3D</inline></reference> 为 <reference internal="True" refuri="class_hingejoint3d#class-hingejoint3d"><inline classes="std std-ref">HingeJoint3D</inline></reference>。</paragraph>
            <target refid="class-physicsserver3d-constant-joint-type-slider"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-joint-type-slider" names="class_physicsserver3d_constant_joint_type_slider"><reference internal="True" refid="enum-physicsserver3d-jointtype"><inline classes="std std-ref">JointType</inline></reference> <strong>JOINT_TYPE_SLIDER</strong> = <literal>2</literal></paragraph>
            <paragraph>该 <reference internal="True" refuri="class_joint3d#class-joint3d"><inline classes="std std-ref">Joint3D</inline></reference> 为 <reference internal="True" refuri="class_sliderjoint3d#class-sliderjoint3d"><inline classes="std std-ref">SliderJoint3D</inline></reference>。</paragraph>
            <target refid="class-physicsserver3d-constant-joint-type-cone-twist"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-joint-type-cone-twist" names="class_physicsserver3d_constant_joint_type_cone_twist"><reference internal="True" refid="enum-physicsserver3d-jointtype"><inline classes="std std-ref">JointType</inline></reference> <strong>JOINT_TYPE_CONE_TWIST</strong> = <literal>3</literal></paragraph>
            <paragraph>该 <reference internal="True" refuri="class_joint3d#class-joint3d"><inline classes="std std-ref">Joint3D</inline></reference> 为 <reference internal="True" refuri="class_conetwistjoint3d#class-conetwistjoint3d"><inline classes="std std-ref">ConeTwistJoint3D</inline></reference>。</paragraph>
            <target refid="class-physicsserver3d-constant-joint-type-6dof"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-joint-type-6dof" names="class_physicsserver3d_constant_joint_type_6dof"><reference internal="True" refid="enum-physicsserver3d-jointtype"><inline classes="std std-ref">JointType</inline></reference> <strong>JOINT_TYPE_6DOF</strong> = <literal>4</literal></paragraph>
            <paragraph>该 <reference internal="True" refuri="class_joint3d#class-joint3d"><inline classes="std std-ref">Joint3D</inline></reference> 为 <reference internal="True" refuri="class_generic6dofjoint3d#class-generic6dofjoint3d"><inline classes="std std-ref">Generic6DOFJoint3D</inline></reference>。</paragraph>
            <target refid="class-physicsserver3d-constant-joint-type-max"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-joint-type-max" names="class_physicsserver3d_constant_joint_type_max"><reference internal="True" refid="enum-physicsserver3d-jointtype"><inline classes="std std-ref">JointType</inline></reference> <strong>JOINT_TYPE_MAX</strong> = <literal>5</literal></paragraph>
            <paragraph>代表 <reference internal="True" refid="enum-physicsserver3d-jointtype"><inline classes="std std-ref">JointType</inline></reference> 枚举的大小。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-physicsserver3d-pinjointparam"></target>
            <paragraph classes="classref-enumeration" ids="enum-physicsserver3d-pinjointparam" names="enum_physicsserver3d_pinjointparam">enum <strong>PinJointParam</strong>: <reference internal="True" refid="enum-physicsserver3d-pinjointparam"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-physicsserver3d-constant-pin-joint-bias"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-pin-joint-bias" names="class_physicsserver3d_constant_pin_joint_bias"><reference internal="True" refid="enum-physicsserver3d-pinjointparam"><inline classes="std std-ref">PinJointParam</inline></reference> <strong>PIN_JOINT_BIAS</strong> = <literal>0</literal></paragraph>
            <paragraph>固定对象试图保持彼此位置关系的力度。</paragraph>
            <paragraph>越高越强。</paragraph>
            <target refid="class-physicsserver3d-constant-pin-joint-damping"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-pin-joint-damping" names="class_physicsserver3d_constant_pin_joint_damping"><reference internal="True" refid="enum-physicsserver3d-pinjointparam"><inline classes="std std-ref">PinJointParam</inline></reference> <strong>PIN_JOINT_DAMPING</strong> = <literal>1</literal></paragraph>
            <paragraph>被固定的物体试图保持彼此速度关系的力度。</paragraph>
            <paragraph>越高越强。</paragraph>
            <target refid="class-physicsserver3d-constant-pin-joint-impulse-clamp"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-pin-joint-impulse-clamp" names="class_physicsserver3d_constant_pin_joint_impulse_clamp"><reference internal="True" refid="enum-physicsserver3d-pinjointparam"><inline classes="std std-ref">PinJointParam</inline></reference> <strong>PIN_JOINT_IMPULSE_CLAMP</strong> = <literal>2</literal></paragraph>
            <paragraph>如果高于 0，则此值是此 Joint3D 施加在其末端的冲量的最大值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-physicsserver3d-hingejointparam"></target>
            <paragraph classes="classref-enumeration" ids="enum-physicsserver3d-hingejointparam" names="enum_physicsserver3d_hingejointparam">enum <strong>HingeJointParam</strong>: <reference internal="True" refid="enum-physicsserver3d-hingejointparam"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-physicsserver3d-constant-hinge-joint-bias"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-hinge-joint-bias" names="class_physicsserver3d_constant_hinge_joint_bias"><reference internal="True" refid="enum-physicsserver3d-hingejointparam"><inline classes="std std-ref">HingeJointParam</inline></reference> <strong>HINGE_JOINT_BIAS</strong> = <literal>0</literal></paragraph>
            <paragraph>两个物体向不同方向移动时被拉回到一起的速度。</paragraph>
            <target refid="class-physicsserver3d-constant-hinge-joint-limit-upper"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-hinge-joint-limit-upper" names="class_physicsserver3d_constant_hinge_joint_limit_upper"><reference internal="True" refid="enum-physicsserver3d-hingejointparam"><inline classes="std std-ref">HingeJointParam</inline></reference> <strong>HINGE_JOINT_LIMIT_UPPER</strong> = <literal>1</literal></paragraph>
            <paragraph>铰链上的最大旋转。</paragraph>
            <target refid="class-physicsserver3d-constant-hinge-joint-limit-lower"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-hinge-joint-limit-lower" names="class_physicsserver3d_constant_hinge_joint_limit_lower"><reference internal="True" refid="enum-physicsserver3d-hingejointparam"><inline classes="std std-ref">HingeJointParam</inline></reference> <strong>HINGE_JOINT_LIMIT_LOWER</strong> = <literal>2</literal></paragraph>
            <paragraph>铰链上的最小旋转。</paragraph>
            <target refid="class-physicsserver3d-constant-hinge-joint-limit-bias"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-hinge-joint-limit-bias" names="class_physicsserver3d_constant_hinge_joint_limit_bias"><reference internal="True" refid="enum-physicsserver3d-hingejointparam"><inline classes="std std-ref">HingeJointParam</inline></reference> <strong>HINGE_JOINT_LIMIT_BIAS</strong> = <literal>3</literal></paragraph>
            <paragraph>垂直于铰链的轴线上的旋转得到纠正的速度。</paragraph>
            <target refid="class-physicsserver3d-constant-hinge-joint-limit-softness"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-hinge-joint-limit-softness" names="class_physicsserver3d_constant_hinge_joint_limit_softness"><reference internal="True" refid="enum-physicsserver3d-hingejointparam"><inline classes="std std-ref">HingeJointParam</inline></reference> <strong>HINGE_JOINT_LIMIT_SOFTNESS</strong> = <literal>4</literal></paragraph>
            <container classes="contribute">
                <paragraph>该枚举目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
            <target refid="class-physicsserver3d-constant-hinge-joint-limit-relaxation"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-hinge-joint-limit-relaxation" names="class_physicsserver3d_constant_hinge_joint_limit_relaxation"><reference internal="True" refid="enum-physicsserver3d-hingejointparam"><inline classes="std std-ref">HingeJointParam</inline></reference> <strong>HINGE_JOINT_LIMIT_RELAXATION</strong> = <literal>5</literal></paragraph>
            <paragraph>该值越低，旋转速度越慢。</paragraph>
            <target refid="class-physicsserver3d-constant-hinge-joint-motor-target-velocity"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-hinge-joint-motor-target-velocity" names="class_physicsserver3d_constant_hinge_joint_motor_target_velocity"><reference internal="True" refid="enum-physicsserver3d-hingejointparam"><inline classes="std std-ref">HingeJointParam</inline></reference> <strong>HINGE_JOINT_MOTOR_TARGET_VELOCITY</strong> = <literal>6</literal></paragraph>
            <paragraph>目标马达的目标速度。</paragraph>
            <target refid="class-physicsserver3d-constant-hinge-joint-motor-max-impulse"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-hinge-joint-motor-max-impulse" names="class_physicsserver3d_constant_hinge_joint_motor_max_impulse"><reference internal="True" refid="enum-physicsserver3d-hingejointparam"><inline classes="std std-ref">HingeJointParam</inline></reference> <strong>HINGE_JOINT_MOTOR_MAX_IMPULSE</strong> = <literal>7</literal></paragraph>
            <paragraph>马达的最大加速度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-physicsserver3d-hingejointflag"></target>
            <paragraph classes="classref-enumeration" ids="enum-physicsserver3d-hingejointflag" names="enum_physicsserver3d_hingejointflag">enum <strong>HingeJointFlag</strong>: <reference internal="True" refid="enum-physicsserver3d-hingejointflag"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-physicsserver3d-constant-hinge-joint-flag-use-limit"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-hinge-joint-flag-use-limit" names="class_physicsserver3d_constant_hinge_joint_flag_use_limit"><reference internal="True" refid="enum-physicsserver3d-hingejointflag"><inline classes="std std-ref">HingeJointFlag</inline></reference> <strong>HINGE_JOINT_FLAG_USE_LIMIT</strong> = <literal>0</literal></paragraph>
            <paragraph>如果为 <literal>true</literal>，铰链具有最大和最小旋转。</paragraph>
            <target refid="class-physicsserver3d-constant-hinge-joint-flag-enable-motor"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-hinge-joint-flag-enable-motor" names="class_physicsserver3d_constant_hinge_joint_flag_enable_motor"><reference internal="True" refid="enum-physicsserver3d-hingejointflag"><inline classes="std std-ref">HingeJointFlag</inline></reference> <strong>HINGE_JOINT_FLAG_ENABLE_MOTOR</strong> = <literal>1</literal></paragraph>
            <paragraph>如果为 <literal>true</literal>，则马达将转动铰链。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-physicsserver3d-sliderjointparam"></target>
            <paragraph classes="classref-enumeration" ids="enum-physicsserver3d-sliderjointparam" names="enum_physicsserver3d_sliderjointparam">enum <strong>SliderJointParam</strong>: <reference internal="True" refid="enum-physicsserver3d-sliderjointparam"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-physicsserver3d-constant-slider-joint-linear-limit-upper"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-slider-joint-linear-limit-upper" names="class_physicsserver3d_constant_slider_joint_linear_limit_upper"><reference internal="True" refid="enum-physicsserver3d-sliderjointparam"><inline classes="std std-ref">SliderJointParam</inline></reference> <strong>SLIDER_JOINT_LINEAR_LIMIT_UPPER</strong> = <literal>0</literal></paragraph>
            <paragraph>阻尼发生前轴心点之间在 X 轴上的最大差异。</paragraph>
            <target refid="class-physicsserver3d-constant-slider-joint-linear-limit-lower"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-slider-joint-linear-limit-lower" names="class_physicsserver3d_constant_slider_joint_linear_limit_lower"><reference internal="True" refid="enum-physicsserver3d-sliderjointparam"><inline classes="std std-ref">SliderJointParam</inline></reference> <strong>SLIDER_JOINT_LINEAR_LIMIT_LOWER</strong> = <literal>1</literal></paragraph>
            <paragraph>阻尼发生前轴心点之间在 X 轴上的最小差异。</paragraph>
            <target refid="class-physicsserver3d-constant-slider-joint-linear-limit-softness"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-slider-joint-linear-limit-softness" names="class_physicsserver3d_constant_slider_joint_linear_limit_softness"><reference internal="True" refid="enum-physicsserver3d-sliderjointparam"><inline classes="std std-ref">SliderJointParam</inline></reference> <strong>SLIDER_JOINT_LINEAR_LIMIT_SOFTNESS</strong> = <literal>2</literal></paragraph>
            <paragraph>一旦超过极限，应用于滑块轴上移动的系数。越低，运动越慢。</paragraph>
            <target refid="class-physicsserver3d-constant-slider-joint-linear-limit-restitution"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-slider-joint-linear-limit-restitution" names="class_physicsserver3d_constant_slider_joint_linear_limit_restitution"><reference internal="True" refid="enum-physicsserver3d-sliderjointparam"><inline classes="std std-ref">SliderJointParam</inline></reference> <strong>SLIDER_JOINT_LINEAR_LIMIT_RESTITUTION</strong> = <literal>3</literal></paragraph>
            <paragraph>超出限制后的补偿。数值越低，损失的速度能量越多。</paragraph>
            <target refid="class-physicsserver3d-constant-slider-joint-linear-limit-damping"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-slider-joint-linear-limit-damping" names="class_physicsserver3d_constant_slider_joint_linear_limit_damping"><reference internal="True" refid="enum-physicsserver3d-sliderjointparam"><inline classes="std std-ref">SliderJointParam</inline></reference> <strong>SLIDER_JOINT_LINEAR_LIMIT_DAMPING</strong> = <literal>4</literal></paragraph>
            <paragraph>一旦超过滑块的极限，阻尼的数量。</paragraph>
            <target refid="class-physicsserver3d-constant-slider-joint-linear-motion-softness"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-slider-joint-linear-motion-softness" names="class_physicsserver3d_constant_slider_joint_linear_motion_softness"><reference internal="True" refid="enum-physicsserver3d-sliderjointparam"><inline classes="std std-ref">SliderJointParam</inline></reference> <strong>SLIDER_JOINT_LINEAR_MOTION_SOFTNESS</strong> = <literal>5</literal></paragraph>
            <paragraph>只要滑块在限制范围内，就应用于滑块轴上移动的系数。越低，运动越慢。</paragraph>
            <target refid="class-physicsserver3d-constant-slider-joint-linear-motion-restitution"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-slider-joint-linear-motion-restitution" names="class_physicsserver3d_constant_slider_joint_linear_motion_restitution"><reference internal="True" refid="enum-physicsserver3d-sliderjointparam"><inline classes="std std-ref">SliderJointParam</inline></reference> <strong>SLIDER_JOINT_LINEAR_MOTION_RESTITUTION</strong> = <literal>6</literal></paragraph>
            <paragraph>滑块限制内的恢复量。</paragraph>
            <target refid="class-physicsserver3d-constant-slider-joint-linear-motion-damping"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-slider-joint-linear-motion-damping" names="class_physicsserver3d_constant_slider_joint_linear_motion_damping"><reference internal="True" refid="enum-physicsserver3d-sliderjointparam"><inline classes="std std-ref">SliderJointParam</inline></reference> <strong>SLIDER_JOINT_LINEAR_MOTION_DAMPING</strong> = <literal>7</literal></paragraph>
            <paragraph>滑块内部的阻尼量受到限制。</paragraph>
            <target refid="class-physicsserver3d-constant-slider-joint-linear-orthogonal-softness"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-slider-joint-linear-orthogonal-softness" names="class_physicsserver3d_constant_slider_joint_linear_orthogonal_softness"><reference internal="True" refid="enum-physicsserver3d-sliderjointparam"><inline classes="std std-ref">SliderJointParam</inline></reference> <strong>SLIDER_JOINT_LINEAR_ORTHOGONAL_SOFTNESS</strong> = <literal>8</literal></paragraph>
            <paragraph>应用于在垂直于滑块的轴上移动的系数。</paragraph>
            <target refid="class-physicsserver3d-constant-slider-joint-linear-orthogonal-restitution"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-slider-joint-linear-orthogonal-restitution" names="class_physicsserver3d_constant_slider_joint_linear_orthogonal_restitution"><reference internal="True" refid="enum-physicsserver3d-sliderjointparam"><inline classes="std std-ref">SliderJointParam</inline></reference> <strong>SLIDER_JOINT_LINEAR_ORTHOGONAL_RESTITUTION</strong> = <literal>9</literal></paragraph>
            <paragraph>当移动穿过垂直于滑块的轴时的恢复量。</paragraph>
            <target refid="class-physicsserver3d-constant-slider-joint-linear-orthogonal-damping"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-slider-joint-linear-orthogonal-damping" names="class_physicsserver3d_constant_slider_joint_linear_orthogonal_damping"><reference internal="True" refid="enum-physicsserver3d-sliderjointparam"><inline classes="std std-ref">SliderJointParam</inline></reference> <strong>SLIDER_JOINT_LINEAR_ORTHOGONAL_DAMPING</strong> = <literal>10</literal></paragraph>
            <paragraph>当移动穿过垂直于滑块的轴时的阻尼量。</paragraph>
            <target refid="class-physicsserver3d-constant-slider-joint-angular-limit-upper"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-slider-joint-angular-limit-upper" names="class_physicsserver3d_constant_slider_joint_angular_limit_upper"><reference internal="True" refid="enum-physicsserver3d-sliderjointparam"><inline classes="std std-ref">SliderJointParam</inline></reference> <strong>SLIDER_JOINT_ANGULAR_LIMIT_UPPER</strong> = <literal>11</literal></paragraph>
            <paragraph>滑块旋转的上限。</paragraph>
            <target refid="class-physicsserver3d-constant-slider-joint-angular-limit-lower"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-slider-joint-angular-limit-lower" names="class_physicsserver3d_constant_slider_joint_angular_limit_lower"><reference internal="True" refid="enum-physicsserver3d-sliderjointparam"><inline classes="std std-ref">SliderJointParam</inline></reference> <strong>SLIDER_JOINT_ANGULAR_LIMIT_LOWER</strong> = <literal>12</literal></paragraph>
            <paragraph>滑块旋转的下限。</paragraph>
            <target refid="class-physicsserver3d-constant-slider-joint-angular-limit-softness"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-slider-joint-angular-limit-softness" names="class_physicsserver3d_constant_slider_joint_angular_limit_softness"><reference internal="True" refid="enum-physicsserver3d-sliderjointparam"><inline classes="std std-ref">SliderJointParam</inline></reference> <strong>SLIDER_JOINT_ANGULAR_LIMIT_SOFTNESS</strong> = <literal>13</literal></paragraph>
            <paragraph>一旦超过极限，应用于所有旋转的系数。</paragraph>
            <target refid="class-physicsserver3d-constant-slider-joint-angular-limit-restitution"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-slider-joint-angular-limit-restitution" names="class_physicsserver3d_constant_slider_joint_angular_limit_restitution"><reference internal="True" refid="enum-physicsserver3d-sliderjointparam"><inline classes="std std-ref">SliderJointParam</inline></reference> <strong>SLIDER_JOINT_ANGULAR_LIMIT_RESTITUTION</strong> = <literal>14</literal></paragraph>
            <paragraph>超过限制时旋转的恢复量。</paragraph>
            <target refid="class-physicsserver3d-constant-slider-joint-angular-limit-damping"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-slider-joint-angular-limit-damping" names="class_physicsserver3d_constant_slider_joint_angular_limit_damping"><reference internal="True" refid="enum-physicsserver3d-sliderjointparam"><inline classes="std std-ref">SliderJointParam</inline></reference> <strong>SLIDER_JOINT_ANGULAR_LIMIT_DAMPING</strong> = <literal>15</literal></paragraph>
            <paragraph>超过极限时旋转的阻尼量。</paragraph>
            <target refid="class-physicsserver3d-constant-slider-joint-angular-motion-softness"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-slider-joint-angular-motion-softness" names="class_physicsserver3d_constant_slider_joint_angular_motion_softness"><reference internal="True" refid="enum-physicsserver3d-sliderjointparam"><inline classes="std std-ref">SliderJointParam</inline></reference> <strong>SLIDER_JOINT_ANGULAR_MOTION_SOFTNESS</strong> = <literal>16</literal></paragraph>
            <paragraph>应用于所有极限旋转的因子。</paragraph>
            <target refid="class-physicsserver3d-constant-slider-joint-angular-motion-restitution"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-slider-joint-angular-motion-restitution" names="class_physicsserver3d_constant_slider_joint_angular_motion_restitution"><reference internal="True" refid="enum-physicsserver3d-sliderjointparam"><inline classes="std std-ref">SliderJointParam</inline></reference> <strong>SLIDER_JOINT_ANGULAR_MOTION_RESTITUTION</strong> = <literal>17</literal></paragraph>
            <paragraph>极限内旋转的恢复量。</paragraph>
            <target refid="class-physicsserver3d-constant-slider-joint-angular-motion-damping"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-slider-joint-angular-motion-damping" names="class_physicsserver3d_constant_slider_joint_angular_motion_damping"><reference internal="True" refid="enum-physicsserver3d-sliderjointparam"><inline classes="std std-ref">SliderJointParam</inline></reference> <strong>SLIDER_JOINT_ANGULAR_MOTION_DAMPING</strong> = <literal>18</literal></paragraph>
            <paragraph>极限内旋转的阻尼量。</paragraph>
            <target refid="class-physicsserver3d-constant-slider-joint-angular-orthogonal-softness"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-slider-joint-angular-orthogonal-softness" names="class_physicsserver3d_constant_slider_joint_angular_orthogonal_softness"><reference internal="True" refid="enum-physicsserver3d-sliderjointparam"><inline classes="std std-ref">SliderJointParam</inline></reference> <strong>SLIDER_JOINT_ANGULAR_ORTHOGONAL_SOFTNESS</strong> = <literal>19</literal></paragraph>
            <paragraph>应用于垂直于滑块的轴上的所有旋转的因子。</paragraph>
            <target refid="class-physicsserver3d-constant-slider-joint-angular-orthogonal-restitution"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-slider-joint-angular-orthogonal-restitution" names="class_physicsserver3d_constant_slider_joint_angular_orthogonal_restitution"><reference internal="True" refid="enum-physicsserver3d-sliderjointparam"><inline classes="std std-ref">SliderJointParam</inline></reference> <strong>SLIDER_JOINT_ANGULAR_ORTHOGONAL_RESTITUTION</strong> = <literal>20</literal></paragraph>
            <paragraph>垂直于滑块的轴上的旋转恢复量。</paragraph>
            <target refid="class-physicsserver3d-constant-slider-joint-angular-orthogonal-damping"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-slider-joint-angular-orthogonal-damping" names="class_physicsserver3d_constant_slider_joint_angular_orthogonal_damping"><reference internal="True" refid="enum-physicsserver3d-sliderjointparam"><inline classes="std std-ref">SliderJointParam</inline></reference> <strong>SLIDER_JOINT_ANGULAR_ORTHOGONAL_DAMPING</strong> = <literal>21</literal></paragraph>
            <paragraph>垂直于滑块的轴上的旋转阻尼量。</paragraph>
            <target refid="class-physicsserver3d-constant-slider-joint-max"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-slider-joint-max" names="class_physicsserver3d_constant_slider_joint_max"><reference internal="True" refid="enum-physicsserver3d-sliderjointparam"><inline classes="std std-ref">SliderJointParam</inline></reference> <strong>SLIDER_JOINT_MAX</strong> = <literal>22</literal></paragraph>
            <paragraph>代表 <reference internal="True" refid="enum-physicsserver3d-sliderjointparam"><inline classes="std std-ref">SliderJointParam</inline></reference> 枚举的大小。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-physicsserver3d-conetwistjointparam"></target>
            <paragraph classes="classref-enumeration" ids="enum-physicsserver3d-conetwistjointparam" names="enum_physicsserver3d_conetwistjointparam">enum <strong>ConeTwistJointParam</strong>: <reference internal="True" refid="enum-physicsserver3d-conetwistjointparam"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-physicsserver3d-constant-cone-twist-joint-swing-span"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-cone-twist-joint-swing-span" names="class_physicsserver3d_constant_cone_twist_joint_swing_span"><reference internal="True" refid="enum-physicsserver3d-conetwistjointparam"><inline classes="std std-ref">ConeTwistJointParam</inline></reference> <strong>CONE_TWIST_JOINT_SWING_SPAN</strong> = <literal>0</literal></paragraph>
            <paragraph>摆动是围绕垂直于扭转轴的轴线，从一边到另一边的旋转。</paragraph>
            <paragraph>摆动跨度定义了沿摆动轴旋转多少不会得到校正。</paragraph>
            <paragraph>可以被定义为 <reference internal="True" refuri="class_conetwistjoint3d#class-conetwistjoint3d"><inline classes="std std-ref">ConeTwistJoint3D</inline></reference> 中的松动。</paragraph>
            <paragraph>如果低于 0.05，该行为将被锁定。</paragraph>
            <target refid="class-physicsserver3d-constant-cone-twist-joint-twist-span"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-cone-twist-joint-twist-span" names="class_physicsserver3d_constant_cone_twist_joint_twist_span"><reference internal="True" refid="enum-physicsserver3d-conetwistjointparam"><inline classes="std std-ref">ConeTwistJointParam</inline></reference> <strong>CONE_TWIST_JOINT_TWIST_SPAN</strong> = <literal>1</literal></paragraph>
            <paragraph>扭转是绕扭转轴的旋转，此值定义了关节可以扭转多远。</paragraph>
            <paragraph>如果低于 0.05，则扭转被锁定。</paragraph>
            <target refid="class-physicsserver3d-constant-cone-twist-joint-bias"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-cone-twist-joint-bias" names="class_physicsserver3d_constant_cone_twist_joint_bias"><reference internal="True" refid="enum-physicsserver3d-conetwistjointparam"><inline classes="std std-ref">ConeTwistJointParam</inline></reference> <strong>CONE_TWIST_JOINT_BIAS</strong> = <literal>2</literal></paragraph>
            <paragraph>摆动或扭转的速度。</paragraph>
            <paragraph>越高，速度越快。</paragraph>
            <target refid="class-physicsserver3d-constant-cone-twist-joint-softness"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-cone-twist-joint-softness" names="class_physicsserver3d_constant_cone_twist_joint_softness"><reference internal="True" refid="enum-physicsserver3d-conetwistjointparam"><inline classes="std std-ref">ConeTwistJointParam</inline></reference> <strong>CONE_TWIST_JOINT_SOFTNESS</strong> = <literal>3</literal></paragraph>
            <paragraph>Joint3D 的扭曲弹性，如果太低，就需要更大的力才能扭曲关节。</paragraph>
            <target refid="class-physicsserver3d-constant-cone-twist-joint-relaxation"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-cone-twist-joint-relaxation" names="class_physicsserver3d_constant_cone_twist_joint_relaxation"><reference internal="True" refid="enum-physicsserver3d-conetwistjointparam"><inline classes="std std-ref">ConeTwistJointParam</inline></reference> <strong>CONE_TWIST_JOINT_RELAXATION</strong> = <literal>4</literal></paragraph>
            <paragraph>定义两侧的摆动速度和扭转速度差异同步的速度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-physicsserver3d-g6dofjointaxisparam"></target>
            <paragraph classes="classref-enumeration" ids="enum-physicsserver3d-g6dofjointaxisparam" names="enum_physicsserver3d_g6dofjointaxisparam">enum <strong>G6DOFJointAxisParam</strong>: <reference internal="True" refid="enum-physicsserver3d-g6dofjointaxisparam"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-physicsserver3d-constant-g6dof-joint-linear-lower-limit"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-g6dof-joint-linear-lower-limit" names="class_physicsserver3d_constant_g6dof_joint_linear_lower_limit"><reference internal="True" refid="enum-physicsserver3d-g6dofjointaxisparam"><inline classes="std std-ref">G6DOFJointAxisParam</inline></reference> <strong>G6DOF_JOINT_LINEAR_LOWER_LIMIT</strong> = <literal>0</literal></paragraph>
            <paragraph>轴心点的轴之间的最小差异。</paragraph>
            <target refid="class-physicsserver3d-constant-g6dof-joint-linear-upper-limit"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-g6dof-joint-linear-upper-limit" names="class_physicsserver3d_constant_g6dof_joint_linear_upper_limit"><reference internal="True" refid="enum-physicsserver3d-g6dofjointaxisparam"><inline classes="std std-ref">G6DOFJointAxisParam</inline></reference> <strong>G6DOF_JOINT_LINEAR_UPPER_LIMIT</strong> = <literal>1</literal></paragraph>
            <paragraph>轴心点的轴之间的最大差异。</paragraph>
            <target refid="class-physicsserver3d-constant-g6dof-joint-linear-limit-softness"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-g6dof-joint-linear-limit-softness" names="class_physicsserver3d_constant_g6dof_joint_linear_limit_softness"><reference internal="True" refid="enum-physicsserver3d-g6dofjointaxisparam"><inline classes="std std-ref">G6DOFJointAxisParam</inline></reference> <strong>G6DOF_JOINT_LINEAR_LIMIT_SOFTNESS</strong> = <literal>2</literal></paragraph>
            <paragraph>应用于跨轴移动的因子。越低，运动越慢。</paragraph>
            <target refid="class-physicsserver3d-constant-g6dof-joint-linear-restitution"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-g6dof-joint-linear-restitution" names="class_physicsserver3d_constant_g6dof_joint_linear_restitution"><reference internal="True" refid="enum-physicsserver3d-g6dofjointaxisparam"><inline classes="std std-ref">G6DOFJointAxisParam</inline></reference> <strong>G6DOF_JOINT_LINEAR_RESTITUTION</strong> = <literal>3</literal></paragraph>
            <paragraph>轴运动的恢复量。速度越低，能量损失越多。</paragraph>
            <target refid="class-physicsserver3d-constant-g6dof-joint-linear-damping"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-g6dof-joint-linear-damping" names="class_physicsserver3d_constant_g6dof_joint_linear_damping"><reference internal="True" refid="enum-physicsserver3d-g6dofjointaxisparam"><inline classes="std std-ref">G6DOFJointAxisParam</inline></reference> <strong>G6DOF_JOINT_LINEAR_DAMPING</strong> = <literal>4</literal></paragraph>
            <paragraph>发生在跨轴线性运动的阻尼量。</paragraph>
            <target refid="class-physicsserver3d-constant-g6dof-joint-linear-motor-target-velocity"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-g6dof-joint-linear-motor-target-velocity" names="class_physicsserver3d_constant_g6dof_joint_linear_motor_target_velocity"><reference internal="True" refid="enum-physicsserver3d-g6dofjointaxisparam"><inline classes="std std-ref">G6DOFJointAxisParam</inline></reference> <strong>G6DOF_JOINT_LINEAR_MOTOR_TARGET_VELOCITY</strong> = <literal>5</literal></paragraph>
            <paragraph>关节的线性马达试图达到的速度。</paragraph>
            <target refid="class-physicsserver3d-constant-g6dof-joint-linear-motor-force-limit"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-g6dof-joint-linear-motor-force-limit" names="class_physicsserver3d_constant_g6dof_joint_linear_motor_force_limit"><reference internal="True" refid="enum-physicsserver3d-g6dofjointaxisparam"><inline classes="std std-ref">G6DOFJointAxisParam</inline></reference> <strong>G6DOF_JOINT_LINEAR_MOTOR_FORCE_LIMIT</strong> = <literal>6</literal></paragraph>
            <paragraph>线性马达在试图达到目标速度时可以施加的最大力。</paragraph>
            <target refid="class-physicsserver3d-constant-g6dof-joint-linear-spring-stiffness"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-g6dof-joint-linear-spring-stiffness" names="class_physicsserver3d_constant_g6dof_joint_linear_spring_stiffness"><reference internal="True" refid="enum-physicsserver3d-g6dofjointaxisparam"><inline classes="std std-ref">G6DOFJointAxisParam</inline></reference> <strong>G6DOF_JOINT_LINEAR_SPRING_STIFFNESS</strong> = <literal>7</literal></paragraph>
            <container classes="contribute">
                <paragraph>该枚举目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
            <target refid="class-physicsserver3d-constant-g6dof-joint-linear-spring-damping"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-g6dof-joint-linear-spring-damping" names="class_physicsserver3d_constant_g6dof_joint_linear_spring_damping"><reference internal="True" refid="enum-physicsserver3d-g6dofjointaxisparam"><inline classes="std std-ref">G6DOFJointAxisParam</inline></reference> <strong>G6DOF_JOINT_LINEAR_SPRING_DAMPING</strong> = <literal>8</literal></paragraph>
            <container classes="contribute">
                <paragraph>该枚举目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
            <target refid="class-physicsserver3d-constant-g6dof-joint-linear-spring-equilibrium-point"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-g6dof-joint-linear-spring-equilibrium-point" names="class_physicsserver3d_constant_g6dof_joint_linear_spring_equilibrium_point"><reference internal="True" refid="enum-physicsserver3d-g6dofjointaxisparam"><inline classes="std std-ref">G6DOFJointAxisParam</inline></reference> <strong>G6DOF_JOINT_LINEAR_SPRING_EQUILIBRIUM_POINT</strong> = <literal>9</literal></paragraph>
            <container classes="contribute">
                <paragraph>该枚举目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
            <target refid="class-physicsserver3d-constant-g6dof-joint-angular-lower-limit"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-g6dof-joint-angular-lower-limit" names="class_physicsserver3d_constant_g6dof_joint_angular_lower_limit"><reference internal="True" refid="enum-physicsserver3d-g6dofjointaxisparam"><inline classes="std std-ref">G6DOFJointAxisParam</inline></reference> <strong>G6DOF_JOINT_ANGULAR_LOWER_LIMIT</strong> = <literal>10</literal></paragraph>
            <paragraph>负方向的最小旋转，以脱离和绕轴旋转。</paragraph>
            <target refid="class-physicsserver3d-constant-g6dof-joint-angular-upper-limit"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-g6dof-joint-angular-upper-limit" names="class_physicsserver3d_constant_g6dof_joint_angular_upper_limit"><reference internal="True" refid="enum-physicsserver3d-g6dofjointaxisparam"><inline classes="std std-ref">G6DOFJointAxisParam</inline></reference> <strong>G6DOF_JOINT_ANGULAR_UPPER_LIMIT</strong> = <literal>11</literal></paragraph>
            <paragraph>正方向的最小旋转，以挣脱和绕轴旋转。</paragraph>
            <target refid="class-physicsserver3d-constant-g6dof-joint-angular-limit-softness"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-g6dof-joint-angular-limit-softness" names="class_physicsserver3d_constant_g6dof_joint_angular_limit_softness"><reference internal="True" refid="enum-physicsserver3d-g6dofjointaxisparam"><inline classes="std std-ref">G6DOFJointAxisParam</inline></reference> <strong>G6DOF_JOINT_ANGULAR_LIMIT_SOFTNESS</strong> = <literal>12</literal></paragraph>
            <paragraph>乘以所有轴旋转的因子。</paragraph>
            <target refid="class-physicsserver3d-constant-g6dof-joint-angular-damping"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-g6dof-joint-angular-damping" names="class_physicsserver3d_constant_g6dof_joint_angular_damping"><reference internal="True" refid="enum-physicsserver3d-g6dofjointaxisparam"><inline classes="std std-ref">G6DOFJointAxisParam</inline></reference> <strong>G6DOF_JOINT_ANGULAR_DAMPING</strong> = <literal>13</literal></paragraph>
            <paragraph>跨该轴的旋转阻尼量。值越低，发生的阻尼就越多。</paragraph>
            <target refid="class-physicsserver3d-constant-g6dof-joint-angular-restitution"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-g6dof-joint-angular-restitution" names="class_physicsserver3d_constant_g6dof_joint_angular_restitution"><reference internal="True" refid="enum-physicsserver3d-g6dofjointaxisparam"><inline classes="std std-ref">G6DOFJointAxisParam</inline></reference> <strong>G6DOF_JOINT_ANGULAR_RESTITUTION</strong> = <literal>14</literal></paragraph>
            <paragraph>在各轴上的旋转恢复量。值越低，发生的恢复量越大。</paragraph>
            <target refid="class-physicsserver3d-constant-g6dof-joint-angular-force-limit"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-g6dof-joint-angular-force-limit" names="class_physicsserver3d_constant_g6dof_joint_angular_force_limit"><reference internal="True" refid="enum-physicsserver3d-g6dofjointaxisparam"><inline classes="std std-ref">G6DOFJointAxisParam</inline></reference> <strong>G6DOF_JOINT_ANGULAR_FORCE_LIMIT</strong> = <literal>15</literal></paragraph>
            <paragraph>围绕 Z 轴旋转时，可能发生的最大力。</paragraph>
            <target refid="class-physicsserver3d-constant-g6dof-joint-angular-erp"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-g6dof-joint-angular-erp" names="class_physicsserver3d_constant_g6dof_joint_angular_erp"><reference internal="True" refid="enum-physicsserver3d-g6dofjointaxisparam"><inline classes="std std-ref">G6DOFJointAxisParam</inline></reference> <strong>G6DOF_JOINT_ANGULAR_ERP</strong> = <literal>16</literal></paragraph>
            <paragraph>当校正轴旋转中的极限交叉时，该误差容限因子定义了校正的减慢程度。越低越慢。</paragraph>
            <target refid="class-physicsserver3d-constant-g6dof-joint-angular-motor-target-velocity"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-g6dof-joint-angular-motor-target-velocity" names="class_physicsserver3d_constant_g6dof_joint_angular_motor_target_velocity"><reference internal="True" refid="enum-physicsserver3d-g6dofjointaxisparam"><inline classes="std std-ref">G6DOFJointAxisParam</inline></reference> <strong>G6DOF_JOINT_ANGULAR_MOTOR_TARGET_VELOCITY</strong> = <literal>17</literal></paragraph>
            <paragraph>轴上电机的目标速度。</paragraph>
            <target refid="class-physicsserver3d-constant-g6dof-joint-angular-motor-force-limit"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-g6dof-joint-angular-motor-force-limit" names="class_physicsserver3d_constant_g6dof_joint_angular_motor_force_limit"><reference internal="True" refid="enum-physicsserver3d-g6dofjointaxisparam"><inline classes="std std-ref">G6DOFJointAxisParam</inline></reference> <strong>G6DOF_JOINT_ANGULAR_MOTOR_FORCE_LIMIT</strong> = <literal>18</literal></paragraph>
            <paragraph>马达在轴上的最大加速度。</paragraph>
            <target refid="class-physicsserver3d-constant-g6dof-joint-angular-spring-stiffness"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-g6dof-joint-angular-spring-stiffness" names="class_physicsserver3d_constant_g6dof_joint_angular_spring_stiffness"><reference internal="True" refid="enum-physicsserver3d-g6dofjointaxisparam"><inline classes="std std-ref">G6DOFJointAxisParam</inline></reference> <strong>G6DOF_JOINT_ANGULAR_SPRING_STIFFNESS</strong> = <literal>19</literal></paragraph>
            <container classes="contribute">
                <paragraph>该枚举目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
            <target refid="class-physicsserver3d-constant-g6dof-joint-angular-spring-damping"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-g6dof-joint-angular-spring-damping" names="class_physicsserver3d_constant_g6dof_joint_angular_spring_damping"><reference internal="True" refid="enum-physicsserver3d-g6dofjointaxisparam"><inline classes="std std-ref">G6DOFJointAxisParam</inline></reference> <strong>G6DOF_JOINT_ANGULAR_SPRING_DAMPING</strong> = <literal>20</literal></paragraph>
            <container classes="contribute">
                <paragraph>该枚举目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
            <target refid="class-physicsserver3d-constant-g6dof-joint-angular-spring-equilibrium-point"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-g6dof-joint-angular-spring-equilibrium-point" names="class_physicsserver3d_constant_g6dof_joint_angular_spring_equilibrium_point"><reference internal="True" refid="enum-physicsserver3d-g6dofjointaxisparam"><inline classes="std std-ref">G6DOFJointAxisParam</inline></reference> <strong>G6DOF_JOINT_ANGULAR_SPRING_EQUILIBRIUM_POINT</strong> = <literal>21</literal></paragraph>
            <container classes="contribute">
                <paragraph>该枚举目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
            <target refid="class-physicsserver3d-constant-g6dof-joint-max"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-g6dof-joint-max" names="class_physicsserver3d_constant_g6dof_joint_max"><reference internal="True" refid="enum-physicsserver3d-g6dofjointaxisparam"><inline classes="std std-ref">G6DOFJointAxisParam</inline></reference> <strong>G6DOF_JOINT_MAX</strong> = <literal>22</literal></paragraph>
            <paragraph>代表 <reference internal="True" refid="enum-physicsserver3d-g6dofjointaxisparam"><inline classes="std std-ref">G6DOFJointAxisParam</inline></reference> 枚举的大小。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-physicsserver3d-g6dofjointaxisflag"></target>
            <paragraph classes="classref-enumeration" ids="enum-physicsserver3d-g6dofjointaxisflag" names="enum_physicsserver3d_g6dofjointaxisflag">enum <strong>G6DOFJointAxisFlag</strong>: <reference internal="True" refid="enum-physicsserver3d-g6dofjointaxisflag"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-physicsserver3d-constant-g6dof-joint-flag-enable-linear-limit"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-g6dof-joint-flag-enable-linear-limit" names="class_physicsserver3d_constant_g6dof_joint_flag_enable_linear_limit"><reference internal="True" refid="enum-physicsserver3d-g6dofjointaxisflag"><inline classes="std std-ref">G6DOFJointAxisFlag</inline></reference> <strong>G6DOF_JOINT_FLAG_ENABLE_LINEAR_LIMIT</strong> = <literal>0</literal></paragraph>
            <paragraph>设置时，可以在给定的范围内做线性运动。</paragraph>
            <target refid="class-physicsserver3d-constant-g6dof-joint-flag-enable-angular-limit"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-g6dof-joint-flag-enable-angular-limit" names="class_physicsserver3d_constant_g6dof_joint_flag_enable_angular_limit"><reference internal="True" refid="enum-physicsserver3d-g6dofjointaxisflag"><inline classes="std std-ref">G6DOFJointAxisFlag</inline></reference> <strong>G6DOF_JOINT_FLAG_ENABLE_ANGULAR_LIMIT</strong> = <literal>1</literal></paragraph>
            <paragraph>设置时，可以做旋转运动。</paragraph>
            <target refid="class-physicsserver3d-constant-g6dof-joint-flag-enable-angular-spring"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-g6dof-joint-flag-enable-angular-spring" names="class_physicsserver3d_constant_g6dof_joint_flag_enable_angular_spring"><reference internal="True" refid="enum-physicsserver3d-g6dofjointaxisflag"><inline classes="std std-ref">G6DOFJointAxisFlag</inline></reference> <strong>G6DOF_JOINT_FLAG_ENABLE_ANGULAR_SPRING</strong> = <literal>2</literal></paragraph>
            <container classes="contribute">
                <paragraph>该枚举目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
            <target refid="class-physicsserver3d-constant-g6dof-joint-flag-enable-linear-spring"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-g6dof-joint-flag-enable-linear-spring" names="class_physicsserver3d_constant_g6dof_joint_flag_enable_linear_spring"><reference internal="True" refid="enum-physicsserver3d-g6dofjointaxisflag"><inline classes="std std-ref">G6DOFJointAxisFlag</inline></reference> <strong>G6DOF_JOINT_FLAG_ENABLE_LINEAR_SPRING</strong> = <literal>3</literal></paragraph>
            <container classes="contribute">
                <paragraph>该枚举目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
            <target refid="class-physicsserver3d-constant-g6dof-joint-flag-enable-motor"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-g6dof-joint-flag-enable-motor" names="class_physicsserver3d_constant_g6dof_joint_flag_enable_motor"><reference internal="True" refid="enum-physicsserver3d-g6dofjointaxisflag"><inline classes="std std-ref">G6DOFJointAxisFlag</inline></reference> <strong>G6DOF_JOINT_FLAG_ENABLE_MOTOR</strong> = <literal>4</literal></paragraph>
            <paragraph>设置时，存在跨这些轴的旋转马达。</paragraph>
            <target refid="class-physicsserver3d-constant-g6dof-joint-flag-enable-linear-motor"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-g6dof-joint-flag-enable-linear-motor" names="class_physicsserver3d_constant_g6dof_joint_flag_enable_linear_motor"><reference internal="True" refid="enum-physicsserver3d-g6dofjointaxisflag"><inline classes="std std-ref">G6DOFJointAxisFlag</inline></reference> <strong>G6DOF_JOINT_FLAG_ENABLE_LINEAR_MOTOR</strong> = <literal>5</literal></paragraph>
            <paragraph>设置时，存在跨这些轴的线性马达，以指定的速度为目标。</paragraph>
            <target refid="class-physicsserver3d-constant-g6dof-joint-flag-max"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-g6dof-joint-flag-max" names="class_physicsserver3d_constant_g6dof_joint_flag_max"><reference internal="True" refid="enum-physicsserver3d-g6dofjointaxisflag"><inline classes="std std-ref">G6DOFJointAxisFlag</inline></reference> <strong>G6DOF_JOINT_FLAG_MAX</strong> = <literal>6</literal></paragraph>
            <paragraph>代表 <reference internal="True" refid="enum-physicsserver3d-g6dofjointaxisflag"><inline classes="std std-ref">G6DOFJointAxisFlag</inline></reference> 枚举的大小。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-physicsserver3d-shapetype"></target>
            <paragraph classes="classref-enumeration" ids="enum-physicsserver3d-shapetype" names="enum_physicsserver3d_shapetype">enum <strong>ShapeType</strong>: <reference internal="True" refid="enum-physicsserver3d-shapetype"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-physicsserver3d-constant-shape-world-boundary"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-shape-world-boundary" names="class_physicsserver3d_constant_shape_world_boundary"><reference internal="True" refid="enum-physicsserver3d-shapetype"><inline classes="std std-ref">ShapeType</inline></reference> <strong>SHAPE_WORLD_BOUNDARY</strong> = <literal>0</literal></paragraph>
            <paragraph>该 <reference internal="True" refuri="class_shape3d#class-shape3d"><inline classes="std std-ref">Shape3D</inline></reference> 为 <reference internal="True" refuri="class_worldboundaryshape3d#class-worldboundaryshape3d"><inline classes="std std-ref">WorldBoundaryShape3D</inline></reference>。</paragraph>
            <target refid="class-physicsserver3d-constant-shape-separation-ray"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-shape-separation-ray" names="class_physicsserver3d_constant_shape_separation_ray"><reference internal="True" refid="enum-physicsserver3d-shapetype"><inline classes="std std-ref">ShapeType</inline></reference> <strong>SHAPE_SEPARATION_RAY</strong> = <literal>1</literal></paragraph>
            <paragraph>该 <reference internal="True" refuri="class_shape3d#class-shape3d"><inline classes="std std-ref">Shape3D</inline></reference> 为 <reference internal="True" refuri="class_separationrayshape3d#class-separationrayshape3d"><inline classes="std std-ref">SeparationRayShape3D</inline></reference>。</paragraph>
            <target refid="class-physicsserver3d-constant-shape-sphere"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-shape-sphere" names="class_physicsserver3d_constant_shape_sphere"><reference internal="True" refid="enum-physicsserver3d-shapetype"><inline classes="std std-ref">ShapeType</inline></reference> <strong>SHAPE_SPHERE</strong> = <literal>2</literal></paragraph>
            <paragraph>该 <reference internal="True" refuri="class_shape3d#class-shape3d"><inline classes="std std-ref">Shape3D</inline></reference> 为 <reference internal="True" refuri="class_sphereshape3d#class-sphereshape3d"><inline classes="std std-ref">SphereShape3D</inline></reference>。</paragraph>
            <target refid="class-physicsserver3d-constant-shape-box"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-shape-box" names="class_physicsserver3d_constant_shape_box"><reference internal="True" refid="enum-physicsserver3d-shapetype"><inline classes="std std-ref">ShapeType</inline></reference> <strong>SHAPE_BOX</strong> = <literal>3</literal></paragraph>
            <paragraph>该 <reference internal="True" refuri="class_shape3d#class-shape3d"><inline classes="std std-ref">Shape3D</inline></reference> 为 <reference internal="True" refuri="class_boxshape3d#class-boxshape3d"><inline classes="std std-ref">BoxShape3D</inline></reference>。</paragraph>
            <target refid="class-physicsserver3d-constant-shape-capsule"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-shape-capsule" names="class_physicsserver3d_constant_shape_capsule"><reference internal="True" refid="enum-physicsserver3d-shapetype"><inline classes="std std-ref">ShapeType</inline></reference> <strong>SHAPE_CAPSULE</strong> = <literal>4</literal></paragraph>
            <paragraph>该 <reference internal="True" refuri="class_shape3d#class-shape3d"><inline classes="std std-ref">Shape3D</inline></reference> 为 <reference internal="True" refuri="class_capsuleshape3d#class-capsuleshape3d"><inline classes="std std-ref">CapsuleShape3D</inline></reference>。</paragraph>
            <target refid="class-physicsserver3d-constant-shape-cylinder"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-shape-cylinder" names="class_physicsserver3d_constant_shape_cylinder"><reference internal="True" refid="enum-physicsserver3d-shapetype"><inline classes="std std-ref">ShapeType</inline></reference> <strong>SHAPE_CYLINDER</strong> = <literal>5</literal></paragraph>
            <paragraph>该 <reference internal="True" refuri="class_shape3d#class-shape3d"><inline classes="std std-ref">Shape3D</inline></reference> 为 <reference internal="True" refuri="class_cylindershape3d#class-cylindershape3d"><inline classes="std std-ref">CylinderShape3D</inline></reference>。</paragraph>
            <target refid="class-physicsserver3d-constant-shape-convex-polygon"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-shape-convex-polygon" names="class_physicsserver3d_constant_shape_convex_polygon"><reference internal="True" refid="enum-physicsserver3d-shapetype"><inline classes="std std-ref">ShapeType</inline></reference> <strong>SHAPE_CONVEX_POLYGON</strong> = <literal>6</literal></paragraph>
            <paragraph>该 <reference internal="True" refuri="class_shape3d#class-shape3d"><inline classes="std std-ref">Shape3D</inline></reference> 为 <reference internal="True" refuri="class_convexpolygonshape3d#class-convexpolygonshape3d"><inline classes="std std-ref">ConvexPolygonShape3D</inline></reference>。</paragraph>
            <target refid="class-physicsserver3d-constant-shape-concave-polygon"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-shape-concave-polygon" names="class_physicsserver3d_constant_shape_concave_polygon"><reference internal="True" refid="enum-physicsserver3d-shapetype"><inline classes="std std-ref">ShapeType</inline></reference> <strong>SHAPE_CONCAVE_POLYGON</strong> = <literal>7</literal></paragraph>
            <paragraph>该 <reference internal="True" refuri="class_shape3d#class-shape3d"><inline classes="std std-ref">Shape3D</inline></reference> 为 <reference internal="True" refuri="class_concavepolygonshape3d#class-concavepolygonshape3d"><inline classes="std std-ref">ConcavePolygonShape3D</inline></reference>。</paragraph>
            <target refid="class-physicsserver3d-constant-shape-heightmap"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-shape-heightmap" names="class_physicsserver3d_constant_shape_heightmap"><reference internal="True" refid="enum-physicsserver3d-shapetype"><inline classes="std std-ref">ShapeType</inline></reference> <strong>SHAPE_HEIGHTMAP</strong> = <literal>8</literal></paragraph>
            <paragraph>该 <reference internal="True" refuri="class_shape3d#class-shape3d"><inline classes="std std-ref">Shape3D</inline></reference> 为 <reference internal="True" refuri="class_heightmapshape3d#class-heightmapshape3d"><inline classes="std std-ref">HeightMapShape3D</inline></reference>。</paragraph>
            <target refid="class-physicsserver3d-constant-shape-soft-body"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-shape-soft-body" names="class_physicsserver3d_constant_shape_soft_body"><reference internal="True" refid="enum-physicsserver3d-shapetype"><inline classes="std std-ref">ShapeType</inline></reference> <strong>SHAPE_SOFT_BODY</strong> = <literal>9</literal></paragraph>
            <paragraph>该 <reference internal="True" refuri="class_shape3d#class-shape3d"><inline classes="std std-ref">Shape3D</inline></reference> 是在柔体内部使用的。尝试创建这种形状会导致出错。</paragraph>
            <target refid="class-physicsserver3d-constant-shape-custom"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-shape-custom" names="class_physicsserver3d_constant_shape_custom"><reference internal="True" refid="enum-physicsserver3d-shapetype"><inline classes="std std-ref">ShapeType</inline></reference> <strong>SHAPE_CUSTOM</strong> = <literal>10</literal></paragraph>
            <paragraph>引擎内部会使用这个常量。任何试图创建这种形状的行为都会导致错误。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-physicsserver3d-areaparameter"></target>
            <paragraph classes="classref-enumeration" ids="enum-physicsserver3d-areaparameter" names="enum_physicsserver3d_areaparameter">enum <strong>AreaParameter</strong>: <reference internal="True" refid="enum-physicsserver3d-areaparameter"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-physicsserver3d-constant-area-param-gravity-override-mode"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-area-param-gravity-override-mode" names="class_physicsserver3d_constant_area_param_gravity_override_mode"><reference internal="True" refid="enum-physicsserver3d-areaparameter"><inline classes="std std-ref">AreaParameter</inline></reference> <strong>AREA_PARAM_GRAVITY_OVERRIDE_MODE</strong> = <literal>0</literal></paragraph>
            <paragraph>常量，用于在一个区域中设置/获取重力覆盖模式。有关可能的值，请参阅 <reference internal="True" refid="enum-physicsserver3d-areaspaceoverridemode"><inline classes="std std-ref">AreaSpaceOverrideMode</inline></reference>。</paragraph>
            <target refid="class-physicsserver3d-constant-area-param-gravity"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-area-param-gravity" names="class_physicsserver3d_constant_area_param_gravity"><reference internal="True" refid="enum-physicsserver3d-areaparameter"><inline classes="std std-ref">AreaParameter</inline></reference> <strong>AREA_PARAM_GRAVITY</strong> = <literal>1</literal></paragraph>
            <paragraph>常量，用于设置/获取区域中的重力强度。</paragraph>
            <target refid="class-physicsserver3d-constant-area-param-gravity-vector"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-area-param-gravity-vector" names="class_physicsserver3d_constant_area_param_gravity_vector"><reference internal="True" refid="enum-physicsserver3d-areaparameter"><inline classes="std std-ref">AreaParameter</inline></reference> <strong>AREA_PARAM_GRAVITY_VECTOR</strong> = <literal>2</literal></paragraph>
            <paragraph>常量，用于设置/获取区域中的重力向量/中心。</paragraph>
            <target refid="class-physicsserver3d-constant-area-param-gravity-is-point"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-area-param-gravity-is-point" names="class_physicsserver3d_constant_area_param_gravity_is_point"><reference internal="True" refid="enum-physicsserver3d-areaparameter"><inline classes="std std-ref">AreaParameter</inline></reference> <strong>AREA_PARAM_GRAVITY_IS_POINT</strong> = <literal>3</literal></paragraph>
            <paragraph>常量，用于设置/获取区域中的重力向量是方向，还是中心点。</paragraph>
            <target refid="class-physicsserver3d-constant-area-param-gravity-point-unit-distance"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-area-param-gravity-point-unit-distance" names="class_physicsserver3d_constant_area_param_gravity_point_unit_distance"><reference internal="True" refid="enum-physicsserver3d-areaparameter"><inline classes="std std-ref">AreaParameter</inline></reference> <strong>AREA_PARAM_GRAVITY_POINT_UNIT_DISTANCE</strong> = <literal>4</literal></paragraph>
            <paragraph>常量，用于设置/获取重力强度等于 <reference internal="True" refid="class-physicsserver3d-constant-area-param-gravity"><inline classes="std std-ref">AREA_PARAM_GRAVITY</inline></reference> 控制的重力的距离。例如，在半径为 100 米且表面重力为 4.0 m/s² 的行星上，将重力设置为 4.0，并将单位距离设置为 100.0。重力会根据平方反比定律衰减，因此在该示例中，重力在距中心 200 米处将为 1.0 m/s²（距离的两倍，重力的 1/4），在距中心 50 米处为 16.0 m/s²（距离的一半，重力的 4 倍），依此类推。</paragraph>
            <paragraph>仅当单位距离为正数时，上述情况才成立。当该属性被设置为 0.0 时，无论距离如何，重力都将保持不变。</paragraph>
            <target refid="class-physicsserver3d-constant-area-param-linear-damp-override-mode"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-area-param-linear-damp-override-mode" names="class_physicsserver3d_constant_area_param_linear_damp_override_mode"><reference internal="True" refid="enum-physicsserver3d-areaparameter"><inline classes="std std-ref">AreaParameter</inline></reference> <strong>AREA_PARAM_LINEAR_DAMP_OVERRIDE_MODE</strong> = <literal>5</literal></paragraph>
            <paragraph>常量，用于在一个区域中设置/获取线性阻尼覆盖模式。有关可能的值，请参阅 <reference internal="True" refid="enum-physicsserver3d-areaspaceoverridemode"><inline classes="std std-ref">AreaSpaceOverrideMode</inline></reference>。</paragraph>
            <target refid="class-physicsserver3d-constant-area-param-linear-damp"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-area-param-linear-damp" names="class_physicsserver3d_constant_area_param_linear_damp"><reference internal="True" refid="enum-physicsserver3d-areaparameter"><inline classes="std std-ref">AreaParameter</inline></reference> <strong>AREA_PARAM_LINEAR_DAMP</strong> = <literal>6</literal></paragraph>
            <paragraph>常数，用于设置/获取区域的线性阻尼系数。</paragraph>
            <target refid="class-physicsserver3d-constant-area-param-angular-damp-override-mode"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-area-param-angular-damp-override-mode" names="class_physicsserver3d_constant_area_param_angular_damp_override_mode"><reference internal="True" refid="enum-physicsserver3d-areaparameter"><inline classes="std std-ref">AreaParameter</inline></reference> <strong>AREA_PARAM_ANGULAR_DAMP_OVERRIDE_MODE</strong> = <literal>7</literal></paragraph>
            <paragraph>常量，用于在一个区域中设置/获取角度阻尼覆盖模式。有关可能的值，请参阅 <reference internal="True" refid="enum-physicsserver3d-areaspaceoverridemode"><inline classes="std std-ref">AreaSpaceOverrideMode</inline></reference>。</paragraph>
            <target refid="class-physicsserver3d-constant-area-param-angular-damp"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-area-param-angular-damp" names="class_physicsserver3d_constant_area_param_angular_damp"><reference internal="True" refid="enum-physicsserver3d-areaparameter"><inline classes="std std-ref">AreaParameter</inline></reference> <strong>AREA_PARAM_ANGULAR_DAMP</strong> = <literal>8</literal></paragraph>
            <paragraph>常数，用于设置/获取区域的角度阻尼系数。</paragraph>
            <target refid="class-physicsserver3d-constant-area-param-priority"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-area-param-priority" names="class_physicsserver3d_constant_area_param_priority"><reference internal="True" refid="enum-physicsserver3d-areaparameter"><inline classes="std std-ref">AreaParameter</inline></reference> <strong>AREA_PARAM_PRIORITY</strong> = <literal>9</literal></paragraph>
            <paragraph>常量，用于设置/获取区域的优先级（处理顺序）。</paragraph>
            <target refid="class-physicsserver3d-constant-area-param-wind-force-magnitude"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-area-param-wind-force-magnitude" names="class_physicsserver3d_constant_area_param_wind_force_magnitude"><reference internal="True" refid="enum-physicsserver3d-areaparameter"><inline classes="std std-ref">AreaParameter</inline></reference> <strong>AREA_PARAM_WIND_FORCE_MAGNITUDE</strong> = <literal>10</literal></paragraph>
            <paragraph>常量，用于设置/获取特定于某个区域的风力大小。风力仅施加于 <reference internal="True" refuri="class_softbody3d#class-softbody3d"><inline classes="std std-ref">SoftBody3D</inline></reference> 节点。其他物理体目前不会受到风的影响。</paragraph>
            <target refid="class-physicsserver3d-constant-area-param-wind-source"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-area-param-wind-source" names="class_physicsserver3d_constant_area_param_wind_source"><reference internal="True" refid="enum-physicsserver3d-areaparameter"><inline classes="std std-ref">AreaParameter</inline></reference> <strong>AREA_PARAM_WIND_SOURCE</strong> = <literal>11</literal></paragraph>
            <paragraph>常量，用于设置/获取 3D 向量，该向量指定区域特定的风吹来的原点。</paragraph>
            <target refid="class-physicsserver3d-constant-area-param-wind-direction"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-area-param-wind-direction" names="class_physicsserver3d_constant_area_param_wind_direction"><reference internal="True" refid="enum-physicsserver3d-areaparameter"><inline classes="std std-ref">AreaParameter</inline></reference> <strong>AREA_PARAM_WIND_DIRECTION</strong> = <literal>12</literal></paragraph>
            <paragraph>常量，用于设置/获取 3D 向量，该向量指定区域特定的风吹的方向。</paragraph>
            <target refid="class-physicsserver3d-constant-area-param-wind-attenuation-factor"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-area-param-wind-attenuation-factor" names="class_physicsserver3d_constant_area_param_wind_attenuation_factor"><reference internal="True" refid="enum-physicsserver3d-areaparameter"><inline classes="std std-ref">AreaParameter</inline></reference> <strong>AREA_PARAM_WIND_ATTENUATION_FACTOR</strong> = <literal>13</literal></paragraph>
            <paragraph>常量，用于设置/获取风力随距其原点的距离而减小的指数速率。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-physicsserver3d-areaspaceoverridemode"></target>
            <paragraph classes="classref-enumeration" ids="enum-physicsserver3d-areaspaceoverridemode" names="enum_physicsserver3d_areaspaceoverridemode">enum <strong>AreaSpaceOverrideMode</strong>: <reference internal="True" refid="enum-physicsserver3d-areaspaceoverridemode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-physicsserver3d-constant-area-space-override-disabled"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-area-space-override-disabled" names="class_physicsserver3d_constant_area_space_override_disabled"><reference internal="True" refid="enum-physicsserver3d-areaspaceoverridemode"><inline classes="std std-ref">AreaSpaceOverrideMode</inline></reference> <strong>AREA_SPACE_OVERRIDE_DISABLED</strong> = <literal>0</literal></paragraph>
            <paragraph>该区域不影响重力/阻尼。这些区域的存在通常只是为了检测碰撞、以及物体是否进入或离开它们。</paragraph>
            <target refid="class-physicsserver3d-constant-area-space-override-combine"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-area-space-override-combine" names="class_physicsserver3d_constant_area_space_override_combine"><reference internal="True" refid="enum-physicsserver3d-areaspaceoverridemode"><inline classes="std std-ref">AreaSpaceOverrideMode</inline></reference> <strong>AREA_SPACE_OVERRIDE_COMBINE</strong> = <literal>1</literal></paragraph>
            <paragraph>该区域将其重力/阻尼值加到目前已经计算出的结果上。这样一来，许多重叠的区域可以结合它们的物理运算来创建有趣的效果。</paragraph>
            <target refid="class-physicsserver3d-constant-area-space-override-combine-replace"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-area-space-override-combine-replace" names="class_physicsserver3d_constant_area_space_override_combine_replace"><reference internal="True" refid="enum-physicsserver3d-areaspaceoverridemode"><inline classes="std std-ref">AreaSpaceOverrideMode</inline></reference> <strong>AREA_SPACE_OVERRIDE_COMBINE_REPLACE</strong> = <literal>2</literal></paragraph>
            <paragraph>该区域将其重力/阻尼值加到目前已经计算出的结果上。然后停止考虑其余区域，甚至是默认区域。</paragraph>
            <target refid="class-physicsserver3d-constant-area-space-override-replace"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-area-space-override-replace" names="class_physicsserver3d_constant_area_space_override_replace"><reference internal="True" refid="enum-physicsserver3d-areaspaceoverridemode"><inline classes="std std-ref">AreaSpaceOverrideMode</inline></reference> <strong>AREA_SPACE_OVERRIDE_REPLACE</strong> = <literal>3</literal></paragraph>
            <paragraph>该区域将替换所有重力/阻尼，甚至是默认值，并停止考虑其余区域。</paragraph>
            <target refid="class-physicsserver3d-constant-area-space-override-replace-combine"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-area-space-override-replace-combine" names="class_physicsserver3d_constant_area_space_override_replace_combine"><reference internal="True" refid="enum-physicsserver3d-areaspaceoverridemode"><inline classes="std std-ref">AreaSpaceOverrideMode</inline></reference> <strong>AREA_SPACE_OVERRIDE_REPLACE_COMBINE</strong> = <literal>4</literal></paragraph>
            <paragraph>该区域将替换目前已经计算出的任何重力/阻尼，但仍将继续计算其余区域，直到默认区域。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-physicsserver3d-bodymode"></target>
            <paragraph classes="classref-enumeration" ids="enum-physicsserver3d-bodymode" names="enum_physicsserver3d_bodymode">enum <strong>BodyMode</strong>: <reference internal="True" refid="enum-physicsserver3d-bodymode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-physicsserver3d-constant-body-mode-static"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-body-mode-static" names="class_physicsserver3d_constant_body_mode_static"><reference internal="True" refid="enum-physicsserver3d-bodymode"><inline classes="std std-ref">BodyMode</inline></reference> <strong>BODY_MODE_STATIC</strong> = <literal>0</literal></paragraph>
            <paragraph>常量，用于静态物体。在这种模式下，物体只能由用户代码移动，移动时不会与路径上的其他物体发生碰撞。</paragraph>
            <target refid="class-physicsserver3d-constant-body-mode-kinematic"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-body-mode-kinematic" names="class_physicsserver3d_constant_body_mode_kinematic"><reference internal="True" refid="enum-physicsserver3d-bodymode"><inline classes="std std-ref">BodyMode</inline></reference> <strong>BODY_MODE_KINEMATIC</strong> = <literal>1</literal></paragraph>
            <paragraph>常量，用于运动学物体。在这种模式下，物体只能由用户代码移动，会与路径上的其他物体发生碰撞。</paragraph>
            <target refid="class-physicsserver3d-constant-body-mode-rigid"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-body-mode-rigid" names="class_physicsserver3d_constant_body_mode_rigid"><reference internal="True" refid="enum-physicsserver3d-bodymode"><inline classes="std std-ref">BodyMode</inline></reference> <strong>BODY_MODE_RIGID</strong> = <literal>2</literal></paragraph>
            <paragraph>常量，用于刚体。在这种模式下，物体可以被其他物体推动，能够对其施加力。</paragraph>
            <target refid="class-physicsserver3d-constant-body-mode-rigid-linear"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-body-mode-rigid-linear" names="class_physicsserver3d_constant_body_mode_rigid_linear"><reference internal="True" refid="enum-physicsserver3d-bodymode"><inline classes="std std-ref">BodyMode</inline></reference> <strong>BODY_MODE_RIGID_LINEAR</strong> = <literal>3</literal></paragraph>
            <paragraph>常量，用于线性刚体。在这种模式下，物体不能旋转，只有线速度受外力影响。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-physicsserver3d-bodyparameter"></target>
            <paragraph classes="classref-enumeration" ids="enum-physicsserver3d-bodyparameter" names="enum_physicsserver3d_bodyparameter">enum <strong>BodyParameter</strong>: <reference internal="True" refid="enum-physicsserver3d-bodyparameter"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-physicsserver3d-constant-body-param-bounce"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-body-param-bounce" names="class_physicsserver3d_constant_body_param_bounce"><reference internal="True" refid="enum-physicsserver3d-bodyparameter"><inline classes="std std-ref">BodyParameter</inline></reference> <strong>BODY_PARAM_BOUNCE</strong> = <literal>0</literal></paragraph>
            <paragraph>常量，用于设置/获取物体的反弹系数。</paragraph>
            <target refid="class-physicsserver3d-constant-body-param-friction"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-body-param-friction" names="class_physicsserver3d_constant_body_param_friction"><reference internal="True" refid="enum-physicsserver3d-bodyparameter"><inline classes="std std-ref">BodyParameter</inline></reference> <strong>BODY_PARAM_FRICTION</strong> = <literal>1</literal></paragraph>
            <paragraph>常量，用于设置/获取物体的摩擦力。</paragraph>
            <target refid="class-physicsserver3d-constant-body-param-mass"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-body-param-mass" names="class_physicsserver3d_constant_body_param_mass"><reference internal="True" refid="enum-physicsserver3d-bodyparameter"><inline classes="std std-ref">BodyParameter</inline></reference> <strong>BODY_PARAM_MASS</strong> = <literal>2</literal></paragraph>
            <paragraph>常量，用于设置/获取物体的质量。</paragraph>
            <target refid="class-physicsserver3d-constant-body-param-inertia"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-body-param-inertia" names="class_physicsserver3d_constant_body_param_inertia"><reference internal="True" refid="enum-physicsserver3d-bodyparameter"><inline classes="std std-ref">BodyParameter</inline></reference> <strong>BODY_PARAM_INERTIA</strong> = <literal>3</literal></paragraph>
            <paragraph>常量，用于设置/获取物体的惯性。</paragraph>
            <target refid="class-physicsserver3d-constant-body-param-center-of-mass"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-body-param-center-of-mass" names="class_physicsserver3d_constant_body_param_center_of_mass"><reference internal="True" refid="enum-physicsserver3d-bodyparameter"><inline classes="std std-ref">BodyParameter</inline></reference> <strong>BODY_PARAM_CENTER_OF_MASS</strong> = <literal>4</literal></paragraph>
            <paragraph>常量，用于设置/获取物体的质心位置，使用该物体的局部坐标系。</paragraph>
            <target refid="class-physicsserver3d-constant-body-param-gravity-scale"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-body-param-gravity-scale" names="class_physicsserver3d_constant_body_param_gravity_scale"><reference internal="True" refid="enum-physicsserver3d-bodyparameter"><inline classes="std std-ref">BodyParameter</inline></reference> <strong>BODY_PARAM_GRAVITY_SCALE</strong> = <literal>5</literal></paragraph>
            <paragraph>常量，用于设置/获取物体的重力倍数。</paragraph>
            <target refid="class-physicsserver3d-constant-body-param-linear-damp-mode"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-body-param-linear-damp-mode" names="class_physicsserver3d_constant_body_param_linear_damp_mode"><reference internal="True" refid="enum-physicsserver3d-bodyparameter"><inline classes="std std-ref">BodyParameter</inline></reference> <strong>BODY_PARAM_LINEAR_DAMP_MODE</strong> = <literal>6</literal></paragraph>
            <paragraph>常量，用于设置/获取物体的线性阻尼模式。可能的值见 <reference internal="True" refid="enum-physicsserver3d-bodydampmode"><inline classes="std std-ref">BodyDampMode</inline></reference>。</paragraph>
            <target refid="class-physicsserver3d-constant-body-param-angular-damp-mode"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-body-param-angular-damp-mode" names="class_physicsserver3d_constant_body_param_angular_damp_mode"><reference internal="True" refid="enum-physicsserver3d-bodyparameter"><inline classes="std std-ref">BodyParameter</inline></reference> <strong>BODY_PARAM_ANGULAR_DAMP_MODE</strong> = <literal>7</literal></paragraph>
            <paragraph>常量，用于设置/获取物体的角度阻尼模式。可能的值见 <reference internal="True" refid="enum-physicsserver3d-bodydampmode"><inline classes="std std-ref">BodyDampMode</inline></reference>。</paragraph>
            <target refid="class-physicsserver3d-constant-body-param-linear-damp"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-body-param-linear-damp" names="class_physicsserver3d_constant_body_param_linear_damp"><reference internal="True" refid="enum-physicsserver3d-bodyparameter"><inline classes="std std-ref">BodyParameter</inline></reference> <strong>BODY_PARAM_LINEAR_DAMP</strong> = <literal>8</literal></paragraph>
            <paragraph>常数，用于设置/获取物体的线性阻尼系数。</paragraph>
            <target refid="class-physicsserver3d-constant-body-param-angular-damp"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-body-param-angular-damp" names="class_physicsserver3d_constant_body_param_angular_damp"><reference internal="True" refid="enum-physicsserver3d-bodyparameter"><inline classes="std std-ref">BodyParameter</inline></reference> <strong>BODY_PARAM_ANGULAR_DAMP</strong> = <literal>9</literal></paragraph>
            <paragraph>常数，用于设置/获取物体的角度阻尼系数。</paragraph>
            <target refid="class-physicsserver3d-constant-body-param-max"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-body-param-max" names="class_physicsserver3d_constant_body_param_max"><reference internal="True" refid="enum-physicsserver3d-bodyparameter"><inline classes="std std-ref">BodyParameter</inline></reference> <strong>BODY_PARAM_MAX</strong> = <literal>10</literal></paragraph>
            <paragraph>代表 <reference internal="True" refid="enum-physicsserver3d-bodyparameter"><inline classes="std std-ref">BodyParameter</inline></reference> 枚举的大小。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-physicsserver3d-bodydampmode"></target>
            <paragraph classes="classref-enumeration" ids="enum-physicsserver3d-bodydampmode" names="enum_physicsserver3d_bodydampmode">enum <strong>BodyDampMode</strong>: <reference internal="True" refid="enum-physicsserver3d-bodydampmode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-physicsserver3d-constant-body-damp-mode-combine"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-body-damp-mode-combine" names="class_physicsserver3d_constant_body_damp_mode_combine"><reference internal="True" refid="enum-physicsserver3d-bodydampmode"><inline classes="std std-ref">BodyDampMode</inline></reference> <strong>BODY_DAMP_MODE_COMBINE</strong> = <literal>0</literal></paragraph>
            <paragraph>物体的阻尼值将被加到区域中所设置的值或默认值上。</paragraph>
            <target refid="class-physicsserver3d-constant-body-damp-mode-replace"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-body-damp-mode-replace" names="class_physicsserver3d_constant_body_damp_mode_replace"><reference internal="True" refid="enum-physicsserver3d-bodydampmode"><inline classes="std std-ref">BodyDampMode</inline></reference> <strong>BODY_DAMP_MODE_REPLACE</strong> = <literal>1</literal></paragraph>
            <paragraph>物体的阻尼值会替换区域中所设置的值或默认值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-physicsserver3d-bodystate"></target>
            <paragraph classes="classref-enumeration" ids="enum-physicsserver3d-bodystate" names="enum_physicsserver3d_bodystate">enum <strong>BodyState</strong>: <reference internal="True" refid="enum-physicsserver3d-bodystate"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-physicsserver3d-constant-body-state-transform"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-body-state-transform" names="class_physicsserver3d_constant_body_state_transform"><reference internal="True" refid="enum-physicsserver3d-bodystate"><inline classes="std std-ref">BodyState</inline></reference> <strong>BODY_STATE_TRANSFORM</strong> = <literal>0</literal></paragraph>
            <paragraph>常量，用于设置/获取物体的当前变换矩阵。</paragraph>
            <target refid="class-physicsserver3d-constant-body-state-linear-velocity"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-body-state-linear-velocity" names="class_physicsserver3d_constant_body_state_linear_velocity"><reference internal="True" refid="enum-physicsserver3d-bodystate"><inline classes="std std-ref">BodyState</inline></reference> <strong>BODY_STATE_LINEAR_VELOCITY</strong> = <literal>1</literal></paragraph>
            <paragraph>常量，用于设置/获取物体的当前线速度。</paragraph>
            <target refid="class-physicsserver3d-constant-body-state-angular-velocity"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-body-state-angular-velocity" names="class_physicsserver3d_constant_body_state_angular_velocity"><reference internal="True" refid="enum-physicsserver3d-bodystate"><inline classes="std std-ref">BodyState</inline></reference> <strong>BODY_STATE_ANGULAR_VELOCITY</strong> = <literal>2</literal></paragraph>
            <paragraph>常量，用于设置/获取物体的当前角速度。</paragraph>
            <target refid="class-physicsserver3d-constant-body-state-sleeping"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-body-state-sleeping" names="class_physicsserver3d_constant_body_state_sleeping"><reference internal="True" refid="enum-physicsserver3d-bodystate"><inline classes="std std-ref">BodyState</inline></reference> <strong>BODY_STATE_SLEEPING</strong> = <literal>3</literal></paragraph>
            <paragraph>常量，用于使物体沉睡/唤醒，或得到它是否在沉睡。</paragraph>
            <target refid="class-physicsserver3d-constant-body-state-can-sleep"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-body-state-can-sleep" names="class_physicsserver3d_constant_body_state_can_sleep"><reference internal="True" refid="enum-physicsserver3d-bodystate"><inline classes="std std-ref">BodyState</inline></reference> <strong>BODY_STATE_CAN_SLEEP</strong> = <literal>4</literal></paragraph>
            <paragraph>常量，用于设置/获取物体是否可以休眠。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-physicsserver3d-areabodystatus"></target>
            <paragraph classes="classref-enumeration" ids="enum-physicsserver3d-areabodystatus" names="enum_physicsserver3d_areabodystatus">enum <strong>AreaBodyStatus</strong>: <reference internal="True" refid="enum-physicsserver3d-areabodystatus"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-physicsserver3d-constant-area-body-added"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-area-body-added" names="class_physicsserver3d_constant_area_body_added"><reference internal="True" refid="enum-physicsserver3d-areabodystatus"><inline classes="std std-ref">AreaBodyStatus</inline></reference> <strong>AREA_BODY_ADDED</strong> = <literal>0</literal></paragraph>
            <paragraph>当对象进入区域的任一形状时，区域回调函数接收的第一个参数值。</paragraph>
            <target refid="class-physicsserver3d-constant-area-body-removed"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-area-body-removed" names="class_physicsserver3d_constant_area_body_removed"><reference internal="True" refid="enum-physicsserver3d-areabodystatus"><inline classes="std std-ref">AreaBodyStatus</inline></reference> <strong>AREA_BODY_REMOVED</strong> = <literal>1</literal></paragraph>
            <paragraph>当对象退出区域的任一形状时，区域回调函数接收的第一个参数值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-physicsserver3d-processinfo"></target>
            <paragraph classes="classref-enumeration" ids="enum-physicsserver3d-processinfo" names="enum_physicsserver3d_processinfo">enum <strong>ProcessInfo</strong>: <reference internal="True" refid="enum-physicsserver3d-processinfo"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-physicsserver3d-constant-info-active-objects"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-info-active-objects" names="class_physicsserver3d_constant_info_active_objects"><reference internal="True" refid="enum-physicsserver3d-processinfo"><inline classes="std std-ref">ProcessInfo</inline></reference> <strong>INFO_ACTIVE_OBJECTS</strong> = <literal>0</literal></paragraph>
            <paragraph>常量，用以获取未休眠的对象的数量。</paragraph>
            <target refid="class-physicsserver3d-constant-info-collision-pairs"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-info-collision-pairs" names="class_physicsserver3d_constant_info_collision_pairs"><reference internal="True" refid="enum-physicsserver3d-processinfo"><inline classes="std std-ref">ProcessInfo</inline></reference> <strong>INFO_COLLISION_PAIRS</strong> = <literal>1</literal></paragraph>
            <paragraph>常量，用以获取可能的碰撞数。</paragraph>
            <target refid="class-physicsserver3d-constant-info-island-count"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-info-island-count" names="class_physicsserver3d_constant_info_island_count"><reference internal="True" refid="enum-physicsserver3d-processinfo"><inline classes="std std-ref">ProcessInfo</inline></reference> <strong>INFO_ISLAND_COUNT</strong> = <literal>2</literal></paragraph>
            <paragraph>常量，用以获取可能发生碰撞的空间区块数。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-physicsserver3d-spaceparameter"></target>
            <paragraph classes="classref-enumeration" ids="enum-physicsserver3d-spaceparameter" names="enum_physicsserver3d_spaceparameter">enum <strong>SpaceParameter</strong>: <reference internal="True" refid="enum-physicsserver3d-spaceparameter"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-physicsserver3d-constant-space-param-contact-recycle-radius"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-space-param-contact-recycle-radius" names="class_physicsserver3d_constant_space_param_contact_recycle_radius"><reference internal="True" refid="enum-physicsserver3d-spaceparameter"><inline classes="std std-ref">SpaceParameter</inline></reference> <strong>SPACE_PARAM_CONTACT_RECYCLE_RADIUS</strong> = <literal>0</literal></paragraph>
            <paragraph>常量，用于设置/获取一对物体在其碰撞状态被重新计算之前的最大移动距离。</paragraph>
            <target refid="class-physicsserver3d-constant-space-param-contact-max-separation"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-space-param-contact-max-separation" names="class_physicsserver3d_constant_space_param_contact_max_separation"><reference internal="True" refid="enum-physicsserver3d-spaceparameter"><inline classes="std std-ref">SpaceParameter</inline></reference> <strong>SPACE_PARAM_CONTACT_MAX_SEPARATION</strong> = <literal>1</literal></paragraph>
            <paragraph>常量，用于设置/获取两个形状间的最大距离，超过该距离后它们将被视为分离，接触将被弃置。</paragraph>
            <target refid="class-physicsserver3d-constant-space-param-contact-max-allowed-penetration"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-space-param-contact-max-allowed-penetration" names="class_physicsserver3d_constant_space_param_contact_max_allowed_penetration"><reference internal="True" refid="enum-physicsserver3d-spaceparameter"><inline classes="std std-ref">SpaceParameter</inline></reference> <strong>SPACE_PARAM_CONTACT_MAX_ALLOWED_PENETRATION</strong> = <literal>2</literal></paragraph>
            <paragraph>常量，用于设置/获取两个形状互相穿透的最大距离，超过该距离后将视为碰撞。</paragraph>
            <target refid="class-physicsserver3d-constant-space-param-contact-default-bias"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-space-param-contact-default-bias" names="class_physicsserver3d_constant_space_param_contact_default_bias"><reference internal="True" refid="enum-physicsserver3d-spaceparameter"><inline classes="std std-ref">SpaceParameter</inline></reference> <strong>SPACE_PARAM_CONTACT_DEFAULT_BIAS</strong> = <literal>3</literal></paragraph>
            <paragraph>常量，用于设置/获取所有物理接触的默认求解器偏差。求解器偏差是控制两个对象在重叠后“反弹”的程度的一个系数，以避免由于数值不精确而使它们处于该状态。</paragraph>
            <target refid="class-physicsserver3d-constant-space-param-body-linear-velocity-sleep-threshold"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-space-param-body-linear-velocity-sleep-threshold" names="class_physicsserver3d_constant_space_param_body_linear_velocity_sleep_threshold"><reference internal="True" refid="enum-physicsserver3d-spaceparameter"><inline classes="std std-ref">SpaceParameter</inline></reference> <strong>SPACE_PARAM_BODY_LINEAR_VELOCITY_SLEEP_THRESHOLD</strong> = <literal>4</literal></paragraph>
            <paragraph>常量，用于设置/获取活跃的阈值线速度。一个被标记为线性速度和角速度都可能不活跃的物体将在给定的时间后进入睡眠状态。</paragraph>
            <target refid="class-physicsserver3d-constant-space-param-body-angular-velocity-sleep-threshold"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-space-param-body-angular-velocity-sleep-threshold" names="class_physicsserver3d_constant_space_param_body_angular_velocity_sleep_threshold"><reference internal="True" refid="enum-physicsserver3d-spaceparameter"><inline classes="std std-ref">SpaceParameter</inline></reference> <strong>SPACE_PARAM_BODY_ANGULAR_VELOCITY_SLEEP_THRESHOLD</strong> = <literal>5</literal></paragraph>
            <paragraph>常量，用于设置/获取活动的阈值角速度。一个被标记为线性和角速度都可能不活跃的物体，在给定的时间后将会进入睡眠状态。</paragraph>
            <target refid="class-physicsserver3d-constant-space-param-body-time-to-sleep"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-space-param-body-time-to-sleep" names="class_physicsserver3d_constant_space_param_body_time_to_sleep"><reference internal="True" refid="enum-physicsserver3d-spaceparameter"><inline classes="std std-ref">SpaceParameter</inline></reference> <strong>SPACE_PARAM_BODY_TIME_TO_SLEEP</strong> = <literal>6</literal></paragraph>
            <paragraph>常量，用于设置/获得最大的活动时间。一个被标记为线速度和角速度都可能不活动的物体，在这个时间之后将被置入睡眠状态。</paragraph>
            <target refid="class-physicsserver3d-constant-space-param-solver-iterations"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-space-param-solver-iterations" names="class_physicsserver3d_constant_space_param_solver_iterations"><reference internal="True" refid="enum-physicsserver3d-spaceparameter"><inline classes="std std-ref">SpaceParameter</inline></reference> <strong>SPACE_PARAM_SOLVER_ITERATIONS</strong> = <literal>7</literal></paragraph>
            <paragraph>常量，用于设置/获取接触和约束的求解器迭代次数。迭代次数越多，碰撞和约束就越准确。然而，更多的迭代需要更多的 CPU 能力，这会降低性能。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-physicsserver3d-bodyaxis"></target>
            <paragraph classes="classref-enumeration" ids="enum-physicsserver3d-bodyaxis" names="enum_physicsserver3d_bodyaxis">enum <strong>BodyAxis</strong>: <reference internal="True" refid="enum-physicsserver3d-bodyaxis"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-physicsserver3d-constant-body-axis-linear-x"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-body-axis-linear-x" names="class_physicsserver3d_constant_body_axis_linear_x"><reference internal="True" refid="enum-physicsserver3d-bodyaxis"><inline classes="std std-ref">BodyAxis</inline></reference> <strong>BODY_AXIS_LINEAR_X</strong> = <literal>1</literal></paragraph>
            <container classes="contribute">
                <paragraph>该枚举目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
            <target refid="class-physicsserver3d-constant-body-axis-linear-y"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-body-axis-linear-y" names="class_physicsserver3d_constant_body_axis_linear_y"><reference internal="True" refid="enum-physicsserver3d-bodyaxis"><inline classes="std std-ref">BodyAxis</inline></reference> <strong>BODY_AXIS_LINEAR_Y</strong> = <literal>2</literal></paragraph>
            <container classes="contribute">
                <paragraph>该枚举目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
            <target refid="class-physicsserver3d-constant-body-axis-linear-z"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-body-axis-linear-z" names="class_physicsserver3d_constant_body_axis_linear_z"><reference internal="True" refid="enum-physicsserver3d-bodyaxis"><inline classes="std std-ref">BodyAxis</inline></reference> <strong>BODY_AXIS_LINEAR_Z</strong> = <literal>4</literal></paragraph>
            <container classes="contribute">
                <paragraph>该枚举目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
            <target refid="class-physicsserver3d-constant-body-axis-angular-x"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-body-axis-angular-x" names="class_physicsserver3d_constant_body_axis_angular_x"><reference internal="True" refid="enum-physicsserver3d-bodyaxis"><inline classes="std std-ref">BodyAxis</inline></reference> <strong>BODY_AXIS_ANGULAR_X</strong> = <literal>8</literal></paragraph>
            <container classes="contribute">
                <paragraph>该枚举目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
            <target refid="class-physicsserver3d-constant-body-axis-angular-y"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-body-axis-angular-y" names="class_physicsserver3d_constant_body_axis_angular_y"><reference internal="True" refid="enum-physicsserver3d-bodyaxis"><inline classes="std std-ref">BodyAxis</inline></reference> <strong>BODY_AXIS_ANGULAR_Y</strong> = <literal>16</literal></paragraph>
            <container classes="contribute">
                <paragraph>该枚举目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
            <target refid="class-physicsserver3d-constant-body-axis-angular-z"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-physicsserver3d-constant-body-axis-angular-z" names="class_physicsserver3d_constant_body_axis_angular_z"><reference internal="True" refid="enum-physicsserver3d-bodyaxis"><inline classes="std std-ref">BodyAxis</inline></reference> <strong>BODY_AXIS_ANGULAR_Z</strong> = <literal>32</literal></paragraph>
            <container classes="contribute">
                <paragraph>该枚举目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="方法说明">
            <title>方法说明</title>
            <target refid="class-physicsserver3d-method-area-add-shape"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-area-add-shape" names="class_physicsserver3d_method_area_add_shape"><abbreviation explanation="无返回值。">void</abbreviation> <strong>area_add_shape</strong>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, transform: <reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference> = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0), disabled: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = false) <reference internal="True" refid="class-physicsserver3d-method-area-add-shape"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>向区域添加一个形状，以及一个变换矩阵。形状通常通过它们的索引来引用，因此你应该跟踪哪个形状具有给定的索引。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-area-attach-object-instance-id"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-area-attach-object-instance-id" names="class_physicsserver3d_method_area_attach_object_instance_id"><abbreviation explanation="无返回值。">void</abbreviation> <strong>area_attach_object_instance_id</strong>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-area-attach-object-instance-id"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将区域分配给<reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference>的子类，因此它可以存在于节点树中。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-area-clear-shapes"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-area-clear-shapes" names="class_physicsserver3d_method_area_clear_shapes"><abbreviation explanation="无返回值。">void</abbreviation> <strong>area_clear_shapes</strong>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-area-clear-shapes"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>从一个区域移除所有形状。它不会删除形状，因此它们可以稍后重新分配。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-area-create"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-area-create" names="class_physicsserver3d_method_area_create"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>area_create</strong>() <reference internal="True" refid="class-physicsserver3d-method-area-create"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>在物理服务器中创建一个 3D 区域对象，并返回标识该区域的 <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>。所创建区域的默认设置包括设置为 <literal>1</literal> 的碰撞层和遮罩，以及设置为 <literal>false</literal> 的 <literal>monitorable</literal>。</paragraph>
            <paragraph>使用 <reference internal="True" refid="class-physicsserver3d-method-area-add-shape"><inline classes="std std-ref">area_add_shape</inline></reference> 向其添加形状，使用 <reference internal="True" refid="class-physicsserver3d-method-area-set-transform"><inline classes="std std-ref">area_set_transform</inline></reference> 设置其变换，使用 <reference internal="True" refid="class-physicsserver3d-method-area-set-space"><inline classes="std std-ref">area_set_space</inline></reference> 将区域添加到一个空间。如果希望该区域可被检测，请使用 <reference internal="True" refid="class-physicsserver3d-method-area-set-monitorable"><inline classes="std std-ref">area_set_monitorable</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-area-get-collision-layer"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-area-get-collision-layer" names="class_physicsserver3d_method_area_get_collision_layer"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>area_get_collision_layer</strong>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver3d-method-area-get-collision-layer"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回该区域所属的物理层。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-area-get-collision-mask"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-area-get-collision-mask" names="class_physicsserver3d_method_area_get_collision_mask"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>area_get_collision_mask</strong>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver3d-method-area-get-collision-mask"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回该区域能够接触的物理层。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-area-get-object-instance-id"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-area-get-object-instance-id" names="class_physicsserver3d_method_area_get_object_instance_id"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>area_get_object_instance_id</strong>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver3d-method-area-get-object-instance-id"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>获取区域分配给的对象的实例 ID。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-area-get-param"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-area-get-param" names="class_physicsserver3d_method_area_get_param"><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> <strong>area_get_param</strong>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, param: <reference internal="True" refid="enum-physicsserver3d-areaparameter"><inline classes="std std-ref">AreaParameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver3d-method-area-get-param"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回区域参数值。可用参数列表位于 <reference internal="True" refid="enum-physicsserver3d-areaparameter"><inline classes="std std-ref">AreaParameter</inline></reference> 常量上。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-area-get-shape"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-area-get-shape" names="class_physicsserver3d_method_area_get_shape"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>area_get_shape</strong>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver3d-method-area-get-shape"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回区域的第 n 个形状的 <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-area-get-shape-count"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-area-get-shape-count" names="class_physicsserver3d_method_area_get_shape_count"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>area_get_shape_count</strong>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver3d-method-area-get-shape-count"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回分配给区域的形状数量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-area-get-shape-transform"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-area-get-shape-transform" names="class_physicsserver3d_method_area_get_shape_transform"><reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference> <strong>area_get_shape_transform</strong>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver3d-method-area-get-shape-transform"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回区域内形状的变换矩阵。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-area-get-space"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-area-get-space" names="class_physicsserver3d_method_area_get_space"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>area_get_space</strong>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver3d-method-area-get-space"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回分配给该区域的空间。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-area-get-transform"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-area-get-transform" names="class_physicsserver3d_method_area_get_transform"><reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference> <strong>area_get_transform</strong>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver3d-method-area-get-transform"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回区域的变换矩阵。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-area-remove-shape"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-area-remove-shape" names="class_physicsserver3d_method_area_remove_shape"><abbreviation explanation="无返回值。">void</abbreviation> <strong>area_remove_shape</strong>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-area-remove-shape"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>从区域中移除一个形状。它不会删除形状，因此可以稍后重新分配。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-area-set-area-monitor-callback"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-area-set-area-monitor-callback" names="class_physicsserver3d_method_area_set_area_monitor_callback"><abbreviation explanation="无返回值。">void</abbreviation> <strong>area_set_area_monitor_callback</strong>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, callback: <reference internal="True" refuri="class_callable#class-callable"><inline classes="std std-ref">Callable</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-area-set-area-monitor-callback"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置该区域的区域监视回调。当任何其他（形状）区域进入或退出（形状）给定区域时，将调用此回调，并且必须采用以下五个参数：</paragraph>
            <enumerated_list enumtype="arabic" prefix="" suffix=".">
                <list_item>
                    <paragraph>一个整数 <literal>status</literal>：<reference internal="True" refid="class-physicsserver3d-constant-area-body-added"><inline classes="std std-ref">AREA_BODY_ADDED</inline></reference> 或 <reference internal="True" refid="class-physicsserver3d-constant-area-body-removed"><inline classes="std std-ref">AREA_BODY_REMOVED</inline></reference> 取决于其他区域的形状是进入还是退出该区域，</paragraph>
                </list_item>
                <list_item>
                    <paragraph>一个 <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <literal>area_rid</literal>：进入或退出该区域的其他区域的 <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>，</paragraph>
                </list_item>
                <list_item>
                    <paragraph>一个整数 <literal>instance_id</literal>：附加到其他区域的 <literal>ObjectID</literal>，</paragraph>
                </list_item>
                <list_item>
                    <paragraph>一个整数 <literal>area_shape_idx</literal>：进入或退出该区域的其他区域的形状索引，</paragraph>
                </list_item>
                <list_item>
                    <paragraph>一个整数 <literal>self_shape_idx</literal>：其他区域进入或退出的区域的形状索引。</paragraph>
                </list_item>
            </enumerated_list>
            <paragraph>通过计算（或跟踪）进入和退出的形状，可以确定一个区域（及其所有形状）是第一次进入还是最后一次退出。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-area-set-collision-layer"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-area-set-collision-layer" names="class_physicsserver3d_method_area_set_collision_layer"><abbreviation explanation="无返回值。">void</abbreviation> <strong>area_set_collision_layer</strong>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, layer: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-area-set-collision-layer"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将区域分配给一个或多个物理层。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-area-set-collision-mask"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-area-set-collision-mask" names="class_physicsserver3d_method_area_set_collision_mask"><abbreviation explanation="无返回值。">void</abbreviation> <strong>area_set_collision_mask</strong>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, mask: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-area-set-collision-mask"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置区域将监控的物理层。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-area-set-monitor-callback"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-area-set-monitor-callback" names="class_physicsserver3d_method_area_set_monitor_callback"><abbreviation explanation="无返回值。">void</abbreviation> <strong>area_set_monitor_callback</strong>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, callback: <reference internal="True" refuri="class_callable#class-callable"><inline classes="std std-ref">Callable</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-area-set-monitor-callback"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置区域的实体监视器回调。当任何其他（形状的）实体进入或退出（形状的）给定区域时，将调用此回调，并且必须采用以下五个参数：</paragraph>
            <enumerated_list enumtype="arabic" prefix="" suffix=".">
                <list_item>
                    <paragraph>一个整数 <literal>status</literal>：<reference internal="True" refid="class-physicsserver3d-constant-area-body-added"><inline classes="std std-ref">AREA_BODY_ADDED</inline></reference> 或 <reference internal="True" refid="class-physicsserver3d-constant-area-body-removed"><inline classes="std std-ref">AREA_BODY_REMOVED</inline></reference> 取决于其他实体形状是否进入或退出该区域，</paragraph>
                </list_item>
                <list_item>
                    <paragraph>一个 <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <literal>body_rid</literal>：进入或离开该区域的实体的 <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>，</paragraph>
                </list_item>
                <list_item>
                    <paragraph>一个整数 <literal>instance_id</literal>：附加到该实体上的 <literal>ObjectID</literal>，</paragraph>
                </list_item>
                <list_item>
                    <paragraph>一个整数 <literal>body_shape_idx</literal>：进入或离开该区域的实体形状索引，</paragraph>
                </list_item>
                <list_item>
                    <paragraph>一个整数 <literal>self_shape_idx</literal>：实体进入或离开的区域的形状索引。</paragraph>
                </list_item>
            </enumerated_list>
            <paragraph>通过计算（或跟踪）进入和退出的形状，可以确定一个实体（及其所有形状）是第一次进入还是最后一次退出。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-area-set-monitorable"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-area-set-monitorable" names="class_physicsserver3d_method_area_set_monitorable"><abbreviation explanation="无返回值。">void</abbreviation> <strong>area_set_monitorable</strong>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, monitorable: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-area-set-monitorable"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <container classes="contribute">
                <paragraph>该方法目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-area-set-param"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-area-set-param" names="class_physicsserver3d_method_area_set_param"><abbreviation explanation="无返回值。">void</abbreviation> <strong>area_set_param</strong>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, param: <reference internal="True" refid="enum-physicsserver3d-areaparameter"><inline classes="std std-ref">AreaParameter</inline></reference>, value: <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-area-set-param"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置面积参数的值。可用参数列表位于 <reference internal="True" refid="enum-physicsserver3d-areaparameter"><inline classes="std std-ref">AreaParameter</inline></reference> 常量上。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-area-set-ray-pickable"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-area-set-ray-pickable" names="class_physicsserver3d_method_area_set_ray_pickable"><abbreviation explanation="无返回值。">void</abbreviation> <strong>area_set_ray_pickable</strong>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, enable: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-area-set-ray-pickable"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置可使用光线拾取的对象。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-area-set-shape"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-area-set-shape" names="class_physicsserver3d_method_area_set_shape"><abbreviation explanation="无返回值。">void</abbreviation> <strong>area_set_shape</strong>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, shape: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-area-set-shape"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>用另一种形状代替一种形状。旧的形状由它的索引选择，新的形状由它的<reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>选择。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-area-set-shape-disabled"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-area-set-shape-disabled" names="class_physicsserver3d_method_area_set_shape_disabled"><abbreviation explanation="无返回值。">void</abbreviation> <strong>area_set_shape_disabled</strong>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, disabled: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-area-set-shape-disabled"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <container classes="contribute">
                <paragraph>该方法目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-area-set-shape-transform"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-area-set-shape-transform" names="class_physicsserver3d_method_area_set_shape_transform"><abbreviation explanation="无返回值。">void</abbreviation> <strong>area_set_shape_transform</strong>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, transform: <reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-area-set-shape-transform"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置区域形状的变换矩阵。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-area-set-space"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-area-set-space" names="class_physicsserver3d_method_area_set_space"><abbreviation explanation="无返回值。">void</abbreviation> <strong>area_set_space</strong>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, space: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-area-set-space"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>为该区域指定一个空间。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-area-set-transform"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-area-set-transform" names="class_physicsserver3d_method_area_set_transform"><abbreviation explanation="无返回值。">void</abbreviation> <strong>area_set_transform</strong>(area: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, transform: <reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-area-set-transform"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置区域的变换矩阵。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-body-add-collision-exception"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-body-add-collision-exception" names="class_physicsserver3d_method_body_add_collision_exception"><abbreviation explanation="无返回值。">void</abbreviation> <strong>body_add_collision_exception</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, excepted_body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-body-add-collision-exception"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将一个物体添加到免于碰撞的物体列表中。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-body-add-constant-central-force"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-body-add-constant-central-force" names="class_physicsserver3d_method_body_add_constant_central_force"><abbreviation explanation="无返回值。">void</abbreviation> <strong>body_add_constant_central_force</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, force: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-body-add-constant-central-force"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>在不影响旋转的情况下，添加一个恒定的方向力，该力会随着时间的推移而持续施加，直到使用 <literal>body_set_constant_force(body, Vector3(0, 0, 0))</literal> 清除。</paragraph>
            <paragraph>这相当于在实体的质心处使用 <reference internal="True" refid="class-physicsserver3d-method-body-add-constant-force"><inline classes="std std-ref">body_add_constant_force</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-body-add-constant-force"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-body-add-constant-force" names="class_physicsserver3d_method_body_add_constant_force"><abbreviation explanation="无返回值。">void</abbreviation> <strong>body_add_constant_force</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, force: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>, position: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> = Vector3(0, 0, 0)) <reference internal="True" refid="class-physicsserver3d-method-body-add-constant-force"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>向实体添加一个恒定的定位力，持续施加，直到用 <literal>body_set_constant_force(body, Vector3(0, 0, 0))</literal> 清除。</paragraph>
            <paragraph><literal>position</literal> 是在全局坐标中距实体原点的偏移量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-body-add-constant-torque"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-body-add-constant-torque" names="class_physicsserver3d_method_body_add_constant_torque"><abbreviation explanation="无返回值。">void</abbreviation> <strong>body_add_constant_torque</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, torque: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-body-add-constant-torque"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>在不影响位置的情况下，添加一个恒定的旋转力，随着时间的推移而持续施加，直到使用 <literal>body_set_constant_torque(body, Vector3(0, 0, 0))</literal> 清除。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-body-add-shape"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-body-add-shape" names="class_physicsserver3d_method_body_add_shape"><abbreviation explanation="无返回值。">void</abbreviation> <strong>body_add_shape</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, transform: <reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference> = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0), disabled: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = false) <reference internal="True" refid="class-physicsserver3d-method-body-add-shape"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>添加一个形状到物体，以及一个变换矩阵。形状通常通过它们的索引来引用，因此你应该跟踪哪个形状具有给定的索引。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-body-apply-central-force"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-body-apply-central-force" names="class_physicsserver3d_method_body_apply_central_force"><abbreviation explanation="无返回值。">void</abbreviation> <strong>body_apply_central_force</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, force: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-body-apply-central-force"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>在不影响旋转的情况下，施加一个方向力。力是时间相关的，意味着每次物理更新都会施加。</paragraph>
            <paragraph>这相当于在实体的质心处使用 <reference internal="True" refid="class-physicsserver3d-method-body-apply-force"><inline classes="std std-ref">body_apply_force</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-body-apply-central-impulse"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-body-apply-central-impulse" names="class_physicsserver3d_method_body_apply_central_impulse"><abbreviation explanation="无返回值。">void</abbreviation> <strong>body_apply_central_impulse</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, impulse: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-body-apply-central-impulse"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>在不影响旋转的情况下，施加一个定向冲量。</paragraph>
            <paragraph>冲动是时间无关的！每帧施加一个冲量将产生依赖于帧速率的力。出于这个原因，它应该只在模拟一次性影响时使用（否则使用“_force”函数）。</paragraph>
            <paragraph>这相当于在实体的质心处使用 <reference internal="True" refid="class-physicsserver3d-method-body-apply-impulse"><inline classes="std std-ref">body_apply_impulse</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-body-apply-force"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-body-apply-force" names="class_physicsserver3d_method_body_apply_force"><abbreviation explanation="无返回值。">void</abbreviation> <strong>body_apply_force</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, force: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>, position: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> = Vector3(0, 0, 0)) <reference internal="True" refid="class-physicsserver3d-method-body-apply-force"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>对实体施加一个定位力。力是时间相关的，意味着每次物理更新都会被施加。</paragraph>
            <paragraph><literal>position</literal> 是在全局坐标中距实体原点的偏移量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-body-apply-impulse"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-body-apply-impulse" names="class_physicsserver3d_method_body_apply_impulse"><abbreviation explanation="无返回值。">void</abbreviation> <strong>body_apply_impulse</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, impulse: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>, position: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> = Vector3(0, 0, 0)) <reference internal="True" refid="class-physicsserver3d-method-body-apply-impulse"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>向实体施加一个定位冲量。</paragraph>
            <paragraph>冲量是时间无关的！每帧施加一个冲量将产生一个依赖于帧速率的力。出于这个原因，它应该只在模拟一次性影响时使用（否则使用“_force”函数）。</paragraph>
            <paragraph><literal>position</literal> 是在全局坐标中距实体原点的偏移量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-body-apply-torque"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-body-apply-torque" names="class_physicsserver3d_method_body_apply_torque"><abbreviation explanation="无返回值。">void</abbreviation> <strong>body_apply_torque</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, torque: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-body-apply-torque"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>在不影响位置的情况下，施加一个旋转力。力是时间相关的，这意味着每次物理更新都会施加。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-body-apply-torque-impulse"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-body-apply-torque-impulse" names="class_physicsserver3d_method_body_apply_torque_impulse"><abbreviation explanation="无返回值。">void</abbreviation> <strong>body_apply_torque_impulse</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, impulse: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-body-apply-torque-impulse"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>在不影响位置的情况下，向实体施加一个旋转冲量。</paragraph>
            <paragraph>冲量是时间无关的！每帧施加一个冲量将产生一个依赖于帧速率的力。出于这个原因，它应该只在模拟一次性影响时使用（否则使用“_force”函数）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-body-attach-object-instance-id"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-body-attach-object-instance-id" names="class_physicsserver3d_method_body_attach_object_instance_id"><abbreviation explanation="无返回值。">void</abbreviation> <strong>body_attach_object_instance_id</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-body-attach-object-instance-id"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将区域分配给<reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference>的子类，因此它可以存在于节点树中。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-body-clear-shapes"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-body-clear-shapes" names="class_physicsserver3d_method_body_clear_shapes"><abbreviation explanation="无返回值。">void</abbreviation> <strong>body_clear_shapes</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-body-clear-shapes"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>从物体上移除所有碰撞形状。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-body-create"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-body-create" names="class_physicsserver3d_method_body_create"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>body_create</strong>() <reference internal="True" refid="class-physicsserver3d-method-body-create"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>在物理服务器中创建一个 3D 物体对象，并返回标识它的 <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>。所创建区域的默认设置包括设置为 <literal>1</literal> 的碰撞层和遮罩，以及设置为 <reference internal="True" refid="class-physicsserver3d-constant-body-mode-rigid"><inline classes="std std-ref">BODY_MODE_RIGID</inline></reference> 的物体模式。</paragraph>
            <paragraph>使用 <reference internal="True" refid="class-physicsserver3d-method-body-add-shape"><inline classes="std std-ref">body_add_shape</inline></reference> 为其添加形状，使用 <reference internal="True" refid="class-physicsserver3d-method-body-set-state"><inline classes="std std-ref">body_set_state</inline></reference> 设置其变换，使用 <reference internal="True" refid="class-physicsserver3d-method-body-set-space"><inline classes="std std-ref">body_set_space</inline></reference> 将该物体添加到一个空间。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-body-get-collision-layer"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-body-get-collision-layer" names="class_physicsserver3d_method_body_get_collision_layer"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>body_get_collision_layer</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver3d-method-body-get-collision-layer"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回物体所属的物理层或层。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-body-get-collision-mask"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-body-get-collision-mask" names="class_physicsserver3d_method_body_get_collision_mask"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>body_get_collision_mask</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver3d-method-body-get-collision-mask"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回物体可以碰撞的物理层或层。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-body-get-collision-priority"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-body-get-collision-priority" names="class_physicsserver3d_method_body_get_collision_priority"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>body_get_collision_priority</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver3d-method-body-get-collision-priority"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回该物体的碰撞优先级。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-body-get-constant-force"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-body-get-constant-force" names="class_physicsserver3d_method_body_get_constant_force"><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> <strong>body_get_constant_force</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver3d-method-body-get-constant-force"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回在每次物理更新期间，该物体被施加的总的恒定位置的力。</paragraph>
            <paragraph>参阅 <reference internal="True" refid="class-physicsserver3d-method-body-add-constant-force"><inline classes="std std-ref">body_add_constant_force</inline></reference> 和 <reference internal="True" refid="class-physicsserver3d-method-body-add-constant-central-force"><inline classes="std std-ref">body_add_constant_central_force</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-body-get-constant-torque"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-body-get-constant-torque" names="class_physicsserver3d_method_body_get_constant_torque"><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> <strong>body_get_constant_torque</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver3d-method-body-get-constant-torque"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回在每次物理更新期间，该物体被施加的总的恒定旋转的力。</paragraph>
            <paragraph>参阅 <reference internal="True" refid="class-physicsserver3d-method-body-add-constant-torque"><inline classes="std std-ref">body_add_constant_torque</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-body-get-direct-state"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-body-get-direct-state" names="class_physicsserver3d_method_body_get_direct_state"><reference internal="True" refuri="class_physicsdirectbodystate3d#class-physicsdirectbodystate3d"><inline classes="std std-ref">PhysicsDirectBodyState3D</inline></reference> <strong>body_get_direct_state</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-body-get-direct-state"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回该物体的 <reference internal="True" refuri="class_physicsdirectbodystate3d#class-physicsdirectbodystate3d"><inline classes="std std-ref">PhysicsDirectBodyState3D</inline></reference>。如果该物体已被销毁或从物理空间中移除，则返回 <literal>null</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-body-get-max-contacts-reported"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-body-get-max-contacts-reported" names="class_physicsserver3d_method_body_get_max_contacts_reported"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>body_get_max_contacts_reported</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver3d-method-body-get-max-contacts-reported"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回可报告的最大接触数。见 <reference internal="True" refid="class-physicsserver3d-method-body-set-max-contacts-reported"><inline classes="std std-ref">body_set_max_contacts_reported</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-body-get-mode"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-body-get-mode" names="class_physicsserver3d_method_body_get_mode"><reference internal="True" refid="enum-physicsserver3d-bodymode"><inline classes="std std-ref">BodyMode</inline></reference> <strong>body_get_mode</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver3d-method-body-get-mode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回物体模式。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-body-get-object-instance-id"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-body-get-object-instance-id" names="class_physicsserver3d_method_body_get_object_instance_id"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>body_get_object_instance_id</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver3d-method-body-get-object-instance-id"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>获取区域分配给的对象的实例 ID。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-body-get-param"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-body-get-param" names="class_physicsserver3d_method_body_get_param"><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> <strong>body_get_param</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, param: <reference internal="True" refid="enum-physicsserver3d-bodyparameter"><inline classes="std std-ref">BodyParameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver3d-method-body-get-param"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回物体参数的值。可用参数列表位于 <reference internal="True" refid="enum-physicsserver3d-bodyparameter"><inline classes="std std-ref">BodyParameter</inline></reference> 常量上。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-body-get-shape"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-body-get-shape" names="class_physicsserver3d_method_body_get_shape"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>body_get_shape</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver3d-method-body-get-shape"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回物体的第 n 个碰撞形状的 <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-body-get-shape-count"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-body-get-shape-count" names="class_physicsserver3d_method_body_get_shape_count"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>body_get_shape_count</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver3d-method-body-get-shape-count"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回分配给物体的碰撞形状数量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-body-get-shape-transform"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-body-get-shape-transform" names="class_physicsserver3d_method_body_get_shape_transform"><reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference> <strong>body_get_shape_transform</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver3d-method-body-get-shape-transform"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回物体碰撞形状的变换矩阵。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-body-get-space"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-body-get-space" names="class_physicsserver3d_method_body_get_space"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>body_get_space</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver3d-method-body-get-space"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回分配给物体的空间的 <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-body-get-state"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-body-get-state" names="class_physicsserver3d_method_body_get_state"><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> <strong>body_get_state</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, state: <reference internal="True" refid="enum-physicsserver3d-bodystate"><inline classes="std std-ref">BodyState</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver3d-method-body-get-state"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回物体的状态。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-body-is-axis-locked"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-body-is-axis-locked" names="class_physicsserver3d_method_body_is_axis_locked"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>body_is_axis_locked</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, axis: <reference internal="True" refid="enum-physicsserver3d-bodyaxis"><inline classes="std std-ref">BodyAxis</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver3d-method-body-is-axis-locked"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <container classes="contribute">
                <paragraph>该方法目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-body-is-continuous-collision-detection-enabled"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-body-is-continuous-collision-detection-enabled" names="class_physicsserver3d_method_body_is_continuous_collision_detection_enabled"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>body_is_continuous_collision_detection_enabled</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver3d-method-body-is-continuous-collision-detection-enabled"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果为 <literal>true</literal>，则启用连续碰撞检测模式。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-body-is-omitting-force-integration"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-body-is-omitting-force-integration" names="class_physicsserver3d_method_body_is_omitting_force_integration"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>body_is_omitting_force_integration</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver3d-method-body-is-omitting-force-integration"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果物体省略了标准力积分，则返回 <literal>true</literal>。参见 <reference internal="True" refid="class-physicsserver3d-method-body-set-omit-force-integration"><inline classes="std std-ref">body_set_omit_force_integration</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-body-remove-collision-exception"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-body-remove-collision-exception" names="class_physicsserver3d_method_body_remove_collision_exception"><abbreviation explanation="无返回值。">void</abbreviation> <strong>body_remove_collision_exception</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, excepted_body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-body-remove-collision-exception"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>从免于碰撞的实体列表中删除实体。</paragraph>
            <paragraph>连续碰撞检测尝试预测运动物体碰撞的位置，而不是在碰撞时移动物体并纠正其运动。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-body-remove-shape"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-body-remove-shape" names="class_physicsserver3d_method_body_remove_shape"><abbreviation explanation="无返回值。">void</abbreviation> <strong>body_remove_shape</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-body-remove-shape"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>从物体上移除一个碰撞形状。碰撞形状不会被从内存中删除，所以它可以在之后被重复使用。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-body-reset-mass-properties"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-body-reset-mass-properties" names="class_physicsserver3d_method_body_reset_mass_properties"><abbreviation explanation="无返回值。">void</abbreviation> <strong>body_reset_mass_properties</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-body-reset-mass-properties"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>根据形状恢复默认惯性和质心，以取消之前使用 <reference internal="True" refid="class-physicsserver3d-method-body-set-param"><inline classes="std std-ref">body_set_param</inline></reference> 设置的任何自定义值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-body-set-axis-lock"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-body-set-axis-lock" names="class_physicsserver3d_method_body_set_axis_lock"><abbreviation explanation="无返回值。">void</abbreviation> <strong>body_set_axis_lock</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, axis: <reference internal="True" refid="enum-physicsserver3d-bodyaxis"><inline classes="std std-ref">BodyAxis</inline></reference>, lock: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-body-set-axis-lock"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <container classes="contribute">
                <paragraph>该方法目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-body-set-axis-velocity"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-body-set-axis-velocity" names="class_physicsserver3d_method_body_set_axis_velocity"><abbreviation explanation="无返回值。">void</abbreviation> <strong>body_set_axis_velocity</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, axis_velocity: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-body-set-axis-velocity"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置轴速度。给定向量轴上的速度将被设置为给定向量长度。这对跳跃行为很有用。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-body-set-collision-layer"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-body-set-collision-layer" names="class_physicsserver3d_method_body_set_collision_layer"><abbreviation explanation="无返回值。">void</abbreviation> <strong>body_set_collision_layer</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, layer: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-body-set-collision-layer"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置物体所属的物理层或层。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-body-set-collision-mask"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-body-set-collision-mask" names="class_physicsserver3d_method_body_set_collision_mask"><abbreviation explanation="无返回值。">void</abbreviation> <strong>body_set_collision_mask</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, mask: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-body-set-collision-mask"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置物理层或身体可以碰撞的层。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-body-set-collision-priority"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-body-set-collision-priority" names="class_physicsserver3d_method_body_set_collision_priority"><abbreviation explanation="无返回值。">void</abbreviation> <strong>body_set_collision_priority</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, priority: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-body-set-collision-priority"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置该物体的碰撞优先级。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-body-set-constant-force"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-body-set-constant-force" names="class_physicsserver3d_method_body_set_constant_force"><abbreviation explanation="无返回值。">void</abbreviation> <strong>body_set_constant_force</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, force: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-body-set-constant-force"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置该物体在每次物理更新时应用的总恒定位置力。</paragraph>
            <paragraph>见 <reference internal="True" refid="class-physicsserver3d-method-body-add-constant-force"><inline classes="std std-ref">body_add_constant_force</inline></reference> 和 <reference internal="True" refid="class-physicsserver3d-method-body-add-constant-central-force"><inline classes="std std-ref">body_add_constant_central_force</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-body-set-constant-torque"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-body-set-constant-torque" names="class_physicsserver3d_method_body_set_constant_torque"><abbreviation explanation="无返回值。">void</abbreviation> <strong>body_set_constant_torque</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, torque: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-body-set-constant-torque"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置该物体在每次物理更新时应用的总恒定旋转力。</paragraph>
            <paragraph>见 <reference internal="True" refid="class-physicsserver3d-method-body-add-constant-torque"><inline classes="std std-ref">body_add_constant_torque</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-body-set-enable-continuous-collision-detection"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-body-set-enable-continuous-collision-detection" names="class_physicsserver3d_method_body_set_enable_continuous_collision_detection"><abbreviation explanation="无返回值。">void</abbreviation> <strong>body_set_enable_continuous_collision_detection</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, enable: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-body-set-enable-continuous-collision-detection"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果为 <literal>true</literal>，则启用连续碰撞检测模式。</paragraph>
            <paragraph>连续碰撞检测尝试预测运动物体碰撞的位置，而不是在碰撞时移动物体并纠正其运动。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-body-set-force-integration-callback"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-body-set-force-integration-callback" names="class_physicsserver3d_method_body_set_force_integration_callback"><abbreviation explanation="无返回值。">void</abbreviation> <strong>body_set_force_integration_callback</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, callable: <reference internal="True" refuri="class_callable#class-callable"><inline classes="std std-ref">Callable</inline></reference>, userdata: <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> = null) <reference internal="True" refid="class-physicsserver3d-method-body-set-force-integration-callback"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将物体的自定义力积分回调函数设置为 <literal>callable</literal>。使用空的 <reference internal="True" refuri="class_callable#class-callable"><inline classes="std std-ref">Callable</inline></reference>（<literal>Callable()</literal>）清除自定义回调。</paragraph>
            <paragraph>函数 <literal>callable</literal> 将在标准力积分之前的每个物理刻度被调用（参见 <reference internal="True" refid="class-physicsserver3d-method-body-set-omit-force-integration"><inline classes="std std-ref">body_set_omit_force_integration</inline></reference>）。例如，它可用于根据与其他物体的接触更新物体的线速度和角速度。</paragraph>
            <paragraph>如果 <literal>userdata</literal> 不为 <literal>null</literal>，则函数 <literal>callable</literal> 必须接受以下两个参数：</paragraph>
            <enumerated_list enumtype="arabic" prefix="" suffix=".">
                <list_item>
                    <paragraph><literal>state</literal>：一个 <reference internal="True" refuri="class_physicsdirectbodystate3d#class-physicsdirectbodystate3d"><inline classes="std std-ref">PhysicsDirectBodyState3D</inline></reference>，用于检索和修改物体的状态，</paragraph>
                </list_item>
                <list_item>
                    <paragraph><literal>userdata</literal>：一个 <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference>；其值将是传递到该方法的 <literal>userdata</literal>。</paragraph>
                </list_item>
            </enumerated_list>
            <paragraph>如果 <literal>userdata</literal> 为 <literal>null</literal>，则 <literal>callable</literal> 必须仅接受 <literal>state</literal> 参数。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-body-set-max-contacts-reported"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-body-set-max-contacts-reported" names="class_physicsserver3d_method_body_set_max_contacts_reported"><abbreviation explanation="无返回值。">void</abbreviation> <strong>body_set_max_contacts_reported</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, amount: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-body-set-max-contacts-reported"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置要报告的最大接触数。物体可以记录与其他物体的接触。将最大接触数设置为大于 0 的数字可以启用此功能。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-body-set-mode"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-body-set-mode" names="class_physicsserver3d_method_body_set_mode"><abbreviation explanation="无返回值。">void</abbreviation> <strong>body_set_mode</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, mode: <reference internal="True" refid="enum-physicsserver3d-bodymode"><inline classes="std std-ref">BodyMode</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-body-set-mode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>从 <reference internal="True" refid="enum-physicsserver3d-bodymode"><inline classes="std std-ref">BodyMode</inline></reference> 常量之一设置主体模式。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-body-set-omit-force-integration"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-body-set-omit-force-integration" names="class_physicsserver3d_method_body_set_omit_force_integration"><abbreviation explanation="无返回值。">void</abbreviation> <strong>body_set_omit_force_integration</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, enable: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-body-set-omit-force-integration"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置物体是否省略标准力集成。如果 <literal>enable</literal> 为 <literal>true</literal>，则物体不会自动使用施加的力、力矩、阻尼来更新自身的线速度和角速度。在这种情况下可以使用 <reference internal="True" refid="class-physicsserver3d-method-body-set-force-integration-callback"><inline classes="std std-ref">body_set_force_integration_callback</inline></reference> 来手动更新线速度和角速度。</paragraph>
            <paragraph>设置 <reference internal="True" refuri="class_rigidbody3d#class-rigidbody3d-property-custom-integrator"><inline classes="std std-ref">RigidBody3D.custom_integrator</inline></reference> 属性时会调用该方法。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-body-set-param"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-body-set-param" names="class_physicsserver3d_method_body_set_param"><abbreviation explanation="无返回值。">void</abbreviation> <strong>body_set_param</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, param: <reference internal="True" refid="enum-physicsserver3d-bodyparameter"><inline classes="std std-ref">BodyParameter</inline></reference>, value: <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-body-set-param"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置物体参数。可用参数列表位于 <reference internal="True" refid="enum-physicsserver3d-bodyparameter"><inline classes="std std-ref">BodyParameter</inline></reference> 常量上。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-body-set-ray-pickable"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-body-set-ray-pickable" names="class_physicsserver3d_method_body_set_ray_pickable"><abbreviation explanation="无返回值。">void</abbreviation> <strong>body_set_ray_pickable</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, enable: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-body-set-ray-pickable"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果设置了 <literal>enable</literal>，则将该物体设置为可通过射线拾取。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-body-set-shape"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-body-set-shape" names="class_physicsserver3d_method_body_set_shape"><abbreviation explanation="无返回值。">void</abbreviation> <strong>body_set_shape</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, shape: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-body-set-shape"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>用一个给定的物体形状代替另一个。旧的形状是通过其索引选择的，新的是通过其 <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> 选择的。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-body-set-shape-disabled"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-body-set-shape-disabled" names="class_physicsserver3d_method_body_set_shape_disabled"><abbreviation explanation="无返回值。">void</abbreviation> <strong>body_set_shape_disabled</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, disabled: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-body-set-shape-disabled"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <container classes="contribute">
                <paragraph>该方法目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-body-set-shape-transform"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-body-set-shape-transform" names="class_physicsserver3d_method_body_set_shape_transform"><abbreviation explanation="无返回值。">void</abbreviation> <strong>body_set_shape_transform</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, shape_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, transform: <reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-body-set-shape-transform"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置物体形状的变换矩阵。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-body-set-space"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-body-set-space" names="class_physicsserver3d_method_body_set_space"><abbreviation explanation="无返回值。">void</abbreviation> <strong>body_set_space</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, space: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-body-set-space"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>给物体分配一个空间（见 <reference internal="True" refid="class-physicsserver3d-method-space-create"><inline classes="std std-ref">space_create</inline></reference>）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-body-set-state"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-body-set-state" names="class_physicsserver3d_method_body_set_state"><abbreviation explanation="无返回值。">void</abbreviation> <strong>body_set_state</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, state: <reference internal="True" refid="enum-physicsserver3d-bodystate"><inline classes="std std-ref">BodyState</inline></reference>, value: <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-body-set-state"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置主体状态（见 <reference internal="True" refid="enum-physicsserver3d-bodystate"><inline classes="std std-ref">BodyState</inline></reference> 常量）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-body-set-state-sync-callback"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-body-set-state-sync-callback" names="class_physicsserver3d_method_body_set_state_sync_callback"><abbreviation explanation="无返回值。">void</abbreviation> <strong>body_set_state_sync_callback</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, callable: <reference internal="True" refuri="class_callable#class-callable"><inline classes="std std-ref">Callable</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-body-set-state-sync-callback"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Sets the body's state synchronization callback function to <literal>callable</literal>. Use an empty <reference internal="True" refuri="class_callable#class-callable"><inline classes="std std-ref">Callable</inline></reference> (<literal>Callable()</literal>) to clear the callback.</paragraph>
            <paragraph>The function <literal>callable</literal> will be called every physics frame, assuming that the body was active during the previous physics tick, and can be used to fetch the latest state from the physics server.</paragraph>
            <paragraph>The function <literal>callable</literal> must take the following parameters:</paragraph>
            <enumerated_list enumtype="arabic" prefix="" suffix=".">
                <list_item>
                    <paragraph><literal>state</literal>: a <reference internal="True" refuri="class_physicsdirectbodystate3d#class-physicsdirectbodystate3d"><inline classes="std std-ref">PhysicsDirectBodyState3D</inline></reference>, used to retrieve the body's state.</paragraph>
                </list_item>
            </enumerated_list>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-body-test-motion"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-body-test-motion" names="class_physicsserver3d_method_body_test_motion"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>body_test_motion</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, parameters: <reference internal="True" refuri="class_physicstestmotionparameters3d#class-physicstestmotionparameters3d"><inline classes="std std-ref">PhysicsTestMotionParameters3D</inline></reference>, result: <reference internal="True" refuri="class_physicstestmotionresult3d#class-physicstestmotionresult3d"><inline classes="std std-ref">PhysicsTestMotionResult3D</inline></reference> = null) <reference internal="True" refid="class-physicsserver3d-method-body-test-motion"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果从空间中的给定点沿着运动向量移动会导致碰撞，则返回 <literal>true</literal>。传递 <reference internal="True" refuri="class_physicstestmotionparameters3d#class-physicstestmotionparameters3d"><inline classes="std std-ref">PhysicsTestMotionParameters3D</inline></reference> 可以设置运动参数。还可以传递 <reference internal="True" refuri="class_physicstestmotionresult3d#class-physicstestmotionresult3d"><inline classes="std std-ref">PhysicsTestMotionResult3D</inline></reference>，从而返回其他信息。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-box-shape-create"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-box-shape-create" names="class_physicsserver3d_method_box_shape_create"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>box_shape_create</strong>() <reference internal="True" refid="class-physicsserver3d-method-box-shape-create"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <container classes="contribute">
                <paragraph>该方法目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-capsule-shape-create"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-capsule-shape-create" names="class_physicsserver3d_method_capsule_shape_create"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>capsule_shape_create</strong>() <reference internal="True" refid="class-physicsserver3d-method-capsule-shape-create"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <container classes="contribute">
                <paragraph>该方法目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-concave-polygon-shape-create"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-concave-polygon-shape-create" names="class_physicsserver3d_method_concave_polygon_shape_create"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>concave_polygon_shape_create</strong>() <reference internal="True" refid="class-physicsserver3d-method-concave-polygon-shape-create"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <container classes="contribute">
                <paragraph>该方法目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-cone-twist-joint-get-param"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-cone-twist-joint-get-param" names="class_physicsserver3d_method_cone_twist_joint_get_param"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>cone_twist_joint_get_param</strong>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, param: <reference internal="True" refid="enum-physicsserver3d-conetwistjointparam"><inline classes="std std-ref">ConeTwistJointParam</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver3d-method-cone-twist-joint-get-param"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>获取圆锥体扭曲关节参数（见 <reference internal="True" refid="enum-physicsserver3d-conetwistjointparam"><inline classes="std std-ref">ConeTwistJointParam</inline></reference> 常量）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-cone-twist-joint-set-param"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-cone-twist-joint-set-param" names="class_physicsserver3d_method_cone_twist_joint_set_param"><abbreviation explanation="无返回值。">void</abbreviation> <strong>cone_twist_joint_set_param</strong>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, param: <reference internal="True" refid="enum-physicsserver3d-conetwistjointparam"><inline classes="std std-ref">ConeTwistJointParam</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-cone-twist-joint-set-param"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置圆锥体扭曲关节参数（见 <reference internal="True" refid="enum-physicsserver3d-conetwistjointparam"><inline classes="std std-ref">ConeTwistJointParam</inline></reference> 常量）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-convex-polygon-shape-create"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-convex-polygon-shape-create" names="class_physicsserver3d_method_convex_polygon_shape_create"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>convex_polygon_shape_create</strong>() <reference internal="True" refid="class-physicsserver3d-method-convex-polygon-shape-create"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <container classes="contribute">
                <paragraph>该方法目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-custom-shape-create"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-custom-shape-create" names="class_physicsserver3d_method_custom_shape_create"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>custom_shape_create</strong>() <reference internal="True" refid="class-physicsserver3d-method-custom-shape-create"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <container classes="contribute">
                <paragraph>该方法目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-cylinder-shape-create"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-cylinder-shape-create" names="class_physicsserver3d_method_cylinder_shape_create"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>cylinder_shape_create</strong>() <reference internal="True" refid="class-physicsserver3d-method-cylinder-shape-create"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <container classes="contribute">
                <paragraph>该方法目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-free-rid"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-free-rid" names="class_physicsserver3d_method_free_rid"><abbreviation explanation="无返回值。">void</abbreviation> <strong>free_rid</strong>(rid: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-free-rid"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>销毁由 PhysicsServer3D 创建的任何对象。如果传入的 <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> 不是由 PhysicsServer3D 创建的对象，则会向控制台发送错误。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-generic-6dof-joint-get-flag"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-generic-6dof-joint-get-flag" names="class_physicsserver3d_method_generic_6dof_joint_get_flag"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>generic_6dof_joint_get_flag</strong>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, axis: Vector3.Axis, flag: <reference internal="True" refid="enum-physicsserver3d-g6dofjointaxisflag"><inline classes="std std-ref">G6DOFJointAxisFlag</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver3d-method-generic-6dof-joint-get-flag"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回通用 6DOF 关节的标志值。可用标志列表见 <reference internal="True" refid="enum-physicsserver3d-g6dofjointaxisflag"><inline classes="std std-ref">G6DOFJointAxisFlag</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-generic-6dof-joint-get-param"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-generic-6dof-joint-get-param" names="class_physicsserver3d_method_generic_6dof_joint_get_param"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>generic_6dof_joint_get_param</strong>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, axis: Vector3.Axis, param: <reference internal="True" refid="enum-physicsserver3d-g6dofjointaxisparam"><inline classes="std std-ref">G6DOFJointAxisParam</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver3d-method-generic-6dof-joint-get-param"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回通用 6DOF 关节的参数值。可用参数列表见 <reference internal="True" refid="enum-physicsserver3d-g6dofjointaxisparam"><inline classes="std std-ref">G6DOFJointAxisParam</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-generic-6dof-joint-set-flag"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-generic-6dof-joint-set-flag" names="class_physicsserver3d_method_generic_6dof_joint_set_flag"><abbreviation explanation="无返回值。">void</abbreviation> <strong>generic_6dof_joint_set_flag</strong>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, axis: Vector3.Axis, flag: <reference internal="True" refid="enum-physicsserver3d-g6dofjointaxisflag"><inline classes="std std-ref">G6DOFJointAxisFlag</inline></reference>, enable: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-generic-6dof-joint-set-flag"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置给定的通用 6DOF 关节标志值。可用标志列表见 <reference internal="True" refid="enum-physicsserver3d-g6dofjointaxisflag"><inline classes="std std-ref">G6DOFJointAxisFlag</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-generic-6dof-joint-set-param"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-generic-6dof-joint-set-param" names="class_physicsserver3d_method_generic_6dof_joint_set_param"><abbreviation explanation="无返回值。">void</abbreviation> <strong>generic_6dof_joint_set_param</strong>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, axis: Vector3.Axis, param: <reference internal="True" refid="enum-physicsserver3d-g6dofjointaxisparam"><inline classes="std std-ref">G6DOFJointAxisParam</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-generic-6dof-joint-set-param"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置给定的通用 6DOF 关节参数值。可用参数列表见 <reference internal="True" refid="enum-physicsserver3d-g6dofjointaxisparam"><inline classes="std std-ref">G6DOFJointAxisParam</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-get-process-info"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-get-process-info" names="class_physicsserver3d_method_get_process_info"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_process_info</strong>(process_info: <reference internal="True" refid="enum-physicsserver3d-processinfo"><inline classes="std std-ref">ProcessInfo</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-get-process-info"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回有关 3D 物理引擎当前状态的信息。可用状态的列表见 <reference internal="True" refid="enum-physicsserver3d-processinfo"><inline classes="std std-ref">ProcessInfo</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-heightmap-shape-create"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-heightmap-shape-create" names="class_physicsserver3d_method_heightmap_shape_create"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>heightmap_shape_create</strong>() <reference internal="True" refid="class-physicsserver3d-method-heightmap-shape-create"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <container classes="contribute">
                <paragraph>该方法目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-hinge-joint-get-flag"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-hinge-joint-get-flag" names="class_physicsserver3d_method_hinge_joint_get_flag"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>hinge_joint_get_flag</strong>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, flag: <reference internal="True" refid="enum-physicsserver3d-hingejointflag"><inline classes="std std-ref">HingeJointFlag</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver3d-method-hinge-joint-get-flag"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>获取 hinge_joint 标志（见 <reference internal="True" refid="enum-physicsserver3d-hingejointflag"><inline classes="std std-ref">HingeJointFlag</inline></reference> 常量）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-hinge-joint-get-param"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-hinge-joint-get-param" names="class_physicsserver3d_method_hinge_joint_get_param"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>hinge_joint_get_param</strong>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, param: <reference internal="True" refid="enum-physicsserver3d-hingejointparam"><inline classes="std std-ref">HingeJointParam</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver3d-method-hinge-joint-get-param"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>获取 hinge_joint 参数（见 <reference internal="True" refid="enum-physicsserver3d-hingejointparam"><inline classes="std std-ref">HingeJointParam</inline></reference>）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-hinge-joint-set-flag"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-hinge-joint-set-flag" names="class_physicsserver3d_method_hinge_joint_set_flag"><abbreviation explanation="无返回值。">void</abbreviation> <strong>hinge_joint_set_flag</strong>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, flag: <reference internal="True" refid="enum-physicsserver3d-hingejointflag"><inline classes="std std-ref">HingeJointFlag</inline></reference>, enabled: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-hinge-joint-set-flag"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置 hinge_joint 标志（见 <reference internal="True" refid="enum-physicsserver3d-hingejointflag"><inline classes="std std-ref">HingeJointFlag</inline></reference> 常量）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-hinge-joint-set-param"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-hinge-joint-set-param" names="class_physicsserver3d_method_hinge_joint_set_param"><abbreviation explanation="无返回值。">void</abbreviation> <strong>hinge_joint_set_param</strong>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, param: <reference internal="True" refid="enum-physicsserver3d-hingejointparam"><inline classes="std std-ref">HingeJointParam</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-hinge-joint-set-param"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置 hinge_joint 参数（见 <reference internal="True" refid="enum-physicsserver3d-hingejointparam"><inline classes="std std-ref">HingeJointParam</inline></reference> 常量）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-joint-clear"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-joint-clear" names="class_physicsserver3d_method_joint_clear"><abbreviation explanation="无返回值。">void</abbreviation> <strong>joint_clear</strong>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-joint-clear"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <container classes="contribute">
                <paragraph>该方法目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-joint-create"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-joint-create" names="class_physicsserver3d_method_joint_create"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>joint_create</strong>() <reference internal="True" refid="class-physicsserver3d-method-joint-create"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <container classes="contribute">
                <paragraph>该方法目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-joint-disable-collisions-between-bodies"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-joint-disable-collisions-between-bodies" names="class_physicsserver3d_method_joint_disable_collisions_between_bodies"><abbreviation explanation="无返回值。">void</abbreviation> <strong>joint_disable_collisions_between_bodies</strong>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, disable: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-joint-disable-collisions-between-bodies"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置附加至该 <reference internal="True" refuri="class_joint3d#class-joint3d"><inline classes="std std-ref">Joint3D</inline></reference> 的物体能否互相碰撞。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-joint-get-solver-priority"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-joint-get-solver-priority" names="class_physicsserver3d_method_joint_get_solver_priority"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>joint_get_solver_priority</strong>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver3d-method-joint-get-solver-priority"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>获取该 Joint3D 的优先级。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-joint-get-type"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-joint-get-type" names="class_physicsserver3d_method_joint_get_type"><reference internal="True" refid="enum-physicsserver3d-jointtype"><inline classes="std std-ref">JointType</inline></reference> <strong>joint_get_type</strong>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver3d-method-joint-get-type"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回该 Joint3D 的类型。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-joint-is-disabled-collisions-between-bodies"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-joint-is-disabled-collisions-between-bodies" names="class_physicsserver3d_method_joint_is_disabled_collisions_between_bodies"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>joint_is_disabled_collisions_between_bodies</strong>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver3d-method-joint-is-disabled-collisions-between-bodies"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回附加至该 <reference internal="True" refuri="class_joint3d#class-joint3d"><inline classes="std std-ref">Joint3D</inline></reference> 的物体能否互相碰撞。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-joint-make-cone-twist"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-joint-make-cone-twist" names="class_physicsserver3d_method_joint_make_cone_twist"><abbreviation explanation="无返回值。">void</abbreviation> <strong>joint_make_cone_twist</strong>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, body_A: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, local_ref_A: <reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference>, body_B: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, local_ref_B: <reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-joint-make-cone-twist"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <container classes="contribute">
                <paragraph>该方法目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-joint-make-generic-6dof"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-joint-make-generic-6dof" names="class_physicsserver3d_method_joint_make_generic_6dof"><abbreviation explanation="无返回值。">void</abbreviation> <strong>joint_make_generic_6dof</strong>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, body_A: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, local_ref_A: <reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference>, body_B: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, local_ref_B: <reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-joint-make-generic-6dof"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将关节设置为通用六自由度（6DOF）关节。请使用 <reference internal="True" refid="class-physicsserver3d-method-generic-6dof-joint-set-flag"><inline classes="std std-ref">generic_6dof_joint_set_flag</inline></reference> 和 <reference internal="True" refid="class-physicsserver3d-method-generic-6dof-joint-set-param"><inline classes="std std-ref">generic_6dof_joint_set_param</inline></reference> 来设置关节的标志和参数。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-joint-make-hinge"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-joint-make-hinge" names="class_physicsserver3d_method_joint_make_hinge"><abbreviation explanation="无返回值。">void</abbreviation> <strong>joint_make_hinge</strong>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, body_A: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, hinge_A: <reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference>, body_B: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, hinge_B: <reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-joint-make-hinge"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <container classes="contribute">
                <paragraph>该方法目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-joint-make-pin"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-joint-make-pin" names="class_physicsserver3d_method_joint_make_pin"><abbreviation explanation="无返回值。">void</abbreviation> <strong>joint_make_pin</strong>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, body_A: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, local_A: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>, body_B: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, local_B: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-joint-make-pin"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <container classes="contribute">
                <paragraph>该方法目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-joint-make-slider"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-joint-make-slider" names="class_physicsserver3d_method_joint_make_slider"><abbreviation explanation="无返回值。">void</abbreviation> <strong>joint_make_slider</strong>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, body_A: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, local_ref_A: <reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference>, body_B: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, local_ref_B: <reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-joint-make-slider"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <container classes="contribute">
                <paragraph>该方法目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-joint-set-solver-priority"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-joint-set-solver-priority" names="class_physicsserver3d_method_joint_set_solver_priority"><abbreviation explanation="无返回值。">void</abbreviation> <strong>joint_set_solver_priority</strong>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, priority: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-joint-set-solver-priority"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置该 Joint3D 的优先级。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-pin-joint-get-local-a"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-pin-joint-get-local-a" names="class_physicsserver3d_method_pin_joint_get_local_a"><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> <strong>pin_joint_get_local_a</strong>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver3d-method-pin-joint-get-local-a"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回关节在关节物体 A 的局部空间中的位置。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-pin-joint-get-local-b"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-pin-joint-get-local-b" names="class_physicsserver3d_method_pin_joint_get_local_b"><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> <strong>pin_joint_get_local_b</strong>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver3d-method-pin-joint-get-local-b"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回关节在关节物体 B 的局部空间中的位置。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-pin-joint-get-param"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-pin-joint-get-param" names="class_physicsserver3d_method_pin_joint_get_param"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>pin_joint_get_param</strong>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, param: <reference internal="True" refid="enum-physicsserver3d-pinjointparam"><inline classes="std std-ref">PinJointParam</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver3d-method-pin-joint-get-param"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>获取 pin_joint 参数（见 <reference internal="True" refid="enum-physicsserver3d-pinjointparam"><inline classes="std std-ref">PinJointParam</inline></reference> 常量）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-pin-joint-set-local-a"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-pin-joint-set-local-a" names="class_physicsserver3d_method_pin_joint_set_local_a"><abbreviation explanation="无返回值。">void</abbreviation> <strong>pin_joint_set_local_a</strong>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, local_A: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-pin-joint-set-local-a"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置关节在关节物体 A 的局部空间中的位置。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-pin-joint-set-local-b"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-pin-joint-set-local-b" names="class_physicsserver3d_method_pin_joint_set_local_b"><abbreviation explanation="无返回值。">void</abbreviation> <strong>pin_joint_set_local_b</strong>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, local_B: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-pin-joint-set-local-b"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置关节在关节物体 B 的局部空间中的位置。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-pin-joint-set-param"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-pin-joint-set-param" names="class_physicsserver3d_method_pin_joint_set_param"><abbreviation explanation="无返回值。">void</abbreviation> <strong>pin_joint_set_param</strong>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, param: <reference internal="True" refid="enum-physicsserver3d-pinjointparam"><inline classes="std std-ref">PinJointParam</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-pin-joint-set-param"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置 pin_joint 参数（见 <reference internal="True" refid="enum-physicsserver3d-pinjointparam"><inline classes="std std-ref">PinJointParam</inline></reference> 常量）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-separation-ray-shape-create"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-separation-ray-shape-create" names="class_physicsserver3d_method_separation_ray_shape_create"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>separation_ray_shape_create</strong>() <reference internal="True" refid="class-physicsserver3d-method-separation-ray-shape-create"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <container classes="contribute">
                <paragraph>该方法目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-set-active"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-set-active" names="class_physicsserver3d_method_set_active"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_active</strong>(active: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-set-active"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>激活或停用 3D 物理引擎。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-shape-get-data"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-shape-get-data" names="class_physicsserver3d_method_shape_get_data"><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> <strong>shape_get_data</strong>(shape: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver3d-method-shape-get-data"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回形状数据。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-shape-get-margin"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-shape-get-margin" names="class_physicsserver3d_method_shape_get_margin"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>shape_get_margin</strong>(shape: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver3d-method-shape-get-margin"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回形状的碰撞边距。</paragraph>
            <paragraph><strong>注意：</strong>Godot Physics 中并未使用，所以始终返回 <literal>0</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-shape-get-type"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-shape-get-type" names="class_physicsserver3d_method_shape_get_type"><reference internal="True" refid="enum-physicsserver3d-shapetype"><inline classes="std std-ref">ShapeType</inline></reference> <strong>shape_get_type</strong>(shape: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver3d-method-shape-get-type"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回形状的类型（见 <reference internal="True" refid="enum-physicsserver3d-shapetype"><inline classes="std std-ref">ShapeType</inline></reference> 常量）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-shape-set-data"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-shape-set-data" names="class_physicsserver3d_method_shape_set_data"><abbreviation explanation="无返回值。">void</abbreviation> <strong>shape_set_data</strong>(shape: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, data: <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-shape-set-data"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置定义形状和大小的形状数据。要传递的数据取决于创建的形状的类型 <reference internal="True" refid="class-physicsserver3d-method-shape-get-type"><inline classes="std std-ref">shape_get_type</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-shape-set-margin"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-shape-set-margin" names="class_physicsserver3d_method_shape_set_margin"><abbreviation explanation="无返回值。">void</abbreviation> <strong>shape_set_margin</strong>(shape: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, margin: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-shape-set-margin"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置形状的碰撞边距。</paragraph>
            <paragraph><strong>注意：</strong>这在 Godot 物理中未被使用。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-slider-joint-get-param"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-slider-joint-get-param" names="class_physicsserver3d_method_slider_joint_get_param"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>slider_joint_get_param</strong>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, param: <reference internal="True" refid="enum-physicsserver3d-sliderjointparam"><inline classes="std std-ref">SliderJointParam</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver3d-method-slider-joint-get-param"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>获取 slider_joint 参数（见 <reference internal="True" refid="enum-physicsserver3d-sliderjointparam"><inline classes="std std-ref">SliderJointParam</inline></reference> 常量）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-slider-joint-set-param"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-slider-joint-set-param" names="class_physicsserver3d_method_slider_joint_set_param"><abbreviation explanation="无返回值。">void</abbreviation> <strong>slider_joint_set_param</strong>(joint: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, param: <reference internal="True" refid="enum-physicsserver3d-sliderjointparam"><inline classes="std std-ref">SliderJointParam</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-slider-joint-set-param"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>获取 slider_joint 参数（见 <reference internal="True" refid="enum-physicsserver3d-sliderjointparam"><inline classes="std std-ref">SliderJointParam</inline></reference> 常量）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-soft-body-add-collision-exception"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-soft-body-add-collision-exception" names="class_physicsserver3d_method_soft_body_add_collision_exception"><abbreviation explanation="无返回值。">void</abbreviation> <strong>soft_body_add_collision_exception</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, body_b: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-soft-body-add-collision-exception"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将给定物体添加到免于碰撞的物体列表中。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-soft-body-create"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-soft-body-create" names="class_physicsserver3d_method_soft_body_create"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>soft_body_create</strong>() <reference internal="True" refid="class-physicsserver3d-method-soft-body-create"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>创建一个新的柔性物体并返回其内部 <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-soft-body-get-bounds"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-soft-body-get-bounds" names="class_physicsserver3d_method_soft_body_get_bounds"><reference internal="True" refuri="class_aabb#class-aabb"><inline classes="std std-ref">AABB</inline></reference> <strong>soft_body_get_bounds</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver3d-method-soft-body-get-bounds"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回给定柔性物体在全局坐标中的边界。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-soft-body-get-collision-layer"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-soft-body-get-collision-layer" names="class_physicsserver3d_method_soft_body_get_collision_layer"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>soft_body_get_collision_layer</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver3d-method-soft-body-get-collision-layer"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回给定柔性物体所属的物理层。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-soft-body-get-collision-mask"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-soft-body-get-collision-mask" names="class_physicsserver3d_method_soft_body_get_collision_mask"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>soft_body_get_collision_mask</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver3d-method-soft-body-get-collision-mask"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回给定柔性物体可以碰撞的物理层。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-soft-body-get-damping-coefficient"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-soft-body-get-damping-coefficient" names="class_physicsserver3d_method_soft_body_get_damping_coefficient"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>soft_body_get_damping_coefficient</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver3d-method-soft-body-get-damping-coefficient"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回给定柔性物体的阻尼系数。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-soft-body-get-drag-coefficient"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-soft-body-get-drag-coefficient" names="class_physicsserver3d_method_soft_body_get_drag_coefficient"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>soft_body_get_drag_coefficient</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver3d-method-soft-body-get-drag-coefficient"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回给定柔性物体的阻力系数。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-soft-body-get-linear-stiffness"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-soft-body-get-linear-stiffness" names="class_physicsserver3d_method_soft_body_get_linear_stiffness"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>soft_body_get_linear_stiffness</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver3d-method-soft-body-get-linear-stiffness"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回给定柔性物体的线性刚度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-soft-body-get-point-global-position"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-soft-body-get-point-global-position" names="class_physicsserver3d_method_soft_body_get_point_global_position"><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> <strong>soft_body_get_point_global_position</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, point_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver3d-method-soft-body-get-point-global-position"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回给定柔性物体点在全局坐标中的当前位置。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-soft-body-get-pressure-coefficient"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-soft-body-get-pressure-coefficient" names="class_physicsserver3d_method_soft_body_get_pressure_coefficient"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>soft_body_get_pressure_coefficient</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver3d-method-soft-body-get-pressure-coefficient"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回给定柔性物体的压力系数。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-soft-body-get-simulation-precision"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-soft-body-get-simulation-precision" names="class_physicsserver3d_method_soft_body_get_simulation_precision"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>soft_body_get_simulation_precision</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver3d-method-soft-body-get-simulation-precision"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回给定柔性物体的模拟精度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-soft-body-get-space"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-soft-body-get-space" names="class_physicsserver3d_method_soft_body_get_space"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>soft_body_get_space</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver3d-method-soft-body-get-space"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回分配给给定柔性物体的空间的 <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-soft-body-get-state"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-soft-body-get-state" names="class_physicsserver3d_method_soft_body_get_state"><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> <strong>soft_body_get_state</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, state: <reference internal="True" refid="enum-physicsserver3d-bodystate"><inline classes="std std-ref">BodyState</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver3d-method-soft-body-get-state"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回给定的柔性物体状态（见 <reference internal="True" refid="enum-physicsserver3d-bodystate"><inline classes="std std-ref">BodyState</inline></reference> 常量）。</paragraph>
            <paragraph><strong>注意：</strong>Godot 的默认物理实现不支持 <reference internal="True" refid="class-physicsserver3d-constant-body-state-linear-velocity"><inline classes="std std-ref">BODY_STATE_LINEAR_VELOCITY</inline></reference>、<reference internal="True" refid="class-physicsserver3d-constant-body-state-angular-velocity"><inline classes="std std-ref">BODY_STATE_ANGULAR_VELOCITY</inline></reference>、<reference internal="True" refid="class-physicsserver3d-constant-body-state-sleeping"><inline classes="std std-ref">BODY_STATE_SLEEPING</inline></reference> 或 <reference internal="True" refid="class-physicsserver3d-constant-body-state-can-sleep"><inline classes="std std-ref">BODY_STATE_CAN_SLEEP</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-soft-body-get-total-mass"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-soft-body-get-total-mass" names="class_physicsserver3d_method_soft_body_get_total_mass"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>soft_body_get_total_mass</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver3d-method-soft-body-get-total-mass"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回分配给给定柔性物体的总质量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-soft-body-is-point-pinned"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-soft-body-is-point-pinned" names="class_physicsserver3d_method_soft_body_is_point_pinned"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>soft_body_is_point_pinned</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, point_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver3d-method-soft-body-is-point-pinned"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回给定的柔性物体点是否已固定。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-soft-body-move-point"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-soft-body-move-point" names="class_physicsserver3d_method_soft_body_move_point"><abbreviation explanation="无返回值。">void</abbreviation> <strong>soft_body_move_point</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, point_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, global_position: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-soft-body-move-point"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将给定的柔性物体点移动到全局坐标中的某个位置。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-soft-body-pin-point"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-soft-body-pin-point" names="class_physicsserver3d_method_soft_body_pin_point"><abbreviation explanation="无返回值。">void</abbreviation> <strong>soft_body_pin_point</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, point_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, pin: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-soft-body-pin-point"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>根据 <literal>pin</literal> 的值固定或取消固定给定的柔性物体点。</paragraph>
            <paragraph><strong>注意：</strong>固定一个点可以有效地使其成为运动学的，从而防止其受到力的影响，但你仍然可以使用 <reference internal="True" refid="class-physicsserver3d-method-soft-body-move-point"><inline classes="std std-ref">soft_body_move_point</inline></reference> 移动它。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-soft-body-remove-all-pinned-points"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-soft-body-remove-all-pinned-points" names="class_physicsserver3d_method_soft_body_remove_all_pinned_points"><abbreviation explanation="无返回值。">void</abbreviation> <strong>soft_body_remove_all_pinned_points</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-soft-body-remove-all-pinned-points"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>取消固定给定柔性物体的所有点。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-soft-body-remove-collision-exception"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-soft-body-remove-collision-exception" names="class_physicsserver3d_method_soft_body_remove_collision_exception"><abbreviation explanation="无返回值。">void</abbreviation> <strong>soft_body_remove_collision_exception</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, body_b: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-soft-body-remove-collision-exception"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>从免于碰撞的物体列表中移除给定的物体。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-soft-body-set-collision-layer"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-soft-body-set-collision-layer" names="class_physicsserver3d_method_soft_body_set_collision_layer"><abbreviation explanation="无返回值。">void</abbreviation> <strong>soft_body_set_collision_layer</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, layer: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-soft-body-set-collision-layer"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置给定柔性物体所属的物理层。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-soft-body-set-collision-mask"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-soft-body-set-collision-mask" names="class_physicsserver3d_method_soft_body_set_collision_mask"><abbreviation explanation="无返回值。">void</abbreviation> <strong>soft_body_set_collision_mask</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, mask: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-soft-body-set-collision-mask"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置给定柔性物体可以碰撞的物理层。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-soft-body-set-damping-coefficient"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-soft-body-set-damping-coefficient" names="class_physicsserver3d_method_soft_body_set_damping_coefficient"><abbreviation explanation="无返回值。">void</abbreviation> <strong>soft_body_set_damping_coefficient</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, damping_coefficient: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-soft-body-set-damping-coefficient"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置给定柔性物体的阻尼系数。当施加力时，较高的值会更明显地减慢物体的速度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-soft-body-set-drag-coefficient"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-soft-body-set-drag-coefficient" names="class_physicsserver3d_method_soft_body_set_drag_coefficient"><abbreviation explanation="无返回值。">void</abbreviation> <strong>soft_body_set_drag_coefficient</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, drag_coefficient: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-soft-body-set-drag-coefficient"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置给定柔性物体的阻力系数。较高的值会增加该物体的空气阻力。</paragraph>
            <paragraph><strong>注意：</strong>Godot 的默认物理实现当前未使用该值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-soft-body-set-linear-stiffness"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-soft-body-set-linear-stiffness" names="class_physicsserver3d_method_soft_body_set_linear_stiffness"><abbreviation explanation="无返回值。">void</abbreviation> <strong>soft_body_set_linear_stiffness</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, stiffness: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-soft-body-set-linear-stiffness"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置给定柔性物体的线性刚度。较高的值将导致物体更僵硬，而较低的值将增加物体的弯曲能力。该值可以介于 <literal>0.0</literal> 和 <literal>1.0</literal> （含）之间。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-soft-body-set-mesh"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-soft-body-set-mesh" names="class_physicsserver3d_method_soft_body_set_mesh"><abbreviation explanation="无返回值。">void</abbreviation> <strong>soft_body_set_mesh</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, mesh: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-soft-body-set-mesh"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置给定柔性物体的网格。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-soft-body-set-pressure-coefficient"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-soft-body-set-pressure-coefficient" names="class_physicsserver3d_method_soft_body_set_pressure_coefficient"><abbreviation explanation="无返回值。">void</abbreviation> <strong>soft_body_set_pressure_coefficient</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, pressure_coefficient: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-soft-body-set-pressure-coefficient"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置给定柔性物体的压力系数。模拟物体内部的压力积聚。较高的值会增加该效果的强度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-soft-body-set-ray-pickable"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-soft-body-set-ray-pickable" names="class_physicsserver3d_method_soft_body_set_ray_pickable"><abbreviation explanation="无返回值。">void</abbreviation> <strong>soft_body_set_ray_pickable</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, enable: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-soft-body-set-ray-pickable"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置在使用对象拾取时给定柔性物体是否可拾取。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-soft-body-set-simulation-precision"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-soft-body-set-simulation-precision" names="class_physicsserver3d_method_soft_body_set_simulation_precision"><abbreviation explanation="无返回值。">void</abbreviation> <strong>soft_body_set_simulation_precision</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, simulation_precision: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-soft-body-set-simulation-precision"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置给定柔性物体的模拟精度。增加该值将改善模拟结果，但会影响性能。请小心使用。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-soft-body-set-space"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-soft-body-set-space" names="class_physicsserver3d_method_soft_body_set_space"><abbreviation explanation="无返回值。">void</abbreviation> <strong>soft_body_set_space</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, space: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-soft-body-set-space"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>为给定的柔性物体分配一个空间（请参阅 <reference internal="True" refid="class-physicsserver3d-method-space-create"><inline classes="std std-ref">space_create</inline></reference>）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-soft-body-set-state"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-soft-body-set-state" names="class_physicsserver3d_method_soft_body_set_state"><abbreviation explanation="无返回值。">void</abbreviation> <strong>soft_body_set_state</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, state: <reference internal="True" refid="enum-physicsserver3d-bodystate"><inline classes="std std-ref">BodyState</inline></reference>, variant: <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-soft-body-set-state"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置给定物体的给定物体状态（见 <reference internal="True" refid="enum-physicsserver3d-bodystate"><inline classes="std std-ref">BodyState</inline></reference> 常量）。</paragraph>
            <paragraph><strong>注意：</strong>Godot 的默认物理实现不支持 <reference internal="True" refid="class-physicsserver3d-constant-body-state-linear-velocity"><inline classes="std std-ref">BODY_STATE_LINEAR_VELOCITY</inline></reference>、<reference internal="True" refid="class-physicsserver3d-constant-body-state-angular-velocity"><inline classes="std std-ref">BODY_STATE_ANGULAR_VELOCITY</inline></reference>、<reference internal="True" refid="class-physicsserver3d-constant-body-state-sleeping"><inline classes="std std-ref">BODY_STATE_SLEEPING</inline></reference> 或 <reference internal="True" refid="class-physicsserver3d-constant-body-state-can-sleep"><inline classes="std std-ref">BODY_STATE_CAN_SLEEP</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-soft-body-set-total-mass"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-soft-body-set-total-mass" names="class_physicsserver3d_method_soft_body_set_total_mass"><abbreviation explanation="无返回值。">void</abbreviation> <strong>soft_body_set_total_mass</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, total_mass: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-soft-body-set-total-mass"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置给定柔性物体的总质量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-soft-body-set-transform"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-soft-body-set-transform" names="class_physicsserver3d_method_soft_body_set_transform"><abbreviation explanation="无返回值。">void</abbreviation> <strong>soft_body_set_transform</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, transform: <reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-soft-body-set-transform"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置给定柔性物体的全局变换。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-soft-body-update-rendering-server"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-soft-body-update-rendering-server" names="class_physicsserver3d_method_soft_body_update_rendering_server"><abbreviation explanation="无返回值。">void</abbreviation> <strong>soft_body_update_rendering_server</strong>(body: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, rendering_server_handler: <reference internal="True" refuri="class_physicsserver3drenderingserverhandler#class-physicsserver3drenderingserverhandler"><inline classes="std std-ref">PhysicsServer3DRenderingServerHandler</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-soft-body-update-rendering-server"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>请求物理服务器通过 <literal>rendering_server_handler</literal> 接口用给定柔性物体点的最新位置更新渲染服务器。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-space-create"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-space-create" names="class_physicsserver3d_method_space_create"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>space_create</strong>() <reference internal="True" refid="class-physicsserver3d-method-space-create"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>创建一个空间。空间是物理引擎的参数集合，可以分配给区域或主体。它可以通过 <reference internal="True" refid="class-physicsserver3d-method-area-set-space"><inline classes="std std-ref">area_set_space</inline></reference> 分配给一个区域，或者通过 <reference internal="True" refid="class-physicsserver3d-method-body-set-space"><inline classes="std std-ref">body_set_space</inline></reference> 分配给一个主体。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-space-get-direct-state"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-space-get-direct-state" names="class_physicsserver3d_method_space_get_direct_state"><reference internal="True" refuri="class_physicsdirectspacestate3d#class-physicsdirectspacestate3d"><inline classes="std std-ref">PhysicsDirectSpaceState3D</inline></reference> <strong>space_get_direct_state</strong>(space: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-space-get-direct-state"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回空间的状态，即 <reference internal="True" refuri="class_physicsdirectspacestate3d#class-physicsdirectspacestate3d"><inline classes="std std-ref">PhysicsDirectSpaceState3D</inline></reference>。该对象可用于进行碰撞/相交的查询。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-space-get-param"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-space-get-param" names="class_physicsserver3d_method_space_get_param"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>space_get_param</strong>(space: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, param: <reference internal="True" refid="enum-physicsserver3d-spaceparameter"><inline classes="std std-ref">SpaceParameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver3d-method-space-get-param"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回空间参数的值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-space-is-active"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-space-is-active" names="class_physicsserver3d_method_space_is_active"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>space_is_active</strong>(space: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsserver3d-method-space-is-active"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回该空间是否是活动的。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-space-set-active"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-space-set-active" names="class_physicsserver3d_method_space_set_active"><abbreviation explanation="无返回值。">void</abbreviation> <strong>space_set_active</strong>(space: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, active: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-space-set-active"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将空间标记为活动空间。它不会有效果，除非它被分配到一个区域或物体。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-space-set-param"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-space-set-param" names="class_physicsserver3d_method_space_set_param"><abbreviation explanation="无返回值。">void</abbreviation> <strong>space_set_param</strong>(space: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>, param: <reference internal="True" refid="enum-physicsserver3d-spaceparameter"><inline classes="std std-ref">SpaceParameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <reference internal="True" refid="class-physicsserver3d-method-space-set-param"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置空间参数的值。可用参数列表位于 <reference internal="True" refid="enum-physicsserver3d-spaceparameter"><inline classes="std std-ref">SpaceParameter</inline></reference> 常量上。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-sphere-shape-create"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-sphere-shape-create" names="class_physicsserver3d_method_sphere_shape_create"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>sphere_shape_create</strong>() <reference internal="True" refid="class-physicsserver3d-method-sphere-shape-create"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <container classes="contribute">
                <paragraph>该方法目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsserver3d-method-world-boundary-shape-create"></target>
            <paragraph classes="classref-method" ids="class-physicsserver3d-method-world-boundary-shape-create" names="class_physicsserver3d_method_world_boundary_shape_create"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>world_boundary_shape_create</strong>() <reference internal="True" refid="class-physicsserver3d-method-world-boundary-shape-create"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <container classes="contribute">
                <paragraph>该方法目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效运算符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列位标志构成位掩码的整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

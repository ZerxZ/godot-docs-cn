<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_menubutton.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/MenuButton.xml.</comment>
    <target refid="class-menubutton"></target>
    <section ids="menubutton class-menubutton" names="menubutton class_menubutton">
        <title>MenuButton</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_button#class-button"><inline classes="std std-ref">Button</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_basebutton#class-basebutton"><inline classes="std std-ref">BaseButton</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_control#class-control"><inline classes="std std-ref">Control</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_canvasitem#class-canvasitem"><inline classes="std std-ref">CanvasItem</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>点击后会弹出 <reference internal="True" refuri="class_popupmenu#class-popupmenu"><inline classes="std std-ref">PopupMenu</inline></reference> 的按钮。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>点击后会弹出 <reference internal="True" refuri="class_popupmenu#class-popupmenu"><inline classes="std std-ref">PopupMenu</inline></reference> 的按钮。可以使用 <literal>get_popup().add_item("菜单项名称")</literal> 在这个 <reference internal="True" refuri="class_popupmenu#class-popupmenu"><inline classes="std std-ref">PopupMenu</inline></reference> 中创建新的菜单项，也可以直接从 Godot 编辑器的检查器中创建。</paragraph>
            <paragraph>另见 <reference internal="True" refuri="class_basebutton#class-basebutton"><inline classes="std std-ref">BaseButton</inline></reference>，提供了与该节点相关的常用属性和方法。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="47"></colspec>
                    <colspec colwidth="67"></colspec>
                    <colspec colwidth="79"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_basebutton#enum-basebutton-actionmode"><inline classes="std std-ref">ActionMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph>action_mode</paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal> (overrides <reference internal="True" refuri="class_basebutton#class-basebutton-property-action-mode"><inline classes="std std-ref">BaseButton</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph>flat</paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal> (overrides <reference internal="True" refuri="class_button#class-button-property-flat"><inline classes="std std-ref">Button</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_control#enum-control-focusmode"><inline classes="std std-ref">FocusMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph>focus_mode</paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal> (overrides <reference internal="True" refuri="class_control#class-control-property-focus-mode"><inline classes="std std-ref">Control</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-menubutton-property-item-count"><inline classes="std std-ref">item_count</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-menubutton-property-switch-on-hover"><inline classes="std std-ref">switch_on_hover</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph>toggle_mode</paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal> (overrides <reference internal="True" refuri="class_basebutton#class-basebutton-property-toggle-mode"><inline classes="std std-ref">BaseButton</inline></reference>)</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="35"></colspec>
                    <colspec colwidth="119"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_popupmenu#class-popupmenu"><inline classes="std std-ref">PopupMenu</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-menubutton-method-get-popup"><inline classes="std std-ref">get_popup</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-menubutton-method-set-disable-shortcuts"><inline classes="std std-ref">set_disable_shortcuts</inline></reference>(disabled: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-menubutton-method-show-popup"><inline classes="std std-ref">show_popup</inline></reference>()</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="信号">
            <title>信号</title>
            <target refid="class-menubutton-signal-about-to-popup"></target>
            <paragraph classes="classref-signal" ids="class-menubutton-signal-about-to-popup" names="class_menubutton_signal_about_to_popup"><strong>about_to_popup</strong>() <reference internal="True" refid="class-menubutton-signal-about-to-popup"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>该 MenuButton 的 <reference internal="True" refuri="class_popupmenu#class-popupmenu"><inline classes="std std-ref">PopupMenu</inline></reference> 即将显示时发出。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="属性说明">
            <title>属性说明</title>
            <target refid="class-menubutton-property-item-count"></target>
            <paragraph classes="classref-property" ids="class-menubutton-property-item-count" names="class_menubutton_property_item_count"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>item_count</strong> = <literal>0</literal> <reference internal="True" refid="class-menubutton-property-item-count"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_item_count</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_item_count</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>当前列表中的项目数。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-menubutton-property-switch-on-hover"></target>
            <paragraph classes="classref-property" ids="class-menubutton-property-switch-on-hover" names="class_menubutton_property_switch_on_hover"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>switch_on_hover</strong> = <literal>false</literal> <reference internal="True" refid="class-menubutton-property-switch-on-hover"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_switch_on_hover</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_switch_on_hover</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，当光标悬停在同一父级中也启用了 <reference internal="True" refid="class-menubutton-property-switch-on-hover"><inline classes="std std-ref">switch_on_hover</inline></reference> 的另一个 <strong>MenuButton</strong> 上方时，它将关闭当前的 <strong>MenuButton</strong> 并打开另一个。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="方法说明">
            <title>方法说明</title>
            <target refid="class-menubutton-method-get-popup"></target>
            <paragraph classes="classref-method" ids="class-menubutton-method-get-popup" names="class_menubutton_method_get_popup"><reference internal="True" refuri="class_popupmenu#class-popupmenu"><inline classes="std std-ref">PopupMenu</inline></reference> <strong>get_popup</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-menubutton-method-get-popup"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回这个按钮中包含的 <reference internal="True" refuri="class_popupmenu#class-popupmenu"><inline classes="std std-ref">PopupMenu</inline></reference>。</paragraph>
            <paragraph><strong>警告：</strong>这是一个必需的内部节点，移除和释放它可能会导致崩溃。如果你想隐藏它或它的任何子节点，请使用其 <reference internal="True" refuri="class_window#class-window-property-visible"><inline classes="std std-ref">Window.visible</inline></reference> 属性。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-menubutton-method-set-disable-shortcuts"></target>
            <paragraph classes="classref-method" ids="class-menubutton-method-set-disable-shortcuts" names="class_menubutton_method_set_disable_shortcuts"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_disable_shortcuts</strong>(disabled: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <reference internal="True" refid="class-menubutton-method-set-disable-shortcuts"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果为 <literal>true</literal>，快捷方式将被禁用，无法用于触发按钮。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-menubutton-method-show-popup"></target>
            <paragraph classes="classref-method" ids="class-menubutton-method-show-popup" names="class_menubutton_method_show_popup"><abbreviation explanation="无返回值。">void</abbreviation> <strong>show_popup</strong>() <reference internal="True" refid="class-menubutton-method-show-popup"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>调整该 <strong>MenuButton</strong> 的弹出位置和大小，然后显示该 <reference internal="True" refuri="class_popupmenu#class-popupmenu"><inline classes="std std-ref">PopupMenu</inline></reference>。请优先使用此方法，而不是使用 <literal>get_popup().popup()</literal>。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

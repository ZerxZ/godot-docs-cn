<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_audiostreamplaylist.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/modules/interactive_music/doc_classes/AudioStreamPlaylist.xml.</comment>
    <target refid="class-audiostreamplaylist"></target>
    <section ids="audiostreamplaylist class-audiostreamplaylist" names="audiostreamplaylist class_audiostreamplaylist">
        <title>AudioStreamPlaylist</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_audiostream#class-audiostream"><inline classes="std std-ref">AudioStream</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph><reference internal="True" refuri="class_audiostream#class-audiostream"><inline classes="std std-ref">AudioStream</inline></reference> that includes sub-streams and plays them back like a playlist.</paragraph>
        <section classes="classref-reftable-group" ids="id1" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="27"></colspec>
                    <colspec colwidth="70"></colspec>
                    <colspec colwidth="11"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplaylist-property-fade-time"><inline classes="std std-ref">fade_time</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.3</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplaylist-property-loop"><inline classes="std std-ref">loop</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplaylist-property-shuffle"><inline classes="std std-ref">shuffle</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplaylist-property-stream-count"><inline classes="std std-ref">stream_count</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="39"></colspec>
                    <colspec colwidth="172"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplaylist-method-get-bpm"><inline classes="std std-ref">get_bpm</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_audiostream#class-audiostream"><inline classes="std std-ref">AudioStream</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplaylist-method-get-list-stream"><inline classes="std std-ref">get_list_stream</inline></reference>(stream_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplaylist-method-set-list-stream"><inline classes="std std-ref">set_list_stream</inline></reference>(stream_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, audio_stream: <reference internal="True" refuri="class_audiostream#class-audiostream"><inline classes="std std-ref">AudioStream</inline></reference>)</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="常量">
            <title>常量</title>
            <target refid="class-audiostreamplaylist-constant-max-streams"></target>
            <paragraph classes="classref-constant" ids="class-audiostreamplaylist-constant-max-streams" names="class_audiostreamplaylist_constant_max_streams"><strong>MAX_STREAMS</strong> = <literal>64</literal> <reference internal="True" refid="class-audiostreamplaylist-constant-max-streams"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>播放列表中支持的音频流的最大数量。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="属性说明">
            <title>属性说明</title>
            <target refid="class-audiostreamplaylist-property-fade-time"></target>
            <paragraph classes="classref-property" ids="class-audiostreamplaylist-property-fade-time" names="class_audiostreamplaylist_property_fade_time"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>fade_time</strong> = <literal>0.3</literal> <reference internal="True" refid="class-audiostreamplaylist-property-fade-time"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_fade_time</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_fade_time</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>音频流结束、切换到下一个音频流时，淡入淡出的时间。音频流的最后应该留有一些额外的音频，便于淡入淡出。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamplaylist-property-loop"></target>
            <paragraph classes="classref-property" ids="class-audiostreamplaylist-property-loop" names="class_audiostreamplaylist_property_loop"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>loop</strong> = <literal>true</literal> <reference internal="True" refid="class-audiostreamplaylist-property-loop"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_loop</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>has_loop</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>If <literal>true</literal>, the playlist will loop, otherwise the playlist will end when the last stream is finished.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamplaylist-property-shuffle"></target>
            <paragraph classes="classref-property" ids="class-audiostreamplaylist-property-shuffle" names="class_audiostreamplaylist_property_shuffle"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>shuffle</strong> = <literal>false</literal> <reference internal="True" refid="class-audiostreamplaylist-property-shuffle"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_shuffle</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_shuffle</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>If <literal>true</literal>, the playlist will shuffle each time playback starts and each time it loops.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamplaylist-property-stream-count"></target>
            <paragraph classes="classref-property" ids="class-audiostreamplaylist-property-stream-count" names="class_audiostreamplaylist_property_stream_count"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>stream_count</strong> = <literal>0</literal> <reference internal="True" refid="class-audiostreamplaylist-property-stream-count"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_stream_count</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_stream_count</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>播放列表中音频流的数量。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="方法说明">
            <title>方法说明</title>
            <target refid="class-audiostreamplaylist-method-get-bpm"></target>
            <paragraph classes="classref-method" ids="class-audiostreamplaylist-method-get-bpm" names="class_audiostreamplaylist_method_get_bpm"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_bpm</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-audiostreamplaylist-method-get-bpm"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Returns the BPM of the playlist, which can vary depending on the clip being played.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamplaylist-method-get-list-stream"></target>
            <paragraph classes="classref-method" ids="class-audiostreamplaylist-method-get-list-stream" names="class_audiostreamplaylist_method_get_list_stream"><reference internal="True" refuri="class_audiostream#class-audiostream"><inline classes="std std-ref">AudioStream</inline></reference> <strong>get_list_stream</strong>(stream_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-audiostreamplaylist-method-get-list-stream"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Returns the stream at playback position index.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamplaylist-method-set-list-stream"></target>
            <paragraph classes="classref-method" ids="class-audiostreamplaylist-method-set-list-stream" names="class_audiostreamplaylist_method_set_list_stream"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_list_stream</strong>(stream_index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, audio_stream: <reference internal="True" refuri="class_audiostream#class-audiostream"><inline classes="std std-ref">AudioStream</inline></reference>) <reference internal="True" refid="class-audiostreamplaylist-method-set-list-stream"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Sets the stream at playback position index.</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

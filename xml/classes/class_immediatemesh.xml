<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_immediatemesh.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/ImmediateMesh.xml.</comment>
    <target refid="class-immediatemesh"></target>
    <section ids="immediatemesh class-immediatemesh" names="immediatemesh class_immediatemesh">
        <title>ImmediateMesh</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_mesh#class-mesh"><inline classes="std std-ref">Mesh</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>为手动创建几何体，而优化的网格。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>针对手动创建几何体优化的网格类型，与 OpenGL 1.x 的立即模式类似。</paragraph>
            <paragraph>以下是生成三角形面的示例：</paragraph>
            <container classes="sphinx-tabs" type="tab-element">
                <div aria-label="Tabbed content" role="tablist">
                    <button aria-controls="panel-0-R0RTY3JpcHQ=" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-0-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tab" tabindex="0">GDScript</button>
                    <button aria-controls="panel-0-QyM=" aria-selected="false" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-0-QyM=" name="QyM=" role="tab" tabindex="-1">C#</button>
                </div>
                <div aria-labelledby="tab-0-R0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-0-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve">var mesh = ImmediateMesh.new()
mesh.surface_begin(Mesh.PRIMITIVE_TRIANGLES)
mesh.surface_add_vertex(Vector3.LEFT)
mesh.surface_add_vertex(Vector3.FORWARD)
mesh.surface_add_vertex(Vector3.ZERO)
mesh.surface_end()</literal_block>
                </div>
                <div aria-labelledby="tab-0-QyM=" classes="sphinx-tabs-panel code-tab group-tab" hidden="true" ids="panel-0-QyM=" name="QyM=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="csharp" linenos="False" xml:space="preserve">var mesh = new ImmediateMesh();
mesh.SurfaceBegin(Mesh.PrimitiveType.Triangles);
mesh.SurfaceAddVertex(Vector3.Left);
mesh.SurfaceAddVertex(Vector3.Forward);
mesh.SurfaceAddVertex(Vector3.Zero);
mesh.SurfaceEnd();</literal_block>
                </div>
            </container>
            <paragraph><strong>注意：</strong>使用 <strong>ImmediateMesh</strong> 生成复杂的几何体极其低效。这种网格的设计目的是用来生成经常变化的简单几何体。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference internal="True" refuri="../tutorials/3d/procedural_geometry/immediatemesh"><inline classes="doc">使用 ImmediateMesh</inline></reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="6"></colspec>
                    <colspec colwidth="179"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-immediatemesh-method-clear-surfaces"><inline classes="std std-ref">clear_surfaces</inline></reference> <strong>(</strong> <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-immediatemesh-method-surface-add-vertex"><inline classes="std std-ref">surface_add_vertex</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> vertex <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-immediatemesh-method-surface-add-vertex-2d"><inline classes="std std-ref">surface_add_vertex_2d</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> vertex <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-immediatemesh-method-surface-begin"><inline classes="std std-ref">surface_begin</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_mesh#enum-mesh-primitivetype"><inline classes="std std-ref">PrimitiveType</inline></reference> primitive, <reference internal="True" refuri="class_material#class-material"><inline classes="std std-ref">Material</inline></reference> material=null <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-immediatemesh-method-surface-end"><inline classes="std std-ref">surface_end</inline></reference> <strong>(</strong> <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-immediatemesh-method-surface-set-color"><inline classes="std std-ref">surface_set_color</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> color <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-immediatemesh-method-surface-set-normal"><inline classes="std std-ref">surface_set_normal</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> normal <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-immediatemesh-method-surface-set-tangent"><inline classes="std std-ref">surface_set_tangent</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_plane#class-plane"><inline classes="std std-ref">Plane</inline></reference> tangent <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-immediatemesh-method-surface-set-uv"><inline classes="std std-ref">surface_set_uv</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> uv <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-immediatemesh-method-surface-set-uv2"><inline classes="std std-ref">surface_set_uv2</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> uv2 <strong>)</strong></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="方法说明">
            <title>方法说明</title>
            <target refid="class-immediatemesh-method-clear-surfaces"></target>
            <paragraph classes="classref-method" ids="class-immediatemesh-method-clear-surfaces" names="class_immediatemesh_method_clear_surfaces">void <strong>clear_surfaces</strong> <strong>(</strong> <strong>)</strong></paragraph>
            <paragraph>清除所有表面。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-immediatemesh-method-surface-add-vertex"></target>
            <paragraph classes="classref-method" ids="class-immediatemesh-method-surface-add-vertex" names="class_immediatemesh_method_surface_add_vertex">void <strong>surface_add_vertex</strong> <strong>(</strong> <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> vertex <strong>)</strong></paragraph>
            <paragraph>使用先前设置的当前属性，添加一个 3D 顶点。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-immediatemesh-method-surface-add-vertex-2d"></target>
            <paragraph classes="classref-method" ids="class-immediatemesh-method-surface-add-vertex-2d" names="class_immediatemesh_method_surface_add_vertex_2d">void <strong>surface_add_vertex_2d</strong> <strong>(</strong> <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> vertex <strong>)</strong></paragraph>
            <paragraph>使用先前设置的当前属性，添加一个 2D 顶点。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-immediatemesh-method-surface-begin"></target>
            <paragraph classes="classref-method" ids="class-immediatemesh-method-surface-begin" names="class_immediatemesh_method_surface_begin">void <strong>surface_begin</strong> <strong>(</strong> <reference internal="True" refuri="class_mesh#enum-mesh-primitivetype"><inline classes="std std-ref">PrimitiveType</inline></reference> primitive, <reference internal="True" refuri="class_material#class-material"><inline classes="std std-ref">Material</inline></reference> material=null <strong>)</strong></paragraph>
            <paragraph>开始一个新的表面。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-immediatemesh-method-surface-end"></target>
            <paragraph classes="classref-method" ids="class-immediatemesh-method-surface-end" names="class_immediatemesh_method_surface_end">void <strong>surface_end</strong> <strong>(</strong> <strong>)</strong></paragraph>
            <paragraph>结束并提交当前表面。请注意，在该函数被调用之前，创建的表面将不可见。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-immediatemesh-method-surface-set-color"></target>
            <paragraph classes="classref-method" ids="class-immediatemesh-method-surface-set-color" names="class_immediatemesh_method_surface_set_color">void <strong>surface_set_color</strong> <strong>(</strong> <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> color <strong>)</strong></paragraph>
            <paragraph>设置将与下一个顶点一起推送的颜色属性。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-immediatemesh-method-surface-set-normal"></target>
            <paragraph classes="classref-method" ids="class-immediatemesh-method-surface-set-normal" names="class_immediatemesh_method_surface_set_normal">void <strong>surface_set_normal</strong> <strong>(</strong> <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> normal <strong>)</strong></paragraph>
            <paragraph>设置将与下一个顶点一起推送的法线属性。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-immediatemesh-method-surface-set-tangent"></target>
            <paragraph classes="classref-method" ids="class-immediatemesh-method-surface-set-tangent" names="class_immediatemesh_method_surface_set_tangent">void <strong>surface_set_tangent</strong> <strong>(</strong> <reference internal="True" refuri="class_plane#class-plane"><inline classes="std std-ref">Plane</inline></reference> tangent <strong>)</strong></paragraph>
            <paragraph>设置将与下一个顶点一起推送的切线属性。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-immediatemesh-method-surface-set-uv"></target>
            <paragraph classes="classref-method" ids="class-immediatemesh-method-surface-set-uv" names="class_immediatemesh_method_surface_set_uv">void <strong>surface_set_uv</strong> <strong>(</strong> <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> uv <strong>)</strong></paragraph>
            <paragraph>设置将与下一个顶点一起推送的 UV 属性。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-immediatemesh-method-surface-set-uv2"></target>
            <paragraph classes="classref-method" ids="class-immediatemesh-method-surface-set-uv2" names="class_immediatemesh_method_surface_set_uv2">void <strong>surface_set_uv2</strong> <strong>(</strong> <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> uv2 <strong>)</strong></paragraph>
            <paragraph>设置将与下一个顶点一起推送的 UV2 属性。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，所以可以直接使用类名调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

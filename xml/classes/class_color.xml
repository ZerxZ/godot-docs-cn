<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_color.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/Color.xml.</comment>
    <target refid="class-color"></target>
    <section ids="color class-color" names="color class_color">
        <title>Color</title>
        <paragraph>以 RGBA 格式表示的颜色。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>由红（<reference internal="True" refid="class-color-property-r"><inline classes="std std-ref">r</inline></reference>）、绿（<reference internal="True" refid="class-color-property-g"><inline classes="std std-ref">g</inline></reference>）、蓝（<reference internal="True" refid="class-color-property-b"><inline classes="std std-ref">b</inline></reference>）和 alpha（<reference internal="True" refid="class-color-property-a"><inline classes="std std-ref">a</inline></reference>）分量表示的 RGBA 格式的颜色。每个分量都是一个 32 位浮点值，通常介于 <literal>0.0</literal> 到 <literal>1.0</literal> 之间。某些属性（例如 <reference internal="True" refuri="class_canvasitem#class-canvasitem-property-modulate"><inline classes="std std-ref">CanvasItem.modulate</inline></reference>）可能支持大于 <literal>1.0</literal> 的值，用于表示过亮或 HDR（High Dynamic Range，高动态范围）颜色。</paragraph>
            <paragraph>创建颜色的方法有很多：可以使用 <strong>Color</strong> 的各种构造函数，<reference internal="True" refid="class-color-method-from-hsv"><inline classes="std std-ref">from_hsv</inline></reference> 等静态方法，以及使用基于 <reference name="X11 颜色名称" refuri="https://en.wikipedia.org/wiki/X11_color_names">X11 颜色名称</reference>的标准化颜色集外加 <reference internal="True" refid="class-color-constant-transparent"><inline classes="std std-ref">TRANSPARENT</inline></reference>。GDScript 还提供了 <reference internal="True" refuri="class_@gdscript#class-gdscript-method-color8"><inline classes="std std-ref">@GDScript.Color8</inline></reference>，使用的是 <literal>0</literal> 到 <literal>255</literal> 之间的整数，且不支持过亮的颜色。</paragraph>
            <paragraph><strong>注意：</strong>在布尔上下文中，等于 <literal>Color(0, 0, 0, 1)</literal>（不透明的黑色）的 Color 将被评估为 <literal>false</literal>。否则，Color 将始终被评估为 <literal>true</literal>。</paragraph>
            <paragraph><reference name="Color 常量速查表" refuri="https://raw.githubusercontent.com/godotengine/godot-docs/master/img/color_constants.png">Color 常量速查表</reference></paragraph>
            <note>
                <paragraph>通过 C# 使用该 API 时会有显著不同，详见 <reference internal="True" refuri="../tutorials/scripting/c_sharp/c_sharp_differences#doc-c-sharp-differences"><inline classes="std std-ref">C# API 与 GDScript 的差异</inline></reference>。</paragraph>
            </note>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference name="2D GD 画图演示" refuri="https://godotengine.org/asset-library/asset/2768">2D GD 画图演示</reference></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference name="补间插值演示" refuri="https://godotengine.org/asset-library/asset/2733">补间插值演示</reference></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference name="GUI 拖放演示" refuri="https://godotengine.org/asset-library/asset/2767">GUI 拖放演示</reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="27"></colspec>
                    <colspec colwidth="36"></colspec>
                    <colspec colwidth="9"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color-property-a"><inline classes="std std-ref">a</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color-property-a8"><inline classes="std std-ref">a8</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>255</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color-property-b"><inline classes="std std-ref">b</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color-property-b8"><inline classes="std std-ref">b8</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color-property-g"><inline classes="std std-ref">g</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color-property-g8"><inline classes="std std-ref">g8</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color-property-h"><inline classes="std std-ref">h</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color-property-r"><inline classes="std std-ref">r</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color-property-r8"><inline classes="std std-ref">r8</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color-property-s"><inline classes="std std-ref">s</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color-property-v"><inline classes="std std-ref">v</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id4" names="构造函数">
            <title>构造函数</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="27"></colspec>
                    <colspec colwidth="175"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color-constructor-color"><inline classes="std std-ref">Color</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color-constructor-color"><inline classes="std std-ref">Color</inline></reference>(from: <reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference>, alpha: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color-constructor-color"><inline classes="std std-ref">Color</inline></reference>(from: <reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color-constructor-color"><inline classes="std std-ref">Color</inline></reference>(code: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color-constructor-color"><inline classes="std std-ref">Color</inline></reference>(code: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, alpha: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color-constructor-color"><inline classes="std std-ref">Color</inline></reference>(r: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>, g: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>, b: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color-constructor-color"><inline classes="std std-ref">Color</inline></reference>(r: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>, g: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>, b: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>, a: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id5" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="29"></colspec>
                    <colspec colwidth="201"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color-method-blend"><inline classes="std std-ref">blend</inline></reference>(over: <reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color-method-clamp"><inline classes="std std-ref">clamp</inline></reference>(min: <reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference> = Color(0, 0, 0, 0), max: <reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference> = Color(1, 1, 1, 1)) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color-method-darkened"><inline classes="std std-ref">darkened</inline></reference>(amount: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color-method-from-hsv"><inline classes="std std-ref">from_hsv</inline></reference>(h: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>, s: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>, v: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>, alpha: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> = 1.0) <abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color-method-from-ok-hsl"><inline classes="std std-ref">from_ok_hsl</inline></reference>(h: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>, s: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>, l: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>, alpha: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> = 1.0) <abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color-method-from-rgbe9995"><inline classes="std std-ref">from_rgbe9995</inline></reference>(rgbe: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color-method-from-string"><inline classes="std std-ref">from_string</inline></reference>(str: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, default: <reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference>) <abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color-method-get-luminance"><inline classes="std std-ref">get_luminance</inline></reference>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color-method-hex"><inline classes="std std-ref">hex</inline></reference>(hex: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color-method-hex64"><inline classes="std std-ref">hex64</inline></reference>(hex: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color-method-html"><inline classes="std std-ref">html</inline></reference>(rgba: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color-method-html-is-valid"><inline classes="std std-ref">html_is_valid</inline></reference>(color: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color-method-inverted"><inline classes="std std-ref">inverted</inline></reference>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color-method-is-equal-approx"><inline classes="std std-ref">is_equal_approx</inline></reference>(to: <reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color-method-lerp"><inline classes="std std-ref">lerp</inline></reference>(to: <reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference>, weight: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color-method-lightened"><inline classes="std std-ref">lightened</inline></reference>(amount: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color-method-linear-to-srgb"><inline classes="std std-ref">linear_to_srgb</inline></reference>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color-method-srgb-to-linear"><inline classes="std std-ref">srgb_to_linear</inline></reference>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color-method-to-abgr32"><inline classes="std std-ref">to_abgr32</inline></reference>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color-method-to-abgr64"><inline classes="std std-ref">to_abgr64</inline></reference>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color-method-to-argb32"><inline classes="std std-ref">to_argb32</inline></reference>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color-method-to-argb64"><inline classes="std std-ref">to_argb64</inline></reference>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color-method-to-html"><inline classes="std std-ref">to_html</inline></reference>(with_alpha: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = true) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color-method-to-rgba32"><inline classes="std std-ref">to_rgba32</inline></reference>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color-method-to-rgba64"><inline classes="std std-ref">to_rgba64</inline></reference>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id6" names="运算符">
            <title>运算符</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="27"></colspec>
                    <colspec colwidth="93"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color-operator-neq-color"><inline classes="std std-ref">operator !=</inline></reference>(right: <reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color-operator-mul-color"><inline classes="std std-ref">operator *</inline></reference>(right: <reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color-operator-mul-float"><inline classes="std std-ref">operator *</inline></reference>(right: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color-operator-mul-int"><inline classes="std std-ref">operator *</inline></reference>(right: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color-operator-sum-color"><inline classes="std std-ref">operator +</inline></reference>(right: <reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color-operator-dif-color"><inline classes="std std-ref">operator -</inline></reference>(right: <reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color-operator-div-color"><inline classes="std std-ref">operator /</inline></reference>(right: <reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color-operator-div-float"><inline classes="std std-ref">operator /</inline></reference>(right: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color-operator-div-int"><inline classes="std std-ref">operator /</inline></reference>(right: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color-operator-eq-color"><inline classes="std std-ref">operator ==</inline></reference>(right: <reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color-operator-idx-int"><inline classes="std std-ref">operator []</inline></reference>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color-operator-unplus"><inline classes="std std-ref">operator unary+</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-color-operator-unminus"><inline classes="std std-ref">operator unary-</inline></reference>()</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id7" names="常量">
            <title>常量</title>
            <target refid="class-color-constant-alice-blue"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-alice-blue" names="class_color_constant_alice_blue"><strong>ALICE_BLUE</strong> = <literal>Color(0.941176, 0.972549, 1, 1)</literal> <reference internal="True" refid="class-color-constant-alice-blue"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>爱丽丝蓝。</paragraph>
            <target refid="class-color-constant-antique-white"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-antique-white" names="class_color_constant_antique_white"><strong>ANTIQUE_WHITE</strong> = <literal>Color(0.980392, 0.921569, 0.843137, 1)</literal> <reference internal="True" refid="class-color-constant-antique-white"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>古董白。</paragraph>
            <target refid="class-color-constant-aqua"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-aqua" names="class_color_constant_aqua"><strong>AQUA</strong> = <literal>Color(0, 1, 1, 1)</literal> <reference internal="True" refid="class-color-constant-aqua"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>水色。</paragraph>
            <target refid="class-color-constant-aquamarine"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-aquamarine" names="class_color_constant_aquamarine"><strong>AQUAMARINE</strong> = <literal>Color(0.498039, 1, 0.831373, 1)</literal> <reference internal="True" refid="class-color-constant-aquamarine"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>海蓝色。</paragraph>
            <target refid="class-color-constant-azure"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-azure" names="class_color_constant_azure"><strong>AZURE</strong> = <literal>Color(0.941176, 1, 1, 1)</literal> <reference internal="True" refid="class-color-constant-azure"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>天蓝色。</paragraph>
            <target refid="class-color-constant-beige"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-beige" names="class_color_constant_beige"><strong>BEIGE</strong> = <literal>Color(0.960784, 0.960784, 0.862745, 1)</literal> <reference internal="True" refid="class-color-constant-beige"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>米黄色。</paragraph>
            <target refid="class-color-constant-bisque"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-bisque" names="class_color_constant_bisque"><strong>BISQUE</strong> = <literal>Color(1, 0.894118, 0.768627, 1)</literal> <reference internal="True" refid="class-color-constant-bisque"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>橘黄色。</paragraph>
            <target refid="class-color-constant-black"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-black" names="class_color_constant_black"><strong>BLACK</strong> = <literal>Color(0, 0, 0, 1)</literal> <reference internal="True" refid="class-color-constant-black"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>黑色。在 GDScript 中，这是所有颜色的默认值。</paragraph>
            <target refid="class-color-constant-blanched-almond"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-blanched-almond" names="class_color_constant_blanched_almond"><strong>BLANCHED_ALMOND</strong> = <literal>Color(1, 0.921569, 0.803922, 1)</literal> <reference internal="True" refid="class-color-constant-blanched-almond"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>杏仁白色。</paragraph>
            <target refid="class-color-constant-blue"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-blue" names="class_color_constant_blue"><strong>BLUE</strong> = <literal>Color(0, 0, 1, 1)</literal> <reference internal="True" refid="class-color-constant-blue"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>蓝色。</paragraph>
            <target refid="class-color-constant-blue-violet"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-blue-violet" names="class_color_constant_blue_violet"><strong>BLUE_VIOLET</strong> = <literal>Color(0.541176, 0.168627, 0.886275, 1)</literal> <reference internal="True" refid="class-color-constant-blue-violet"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>蓝紫色的颜色。</paragraph>
            <target refid="class-color-constant-brown"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-brown" names="class_color_constant_brown"><strong>BROWN</strong> = <literal>Color(0.647059, 0.164706, 0.164706, 1)</literal> <reference internal="True" refid="class-color-constant-brown"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>棕色。</paragraph>
            <target refid="class-color-constant-burlywood"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-burlywood" names="class_color_constant_burlywood"><strong>BURLYWOOD</strong> = <literal>Color(0.870588, 0.721569, 0.529412, 1)</literal> <reference internal="True" refid="class-color-constant-burlywood"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>硬木色。</paragraph>
            <target refid="class-color-constant-cadet-blue"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-cadet-blue" names="class_color_constant_cadet_blue"><strong>CADET_BLUE</strong> = <literal>Color(0.372549, 0.619608, 0.627451, 1)</literal> <reference internal="True" refid="class-color-constant-cadet-blue"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>军服蓝。</paragraph>
            <target refid="class-color-constant-chartreuse"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-chartreuse" names="class_color_constant_chartreuse"><strong>CHARTREUSE</strong> = <literal>Color(0.498039, 1, 0, 1)</literal> <reference internal="True" refid="class-color-constant-chartreuse"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>黄褐色。</paragraph>
            <target refid="class-color-constant-chocolate"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-chocolate" names="class_color_constant_chocolate"><strong>CHOCOLATE</strong> = <literal>Color(0.823529, 0.411765, 0.117647, 1)</literal> <reference internal="True" refid="class-color-constant-chocolate"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>巧克力色。</paragraph>
            <target refid="class-color-constant-coral"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-coral" names="class_color_constant_coral"><strong>CORAL</strong> = <literal>Color(1, 0.498039, 0.313726, 1)</literal> <reference internal="True" refid="class-color-constant-coral"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>珊瑚色。</paragraph>
            <target refid="class-color-constant-cornflower-blue"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-cornflower-blue" names="class_color_constant_cornflower_blue"><strong>CORNFLOWER_BLUE</strong> = <literal>Color(0.392157, 0.584314, 0.929412, 1)</literal> <reference internal="True" refid="class-color-constant-cornflower-blue"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>矢车菊蓝色。</paragraph>
            <target refid="class-color-constant-cornsilk"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-cornsilk" names="class_color_constant_cornsilk"><strong>CORNSILK</strong> = <literal>Color(1, 0.972549, 0.862745, 1)</literal> <reference internal="True" refid="class-color-constant-cornsilk"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>玉米须色。</paragraph>
            <target refid="class-color-constant-crimson"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-crimson" names="class_color_constant_crimson"><strong>CRIMSON</strong> = <literal>Color(0.862745, 0.0784314, 0.235294, 1)</literal> <reference internal="True" refid="class-color-constant-crimson"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>绯红的颜色。</paragraph>
            <target refid="class-color-constant-cyan"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-cyan" names="class_color_constant_cyan"><strong>CYAN</strong> = <literal>Color(0, 1, 1, 1)</literal> <reference internal="True" refid="class-color-constant-cyan"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>青色。</paragraph>
            <target refid="class-color-constant-dark-blue"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-dark-blue" names="class_color_constant_dark_blue"><strong>DARK_BLUE</strong> = <literal>Color(0, 0, 0.545098, 1)</literal> <reference internal="True" refid="class-color-constant-dark-blue"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>深蓝色。</paragraph>
            <target refid="class-color-constant-dark-cyan"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-dark-cyan" names="class_color_constant_dark_cyan"><strong>DARK_CYAN</strong> = <literal>Color(0, 0.545098, 0.545098, 1)</literal> <reference internal="True" refid="class-color-constant-dark-cyan"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>深青色。</paragraph>
            <target refid="class-color-constant-dark-goldenrod"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-dark-goldenrod" names="class_color_constant_dark_goldenrod"><strong>DARK_GOLDENROD</strong> = <literal>Color(0.721569, 0.52549, 0.0431373, 1)</literal> <reference internal="True" refid="class-color-constant-dark-goldenrod"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>深色菊科植物的颜色。</paragraph>
            <target refid="class-color-constant-dark-gray"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-dark-gray" names="class_color_constant_dark_gray"><strong>DARK_GRAY</strong> = <literal>Color(0.662745, 0.662745, 0.662745, 1)</literal> <reference internal="True" refid="class-color-constant-dark-gray"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>深灰色。</paragraph>
            <target refid="class-color-constant-dark-green"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-dark-green" names="class_color_constant_dark_green"><strong>DARK_GREEN</strong> = <literal>Color(0, 0.392157, 0, 1)</literal> <reference internal="True" refid="class-color-constant-dark-green"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>深绿色。</paragraph>
            <target refid="class-color-constant-dark-khaki"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-dark-khaki" names="class_color_constant_dark_khaki"><strong>DARK_KHAKI</strong> = <literal>Color(0.741176, 0.717647, 0.419608, 1)</literal> <reference internal="True" refid="class-color-constant-dark-khaki"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>深卡其色。</paragraph>
            <target refid="class-color-constant-dark-magenta"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-dark-magenta" names="class_color_constant_dark_magenta"><strong>DARK_MAGENTA</strong> = <literal>Color(0.545098, 0, 0.545098, 1)</literal> <reference internal="True" refid="class-color-constant-dark-magenta"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>深洋红色。</paragraph>
            <target refid="class-color-constant-dark-olive-green"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-dark-olive-green" names="class_color_constant_dark_olive_green"><strong>DARK_OLIVE_GREEN</strong> = <literal>Color(0.333333, 0.419608, 0.184314, 1)</literal> <reference internal="True" refid="class-color-constant-dark-olive-green"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>深橄榄绿色。</paragraph>
            <target refid="class-color-constant-dark-orange"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-dark-orange" names="class_color_constant_dark_orange"><strong>DARK_ORANGE</strong> = <literal>Color(1, 0.54902, 0, 1)</literal> <reference internal="True" refid="class-color-constant-dark-orange"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>深橙色。</paragraph>
            <target refid="class-color-constant-dark-orchid"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-dark-orchid" names="class_color_constant_dark_orchid"><strong>DARK_ORCHID</strong> = <literal>Color(0.6, 0.196078, 0.8, 1)</literal> <reference internal="True" refid="class-color-constant-dark-orchid"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>深色的兰花色。</paragraph>
            <target refid="class-color-constant-dark-red"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-dark-red" names="class_color_constant_dark_red"><strong>DARK_RED</strong> = <literal>Color(0.545098, 0, 0, 1)</literal> <reference internal="True" refid="class-color-constant-dark-red"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>深红色。</paragraph>
            <target refid="class-color-constant-dark-salmon"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-dark-salmon" names="class_color_constant_dark_salmon"><strong>DARK_SALMON</strong> = <literal>Color(0.913725, 0.588235, 0.478431, 1)</literal> <reference internal="True" refid="class-color-constant-dark-salmon"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>深鲑鱼色。</paragraph>
            <target refid="class-color-constant-dark-sea-green"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-dark-sea-green" names="class_color_constant_dark_sea_green"><strong>DARK_SEA_GREEN</strong> = <literal>Color(0.560784, 0.737255, 0.560784, 1)</literal> <reference internal="True" refid="class-color-constant-dark-sea-green"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>深海绿色。</paragraph>
            <target refid="class-color-constant-dark-slate-blue"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-dark-slate-blue" names="class_color_constant_dark_slate_blue"><strong>DARK_SLATE_BLUE</strong> = <literal>Color(0.282353, 0.239216, 0.545098, 1)</literal> <reference internal="True" refid="class-color-constant-dark-slate-blue"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>深板蓝的颜色。</paragraph>
            <target refid="class-color-constant-dark-slate-gray"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-dark-slate-gray" names="class_color_constant_dark_slate_gray"><strong>DARK_SLATE_GRAY</strong> = <literal>Color(0.184314, 0.309804, 0.309804, 1)</literal> <reference internal="True" refid="class-color-constant-dark-slate-gray"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>暗石板灰色。</paragraph>
            <target refid="class-color-constant-dark-turquoise"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-dark-turquoise" names="class_color_constant_dark_turquoise"><strong>DARK_TURQUOISE</strong> = <literal>Color(0, 0.807843, 0.819608, 1)</literal> <reference internal="True" refid="class-color-constant-dark-turquoise"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>深绿松石色。</paragraph>
            <target refid="class-color-constant-dark-violet"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-dark-violet" names="class_color_constant_dark_violet"><strong>DARK_VIOLET</strong> = <literal>Color(0.580392, 0, 0.827451, 1)</literal> <reference internal="True" refid="class-color-constant-dark-violet"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>深紫罗兰色。</paragraph>
            <target refid="class-color-constant-deep-pink"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-deep-pink" names="class_color_constant_deep_pink"><strong>DEEP_PINK</strong> = <literal>Color(1, 0.0784314, 0.576471, 1)</literal> <reference internal="True" refid="class-color-constant-deep-pink"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>深粉色。</paragraph>
            <target refid="class-color-constant-deep-sky-blue"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-deep-sky-blue" names="class_color_constant_deep_sky_blue"><strong>DEEP_SKY_BLUE</strong> = <literal>Color(0, 0.74902, 1, 1)</literal> <reference internal="True" refid="class-color-constant-deep-sky-blue"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>深邃的天蓝色。</paragraph>
            <target refid="class-color-constant-dim-gray"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-dim-gray" names="class_color_constant_dim_gray"><strong>DIM_GRAY</strong> = <literal>Color(0.411765, 0.411765, 0.411765, 1)</literal> <reference internal="True" refid="class-color-constant-dim-gray"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>暗灰色。</paragraph>
            <target refid="class-color-constant-dodger-blue"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-dodger-blue" names="class_color_constant_dodger_blue"><strong>DODGER_BLUE</strong> = <literal>Color(0.117647, 0.564706, 1, 1)</literal> <reference internal="True" refid="class-color-constant-dodger-blue"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>道奇蓝色。</paragraph>
            <target refid="class-color-constant-firebrick"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-firebrick" names="class_color_constant_firebrick"><strong>FIREBRICK</strong> = <literal>Color(0.698039, 0.133333, 0.133333, 1)</literal> <reference internal="True" refid="class-color-constant-firebrick"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>耐火砖红色。</paragraph>
            <target refid="class-color-constant-floral-white"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-floral-white" names="class_color_constant_floral_white"><strong>FLORAL_WHITE</strong> = <literal>Color(1, 0.980392, 0.941176, 1)</literal> <reference internal="True" refid="class-color-constant-floral-white"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>花白色。</paragraph>
            <target refid="class-color-constant-forest-green"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-forest-green" names="class_color_constant_forest_green"><strong>FOREST_GREEN</strong> = <literal>Color(0.133333, 0.545098, 0.133333, 1)</literal> <reference internal="True" refid="class-color-constant-forest-green"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>森林绿色。</paragraph>
            <target refid="class-color-constant-fuchsia"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-fuchsia" names="class_color_constant_fuchsia"><strong>FUCHSIA</strong> = <literal>Color(1, 0, 1, 1)</literal> <reference internal="True" refid="class-color-constant-fuchsia"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>洋红色。</paragraph>
            <target refid="class-color-constant-gainsboro"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-gainsboro" names="class_color_constant_gainsboro"><strong>GAINSBORO</strong> = <literal>Color(0.862745, 0.862745, 0.862745, 1)</literal> <reference internal="True" refid="class-color-constant-gainsboro"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>庚斯伯勒灰色。</paragraph>
            <target refid="class-color-constant-ghost-white"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-ghost-white" names="class_color_constant_ghost_white"><strong>GHOST_WHITE</strong> = <literal>Color(0.972549, 0.972549, 1, 1)</literal> <reference internal="True" refid="class-color-constant-ghost-white"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>幽灵白颜色。</paragraph>
            <target refid="class-color-constant-gold"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-gold" names="class_color_constant_gold"><strong>GOLD</strong> = <literal>Color(1, 0.843137, 0, 1)</literal> <reference internal="True" refid="class-color-constant-gold"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>金色。</paragraph>
            <target refid="class-color-constant-goldenrod"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-goldenrod" names="class_color_constant_goldenrod"><strong>GOLDENROD</strong> = <literal>Color(0.854902, 0.647059, 0.12549, 1)</literal> <reference internal="True" refid="class-color-constant-goldenrod"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>金菊色。</paragraph>
            <target refid="class-color-constant-gray"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-gray" names="class_color_constant_gray"><strong>GRAY</strong> = <literal>Color(0.745098, 0.745098, 0.745098, 1)</literal> <reference internal="True" refid="class-color-constant-gray"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>灰色。</paragraph>
            <target refid="class-color-constant-green"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-green" names="class_color_constant_green"><strong>GREEN</strong> = <literal>Color(0, 1, 0, 1)</literal> <reference internal="True" refid="class-color-constant-green"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>绿色。</paragraph>
            <target refid="class-color-constant-green-yellow"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-green-yellow" names="class_color_constant_green_yellow"><strong>GREEN_YELLOW</strong> = <literal>Color(0.678431, 1, 0.184314, 1)</literal> <reference internal="True" refid="class-color-constant-green-yellow"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>绿黄色。</paragraph>
            <target refid="class-color-constant-honeydew"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-honeydew" names="class_color_constant_honeydew"><strong>HONEYDEW</strong> = <literal>Color(0.941176, 1, 0.941176, 1)</literal> <reference internal="True" refid="class-color-constant-honeydew"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>蜜露色。</paragraph>
            <target refid="class-color-constant-hot-pink"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-hot-pink" names="class_color_constant_hot_pink"><strong>HOT_PINK</strong> = <literal>Color(1, 0.411765, 0.705882, 1)</literal> <reference internal="True" refid="class-color-constant-hot-pink"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>亮粉色。</paragraph>
            <target refid="class-color-constant-indian-red"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-indian-red" names="class_color_constant_indian_red"><strong>INDIAN_RED</strong> = <literal>Color(0.803922, 0.360784, 0.360784, 1)</literal> <reference internal="True" refid="class-color-constant-indian-red"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>印度红色。</paragraph>
            <target refid="class-color-constant-indigo"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-indigo" names="class_color_constant_indigo"><strong>INDIGO</strong> = <literal>Color(0.294118, 0, 0.509804, 1)</literal> <reference internal="True" refid="class-color-constant-indigo"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>靛青色。</paragraph>
            <target refid="class-color-constant-ivory"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-ivory" names="class_color_constant_ivory"><strong>IVORY</strong> = <literal>Color(1, 1, 0.941176, 1)</literal> <reference internal="True" refid="class-color-constant-ivory"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>象牙色。</paragraph>
            <target refid="class-color-constant-khaki"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-khaki" names="class_color_constant_khaki"><strong>KHAKI</strong> = <literal>Color(0.941176, 0.901961, 0.54902, 1)</literal> <reference internal="True" refid="class-color-constant-khaki"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>卡其色。</paragraph>
            <target refid="class-color-constant-lavender"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-lavender" names="class_color_constant_lavender"><strong>LAVENDER</strong> = <literal>Color(0.901961, 0.901961, 0.980392, 1)</literal> <reference internal="True" refid="class-color-constant-lavender"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>薰衣草色。</paragraph>
            <target refid="class-color-constant-lavender-blush"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-lavender-blush" names="class_color_constant_lavender_blush"><strong>LAVENDER_BLUSH</strong> = <literal>Color(1, 0.941176, 0.960784, 1)</literal> <reference internal="True" refid="class-color-constant-lavender-blush"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>薰衣草紫红色。</paragraph>
            <target refid="class-color-constant-lawn-green"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-lawn-green" names="class_color_constant_lawn_green"><strong>LAWN_GREEN</strong> = <literal>Color(0.486275, 0.988235, 0, 1)</literal> <reference internal="True" refid="class-color-constant-lawn-green"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>草坪绿色。</paragraph>
            <target refid="class-color-constant-lemon-chiffon"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-lemon-chiffon" names="class_color_constant_lemon_chiffon"><strong>LEMON_CHIFFON</strong> = <literal>Color(1, 0.980392, 0.803922, 1)</literal> <reference internal="True" refid="class-color-constant-lemon-chiffon"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>柠檬雪纺色。</paragraph>
            <target refid="class-color-constant-light-blue"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-light-blue" names="class_color_constant_light_blue"><strong>LIGHT_BLUE</strong> = <literal>Color(0.678431, 0.847059, 0.901961, 1)</literal> <reference internal="True" refid="class-color-constant-light-blue"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>浅蓝色。</paragraph>
            <target refid="class-color-constant-light-coral"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-light-coral" names="class_color_constant_light_coral"><strong>LIGHT_CORAL</strong> = <literal>Color(0.941176, 0.501961, 0.501961, 1)</literal> <reference internal="True" refid="class-color-constant-light-coral"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>浅珊瑚色。</paragraph>
            <target refid="class-color-constant-light-cyan"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-light-cyan" names="class_color_constant_light_cyan"><strong>LIGHT_CYAN</strong> = <literal>Color(0.878431, 1, 1, 1)</literal> <reference internal="True" refid="class-color-constant-light-cyan"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>淡青色。</paragraph>
            <target refid="class-color-constant-light-goldenrod"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-light-goldenrod" names="class_color_constant_light_goldenrod"><strong>LIGHT_GOLDENROD</strong> = <literal>Color(0.980392, 0.980392, 0.823529, 1)</literal> <reference internal="True" refid="class-color-constant-light-goldenrod"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>亮金菊黄色。</paragraph>
            <target refid="class-color-constant-light-gray"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-light-gray" names="class_color_constant_light_gray"><strong>LIGHT_GRAY</strong> = <literal>Color(0.827451, 0.827451, 0.827451, 1)</literal> <reference internal="True" refid="class-color-constant-light-gray"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>浅灰色。</paragraph>
            <target refid="class-color-constant-light-green"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-light-green" names="class_color_constant_light_green"><strong>LIGHT_GREEN</strong> = <literal>Color(0.564706, 0.933333, 0.564706, 1)</literal> <reference internal="True" refid="class-color-constant-light-green"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>浅绿色。</paragraph>
            <target refid="class-color-constant-light-pink"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-light-pink" names="class_color_constant_light_pink"><strong>LIGHT_PINK</strong> = <literal>Color(1, 0.713726, 0.756863, 1)</literal> <reference internal="True" refid="class-color-constant-light-pink"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>浅粉色。</paragraph>
            <target refid="class-color-constant-light-salmon"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-light-salmon" names="class_color_constant_light_salmon"><strong>LIGHT_SALMON</strong> = <literal>Color(1, 0.627451, 0.478431, 1)</literal> <reference internal="True" refid="class-color-constant-light-salmon"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>浅鲑鱼色。</paragraph>
            <target refid="class-color-constant-light-sea-green"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-light-sea-green" names="class_color_constant_light_sea_green"><strong>LIGHT_SEA_GREEN</strong> = <literal>Color(0.12549, 0.698039, 0.666667, 1)</literal> <reference internal="True" refid="class-color-constant-light-sea-green"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>浅海绿色。</paragraph>
            <target refid="class-color-constant-light-sky-blue"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-light-sky-blue" names="class_color_constant_light_sky_blue"><strong>LIGHT_SKY_BLUE</strong> = <literal>Color(0.529412, 0.807843, 0.980392, 1)</literal> <reference internal="True" refid="class-color-constant-light-sky-blue"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>浅天蓝色。</paragraph>
            <target refid="class-color-constant-light-slate-gray"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-light-slate-gray" names="class_color_constant_light_slate_gray"><strong>LIGHT_SLATE_GRAY</strong> = <literal>Color(0.466667, 0.533333, 0.6, 1)</literal> <reference internal="True" refid="class-color-constant-light-slate-gray"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>浅板岩灰色。</paragraph>
            <target refid="class-color-constant-light-steel-blue"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-light-steel-blue" names="class_color_constant_light_steel_blue"><strong>LIGHT_STEEL_BLUE</strong> = <literal>Color(0.690196, 0.768627, 0.870588, 1)</literal> <reference internal="True" refid="class-color-constant-light-steel-blue"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>浅钢蓝色。</paragraph>
            <target refid="class-color-constant-light-yellow"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-light-yellow" names="class_color_constant_light_yellow"><strong>LIGHT_YELLOW</strong> = <literal>Color(1, 1, 0.878431, 1)</literal> <reference internal="True" refid="class-color-constant-light-yellow"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>浅黄色。</paragraph>
            <target refid="class-color-constant-lime"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-lime" names="class_color_constant_lime"><strong>LIME</strong> = <literal>Color(0, 1, 0, 1)</literal> <reference internal="True" refid="class-color-constant-lime"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>青柠色。</paragraph>
            <target refid="class-color-constant-lime-green"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-lime-green" names="class_color_constant_lime_green"><strong>LIME_GREEN</strong> = <literal>Color(0.196078, 0.803922, 0.196078, 1)</literal> <reference internal="True" refid="class-color-constant-lime-green"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>石灰绿色。</paragraph>
            <target refid="class-color-constant-linen"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-linen" names="class_color_constant_linen"><strong>LINEN</strong> = <literal>Color(0.980392, 0.941176, 0.901961, 1)</literal> <reference internal="True" refid="class-color-constant-linen"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>亚麻色。</paragraph>
            <target refid="class-color-constant-magenta"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-magenta" names="class_color_constant_magenta"><strong>MAGENTA</strong> = <literal>Color(1, 0, 1, 1)</literal> <reference internal="True" refid="class-color-constant-magenta"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>洋红色。</paragraph>
            <target refid="class-color-constant-maroon"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-maroon" names="class_color_constant_maroon"><strong>MAROON</strong> = <literal>Color(0.690196, 0.188235, 0.376471, 1)</literal> <reference internal="True" refid="class-color-constant-maroon"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>栗色。</paragraph>
            <target refid="class-color-constant-medium-aquamarine"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-medium-aquamarine" names="class_color_constant_medium_aquamarine"><strong>MEDIUM_AQUAMARINE</strong> = <literal>Color(0.4, 0.803922, 0.666667, 1)</literal> <reference internal="True" refid="class-color-constant-medium-aquamarine"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>中等海蓝宝石色。</paragraph>
            <target refid="class-color-constant-medium-blue"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-medium-blue" names="class_color_constant_medium_blue"><strong>MEDIUM_BLUE</strong> = <literal>Color(0, 0, 0.803922, 1)</literal> <reference internal="True" refid="class-color-constant-medium-blue"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>中蓝色。</paragraph>
            <target refid="class-color-constant-medium-orchid"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-medium-orchid" names="class_color_constant_medium_orchid"><strong>MEDIUM_ORCHID</strong> = <literal>Color(0.729412, 0.333333, 0.827451, 1)</literal> <reference internal="True" refid="class-color-constant-medium-orchid"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>中等兰色。</paragraph>
            <target refid="class-color-constant-medium-purple"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-medium-purple" names="class_color_constant_medium_purple"><strong>MEDIUM_PURPLE</strong> = <literal>Color(0.576471, 0.439216, 0.858824, 1)</literal> <reference internal="True" refid="class-color-constant-medium-purple"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>中等紫色。</paragraph>
            <target refid="class-color-constant-medium-sea-green"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-medium-sea-green" names="class_color_constant_medium_sea_green"><strong>MEDIUM_SEA_GREEN</strong> = <literal>Color(0.235294, 0.701961, 0.443137, 1)</literal> <reference internal="True" refid="class-color-constant-medium-sea-green"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>中海绿色。</paragraph>
            <target refid="class-color-constant-medium-slate-blue"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-medium-slate-blue" names="class_color_constant_medium_slate_blue"><strong>MEDIUM_SLATE_BLUE</strong> = <literal>Color(0.482353, 0.407843, 0.933333, 1)</literal> <reference internal="True" refid="class-color-constant-medium-slate-blue"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>中等板岩蓝色。</paragraph>
            <target refid="class-color-constant-medium-spring-green"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-medium-spring-green" names="class_color_constant_medium_spring_green"><strong>MEDIUM_SPRING_GREEN</strong> = <literal>Color(0, 0.980392, 0.603922, 1)</literal> <reference internal="True" refid="class-color-constant-medium-spring-green"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>中等春天绿色。</paragraph>
            <target refid="class-color-constant-medium-turquoise"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-medium-turquoise" names="class_color_constant_medium_turquoise"><strong>MEDIUM_TURQUOISE</strong> = <literal>Color(0.282353, 0.819608, 0.8, 1)</literal> <reference internal="True" refid="class-color-constant-medium-turquoise"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>中等绿松石色。</paragraph>
            <target refid="class-color-constant-medium-violet-red"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-medium-violet-red" names="class_color_constant_medium_violet_red"><strong>MEDIUM_VIOLET_RED</strong> = <literal>Color(0.780392, 0.0823529, 0.521569, 1)</literal> <reference internal="True" refid="class-color-constant-medium-violet-red"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>中等紫红色。</paragraph>
            <target refid="class-color-constant-midnight-blue"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-midnight-blue" names="class_color_constant_midnight_blue"><strong>MIDNIGHT_BLUE</strong> = <literal>Color(0.0980392, 0.0980392, 0.439216, 1)</literal> <reference internal="True" refid="class-color-constant-midnight-blue"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>午夜蓝色。</paragraph>
            <target refid="class-color-constant-mint-cream"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-mint-cream" names="class_color_constant_mint_cream"><strong>MINT_CREAM</strong> = <literal>Color(0.960784, 1, 0.980392, 1)</literal> <reference internal="True" refid="class-color-constant-mint-cream"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>薄荷奶油色。</paragraph>
            <target refid="class-color-constant-misty-rose"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-misty-rose" names="class_color_constant_misty_rose"><strong>MISTY_ROSE</strong> = <literal>Color(1, 0.894118, 0.882353, 1)</literal> <reference internal="True" refid="class-color-constant-misty-rose"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>朦胧的玫瑰色。</paragraph>
            <target refid="class-color-constant-moccasin"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-moccasin" names="class_color_constant_moccasin"><strong>MOCCASIN</strong> = <literal>Color(1, 0.894118, 0.709804, 1)</literal> <reference internal="True" refid="class-color-constant-moccasin"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>鹿皮鞋颜色。</paragraph>
            <target refid="class-color-constant-navajo-white"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-navajo-white" names="class_color_constant_navajo_white"><strong>NAVAJO_WHITE</strong> = <literal>Color(1, 0.870588, 0.678431, 1)</literal> <reference internal="True" refid="class-color-constant-navajo-white"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>纳瓦白。</paragraph>
            <target refid="class-color-constant-navy-blue"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-navy-blue" names="class_color_constant_navy_blue"><strong>NAVY_BLUE</strong> = <literal>Color(0, 0, 0.501961, 1)</literal> <reference internal="True" refid="class-color-constant-navy-blue"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>藏青色。</paragraph>
            <target refid="class-color-constant-old-lace"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-old-lace" names="class_color_constant_old_lace"><strong>OLD_LACE</strong> = <literal>Color(0.992157, 0.960784, 0.901961, 1)</literal> <reference internal="True" refid="class-color-constant-old-lace"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>旧蕾丝色。</paragraph>
            <target refid="class-color-constant-olive"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-olive" names="class_color_constant_olive"><strong>OLIVE</strong> = <literal>Color(0.501961, 0.501961, 0, 1)</literal> <reference internal="True" refid="class-color-constant-olive"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>橄榄色。</paragraph>
            <target refid="class-color-constant-olive-drab"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-olive-drab" names="class_color_constant_olive_drab"><strong>OLIVE_DRAB</strong> = <literal>Color(0.419608, 0.556863, 0.137255, 1)</literal> <reference internal="True" refid="class-color-constant-olive-drab"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>暗淡橄榄色。</paragraph>
            <target refid="class-color-constant-orange"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-orange" names="class_color_constant_orange"><strong>ORANGE</strong> = <literal>Color(1, 0.647059, 0, 1)</literal> <reference internal="True" refid="class-color-constant-orange"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>橙色。</paragraph>
            <target refid="class-color-constant-orange-red"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-orange-red" names="class_color_constant_orange_red"><strong>ORANGE_RED</strong> = <literal>Color(1, 0.270588, 0, 1)</literal> <reference internal="True" refid="class-color-constant-orange-red"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>橘红色。</paragraph>
            <target refid="class-color-constant-orchid"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-orchid" names="class_color_constant_orchid"><strong>ORCHID</strong> = <literal>Color(0.854902, 0.439216, 0.839216, 1)</literal> <reference internal="True" refid="class-color-constant-orchid"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>兰花色。</paragraph>
            <target refid="class-color-constant-pale-goldenrod"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-pale-goldenrod" names="class_color_constant_pale_goldenrod"><strong>PALE_GOLDENROD</strong> = <literal>Color(0.933333, 0.909804, 0.666667, 1)</literal> <reference internal="True" refid="class-color-constant-pale-goldenrod"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>淡金色。</paragraph>
            <target refid="class-color-constant-pale-green"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-pale-green" names="class_color_constant_pale_green"><strong>PALE_GREEN</strong> = <literal>Color(0.596078, 0.984314, 0.596078, 1)</literal> <reference internal="True" refid="class-color-constant-pale-green"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>淡绿色。</paragraph>
            <target refid="class-color-constant-pale-turquoise"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-pale-turquoise" names="class_color_constant_pale_turquoise"><strong>PALE_TURQUOISE</strong> = <literal>Color(0.686275, 0.933333, 0.933333, 1)</literal> <reference internal="True" refid="class-color-constant-pale-turquoise"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>淡绿松石色。</paragraph>
            <target refid="class-color-constant-pale-violet-red"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-pale-violet-red" names="class_color_constant_pale_violet_red"><strong>PALE_VIOLET_RED</strong> = <literal>Color(0.858824, 0.439216, 0.576471, 1)</literal> <reference internal="True" refid="class-color-constant-pale-violet-red"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>淡紫红色。</paragraph>
            <target refid="class-color-constant-papaya-whip"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-papaya-whip" names="class_color_constant_papaya_whip"><strong>PAPAYA_WHIP</strong> = <literal>Color(1, 0.937255, 0.835294, 1)</literal> <reference internal="True" refid="class-color-constant-papaya-whip"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>木瓜鞭色。</paragraph>
            <target refid="class-color-constant-peach-puff"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-peach-puff" names="class_color_constant_peach_puff"><strong>PEACH_PUFF</strong> = <literal>Color(1, 0.854902, 0.72549, 1)</literal> <reference internal="True" refid="class-color-constant-peach-puff"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>桃花粉。</paragraph>
            <target refid="class-color-constant-peru"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-peru" names="class_color_constant_peru"><strong>PERU</strong> = <literal>Color(0.803922, 0.521569, 0.247059, 1)</literal> <reference internal="True" refid="class-color-constant-peru"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>秘鲁色。</paragraph>
            <target refid="class-color-constant-pink"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-pink" names="class_color_constant_pink"><strong>PINK</strong> = <literal>Color(1, 0.752941, 0.796078, 1)</literal> <reference internal="True" refid="class-color-constant-pink"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>粉红色。</paragraph>
            <target refid="class-color-constant-plum"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-plum" names="class_color_constant_plum"><strong>PLUM</strong> = <literal>Color(0.866667, 0.627451, 0.866667, 1)</literal> <reference internal="True" refid="class-color-constant-plum"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>梅花色。</paragraph>
            <target refid="class-color-constant-powder-blue"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-powder-blue" names="class_color_constant_powder_blue"><strong>POWDER_BLUE</strong> = <literal>Color(0.690196, 0.878431, 0.901961, 1)</literal> <reference internal="True" refid="class-color-constant-powder-blue"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>浅蓝色。</paragraph>
            <target refid="class-color-constant-purple"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-purple" names="class_color_constant_purple"><strong>PURPLE</strong> = <literal>Color(0.627451, 0.12549, 0.941176, 1)</literal> <reference internal="True" refid="class-color-constant-purple"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>紫色。</paragraph>
            <target refid="class-color-constant-rebecca-purple"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-rebecca-purple" names="class_color_constant_rebecca_purple"><strong>REBECCA_PURPLE</strong> = <literal>Color(0.4, 0.2, 0.6, 1)</literal> <reference internal="True" refid="class-color-constant-rebecca-purple"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>丽贝卡紫色。</paragraph>
            <target refid="class-color-constant-red"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-red" names="class_color_constant_red"><strong>RED</strong> = <literal>Color(1, 0, 0, 1)</literal> <reference internal="True" refid="class-color-constant-red"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>红色。</paragraph>
            <target refid="class-color-constant-rosy-brown"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-rosy-brown" names="class_color_constant_rosy_brown"><strong>ROSY_BROWN</strong> = <literal>Color(0.737255, 0.560784, 0.560784, 1)</literal> <reference internal="True" refid="class-color-constant-rosy-brown"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>玫瑰棕。</paragraph>
            <target refid="class-color-constant-royal-blue"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-royal-blue" names="class_color_constant_royal_blue"><strong>ROYAL_BLUE</strong> = <literal>Color(0.254902, 0.411765, 0.882353, 1)</literal> <reference internal="True" refid="class-color-constant-royal-blue"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>宝蓝色。</paragraph>
            <target refid="class-color-constant-saddle-brown"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-saddle-brown" names="class_color_constant_saddle_brown"><strong>SADDLE_BROWN</strong> = <literal>Color(0.545098, 0.270588, 0.0745098, 1)</literal> <reference internal="True" refid="class-color-constant-saddle-brown"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>鞍棕色。</paragraph>
            <target refid="class-color-constant-salmon"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-salmon" names="class_color_constant_salmon"><strong>SALMON</strong> = <literal>Color(0.980392, 0.501961, 0.447059, 1)</literal> <reference internal="True" refid="class-color-constant-salmon"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>鲑鱼色。</paragraph>
            <target refid="class-color-constant-sandy-brown"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-sandy-brown" names="class_color_constant_sandy_brown"><strong>SANDY_BROWN</strong> = <literal>Color(0.956863, 0.643137, 0.376471, 1)</literal> <reference internal="True" refid="class-color-constant-sandy-brown"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>沙褐色。</paragraph>
            <target refid="class-color-constant-sea-green"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-sea-green" names="class_color_constant_sea_green"><strong>SEA_GREEN</strong> = <literal>Color(0.180392, 0.545098, 0.341176, 1)</literal> <reference internal="True" refid="class-color-constant-sea-green"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>海绿色。</paragraph>
            <target refid="class-color-constant-seashell"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-seashell" names="class_color_constant_seashell"><strong>SEASHELL</strong> = <literal>Color(1, 0.960784, 0.933333, 1)</literal> <reference internal="True" refid="class-color-constant-seashell"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>贝壳色。</paragraph>
            <target refid="class-color-constant-sienna"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-sienna" names="class_color_constant_sienna"><strong>SIENNA</strong> = <literal>Color(0.627451, 0.321569, 0.176471, 1)</literal> <reference internal="True" refid="class-color-constant-sienna"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>西恩娜色。</paragraph>
            <target refid="class-color-constant-silver"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-silver" names="class_color_constant_silver"><strong>SILVER</strong> = <literal>Color(0.752941, 0.752941, 0.752941, 1)</literal> <reference internal="True" refid="class-color-constant-silver"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>银色。</paragraph>
            <target refid="class-color-constant-sky-blue"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-sky-blue" names="class_color_constant_sky_blue"><strong>SKY_BLUE</strong> = <literal>Color(0.529412, 0.807843, 0.921569, 1)</literal> <reference internal="True" refid="class-color-constant-sky-blue"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>天蓝色。</paragraph>
            <target refid="class-color-constant-slate-blue"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-slate-blue" names="class_color_constant_slate_blue"><strong>SLATE_BLUE</strong> = <literal>Color(0.415686, 0.352941, 0.803922, 1)</literal> <reference internal="True" refid="class-color-constant-slate-blue"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>石板蓝色。</paragraph>
            <target refid="class-color-constant-slate-gray"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-slate-gray" names="class_color_constant_slate_gray"><strong>SLATE_GRAY</strong> = <literal>Color(0.439216, 0.501961, 0.564706, 1)</literal> <reference internal="True" refid="class-color-constant-slate-gray"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>石板灰。</paragraph>
            <target refid="class-color-constant-snow"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-snow" names="class_color_constant_snow"><strong>SNOW</strong> = <literal>Color(1, 0.980392, 0.980392, 1)</literal> <reference internal="True" refid="class-color-constant-snow"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>雪白。</paragraph>
            <target refid="class-color-constant-spring-green"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-spring-green" names="class_color_constant_spring_green"><strong>SPRING_GREEN</strong> = <literal>Color(0, 1, 0.498039, 1)</literal> <reference internal="True" refid="class-color-constant-spring-green"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>春绿。</paragraph>
            <target refid="class-color-constant-steel-blue"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-steel-blue" names="class_color_constant_steel_blue"><strong>STEEL_BLUE</strong> = <literal>Color(0.27451, 0.509804, 0.705882, 1)</literal> <reference internal="True" refid="class-color-constant-steel-blue"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>钢蓝色。</paragraph>
            <target refid="class-color-constant-tan"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-tan" names="class_color_constant_tan"><strong>TAN</strong> = <literal>Color(0.823529, 0.705882, 0.54902, 1)</literal> <reference internal="True" refid="class-color-constant-tan"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>棕褐色。</paragraph>
            <target refid="class-color-constant-teal"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-teal" names="class_color_constant_teal"><strong>TEAL</strong> = <literal>Color(0, 0.501961, 0.501961, 1)</literal> <reference internal="True" refid="class-color-constant-teal"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>青色。</paragraph>
            <target refid="class-color-constant-thistle"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-thistle" names="class_color_constant_thistle"><strong>THISTLE</strong> = <literal>Color(0.847059, 0.74902, 0.847059, 1)</literal> <reference internal="True" refid="class-color-constant-thistle"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>蓟色。</paragraph>
            <target refid="class-color-constant-tomato"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-tomato" names="class_color_constant_tomato"><strong>TOMATO</strong> = <literal>Color(1, 0.388235, 0.278431, 1)</literal> <reference internal="True" refid="class-color-constant-tomato"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>番茄色。</paragraph>
            <target refid="class-color-constant-transparent"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-transparent" names="class_color_constant_transparent"><strong>TRANSPARENT</strong> = <literal>Color(1, 1, 1, 0)</literal> <reference internal="True" refid="class-color-constant-transparent"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>透明色（Alpha 为零的白色）。</paragraph>
            <target refid="class-color-constant-turquoise"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-turquoise" names="class_color_constant_turquoise"><strong>TURQUOISE</strong> = <literal>Color(0.25098, 0.878431, 0.815686, 1)</literal> <reference internal="True" refid="class-color-constant-turquoise"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>松石绿。</paragraph>
            <target refid="class-color-constant-violet"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-violet" names="class_color_constant_violet"><strong>VIOLET</strong> = <literal>Color(0.933333, 0.509804, 0.933333, 1)</literal> <reference internal="True" refid="class-color-constant-violet"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>紫罗兰色。</paragraph>
            <target refid="class-color-constant-web-gray"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-web-gray" names="class_color_constant_web_gray"><strong>WEB_GRAY</strong> = <literal>Color(0.501961, 0.501961, 0.501961, 1)</literal> <reference internal="True" refid="class-color-constant-web-gray"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>网格灰。</paragraph>
            <target refid="class-color-constant-web-green"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-web-green" names="class_color_constant_web_green"><strong>WEB_GREEN</strong> = <literal>Color(0, 0.501961, 0, 1)</literal> <reference internal="True" refid="class-color-constant-web-green"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>网络绿。</paragraph>
            <target refid="class-color-constant-web-maroon"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-web-maroon" names="class_color_constant_web_maroon"><strong>WEB_MAROON</strong> = <literal>Color(0.501961, 0, 0, 1)</literal> <reference internal="True" refid="class-color-constant-web-maroon"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>网络栗。</paragraph>
            <target refid="class-color-constant-web-purple"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-web-purple" names="class_color_constant_web_purple"><strong>WEB_PURPLE</strong> = <literal>Color(0.501961, 0, 0.501961, 1)</literal> <reference internal="True" refid="class-color-constant-web-purple"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>网络紫。</paragraph>
            <target refid="class-color-constant-wheat"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-wheat" names="class_color_constant_wheat"><strong>WHEAT</strong> = <literal>Color(0.960784, 0.870588, 0.701961, 1)</literal> <reference internal="True" refid="class-color-constant-wheat"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>小麦色。</paragraph>
            <target refid="class-color-constant-white"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-white" names="class_color_constant_white"><strong>WHITE</strong> = <literal>Color(1, 1, 1, 1)</literal> <reference internal="True" refid="class-color-constant-white"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>白色。</paragraph>
            <target refid="class-color-constant-white-smoke"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-white-smoke" names="class_color_constant_white_smoke"><strong>WHITE_SMOKE</strong> = <literal>Color(0.960784, 0.960784, 0.960784, 1)</literal> <reference internal="True" refid="class-color-constant-white-smoke"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>白烟色。</paragraph>
            <target refid="class-color-constant-yellow"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-yellow" names="class_color_constant_yellow"><strong>YELLOW</strong> = <literal>Color(1, 1, 0, 1)</literal> <reference internal="True" refid="class-color-constant-yellow"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>黄色。</paragraph>
            <target refid="class-color-constant-yellow-green"></target>
            <paragraph classes="classref-constant" ids="class-color-constant-yellow-green" names="class_color_constant_yellow_green"><strong>YELLOW_GREEN</strong> = <literal>Color(0.603922, 0.803922, 0.196078, 1)</literal> <reference internal="True" refid="class-color-constant-yellow-green"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>黄绿色。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id8" names="属性说明">
            <title>属性说明</title>
            <target refid="class-color-property-a"></target>
            <paragraph classes="classref-property" ids="class-color-property-a" names="class_color_property_a"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>a</strong> = <literal>1.0</literal> <reference internal="True" refid="class-color-property-a"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>颜色的 Alpha 分量，一般在 0 到 1 的范围内。0 表示该颜色完全透明。1 表示该颜色完全不透明。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-color-property-a8"></target>
            <paragraph classes="classref-property" ids="class-color-property-a8" names="class_color_property_a8"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>a8</strong> = <literal>255</literal> <reference internal="True" refid="class-color-property-a8"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>对 <reference internal="True" refid="class-color-property-a"><inline classes="std std-ref">a</inline></reference> 的封装，使用 0 到 255 的范围而不是 0 到 1。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-color-property-b"></target>
            <paragraph classes="classref-property" ids="class-color-property-b" names="class_color_property_b"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>b</strong> = <literal>0.0</literal> <reference internal="True" refid="class-color-property-b"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>颜色的蓝色分量，一般在 0 到 1 的范围内。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-color-property-b8"></target>
            <paragraph classes="classref-property" ids="class-color-property-b8" names="class_color_property_b8"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>b8</strong> = <literal>0</literal> <reference internal="True" refid="class-color-property-b8"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>对 <reference internal="True" refid="class-color-property-b"><inline classes="std std-ref">b</inline></reference> 的封装，使用 0 到 255 的范围而不是 0 到 1。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-color-property-g"></target>
            <paragraph classes="classref-property" ids="class-color-property-g" names="class_color_property_g"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>g</strong> = <literal>0.0</literal> <reference internal="True" refid="class-color-property-g"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>颜色的绿色分量，一般在 0 到 1 的范围内。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-color-property-g8"></target>
            <paragraph classes="classref-property" ids="class-color-property-g8" names="class_color_property_g8"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>g8</strong> = <literal>0</literal> <reference internal="True" refid="class-color-property-g8"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>对 <reference internal="True" refid="class-color-property-g"><inline classes="std std-ref">g</inline></reference> 的封装，使用 0 到 255 的范围而不是 0 到 1。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-color-property-h"></target>
            <paragraph classes="classref-property" ids="class-color-property-h" names="class_color_property_h"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>h</strong> = <literal>0.0</literal> <reference internal="True" refid="class-color-property-h"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>这个颜色的 HSV 色相，范围是 0 到 1。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-color-property-r"></target>
            <paragraph classes="classref-property" ids="class-color-property-r" names="class_color_property_r"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>r</strong> = <literal>0.0</literal> <reference internal="True" refid="class-color-property-r"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>颜色的红色分量，通常在 0 到 1 的范围内。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-color-property-r8"></target>
            <paragraph classes="classref-property" ids="class-color-property-r8" names="class_color_property_r8"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>r8</strong> = <literal>0</literal> <reference internal="True" refid="class-color-property-r8"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>对 <reference internal="True" refid="class-color-property-r"><inline classes="std std-ref">r</inline></reference> 的封装，使用 0 到 255 的范围而不是 0 到 1。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-color-property-s"></target>
            <paragraph classes="classref-property" ids="class-color-property-s" names="class_color_property_s"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>s</strong> = <literal>0.0</literal> <reference internal="True" refid="class-color-property-s"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>这个颜色的 HSV 饱和度，范围为 0 到 1。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-color-property-v"></target>
            <paragraph classes="classref-property" ids="class-color-property-v" names="class_color_property_v"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>v</strong> = <literal>0.0</literal> <reference internal="True" refid="class-color-property-v"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>这个颜色的 HSV 值（亮度），范围为 0 至 1。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id9" names="构造函数说明">
            <title>构造函数说明</title>
            <target refid="class-color-constructor-color"></target>
            <paragraph classes="classref-constructor" ids="class-color-constructor-color" names="class_color_constructor_color"><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference> <strong>Color</strong>() <reference internal="True" refid="class-color-constructor-color"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>用不透明的黑色构造默认的 <strong>Color</strong>，与 <reference internal="True" refid="class-color-constant-black"><inline classes="std std-ref">BLACK</inline></reference> 相同。</paragraph>
            <paragraph><strong>注意：</strong>在 C# 中构造的空颜色，其所有分量都为 <literal>0.0</literal>（透明黑）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <paragraph classes="classref-constructor"><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference> <strong>Color</strong>(from: <reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference>, alpha: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
            <paragraph>从现有的颜色构造 <strong>Color</strong>，<reference internal="True" refid="class-color-property-a"><inline classes="std std-ref">a</inline></reference> 设置为给定的 <literal>alpha</literal> 值。</paragraph>
            <container classes="sphinx-tabs" type="tab-element">
                <div aria-label="Tabbed content" role="tablist">
                    <button aria-controls="panel-0-R0RTY3JpcHQ=" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-0-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tab" tabindex="0">GDScript</button>
                    <button aria-controls="panel-0-QyM=" aria-selected="false" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-0-QyM=" name="QyM=" role="tab" tabindex="-1">C#</button>
                </div>
                <div aria-labelledby="tab-0-R0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-0-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve">var red = Color(Color.RED, 0.2) # 20% 不透明红色。</literal_block>
                </div>
                <div aria-labelledby="tab-0-QyM=" classes="sphinx-tabs-panel code-tab group-tab" hidden="true" ids="panel-0-QyM=" name="QyM=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="csharp" linenos="False" xml:space="preserve">var red = new Color(Colors.Red, 0.2f); // 20% 不透明红色。</literal_block>
                </div>
            </container>
            <transition classes="classref-item-separator"></transition>
            <paragraph classes="classref-constructor"><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference> <strong>Color</strong>(from: <reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference>)</paragraph>
            <paragraph>构造给定 <strong>Color</strong> 的副本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <paragraph classes="classref-constructor"><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference> <strong>Color</strong>(code: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>)</paragraph>
            <paragraph>从 HTML 颜色代码或标准化的颜色名称中构建 <strong>Color</strong>。支持的颜色名称与常量名相同。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <paragraph classes="classref-constructor"><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference> <strong>Color</strong>(code: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, alpha: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
            <paragraph>从 HTML 颜色代码或标准化的颜色名称中构建 <strong>Color</strong>，<literal>alpha</literal> 的范围为 0.0 到 1.0。支持的颜色名称与常量名相同。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <paragraph classes="classref-constructor"><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference> <strong>Color</strong>(r: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>, g: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>, b: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
            <paragraph>从通常介于 0.0 和 1.0 之间的 RGB 值构造一个 <strong>Color</strong>。<reference internal="True" refid="class-color-property-a"><inline classes="std std-ref">a</inline></reference> 被设置为 1.0。</paragraph>
            <container classes="sphinx-tabs" type="tab-element">
                <div aria-label="Tabbed content" role="tablist">
                    <button aria-controls="panel-1-R0RTY3JpcHQ=" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-1-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tab" tabindex="0">GDScript</button>
                    <button aria-controls="panel-1-QyM=" aria-selected="false" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-1-QyM=" name="QyM=" role="tab" tabindex="-1">C#</button>
                </div>
                <div aria-labelledby="tab-1-R0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-1-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve">var color = Color(0.2, 1.0, 0.7) # 类似于 `Color8(51, 255, 178, 255)`</literal_block>
                </div>
                <div aria-labelledby="tab-1-QyM=" classes="sphinx-tabs-panel code-tab group-tab" hidden="true" ids="panel-1-QyM=" name="QyM=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="csharp" linenos="False" xml:space="preserve">var color = new Color(0.2f, 1.0f, 0.7f); // 类似于 `Color.Color8(51, 255, 178, 255)`</literal_block>
                </div>
            </container>
            <transition classes="classref-item-separator"></transition>
            <paragraph classes="classref-constructor"><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference> <strong>Color</strong>(r: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>, g: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>, b: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>, a: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
            <paragraph>从通常介于 0.0 和 1.0 之间的 RGBA 值构造一个 <strong>Color</strong>。</paragraph>
            <container classes="sphinx-tabs" type="tab-element">
                <div aria-label="Tabbed content" role="tablist">
                    <button aria-controls="panel-2-R0RTY3JpcHQ=" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-2-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tab" tabindex="0">GDScript</button>
                    <button aria-controls="panel-2-QyM=" aria-selected="false" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-2-QyM=" name="QyM=" role="tab" tabindex="-1">C#</button>
                </div>
                <div aria-labelledby="tab-2-R0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-2-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve">var color = Color(0.2, 1.0, 0.7, 0.8) # 类似于 `Color8(51, 255, 178, 204)`</literal_block>
                </div>
                <div aria-labelledby="tab-2-QyM=" classes="sphinx-tabs-panel code-tab group-tab" hidden="true" ids="panel-2-QyM=" name="QyM=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="csharp" linenos="False" xml:space="preserve">var color = new Color(0.2f, 1.0f, 0.7f, 0.8f); // 类似于 `Color.Color8(51, 255, 178, 255, 204)`</literal_block>
                </div>
            </container>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id10" names="方法说明">
            <title>方法说明</title>
            <target refid="class-color-method-blend"></target>
            <paragraph classes="classref-method" ids="class-color-method-blend" names="class_color_method_blend"><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference> <strong>blend</strong>(over: <reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-color-method-blend"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回将该颜色混合到给定颜色上所产生的新颜色。在绘画程序中，你可以将其想象为在该颜色（包括 alpha）上绘制的 <literal>over</literal> 颜色。</paragraph>
            <container classes="sphinx-tabs" type="tab-element">
                <div aria-label="Tabbed content" role="tablist">
                    <button aria-controls="panel-3-R0RTY3JpcHQ=" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-3-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tab" tabindex="0">GDScript</button>
                    <button aria-controls="panel-3-QyM=" aria-selected="false" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-3-QyM=" name="QyM=" role="tab" tabindex="-1">C#</button>
                </div>
                <div aria-labelledby="tab-3-R0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-3-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve">var bg = Color(0.0, 1.0, 0.0, 0.5) # 50% 不透明的绿色
var fg = Color(1.0, 0.0, 0.0, 0.5) # 50% 不透明的红色
var blended_color = bg.blend(fg) # 75% 不透明的棕色</literal_block>
                </div>
                <div aria-labelledby="tab-3-QyM=" classes="sphinx-tabs-panel code-tab group-tab" hidden="true" ids="panel-3-QyM=" name="QyM=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="csharp" linenos="False" xml:space="preserve">var bg = new Color(0.0f, 1.0f, 0.0f, 0.5f); // 50% 不透明的绿色
var fg = new Color(1.0f, 0.0f, 0.0f, 0.5f); // 50% 不透明的红色
Color blendedColor = bg.Blend(fg); // 75% 不透明的棕色</literal_block>
                </div>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-color-method-clamp"></target>
            <paragraph classes="classref-method" ids="class-color-method-clamp" names="class_color_method_clamp"><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference> <strong>clamp</strong>(min: <reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference> = Color(0, 0, 0, 0), max: <reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference> = Color(1, 1, 1, 1)) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-color-method-clamp"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>通过在每个分量上运行 <reference internal="True" refuri="class_@globalscope#class-globalscope-method-clamp"><inline classes="std std-ref">@GlobalScope.clamp</inline></reference>，返回一种新颜色，其中所有分量都被钳制在 <literal>min</literal> 和 <literal>max</literal> 的分量之间。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-color-method-darkened"></target>
            <paragraph classes="classref-method" ids="class-color-method-darkened" names="class_color_method_darkened"><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference> <strong>darkened</strong>(amount: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-color-method-darkened"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回通过指定 <literal>amount</literal>（从 0.0 到 1.0 的比率）使该颜色变暗而产生的新颜色。另见 <reference internal="True" refid="class-color-method-lightened"><inline classes="std std-ref">lightened</inline></reference>。</paragraph>
            <container classes="sphinx-tabs" type="tab-element">
                <div aria-label="Tabbed content" role="tablist">
                    <button aria-controls="panel-4-R0RTY3JpcHQ=" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-4-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tab" tabindex="0">GDScript</button>
                    <button aria-controls="panel-4-QyM=" aria-selected="false" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-4-QyM=" name="QyM=" role="tab" tabindex="-1">C#</button>
                </div>
                <div aria-labelledby="tab-4-R0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-4-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve">var green = Color(0.0, 1.0, 0.0)
var darkgreen = green.darkened(0.2) # 比普通的绿色深 20%</literal_block>
                </div>
                <div aria-labelledby="tab-4-QyM=" classes="sphinx-tabs-panel code-tab group-tab" hidden="true" ids="panel-4-QyM=" name="QyM=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="csharp" linenos="False" xml:space="preserve">var green = new Color(0.0f, 1.0f, 0.0f);
Color darkgreen = green.Darkened(0.2f); // 比普通的绿色深 20%</literal_block>
                </div>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-color-method-from-hsv"></target>
            <paragraph classes="classref-method" ids="class-color-method-from-hsv" names="class_color_method_from_hsv"><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference> <strong>from_hsv</strong>(h: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>, s: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>, v: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>, alpha: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> = 1.0) <abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation> <reference internal="True" refid="class-color-method-from-hsv"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>根据 <reference name="HSV 配置" refuri="https://zh.wikipedia.org/wiki/HSL%E5%92%8CHSV%E8%89%B2%E5%BD%A9%E7%A9%BA%E9%97%B4">HSV 配置</reference>构建颜色。色相（<literal>h</literal>）、饱和度（<literal>s</literal>）和值（<literal>v</literal>）通常在 0.0 和 1.0 之间。</paragraph>
            <container classes="sphinx-tabs" type="tab-element">
                <div aria-label="Tabbed content" role="tablist">
                    <button aria-controls="panel-5-R0RTY3JpcHQ=" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-5-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tab" tabindex="0">GDScript</button>
                    <button aria-controls="panel-5-QyM=" aria-selected="false" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-5-QyM=" name="QyM=" role="tab" tabindex="-1">C#</button>
                </div>
                <div aria-labelledby="tab-5-R0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-5-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve">var color = Color.from_hsv(0.58, 0.5, 0.79, 0.8)</literal_block>
                </div>
                <div aria-labelledby="tab-5-QyM=" classes="sphinx-tabs-panel code-tab group-tab" hidden="true" ids="panel-5-QyM=" name="QyM=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="csharp" linenos="False" xml:space="preserve">var color = Color.FromHsv(0.58f, 0.5f, 0.79f, 0.8f);</literal_block>
                </div>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-color-method-from-ok-hsl"></target>
            <paragraph classes="classref-method" ids="class-color-method-from-ok-hsl" names="class_color_method_from_ok_hsl"><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference> <strong>from_ok_hsl</strong>(h: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>, s: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>, l: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>, alpha: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> = 1.0) <abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation> <reference internal="True" refid="class-color-method-from-ok-hsl"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>根据 <reference name="OK HSL 配置" refuri="https://bottosson.github.io/posts/colorpicker/">OK HSL 配置</reference>构建颜色。色相（<literal>h</literal>）、饱和度（<literal>s</literal>）和亮度（<literal>l</literal>）通常在 0.0 和 1.0 之间。</paragraph>
            <container classes="sphinx-tabs" type="tab-element">
                <div aria-label="Tabbed content" role="tablist">
                    <button aria-controls="panel-6-R0RTY3JpcHQ=" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-6-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tab" tabindex="0">GDScript</button>
                    <button aria-controls="panel-6-QyM=" aria-selected="false" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-6-QyM=" name="QyM=" role="tab" tabindex="-1">C#</button>
                </div>
                <div aria-labelledby="tab-6-R0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-6-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve">var color = Color.from_ok_hsl(0.58, 0.5, 0.79, 0.8)</literal_block>
                </div>
                <div aria-labelledby="tab-6-QyM=" classes="sphinx-tabs-panel code-tab group-tab" hidden="true" ids="panel-6-QyM=" name="QyM=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="csharp" linenos="False" xml:space="preserve">var color = Color.FromOkHsl(0.58f, 0.5f, 0.79f, 0.8f);</literal_block>
                </div>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-color-method-from-rgbe9995"></target>
            <paragraph classes="classref-method" ids="class-color-method-from-rgbe9995" names="class_color_method_from_rgbe9995"><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference> <strong>from_rgbe9995</strong>(rgbe: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation> <reference internal="True" refid="class-color-method-from-rgbe9995"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>从 RGBE9995 格式的整数解码 <strong>Color</strong>。见 <reference internal="True" refuri="class_image#class-image-constant-format-rgbe9995"><inline classes="std std-ref">Image.FORMAT_RGBE9995</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-color-method-from-string"></target>
            <paragraph classes="classref-method" ids="class-color-method-from-string" names="class_color_method_from_string"><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference> <strong>from_string</strong>(str: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, default: <reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference>) <abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation> <reference internal="True" refid="class-color-method-from-string"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>从给定的字符串创建 <strong>Color</strong>，该字符串可以是 HTML 颜色代码，也可以是颜色名称（不区分大小写）。如果无法从字符串中推断出颜色，则返回 <literal>default</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-color-method-get-luminance"></target>
            <paragraph classes="classref-method" ids="class-color-method-get-luminance" names="class_color_method_get_luminance"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_luminance</strong>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-color-method-get-luminance"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将颜色的光照强度返回为一个介于 0.0 和 1.0（包含）之间的值。这在确定浅色或深色时很有用。亮度小于 0.5 的颜色通常可以认为是深色。</paragraph>
            <paragraph><strong>注意：</strong><reference internal="True" refid="class-color-method-get-luminance"><inline classes="std std-ref">get_luminance</inline></reference> 依赖于线性色彩空间中的颜色，以返回准确的相对亮度值。如果颜色在 sRGB 色彩空间，请先使用 <reference internal="True" refid="class-color-method-srgb-to-linear"><inline classes="std std-ref">srgb_to_linear</inline></reference> 将其转换为线性色彩空间。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-color-method-hex"></target>
            <paragraph classes="classref-method" ids="class-color-method-hex" names="class_color_method_hex"><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference> <strong>hex</strong>(hex: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation> <reference internal="True" refid="class-color-method-hex"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Returns the <strong>Color</strong> associated with the provided <literal>hex</literal> integer in 32-bit RGBA format (8 bits per channel). This method is the inverse of <reference internal="True" refid="class-color-method-to-rgba32"><inline classes="std std-ref">to_rgba32</inline></reference>.</paragraph>
            <paragraph>In GDScript and C#, the <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> is best visualized with hexadecimal notation (<literal>"0x"</literal> prefix, making it <literal>"0xRRGGBBAA"</literal>).</paragraph>
            <container classes="sphinx-tabs" type="tab-element">
                <div aria-label="Tabbed content" role="tablist">
                    <button aria-controls="panel-7-R0RTY3JpcHQ=" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-7-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tab" tabindex="0">GDScript</button>
                    <button aria-controls="panel-7-QyM=" aria-selected="false" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-7-QyM=" name="QyM=" role="tab" tabindex="-1">C#</button>
                </div>
                <div aria-labelledby="tab-7-R0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-7-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve">var red = Color.hex(0xff0000ff)
var dark_cyan = Color.hex(0x008b8bff)
var my_color = Color.hex(0xbbefd2a4)</literal_block>
                </div>
                <div aria-labelledby="tab-7-QyM=" classes="sphinx-tabs-panel code-tab group-tab" hidden="true" ids="panel-7-QyM=" name="QyM=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="csharp" linenos="False" xml:space="preserve">var red = new Color(0xff0000ff);
var dark_cyan = new Color(0x008b8bff);
var my_color = new Color(0xbbefd2a4);</literal_block>
                </div>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-color-method-hex64"></target>
            <paragraph classes="classref-method" ids="class-color-method-hex64" names="class_color_method_hex64"><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference> <strong>hex64</strong>(hex: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation> <reference internal="True" refid="class-color-method-hex64"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Returns the <strong>Color</strong> associated with the provided <literal>hex</literal> integer in 64-bit RGBA format (16 bits per channel). This method is the inverse of <reference internal="True" refid="class-color-method-to-rgba64"><inline classes="std std-ref">to_rgba64</inline></reference>.</paragraph>
            <paragraph>In GDScript and C#, the <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> is best visualized with hexadecimal notation (<literal>"0x"</literal> prefix, making it <literal>"0xRRRRGGGGBBBBAAAA"</literal>).</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-color-method-html"></target>
            <paragraph classes="classref-method" ids="class-color-method-html" names="class_color_method_html"><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference> <strong>html</strong>(rgba: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation> <reference internal="True" refid="class-color-method-html"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>从 HTML 十六进制颜色字符串 <literal>rgba</literal> 返回一个新颜色。<literal>rgba</literal> 不区分大小写，可以使用哈希符号（<literal>#</literal>）作为前缀。</paragraph>
            <paragraph><literal>rgba</literal> 必须是有效的三位或六位十六进制颜色字符串，并且可以包含 alpha 通道值。如果 <literal>rgba</literal> 不包含 alpha 通道值，则应用 alpha 通道值 1.0。如果 <literal>rgba</literal> 无效，则返回一个空颜色。</paragraph>
            <container classes="sphinx-tabs" type="tab-element">
                <div aria-label="Tabbed content" role="tablist">
                    <button aria-controls="panel-8-R0RTY3JpcHQ=" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-8-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tab" tabindex="0">GDScript</button>
                    <button aria-controls="panel-8-QyM=" aria-selected="false" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-8-QyM=" name="QyM=" role="tab" tabindex="-1">C#</button>
                </div>
                <div aria-labelledby="tab-8-R0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-8-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve">var blue = Color.html("#0000ff") # blue 为 Color(0.0, 0.0, 1.0, 1.0)
var green = Color.html("#0F0")   # green 为 Color(0.0, 1.0, 0.0, 1.0)
var col = Color.html("663399cc") # col 为 Color(0.4, 0.2, 0.6, 0.8)</literal_block>
                </div>
                <div aria-labelledby="tab-8-QyM=" classes="sphinx-tabs-panel code-tab group-tab" hidden="true" ids="panel-8-QyM=" name="QyM=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="csharp" linenos="False" xml:space="preserve">var blue = Color.FromHtml("#0000ff"); // blue 为 Color(0.0, 0.0, 1.0, 1.0)
var green = Color.FromHtml("#0F0");   // green 为 Color(0.0, 1.0, 0.0, 1.0)
var col = Color.FromHtml("663399cc"); // col 为 Color(0.4, 0.2, 0.6, 0.8)</literal_block>
                </div>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-color-method-html-is-valid"></target>
            <paragraph classes="classref-method" ids="class-color-method-html-is-valid" names="class_color_method_html_is_valid"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>html_is_valid</strong>(color: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation> <reference internal="True" refid="class-color-method-html-is-valid"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果 <literal>color</literal> 是一个有效的 HTML 十六进制颜色字符串，则返回 <literal>true</literal>。该字符串必须是一个由 3、4、6 或 8 位数字组成的十六进制值（不区分大小写），并且可以以井号 (<literal>#</literal>) 作为前缀。该方法与 <reference internal="True" refuri="class_string#class-string-method-is-valid-html-color"><inline classes="std std-ref">String.is_valid_html_color</inline></reference> 相同。</paragraph>
            <container classes="sphinx-tabs" type="tab-element">
                <div aria-label="Tabbed content" role="tablist">
                    <button aria-controls="panel-9-R0RTY3JpcHQ=" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-9-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tab" tabindex="0">GDScript</button>
                    <button aria-controls="panel-9-QyM=" aria-selected="false" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-9-QyM=" name="QyM=" role="tab" tabindex="-1">C#</button>
                </div>
                <div aria-labelledby="tab-9-R0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-9-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve">Color.html_is_valid("#55aaFF")   # 返回 true
Color.html_is_valid("#55AAFF20") # 返回 true
Color.html_is_valid("55AAFF")    # 返回 true
Color.html_is_valid("#F2C")      # 返回 true

Color.html_is_valid("#AABBC")     # 返回 false
Color.html_is_valid("#55aaFF5")  # 返回 false</literal_block>
                </div>
                <div aria-labelledby="tab-9-QyM=" classes="sphinx-tabs-panel code-tab group-tab" hidden="true" ids="panel-9-QyM=" name="QyM=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="csharp" linenos="False" xml:space="preserve">Color.HtmlIsValid("#55AAFF");   // 返回 true
Color.HtmlIsValid("#55AAFF20"); // 返回 true
Color.HtmlIsValid("55AAFF");    // 返回 true
Color.HtmlIsValid("#F2C");      // 返回 true

Color.HtmlIsValid("#AABBC");    // 返回 false
Color.HtmlIsValid("#55aaFF5");  // 返回 false</literal_block>
                </div>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-color-method-inverted"></target>
            <paragraph classes="classref-method" ids="class-color-method-inverted" names="class_color_method_inverted"><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference> <strong>inverted</strong>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-color-method-inverted"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回将 <reference internal="True" refid="class-color-property-r"><inline classes="std std-ref">r</inline></reference>、<reference internal="True" refid="class-color-property-g"><inline classes="std std-ref">g</inline></reference>、<reference internal="True" refid="class-color-property-b"><inline classes="std std-ref">b</inline></reference> 分量翻转后的颜色（<literal>(1 - r, 1 - g, 1 - b, a)</literal>）。</paragraph>
            <container classes="sphinx-tabs" type="tab-element">
                <div aria-label="Tabbed content" role="tablist">
                    <button aria-controls="panel-10-R0RTY3JpcHQ=" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-10-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tab" tabindex="0">GDScript</button>
                    <button aria-controls="panel-10-QyM=" aria-selected="false" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-10-QyM=" name="QyM=" role="tab" tabindex="-1">C#</button>
                </div>
                <div aria-labelledby="tab-10-R0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-10-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve">var black = Color.WHITE.inverted()
var color = Color(0.3, 0.4, 0.9)
var inverted_color = color.inverted() # 等价于 `Color(0.7, 0.6, 0.1)`</literal_block>
                </div>
                <div aria-labelledby="tab-10-QyM=" classes="sphinx-tabs-panel code-tab group-tab" hidden="true" ids="panel-10-QyM=" name="QyM=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="csharp" linenos="False" xml:space="preserve">var black = Colors.White.Inverted();
var color = new Color(0.3f, 0.4f, 0.9f);
Color invertedColor = color.Inverted(); // 等价于 `new Color(0.7f, 0.6f, 0.1f)`</literal_block>
                </div>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-color-method-is-equal-approx"></target>
            <paragraph classes="classref-method" ids="class-color-method-is-equal-approx" names="class_color_method_is_equal_approx"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_equal_approx</strong>(to: <reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-color-method-is-equal-approx"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果该颜色和 <literal>to</literal> 近似相等，则返回 <literal>true</literal>，判断近似相等的方法是通过在每个分量上运行 <reference internal="True" refuri="class_@globalscope#class-globalscope-method-is-equal-approx"><inline classes="std std-ref">@GlobalScope.is_equal_approx</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-color-method-lerp"></target>
            <paragraph classes="classref-method" ids="class-color-method-lerp" names="class_color_method_lerp"><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference> <strong>lerp</strong>(to: <reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference>, weight: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-color-method-lerp"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回将该颜色的分量和 <literal>to</literal> 的分量进行线性插值的结果。插值系数 <literal>weight</literal> 应该在 0.0 和 1.0 之间（闭区间）。另请参阅 <reference internal="True" refuri="class_@globalscope#class-globalscope-method-lerp"><inline classes="std std-ref">@GlobalScope.lerp</inline></reference>。</paragraph>
            <container classes="sphinx-tabs" type="tab-element">
                <div aria-label="Tabbed content" role="tablist">
                    <button aria-controls="panel-11-R0RTY3JpcHQ=" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-11-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tab" tabindex="0">GDScript</button>
                    <button aria-controls="panel-11-QyM=" aria-selected="false" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-11-QyM=" name="QyM=" role="tab" tabindex="-1">C#</button>
                </div>
                <div aria-labelledby="tab-11-R0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-11-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve">var red = Color(1.0, 0.0, 0.0)
var aqua = Color(0.0, 1.0, 0.8)

red.lerp(aqua, 0.2) # 返回 Color(0.8, 0.2, 0.16)
red.lerp(aqua, 0.5) # 返回 Color(0.5, 0.5, 0.4)
red.lerp(aqua, 1.0) # 返回 Color(0.0, 1.0, 0.8)</literal_block>
                </div>
                <div aria-labelledby="tab-11-QyM=" classes="sphinx-tabs-panel code-tab group-tab" hidden="true" ids="panel-11-QyM=" name="QyM=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="csharp" linenos="False" xml:space="preserve">var red = new Color(1.0f, 0.0f, 0.0f);
var aqua = new Color(0.0f, 1.0f, 0.8f);

red.Lerp(aqua, 0.2f); // 返回 Color(0.8f, 0.2f, 0.16f)
red.Lerp(aqua, 0.5f); // 返回 Color(0.5f, 0.5f, 0.4f)
red.Lerp(aqua, 1.0f); // 返回 Color(0.0f, 1.0f, 0.8f)</literal_block>
                </div>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-color-method-lightened"></target>
            <paragraph classes="classref-method" ids="class-color-method-lightened" names="class_color_method_lightened"><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference> <strong>lightened</strong>(amount: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-color-method-lightened"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回通过指定 <literal>amount</literal>（从 0.0 到 1.0 的比率）使该颜色变亮而产生的新颜色。另见 <reference internal="True" refid="class-color-method-darkened"><inline classes="std std-ref">darkened</inline></reference>。</paragraph>
            <container classes="sphinx-tabs" type="tab-element">
                <div aria-label="Tabbed content" role="tablist">
                    <button aria-controls="panel-12-R0RTY3JpcHQ=" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-12-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tab" tabindex="0">GDScript</button>
                    <button aria-controls="panel-12-QyM=" aria-selected="false" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-12-QyM=" name="QyM=" role="tab" tabindex="-1">C#</button>
                </div>
                <div aria-labelledby="tab-12-R0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-12-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve">var green = Color(0.0, 1.0, 0.0)
var light_green = green.lightened(0.2) # 比普通的绿色要淡 20%</literal_block>
                </div>
                <div aria-labelledby="tab-12-QyM=" classes="sphinx-tabs-panel code-tab group-tab" hidden="true" ids="panel-12-QyM=" name="QyM=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="csharp" linenos="False" xml:space="preserve">var green = new Color(0.0f, 1.0f, 0.0f);
Color lightGreen = green.Lightened(0.2f); // 比普通的绿色要淡 20%</literal_block>
                </div>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-color-method-linear-to-srgb"></target>
            <paragraph classes="classref-method" ids="class-color-method-linear-to-srgb" names="class_color_method_linear_to_srgb"><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference> <strong>linear_to_srgb</strong>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-color-method-linear-to-srgb"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回转换到 <reference name="sRGB" refuri="https://en.wikipedia.org/wiki/SRGB">sRGB</reference> 色彩空间的颜色。该方法假定原始颜色位于线性色彩空间中。另请参阅执行相反操作的 <reference internal="True" refid="class-color-method-srgb-to-linear"><inline classes="std std-ref">srgb_to_linear</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-color-method-srgb-to-linear"></target>
            <paragraph classes="classref-method" ids="class-color-method-srgb-to-linear" names="class_color_method_srgb_to_linear"><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference> <strong>srgb_to_linear</strong>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-color-method-srgb-to-linear"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回转换到线性色彩空间的颜色。该方法假定原始颜色已经在 sRGB 色彩空间中。另请参见执行相反操作的 <reference internal="True" refid="class-color-method-linear-to-srgb"><inline classes="std std-ref">linear_to_srgb</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-color-method-to-abgr32"></target>
            <paragraph classes="classref-method" ids="class-color-method-to-abgr32" names="class_color_method_to_abgr32"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>to_abgr32</strong>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-color-method-to-abgr32"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回转换为 ABGR 格式（每个分量为 8 位）的 32 位整数的颜色。ABGR 是默认 RGBA 格式的反转版本。</paragraph>
            <container classes="sphinx-tabs" type="tab-element">
                <div aria-label="Tabbed content" role="tablist">
                    <button aria-controls="panel-13-R0RTY3JpcHQ=" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-13-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tab" tabindex="0">GDScript</button>
                    <button aria-controls="panel-13-QyM=" aria-selected="false" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-13-QyM=" name="QyM=" role="tab" tabindex="-1">C#</button>
                </div>
                <div aria-labelledby="tab-13-R0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-13-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve">var color = Color(1, 0.5, 0.2)
print(color.to_abgr32()) # 输出 4281565439</literal_block>
                </div>
                <div aria-labelledby="tab-13-QyM=" classes="sphinx-tabs-panel code-tab group-tab" hidden="true" ids="panel-13-QyM=" name="QyM=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="csharp" linenos="False" xml:space="preserve">var color = new Color(1.0f, 0.5f, 0.2f);
GD.Print(color.ToAbgr32()); // 输出 4281565439</literal_block>
                </div>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-color-method-to-abgr64"></target>
            <paragraph classes="classref-method" ids="class-color-method-to-abgr64" names="class_color_method_to_abgr64"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>to_abgr64</strong>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-color-method-to-abgr64"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回转换为 ABGR 格式（每个分量为 16 位）的 64 位整数的颜色。ABGR 是默认 RGBA 格式的反转版本。</paragraph>
            <container classes="sphinx-tabs" type="tab-element">
                <div aria-label="Tabbed content" role="tablist">
                    <button aria-controls="panel-14-R0RTY3JpcHQ=" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-14-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tab" tabindex="0">GDScript</button>
                    <button aria-controls="panel-14-QyM=" aria-selected="false" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-14-QyM=" name="QyM=" role="tab" tabindex="-1">C#</button>
                </div>
                <div aria-labelledby="tab-14-R0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-14-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve">var color = Color(1, 0.5, 0.2)
print(color.to_abgr64()) # 输出 -225178692812801</literal_block>
                </div>
                <div aria-labelledby="tab-14-QyM=" classes="sphinx-tabs-panel code-tab group-tab" hidden="true" ids="panel-14-QyM=" name="QyM=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="csharp" linenos="False" xml:space="preserve">var color = new Color(1.0f, 0.5f, 0.2f);
GD.Print(color.ToAbgr64()); // 输出 -225178692812801</literal_block>
                </div>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-color-method-to-argb32"></target>
            <paragraph classes="classref-method" ids="class-color-method-to-argb32" names="class_color_method_to_argb32"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>to_argb32</strong>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-color-method-to-argb32"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回转换为 ARGB 格式（每个分量为 8 位）的 32 位整数的颜色。ARGB 与 DirectX 更兼容。</paragraph>
            <container classes="sphinx-tabs" type="tab-element">
                <div aria-label="Tabbed content" role="tablist">
                    <button aria-controls="panel-15-R0RTY3JpcHQ=" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-15-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tab" tabindex="0">GDScript</button>
                    <button aria-controls="panel-15-QyM=" aria-selected="false" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-15-QyM=" name="QyM=" role="tab" tabindex="-1">C#</button>
                </div>
                <div aria-labelledby="tab-15-R0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-15-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve">var color = Color(1, 0.5, 0.2)
print(color.to_argb32()) # 输出 4294934323</literal_block>
                </div>
                <div aria-labelledby="tab-15-QyM=" classes="sphinx-tabs-panel code-tab group-tab" hidden="true" ids="panel-15-QyM=" name="QyM=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="csharp" linenos="False" xml:space="preserve">var color = new Color(1.0f, 0.5f, 0.2f);
GD.Print(color.ToArgb32()); // 输出 4294934323</literal_block>
                </div>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-color-method-to-argb64"></target>
            <paragraph classes="classref-method" ids="class-color-method-to-argb64" names="class_color_method_to_argb64"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>to_argb64</strong>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-color-method-to-argb64"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回转换为 ARGB 格式（每个分量为 16 位）的 64 位整数的颜色。ARGB 与 DirectX 更兼容。</paragraph>
            <container classes="sphinx-tabs" type="tab-element">
                <div aria-label="Tabbed content" role="tablist">
                    <button aria-controls="panel-16-R0RTY3JpcHQ=" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-16-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tab" tabindex="0">GDScript</button>
                    <button aria-controls="panel-16-QyM=" aria-selected="false" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-16-QyM=" name="QyM=" role="tab" tabindex="-1">C#</button>
                </div>
                <div aria-labelledby="tab-16-R0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-16-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve">var color = Color(1, 0.5, 0.2)
print(color.to_argb64()) # 输出 -2147470541</literal_block>
                </div>
                <div aria-labelledby="tab-16-QyM=" classes="sphinx-tabs-panel code-tab group-tab" hidden="true" ids="panel-16-QyM=" name="QyM=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="csharp" linenos="False" xml:space="preserve">var color = new Color(1.0f, 0.5f, 0.2f);
GD.Print(color.ToArgb64()); // 输出 -2147470541</literal_block>
                </div>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-color-method-to-html"></target>
            <paragraph classes="classref-method" ids="class-color-method-to-html" names="class_color_method_to_html"><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>to_html</strong>(with_alpha: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = true) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-color-method-to-html"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回将该颜色转换为 RGBA 格式的 HTML 十六进制颜色 <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>，不带（<literal>#</literal>）前缀。</paragraph>
            <paragraph>将 <literal>with_alpha</literal> 设置为 <literal>false</literal>，会从十六进制字符串中排除 alpha，使用 RGB 格式而不是 RGBA 格式。</paragraph>
            <container classes="sphinx-tabs" type="tab-element">
                <div aria-label="Tabbed content" role="tablist">
                    <button aria-controls="panel-17-R0RTY3JpcHQ=" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-17-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tab" tabindex="0">GDScript</button>
                    <button aria-controls="panel-17-QyM=" aria-selected="false" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-17-QyM=" name="QyM=" role="tab" tabindex="-1">C#</button>
                </div>
                <div aria-labelledby="tab-17-R0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-17-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve">var white = Color(1, 1, 1, 0.5)
var with_alpha = white.to_html() # 返回 "ffffff7f"
var without_alpha = white.to_html(false) # 返回 "ffffff"</literal_block>
                </div>
                <div aria-labelledby="tab-17-QyM=" classes="sphinx-tabs-panel code-tab group-tab" hidden="true" ids="panel-17-QyM=" name="QyM=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="csharp" linenos="False" xml:space="preserve">var white = new Color(1, 1, 1, 0.5f);
string withAlpha = white.ToHtml(); // 返回 "ffffff7f"
string withoutAlpha = white.ToHtml(false); // 返回 "ffffff"</literal_block>
                </div>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-color-method-to-rgba32"></target>
            <paragraph classes="classref-method" ids="class-color-method-to-rgba32" names="class_color_method_to_rgba32"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>to_rgba32</strong>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-color-method-to-rgba32"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Returns the color converted to a 32-bit integer in RGBA format (each component is 8 bits). RGBA is Godot's default format. This method is the inverse of <reference internal="True" refid="class-color-method-hex"><inline classes="std std-ref">hex</inline></reference>.</paragraph>
            <container classes="sphinx-tabs" type="tab-element">
                <div aria-label="Tabbed content" role="tablist">
                    <button aria-controls="panel-18-R0RTY3JpcHQ=" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-18-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tab" tabindex="0">GDScript</button>
                    <button aria-controls="panel-18-QyM=" aria-selected="false" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-18-QyM=" name="QyM=" role="tab" tabindex="-1">C#</button>
                </div>
                <div aria-labelledby="tab-18-R0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-18-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve">var color = Color(1, 0.5, 0.2)
print(color.to_rgba32()) # Prints 4286526463</literal_block>
                </div>
                <div aria-labelledby="tab-18-QyM=" classes="sphinx-tabs-panel code-tab group-tab" hidden="true" ids="panel-18-QyM=" name="QyM=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="csharp" linenos="False" xml:space="preserve">var color = new Color(1, 0.5f, 0.2f);
GD.Print(color.ToRgba32()); // Prints 4286526463</literal_block>
                </div>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-color-method-to-rgba64"></target>
            <paragraph classes="classref-method" ids="class-color-method-to-rgba64" names="class_color_method_to_rgba64"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>to_rgba64</strong>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-color-method-to-rgba64"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Returns the color converted to a 64-bit integer in RGBA format (each component is 16 bits). RGBA is Godot's default format. This method is the inverse of <reference internal="True" refid="class-color-method-hex64"><inline classes="std std-ref">hex64</inline></reference>.</paragraph>
            <container classes="sphinx-tabs" type="tab-element">
                <div aria-label="Tabbed content" role="tablist">
                    <button aria-controls="panel-19-R0RTY3JpcHQ=" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-19-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tab" tabindex="0">GDScript</button>
                    <button aria-controls="panel-19-QyM=" aria-selected="false" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-19-QyM=" name="QyM=" role="tab" tabindex="-1">C#</button>
                </div>
                <div aria-labelledby="tab-19-R0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-19-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve">var color = Color(1, 0.5, 0.2)
print(color.to_rgba64()) # Prints -140736629309441</literal_block>
                </div>
                <div aria-labelledby="tab-19-QyM=" classes="sphinx-tabs-panel code-tab group-tab" hidden="true" ids="panel-19-QyM=" name="QyM=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="csharp" linenos="False" xml:space="preserve">var color = new Color(1, 0.5f, 0.2f);
GD.Print(color.ToRgba64()); // Prints -140736629309441</literal_block>
                </div>
            </container>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id11" names="运算符说明">
            <title>运算符说明</title>
            <target refid="class-color-operator-neq-color"></target>
            <paragraph classes="classref-operator" ids="class-color-operator-neq-color" names="class_color_operator_neq_color"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>operator !=</strong>(right: <reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference>) <reference internal="True" refid="class-color-operator-neq-color"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果颜色不完全相等，则返回 <literal>true</literal>。</paragraph>
            <paragraph><strong>注意：</strong>由于浮点数精度误差，请考虑改用 <reference internal="True" refid="class-color-method-is-equal-approx"><inline classes="std std-ref">is_equal_approx</inline></reference>，会更可靠。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-color-operator-mul-color"></target>
            <paragraph classes="classref-operator" ids="class-color-operator-mul-color" names="class_color_operator_mul_color"><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference> <strong>operator *</strong>(right: <reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference>) <reference internal="True" refid="class-color-operator-mul-color"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将该 <strong>Color</strong> 的每个分量乘以给定 <strong>Color</strong> 的对应分量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-color-operator-mul-float"></target>
            <paragraph classes="classref-operator" ids="class-color-operator-mul-float" names="class_color_operator_mul_float"><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference> <strong>operator *</strong>(right: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <reference internal="True" refid="class-color-operator-mul-float"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将该 <strong>Color</strong> 的每个分量乘以给定的 <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-color-operator-mul-int"></target>
            <paragraph classes="classref-operator" ids="class-color-operator-mul-int" names="class_color_operator_mul_int"><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference> <strong>operator *</strong>(right: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-color-operator-mul-int"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将该 <strong>Color</strong> 的每个分量乘以给定的 <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-color-operator-sum-color"></target>
            <paragraph classes="classref-operator" ids="class-color-operator-sum-color" names="class_color_operator_sum_color"><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference> <strong>operator +</strong>(right: <reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference>) <reference internal="True" refid="class-color-operator-sum-color"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将该 <strong>Color</strong> 的每个分量加上给定 <strong>Color</strong> 的对应分量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-color-operator-dif-color"></target>
            <paragraph classes="classref-operator" ids="class-color-operator-dif-color" names="class_color_operator_dif_color"><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference> <strong>operator -</strong>(right: <reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference>) <reference internal="True" refid="class-color-operator-dif-color"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将该 <strong>Color</strong> 的每个分量减去给定 <strong>Color</strong> 的对应分量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-color-operator-div-color"></target>
            <paragraph classes="classref-operator" ids="class-color-operator-div-color" names="class_color_operator_div_color"><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference> <strong>operator /</strong>(right: <reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference>) <reference internal="True" refid="class-color-operator-div-color"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将该 <strong>Color</strong> 的每个分量除以给定 <strong>Color</strong> 的每个分量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-color-operator-div-float"></target>
            <paragraph classes="classref-operator" ids="class-color-operator-div-float" names="class_color_operator_div_float"><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference> <strong>operator /</strong>(right: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <reference internal="True" refid="class-color-operator-div-float"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将该 <strong>Color</strong> 的每个分量除以给定的 <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-color-operator-div-int"></target>
            <paragraph classes="classref-operator" ids="class-color-operator-div-int" names="class_color_operator_div_int"><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference> <strong>operator /</strong>(right: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-color-operator-div-int"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将该 <strong>Color</strong> 的每个分量除以给定的 <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-color-operator-eq-color"></target>
            <paragraph classes="classref-operator" ids="class-color-operator-eq-color" names="class_color_operator_eq_color"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>operator ==</strong>(right: <reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference>) <reference internal="True" refid="class-color-operator-eq-color"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果颜色完全相同，则返回 <literal>true</literal>。</paragraph>
            <paragraph><strong>注意：</strong>由于浮点精度误差，请考虑改用更可靠的 <reference internal="True" refid="class-color-method-is-equal-approx"><inline classes="std std-ref">is_equal_approx</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-color-operator-idx-int"></target>
            <paragraph classes="classref-operator" ids="class-color-operator-idx-int" names="class_color_operator_idx_int"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>operator []</strong>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-color-operator-idx-int"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>使用索引访问颜色分量。<literal>[0]</literal> 相当于 <reference internal="True" refid="class-color-property-r"><inline classes="std std-ref">r</inline></reference>，<literal>[1]</literal> 相当于 <reference internal="True" refid="class-color-property-g"><inline classes="std std-ref">g</inline></reference>，<literal>[2]</literal> 相当于 <reference internal="True" refid="class-color-property-b"><inline classes="std std-ref">b</inline></reference>，<literal>[3]</literal> 相当于 <reference internal="True" refid="class-color-property-a"><inline classes="std std-ref">a</inline></reference>.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-color-operator-unplus"></target>
            <paragraph classes="classref-operator" ids="class-color-operator-unplus" names="class_color_operator_unplus"><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference> <strong>operator unary+</strong>() <reference internal="True" refid="class-color-operator-unplus"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回与 <literal>+</literal> 不存在时相同的值。单目 <literal>+</literal> 没有作用，但有时可以使你的代码更具可读性。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-color-operator-unminus"></target>
            <paragraph classes="classref-operator" ids="class-color-operator-unminus" names="class_color_operator_unminus"><reference internal="True" refid="class-color"><inline classes="std std-ref">Color</inline></reference> <strong>operator unary-</strong>() <reference internal="True" refid="class-color-operator-unminus"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>反转给定的颜色。这相当于 <literal>Color.WHITE - c</literal> 或 <literal>Color(1 - c.r, 1 - c.g, 1 - c.b, 1 - c.a)</literal>。与 <reference internal="True" refid="class-color-method-inverted"><inline classes="std std-ref">inverted</inline></reference> 不同，<reference internal="True" refid="class-color-property-a"><inline classes="std std-ref">a</inline></reference> 分量也将被反转。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效运算符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列位标志构成位掩码的整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

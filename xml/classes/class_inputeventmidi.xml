<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_inputeventmidi.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/InputEventMIDI.xml.</comment>
    <target refid="class-inputeventmidi"></target>
    <section ids="inputeventmidi class-inputeventmidi" names="inputeventmidi class_inputeventmidi">
        <title>InputEventMIDI</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_inputevent#class-inputevent"><inline classes="std std-ref">InputEvent</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>代表来自 MIDI 设备的输入事件，例如钢琴。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>InputEventMIDI 允许从钢琴等 MIDI（Musical Instrument Digital Interface）设备接收输入事件。</paragraph>
            <paragraph>MIDI 信号可以通过 5 针 MIDI 连接器或 USB 发送，如果你的设备支持这两种方式，请务必检查设备中的设置以查看它使用的是哪种输出。</paragraph>
            <paragraph>要从 MIDI 设备接收输入事件，需要调用 <reference internal="True" refuri="class_os#class-os-method-open-midi-inputs"><inline classes="std std-ref">OS.open_midi_inputs</inline></reference>。可以使用 <reference internal="True" refuri="class_os#class-os-method-get-connected-midi-inputs"><inline classes="std std-ref">OS.get_connected_midi_inputs</inline></reference> 检查检测到哪些设备。</paragraph>
            <container classes="sphinx-tabs" type="tab-element">
                <div aria-label="Tabbed content" role="tablist">
                    <button aria-controls="panel-0-R0RTY3JpcHQ=" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-0-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tab" tabindex="0">GDScript</button>
                    <button aria-controls="panel-0-QyM=" aria-selected="false" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-0-QyM=" name="QyM=" role="tab" tabindex="-1">C#</button>
                </div>
                <div aria-labelledby="tab-0-R0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-0-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve">func _ready():
    OS.open_midi_inputs()
    print(OS.get_connected_midi_inputs())

func _input(input_event):
    if input_event is InputEventMIDI:
        _print_midi_info(input_event)

func _print_midi_info(midi_event: InputEventMIDI):
    print(midi_event)
    print("Channel " + str(midi_event.channel))
    print("Message " + str(midi_event.message))
    print("Pitch " + str(midi_event.pitch))
    print("Velocity " + str(midi_event.velocity))
    print("Instrument " + str(midi_event.instrument))
    print("Pressure " + str(midi_event.pressure))
    print("Controller number: " + str(midi_event.controller_number))
    print("Controller value: " + str(midi_event.controller_value))</literal_block>
                </div>
                <div aria-labelledby="tab-0-QyM=" classes="sphinx-tabs-panel code-tab group-tab" hidden="true" ids="panel-0-QyM=" name="QyM=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="csharp" linenos="False" xml:space="preserve">public override void _Ready()
{
    OS.OpenMidiInputs();
    GD.Print(OS.GetConnectedMidiInputs());
}

public override void _Input(InputEvent @event)
{
    if (@event is InputEventMIDI midiEvent)
    {
        PrintMIDIInfo(midiEvent);
    }
}

private void PrintMIDIInfo(InputEventMIDI midiEvent)
{
    GD.Print(midiEvent);
    GD.Print($"Channel {midiEvent.Channel}");
    GD.Print($"Message {midiEvent.Message}");
    GD.Print($"Pitch {midiEvent.Pitch}");
    GD.Print($"Velocity {midiEvent.Velocity}");
    GD.Print($"Instrument {midiEvent.Instrument}");
    GD.Print($"Pressure {midiEvent.Pressure}");
    GD.Print($"Controller number: {midiEvent.ControllerNumber}");
    GD.Print($"Controller value: {midiEvent.ControllerValue}");
}</literal_block>
                </div>
            </container>
            <paragraph>请注意，Godot 目前不支持 MIDI 输出，因此无法从 Godot 发出 MIDI 信号。只有 MIDI 输入有效。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference name="MIDI 消息状态字节列表" refuri="https://www.midi.org/specifications-old/item/table-2-expanded-messages-list-status-bytes">MIDI 消息状态字节列表</reference></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference name="维基百科通用 MIDI 乐器列表" refuri="https://en.wikipedia.org/wiki/General_MIDI#Program_change_events">维基百科通用 MIDI 乐器列表</reference></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference name="维基百科钢琴琴键频率列表" refuri="https://en.wikipedia.org/wiki/Piano_key_frequencies#List">维基百科钢琴琴键频率列表</reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="51"></colspec>
                    <colspec colwidth="75"></colspec>
                    <colspec colwidth="7"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-inputeventmidi-property-channel"><inline classes="std std-ref">channel</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-inputeventmidi-property-controller-number"><inline classes="std std-ref">controller_number</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-inputeventmidi-property-controller-value"><inline classes="std std-ref">controller_value</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-inputeventmidi-property-instrument"><inline classes="std std-ref">instrument</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_@globalscope#enum-globalscope-midimessage"><inline classes="std std-ref">MIDIMessage</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-inputeventmidi-property-message"><inline classes="std std-ref">message</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-inputeventmidi-property-pitch"><inline classes="std std-ref">pitch</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-inputeventmidi-property-pressure"><inline classes="std std-ref">pressure</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-inputeventmidi-property-velocity"><inline classes="std std-ref">velocity</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="属性说明">
            <title>属性说明</title>
            <target refid="class-inputeventmidi-property-channel"></target>
            <paragraph classes="classref-property" ids="class-inputeventmidi-property-channel" names="class_inputeventmidi_property_channel"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>channel</strong> = <literal>0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_channel</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_channel</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>这个输入事件的 MIDI 通道。总共有 16 个通道，所以这个值的范围是 0 到 15。MIDI 通道 9 是为打击乐器保留的，其余通道供非打击乐器使用。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-inputeventmidi-property-controller-number"></target>
            <paragraph classes="classref-property" ids="class-inputeventmidi-property-controller-number" names="class_inputeventmidi_property_controller_number"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>controller_number</strong> = <literal>0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_controller_number</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_controller_number</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果消息是 <reference internal="True" refuri="class_@globalscope#class-globalscope-constant-midi-message-control-change"><inline classes="std std-ref">@GlobalScope.MIDI_MESSAGE_CONTROL_CHANGE</inline></reference>，则表示控制器号，否则为零。控制器包含踏板、推杆等设备。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-inputeventmidi-property-controller-value"></target>
            <paragraph classes="classref-property" ids="class-inputeventmidi-property-controller-value" names="class_inputeventmidi_property_controller_value"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>controller_value</strong> = <literal>0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_controller_value</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_controller_value</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果消息是 <reference internal="True" refuri="class_@globalscope#class-globalscope-constant-midi-message-control-change"><inline classes="std std-ref">@GlobalScope.MIDI_MESSAGE_CONTROL_CHANGE</inline></reference>，则表示控制器值，否则为零。控制器包含踏板、推杆等设备。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-inputeventmidi-property-instrument"></target>
            <paragraph classes="classref-property" ids="class-inputeventmidi-property-instrument" names="class_inputeventmidi_property_instrument"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>instrument</strong> = <literal>0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_instrument</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_instrument</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>这个输入事件的乐器。这个值的范围是 0 到 127。乐器列表请参考维基百科的 <reference name="General MIDI" refuri="https://zh.wikipedia.org/zh-cn/General_MIDI#%E9%9F%B3%E8%89%B2%E8%BD%89%E6%8F%9B%E4%BA%8B%E4%BB%B6%EF%BC%88Program_change_events%EF%BC%89">General MIDI</reference> 文中的乐器列表，不过这个值是从 0 开始的，所以请把那张表中的数字都减一。标准钢琴的乐器号为 0。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-inputeventmidi-property-message"></target>
            <paragraph classes="classref-property" ids="class-inputeventmidi-property-message" names="class_inputeventmidi_property_message"><reference internal="True" refuri="class_@globalscope#enum-globalscope-midimessage"><inline classes="std std-ref">MIDIMessage</inline></reference> <strong>message</strong> = <literal>0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_message</strong> <strong>(</strong> <reference internal="True" refuri="class_@globalscope#enum-globalscope-midimessage"><inline classes="std std-ref">MIDIMessage</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_@globalscope#enum-globalscope-midimessage"><inline classes="std std-ref">MIDIMessage</inline></reference> <strong>get_message</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>返回表示这个 MIDI 信号类型的值，是 <reference internal="True" refuri="class_@globalscope#enum-globalscope-midimessage"><inline classes="std std-ref">MIDIMessage</inline></reference> 枚举的成员。</paragraph>
            <paragraph>对于在 0x80 和 0xEF 之间的 MIDI 消息，这个值返回的是左半部分的比特位，另一半是通道（例：0x94 会变成 0x9）。对于在 0xF0 到 0xFF 之间的 MIDI 消息，这个值是原样返回的。</paragraph>
            <paragraph>激活音符时会返回 <reference internal="True" refuri="class_@globalscope#class-globalscope-constant-midi-message-note-on"><inline classes="std std-ref">@GlobalScope.MIDI_MESSAGE_NOTE_ON</inline></reference>，但失活时并不一定会返回 <reference internal="True" refuri="class_@globalscope#class-globalscope-constant-midi-message-note-off"><inline classes="std std-ref">@GlobalScope.MIDI_MESSAGE_NOTE_OFF</inline></reference>，因此你的代码应该在经过一段时间后将输入处理为停止。</paragraph>
            <paragraph>有些 MIDI 设备可能发送速度为零的 <reference internal="True" refuri="class_@globalscope#class-globalscope-constant-midi-message-note-on"><inline classes="std std-ref">@GlobalScope.MIDI_MESSAGE_NOTE_ON</inline></reference> 来代替 <reference internal="True" refuri="class_@globalscope#class-globalscope-constant-midi-message-note-off"><inline classes="std std-ref">@GlobalScope.MIDI_MESSAGE_NOTE_OFF</inline></reference>。</paragraph>
            <paragraph>更多消息请参阅 <reference internal="True" refid="class-inputeventmidi-property-velocity"><inline classes="std std-ref">velocity</inline></reference> 中的备注，以及上面链接的 MIDI 消息状态字节列表。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-inputeventmidi-property-pitch"></target>
            <paragraph classes="classref-property" ids="class-inputeventmidi-property-pitch" names="class_inputeventmidi_property_pitch"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>pitch</strong> = <literal>0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_pitch</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_pitch</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>这个 MIDI 信号的音高索引号。这个值的范围为 0 到 127。在钢琴上，中央 C 是 60，而 A440 是 69，更多信息请参阅维基百科钢琴琴键频率表的“MIDI 音符”列。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-inputeventmidi-property-pressure"></target>
            <paragraph classes="classref-property" ids="class-inputeventmidi-property-pressure" names="class_inputeventmidi_property_pressure"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>pressure</strong> = <literal>0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_pressure</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_pressure</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>MIDI 信号的压力。这个值在 0 到 127 之间。对于很多设备，这个值总是 0。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-inputeventmidi-property-velocity"></target>
            <paragraph classes="classref-property" ids="class-inputeventmidi-property-velocity" names="class_inputeventmidi_property_velocity"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>velocity</strong> = <literal>0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_velocity</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_velocity</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>MIDI 信号的速度。这个值在 0 到 127 之间。对于钢琴，这对应的是按键有多快，实际很少超过 110。</paragraph>
            <paragraph><strong>注意：</strong>部分 MIDI 设备可能会发送速度为零的 <reference internal="True" refuri="class_@globalscope#class-globalscope-constant-midi-message-note-on"><inline classes="std std-ref">@GlobalScope.MIDI_MESSAGE_NOTE_ON</inline></reference> 并期望进行和 <reference internal="True" refuri="class_@globalscope#class-globalscope-constant-midi-message-note-off"><inline classes="std std-ref">@GlobalScope.MIDI_MESSAGE_NOTE_OFF</inline></reference> 一样的处理，但因设备实现而异，所以 Godot 会原样汇报事件数据。根据硬件和游戏/应用的需求的不同，可以用几行脚本来可靠地处理这种 MIDI 特质（检查 <reference internal="True" refuri="class_@globalscope#class-globalscope-constant-midi-message-note-on"><inline classes="std std-ref">@GlobalScope.MIDI_MESSAGE_NOTE_ON</inline></reference> 的速度是否为零）。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，所以可以直接使用类名调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

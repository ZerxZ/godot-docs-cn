<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_inputmap.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/InputMap.xml.</comment>
    <target refid="class-inputmap"></target>
    <section ids="inputmap class-inputmap" names="inputmap class_inputmap">
        <title>InputMap</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>管理所有 <reference internal="True" refuri="class_inputeventaction#class-inputeventaction"><inline classes="std std-ref">InputEventAction</inline></reference> 的单例。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>管理所有的 <reference internal="True" refuri="class_inputeventaction#class-inputeventaction"><inline classes="std std-ref">InputEventAction</inline></reference>，可以通过项目设置菜单<strong>项目 &gt; 项目设置 &gt; 输入映射</strong>或在代码中用 <reference internal="True" refid="class-inputmap-method-add-action"><inline classes="std std-ref">add_action</inline></reference> 和 <reference internal="True" refid="class-inputmap-method-action-add-event"><inline classes="std std-ref">action_add_event</inline></reference> 创建/修改。请参阅 <reference internal="True" refuri="class_node#class-node-private-method-input"><inline classes="std std-ref">Node._input</inline></reference>。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference name="使用 InputEvent：InputMap" refuri="../tutorials/inputs/inputevent.html#inputmap">使用 InputEvent：InputMap</reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="66"></colspec>
                    <colspec colwidth="215"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-inputmap-method-action-add-event"><inline classes="std std-ref">action_add_event</inline></reference>(action: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>, event: <reference internal="True" refuri="class_inputevent#class-inputevent"><inline classes="std std-ref">InputEvent</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-inputmap-method-action-erase-event"><inline classes="std std-ref">action_erase_event</inline></reference>(action: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>, event: <reference internal="True" refuri="class_inputevent#class-inputevent"><inline classes="std std-ref">InputEvent</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-inputmap-method-action-erase-events"><inline classes="std std-ref">action_erase_events</inline></reference>(action: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-inputmap-method-action-get-deadzone"><inline classes="std std-ref">action_get_deadzone</inline></reference>(action: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_inputevent#class-inputevent"><inline classes="std std-ref">InputEvent</inline></reference>]</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-inputmap-method-action-get-events"><inline classes="std std-ref">action_get_events</inline></reference>(action: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-inputmap-method-action-has-event"><inline classes="std std-ref">action_has_event</inline></reference>(action: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>, event: <reference internal="True" refuri="class_inputevent#class-inputevent"><inline classes="std std-ref">InputEvent</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-inputmap-method-action-set-deadzone"><inline classes="std std-ref">action_set_deadzone</inline></reference>(action: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>, deadzone: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-inputmap-method-add-action"><inline classes="std std-ref">add_action</inline></reference>(action: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>, deadzone: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> = 0.5)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-inputmap-method-erase-action"><inline classes="std std-ref">erase_action</inline></reference>(action: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-inputmap-method-event-is-action"><inline classes="std std-ref">event_is_action</inline></reference>(event: <reference internal="True" refuri="class_inputevent#class-inputevent"><inline classes="std std-ref">InputEvent</inline></reference>, action: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>, exact_match: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = false) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>]</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-inputmap-method-get-actions"><inline classes="std std-ref">get_actions</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-inputmap-method-has-action"><inline classes="std std-ref">has_action</inline></reference>(action: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-inputmap-method-load-from-project-settings"><inline classes="std std-ref">load_from_project_settings</inline></reference>()</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="方法说明">
            <title>方法说明</title>
            <target refid="class-inputmap-method-action-add-event"></target>
            <paragraph classes="classref-method" ids="class-inputmap-method-action-add-event" names="class_inputmap_method_action_add_event"><abbreviation explanation="无返回值。">void</abbreviation> <strong>action_add_event</strong>(action: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>, event: <reference internal="True" refuri="class_inputevent#class-inputevent"><inline classes="std std-ref">InputEvent</inline></reference>) <reference internal="True" refid="class-inputmap-method-action-add-event"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>给某个动作添加一个 <reference internal="True" refuri="class_inputevent#class-inputevent"><inline classes="std std-ref">InputEvent</inline></reference>。这个 <reference internal="True" refuri="class_inputevent#class-inputevent"><inline classes="std std-ref">InputEvent</inline></reference> 将触发这个动作。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-inputmap-method-action-erase-event"></target>
            <paragraph classes="classref-method" ids="class-inputmap-method-action-erase-event" names="class_inputmap_method_action_erase_event"><abbreviation explanation="无返回值。">void</abbreviation> <strong>action_erase_event</strong>(action: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>, event: <reference internal="True" refuri="class_inputevent#class-inputevent"><inline classes="std std-ref">InputEvent</inline></reference>) <reference internal="True" refid="class-inputmap-method-action-erase-event"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>从某个动作中删除一个 <reference internal="True" refuri="class_inputevent#class-inputevent"><inline classes="std std-ref">InputEvent</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-inputmap-method-action-erase-events"></target>
            <paragraph classes="classref-method" ids="class-inputmap-method-action-erase-events" names="class_inputmap_method_action_erase_events"><abbreviation explanation="无返回值。">void</abbreviation> <strong>action_erase_events</strong>(action: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>) <reference internal="True" refid="class-inputmap-method-action-erase-events"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>从某个动作中删除所有事件。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-inputmap-method-action-get-deadzone"></target>
            <paragraph classes="classref-method" ids="class-inputmap-method-action-get-deadzone" names="class_inputmap_method_action_get_deadzone"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>action_get_deadzone</strong>(action: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>) <reference internal="True" refid="class-inputmap-method-action-get-deadzone"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回该操作的死区值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-inputmap-method-action-get-events"></target>
            <paragraph classes="classref-method" ids="class-inputmap-method-action-get-events" names="class_inputmap_method_action_get_events"><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_inputevent#class-inputevent"><inline classes="std std-ref">InputEvent</inline></reference>] <strong>action_get_events</strong>(action: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>) <reference internal="True" refid="class-inputmap-method-action-get-events"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回与给定动作关联的 <reference internal="True" refuri="class_inputevent#class-inputevent"><inline classes="std std-ref">InputEvent</inline></reference> 的数组。</paragraph>
            <paragraph><strong>注意：</strong>在编辑器中使用时（例如在工具脚本或 <reference internal="True" refuri="class_editorplugin#class-editorplugin"><inline classes="std std-ref">EditorPlugin</inline></reference> 中使用），这个方法返回的是编辑器动作对应的事件。如果你想要在编辑器中访问你的项目的输入绑定，请读取 <reference internal="True" refuri="class_projectsettings#class-projectsettings"><inline classes="std std-ref">ProjectSettings</inline></reference> 的 <literal>input/*</literal> 设置。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-inputmap-method-action-has-event"></target>
            <paragraph classes="classref-method" ids="class-inputmap-method-action-has-event" names="class_inputmap_method_action_has_event"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>action_has_event</strong>(action: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>, event: <reference internal="True" refuri="class_inputevent#class-inputevent"><inline classes="std std-ref">InputEvent</inline></reference>) <reference internal="True" refid="class-inputmap-method-action-has-event"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果该动作有给定的 <reference internal="True" refuri="class_inputevent#class-inputevent"><inline classes="std std-ref">InputEvent</inline></reference> 与之相关，则返回 <literal>true</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-inputmap-method-action-set-deadzone"></target>
            <paragraph classes="classref-method" ids="class-inputmap-method-action-set-deadzone" names="class_inputmap_method_action_set_deadzone"><abbreviation explanation="无返回值。">void</abbreviation> <strong>action_set_deadzone</strong>(action: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>, deadzone: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <reference internal="True" refid="class-inputmap-method-action-set-deadzone"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>为该动作设置死区值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-inputmap-method-add-action"></target>
            <paragraph classes="classref-method" ids="class-inputmap-method-add-action" names="class_inputmap_method_add_action"><abbreviation explanation="无返回值。">void</abbreviation> <strong>add_action</strong>(action: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>, deadzone: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> = 0.5) <reference internal="True" refid="class-inputmap-method-add-action"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>在 <strong>InputMap</strong> 上添加空的动作，死区可使用 <literal>deadzone</literal> 配置。</paragraph>
            <paragraph>然后可以用 <reference internal="True" refid="class-inputmap-method-action-add-event"><inline classes="std std-ref">action_add_event</inline></reference> 给这个动作添加 <reference internal="True" refuri="class_inputevent#class-inputevent"><inline classes="std std-ref">InputEvent</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-inputmap-method-erase-action"></target>
            <paragraph classes="classref-method" ids="class-inputmap-method-erase-action" names="class_inputmap_method_erase_action"><abbreviation explanation="无返回值。">void</abbreviation> <strong>erase_action</strong>(action: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>) <reference internal="True" refid="class-inputmap-method-erase-action"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>从 <strong>InputMap</strong> 中删除一个动作。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-inputmap-method-event-is-action"></target>
            <paragraph classes="classref-method" ids="class-inputmap-method-event-is-action" names="class_inputmap_method_event_is_action"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>event_is_action</strong>(event: <reference internal="True" refuri="class_inputevent#class-inputevent"><inline classes="std std-ref">InputEvent</inline></reference>, action: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>, exact_match: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = false) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-inputmap-method-event-is-action"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果给定的事件是现有动作的一部分，返回 <literal>true</literal>。如果给定的 <reference internal="True" refuri="class_inputevent#class-inputevent"><inline classes="std std-ref">InputEvent</inline></reference> 没有被按下，这个方法会忽略键盘（为了正确地检测释放）。如果你不想要这种行为，请参阅 <reference internal="True" refid="class-inputmap-method-action-has-event"><inline classes="std std-ref">action_has_event</inline></reference>。</paragraph>
            <paragraph>如果 <literal>exact_match</literal> 是 <literal>false</literal>，它会忽略 <reference internal="True" refuri="class_inputeventkey#class-inputeventkey"><inline classes="std std-ref">InputEventKey</inline></reference> 和 <reference internal="True" refuri="class_inputeventmousebutton#class-inputeventmousebutton"><inline classes="std std-ref">InputEventMouseButton</inline></reference> 事件的额外输入修饰键，以及 <reference internal="True" refuri="class_inputeventjoypadmotion#class-inputeventjoypadmotion"><inline classes="std std-ref">InputEventJoypadMotion</inline></reference> 事件的方向。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-inputmap-method-get-actions"></target>
            <paragraph classes="classref-method" ids="class-inputmap-method-get-actions" names="class_inputmap_method_get_actions"><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>] <strong>get_actions</strong>() <reference internal="True" refid="class-inputmap-method-get-actions"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回 <strong>InputMap</strong> 中所有动作的数组。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-inputmap-method-has-action"></target>
            <paragraph classes="classref-method" ids="class-inputmap-method-has-action" names="class_inputmap_method_has_action"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>has_action</strong>(action: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-inputmap-method-has-action"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果 <strong>InputMap</strong> 有一个给定名称的注册动作，返回 <literal>true</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-inputmap-method-load-from-project-settings"></target>
            <paragraph classes="classref-method" ids="class-inputmap-method-load-from-project-settings" names="class_inputmap_method_load_from_project_settings"><abbreviation explanation="无返回值。">void</abbreviation> <strong>load_from_project_settings</strong>() <reference internal="True" refid="class-inputmap-method-load-from-project-settings"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>清除 <strong>InputMap</strong> 中的所有 <reference internal="True" refuri="class_inputeventaction#class-inputeventaction"><inline classes="std std-ref">InputEventAction</inline></reference>，并从 <reference internal="True" refuri="class_projectsettings#class-projectsettings"><inline classes="std std-ref">ProjectSettings</inline></reference> 项目设置中重新加载它。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效运算符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列位标志构成位掩码的整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_skeletonmodification2dfabrik.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/SkeletonModification2DFABRIK.xml.</comment>
    <target refid="class-skeletonmodification2dfabrik"></target>
    <section ids="skeletonmodification2dfabrik class-skeletonmodification2dfabrik" names="skeletonmodification2dfabrik class_skeletonmodification2dfabrik">
        <title>SkeletonModification2DFABRIK</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_skeletonmodification2d#class-skeletonmodification2d"><inline classes="std std-ref">SkeletonModification2D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>使用 FABRIK 操纵一系列 <reference internal="True" refuri="class_bone2d#class-bone2d"><inline classes="std std-ref">Bone2D</inline></reference> 到达某个目标的修改器。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>这种 <reference internal="True" refuri="class_skeletonmodification2d#class-skeletonmodification2d"><inline classes="std std-ref">SkeletonModification2D</inline></reference> 使用的是名为前后延伸反向运动学（Forward And Backward Reaching Inverse Kinematics）的算法，即 FABRIK，能够对一条骨骼链进行旋转，从而抵达目标。</paragraph>
            <paragraph>FABRIK 需要先拿到一系列骨骼的位置和长度，这组骨骼通常称作“骨骼链”。它首先会做一次向前处理，将最终的骨骼放置在目标的位置。然后让所有其他骨骼朝尖端骨骼移动，恢复原有的骨骼长度。然后再做一次向后处理，将 FABRIK 链中的根/第一根骨骼放回原点。然后移动所有其他骨骼，恢复原有的骨骼长度。这样就尽可能地让骨骼链抵达了目标，并且所有骨骼之间的长度仍然为正确的长度。</paragraph>
            <paragraph>由于 FABRIK 的工作原理，它通常比 <reference internal="True" refuri="class_skeletonmodification2dccdik#class-skeletonmodification2dccdik"><inline classes="std std-ref">SkeletonModification2DCCDIK</inline></reference> 得到的结果更加自然。FABRIK 还支持角度约束，在求解过程中会完全遵守这些约束。</paragraph>
            <paragraph><strong>注意：</strong>FABRIK 修改器具有关节属性 <literal>fabrik_joints</literal>，里面是存放 FABRIK 链中各个关节数据的数据对象。关节和 <reference internal="True" refuri="class_bone2d#class-bone2d"><inline classes="std std-ref">Bone2D</inline></reference> 是两码事！FABRIK 关节存放的是 FABRIK 所使用的骨骼链中每根 <reference internal="True" refuri="class_bone2d#class-bone2d"><inline classes="std std-ref">Bone2D</inline></reference> 所需的数据。</paragraph>
            <paragraph>可以传入磁铁向量来帮助控制 FABRIK 关节的移动，会在求解前让骨骼朝某个方向做略微的移动，对最终结果进行微调。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="33"></colspec>
                    <colspec colwidth="103"></colspec>
                    <colspec colwidth="18"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2dfabrik-property-fabrik-data-chain-length"><inline classes="std std-ref">fabrik_data_chain_length</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2dfabrik-property-target-nodepath"><inline classes="std std-ref">target_nodepath</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>NodePath("")</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="33"></colspec>
                    <colspec colwidth="214"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2dfabrik-method-get-fabrik-joint-bone2d-node"><inline classes="std std-ref">get_fabrik_joint_bone2d_node</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> joint_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2dfabrik-method-get-fabrik-joint-bone-index"><inline classes="std std-ref">get_fabrik_joint_bone_index</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> joint_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2dfabrik-method-get-fabrik-joint-magnet-position"><inline classes="std std-ref">get_fabrik_joint_magnet_position</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> joint_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2dfabrik-method-get-fabrik-joint-use-target-rotation"><inline classes="std std-ref">get_fabrik_joint_use_target_rotation</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> joint_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2dfabrik-method-set-fabrik-joint-bone2d-node"><inline classes="std std-ref">set_fabrik_joint_bone2d_node</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> joint_idx, <reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> bone2d_nodepath <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2dfabrik-method-set-fabrik-joint-bone-index"><inline classes="std std-ref">set_fabrik_joint_bone_index</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> joint_idx, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> bone_idx <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2dfabrik-method-set-fabrik-joint-magnet-position"><inline classes="std std-ref">set_fabrik_joint_magnet_position</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> joint_idx, <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> magnet_position <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeletonmodification2dfabrik-method-set-fabrik-joint-use-target-rotation"><inline classes="std std-ref">set_fabrik_joint_use_target_rotation</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> joint_idx, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> use_target_rotation <strong>)</strong></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="属性说明">
            <title>属性说明</title>
            <target refid="class-skeletonmodification2dfabrik-property-fabrik-data-chain-length"></target>
            <paragraph classes="classref-property" ids="class-skeletonmodification2dfabrik-property-fabrik-data-chain-length" names="class_skeletonmodification2dfabrik_property_fabrik_data_chain_length"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>fabrik_data_chain_length</strong> = <literal>0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_fabrik_data_chain_length</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_fabrik_data_chain_length</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>FABRIK 修改中 FABRIK 关节的数量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2dfabrik-property-target-nodepath"></target>
            <paragraph classes="classref-property" ids="class-skeletonmodification2dfabrik-property-target-nodepath" names="class_skeletonmodification2dfabrik_property_target_nodepath"><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> <strong>target_nodepath</strong> = <literal>NodePath("")</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_target_node</strong> <strong>(</strong> <reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> <strong>get_target_node</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>FABRIK 修改器的目标节点的 NodePath。FABRIK 链会尝试将骨骼链转向这个节点。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="方法说明">
            <title>方法说明</title>
            <target refid="class-skeletonmodification2dfabrik-method-get-fabrik-joint-bone2d-node"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodification2dfabrik-method-get-fabrik-joint-bone2d-node" names="class_skeletonmodification2dfabrik_method_get_fabrik_joint_bone2d_node"><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> <strong>get_fabrik_joint_bone2d_node</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> joint_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回分配给位于 <literal>joint_idx</literal> 的 FABRIK 关节的 <reference internal="True" refuri="class_bone2d#class-bone2d"><inline classes="std std-ref">Bone2D</inline></reference> 节点。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2dfabrik-method-get-fabrik-joint-bone-index"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodification2dfabrik-method-get-fabrik-joint-bone-index" names="class_skeletonmodification2dfabrik_method_get_fabrik_joint_bone_index"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_fabrik_joint_bone_index</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> joint_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回分配给位于 <literal>joint_idx</literal> 的 FABRIK 关节的 <reference internal="True" refuri="class_bone2d#class-bone2d"><inline classes="std std-ref">Bone2D</inline></reference> 节点的索引。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2dfabrik-method-get-fabrik-joint-magnet-position"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodification2dfabrik-method-get-fabrik-joint-magnet-position" names="class_skeletonmodification2dfabrik_method_get_fabrik_joint_magnet_position"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>get_fabrik_joint_magnet_position</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> joint_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回位于 <literal>joint_idx</literal> 的关节的磁吸位置向量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2dfabrik-method-get-fabrik-joint-use-target-rotation"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodification2dfabrik-method-get-fabrik-joint-use-target-rotation" names="class_skeletonmodification2dfabrik_method_get_fabrik_joint_use_target_rotation"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_fabrik_joint_use_target_rotation</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> joint_idx <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回关节是否正在使用目标的旋转，而不是允许 FABRIK 旋转关节。此选项仅适用于链中的末端/最终关节。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2dfabrik-method-set-fabrik-joint-bone2d-node"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodification2dfabrik-method-set-fabrik-joint-bone2d-node" names="class_skeletonmodification2dfabrik_method_set_fabrik_joint_bone2d_node">void <strong>set_fabrik_joint_bone2d_node</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> joint_idx, <reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> bone2d_nodepath <strong>)</strong></paragraph>
            <paragraph>设置分配给位于 <literal>joint_idx</literal> 的 FABRIK 关节的 <reference internal="True" refuri="class_bone2d#class-bone2d"><inline classes="std std-ref">Bone2D</inline></reference> 节点。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2dfabrik-method-set-fabrik-joint-bone-index"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodification2dfabrik-method-set-fabrik-joint-bone-index" names="class_skeletonmodification2dfabrik_method_set_fabrik_joint_bone_index">void <strong>set_fabrik_joint_bone_index</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> joint_idx, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> bone_idx <strong>)</strong></paragraph>
            <paragraph>设置位于 <literal>joint_idx</literal> 的 FABRIK 关节的骨骼索引 <literal>bone_idx</literal>。可能时，这也会根据链接骨架所提供的数据来更新 FABRIK 关节的 <literal>bone2d_node</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2dfabrik-method-set-fabrik-joint-magnet-position"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodification2dfabrik-method-set-fabrik-joint-magnet-position" names="class_skeletonmodification2dfabrik_method_set_fabrik_joint_magnet_position">void <strong>set_fabrik_joint_magnet_position</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> joint_idx, <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> magnet_position <strong>)</strong></paragraph>
            <paragraph>设置位于 <literal>joint_idx</literal> 的关节的磁吸位置向量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeletonmodification2dfabrik-method-set-fabrik-joint-use-target-rotation"></target>
            <paragraph classes="classref-method" ids="class-skeletonmodification2dfabrik-method-set-fabrik-joint-use-target-rotation" names="class_skeletonmodification2dfabrik_method_set_fabrik_joint_use_target_rotation">void <strong>set_fabrik_joint_use_target_rotation</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> joint_idx, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> use_target_rotation <strong>)</strong></paragraph>
            <paragraph>设置位于 <literal>joint_idx</literal> 的关节是否正在使用目标节点的旋转，而不是让 FABRIK 旋转关节。</paragraph>
            <paragraph><strong>注意：</strong>这个选项仅适用于链中的末端/最终关节。对于所有其他节点，这个选项将被忽略。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，所以可以直接使用类名调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

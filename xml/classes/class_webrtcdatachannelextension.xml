<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_webrtcdatachannelextension.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/4.2/modules/webrtc/doc_classes/WebRTCDataChannelExtension.xml.</comment>
    <target refid="class-webrtcdatachannelextension"></target>
    <section ids="webrtcdatachannelextension class-webrtcdatachannelextension" names="webrtcdatachannelextension class_webrtcdatachannelextension">
        <title>WebRTCDataChannelExtension</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_webrtcdatachannel#class-webrtcdatachannel"><inline classes="std std-ref">WebRTCDataChannel</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_packetpeer#class-packetpeer"><inline classes="std std-ref">PacketPeer</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <container classes="contribute">
            <paragraph>目前没有这个类的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
        </container>
        <section classes="classref-reftable-group" ids="id1" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="58"></colspec>
                    <colspec colwidth="175"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-webrtcdatachannelextension-private-method-close"><inline classes="std std-ref">_close</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-webrtcdatachannelextension-private-method-get-available-packet-count"><inline classes="std std-ref">_get_available_packet_count</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-webrtcdatachannelextension-private-method-get-buffered-amount"><inline classes="std std-ref">_get_buffered_amount</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-webrtcdatachannelextension-private-method-get-id"><inline classes="std std-ref">_get_id</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-webrtcdatachannelextension-private-method-get-label"><inline classes="std std-ref">_get_label</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-webrtcdatachannelextension-private-method-get-max-packet-life-time"><inline classes="std std-ref">_get_max_packet_life_time</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-webrtcdatachannelextension-private-method-get-max-packet-size"><inline classes="std std-ref">_get_max_packet_size</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-webrtcdatachannelextension-private-method-get-max-retransmits"><inline classes="std std-ref">_get_max_retransmits</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_@globalscope#enum-globalscope-error"><inline classes="std std-ref">Error</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-webrtcdatachannelextension-private-method-get-packet"><inline classes="std std-ref">_get_packet</inline></reference> <strong>(</strong> const uint8_t ** r_buffer, int32_t* r_buffer_size <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-webrtcdatachannelextension-private-method-get-protocol"><inline classes="std std-ref">_get_protocol</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_webrtcdatachannel#enum-webrtcdatachannel-channelstate"><inline classes="std std-ref">ChannelState</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-webrtcdatachannelextension-private-method-get-ready-state"><inline classes="std std-ref">_get_ready_state</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_webrtcdatachannel#enum-webrtcdatachannel-writemode"><inline classes="std std-ref">WriteMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-webrtcdatachannelextension-private-method-get-write-mode"><inline classes="std std-ref">_get_write_mode</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-webrtcdatachannelextension-private-method-is-negotiated"><inline classes="std std-ref">_is_negotiated</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-webrtcdatachannelextension-private-method-is-ordered"><inline classes="std std-ref">_is_ordered</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_@globalscope#enum-globalscope-error"><inline classes="std std-ref">Error</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-webrtcdatachannelextension-private-method-poll"><inline classes="std std-ref">_poll</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_@globalscope#enum-globalscope-error"><inline classes="std std-ref">Error</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-webrtcdatachannelextension-private-method-put-packet"><inline classes="std std-ref">_put_packet</inline></reference> <strong>(</strong> const uint8_t* p_buffer, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> p_buffer_size <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-webrtcdatachannelextension-private-method-set-write-mode"><inline classes="std std-ref">_set_write_mode</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_webrtcdatachannel#enum-webrtcdatachannel-writemode"><inline classes="std std-ref">WriteMode</inline></reference> p_write_mode <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-webrtcdatachannelextension-private-method-was-string-packet"><inline classes="std std-ref">_was_string_packet</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id2" names="方法说明">
            <title>方法说明</title>
            <target refid="class-webrtcdatachannelextension-private-method-close"></target>
            <paragraph classes="classref-method" ids="class-webrtcdatachannelextension-private-method-close" names="class_webrtcdatachannelextension_private_method__close">void <strong>_close</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-webrtcdatachannelextension-private-method-get-available-packet-count"></target>
            <paragraph classes="classref-method" ids="class-webrtcdatachannelextension-private-method-get-available-packet-count" names="class_webrtcdatachannelextension_private_method__get_available_packet_count"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>_get_available_packet_count</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-webrtcdatachannelextension-private-method-get-buffered-amount"></target>
            <paragraph classes="classref-method" ids="class-webrtcdatachannelextension-private-method-get-buffered-amount" names="class_webrtcdatachannelextension_private_method__get_buffered_amount"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>_get_buffered_amount</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-webrtcdatachannelextension-private-method-get-id"></target>
            <paragraph classes="classref-method" ids="class-webrtcdatachannelextension-private-method-get-id" names="class_webrtcdatachannelextension_private_method__get_id"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>_get_id</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-webrtcdatachannelextension-private-method-get-label"></target>
            <paragraph classes="classref-method" ids="class-webrtcdatachannelextension-private-method-get-label" names="class_webrtcdatachannelextension_private_method__get_label"><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>_get_label</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-webrtcdatachannelextension-private-method-get-max-packet-life-time"></target>
            <paragraph classes="classref-method" ids="class-webrtcdatachannelextension-private-method-get-max-packet-life-time" names="class_webrtcdatachannelextension_private_method__get_max_packet_life_time"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>_get_max_packet_life_time</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-webrtcdatachannelextension-private-method-get-max-packet-size"></target>
            <paragraph classes="classref-method" ids="class-webrtcdatachannelextension-private-method-get-max-packet-size" names="class_webrtcdatachannelextension_private_method__get_max_packet_size"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>_get_max_packet_size</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-webrtcdatachannelextension-private-method-get-max-retransmits"></target>
            <paragraph classes="classref-method" ids="class-webrtcdatachannelextension-private-method-get-max-retransmits" names="class_webrtcdatachannelextension_private_method__get_max_retransmits"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>_get_max_retransmits</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-webrtcdatachannelextension-private-method-get-packet"></target>
            <paragraph classes="classref-method" ids="class-webrtcdatachannelextension-private-method-get-packet" names="class_webrtcdatachannelextension_private_method__get_packet"><reference internal="True" refuri="class_@globalscope#enum-globalscope-error"><inline classes="std std-ref">Error</inline></reference> <strong>_get_packet</strong> <strong>(</strong> const uint8_t ** r_buffer, int32_t* r_buffer_size <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-webrtcdatachannelextension-private-method-get-protocol"></target>
            <paragraph classes="classref-method" ids="class-webrtcdatachannelextension-private-method-get-protocol" names="class_webrtcdatachannelextension_private_method__get_protocol"><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>_get_protocol</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-webrtcdatachannelextension-private-method-get-ready-state"></target>
            <paragraph classes="classref-method" ids="class-webrtcdatachannelextension-private-method-get-ready-state" names="class_webrtcdatachannelextension_private_method__get_ready_state"><reference internal="True" refuri="class_webrtcdatachannel#enum-webrtcdatachannel-channelstate"><inline classes="std std-ref">ChannelState</inline></reference> <strong>_get_ready_state</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-webrtcdatachannelextension-private-method-get-write-mode"></target>
            <paragraph classes="classref-method" ids="class-webrtcdatachannelextension-private-method-get-write-mode" names="class_webrtcdatachannelextension_private_method__get_write_mode"><reference internal="True" refuri="class_webrtcdatachannel#enum-webrtcdatachannel-writemode"><inline classes="std std-ref">WriteMode</inline></reference> <strong>_get_write_mode</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-webrtcdatachannelextension-private-method-is-negotiated"></target>
            <paragraph classes="classref-method" ids="class-webrtcdatachannelextension-private-method-is-negotiated" names="class_webrtcdatachannelextension_private_method__is_negotiated"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>_is_negotiated</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-webrtcdatachannelextension-private-method-is-ordered"></target>
            <paragraph classes="classref-method" ids="class-webrtcdatachannelextension-private-method-is-ordered" names="class_webrtcdatachannelextension_private_method__is_ordered"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>_is_ordered</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-webrtcdatachannelextension-private-method-poll"></target>
            <paragraph classes="classref-method" ids="class-webrtcdatachannelextension-private-method-poll" names="class_webrtcdatachannelextension_private_method__poll"><reference internal="True" refuri="class_@globalscope#enum-globalscope-error"><inline classes="std std-ref">Error</inline></reference> <strong>_poll</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-webrtcdatachannelextension-private-method-put-packet"></target>
            <paragraph classes="classref-method" ids="class-webrtcdatachannelextension-private-method-put-packet" names="class_webrtcdatachannelextension_private_method__put_packet"><reference internal="True" refuri="class_@globalscope#enum-globalscope-error"><inline classes="std std-ref">Error</inline></reference> <strong>_put_packet</strong> <strong>(</strong> const uint8_t* p_buffer, <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> p_buffer_size <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-webrtcdatachannelextension-private-method-set-write-mode"></target>
            <paragraph classes="classref-method" ids="class-webrtcdatachannelextension-private-method-set-write-mode" names="class_webrtcdatachannelextension_private_method__set_write_mode">void <strong>_set_write_mode</strong> <strong>(</strong> <reference internal="True" refuri="class_webrtcdatachannel#enum-webrtcdatachannel-writemode"><inline classes="std std-ref">WriteMode</inline></reference> p_write_mode <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-webrtcdatachannelextension-private-method-was-string-packet"></target>
            <paragraph classes="classref-method" ids="class-webrtcdatachannelextension-private-method-was-string-packet" names="class_webrtcdatachannelextension_private_method__was_string_packet"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>_was_string_packet</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，所以可以直接使用类名调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

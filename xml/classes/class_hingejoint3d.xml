<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_hingejoint3d.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/HingeJoint3D.xml.</comment>
    <target refid="class-hingejoint3d"></target>
    <section ids="hingejoint3d class-hingejoint3d" names="hingejoint3d class_hingejoint3d">
        <title>HingeJoint3D</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_joint3d#class-joint3d"><inline classes="std std-ref">Joint3D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node3d#class-node3d"><inline classes="std std-ref">Node3D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>限制 3D 物理体旋转轴的物理关节，旋转轴相对于另一个物理体。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>限制 3D 物理体旋转轴的物理关节，旋转轴相对于另一个物理体。例如甲物体可以是代表门铰链的 <reference internal="True" refuri="class_staticbody3d#class-staticbody3d"><inline classes="std std-ref">StaticBody3D</inline></reference>，<reference internal="True" refuri="class_rigidbody3d#class-rigidbody3d"><inline classes="std std-ref">RigidBody3D</inline></reference> 可以围绕它旋转。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="27"></colspec>
                    <colspec colwidth="87"></colspec>
                    <colspec colwidth="13"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-hingejoint3d-property-angular-limit-bias"><inline classes="std std-ref">angular_limit/bias</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.3</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-hingejoint3d-property-angular-limit-enable"><inline classes="std std-ref">angular_limit/enable</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-hingejoint3d-property-angular-limit-lower"><inline classes="std std-ref">angular_limit/lower</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>-1.5708</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-hingejoint3d-property-angular-limit-relaxation"><inline classes="std std-ref">angular_limit/relaxation</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-hingejoint3d-property-angular-limit-softness"><inline classes="std std-ref">angular_limit/softness</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.9</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-hingejoint3d-property-angular-limit-upper"><inline classes="std std-ref">angular_limit/upper</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.5708</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-hingejoint3d-property-motor-enable"><inline classes="std std-ref">motor/enable</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-hingejoint3d-property-motor-max-impulse"><inline classes="std std-ref">motor/max_impulse</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-hingejoint3d-property-motor-target-velocity"><inline classes="std std-ref">motor/target_velocity</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-hingejoint3d-property-params-bias"><inline classes="std std-ref">params/bias</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.3</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="27"></colspec>
                    <colspec colwidth="143"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-hingejoint3d-method-get-flag"><inline classes="std std-ref">get_flag</inline></reference>(flag: <reference internal="True" refid="enum-hingejoint3d-flag"><inline classes="std std-ref">Flag</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-hingejoint3d-method-get-param"><inline classes="std std-ref">get_param</inline></reference>(param: <reference internal="True" refid="enum-hingejoint3d-param"><inline classes="std std-ref">Param</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-hingejoint3d-method-set-flag"><inline classes="std std-ref">set_flag</inline></reference>(flag: <reference internal="True" refid="enum-hingejoint3d-flag"><inline classes="std std-ref">Flag</inline></reference>, enabled: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-hingejoint3d-method-set-param"><inline classes="std std-ref">set_param</inline></reference>(param: <reference internal="True" refid="enum-hingejoint3d-param"><inline classes="std std-ref">Param</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="枚举">
            <title>枚举</title>
            <target refid="enum-hingejoint3d-param"></target>
            <paragraph classes="classref-enumeration" ids="enum-hingejoint3d-param" names="enum_hingejoint3d_param">enum <strong>Param</strong>: <reference internal="True" refid="enum-hingejoint3d-param"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-hingejoint3d-constant-param-bias"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-hingejoint3d-constant-param-bias" names="class_hingejoint3d_constant_param_bias"><reference internal="True" refid="enum-hingejoint3d-param"><inline classes="std std-ref">Param</inline></reference> <strong>PARAM_BIAS</strong> = <literal>0</literal></paragraph>
            <paragraph>两个物体向不同方向移动时被拉回到一起的速度。</paragraph>
            <target refid="class-hingejoint3d-constant-param-limit-upper"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-hingejoint3d-constant-param-limit-upper" names="class_hingejoint3d_constant_param_limit_upper"><reference internal="True" refid="enum-hingejoint3d-param"><inline classes="std std-ref">Param</inline></reference> <strong>PARAM_LIMIT_UPPER</strong> = <literal>1</literal></paragraph>
            <paragraph>最大的旋转量。只有在<reference internal="True" refid="class-hingejoint3d-property-angular-limit-enable"><inline classes="std std-ref">angular_limit/enable</inline></reference>为 <literal>true</literal> 时才有效。</paragraph>
            <target refid="class-hingejoint3d-constant-param-limit-lower"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-hingejoint3d-constant-param-limit-lower" names="class_hingejoint3d_constant_param_limit_lower"><reference internal="True" refid="enum-hingejoint3d-param"><inline classes="std std-ref">Param</inline></reference> <strong>PARAM_LIMIT_LOWER</strong> = <literal>2</literal></paragraph>
            <paragraph>最小的旋转量。只有在<reference internal="True" refid="class-hingejoint3d-property-angular-limit-enable"><inline classes="std std-ref">angular_limit/enable</inline></reference>为 <literal>true</literal> 时才有效。</paragraph>
            <target refid="class-hingejoint3d-constant-param-limit-bias"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-hingejoint3d-constant-param-limit-bias" names="class_hingejoint3d_constant_param_limit_bias"><reference internal="True" refid="enum-hingejoint3d-param"><inline classes="std std-ref">Param</inline></reference> <strong>PARAM_LIMIT_BIAS</strong> = <literal>3</literal></paragraph>
            <paragraph>垂直于铰链的轴线上的旋转得到纠正的速度。</paragraph>
            <target refid="class-hingejoint3d-constant-param-limit-softness"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-hingejoint3d-constant-param-limit-softness" names="class_hingejoint3d_constant_param_limit_softness"><reference internal="True" refid="enum-hingejoint3d-param"><inline classes="std std-ref">Param</inline></reference> <strong>PARAM_LIMIT_SOFTNESS</strong> = <literal>4</literal></paragraph>
            <paragraph><strong>已弃用：</strong> This property is never used by the engine and is kept for compatibility purpose.</paragraph>
            <target refid="class-hingejoint3d-constant-param-limit-relaxation"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-hingejoint3d-constant-param-limit-relaxation" names="class_hingejoint3d_constant_param_limit_relaxation"><reference internal="True" refid="enum-hingejoint3d-param"><inline classes="std std-ref">Param</inline></reference> <strong>PARAM_LIMIT_RELAXATION</strong> = <literal>5</literal></paragraph>
            <paragraph>该值越低，旋转速度越慢。</paragraph>
            <target refid="class-hingejoint3d-constant-param-motor-target-velocity"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-hingejoint3d-constant-param-motor-target-velocity" names="class_hingejoint3d_constant_param_motor_target_velocity"><reference internal="True" refid="enum-hingejoint3d-param"><inline classes="std std-ref">Param</inline></reference> <strong>PARAM_MOTOR_TARGET_VELOCITY</strong> = <literal>6</literal></paragraph>
            <paragraph>目标马达的目标速度。</paragraph>
            <target refid="class-hingejoint3d-constant-param-motor-max-impulse"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-hingejoint3d-constant-param-motor-max-impulse" names="class_hingejoint3d_constant_param_motor_max_impulse"><reference internal="True" refid="enum-hingejoint3d-param"><inline classes="std std-ref">Param</inline></reference> <strong>PARAM_MOTOR_MAX_IMPULSE</strong> = <literal>7</literal></paragraph>
            <paragraph>马达的最大加速度。</paragraph>
            <target refid="class-hingejoint3d-constant-param-max"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-hingejoint3d-constant-param-max" names="class_hingejoint3d_constant_param_max"><reference internal="True" refid="enum-hingejoint3d-param"><inline classes="std std-ref">Param</inline></reference> <strong>PARAM_MAX</strong> = <literal>8</literal></paragraph>
            <paragraph>代表 <reference internal="True" refid="enum-hingejoint3d-param"><inline classes="std std-ref">Param</inline></reference> 枚举的大小。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-hingejoint3d-flag"></target>
            <paragraph classes="classref-enumeration" ids="enum-hingejoint3d-flag" names="enum_hingejoint3d_flag">enum <strong>Flag</strong>: <reference internal="True" refid="enum-hingejoint3d-flag"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-hingejoint3d-constant-flag-use-limit"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-hingejoint3d-constant-flag-use-limit" names="class_hingejoint3d_constant_flag_use_limit"><reference internal="True" refid="enum-hingejoint3d-flag"><inline classes="std std-ref">Flag</inline></reference> <strong>FLAG_USE_LIMIT</strong> = <literal>0</literal></paragraph>
            <paragraph>如果为 <literal>true</literal>,则会对由<reference internal="True" refid="class-hingejoint3d-property-angular-limit-lower"><inline classes="std std-ref">angular_limit/lower</inline></reference>和<reference internal="True" refid="class-hingejoint3d-property-angular-limit-upper"><inline classes="std std-ref">angular_limit/upper</inline></reference>定义的铰链最大和最小旋转量产生影响。</paragraph>
            <target refid="class-hingejoint3d-constant-flag-enable-motor"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-hingejoint3d-constant-flag-enable-motor" names="class_hingejoint3d_constant_flag_enable_motor"><reference internal="True" refid="enum-hingejoint3d-flag"><inline classes="std std-ref">Flag</inline></reference> <strong>FLAG_ENABLE_MOTOR</strong> = <literal>1</literal></paragraph>
            <paragraph>激活后，电机会使铰链转动。</paragraph>
            <target refid="class-hingejoint3d-constant-flag-max"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-hingejoint3d-constant-flag-max" names="class_hingejoint3d_constant_flag_max"><reference internal="True" refid="enum-hingejoint3d-flag"><inline classes="std std-ref">Flag</inline></reference> <strong>FLAG_MAX</strong> = <literal>2</literal></paragraph>
            <paragraph>代表 <reference internal="True" refid="enum-hingejoint3d-flag"><inline classes="std std-ref">Flag</inline></reference> 枚举的大小。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="属性说明">
            <title>属性说明</title>
            <target refid="class-hingejoint3d-property-angular-limit-bias"></target>
            <paragraph classes="classref-property" ids="class-hingejoint3d-property-angular-limit-bias" names="class_hingejoint3d_property_angular_limit/bias"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>angular_limit/bias</strong> = <literal>0.3</literal> <reference internal="True" refid="class-hingejoint3d-property-angular-limit-bias"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param</strong>(param: <reference internal="True" refid="enum-hingejoint3d-param"><inline classes="std std-ref">Param</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param</strong>(param: <reference internal="True" refid="enum-hingejoint3d-param"><inline classes="std std-ref">Param</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>垂直于铰链的轴线上的旋转得到纠正的速度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-hingejoint3d-property-angular-limit-enable"></target>
            <paragraph classes="classref-property" ids="class-hingejoint3d-property-angular-limit-enable" names="class_hingejoint3d_property_angular_limit/enable"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>angular_limit/enable</strong> = <literal>false</literal> <reference internal="True" refid="class-hingejoint3d-property-angular-limit-enable"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_flag</strong>(flag: <reference internal="True" refid="enum-hingejoint3d-flag"><inline classes="std std-ref">Flag</inline></reference>, enabled: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_flag</strong>(flag: <reference internal="True" refid="enum-hingejoint3d-flag"><inline classes="std std-ref">Flag</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>,则会对由<reference internal="True" refid="class-hingejoint3d-property-angular-limit-lower"><inline classes="std std-ref">angular_limit/lower</inline></reference>和<reference internal="True" refid="class-hingejoint3d-property-angular-limit-upper"><inline classes="std std-ref">angular_limit/upper</inline></reference>定义的铰链最大和最小旋转量产生影响。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-hingejoint3d-property-angular-limit-lower"></target>
            <paragraph classes="classref-property" ids="class-hingejoint3d-property-angular-limit-lower" names="class_hingejoint3d_property_angular_limit/lower"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>angular_limit/lower</strong> = <literal>-1.5708</literal> <reference internal="True" refid="class-hingejoint3d-property-angular-limit-lower"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param</strong>(param: <reference internal="True" refid="enum-hingejoint3d-param"><inline classes="std std-ref">Param</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param</strong>(param: <reference internal="True" refid="enum-hingejoint3d-param"><inline classes="std std-ref">Param</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>最小的旋转量。只有在<reference internal="True" refid="class-hingejoint3d-property-angular-limit-enable"><inline classes="std std-ref">angular_limit/enable</inline></reference>为 <literal>true</literal> 时才有效。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-hingejoint3d-property-angular-limit-relaxation"></target>
            <paragraph classes="classref-property" ids="class-hingejoint3d-property-angular-limit-relaxation" names="class_hingejoint3d_property_angular_limit/relaxation"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>angular_limit/relaxation</strong> = <literal>1.0</literal> <reference internal="True" refid="class-hingejoint3d-property-angular-limit-relaxation"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param</strong>(param: <reference internal="True" refid="enum-hingejoint3d-param"><inline classes="std std-ref">Param</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param</strong>(param: <reference internal="True" refid="enum-hingejoint3d-param"><inline classes="std std-ref">Param</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>该值越低，旋转速度越慢。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-hingejoint3d-property-angular-limit-softness"></target>
            <paragraph classes="classref-property" ids="class-hingejoint3d-property-angular-limit-softness" names="class_hingejoint3d_property_angular_limit/softness"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>angular_limit/softness</strong> = <literal>0.9</literal> <reference internal="True" refid="class-hingejoint3d-property-angular-limit-softness"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param</strong>(param: <reference internal="True" refid="enum-hingejoint3d-param"><inline classes="std std-ref">Param</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param</strong>(param: <reference internal="True" refid="enum-hingejoint3d-param"><inline classes="std std-ref">Param</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph><strong>已弃用：</strong> This property is never set by the engine and is kept for compatibility purposes.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-hingejoint3d-property-angular-limit-upper"></target>
            <paragraph classes="classref-property" ids="class-hingejoint3d-property-angular-limit-upper" names="class_hingejoint3d_property_angular_limit/upper"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>angular_limit/upper</strong> = <literal>1.5708</literal> <reference internal="True" refid="class-hingejoint3d-property-angular-limit-upper"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param</strong>(param: <reference internal="True" refid="enum-hingejoint3d-param"><inline classes="std std-ref">Param</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param</strong>(param: <reference internal="True" refid="enum-hingejoint3d-param"><inline classes="std std-ref">Param</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>最大的旋转量。只有在<reference internal="True" refid="class-hingejoint3d-property-angular-limit-enable"><inline classes="std std-ref">angular_limit/enable</inline></reference>为 <literal>true</literal> 时才有效。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-hingejoint3d-property-motor-enable"></target>
            <paragraph classes="classref-property" ids="class-hingejoint3d-property-motor-enable" names="class_hingejoint3d_property_motor/enable"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>motor/enable</strong> = <literal>false</literal> <reference internal="True" refid="class-hingejoint3d-property-motor-enable"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_flag</strong>(flag: <reference internal="True" refid="enum-hingejoint3d-flag"><inline classes="std std-ref">Flag</inline></reference>, enabled: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_flag</strong>(flag: <reference internal="True" refid="enum-hingejoint3d-flag"><inline classes="std std-ref">Flag</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>激活后，电机会使铰链转动。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-hingejoint3d-property-motor-max-impulse"></target>
            <paragraph classes="classref-property" ids="class-hingejoint3d-property-motor-max-impulse" names="class_hingejoint3d_property_motor/max_impulse"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>motor/max_impulse</strong> = <literal>1.0</literal> <reference internal="True" refid="class-hingejoint3d-property-motor-max-impulse"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param</strong>(param: <reference internal="True" refid="enum-hingejoint3d-param"><inline classes="std std-ref">Param</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param</strong>(param: <reference internal="True" refid="enum-hingejoint3d-param"><inline classes="std std-ref">Param</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>马达的最大加速度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-hingejoint3d-property-motor-target-velocity"></target>
            <paragraph classes="classref-property" ids="class-hingejoint3d-property-motor-target-velocity" names="class_hingejoint3d_property_motor/target_velocity"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>motor/target_velocity</strong> = <literal>1.0</literal> <reference internal="True" refid="class-hingejoint3d-property-motor-target-velocity"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param</strong>(param: <reference internal="True" refid="enum-hingejoint3d-param"><inline classes="std std-ref">Param</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param</strong>(param: <reference internal="True" refid="enum-hingejoint3d-param"><inline classes="std std-ref">Param</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>目标马达的目标速度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-hingejoint3d-property-params-bias"></target>
            <paragraph classes="classref-property" ids="class-hingejoint3d-property-params-bias" names="class_hingejoint3d_property_params/bias"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>params/bias</strong> = <literal>0.3</literal> <reference internal="True" refid="class-hingejoint3d-property-params-bias"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param</strong>(param: <reference internal="True" refid="enum-hingejoint3d-param"><inline classes="std std-ref">Param</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param</strong>(param: <reference internal="True" refid="enum-hingejoint3d-param"><inline classes="std std-ref">Param</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>两个物体向不同方向移动时被拉回到一起的速度。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="方法说明">
            <title>方法说明</title>
            <target refid="class-hingejoint3d-method-get-flag"></target>
            <paragraph classes="classref-method" ids="class-hingejoint3d-method-get-flag" names="class_hingejoint3d_method_get_flag"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_flag</strong>(flag: <reference internal="True" refid="enum-hingejoint3d-flag"><inline classes="std std-ref">Flag</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-hingejoint3d-method-get-flag"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回指定标志的值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-hingejoint3d-method-get-param"></target>
            <paragraph classes="classref-method" ids="class-hingejoint3d-method-get-param" names="class_hingejoint3d_method_get_param"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param</strong>(param: <reference internal="True" refid="enum-hingejoint3d-param"><inline classes="std std-ref">Param</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-hingejoint3d-method-get-param"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回指定参数的值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-hingejoint3d-method-set-flag"></target>
            <paragraph classes="classref-method" ids="class-hingejoint3d-method-set-flag" names="class_hingejoint3d_method_set_flag"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_flag</strong>(flag: <reference internal="True" refid="enum-hingejoint3d-flag"><inline classes="std std-ref">Flag</inline></reference>, enabled: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <reference internal="True" refid="class-hingejoint3d-method-set-flag"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果为 <literal>true</literal>，启用指定的标志。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-hingejoint3d-method-set-param"></target>
            <paragraph classes="classref-method" ids="class-hingejoint3d-method-set-param" names="class_hingejoint3d_method_set_param"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param</strong>(param: <reference internal="True" refid="enum-hingejoint3d-param"><inline classes="std std-ref">Param</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <reference internal="True" refid="class-hingejoint3d-method-set-param"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置指定参数的值。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效运算符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列位标志构成位掩码的整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

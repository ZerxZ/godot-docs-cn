<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_websocketmultiplayerpeer.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/4.2/modules/websocket/doc_classes/WebSocketMultiplayerPeer.xml.</comment>
    <target refid="class-websocketmultiplayerpeer"></target>
    <section ids="websocketmultiplayerpeer class-websocketmultiplayerpeer" names="websocketmultiplayerpeer class_websocketmultiplayerpeer">
        <title>WebSocketMultiplayerPeer</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_multiplayerpeer#class-multiplayerpeer"><inline classes="std std-ref">MultiplayerPeer</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_packetpeer#class-packetpeer"><inline classes="std std-ref">PacketPeer</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>WebSocket 服务器和客户端的基类。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>用于 WebSocket 服务器和客户端的基类，可以用作 <reference internal="True" refuri="class_multiplayerapi#class-multiplayerapi"><inline classes="std std-ref">MultiplayerAPI</inline></reference> 的多人对等体。</paragraph>
            <paragraph><strong>注意：</strong>导出到安卓时，在导出项目或使用一键部署之前，请务必在安卓导出预设中开启 <literal>INTERNET</literal> 权限。否则，任何类型的网络通信都将被 Android 阻止。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="51"></colspec>
                    <colspec colwidth="91"></colspec>
                    <colspec colwidth="25"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_packedstringarray#class-packedstringarray"><inline classes="std std-ref">PackedStringArray</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-websocketmultiplayerpeer-property-handshake-headers"><inline classes="std std-ref">handshake_headers</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>PackedStringArray()</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-websocketmultiplayerpeer-property-handshake-timeout"><inline classes="std std-ref">handshake_timeout</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>3.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-websocketmultiplayerpeer-property-inbound-buffer-size"><inline classes="std std-ref">inbound_buffer_size</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>65535</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-websocketmultiplayerpeer-property-max-queued-packets"><inline classes="std std-ref">max_queued_packets</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>2048</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-websocketmultiplayerpeer-property-outbound-buffer-size"><inline classes="std std-ref">outbound_buffer_size</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>65535</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_packedstringarray#class-packedstringarray"><inline classes="std std-ref">PackedStringArray</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-websocketmultiplayerpeer-property-supported-protocols"><inline classes="std std-ref">supported_protocols</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>PackedStringArray()</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="43"></colspec>
                    <colspec colwidth="221"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_@globalscope#enum-globalscope-error"><inline classes="std std-ref">Error</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-websocketmultiplayerpeer-method-create-client"><inline classes="std std-ref">create_client</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> url, <reference internal="True" refuri="class_tlsoptions#class-tlsoptions"><inline classes="std std-ref">TLSOptions</inline></reference> tls_client_options=null <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_@globalscope#enum-globalscope-error"><inline classes="std std-ref">Error</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-websocketmultiplayerpeer-method-create-server"><inline classes="std std-ref">create_server</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> port, <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> bind_address="*", <reference internal="True" refuri="class_tlsoptions#class-tlsoptions"><inline classes="std std-ref">TLSOptions</inline></reference> tls_server_options=null <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_websocketpeer#class-websocketpeer"><inline classes="std std-ref">WebSocketPeer</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-websocketmultiplayerpeer-method-get-peer"><inline classes="std std-ref">get_peer</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> peer_id <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-websocketmultiplayerpeer-method-get-peer-address"><inline classes="std std-ref">get_peer_address</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-websocketmultiplayerpeer-method-get-peer-port"><inline classes="std std-ref">get_peer_port</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="属性说明">
            <title>属性说明</title>
            <target refid="class-websocketmultiplayerpeer-property-handshake-headers"></target>
            <paragraph classes="classref-property" ids="class-websocketmultiplayerpeer-property-handshake-headers" names="class_websocketmultiplayerpeer_property_handshake_headers"><reference internal="True" refuri="class_packedstringarray#class-packedstringarray"><inline classes="std std-ref">PackedStringArray</inline></reference> <strong>handshake_headers</strong> = <literal>PackedStringArray()</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_handshake_headers</strong> <strong>(</strong> <reference internal="True" refuri="class_packedstringarray#class-packedstringarray"><inline classes="std std-ref">PackedStringArray</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_packedstringarray#class-packedstringarray"><inline classes="std std-ref">PackedStringArray</inline></reference> <strong>get_handshake_headers</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>握手过程中要使用的额外标头。详见 <reference internal="True" refuri="class_websocketpeer#class-websocketpeer-property-handshake-headers"><inline classes="std std-ref">WebSocketPeer.handshake_headers</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-websocketmultiplayerpeer-property-handshake-timeout"></target>
            <paragraph classes="classref-property" ids="class-websocketmultiplayerpeer-property-handshake-timeout" names="class_websocketmultiplayerpeer_property_handshake_timeout"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>handshake_timeout</strong> = <literal>3.0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_handshake_timeout</strong> <strong>(</strong> <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_handshake_timeout</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>每个对等体在被丢弃之前可以保持在连接状态的最长时间。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-websocketmultiplayerpeer-property-inbound-buffer-size"></target>
            <paragraph classes="classref-property" ids="class-websocketmultiplayerpeer-property-inbound-buffer-size" names="class_websocketmultiplayerpeer_property_inbound_buffer_size"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>inbound_buffer_size</strong> = <literal>65535</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_inbound_buffer_size</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_inbound_buffer_size</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>已连接对等体的入站缓冲区大小。详见 <reference internal="True" refuri="class_websocketpeer#class-websocketpeer-property-inbound-buffer-size"><inline classes="std std-ref">WebSocketPeer.inbound_buffer_size</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-websocketmultiplayerpeer-property-max-queued-packets"></target>
            <paragraph classes="classref-property" ids="class-websocketmultiplayerpeer-property-max-queued-packets" names="class_websocketmultiplayerpeer_property_max_queued_packets"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>max_queued_packets</strong> = <literal>2048</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_max_queued_packets</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_max_queued_packets</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>已连接对等体的最大排队数据包数量。详见 <reference internal="True" refuri="class_websocketpeer#class-websocketpeer-property-max-queued-packets"><inline classes="std std-ref">WebSocketPeer.max_queued_packets</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-websocketmultiplayerpeer-property-outbound-buffer-size"></target>
            <paragraph classes="classref-property" ids="class-websocketmultiplayerpeer-property-outbound-buffer-size" names="class_websocketmultiplayerpeer_property_outbound_buffer_size"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>outbound_buffer_size</strong> = <literal>65535</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_outbound_buffer_size</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_outbound_buffer_size</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>已连接对等体的出站缓冲区大小。详见 <reference internal="True" refuri="class_websocketpeer#class-websocketpeer-property-outbound-buffer-size"><inline classes="std std-ref">WebSocketPeer.outbound_buffer_size</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-websocketmultiplayerpeer-property-supported-protocols"></target>
            <paragraph classes="classref-property" ids="class-websocketmultiplayerpeer-property-supported-protocols" names="class_websocketmultiplayerpeer_property_supported_protocols"><reference internal="True" refuri="class_packedstringarray#class-packedstringarray"><inline classes="std std-ref">PackedStringArray</inline></reference> <strong>supported_protocols</strong> = <literal>PackedStringArray()</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_supported_protocols</strong> <strong>(</strong> <reference internal="True" refuri="class_packedstringarray#class-packedstringarray"><inline classes="std std-ref">PackedStringArray</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_packedstringarray#class-packedstringarray"><inline classes="std std-ref">PackedStringArray</inline></reference> <strong>get_supported_protocols</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>支持的 WebSocket 子协议。详情见 <reference internal="True" refuri="class_websocketpeer#class-websocketpeer-property-supported-protocols"><inline classes="std std-ref">WebSocketPeer.supported_protocols</inline></reference>。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="方法说明">
            <title>方法说明</title>
            <target refid="class-websocketmultiplayerpeer-method-create-client"></target>
            <paragraph classes="classref-method" ids="class-websocketmultiplayerpeer-method-create-client" names="class_websocketmultiplayerpeer_method_create_client"><reference internal="True" refuri="class_@globalscope#enum-globalscope-error"><inline classes="std std-ref">Error</inline></reference> <strong>create_client</strong> <strong>(</strong> <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> url, <reference internal="True" refuri="class_tlsoptions#class-tlsoptions"><inline classes="std std-ref">TLSOptions</inline></reference> tls_client_options=null <strong>)</strong></paragraph>
            <paragraph>启动新的多人客户端，连接至给定的 <literal>url</literal>。使用 <literal>wss://</literal> 协议连接时会校验主机名和 TLS 证书。传入 <literal>tls_client_options</literal> 可以自定义信任的证书颁发机构，也可以禁用通用名的验证。见 <reference internal="True" refuri="class_tlsoptions#class-tlsoptions-method-client"><inline classes="std std-ref">TLSOptions.client</inline></reference> 和 <reference internal="True" refuri="class_tlsoptions#class-tlsoptions-method-client-unsafe"><inline classes="std std-ref">TLSOptions.client_unsafe</inline></reference>。</paragraph>
            <paragraph><strong>注意：</strong>推荐指定 URL 的方案部分，即 <literal>url</literal> 应该以 <literal>ws://</literal> 或 <literal>wss://</literal> 开头。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-websocketmultiplayerpeer-method-create-server"></target>
            <paragraph classes="classref-method" ids="class-websocketmultiplayerpeer-method-create-server" names="class_websocketmultiplayerpeer_method_create_server"><reference internal="True" refuri="class_@globalscope#enum-globalscope-error"><inline classes="std std-ref">Error</inline></reference> <strong>create_server</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> port, <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> bind_address="*", <reference internal="True" refuri="class_tlsoptions#class-tlsoptions"><inline classes="std std-ref">TLSOptions</inline></reference> tls_server_options=null <strong>)</strong></paragraph>
            <paragraph>启动新的多人服务器，监听给定的 <literal>port</literal>。可以指定 <literal>bind_address</literal>，也可以提供有效的 <literal>tls_server_options</literal> 来使用 TLS。见 <reference internal="True" refuri="class_tlsoptions#class-tlsoptions-method-server"><inline classes="std std-ref">TLSOptions.server</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-websocketmultiplayerpeer-method-get-peer"></target>
            <paragraph classes="classref-method" ids="class-websocketmultiplayerpeer-method-get-peer" names="class_websocketmultiplayerpeer_method_get_peer"><reference internal="True" refuri="class_websocketpeer#class-websocketpeer"><inline classes="std std-ref">WebSocketPeer</inline></reference> <strong>get_peer</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> peer_id <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回与给定 <literal>peer_id</literal> 关联的 <reference internal="True" refuri="class_websocketpeer#class-websocketpeer"><inline classes="std std-ref">WebSocketPeer</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-websocketmultiplayerpeer-method-get-peer-address"></target>
            <paragraph classes="classref-method" ids="class-websocketmultiplayerpeer-method-get-peer-address" names="class_websocketmultiplayerpeer_method_get_peer_address"><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>get_peer_address</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回给定对等体的 IP 地址。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-websocketmultiplayerpeer-method-get-peer-port"></target>
            <paragraph classes="classref-method" ids="class-websocketmultiplayerpeer-method-get-peer-port" names="class_websocketmultiplayerpeer_method_get_peer_port"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_peer_port</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> id <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回给定对等体的远程端口。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，所以可以直接使用类名调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

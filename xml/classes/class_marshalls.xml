<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_marshalls.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/Marshalls.xml.</comment>
    <target refid="class-marshalls"></target>
    <section ids="marshalls class-marshalls" names="marshalls class_marshalls">
        <title>Marshalls</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>数据转换（marshalling）和编码辅助工具。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>提供进行数据转换和编码的实用函数。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="47"></colspec>
                    <colspec colwidth="164"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_packedbytearray#class-packedbytearray"><inline classes="std std-ref">PackedByteArray</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-marshalls-method-base64-to-raw"><inline classes="std std-ref">base64_to_raw</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> base64_str <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-marshalls-method-base64-to-utf8"><inline classes="std std-ref">base64_to_utf8</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> base64_str <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-marshalls-method-base64-to-variant"><inline classes="std std-ref">base64_to_variant</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> base64_str, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> allow_objects=false <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-marshalls-method-raw-to-base64"><inline classes="std std-ref">raw_to_base64</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_packedbytearray#class-packedbytearray"><inline classes="std std-ref">PackedByteArray</inline></reference> array <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-marshalls-method-utf8-to-base64"><inline classes="std std-ref">utf8_to_base64</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> utf8_str <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-marshalls-method-variant-to-base64"><inline classes="std std-ref">variant_to_base64</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> variant, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> full_objects=false <strong>)</strong></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="方法说明">
            <title>方法说明</title>
            <target refid="class-marshalls-method-base64-to-raw"></target>
            <paragraph classes="classref-method" ids="class-marshalls-method-base64-to-raw" names="class_marshalls_method_base64_to_raw"><reference internal="True" refuri="class_packedbytearray#class-packedbytearray"><inline classes="std std-ref">PackedByteArray</inline></reference> <strong>base64_to_raw</strong> <strong>(</strong> <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> base64_str <strong>)</strong></paragraph>
            <paragraph>返回对应于 Base64 编码字符串 <literal>base64_str</literal> 的解码的 <reference internal="True" refuri="class_packedbytearray#class-packedbytearray"><inline classes="std std-ref">PackedByteArray</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-marshalls-method-base64-to-utf8"></target>
            <paragraph classes="classref-method" ids="class-marshalls-method-base64-to-utf8" names="class_marshalls_method_base64_to_utf8"><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>base64_to_utf8</strong> <strong>(</strong> <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> base64_str <strong>)</strong></paragraph>
            <paragraph>返回与 Base64 编码的字符串 <literal>base64_str</literal> 相对应的解码字符串。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-marshalls-method-base64-to-variant"></target>
            <paragraph classes="classref-method" ids="class-marshalls-method-base64-to-variant" names="class_marshalls_method_base64_to_variant"><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> <strong>base64_to_variant</strong> <strong>(</strong> <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> base64_str, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> allow_objects=false <strong>)</strong></paragraph>
            <paragraph>返回一个对应于 Base64 编码的字符串 <literal>base64_str</literal> 的解码 <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference>。如果 <literal>allow_objects</literal> 为 <literal>true</literal>，则允许对对象进行解码。</paragraph>
            <paragraph>内部实现时，使用的解码机制与 <reference internal="True" refuri="class_@globalscope#class-globalscope-method-bytes-to-var"><inline classes="std std-ref">@GlobalScope.bytes_to_var</inline></reference> 方法相同。</paragraph>
            <paragraph><strong>警告：</strong>反序列化的对象可能包含会被执行的代码。如果序列化的对象来自不受信任的来源，请不要使用这个选项，以避免潜在的安全威胁，如远程代码执行。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-marshalls-method-raw-to-base64"></target>
            <paragraph classes="classref-method" ids="class-marshalls-method-raw-to-base64" names="class_marshalls_method_raw_to_base64"><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>raw_to_base64</strong> <strong>(</strong> <reference internal="True" refuri="class_packedbytearray#class-packedbytearray"><inline classes="std std-ref">PackedByteArray</inline></reference> array <strong>)</strong></paragraph>
            <paragraph>返回给定 <reference internal="True" refuri="class_packedbytearray#class-packedbytearray"><inline classes="std std-ref">PackedByteArray</inline></reference> 的 Base64 编码的字符串。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-marshalls-method-utf8-to-base64"></target>
            <paragraph classes="classref-method" ids="class-marshalls-method-utf8-to-base64" names="class_marshalls_method_utf8_to_base64"><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>utf8_to_base64</strong> <strong>(</strong> <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> utf8_str <strong>)</strong></paragraph>
            <paragraph>返回 UTF-8 字符串 <literal>utf8_str</literal> 的 Base64 编码的字符串。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-marshalls-method-variant-to-base64"></target>
            <paragraph classes="classref-method" ids="class-marshalls-method-variant-to-base64" names="class_marshalls_method_variant_to_base64"><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>variant_to_base64</strong> <strong>(</strong> <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> variant, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> full_objects=false <strong>)</strong></paragraph>
            <paragraph>返回经过 Base64 编码的 <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> <literal>variant</literal> 的字符串。如果 <literal>full_objects</literal> 为 <literal>true</literal>，则允许将对象进行编码（有可能包括代码）。</paragraph>
            <paragraph>内部实现时，使用的编码机制与 <reference internal="True" refuri="class_@globalscope#class-globalscope-method-var-to-bytes"><inline classes="std std-ref">@GlobalScope.var_to_bytes</inline></reference> 方法相同。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，所以可以直接使用类名调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_basebutton.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/BaseButton.xml.</comment>
    <target refid="class-basebutton"></target>
    <section ids="basebutton class-basebutton" names="basebutton class_basebutton">
        <title>BaseButton</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_control#class-control"><inline classes="std std-ref">Control</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_canvasitem#class-canvasitem"><inline classes="std std-ref">CanvasItem</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph><strong>派生：</strong> <reference internal="True" refuri="class_button#class-button"><inline classes="std std-ref">Button</inline></reference>, <reference internal="True" refuri="class_linkbutton#class-linkbutton"><inline classes="std std-ref">LinkButton</inline></reference>, <reference internal="True" refuri="class_texturebutton#class-texturebutton"><inline classes="std std-ref">TextureButton</inline></reference></paragraph>
        <paragraph>GUI 按钮的抽象基类。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph><strong>BaseButton</strong> 是 GUI 按钮的抽象基类。本身不显示任何东西。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="73"></colspec>
                    <colspec colwidth="77"></colspec>
                    <colspec colwidth="69"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-basebutton-actionmode"><inline classes="std std-ref">ActionMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-basebutton-property-action-mode"><inline classes="std std-ref">action_mode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_buttongroup#class-buttongroup"><inline classes="std std-ref">ButtonGroup</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-basebutton-property-button-group"><inline classes="std std-ref">button_group</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="这个值是由下列位标志构成位掩码的整数。">BitField</abbreviation>[<reference internal="True" refuri="class_@globalscope#enum-globalscope-mousebuttonmask"><inline classes="std std-ref">MouseButtonMask</inline></reference>]</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-basebutton-property-button-mask"><inline classes="std std-ref">button_mask</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-basebutton-property-button-pressed"><inline classes="std std-ref">button_pressed</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-basebutton-property-disabled"><inline classes="std std-ref">disabled</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_control#enum-control-focusmode"><inline classes="std std-ref">FocusMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph>focus_mode</paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>2</literal> (overrides <reference internal="True" refuri="class_control#class-control-property-focus-mode"><inline classes="std std-ref">Control</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-basebutton-property-keep-pressed-outside"><inline classes="std std-ref">keep_pressed_outside</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_shortcut#class-shortcut"><inline classes="std std-ref">Shortcut</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-basebutton-property-shortcut"><inline classes="std std-ref">shortcut</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-basebutton-property-shortcut-feedback"><inline classes="std std-ref">shortcut_feedback</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-basebutton-property-shortcut-in-tooltip"><inline classes="std std-ref">shortcut_in_tooltip</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-basebutton-property-toggle-mode"><inline classes="std std-ref">toggle_mode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="43"></colspec>
                    <colspec colwidth="118"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-basebutton-private-method-pressed"><inline classes="std std-ref">_pressed</inline></reference>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-basebutton-private-method-toggled"><inline classes="std std-ref">_toggled</inline></reference>(toggled_on: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-basebutton-drawmode"><inline classes="std std-ref">DrawMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-basebutton-method-get-draw-mode"><inline classes="std std-ref">get_draw_mode</inline></reference>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-basebutton-method-is-hovered"><inline classes="std std-ref">is_hovered</inline></reference>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-basebutton-method-set-pressed-no-signal"><inline classes="std std-ref">set_pressed_no_signal</inline></reference>(pressed: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="信号">
            <title>信号</title>
            <target refid="class-basebutton-signal-button-down"></target>
            <paragraph classes="classref-signal" ids="class-basebutton-signal-button-down" names="class_basebutton_signal_button_down"><strong>button_down</strong>() <reference internal="True" refid="class-basebutton-signal-button-down"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当按钮开始被按下时发出。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-basebutton-signal-button-up"></target>
            <paragraph classes="classref-signal" ids="class-basebutton-signal-button-up" names="class_basebutton_signal_button_up"><strong>button_up</strong>() <reference internal="True" refid="class-basebutton-signal-button-up"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当按钮停止按下时发出。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-basebutton-signal-pressed"></target>
            <paragraph classes="classref-signal" ids="class-basebutton-signal-pressed" names="class_basebutton_signal_pressed"><strong>pressed</strong>() <reference internal="True" refid="class-basebutton-signal-pressed"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当按钮被切换或按下时发出。如果 <reference internal="True" refid="class-basebutton-property-action-mode"><inline classes="std std-ref">action_mode</inline></reference> 为 <reference internal="True" refid="class-basebutton-constant-action-mode-button-press"><inline classes="std std-ref">ACTION_MODE_BUTTON_PRESS</inline></reference>，则在 <reference internal="True" refid="class-basebutton-signal-button-down"><inline classes="std std-ref">button_down</inline></reference> 时发出，否则当 <reference internal="True" refid="class-basebutton-signal-button-up"><inline classes="std std-ref">button_up</inline></reference> 时发出。</paragraph>
            <paragraph>如果需要知道按钮的按下状态（并且 <reference internal="True" refid="class-basebutton-property-toggle-mode"><inline classes="std std-ref">toggle_mode</inline></reference> 处于活动状态），请改用 <reference internal="True" refid="class-basebutton-signal-toggled"><inline classes="std std-ref">toggled</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-basebutton-signal-toggled"></target>
            <paragraph classes="classref-signal" ids="class-basebutton-signal-toggled" names="class_basebutton_signal_toggled"><strong>toggled</strong>(toggled_on: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <reference internal="True" refid="class-basebutton-signal-toggled"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当按钮刚刚在按下和正常状态之间切换时发出（仅当 <reference internal="True" refid="class-basebutton-property-toggle-mode"><inline classes="std std-ref">toggle_mode</inline></reference> 处于活动状态时）。新状态包含在 <literal>toggled_on</literal> 参数中。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="枚举">
            <title>枚举</title>
            <target refid="enum-basebutton-drawmode"></target>
            <paragraph classes="classref-enumeration" ids="enum-basebutton-drawmode" names="enum_basebutton_drawmode">enum <strong>DrawMode</strong>: <reference internal="True" refid="enum-basebutton-drawmode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-basebutton-constant-draw-normal"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-basebutton-constant-draw-normal" names="class_basebutton_constant_draw_normal"><reference internal="True" refid="enum-basebutton-drawmode"><inline classes="std std-ref">DrawMode</inline></reference> <strong>DRAW_NORMAL</strong> = <literal>0</literal></paragraph>
            <paragraph>按钮的正常状态（即未按下、未悬停、未切换和启用）。</paragraph>
            <target refid="class-basebutton-constant-draw-pressed"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-basebutton-constant-draw-pressed" names="class_basebutton_constant_draw_pressed"><reference internal="True" refid="enum-basebutton-drawmode"><inline classes="std std-ref">DrawMode</inline></reference> <strong>DRAW_PRESSED</strong> = <literal>1</literal></paragraph>
            <paragraph>按钮被按下的状态。</paragraph>
            <target refid="class-basebutton-constant-draw-hover"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-basebutton-constant-draw-hover" names="class_basebutton_constant_draw_hover"><reference internal="True" refid="enum-basebutton-drawmode"><inline classes="std std-ref">DrawMode</inline></reference> <strong>DRAW_HOVER</strong> = <literal>2</literal></paragraph>
            <paragraph>按钮的状态为悬停。</paragraph>
            <target refid="class-basebutton-constant-draw-disabled"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-basebutton-constant-draw-disabled" names="class_basebutton_constant_draw_disabled"><reference internal="True" refid="enum-basebutton-drawmode"><inline classes="std std-ref">DrawMode</inline></reference> <strong>DRAW_DISABLED</strong> = <literal>3</literal></paragraph>
            <paragraph>按钮的状态为禁用。</paragraph>
            <target refid="class-basebutton-constant-draw-hover-pressed"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-basebutton-constant-draw-hover-pressed" names="class_basebutton_constant_draw_hover_pressed"><reference internal="True" refid="enum-basebutton-drawmode"><inline classes="std std-ref">DrawMode</inline></reference> <strong>DRAW_HOVER_PRESSED</strong> = <literal>4</literal></paragraph>
            <paragraph>按钮的状态既是悬停的，也是按下的。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-basebutton-actionmode"></target>
            <paragraph classes="classref-enumeration" ids="enum-basebutton-actionmode" names="enum_basebutton_actionmode">enum <strong>ActionMode</strong>: <reference internal="True" refid="enum-basebutton-actionmode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-basebutton-constant-action-mode-button-press"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-basebutton-constant-action-mode-button-press" names="class_basebutton_constant_action_mode_button_press"><reference internal="True" refid="enum-basebutton-actionmode"><inline classes="std std-ref">ActionMode</inline></reference> <strong>ACTION_MODE_BUTTON_PRESS</strong> = <literal>0</literal></paragraph>
            <paragraph>只需要按一下就可以认为按钮被点击了。</paragraph>
            <target refid="class-basebutton-constant-action-mode-button-release"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-basebutton-constant-action-mode-button-release" names="class_basebutton_constant_action_mode_button_release"><reference internal="True" refid="enum-basebutton-actionmode"><inline classes="std std-ref">ActionMode</inline></reference> <strong>ACTION_MODE_BUTTON_RELEASE</strong> = <literal>1</literal></paragraph>
            <paragraph>要求按下后再释放，才算点击了按钮。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="属性说明">
            <title>属性说明</title>
            <target refid="class-basebutton-property-action-mode"></target>
            <paragraph classes="classref-property" ids="class-basebutton-property-action-mode" names="class_basebutton_property_action_mode"><reference internal="True" refid="enum-basebutton-actionmode"><inline classes="std std-ref">ActionMode</inline></reference> <strong>action_mode</strong> = <literal>1</literal> <reference internal="True" refid="class-basebutton-property-action-mode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_action_mode</strong>(value: <reference internal="True" refid="enum-basebutton-actionmode"><inline classes="std std-ref">ActionMode</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-basebutton-actionmode"><inline classes="std std-ref">ActionMode</inline></reference> <strong>get_action_mode</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>确定按钮何时被认为被点击，是 <reference internal="True" refid="enum-basebutton-actionmode"><inline classes="std std-ref">ActionMode</inline></reference> 常量之一。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-basebutton-property-button-group"></target>
            <paragraph classes="classref-property" ids="class-basebutton-property-button-group" names="class_basebutton_property_button_group"><reference internal="True" refuri="class_buttongroup#class-buttongroup"><inline classes="std std-ref">ButtonGroup</inline></reference> <strong>button_group</strong> <reference internal="True" refid="class-basebutton-property-button-group"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_button_group</strong>(value: <reference internal="True" refuri="class_buttongroup#class-buttongroup"><inline classes="std std-ref">ButtonGroup</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_buttongroup#class-buttongroup"><inline classes="std std-ref">ButtonGroup</inline></reference> <strong>get_button_group</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>与按钮关联的 <reference internal="True" refuri="class_buttongroup#class-buttongroup"><inline classes="std std-ref">ButtonGroup</inline></reference>。不要与节点组混淆。</paragraph>
            <paragraph><strong>注意：</strong>如果按钮被分配了 <reference internal="True" refuri="class_buttongroup#class-buttongroup"><inline classes="std std-ref">ButtonGroup</inline></reference>，则它将被配置为单选按钮。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-basebutton-property-button-mask"></target>
            <paragraph classes="classref-property" ids="class-basebutton-property-button-mask" names="class_basebutton_property_button_mask"><abbreviation explanation="这个值是由下列位标志构成位掩码的整数。">BitField</abbreviation>[<reference internal="True" refuri="class_@globalscope#enum-globalscope-mousebuttonmask"><inline classes="std std-ref">MouseButtonMask</inline></reference>] <strong>button_mask</strong> = <literal>1</literal> <reference internal="True" refid="class-basebutton-property-button-mask"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_button_mask</strong>(value: <abbreviation explanation="这个值是由下列位标志构成位掩码的整数。">BitField</abbreviation>[<reference internal="True" refuri="class_@globalscope#enum-globalscope-mousebuttonmask"><inline classes="std std-ref">MouseButtonMask</inline></reference>])</paragraph>
                </list_item>
                <list_item>
                    <paragraph><abbreviation explanation="这个值是由下列位标志构成位掩码的整数。">BitField</abbreviation>[<reference internal="True" refuri="class_@globalscope#enum-globalscope-mousebuttonmask"><inline classes="std std-ref">MouseButtonMask</inline></reference>] <strong>get_button_mask</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>二进制掩码，用于选择该按钮将响应哪些鼠标按钮。</paragraph>
            <paragraph>要同时允许左键单击和右键单击，请使用 <literal>MOUSE_BUTTON_MASK_LEFT | MOUSE_BUTTON_MASK_RIGHT</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-basebutton-property-button-pressed"></target>
            <paragraph classes="classref-property" ids="class-basebutton-property-button-pressed" names="class_basebutton_property_button_pressed"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>button_pressed</strong> = <literal>false</literal> <reference internal="True" refid="class-basebutton-property-button-pressed"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_pressed</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_pressed</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则该按钮的状态为被按下。表示按钮被按下或被切换（如果 <reference internal="True" refid="class-basebutton-property-toggle-mode"><inline classes="std std-ref">toggle_mode</inline></reference> 处于活动状态）。仅当 <reference internal="True" refid="class-basebutton-property-toggle-mode"><inline classes="std std-ref">toggle_mode</inline></reference> 为 <literal>true</literal> 时才有效。</paragraph>
            <paragraph><strong>注意：</strong>设置 <reference internal="True" refid="class-basebutton-property-button-pressed"><inline classes="std std-ref">button_pressed</inline></reference> 将导致 <reference internal="True" refid="class-basebutton-signal-toggled"><inline classes="std std-ref">toggled</inline></reference> 被发出。如果想在不发出该信号的情况下更改按下状态，请使用 <reference internal="True" refid="class-basebutton-method-set-pressed-no-signal"><inline classes="std std-ref">set_pressed_no_signal</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-basebutton-property-disabled"></target>
            <paragraph classes="classref-property" ids="class-basebutton-property-disabled" names="class_basebutton_property_disabled"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>disabled</strong> = <literal>false</literal> <reference internal="True" refid="class-basebutton-property-disabled"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_disabled</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_disabled</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则该按钮处于禁用状态，无法点击或切换。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-basebutton-property-keep-pressed-outside"></target>
            <paragraph classes="classref-property" ids="class-basebutton-property-keep-pressed-outside" names="class_basebutton_property_keep_pressed_outside"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>keep_pressed_outside</strong> = <literal>false</literal> <reference internal="True" refid="class-basebutton-property-keep-pressed-outside"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_keep_pressed_outside</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_keep_pressed_outside</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，当按下按钮时将光标移到按钮外时，按钮会保持按下状态。</paragraph>
            <paragraph><strong>注意：</strong>该属性只影响按钮的视觉表现。无论该属性的值是多少，信号都会在同一时刻发出。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-basebutton-property-shortcut"></target>
            <paragraph classes="classref-property" ids="class-basebutton-property-shortcut" names="class_basebutton_property_shortcut"><reference internal="True" refuri="class_shortcut#class-shortcut"><inline classes="std std-ref">Shortcut</inline></reference> <strong>shortcut</strong> <reference internal="True" refid="class-basebutton-property-shortcut"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_shortcut</strong>(value: <reference internal="True" refuri="class_shortcut#class-shortcut"><inline classes="std std-ref">Shortcut</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_shortcut#class-shortcut"><inline classes="std std-ref">Shortcut</inline></reference> <strong>get_shortcut</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>与该按钮关联的 <reference internal="True" refuri="class_shortcut#class-shortcut"><inline classes="std std-ref">Shortcut</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-basebutton-property-shortcut-feedback"></target>
            <paragraph classes="classref-property" ids="class-basebutton-property-shortcut-feedback" names="class_basebutton_property_shortcut_feedback"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>shortcut_feedback</strong> = <literal>true</literal> <reference internal="True" refid="class-basebutton-property-shortcut-feedback"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_shortcut_feedback</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_shortcut_feedback</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal> ，则当其快捷方式被激活时，该按钮将高亮一小段时间。如果为 <literal>false</literal> 且 <reference internal="True" refid="class-basebutton-property-toggle-mode"><inline classes="std std-ref">toggle_mode</inline></reference> 为 <literal>false</literal>，则该快捷方式将在没有任何视觉反馈的情况下激活。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-basebutton-property-shortcut-in-tooltip"></target>
            <paragraph classes="classref-property" ids="class-basebutton-property-shortcut-in-tooltip" names="class_basebutton_property_shortcut_in_tooltip"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>shortcut_in_tooltip</strong> = <literal>true</literal> <reference internal="True" refid="class-basebutton-property-shortcut-in-tooltip"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_shortcut_in_tooltip</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_shortcut_in_tooltip_enabled</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，按钮将在工具提示中添加其快捷方式的信息。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-basebutton-property-toggle-mode"></target>
            <paragraph classes="classref-property" ids="class-basebutton-property-toggle-mode" names="class_basebutton_property_toggle_mode"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>toggle_mode</strong> = <literal>false</literal> <reference internal="True" refid="class-basebutton-property-toggle-mode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_toggle_mode</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_toggle_mode</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则按钮处于切换模式。使按钮在每次点击其区域时，在按下和未按下之间转换状态。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id7" names="方法说明">
            <title>方法说明</title>
            <target refid="class-basebutton-private-method-pressed"></target>
            <paragraph classes="classref-method" ids="class-basebutton-private-method-pressed" names="class_basebutton_private_method__pressed"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_pressed</strong>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-basebutton-private-method-pressed"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当按钮被按下时调用。如果你需要知道按钮被按下的状态(并且 <reference internal="True" refid="class-basebutton-property-toggle-mode"><inline classes="std std-ref">toggle_mode</inline></reference> is active]是活动状态)，请使用<reference internal="True" refid="class-basebutton-private-method-toggled"><inline classes="std std-ref">_toggled</inline></reference>代替。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-basebutton-private-method-toggled"></target>
            <paragraph classes="classref-method" ids="class-basebutton-private-method-toggled" names="class_basebutton_private_method__toggled"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_toggled</strong>(toggled_on: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-basebutton-private-method-toggled"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当按钮被切换时调用（仅当 <reference internal="True" refid="class-basebutton-property-toggle-mode"><inline classes="std std-ref">toggle_mode</inline></reference> 处于活动状态时）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-basebutton-method-get-draw-mode"></target>
            <paragraph classes="classref-method" ids="class-basebutton-method-get-draw-mode" names="class_basebutton_method_get_draw_mode"><reference internal="True" refid="enum-basebutton-drawmode"><inline classes="std std-ref">DrawMode</inline></reference> <strong>get_draw_mode</strong>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-basebutton-method-get-draw-mode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回用于绘制按钮的视觉状态。主要可以通过覆盖 _draw() 或连接到“draw”信号来实现你自己的绘制代码。按钮的视觉状态由 <reference internal="True" refid="enum-basebutton-drawmode"><inline classes="std std-ref">DrawMode</inline></reference> 枚举定义。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-basebutton-method-is-hovered"></target>
            <paragraph classes="classref-method" ids="class-basebutton-method-is-hovered" names="class_basebutton_method_is_hovered"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_hovered</strong>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-basebutton-method-is-hovered"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果鼠标已进入按钮，且尚未离开，则返回 <literal>true</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-basebutton-method-set-pressed-no-signal"></target>
            <paragraph classes="classref-method" ids="class-basebutton-method-set-pressed-no-signal" names="class_basebutton_method_set_pressed_no_signal"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_pressed_no_signal</strong>(pressed: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <reference internal="True" refid="class-basebutton-method-set-pressed-no-signal"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>更改按钮的 <reference internal="True" refid="class-basebutton-property-button-pressed"><inline classes="std std-ref">button_pressed</inline></reference> 状态，而不发出 <reference internal="True" refid="class-basebutton-signal-toggled"><inline classes="std std-ref">toggled</inline></reference>。当只想更改按钮的状态而不发送按下的事件时使用（例如，在初始化场景时）。仅当 <reference internal="True" refid="class-basebutton-property-toggle-mode"><inline classes="std std-ref">toggle_mode</inline></reference> 为 <literal>true</literal> 时才有效。</paragraph>
            <paragraph><strong>注意：</strong>该方法不会取消按下 <reference internal="True" refid="class-basebutton-property-button-group"><inline classes="std std-ref">button_group</inline></reference> 中的其他按钮。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效运算符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列位标志构成位掩码的整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

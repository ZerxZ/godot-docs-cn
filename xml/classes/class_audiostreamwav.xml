<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_audiostreamwav.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/AudioStreamWAV.xml.</comment>
    <target refid="class-audiostreamwav"></target>
    <section ids="audiostreamwav class-audiostreamwav" names="audiostreamwav class_audiostreamwav">
        <title>AudioStreamWAV</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_audiostream#class-audiostream"><inline classes="std std-ref">AudioStream</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>存储从 WAV 文件加载的音频数据。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>AudioStreamWAV 存储从 WAV 文件加载的声音样本。要播放存储的声音，请使用 <reference internal="True" refuri="class_audiostreamplayer#class-audiostreamplayer"><inline classes="std std-ref">AudioStreamPlayer</inline></reference>（用于非空间定位音频）或 <reference internal="True" refuri="class_audiostreamplayer2d#class-audiostreamplayer2d"><inline classes="std std-ref">AudioStreamPlayer2D</inline></reference>/<reference internal="True" refuri="class_audiostreamplayer3d#class-audiostreamplayer3d"><inline classes="std std-ref">AudioStreamPlayer3D</inline></reference>（用于空间定位音频）。声音可以循环播放。</paragraph>
            <paragraph>这个类还可用于存储动态生成的 PCM 音频数据。另请参阅 <reference internal="True" refuri="class_audiostreamgenerator#class-audiostreamgenerator"><inline classes="std std-ref">AudioStreamGenerator</inline></reference> 以了解程序化音频生成。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference internal="True" refuri="../tutorials/io/runtime_file_loading_and_saving"><inline classes="doc">运行时文件加载与保存</inline></reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="47"></colspec>
                    <colspec colwidth="61"></colspec>
                    <colspec colwidth="23"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_packedbytearray#class-packedbytearray"><inline classes="std std-ref">PackedByteArray</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamwav-property-data"><inline classes="std std-ref">data</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>PackedByteArray()</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-audiostreamwav-format"><inline classes="std std-ref">Format</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamwav-property-format"><inline classes="std std-ref">format</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamwav-property-loop-begin"><inline classes="std std-ref">loop_begin</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamwav-property-loop-end"><inline classes="std std-ref">loop_end</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-audiostreamwav-loopmode"><inline classes="std std-ref">LoopMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamwav-property-loop-mode"><inline classes="std std-ref">loop_mode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamwav-property-mix-rate"><inline classes="std std-ref">mix_rate</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>44100</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamwav-property-stereo"><inline classes="std std-ref">stereo</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id4" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="39"></colspec>
                    <colspec colwidth="103"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_@globalscope#enum-globalscope-error"><inline classes="std std-ref">Error</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamwav-method-save-to-wav"><inline classes="std std-ref">save_to_wav</inline></reference>(path: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>)</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="枚举">
            <title>枚举</title>
            <target refid="enum-audiostreamwav-format"></target>
            <paragraph classes="classref-enumeration" ids="enum-audiostreamwav-format" names="enum_audiostreamwav_format">enum <strong>Format</strong>: <reference internal="True" refid="enum-audiostreamwav-format"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-audiostreamwav-constant-format-8-bits"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-audiostreamwav-constant-format-8-bits" names="class_audiostreamwav_constant_format_8_bits"><reference internal="True" refid="enum-audiostreamwav-format"><inline classes="std std-ref">Format</inline></reference> <strong>FORMAT_8_BITS</strong> = <literal>0</literal></paragraph>
            <paragraph>8 位音频编解码器。</paragraph>
            <target refid="class-audiostreamwav-constant-format-16-bits"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-audiostreamwav-constant-format-16-bits" names="class_audiostreamwav_constant_format_16_bits"><reference internal="True" refid="enum-audiostreamwav-format"><inline classes="std std-ref">Format</inline></reference> <strong>FORMAT_16_BITS</strong> = <literal>1</literal></paragraph>
            <paragraph>16 位音频编解码器。</paragraph>
            <target refid="class-audiostreamwav-constant-format-ima-adpcm"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-audiostreamwav-constant-format-ima-adpcm" names="class_audiostreamwav_constant_format_ima_adpcm"><reference internal="True" refid="enum-audiostreamwav-format"><inline classes="std std-ref">Format</inline></reference> <strong>FORMAT_IMA_ADPCM</strong> = <literal>2</literal></paragraph>
            <paragraph>音频使用 IMA ADPCM 进行压缩。</paragraph>
            <target refid="class-audiostreamwav-constant-format-qoa"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-audiostreamwav-constant-format-qoa" names="class_audiostreamwav_constant_format_qoa"><reference internal="True" refid="enum-audiostreamwav-format"><inline classes="std std-ref">Format</inline></reference> <strong>FORMAT_QOA</strong> = <literal>3</literal></paragraph>
            <paragraph>音频按照 QOA 进行压缩（<reference name="Quite OK Audio" refuri="https://qoaformat.org/">Quite OK Audio</reference>）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-audiostreamwav-loopmode"></target>
            <paragraph classes="classref-enumeration" ids="enum-audiostreamwav-loopmode" names="enum_audiostreamwav_loopmode">enum <strong>LoopMode</strong>: <reference internal="True" refid="enum-audiostreamwav-loopmode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-audiostreamwav-constant-loop-disabled"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-audiostreamwav-constant-loop-disabled" names="class_audiostreamwav_constant_loop_disabled"><reference internal="True" refid="enum-audiostreamwav-loopmode"><inline classes="std std-ref">LoopMode</inline></reference> <strong>LOOP_DISABLED</strong> = <literal>0</literal></paragraph>
            <paragraph>音频不循环。</paragraph>
            <target refid="class-audiostreamwav-constant-loop-forward"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-audiostreamwav-constant-loop-forward" names="class_audiostreamwav_constant_loop_forward"><reference internal="True" refid="enum-audiostreamwav-loopmode"><inline classes="std std-ref">LoopMode</inline></reference> <strong>LOOP_FORWARD</strong> = <literal>1</literal></paragraph>
            <paragraph>音频在 <reference internal="True" refid="class-audiostreamwav-property-loop-begin"><inline classes="std std-ref">loop_begin</inline></reference> 和 <reference internal="True" refid="class-audiostreamwav-property-loop-end"><inline classes="std std-ref">loop_end</inline></reference> 之间循环数据，仅向前播放。</paragraph>
            <target refid="class-audiostreamwav-constant-loop-pingpong"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-audiostreamwav-constant-loop-pingpong" names="class_audiostreamwav_constant_loop_pingpong"><reference internal="True" refid="enum-audiostreamwav-loopmode"><inline classes="std std-ref">LoopMode</inline></reference> <strong>LOOP_PINGPONG</strong> = <literal>2</literal></paragraph>
            <paragraph>音频在 <reference internal="True" refid="class-audiostreamwav-property-loop-begin"><inline classes="std std-ref">loop_begin</inline></reference> 和 <reference internal="True" refid="class-audiostreamwav-property-loop-end"><inline classes="std std-ref">loop_end</inline></reference> 之间循环数据，来回播放。</paragraph>
            <target refid="class-audiostreamwav-constant-loop-backward"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-audiostreamwav-constant-loop-backward" names="class_audiostreamwav_constant_loop_backward"><reference internal="True" refid="enum-audiostreamwav-loopmode"><inline classes="std std-ref">LoopMode</inline></reference> <strong>LOOP_BACKWARD</strong> = <literal>3</literal></paragraph>
            <paragraph>音频在 <reference internal="True" refid="class-audiostreamwav-property-loop-begin"><inline classes="std std-ref">loop_begin</inline></reference> 和 <reference internal="True" refid="class-audiostreamwav-property-loop-end"><inline classes="std std-ref">loop_end</inline></reference> 之间循环数据，仅向后播放。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="属性说明">
            <title>属性说明</title>
            <target refid="class-audiostreamwav-property-data"></target>
            <paragraph classes="classref-property" ids="class-audiostreamwav-property-data" names="class_audiostreamwav_property_data"><reference internal="True" refuri="class_packedbytearray#class-packedbytearray"><inline classes="std std-ref">PackedByteArray</inline></reference> <strong>data</strong> = <literal>PackedByteArray()</literal> <reference internal="True" refid="class-audiostreamwav-property-data"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_data</strong>(value: <reference internal="True" refuri="class_packedbytearray#class-packedbytearray"><inline classes="std std-ref">PackedByteArray</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_packedbytearray#class-packedbytearray"><inline classes="std std-ref">PackedByteArray</inline></reference> <strong>get_data</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>包含以字节为单位的音频数据。</paragraph>
            <paragraph><strong>注意：</strong>此属性需要有符号的 PCM8 数据。要将无符号的 PCM8 转换为有符号的 PCM8，需要从每个字节中减去 128。</paragraph>
            <paragraph><strong>Note:</strong> The returned array is <emphasis>copied</emphasis> and any changes to it will not update the original property value. See <reference internal="True" refuri="class_packedbytearray#class-packedbytearray"><inline classes="std std-ref">PackedByteArray</inline></reference> for more details.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamwav-property-format"></target>
            <paragraph classes="classref-property" ids="class-audiostreamwav-property-format" names="class_audiostreamwav_property_format"><reference internal="True" refid="enum-audiostreamwav-format"><inline classes="std std-ref">Format</inline></reference> <strong>format</strong> = <literal>0</literal> <reference internal="True" refid="class-audiostreamwav-property-format"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_format</strong>(value: <reference internal="True" refid="enum-audiostreamwav-format"><inline classes="std std-ref">Format</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-audiostreamwav-format"><inline classes="std std-ref">Format</inline></reference> <strong>get_format</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>音频格式。取值见 <reference internal="True" refid="enum-audiostreamwav-format"><inline classes="std std-ref">Format</inline></reference> 常量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamwav-property-loop-begin"></target>
            <paragraph classes="classref-property" ids="class-audiostreamwav-property-loop-begin" names="class_audiostreamwav_property_loop_begin"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>loop_begin</strong> = <literal>0</literal> <reference internal="True" refid="class-audiostreamwav-property-loop-begin"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_loop_begin</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_loop_begin</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>循环起始点（相对于样本开始的样本数）。如果 WAV 文件中存在此信息，则将自动导入。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamwav-property-loop-end"></target>
            <paragraph classes="classref-property" ids="class-audiostreamwav-property-loop-end" names="class_audiostreamwav_property_loop_end"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>loop_end</strong> = <literal>0</literal> <reference internal="True" refid="class-audiostreamwav-property-loop-end"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_loop_end</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_loop_end</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>循环结束点（相对于样本开始的样本数）。如果 WAV 文件中存在此信息，则将自动导入。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamwav-property-loop-mode"></target>
            <paragraph classes="classref-property" ids="class-audiostreamwav-property-loop-mode" names="class_audiostreamwav_property_loop_mode"><reference internal="True" refid="enum-audiostreamwav-loopmode"><inline classes="std std-ref">LoopMode</inline></reference> <strong>loop_mode</strong> = <literal>0</literal> <reference internal="True" refid="class-audiostreamwav-property-loop-mode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_loop_mode</strong>(value: <reference internal="True" refid="enum-audiostreamwav-loopmode"><inline classes="std std-ref">LoopMode</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-audiostreamwav-loopmode"><inline classes="std std-ref">LoopMode</inline></reference> <strong>get_loop_mode</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>循环模式。如果 WAV 文件中存在此信息，则将自动导入。取值请参阅 <reference internal="True" refid="enum-audiostreamwav-loopmode"><inline classes="std std-ref">LoopMode</inline></reference> 常量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamwav-property-mix-rate"></target>
            <paragraph classes="classref-property" ids="class-audiostreamwav-property-mix-rate" names="class_audiostreamwav_property_mix_rate"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>mix_rate</strong> = <literal>44100</literal> <reference internal="True" refid="class-audiostreamwav-property-mix-rate"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_mix_rate</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_mix_rate</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>混合这个音频的采样率。更高的数值需要更多的存储空间，但会带来更好的质量。</paragraph>
            <paragraph>在游戏中，常用的采样率有 <literal>11025</literal>、<literal>16000</literal>、<literal>22050</literal>、<literal>32000</literal>、<literal>44100</literal>、<literal>48000</literal>。</paragraph>
            <paragraph>根据<reference name="奈奎斯特–香农采样定理" refuri="https://zh.wikipedia.org/wiki/%E9%87%87%E6%A0%B7%E5%AE%9A%E7%90%86">奈奎斯特–香农采样定理</reference>，当超过 40000 赫兹时，人类的听觉没有质量上的差别（因为大多数人只能听到 ~20000 赫兹，往往更少）。如果你要使用语音等音高较低的声音，则可以使用 <literal>32000</literal> 或 <literal>22050</literal> 等较低的采样率，不会降低质量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamwav-property-stereo"></target>
            <paragraph classes="classref-property" ids="class-audiostreamwav-property-stereo" names="class_audiostreamwav_property_stereo"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>stereo</strong> = <literal>false</literal> <reference internal="True" refid="class-audiostreamwav-property-stereo"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_stereo</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_stereo</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则音频为立体声。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id7" names="方法说明">
            <title>方法说明</title>
            <target refid="class-audiostreamwav-method-save-to-wav"></target>
            <paragraph classes="classref-method" ids="class-audiostreamwav-method-save-to-wav" names="class_audiostreamwav_method_save_to_wav"><reference internal="True" refuri="class_@globalscope#enum-globalscope-error"><inline classes="std std-ref">Error</inline></reference> <strong>save_to_wav</strong>(path: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <reference internal="True" refid="class-audiostreamwav-method-save-to-wav"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将 AudioStreamWAV 作为 WAV 文件保存到 <literal>path</literal>。无法保存 IMA ADPCM 或 QOA 格式的样本。</paragraph>
            <paragraph><strong>注意：</strong>如果缺少 <literal>.wav</literal> 扩展名，则会自动将其追加到 <literal>path</literal>。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

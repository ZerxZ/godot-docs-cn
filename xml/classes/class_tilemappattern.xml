<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_tilemappattern.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/TileMapPattern.xml.</comment>
    <target refid="class-tilemappattern"></target>
    <section ids="tilemappattern class-tilemappattern" names="tilemappattern class_tilemappattern">
        <title>TileMapPattern</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>存放 <reference internal="True" refuri="class_tilemap#class-tilemap"><inline classes="std std-ref">TileMap</inline></reference> 的图案，用于复制粘贴。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>这个资源存放的是一组单元格，能够帮助进行 <reference internal="True" refuri="class_tilemap#class-tilemap"><inline classes="std std-ref">TileMap</inline></reference> 的批量操作。</paragraph>
            <paragraph>图案始终从 <literal>(0,0)</literal> 坐标开始，不能存在负数坐标的单元格。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="62"></colspec>
                    <colspec colwidth="257"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tilemappattern-method-get-cell-alternative-tile"><inline classes="std std-ref">get_cell_alternative_tile</inline></reference>(coords: <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tilemappattern-method-get-cell-atlas-coords"><inline classes="std std-ref">get_cell_atlas_coords</inline></reference>(coords: <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tilemappattern-method-get-cell-source-id"><inline classes="std std-ref">get_cell_source_id</inline></reference>(coords: <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tilemappattern-method-get-size"><inline classes="std std-ref">get_size</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference>]</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tilemappattern-method-get-used-cells"><inline classes="std std-ref">get_used_cells</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tilemappattern-method-has-cell"><inline classes="std std-ref">has_cell</inline></reference>(coords: <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tilemappattern-method-is-empty"><inline classes="std std-ref">is_empty</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tilemappattern-method-remove-cell"><inline classes="std std-ref">remove_cell</inline></reference>(coords: <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference>, update_size: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tilemappattern-method-set-cell"><inline classes="std std-ref">set_cell</inline></reference>(coords: <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference>, source_id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> = -1, atlas_coords: <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> = Vector2i(-1, -1), alternative_tile: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> = -1)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tilemappattern-method-set-size"><inline classes="std std-ref">set_size</inline></reference>(size: <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference>)</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="方法说明">
            <title>方法说明</title>
            <target refid="class-tilemappattern-method-get-cell-alternative-tile"></target>
            <paragraph classes="classref-method" ids="class-tilemappattern-method-get-cell-alternative-tile" names="class_tilemappattern_method_get_cell_alternative_tile"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_cell_alternative_tile</strong>(coords: <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tilemappattern-method-get-cell-alternative-tile"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回位于 <literal>coords</literal> 的单元格的备选图块 ID。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tilemappattern-method-get-cell-atlas-coords"></target>
            <paragraph classes="classref-method" ids="class-tilemappattern-method-get-cell-atlas-coords" names="class_tilemappattern_method_get_cell_atlas_coords"><reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> <strong>get_cell_atlas_coords</strong>(coords: <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tilemappattern-method-get-cell-atlas-coords"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回位于 <literal>coords</literal> 的单元格的图块图集坐标 ID。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tilemappattern-method-get-cell-source-id"></target>
            <paragraph classes="classref-method" ids="class-tilemappattern-method-get-cell-source-id" names="class_tilemappattern_method_get_cell_source_id"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_cell_source_id</strong>(coords: <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tilemappattern-method-get-cell-source-id"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回位于 <literal>coords</literal> 的单元格的图块源 ID。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tilemappattern-method-get-size"></target>
            <paragraph classes="classref-method" ids="class-tilemappattern-method-get-size" names="class_tilemappattern_method_get_size"><reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> <strong>get_size</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tilemappattern-method-get-size"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回该图案的大小（单位为单元格）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tilemappattern-method-get-used-cells"></target>
            <paragraph classes="classref-method" ids="class-tilemappattern-method-get-used-cells" names="class_tilemappattern_method_get_used_cells"><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference>] <strong>get_used_cells</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tilemappattern-method-get-used-cells"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回该图案中使用的单元格坐标列表。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tilemappattern-method-has-cell"></target>
            <paragraph classes="classref-method" ids="class-tilemappattern-method-has-cell" names="class_tilemappattern_method_has_cell"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>has_cell</strong>(coords: <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tilemappattern-method-has-cell"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回该图案是否在给定坐标处有图块。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tilemappattern-method-is-empty"></target>
            <paragraph classes="classref-method" ids="class-tilemappattern-method-is-empty" names="class_tilemappattern_method_is_empty"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_empty</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tilemappattern-method-is-empty"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回该图案是否为空。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tilemappattern-method-remove-cell"></target>
            <paragraph classes="classref-method" ids="class-tilemappattern-method-remove-cell" names="class_tilemappattern_method_remove_cell"><abbreviation explanation="无返回值。">void</abbreviation> <strong>remove_cell</strong>(coords: <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference>, update_size: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <reference internal="True" refid="class-tilemappattern-method-remove-cell"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>移除给定坐标的单元格。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tilemappattern-method-set-cell"></target>
            <paragraph classes="classref-method" ids="class-tilemappattern-method-set-cell" names="class_tilemappattern_method_set_cell"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_cell</strong>(coords: <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference>, source_id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> = -1, atlas_coords: <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> = Vector2i(-1, -1), alternative_tile: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> = -1) <reference internal="True" refid="class-tilemappattern-method-set-cell"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置位于 <literal>coords</literal> 的单元格的图块标识符。见 <reference internal="True" refuri="class_tilemap#class-tilemap-method-set-cell"><inline classes="std std-ref">TileMap.set_cell</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tilemappattern-method-set-size"></target>
            <paragraph classes="classref-method" ids="class-tilemappattern-method-set-size" names="class_tilemappattern_method_set_size"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_size</strong>(size: <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference>) <reference internal="True" refid="class-tilemappattern-method-set-size"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置图案的大小。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

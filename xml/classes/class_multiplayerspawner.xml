<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_multiplayerspawner.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/4.2/modules/multiplayer/doc_classes/MultiplayerSpawner.xml.</comment>
    <target refid="class-multiplayerspawner"></target>
    <section ids="multiplayerspawner class-multiplayerspawner" names="multiplayerspawner class_multiplayerspawner">
        <title>MultiplayerSpawner</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>自动将可出生节点从授权端复制到其他多人对等体。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>可出生的场景可以在编辑器中或通过代码配置（参阅 <reference internal="True" refid="class-multiplayerspawner-method-add-spawnable-scene"><inline classes="std std-ref">add_spawnable_scene</inline></reference>）。</paragraph>
            <paragraph>还支持通过在所有对等体上调用 <reference internal="True" refid="class-multiplayerspawner-property-spawn-function"><inline classes="std std-ref">spawn_function</inline></reference>，通过 <reference internal="True" refid="class-multiplayerspawner-method-spawn"><inline classes="std std-ref">spawn</inline></reference> 自定义节点出生。</paragraph>
            <paragraph>在内部，<strong>MultiplayerSpawner</strong> 使用 <reference internal="True" refuri="class_multiplayerapi#class-multiplayerapi-method-object-configuration-add"><inline classes="std std-ref">MultiplayerAPI.object_configuration_add</inline></reference> 来通知出生， 需将出生的节点作为 <literal>object</literal>，并将其自身作为 <literal>configuration</literal> 传入；并使用 <reference internal="True" refuri="class_multiplayerapi#class-multiplayerapi-method-object-configuration-remove"><inline classes="std std-ref">MultiplayerAPI.object_configuration_remove</inline></reference> 以类似的方式通知消失。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="33"></colspec>
                    <colspec colwidth="73"></colspec>
                    <colspec colwidth="18"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_callable#class-callable"><inline classes="std std-ref">Callable</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-multiplayerspawner-property-spawn-function"><inline classes="std std-ref">spawn_function</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-multiplayerspawner-property-spawn-limit"><inline classes="std std-ref">spawn_limit</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-multiplayerspawner-property-spawn-path"><inline classes="std std-ref">spawn_path</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>NodePath("")</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="29"></colspec>
                    <colspec colwidth="129"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-multiplayerspawner-method-add-spawnable-scene"><inline classes="std std-ref">add_spawnable_scene</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> path <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-multiplayerspawner-method-clear-spawnable-scenes"><inline classes="std std-ref">clear_spawnable_scenes</inline></reference> <strong>(</strong> <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-multiplayerspawner-method-get-spawnable-scene"><inline classes="std std-ref">get_spawnable_scene</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-multiplayerspawner-method-get-spawnable-scene-count"><inline classes="std std-ref">get_spawnable_scene_count</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-multiplayerspawner-method-spawn"><inline classes="std std-ref">spawn</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> data=null <strong>)</strong></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="信号">
            <title>信号</title>
            <target refid="class-multiplayerspawner-signal-despawned"></target>
            <paragraph classes="classref-signal" ids="class-multiplayerspawner-signal-despawned" names="class_multiplayerspawner_signal_despawned"><strong>despawned</strong> <strong>(</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> node <strong>)</strong></paragraph>
            <paragraph>当可生成场景或自定义生成被多人游戏授权端消除时发出。只在傀儡端调用。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-multiplayerspawner-signal-spawned"></target>
            <paragraph classes="classref-signal" ids="class-multiplayerspawner-signal-spawned" names="class_multiplayerspawner_signal_spawned"><strong>spawned</strong> <strong>(</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> node <strong>)</strong></paragraph>
            <paragraph>当可生成场景或自定义生成被多人游戏授权端生成时发出。只在傀儡端调用。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="属性说明">
            <title>属性说明</title>
            <target refid="class-multiplayerspawner-property-spawn-function"></target>
            <paragraph classes="classref-property" ids="class-multiplayerspawner-property-spawn-function" names="class_multiplayerspawner_property_spawn_function"><reference internal="True" refuri="class_callable#class-callable"><inline classes="std std-ref">Callable</inline></reference> <strong>spawn_function</strong></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_spawn_function</strong> <strong>(</strong> <reference internal="True" refuri="class_callable#class-callable"><inline classes="std std-ref">Callable</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_callable#class-callable"><inline classes="std std-ref">Callable</inline></reference> <strong>get_spawn_function</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>当每个自定义 <reference internal="True" refid="class-multiplayerspawner-method-spawn"><inline classes="std std-ref">spawn</inline></reference> 被授权端请求时，在所有对等体上调用的方法。将接收 <literal>data</literal> 参数，并且应该返回一个不在场景树中的 <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference>。</paragraph>
            <paragraph><strong>注意：</strong>返回的节点<strong>不</strong>应该用 <reference internal="True" refuri="class_node#class-node-method-add-child"><inline classes="std std-ref">Node.add_child</inline></reference> 添加到场景中。这是自动完成的。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-multiplayerspawner-property-spawn-limit"></target>
            <paragraph classes="classref-property" ids="class-multiplayerspawner-property-spawn-limit" names="class_multiplayerspawner_property_spawn_limit"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>spawn_limit</strong> = <literal>0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_spawn_limit</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_spawn_limit</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>该出生器允许出生的最大节点数。包括可出生场景和自定义出生。</paragraph>
            <paragraph>当设置为 <literal>0</literal>（默认值）时，没有限制。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-multiplayerspawner-property-spawn-path"></target>
            <paragraph classes="classref-property" ids="class-multiplayerspawner-property-spawn-path" names="class_multiplayerspawner_property_spawn_path"><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> <strong>spawn_path</strong> = <literal>NodePath("")</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_spawn_path</strong> <strong>(</strong> <reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> <strong>get_spawn_path</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>到出生的根的路径。作为直接子节点被添加的可出生场景，会被复制到其他对等体。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="方法说明">
            <title>方法说明</title>
            <target refid="class-multiplayerspawner-method-add-spawnable-scene"></target>
            <paragraph classes="classref-method" ids="class-multiplayerspawner-method-add-spawnable-scene" names="class_multiplayerspawner_method_add_spawnable_scene">void <strong>add_spawnable_scene</strong> <strong>(</strong> <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> path <strong>)</strong></paragraph>
            <paragraph>将场景路径添加到可出生的场景中，使其在添加为 <reference internal="True" refid="class-multiplayerspawner-property-spawn-path"><inline classes="std std-ref">spawn_path</inline></reference> 指向的节点的子节点时，自动从多人游戏授权端，复制到其他对等体。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-multiplayerspawner-method-clear-spawnable-scenes"></target>
            <paragraph classes="classref-method" ids="class-multiplayerspawner-method-clear-spawnable-scenes" names="class_multiplayerspawner_method_clear_spawnable_scenes">void <strong>clear_spawnable_scenes</strong> <strong>(</strong> <strong>)</strong></paragraph>
            <paragraph>清除所有可生成的场景。不会在远程对等体上消除现有实例。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-multiplayerspawner-method-get-spawnable-scene"></target>
            <paragraph classes="classref-method" ids="class-multiplayerspawner-method-get-spawnable-scene" names="class_multiplayerspawner_method_get_spawnable_scene"><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>get_spawnable_scene</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> index <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>按索引返回可生成场景的路径。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-multiplayerspawner-method-get-spawnable-scene-count"></target>
            <paragraph classes="classref-method" ids="class-multiplayerspawner-method-get-spawnable-scene-count" names="class_multiplayerspawner_method_get_spawnable_scene_count"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_spawnable_scene_count</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回可生成场景路径的数量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-multiplayerspawner-method-spawn"></target>
            <paragraph classes="classref-method" ids="class-multiplayerspawner-method-spawn" names="class_multiplayerspawner_method_spawn"><reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>spawn</strong> <strong>(</strong> <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> data=null <strong>)</strong></paragraph>
            <paragraph>请求进行一次自定义出生，<literal>data</literal> 将被传递给所有对等体的 <reference internal="True" refid="class-multiplayerspawner-property-spawn-function"><inline classes="std std-ref">spawn_function</inline></reference>。返回本地出生的节点实例，该节点实例已经在场景树中，并被添加为 <reference internal="True" refid="class-multiplayerspawner-property-spawn-path"><inline classes="std std-ref">spawn_path</inline></reference> 指向的节点的子节点。</paragraph>
            <paragraph><strong>注意：</strong>可出生的场景是自动出生的。<reference internal="True" refid="class-multiplayerspawner-method-spawn"><inline classes="std std-ref">spawn</inline></reference> 仅在自定义出生时需要。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，所以可以直接使用类名调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

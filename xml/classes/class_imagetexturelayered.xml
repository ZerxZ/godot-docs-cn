<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_imagetexturelayered.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/ImageTextureLayered.xml.</comment>
    <target refid="class-imagetexturelayered"></target>
    <section ids="imagetexturelayered class-imagetexturelayered" names="imagetexturelayered class_imagetexturelayered">
        <title>ImageTextureLayered</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_texturelayered#class-texturelayered"><inline classes="std std-ref">TextureLayered</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_texture#class-texture"><inline classes="std std-ref">Texture</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph><strong>派生：</strong> <reference internal="True" refuri="class_cubemap#class-cubemap"><inline classes="std std-ref">Cubemap</inline></reference>, <reference internal="True" refuri="class_cubemaparray#class-cubemaparray"><inline classes="std std-ref">CubemapArray</inline></reference>, <reference internal="True" refuri="class_texture2darray#class-texture2darray"><inline classes="std std-ref">Texture2DArray</inline></reference></paragraph>
        <paragraph>纹理类型的基类，包含多个 <reference internal="True" refuri="class_imagetexture#class-imagetexture"><inline classes="std std-ref">ImageTexture</inline></reference> 的数据。各个图像具有相同的大小和格式。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph><reference internal="True" refuri="class_texture2darray#class-texture2darray"><inline classes="std std-ref">Texture2DArray</inline></reference>、<reference internal="True" refuri="class_cubemap#class-cubemap"><inline classes="std std-ref">Cubemap</inline></reference> 和 <reference internal="True" refuri="class_cubemaparray#class-cubemaparray"><inline classes="std std-ref">CubemapArray</inline></reference> 的基类。不能直接使用，但包含了访问派生资源类型所需的所有函数。另请参阅 <reference internal="True" refuri="class_texture3d#class-texture3d"><inline classes="std std-ref">Texture3D</inline></reference>。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="39"></colspec>
                    <colspec colwidth="151"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_@globalscope#enum-globalscope-error"><inline classes="std std-ref">Error</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-imagetexturelayered-method-create-from-images"><inline classes="std std-ref">create_from_images</inline></reference>(images: <reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_image#class-image"><inline classes="std std-ref">Image</inline></reference>])</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-imagetexturelayered-method-update-layer"><inline classes="std std-ref">update_layer</inline></reference>(image: <reference internal="True" refuri="class_image#class-image"><inline classes="std std-ref">Image</inline></reference>, layer: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="方法说明">
            <title>方法说明</title>
            <target refid="class-imagetexturelayered-method-create-from-images"></target>
            <paragraph classes="classref-method" ids="class-imagetexturelayered-method-create-from-images" names="class_imagetexturelayered_method_create_from_images"><reference internal="True" refuri="class_@globalscope#enum-globalscope-error"><inline classes="std std-ref">Error</inline></reference> <strong>create_from_images</strong>(images: <reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_image#class-image"><inline classes="std std-ref">Image</inline></reference>]) <reference internal="True" refid="class-imagetexturelayered-method-create-from-images"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>从一组 <reference internal="True" refuri="class_image#class-image"><inline classes="std std-ref">Image</inline></reference> 创建一个 <strong>ImageTextureLayered</strong>。有关预期的数据格式，请参阅 <reference internal="True" refuri="class_image#class-image-method-create"><inline classes="std std-ref">Image.create</inline></reference>。第一张图像决定宽度、高度、图像格式和 mipmapping 设置。其他图像<emphasis>必须</emphasis>具有相同的宽度、高度、图像格式和 mipmapping 设置。</paragraph>
            <paragraph>每个 <reference internal="True" refuri="class_image#class-image"><inline classes="std std-ref">Image</inline></reference> 代表一个 <literal>layer</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-imagetexturelayered-method-update-layer"></target>
            <paragraph classes="classref-method" ids="class-imagetexturelayered-method-update-layer" names="class_imagetexturelayered_method_update_layer"><abbreviation explanation="无返回值。">void</abbreviation> <strong>update_layer</strong>(image: <reference internal="True" refuri="class_image#class-image"><inline classes="std std-ref">Image</inline></reference>, layer: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-imagetexturelayered-method-update-layer"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>用这个新图像替换给定 <literal>layer</literal> 的现有 <reference internal="True" refuri="class_image#class-image"><inline classes="std std-ref">Image</inline></reference> 数据。</paragraph>
            <paragraph>给定的 <reference internal="True" refuri="class_image#class-image"><inline classes="std std-ref">Image</inline></reference> 必须与其余引用的图像具有相同的宽度、高度、图像格式和多级渐远纹理标志。</paragraph>
            <paragraph>如果图像格式不受支持，它将被解压缩并转换为一个相似且受支持的 <reference internal="True" refuri="class_image#enum-image-format"><inline classes="std std-ref">Format</inline></reference>。</paragraph>
            <paragraph>更新是即时的：它与绘制同步。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_physicsdirectbodystate2d.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/PhysicsDirectBodyState2D.xml.</comment>
    <target refid="class-physicsdirectbodystate2d"></target>
    <section ids="physicsdirectbodystate2d class-physicsdirectbodystate2d" names="physicsdirectbodystate2d class_physicsdirectbodystate2d">
        <title>PhysicsDirectBodyState2D</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph><strong>派生：</strong> <reference internal="True" refuri="class_physicsdirectbodystate2dextension#class-physicsdirectbodystate2dextension"><inline classes="std std-ref">PhysicsDirectBodyState2DExtension</inline></reference></paragraph>
        <paragraph>提供对 <reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d"><inline classes="std std-ref">PhysicsServer2D</inline></reference> 中物理体的直接访问。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>提供对 <reference internal="True" refuri="class_physicsserver2d#class-physicsserver2d"><inline classes="std std-ref">PhysicsServer2D</inline></reference> 中物理体的直接访问，从而安全地更改物理属性。该对象会在 <reference internal="True" refuri="class_rigidbody2d#class-rigidbody2d"><inline classes="std std-ref">RigidBody2D</inline></reference> 的直接状态回调中传递，目的是为了改变物体的直接状态。见 <reference internal="True" refuri="class_rigidbody2d#class-rigidbody2d-private-method-integrate-forces"><inline classes="std std-ref">RigidBody2D._integrate_forces</inline></reference>。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference internal="True" refuri="../tutorials/physics/physics_introduction"><inline classes="doc">物理介绍</inline></reference></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="../tutorials/physics/ray-casting"><inline classes="doc">发射射线</inline></reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="39"></colspec>
                    <colspec colwidth="91"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2d-property-angular-velocity"><inline classes="std std-ref">angular_velocity</inline></reference></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2d-property-center-of-mass"><inline classes="std std-ref">center_of_mass</inline></reference></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2d-property-center-of-mass-local"><inline classes="std std-ref">center_of_mass_local</inline></reference></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2d-property-inverse-inertia"><inline classes="std std-ref">inverse_inertia</inline></reference></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2d-property-inverse-mass"><inline classes="std std-ref">inverse_mass</inline></reference></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2d-property-linear-velocity"><inline classes="std std-ref">linear_velocity</inline></reference></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2d-property-sleeping"><inline classes="std std-ref">sleeping</inline></reference></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2d-property-step"><inline classes="std std-ref">step</inline></reference></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2d-property-total-angular-damp"><inline classes="std std-ref">total_angular_damp</inline></reference></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2d-property-total-gravity"><inline classes="std std-ref">total_gravity</inline></reference></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2d-property-total-linear-damp"><inline classes="std std-ref">total_linear_damp</inline></reference></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2d-property-transform"><inline classes="std std-ref">transform</inline></reference></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id4" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="67"></colspec>
                    <colspec colwidth="188"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2d-method-add-constant-central-force"><inline classes="std std-ref">add_constant_central_force</inline></reference>(force: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> = Vector2(0, 0))</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2d-method-add-constant-force"><inline classes="std std-ref">add_constant_force</inline></reference>(force: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>, position: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> = Vector2(0, 0))</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2d-method-add-constant-torque"><inline classes="std std-ref">add_constant_torque</inline></reference>(torque: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2d-method-apply-central-force"><inline classes="std std-ref">apply_central_force</inline></reference>(force: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> = Vector2(0, 0))</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2d-method-apply-central-impulse"><inline classes="std std-ref">apply_central_impulse</inline></reference>(impulse: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2d-method-apply-force"><inline classes="std std-ref">apply_force</inline></reference>(force: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>, position: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> = Vector2(0, 0))</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2d-method-apply-impulse"><inline classes="std std-ref">apply_impulse</inline></reference>(impulse: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>, position: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> = Vector2(0, 0))</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2d-method-apply-torque"><inline classes="std std-ref">apply_torque</inline></reference>(torque: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2d-method-apply-torque-impulse"><inline classes="std std-ref">apply_torque_impulse</inline></reference>(impulse: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2d-method-get-constant-force"><inline classes="std std-ref">get_constant_force</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2d-method-get-constant-torque"><inline classes="std std-ref">get_constant_torque</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2d-method-get-contact-collider"><inline classes="std std-ref">get_contact_collider</inline></reference>(contact_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2d-method-get-contact-collider-id"><inline classes="std std-ref">get_contact_collider_id</inline></reference>(contact_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2d-method-get-contact-collider-object"><inline classes="std std-ref">get_contact_collider_object</inline></reference>(contact_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2d-method-get-contact-collider-position"><inline classes="std std-ref">get_contact_collider_position</inline></reference>(contact_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2d-method-get-contact-collider-shape"><inline classes="std std-ref">get_contact_collider_shape</inline></reference>(contact_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2d-method-get-contact-collider-velocity-at-position"><inline classes="std std-ref">get_contact_collider_velocity_at_position</inline></reference>(contact_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2d-method-get-contact-count"><inline classes="std std-ref">get_contact_count</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2d-method-get-contact-impulse"><inline classes="std std-ref">get_contact_impulse</inline></reference>(contact_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2d-method-get-contact-local-normal"><inline classes="std std-ref">get_contact_local_normal</inline></reference>(contact_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2d-method-get-contact-local-position"><inline classes="std std-ref">get_contact_local_position</inline></reference>(contact_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2d-method-get-contact-local-shape"><inline classes="std std-ref">get_contact_local_shape</inline></reference>(contact_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2d-method-get-contact-local-velocity-at-position"><inline classes="std std-ref">get_contact_local_velocity_at_position</inline></reference>(contact_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_physicsdirectspacestate2d#class-physicsdirectspacestate2d"><inline classes="std std-ref">PhysicsDirectSpaceState2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2d-method-get-space-state"><inline classes="std std-ref">get_space_state</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2d-method-get-velocity-at-local-position"><inline classes="std std-ref">get_velocity_at_local_position</inline></reference>(local_position: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2d-method-integrate-forces"><inline classes="std std-ref">integrate_forces</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2d-method-set-constant-force"><inline classes="std std-ref">set_constant_force</inline></reference>(force: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsdirectbodystate2d-method-set-constant-torque"><inline classes="std std-ref">set_constant_torque</inline></reference>(torque: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="属性说明">
            <title>属性说明</title>
            <target refid="class-physicsdirectbodystate2d-property-angular-velocity"></target>
            <paragraph classes="classref-property" ids="class-physicsdirectbodystate2d-property-angular-velocity" names="class_physicsdirectbodystate2d_property_angular_velocity"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>angular_velocity</strong> <reference internal="True" refid="class-physicsdirectbodystate2d-property-angular-velocity"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_angular_velocity</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_angular_velocity</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>物体的旋转速度，单位为<emphasis>弧度</emphasis>每秒。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2d-property-center-of-mass"></target>
            <paragraph classes="classref-property" ids="class-physicsdirectbodystate2d-property-center-of-mass" names="class_physicsdirectbodystate2d_property_center_of_mass"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>center_of_mass</strong> <reference internal="True" refid="class-physicsdirectbodystate2d-property-center-of-mass"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>get_center_of_mass</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>该物体质心的位置，相对于该物体的中心，使用全局坐标系。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2d-property-center-of-mass-local"></target>
            <paragraph classes="classref-property" ids="class-physicsdirectbodystate2d-property-center-of-mass-local" names="class_physicsdirectbodystate2d_property_center_of_mass_local"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>center_of_mass_local</strong> <reference internal="True" refid="class-physicsdirectbodystate2d-property-center-of-mass-local"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>get_center_of_mass_local</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>该物体质心的位置，使用该物体的局部坐标系。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2d-property-inverse-inertia"></target>
            <paragraph classes="classref-property" ids="class-physicsdirectbodystate2d-property-inverse-inertia" names="class_physicsdirectbodystate2d_property_inverse_inertia"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>inverse_inertia</strong> <reference internal="True" refid="class-physicsdirectbodystate2d-property-inverse-inertia"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_inverse_inertia</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>物体惯性的倒数。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2d-property-inverse-mass"></target>
            <paragraph classes="classref-property" ids="class-physicsdirectbodystate2d-property-inverse-mass" names="class_physicsdirectbodystate2d_property_inverse_mass"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>inverse_mass</strong> <reference internal="True" refid="class-physicsdirectbodystate2d-property-inverse-mass"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_inverse_mass</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>物体质量的倒数。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2d-property-linear-velocity"></target>
            <paragraph classes="classref-property" ids="class-physicsdirectbodystate2d-property-linear-velocity" names="class_physicsdirectbodystate2d_property_linear_velocity"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>linear_velocity</strong> <reference internal="True" refid="class-physicsdirectbodystate2d-property-linear-velocity"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_linear_velocity</strong>(value: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>get_linear_velocity</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>物体的线性速度，单位为像素每秒。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2d-property-sleeping"></target>
            <paragraph classes="classref-property" ids="class-physicsdirectbodystate2d-property-sleeping" names="class_physicsdirectbodystate2d_property_sleeping"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>sleeping</strong> <reference internal="True" refid="class-physicsdirectbodystate2d-property-sleeping"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_sleep_state</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_sleeping</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则该物体当前处于睡眠状态（不活动）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2d-property-step"></target>
            <paragraph classes="classref-property" ids="class-physicsdirectbodystate2d-property-step" names="class_physicsdirectbodystate2d_property_step"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>step</strong> <reference internal="True" refid="class-physicsdirectbodystate2d-property-step"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_step</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>用于模拟的时间步长（delta）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2d-property-total-angular-damp"></target>
            <paragraph classes="classref-property" ids="class-physicsdirectbodystate2d-property-total-angular-damp" names="class_physicsdirectbodystate2d_property_total_angular_damp"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>total_angular_damp</strong> <reference internal="True" refid="class-physicsdirectbodystate2d-property-total-angular-damp"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_total_angular_damp</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>物体停止转动的速度，如果没有任何其他力使它运动。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2d-property-total-gravity"></target>
            <paragraph classes="classref-property" ids="class-physicsdirectbodystate2d-property-total-gravity" names="class_physicsdirectbodystate2d_property_total_gravity"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>total_gravity</strong> <reference internal="True" refid="class-physicsdirectbodystate2d-property-total-gravity"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>get_total_gravity</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>这个物体上的总重力向量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2d-property-total-linear-damp"></target>
            <paragraph classes="classref-property" ids="class-physicsdirectbodystate2d-property-total-linear-damp" names="class_physicsdirectbodystate2d_property_total_linear_damp"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>total_linear_damp</strong> <reference internal="True" refid="class-physicsdirectbodystate2d-property-total-linear-damp"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_total_linear_damp</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>物体停止运动的速率，如果没有任何其他力使它运动。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2d-property-transform"></target>
            <paragraph classes="classref-property" ids="class-physicsdirectbodystate2d-property-transform" names="class_physicsdirectbodystate2d_property_transform"><reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference> <strong>transform</strong> <reference internal="True" refid="class-physicsdirectbodystate2d-property-transform"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_transform</strong>(value: <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference> <strong>get_transform</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>物体的变换矩阵。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="方法说明">
            <title>方法说明</title>
            <target refid="class-physicsdirectbodystate2d-method-add-constant-central-force"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2d-method-add-constant-central-force" names="class_physicsdirectbodystate2d_method_add_constant_central_force"><abbreviation explanation="无返回值。">void</abbreviation> <strong>add_constant_central_force</strong>(force: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> = Vector2(0, 0)) <reference internal="True" refid="class-physicsdirectbodystate2d-method-add-constant-central-force"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>在不影响旋转的情况下，添加一个定向的恒定力，该力会随着时间的推移而持续施加，直到使用 <literal>constant_force = Vector2(0, 0)</literal> 清除。</paragraph>
            <paragraph>这相当于在物体的质心处，使用 <reference internal="True" refid="class-physicsdirectbodystate2d-method-add-constant-force"><inline classes="std std-ref">add_constant_force</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2d-method-add-constant-force"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2d-method-add-constant-force" names="class_physicsdirectbodystate2d_method_add_constant_force"><abbreviation explanation="无返回值。">void</abbreviation> <strong>add_constant_force</strong>(force: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>, position: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> = Vector2(0, 0)) <reference internal="True" refid="class-physicsdirectbodystate2d-method-add-constant-force"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>向实体添加一个恒定的定位力，持续施加，直到用 <literal>constant_force = Vector2(0, 0)</literal> 清除。</paragraph>
            <paragraph><literal>position</literal> 是在全局坐标中距实体原点的偏移量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2d-method-add-constant-torque"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2d-method-add-constant-torque" names="class_physicsdirectbodystate2d_method_add_constant_torque"><abbreviation explanation="无返回值。">void</abbreviation> <strong>add_constant_torque</strong>(torque: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <reference internal="True" refid="class-physicsdirectbodystate2d-method-add-constant-torque"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>添加一个恒定的旋转力矩，而不影响位置，该力会随着时间的推移不断施加，直到使用 <literal>constant_torque = 0</literal> 清除。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2d-method-apply-central-force"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2d-method-apply-central-force" names="class_physicsdirectbodystate2d_method_apply_central_force"><abbreviation explanation="无返回值。">void</abbreviation> <strong>apply_central_force</strong>(force: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> = Vector2(0, 0)) <reference internal="True" refid="class-physicsdirectbodystate2d-method-apply-central-force"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>施加一个不影响旋转的定向力。该力是时间相关的，意味着每次物理更新都会施加。</paragraph>
            <paragraph>这相当于在物体的质心处，使用 <reference internal="True" refid="class-physicsdirectbodystate2d-method-apply-force"><inline classes="std std-ref">apply_force</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2d-method-apply-central-impulse"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2d-method-apply-central-impulse" names="class_physicsdirectbodystate2d_method_apply_central_impulse"><abbreviation explanation="无返回值。">void</abbreviation> <strong>apply_central_impulse</strong>(impulse: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <reference internal="True" refid="class-physicsdirectbodystate2d-method-apply-central-impulse"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>施加一个不影响的旋转定向冲量。</paragraph>
            <paragraph>冲量与时间无关！每帧应用一个冲量，会产生一个依赖于帧速率的力。出于这个原因，它应该只在模拟一次性影响时使用（否则使用 “_force”函数）。</paragraph>
            <paragraph>这相当于在物体的质心处，使用 <reference internal="True" refid="class-physicsdirectbodystate2d-method-apply-impulse"><inline classes="std std-ref">apply_impulse</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2d-method-apply-force"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2d-method-apply-force" names="class_physicsdirectbodystate2d_method_apply_force"><abbreviation explanation="无返回值。">void</abbreviation> <strong>apply_force</strong>(force: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>, position: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> = Vector2(0, 0)) <reference internal="True" refid="class-physicsdirectbodystate2d-method-apply-force"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>对实体施加一个定位力。力是时间相关的，意味着每次物理更新都会被施加。</paragraph>
            <paragraph><literal>position</literal> 是在全局坐标中距实体原点的偏移量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2d-method-apply-impulse"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2d-method-apply-impulse" names="class_physicsdirectbodystate2d_method_apply_impulse"><abbreviation explanation="无返回值。">void</abbreviation> <strong>apply_impulse</strong>(impulse: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>, position: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> = Vector2(0, 0)) <reference internal="True" refid="class-physicsdirectbodystate2d-method-apply-impulse"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>向实体施加一个定位冲量。</paragraph>
            <paragraph>冲量是时间无关的！每帧施加一个冲量将产生一个依赖于帧速率的力。出于这个原因，它应该只在模拟一次性影响时使用（否则使用“_force”函数）。</paragraph>
            <paragraph><literal>position</literal> 是在全局坐标中距实体原点的偏移量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2d-method-apply-torque"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2d-method-apply-torque" names="class_physicsdirectbodystate2d_method_apply_torque"><abbreviation explanation="无返回值。">void</abbreviation> <strong>apply_torque</strong>(torque: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <reference internal="True" refid="class-physicsdirectbodystate2d-method-apply-torque"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>在不影响位置的情况下施加一个旋转力。力是时间相关的，这意味着每次物理更新都会被施加。</paragraph>
            <paragraph><strong>注意：</strong><reference internal="True" refid="class-physicsdirectbodystate2d-property-inverse-inertia"><inline classes="std std-ref">inverse_inertia</inline></reference> 是生效所必需的。要拥有 <reference internal="True" refid="class-physicsdirectbodystate2d-property-inverse-inertia"><inline classes="std std-ref">inverse_inertia</inline></reference>，活动的 <reference internal="True" refuri="class_collisionshape2d#class-collisionshape2d"><inline classes="std std-ref">CollisionShape2D</inline></reference> 必须是该节点的子节点，或者可以手动设置 <reference internal="True" refid="class-physicsdirectbodystate2d-property-inverse-inertia"><inline classes="std std-ref">inverse_inertia</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2d-method-apply-torque-impulse"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2d-method-apply-torque-impulse" names="class_physicsdirectbodystate2d_method_apply_torque_impulse"><abbreviation explanation="无返回值。">void</abbreviation> <strong>apply_torque_impulse</strong>(impulse: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <reference internal="True" refid="class-physicsdirectbodystate2d-method-apply-torque-impulse"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>在不影响位置的情况下，向实体施加一个旋转冲量。</paragraph>
            <paragraph>冲量是时间无关的！每帧施加一个冲量将产生一个依赖于帧速率的力。出于这个原因，它应该只在模拟一次性影响时使用（否则使用“_force”函数）。</paragraph>
            <paragraph><strong>注意：</strong><reference internal="True" refid="class-physicsdirectbodystate2d-property-inverse-inertia"><inline classes="std std-ref">inverse_inertia</inline></reference> 是生效所必需的。要拥有 <reference internal="True" refid="class-physicsdirectbodystate2d-property-inverse-inertia"><inline classes="std std-ref">inverse_inertia</inline></reference>，活动的 <reference internal="True" refuri="class_collisionshape2d#class-collisionshape2d"><inline classes="std std-ref">CollisionShape2D</inline></reference> 必须是该节点的一个子节点，或者可以手动设置 <reference internal="True" refid="class-physicsdirectbodystate2d-property-inverse-inertia"><inline classes="std std-ref">inverse_inertia</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2d-method-get-constant-force"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2d-method-get-constant-force" names="class_physicsdirectbodystate2d_method_get_constant_force"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>get_constant_force</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2d-method-get-constant-force"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回在每次物理更新期间，施加在该物体上的总恒定位置力。</paragraph>
            <paragraph>见 <reference internal="True" refid="class-physicsdirectbodystate2d-method-add-constant-force"><inline classes="std std-ref">add_constant_force</inline></reference> 和 <reference internal="True" refid="class-physicsdirectbodystate2d-method-add-constant-central-force"><inline classes="std std-ref">add_constant_central_force</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2d-method-get-constant-torque"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2d-method-get-constant-torque" names="class_physicsdirectbodystate2d_method_get_constant_torque"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_constant_torque</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2d-method-get-constant-torque"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回在每次物理更新期间，施加在该物体上的总恒定旋转力。</paragraph>
            <paragraph>见 <reference internal="True" refid="class-physicsdirectbodystate2d-method-add-constant-torque"><inline classes="std std-ref">add_constant_torque</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2d-method-get-contact-collider"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2d-method-get-contact-collider" names="class_physicsdirectbodystate2d_method_get_contact_collider"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>get_contact_collider</strong>(contact_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2d-method-get-contact-collider"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回该碰撞体的 <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2d-method-get-contact-collider-id"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2d-method-get-contact-collider-id" names="class_physicsdirectbodystate2d_method_get_contact_collider_id"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_contact_collider_id</strong>(contact_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2d-method-get-contact-collider-id"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回该碰撞体的对象 id。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2d-method-get-contact-collider-object"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2d-method-get-contact-collider-object" names="class_physicsdirectbodystate2d_method_get_contact_collider_object"><reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference> <strong>get_contact_collider_object</strong>(contact_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2d-method-get-contact-collider-object"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回该碰撞体对象。这取决于它是如何创建的（如果是被作为场景节点创建的，那么将返回场景节点）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2d-method-get-contact-collider-position"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2d-method-get-contact-collider-position" names="class_physicsdirectbodystate2d_method_get_contact_collider_position"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>get_contact_collider_position</strong>(contact_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2d-method-get-contact-collider-position"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回该碰撞体上接触点的位置，使用全局坐标系。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2d-method-get-contact-collider-shape"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2d-method-get-contact-collider-shape" names="class_physicsdirectbodystate2d_method_get_contact_collider_shape"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_contact_collider_shape</strong>(contact_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2d-method-get-contact-collider-shape"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回该碰撞体的形状索引。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2d-method-get-contact-collider-velocity-at-position"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2d-method-get-contact-collider-velocity-at-position" names="class_physicsdirectbodystate2d_method_get_contact_collider_velocity_at_position"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>get_contact_collider_velocity_at_position</strong>(contact_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2d-method-get-contact-collider-velocity-at-position"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回该碰撞体上接触点处的速度向量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2d-method-get-contact-count"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2d-method-get-contact-count" names="class_physicsdirectbodystate2d_method_get_contact_count"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_contact_count</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2d-method-get-contact-count"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回这个物体与其他物体的接触次数。</paragraph>
            <paragraph><strong>注意：</strong>默认情况下，除非物体被设为监视接触者，否则返回 0。见 <reference internal="True" refuri="class_rigidbody2d#class-rigidbody2d-property-contact-monitor"><inline classes="std std-ref">RigidBody2D.contact_monitor</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2d-method-get-contact-impulse"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2d-method-get-contact-impulse" names="class_physicsdirectbodystate2d_method_get_contact_impulse"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>get_contact_impulse</strong>(contact_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2d-method-get-contact-impulse"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回接触造成的冲量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2d-method-get-contact-local-normal"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2d-method-get-contact-local-normal" names="class_physicsdirectbodystate2d_method_get_contact_local_normal"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>get_contact_local_normal</strong>(contact_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2d-method-get-contact-local-normal"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回接触点处的局部法线。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2d-method-get-contact-local-position"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2d-method-get-contact-local-position" names="class_physicsdirectbodystate2d_method_get_contact_local_position"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>get_contact_local_position</strong>(contact_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2d-method-get-contact-local-position"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回该物体上接触点的位置，使用全局坐标系。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2d-method-get-contact-local-shape"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2d-method-get-contact-local-shape" names="class_physicsdirectbodystate2d_method_get_contact_local_shape"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_contact_local_shape</strong>(contact_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2d-method-get-contact-local-shape"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回碰撞的局部坐标系下的形状索引。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2d-method-get-contact-local-velocity-at-position"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2d-method-get-contact-local-velocity-at-position" names="class_physicsdirectbodystate2d_method_get_contact_local_velocity_at_position"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>get_contact_local_velocity_at_position</strong>(contact_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2d-method-get-contact-local-velocity-at-position"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回该物体上接触点处的速度向量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2d-method-get-space-state"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2d-method-get-space-state" names="class_physicsdirectbodystate2d_method_get_space_state"><reference internal="True" refuri="class_physicsdirectspacestate2d#class-physicsdirectspacestate2d"><inline classes="std std-ref">PhysicsDirectSpaceState2D</inline></reference> <strong>get_space_state</strong>() <reference internal="True" refid="class-physicsdirectbodystate2d-method-get-space-state"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回空间的当前状态，这对查询很有用。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2d-method-get-velocity-at-local-position"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2d-method-get-velocity-at-local-position" names="class_physicsdirectbodystate2d_method_get_velocity_at_local_position"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>get_velocity_at_local_position</strong>(local_position: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsdirectbodystate2d-method-get-velocity-at-local-position"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回给定相对位置的物体速度，包括平移和旋转。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2d-method-integrate-forces"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2d-method-integrate-forces" names="class_physicsdirectbodystate2d_method_integrate_forces"><abbreviation explanation="无返回值。">void</abbreviation> <strong>integrate_forces</strong>() <reference internal="True" refid="class-physicsdirectbodystate2d-method-integrate-forces"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Updates the body's linear and angular velocity by applying gravity and damping for the equivalent of one physics tick.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2d-method-set-constant-force"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2d-method-set-constant-force" names="class_physicsdirectbodystate2d_method_set_constant_force"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_constant_force</strong>(force: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <reference internal="True" refid="class-physicsdirectbodystate2d-method-set-constant-force"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置在每次物理更新期间，施加在该物体上的总恒定位置力。</paragraph>
            <paragraph>见 <reference internal="True" refid="class-physicsdirectbodystate2d-method-add-constant-force"><inline classes="std std-ref">add_constant_force</inline></reference> 和 <reference internal="True" refid="class-physicsdirectbodystate2d-method-add-constant-central-force"><inline classes="std std-ref">add_constant_central_force</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsdirectbodystate2d-method-set-constant-torque"></target>
            <paragraph classes="classref-method" ids="class-physicsdirectbodystate2d-method-set-constant-torque" names="class_physicsdirectbodystate2d_method_set_constant_torque"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_constant_torque</strong>(torque: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <reference internal="True" refid="class-physicsdirectbodystate2d-method-set-constant-torque"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置在每次物理更新期间，施加在该物体上的总恒定旋转力。</paragraph>
            <paragraph>见 <reference internal="True" refid="class-physicsdirectbodystate2d-method-add-constant-torque"><inline classes="std std-ref">add_constant_torque</inline></reference>。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

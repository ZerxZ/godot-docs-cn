<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_resourcesaver.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/ResourceSaver.xml.</comment>
    <target refid="class-resourcesaver"></target>
    <section ids="resourcesaver class-resourcesaver" names="resourcesaver class_resourcesaver">
        <title>ResourceSaver</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>用于将 <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> 保存到文件系统的单例。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>用于将资源类型保存到文件系统的单例。</paragraph>
            <paragraph>它会使用在引擎中注册的（内置或插件）<reference internal="True" refuri="class_resourceformatsaver#class-resourceformatsaver"><inline classes="std std-ref">ResourceFormatSaver</inline></reference> 将资源数据保存为文本文件（如 <literal>.tres</literal> 或 <literal>.tscn</literal>）或二进制文件（如 <literal>.res</literal> 或 <literal>.scn</literal>）。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="51"></colspec>
                    <colspec colwidth="213"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-resourcesaver-method-add-resource-format-saver"><inline classes="std std-ref">add_resource_format_saver</inline></reference>(format_saver: <reference internal="True" refuri="class_resourceformatsaver#class-resourceformatsaver"><inline classes="std std-ref">ResourceFormatSaver</inline></reference>, at_front: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = false)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_packedstringarray#class-packedstringarray"><inline classes="std std-ref">PackedStringArray</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-resourcesaver-method-get-recognized-extensions"><inline classes="std std-ref">get_recognized_extensions</inline></reference>(type: <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-resourcesaver-method-remove-resource-format-saver"><inline classes="std std-ref">remove_resource_format_saver</inline></reference>(format_saver: <reference internal="True" refuri="class_resourceformatsaver#class-resourceformatsaver"><inline classes="std std-ref">ResourceFormatSaver</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_@globalscope#enum-globalscope-error"><inline classes="std std-ref">Error</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-resourcesaver-method-save"><inline classes="std std-ref">save</inline></reference>(resource: <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference>, path: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> = "", flags: <abbreviation explanation="这个值是由下列位标志构成位掩码的整数。">BitField</abbreviation>[<reference internal="True" refid="enum-resourcesaver-saverflags"><inline classes="std std-ref">SaverFlags</inline></reference>] = 0)</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="枚举">
            <title>枚举</title>
            <target refid="enum-resourcesaver-saverflags"></target>
            <paragraph classes="classref-enumeration" ids="enum-resourcesaver-saverflags" names="enum_resourcesaver_saverflags">flags <strong>SaverFlags</strong>: <reference internal="True" refid="enum-resourcesaver-saverflags"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-resourcesaver-constant-flag-none"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-resourcesaver-constant-flag-none" names="class_resourcesaver_constant_flag_none"><reference internal="True" refid="enum-resourcesaver-saverflags"><inline classes="std std-ref">SaverFlags</inline></reference> <strong>FLAG_NONE</strong> = <literal>0</literal></paragraph>
            <paragraph>没有资源保存选项。</paragraph>
            <target refid="class-resourcesaver-constant-flag-relative-paths"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-resourcesaver-constant-flag-relative-paths" names="class_resourcesaver_constant_flag_relative_paths"><reference internal="True" refid="enum-resourcesaver-saverflags"><inline classes="std std-ref">SaverFlags</inline></reference> <strong>FLAG_RELATIVE_PATHS</strong> = <literal>1</literal></paragraph>
            <paragraph>用相对于使用该资源的场景的路径来保存该资源。</paragraph>
            <target refid="class-resourcesaver-constant-flag-bundle-resources"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-resourcesaver-constant-flag-bundle-resources" names="class_resourcesaver_constant_flag_bundle_resources"><reference internal="True" refid="enum-resourcesaver-saverflags"><inline classes="std std-ref">SaverFlags</inline></reference> <strong>FLAG_BUNDLE_RESOURCES</strong> = <literal>2</literal></paragraph>
            <paragraph>捆绑外部资源。</paragraph>
            <target refid="class-resourcesaver-constant-flag-change-path"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-resourcesaver-constant-flag-change-path" names="class_resourcesaver_constant_flag_change_path"><reference internal="True" refid="enum-resourcesaver-saverflags"><inline classes="std std-ref">SaverFlags</inline></reference> <strong>FLAG_CHANGE_PATH</strong> = <literal>4</literal></paragraph>
            <paragraph>更改已保存资源的 <reference internal="True" refuri="class_resource#class-resource-property-resource-path"><inline classes="std std-ref">Resource.resource_path</inline></reference> 以匹配其新位置。</paragraph>
            <target refid="class-resourcesaver-constant-flag-omit-editor-properties"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-resourcesaver-constant-flag-omit-editor-properties" names="class_resourcesaver_constant_flag_omit_editor_properties"><reference internal="True" refid="enum-resourcesaver-saverflags"><inline classes="std std-ref">SaverFlags</inline></reference> <strong>FLAG_OMIT_EDITOR_PROPERTIES</strong> = <literal>8</literal></paragraph>
            <paragraph>不要保存编辑器特定的元数据（由其 <literal>__editor</literal> 前缀标识）。</paragraph>
            <target refid="class-resourcesaver-constant-flag-save-big-endian"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-resourcesaver-constant-flag-save-big-endian" names="class_resourcesaver_constant_flag_save_big_endian"><reference internal="True" refid="enum-resourcesaver-saverflags"><inline classes="std std-ref">SaverFlags</inline></reference> <strong>FLAG_SAVE_BIG_ENDIAN</strong> = <literal>16</literal></paragraph>
            <paragraph>保存为大端序（见 <reference internal="True" refuri="class_fileaccess#class-fileaccess-property-big-endian"><inline classes="std std-ref">FileAccess.big_endian</inline></reference>）。</paragraph>
            <target refid="class-resourcesaver-constant-flag-compress"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-resourcesaver-constant-flag-compress" names="class_resourcesaver_constant_flag_compress"><reference internal="True" refid="enum-resourcesaver-saverflags"><inline classes="std std-ref">SaverFlags</inline></reference> <strong>FLAG_COMPRESS</strong> = <literal>32</literal></paragraph>
            <paragraph>在保存时使用 <reference internal="True" refuri="class_fileaccess#class-fileaccess-constant-compression-zstd"><inline classes="std std-ref">FileAccess.COMPRESSION_ZSTD</inline></reference> 压缩资源。仅适用于二进制资源类型。</paragraph>
            <target refid="class-resourcesaver-constant-flag-replace-subresource-paths"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-resourcesaver-constant-flag-replace-subresource-paths" names="class_resourcesaver_constant_flag_replace_subresource_paths"><reference internal="True" refid="enum-resourcesaver-saverflags"><inline classes="std std-ref">SaverFlags</inline></reference> <strong>FLAG_REPLACE_SUBRESOURCE_PATHS</strong> = <literal>64</literal></paragraph>
            <paragraph>接管保存的子资源的路径（见 <reference internal="True" refuri="class_resource#class-resource-method-take-over-path"><inline classes="std std-ref">Resource.take_over_path</inline></reference>）。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="方法说明">
            <title>方法说明</title>
            <target refid="class-resourcesaver-method-add-resource-format-saver"></target>
            <paragraph classes="classref-method" ids="class-resourcesaver-method-add-resource-format-saver" names="class_resourcesaver_method_add_resource_format_saver"><abbreviation explanation="无返回值。">void</abbreviation> <strong>add_resource_format_saver</strong>(format_saver: <reference internal="True" refuri="class_resourceformatsaver#class-resourceformatsaver"><inline classes="std std-ref">ResourceFormatSaver</inline></reference>, at_front: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = false) <reference internal="True" refid="class-resourcesaver-method-add-resource-format-saver"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>注册一个新的 <reference internal="True" refuri="class_resourceformatsaver#class-resourceformatsaver"><inline classes="std std-ref">ResourceFormatSaver</inline></reference>。 ResourceSaver 将使用 ResourceFormatSaver，如 <reference internal="True" refid="class-resourcesaver-method-save"><inline classes="std std-ref">save</inline></reference> 中所述。</paragraph>
            <paragraph>对于用 GDScript 编写的 ResourceFormatSaver，此方法将隐式执行（详情见 <reference internal="True" refuri="class_resourceformatsaver#class-resourceformatsaver"><inline classes="std std-ref">ResourceFormatSaver</inline></reference>）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-resourcesaver-method-get-recognized-extensions"></target>
            <paragraph classes="classref-method" ids="class-resourcesaver-method-get-recognized-extensions" names="class_resourcesaver_method_get_recognized_extensions"><reference internal="True" refuri="class_packedstringarray#class-packedstringarray"><inline classes="std std-ref">PackedStringArray</inline></reference> <strong>get_recognized_extensions</strong>(type: <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference>) <reference internal="True" refid="class-resourcesaver-method-get-recognized-extensions"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回可用于保存给定类型的资源的扩展列表。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-resourcesaver-method-remove-resource-format-saver"></target>
            <paragraph classes="classref-method" ids="class-resourcesaver-method-remove-resource-format-saver" names="class_resourcesaver_method_remove_resource_format_saver"><abbreviation explanation="无返回值。">void</abbreviation> <strong>remove_resource_format_saver</strong>(format_saver: <reference internal="True" refuri="class_resourceformatsaver#class-resourceformatsaver"><inline classes="std std-ref">ResourceFormatSaver</inline></reference>) <reference internal="True" refid="class-resourcesaver-method-remove-resource-format-saver"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>取消注册给定的 <reference internal="True" refuri="class_resourceformatsaver#class-resourceformatsaver"><inline classes="std std-ref">ResourceFormatSaver</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-resourcesaver-method-save"></target>
            <paragraph classes="classref-method" ids="class-resourcesaver-method-save" names="class_resourcesaver_method_save"><reference internal="True" refuri="class_@globalscope#enum-globalscope-error"><inline classes="std std-ref">Error</inline></reference> <strong>save</strong>(resource: <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference>, path: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> = "", flags: <abbreviation explanation="这个值是由下列位标志构成位掩码的整数。">BitField</abbreviation>[<reference internal="True" refid="enum-resourcesaver-saverflags"><inline classes="std std-ref">SaverFlags</inline></reference>] = 0) <reference internal="True" refid="class-resourcesaver-method-save"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>使用识别资源对象的 <reference internal="True" refuri="class_resourceformatsaver#class-resourceformatsaver"><inline classes="std std-ref">ResourceFormatSaver</inline></reference> 将资源保存到给定路径。如果 <literal>path</literal> 为空，则 <strong>ResourceSaver</strong> 将尝试使用 <reference internal="True" refuri="class_resource#class-resource-property-resource-path"><inline classes="std std-ref">Resource.resource_path</inline></reference>。</paragraph>
            <paragraph>可以指定 <literal>flags</literal> 位掩码以使用 <reference internal="True" refid="enum-resourcesaver-saverflags"><inline classes="std std-ref">SaverFlags</inline></reference> 标志自定义保存行为。</paragraph>
            <paragraph>成功时返回 <reference internal="True" refuri="class_@globalscope#class-globalscope-constant-ok"><inline classes="std std-ref">@GlobalScope.OK</inline></reference>。</paragraph>
            <paragraph><strong>注意：</strong>项目正运行时，任何生成的与资源关联的 UID 都不会被保存，因为所需的代码仅在编辑器模式下执行。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效运算符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列位标志构成位掩码的整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

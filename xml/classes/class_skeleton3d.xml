<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_skeleton3d.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/Skeleton3D.xml.</comment>
    <target refid="class-skeleton3d"></target>
    <section ids="skeleton3d class-skeleton3d" names="skeleton3d class_skeleton3d">
        <title>Skeleton3D</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_node3d#class-node3d"><inline classes="std std-ref">Node3D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>包含骨骼层级结构的节点，用于创建 3D 骨骼动画。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph><strong>Skeleton3D</strong> 提供了管理骨骼层级结构的接口，包括姿势、放松姿势和动画（见 <reference internal="True" refuri="class_animation#class-animation"><inline classes="std std-ref">Animation</inline></reference>）。它还可以使用布娃娃物理。</paragraph>
            <paragraph>骨骼相对于骨架的整体变换由骨骼的姿势决定。骨骼的放松姿势定义的是骨骼姿势的初始变换。</paragraph>
            <paragraph>请注意，下文的“全局姿势”是指骨骼相对于骨架的整体变换，因此并不是骨骼的实际全局/世界变换。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference name="第三人称射击（TPS）演示" refuri="https://godotengine.org/asset-library/asset/2710">第三人称射击（TPS）演示</reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="81"></colspec>
                    <colspec colwidth="97"></colspec>
                    <colspec colwidth="11"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-skeleton3d-modifiercallbackmodeprocess"><inline classes="std std-ref">ModifierCallbackModeProcess</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeleton3d-property-modifier-callback-mode-process"><inline classes="std std-ref">modifier_callback_mode_process</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeleton3d-property-motion-scale"><inline classes="std std-ref">motion_scale</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeleton3d-property-show-rest-only"><inline classes="std std-ref">show_rest_only</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id4" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="49"></colspec>
                    <colspec colwidth="261"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeleton3d-method-add-bone"><inline classes="std std-ref">add_bone</inline></reference>(name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeleton3d-method-clear-bones"><inline classes="std std-ref">clear_bones</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeleton3d-method-clear-bones-global-pose-override"><inline classes="std std-ref">clear_bones_global_pose_override</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_skin#class-skin"><inline classes="std std-ref">Skin</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeleton3d-method-create-skin-from-rest-transforms"><inline classes="std std-ref">create_skin_from_rest_transforms</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeleton3d-method-find-bone"><inline classes="std std-ref">find_bone</inline></reference>(name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeleton3d-method-force-update-all-bone-transforms"><inline classes="std std-ref">force_update_all_bone_transforms</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeleton3d-method-force-update-bone-child-transform"><inline classes="std std-ref">force_update_bone_child_transform</inline></reference>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeleton3d-method-get-animate-physical-bones"><inline classes="std std-ref">get_animate_physical_bones</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_packedint32array#class-packedint32array"><inline classes="std std-ref">PackedInt32Array</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeleton3d-method-get-bone-children"><inline classes="std std-ref">get_bone_children</inline></reference>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeleton3d-method-get-bone-count"><inline classes="std std-ref">get_bone_count</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeleton3d-method-get-bone-global-pose"><inline classes="std std-ref">get_bone_global_pose</inline></reference>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeleton3d-method-get-bone-global-pose-no-override"><inline classes="std std-ref">get_bone_global_pose_no_override</inline></reference>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeleton3d-method-get-bone-global-pose-override"><inline classes="std std-ref">get_bone_global_pose_override</inline></reference>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeleton3d-method-get-bone-global-rest"><inline classes="std std-ref">get_bone_global_rest</inline></reference>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeleton3d-method-get-bone-name"><inline classes="std std-ref">get_bone_name</inline></reference>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeleton3d-method-get-bone-parent"><inline classes="std std-ref">get_bone_parent</inline></reference>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeleton3d-method-get-bone-pose"><inline classes="std std-ref">get_bone_pose</inline></reference>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeleton3d-method-get-bone-pose-position"><inline classes="std std-ref">get_bone_pose_position</inline></reference>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_quaternion#class-quaternion"><inline classes="std std-ref">Quaternion</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeleton3d-method-get-bone-pose-rotation"><inline classes="std std-ref">get_bone_pose_rotation</inline></reference>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeleton3d-method-get-bone-pose-scale"><inline classes="std std-ref">get_bone_pose_scale</inline></reference>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeleton3d-method-get-bone-rest"><inline classes="std std-ref">get_bone_rest</inline></reference>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeleton3d-method-get-concatenated-bone-names"><inline classes="std std-ref">get_concatenated_bone_names</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_packedint32array#class-packedint32array"><inline classes="std std-ref">PackedInt32Array</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeleton3d-method-get-parentless-bones"><inline classes="std std-ref">get_parentless_bones</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeleton3d-method-get-version"><inline classes="std std-ref">get_version</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeleton3d-method-is-bone-enabled"><inline classes="std std-ref">is_bone_enabled</inline></reference>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeleton3d-method-localize-rests"><inline classes="std std-ref">localize_rests</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeleton3d-method-physical-bones-add-collision-exception"><inline classes="std std-ref">physical_bones_add_collision_exception</inline></reference>(exception: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeleton3d-method-physical-bones-remove-collision-exception"><inline classes="std std-ref">physical_bones_remove_collision_exception</inline></reference>(exception: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeleton3d-method-physical-bones-start-simulation"><inline classes="std std-ref">physical_bones_start_simulation</inline></reference>(bones: <reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>] = [])</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeleton3d-method-physical-bones-stop-simulation"><inline classes="std std-ref">physical_bones_stop_simulation</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_skinreference#class-skinreference"><inline classes="std std-ref">SkinReference</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeleton3d-method-register-skin"><inline classes="std std-ref">register_skin</inline></reference>(skin: <reference internal="True" refuri="class_skin#class-skin"><inline classes="std std-ref">Skin</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeleton3d-method-reset-bone-pose"><inline classes="std std-ref">reset_bone_pose</inline></reference>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeleton3d-method-reset-bone-poses"><inline classes="std std-ref">reset_bone_poses</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeleton3d-method-set-animate-physical-bones"><inline classes="std std-ref">set_animate_physical_bones</inline></reference>(enabled: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeleton3d-method-set-bone-enabled"><inline classes="std std-ref">set_bone_enabled</inline></reference>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, enabled: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = true)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeleton3d-method-set-bone-global-pose"><inline classes="std std-ref">set_bone_global_pose</inline></reference>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, pose: <reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeleton3d-method-set-bone-global-pose-override"><inline classes="std std-ref">set_bone_global_pose_override</inline></reference>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, pose: <reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference>, amount: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>, persistent: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = false)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeleton3d-method-set-bone-name"><inline classes="std std-ref">set_bone_name</inline></reference>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeleton3d-method-set-bone-parent"><inline classes="std std-ref">set_bone_parent</inline></reference>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, parent_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeleton3d-method-set-bone-pose"><inline classes="std std-ref">set_bone_pose</inline></reference>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, pose: <reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeleton3d-method-set-bone-pose-position"><inline classes="std std-ref">set_bone_pose_position</inline></reference>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, position: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeleton3d-method-set-bone-pose-rotation"><inline classes="std std-ref">set_bone_pose_rotation</inline></reference>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, rotation: <reference internal="True" refuri="class_quaternion#class-quaternion"><inline classes="std std-ref">Quaternion</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeleton3d-method-set-bone-pose-scale"><inline classes="std std-ref">set_bone_pose_scale</inline></reference>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, scale: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeleton3d-method-set-bone-rest"><inline classes="std std-ref">set_bone_rest</inline></reference>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, rest: <reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-skeleton3d-method-unparent-bone-and-rest"><inline classes="std std-ref">unparent_bone_and_rest</inline></reference>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="信号">
            <title>信号</title>
            <target refid="class-skeleton3d-signal-bone-enabled-changed"></target>
            <paragraph classes="classref-signal" ids="class-skeleton3d-signal-bone-enabled-changed" names="class_skeleton3d_signal_bone_enabled_changed"><strong>bone_enabled_changed</strong>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-skeleton3d-signal-bone-enabled-changed"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当使用 <reference internal="True" refid="class-skeleton3d-method-set-bone-enabled"><inline classes="std std-ref">set_bone_enabled</inline></reference> 切换 <literal>bone_idx</literal> 处的骨骼时发出。使用 <reference internal="True" refid="class-skeleton3d-method-is-bone-enabled"><inline classes="std std-ref">is_bone_enabled</inline></reference> 来检查新值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton3d-signal-bone-list-changed"></target>
            <paragraph classes="classref-signal" ids="class-skeleton3d-signal-bone-list-changed" names="class_skeleton3d_signal_bone_list_changed"><strong>bone_list_changed</strong>() <reference internal="True" refid="class-skeleton3d-signal-bone-list-changed"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个信号的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton3d-signal-pose-updated"></target>
            <paragraph classes="classref-signal" ids="class-skeleton3d-signal-pose-updated" names="class_skeleton3d_signal_pose_updated"><strong>pose_updated</strong>() <reference internal="True" refid="class-skeleton3d-signal-pose-updated"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Emitted when the pose is updated.</paragraph>
            <paragraph><strong>Note:</strong> During the update process, this signal is not fired, so modification by <reference internal="True" refuri="class_skeletonmodifier3d#class-skeletonmodifier3d"><inline classes="std std-ref">SkeletonModifier3D</inline></reference> is not detected.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton3d-signal-show-rest-only-changed"></target>
            <paragraph classes="classref-signal" ids="class-skeleton3d-signal-show-rest-only-changed" names="class_skeleton3d_signal_show_rest_only_changed"><strong>show_rest_only_changed</strong>() <reference internal="True" refid="class-skeleton3d-signal-show-rest-only-changed"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当 <reference internal="True" refid="class-skeleton3d-property-show-rest-only"><inline classes="std std-ref">show_rest_only</inline></reference> 的值改变时触发。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton3d-signal-skeleton-updated"></target>
            <paragraph classes="classref-signal" ids="class-skeleton3d-signal-skeleton-updated" names="class_skeleton3d_signal_skeleton_updated"><strong>skeleton_updated</strong>() <reference internal="True" refid="class-skeleton3d-signal-skeleton-updated"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Emitted when the final pose has been calculated will be applied to the skin in the update process.</paragraph>
            <paragraph>This means that all <reference internal="True" refuri="class_skeletonmodifier3d#class-skeletonmodifier3d"><inline classes="std std-ref">SkeletonModifier3D</inline></reference> processing is complete. In order to detect the completion of the processing of each <reference internal="True" refuri="class_skeletonmodifier3d#class-skeletonmodifier3d"><inline classes="std std-ref">SkeletonModifier3D</inline></reference>, use <reference internal="True" refuri="class_skeletonmodifier3d#class-skeletonmodifier3d-signal-modification-processed"><inline classes="std std-ref">SkeletonModifier3D.modification_processed</inline></reference>.</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="枚举">
            <title>枚举</title>
            <target refid="enum-skeleton3d-modifiercallbackmodeprocess"></target>
            <paragraph classes="classref-enumeration" ids="enum-skeleton3d-modifiercallbackmodeprocess" names="enum_skeleton3d_modifiercallbackmodeprocess">enum <strong>ModifierCallbackModeProcess</strong>: <reference internal="True" refid="enum-skeleton3d-modifiercallbackmodeprocess"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-skeleton3d-constant-modifier-callback-mode-process-physics"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-skeleton3d-constant-modifier-callback-mode-process-physics" names="class_skeleton3d_constant_modifier_callback_mode_process_physics"><reference internal="True" refid="enum-skeleton3d-modifiercallbackmodeprocess"><inline classes="std std-ref">ModifierCallbackModeProcess</inline></reference> <strong>MODIFIER_CALLBACK_MODE_PROCESS_PHYSICS</strong> = <literal>0</literal></paragraph>
            <paragraph>在物理帧期间处理修改的标志（见 <reference internal="True" refuri="class_node#class-node-constant-notification-internal-physics-process"><inline classes="std std-ref">Node.NOTIFICATION_INTERNAL_PHYSICS_PROCESS</inline></reference>）。</paragraph>
            <target refid="class-skeleton3d-constant-modifier-callback-mode-process-idle"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-skeleton3d-constant-modifier-callback-mode-process-idle" names="class_skeleton3d_constant_modifier_callback_mode_process_idle"><reference internal="True" refid="enum-skeleton3d-modifiercallbackmodeprocess"><inline classes="std std-ref">ModifierCallbackModeProcess</inline></reference> <strong>MODIFIER_CALLBACK_MODE_PROCESS_IDLE</strong> = <literal>1</literal></paragraph>
            <paragraph>在处理帧期间处理修改的标志（见 <reference internal="True" refuri="class_node#class-node-constant-notification-internal-process"><inline classes="std std-ref">Node.NOTIFICATION_INTERNAL_PROCESS</inline></reference>）。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id7" names="常量">
            <title>常量</title>
            <target refid="class-skeleton3d-constant-notification-update-skeleton"></target>
            <paragraph classes="classref-constant" ids="class-skeleton3d-constant-notification-update-skeleton" names="class_skeleton3d_constant_notification_update_skeleton"><strong>NOTIFICATION_UPDATE_SKELETON</strong> = <literal>50</literal> <reference internal="True" refid="class-skeleton3d-constant-notification-update-skeleton"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Notification received when this skeleton's pose needs to be updated. In that case, this is called only once per frame in a deferred process.</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id8" names="属性说明">
            <title>属性说明</title>
            <target refid="class-skeleton3d-property-modifier-callback-mode-process"></target>
            <paragraph classes="classref-property" ids="class-skeleton3d-property-modifier-callback-mode-process" names="class_skeleton3d_property_modifier_callback_mode_process"><reference internal="True" refid="enum-skeleton3d-modifiercallbackmodeprocess"><inline classes="std std-ref">ModifierCallbackModeProcess</inline></reference> <strong>modifier_callback_mode_process</strong> = <literal>1</literal> <reference internal="True" refid="class-skeleton3d-property-modifier-callback-mode-process"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_modifier_callback_mode_process</strong>(value: <reference internal="True" refid="enum-skeleton3d-modifiercallbackmodeprocess"><inline classes="std std-ref">ModifierCallbackModeProcess</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-skeleton3d-modifiercallbackmodeprocess"><inline classes="std std-ref">ModifierCallbackModeProcess</inline></reference> <strong>get_modifier_callback_mode_process</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>Sets the processing timing for the Modifier.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton3d-property-motion-scale"></target>
            <paragraph classes="classref-property" ids="class-skeleton3d-property-motion-scale" names="class_skeleton3d_property_motion_scale"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>motion_scale</strong> = <literal>1.0</literal> <reference internal="True" refid="class-skeleton3d-property-motion-scale"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_motion_scale</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_motion_scale</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>与 3D 位置轨道动画相乘。</paragraph>
            <paragraph><strong>注意：</strong>除非这个值是 <literal>1.0</literal>，否则动画中的键值将与实际位置值不匹配。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton3d-property-show-rest-only"></target>
            <paragraph classes="classref-property" ids="class-skeleton3d-property-show-rest-only" names="class_skeleton3d_property_show_rest_only"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>show_rest_only</strong> = <literal>false</literal> <reference internal="True" refid="class-skeleton3d-property-show-rest-only"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_show_rest_only</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_show_rest_only</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则无论其值如何，强制骨骼处于默认放松姿势。在编辑器中，这也会阻止骨骼被编辑。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id9" names="方法说明">
            <title>方法说明</title>
            <target refid="class-skeleton3d-method-add-bone"></target>
            <paragraph classes="classref-method" ids="class-skeleton3d-method-add-bone" names="class_skeleton3d_method_add_bone"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>add_bone</strong>(name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <reference internal="True" refid="class-skeleton3d-method-add-bone"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>添加具有给定名称的新骨骼。返回新骨骼的索引，如果该方法失败，则返回 <literal>-1</literal>。</paragraph>
            <paragraph><strong>注意：</strong>骨骼名称应该是唯一的、非空的，并且不能包含 <literal>:</literal> 和 <literal>/</literal> 字符。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton3d-method-clear-bones"></target>
            <paragraph classes="classref-method" ids="class-skeleton3d-method-clear-bones" names="class_skeleton3d_method_clear_bones"><abbreviation explanation="无返回值。">void</abbreviation> <strong>clear_bones</strong>() <reference internal="True" refid="class-skeleton3d-method-clear-bones"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>清除这个骨架上的所有骨骼。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton3d-method-clear-bones-global-pose-override"></target>
            <paragraph classes="classref-method" ids="class-skeleton3d-method-clear-bones-global-pose-override" names="class_skeleton3d_method_clear_bones_global_pose_override"><abbreviation explanation="无返回值。">void</abbreviation> <strong>clear_bones_global_pose_override</strong>() <reference internal="True" refid="class-skeleton3d-method-clear-bones-global-pose-override"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><strong>已弃用：</strong> 未来版本中可能修改或移除该方法。</paragraph>
            <paragraph>移除骨架中所有骨骼上的全局姿势覆盖。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton3d-method-create-skin-from-rest-transforms"></target>
            <paragraph classes="classref-method" ids="class-skeleton3d-method-create-skin-from-rest-transforms" names="class_skeleton3d_method_create_skin_from_rest_transforms"><reference internal="True" refuri="class_skin#class-skin"><inline classes="std std-ref">Skin</inline></reference> <strong>create_skin_from_rest_transforms</strong>() <reference internal="True" refid="class-skeleton3d-method-create-skin-from-rest-transforms"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton3d-method-find-bone"></target>
            <paragraph classes="classref-method" ids="class-skeleton3d-method-find-bone" names="class_skeleton3d_method_find_bone"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>find_bone</strong>(name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-skeleton3d-method-find-bone"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Returns the bone index that matches <literal>name</literal> as its name. Returns <literal>-1</literal> if no bone with this name exists.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton3d-method-force-update-all-bone-transforms"></target>
            <paragraph classes="classref-method" ids="class-skeleton3d-method-force-update-all-bone-transforms" names="class_skeleton3d_method_force_update_all_bone_transforms"><abbreviation explanation="无返回值。">void</abbreviation> <strong>force_update_all_bone_transforms</strong>() <reference internal="True" refid="class-skeleton3d-method-force-update-all-bone-transforms"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><strong>已弃用：</strong> This method should only be called internally.</paragraph>
            <paragraph>强制更新该骨架中所有骨骼的变换/姿势。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton3d-method-force-update-bone-child-transform"></target>
            <paragraph classes="classref-method" ids="class-skeleton3d-method-force-update-bone-child-transform" names="class_skeleton3d_method_force_update_bone_child_transform"><abbreviation explanation="无返回值。">void</abbreviation> <strong>force_update_bone_child_transform</strong>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-skeleton3d-method-force-update-bone-child-transform"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>强制更新索引为 <literal>bone_idx</literal> 的骨骼及其所有子项的变换/姿势。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton3d-method-get-animate-physical-bones"></target>
            <paragraph classes="classref-method" ids="class-skeleton3d-method-get-animate-physical-bones" names="class_skeleton3d_method_get_animate_physical_bones"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_animate_physical_bones</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-skeleton3d-method-get-animate-physical-bones"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><strong>已弃用：</strong> 未来版本中可能修改或移除该方法。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton3d-method-get-bone-children"></target>
            <paragraph classes="classref-method" ids="class-skeleton3d-method-get-bone-children" names="class_skeleton3d_method_get_bone_children"><reference internal="True" refuri="class_packedint32array#class-packedint32array"><inline classes="std std-ref">PackedInt32Array</inline></reference> <strong>get_bone_children</strong>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-skeleton3d-method-get-bone-children"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回一个数组，其中包含传入骨骼 <literal>bone_idx</literal> 的所有子节点的骨骼索引。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton3d-method-get-bone-count"></target>
            <paragraph classes="classref-method" ids="class-skeleton3d-method-get-bone-count" names="class_skeleton3d_method_get_bone_count"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_bone_count</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-skeleton3d-method-get-bone-count"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回骨架中骨骼的数量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton3d-method-get-bone-global-pose"></target>
            <paragraph classes="classref-method" ids="class-skeleton3d-method-get-bone-global-pose" names="class_skeleton3d_method_get_bone_global_pose"><reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference> <strong>get_bone_global_pose</strong>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-skeleton3d-method-get-bone-global-pose"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Returns the overall transform of the specified bone, with respect to the skeleton. Being relative to the skeleton frame, this is not the actual "global" transform of the bone.</paragraph>
            <paragraph><strong>Note:</strong> This is the global pose you set to the skeleton in the process, the final global pose can get overridden by modifiers in the deferred process, if you want to access the final global pose, use <reference internal="True" refuri="class_skeletonmodifier3d#class-skeletonmodifier3d-signal-modification-processed"><inline classes="std std-ref">SkeletonModifier3D.modification_processed</inline></reference>.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton3d-method-get-bone-global-pose-no-override"></target>
            <paragraph classes="classref-method" ids="class-skeleton3d-method-get-bone-global-pose-no-override" names="class_skeleton3d_method_get_bone_global_pose_no_override"><reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference> <strong>get_bone_global_pose_no_override</strong>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-skeleton3d-method-get-bone-global-pose-no-override"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><strong>已弃用：</strong> 未来版本中可能修改或移除该方法。</paragraph>
            <paragraph>返回指定骨骼的整体变换，相对于骨架，不包含任何全局姿势覆盖。由于是相对于骨架的，这不是该骨骼的实际“全局”变换。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton3d-method-get-bone-global-pose-override"></target>
            <paragraph classes="classref-method" ids="class-skeleton3d-method-get-bone-global-pose-override" names="class_skeleton3d_method_get_bone_global_pose_override"><reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference> <strong>get_bone_global_pose_override</strong>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-skeleton3d-method-get-bone-global-pose-override"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><strong>已弃用：</strong> 未来版本中可能修改或移除该方法。</paragraph>
            <paragraph>返回 <literal>bone_idx</literal> 骨骼的全局姿势覆盖变换。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton3d-method-get-bone-global-rest"></target>
            <paragraph classes="classref-method" ids="class-skeleton3d-method-get-bone-global-rest" names="class_skeleton3d_method_get_bone_global_rest"><reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference> <strong>get_bone_global_rest</strong>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-skeleton3d-method-get-bone-global-rest"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回 <literal>bone_idx</literal> 骨骼的全局放松变换。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton3d-method-get-bone-name"></target>
            <paragraph classes="classref-method" ids="class-skeleton3d-method-get-bone-name" names="class_skeleton3d_method_get_bone_name"><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>get_bone_name</strong>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-skeleton3d-method-get-bone-name"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回索引为 <literal>bone_idx</literal> 的骨骼的名称。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton3d-method-get-bone-parent"></target>
            <paragraph classes="classref-method" ids="class-skeleton3d-method-get-bone-parent" names="class_skeleton3d_method_get_bone_parent"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_bone_parent</strong>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-skeleton3d-method-get-bone-parent"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回 <literal>bone_idx</literal> 处的骨骼的父级骨骼索引。如果为 -1，则该骨骼没有父级。</paragraph>
            <paragraph><strong>注意：</strong>返回的父骨骼索引总是小于 <literal>bone_idx</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton3d-method-get-bone-pose"></target>
            <paragraph classes="classref-method" ids="class-skeleton3d-method-get-bone-pose" names="class_skeleton3d_method_get_bone_pose"><reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference> <strong>get_bone_pose</strong>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-skeleton3d-method-get-bone-pose"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Returns the pose transform of the specified bone.</paragraph>
            <paragraph><strong>Note:</strong> This is the pose you set to the skeleton in the process, the final pose can get overridden by modifiers in the deferred process, if you want to access the final pose, use <reference internal="True" refuri="class_skeletonmodifier3d#class-skeletonmodifier3d-signal-modification-processed"><inline classes="std std-ref">SkeletonModifier3D.modification_processed</inline></reference>.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton3d-method-get-bone-pose-position"></target>
            <paragraph classes="classref-method" ids="class-skeleton3d-method-get-bone-pose-position" names="class_skeleton3d_method_get_bone_pose_position"><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> <strong>get_bone_pose_position</strong>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-skeleton3d-method-get-bone-pose-position"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回骨骼在 <literal>bone_idx</literal>处的姿势位置。返回的 <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> 位于 <strong>Skeleton3D</strong> 节点的局部坐标空间中。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton3d-method-get-bone-pose-rotation"></target>
            <paragraph classes="classref-method" ids="class-skeleton3d-method-get-bone-pose-rotation" names="class_skeleton3d_method_get_bone_pose_rotation"><reference internal="True" refuri="class_quaternion#class-quaternion"><inline classes="std std-ref">Quaternion</inline></reference> <strong>get_bone_pose_rotation</strong>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-skeleton3d-method-get-bone-pose-rotation"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回 <literal>bone_idx</literal> 处骨骼的姿势旋转。返回的 <reference internal="True" refuri="class_quaternion#class-quaternion"><inline classes="std std-ref">Quaternion</inline></reference> 是局部于该骨骼的，且相对于任何父骨骼的旋转。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton3d-method-get-bone-pose-scale"></target>
            <paragraph classes="classref-method" ids="class-skeleton3d-method-get-bone-pose-scale" names="class_skeleton3d_method_get_bone_pose_scale"><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> <strong>get_bone_pose_scale</strong>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-skeleton3d-method-get-bone-pose-scale"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回 <literal>bone_idx</literal> 处骨骼的姿态缩放。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton3d-method-get-bone-rest"></target>
            <paragraph classes="classref-method" ids="class-skeleton3d-method-get-bone-rest" names="class_skeleton3d_method_get_bone_rest"><reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference> <strong>get_bone_rest</strong>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-skeleton3d-method-get-bone-rest"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回骨骼 <literal>bone_idx</literal> 的放松变换。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton3d-method-get-concatenated-bone-names"></target>
            <paragraph classes="classref-method" ids="class-skeleton3d-method-get-concatenated-bone-names" names="class_skeleton3d_method_get_concatenated_bone_names"><reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference> <strong>get_concatenated_bone_names</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-skeleton3d-method-get-concatenated-bone-names"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Returns all bone names concatenated with commas (<literal>,</literal>) as a single <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>.</paragraph>
            <paragraph>It is useful to set it as a hint for the enum property.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton3d-method-get-parentless-bones"></target>
            <paragraph classes="classref-method" ids="class-skeleton3d-method-get-parentless-bones" names="class_skeleton3d_method_get_parentless_bones"><reference internal="True" refuri="class_packedint32array#class-packedint32array"><inline classes="std std-ref">PackedInt32Array</inline></reference> <strong>get_parentless_bones</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-skeleton3d-method-get-parentless-bones"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回一个包含所有无父级的骨骼的数组。另一种看待这一点的方法是，它返回所有骨骼的索引，这些骨骼不依赖于该骨架中的其他骨骼，或不被该骨架中的其他骨骼修改。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton3d-method-get-version"></target>
            <paragraph classes="classref-method" ids="class-skeleton3d-method-get-version" names="class_skeleton3d_method_get_version"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_version</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-skeleton3d-method-get-version"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回骨骼层次结构在该骨架中更改的次数，包括重命名。</paragraph>
            <paragraph>骨架版本没有被序列化：只能在 Skeleton3D 的单个实例中使用。</paragraph>
            <paragraph>用于使 IK 解算器中的和处理骨骼的其他节点中的缓存失效。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton3d-method-is-bone-enabled"></target>
            <paragraph classes="classref-method" ids="class-skeleton3d-method-is-bone-enabled" names="class_skeleton3d_method_is_bone_enabled"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_bone_enabled</strong>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-skeleton3d-method-is-bone-enabled"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回位于 <literal>bone_idx</literal> 的骨骼是否启用了骨骼姿势。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton3d-method-localize-rests"></target>
            <paragraph classes="classref-method" ids="class-skeleton3d-method-localize-rests" names="class_skeleton3d_method_localize_rests"><abbreviation explanation="无返回值。">void</abbreviation> <strong>localize_rests</strong>() <reference internal="True" refid="class-skeleton3d-method-localize-rests"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将骨架中的所有骨骼都恢复到放松姿势。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton3d-method-physical-bones-add-collision-exception"></target>
            <paragraph classes="classref-method" ids="class-skeleton3d-method-physical-bones-add-collision-exception" names="class_skeleton3d_method_physical_bones_add_collision_exception"><abbreviation explanation="无返回值。">void</abbreviation> <strong>physical_bones_add_collision_exception</strong>(exception: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <reference internal="True" refid="class-skeleton3d-method-physical-bones-add-collision-exception"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><strong>已弃用：</strong> 未来版本中可能修改或移除该方法。</paragraph>
            <paragraph>向物理骨骼添加一个碰撞例外。</paragraph>
            <paragraph>就像 <reference internal="True" refuri="class_rigidbody3d#class-rigidbody3d"><inline classes="std std-ref">RigidBody3D</inline></reference> 节点一样工作。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton3d-method-physical-bones-remove-collision-exception"></target>
            <paragraph classes="classref-method" ids="class-skeleton3d-method-physical-bones-remove-collision-exception" names="class_skeleton3d_method_physical_bones_remove_collision_exception"><abbreviation explanation="无返回值。">void</abbreviation> <strong>physical_bones_remove_collision_exception</strong>(exception: <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>) <reference internal="True" refid="class-skeleton3d-method-physical-bones-remove-collision-exception"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><strong>已弃用：</strong> 未来版本中可能修改或移除该方法。</paragraph>
            <paragraph>移除物理骨骼的一个碰撞例外。</paragraph>
            <paragraph>就像 <reference internal="True" refuri="class_rigidbody3d#class-rigidbody3d"><inline classes="std std-ref">RigidBody3D</inline></reference> 节点一样工作。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton3d-method-physical-bones-start-simulation"></target>
            <paragraph classes="classref-method" ids="class-skeleton3d-method-physical-bones-start-simulation" names="class_skeleton3d_method_physical_bones_start_simulation"><abbreviation explanation="无返回值。">void</abbreviation> <strong>physical_bones_start_simulation</strong>(bones: <reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>] = []) <reference internal="True" refid="class-skeleton3d-method-physical-bones-start-simulation"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><strong>已弃用：</strong> 未来版本中可能修改或移除该方法。</paragraph>
            <paragraph>让 Skeleton 中的 <reference internal="True" refuri="class_physicalbone3d#class-physicalbone3d"><inline classes="std std-ref">PhysicalBone3D</inline></reference> 节点开始仿真模拟，对物理世界做出反应。</paragraph>
            <paragraph>可以传入骨骼名称列表，只对传入的骨骼进行仿真模拟。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton3d-method-physical-bones-stop-simulation"></target>
            <paragraph classes="classref-method" ids="class-skeleton3d-method-physical-bones-stop-simulation" names="class_skeleton3d_method_physical_bones_stop_simulation"><abbreviation explanation="无返回值。">void</abbreviation> <strong>physical_bones_stop_simulation</strong>() <reference internal="True" refid="class-skeleton3d-method-physical-bones-stop-simulation"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><strong>已弃用：</strong> 未来版本中可能修改或移除该方法。</paragraph>
            <paragraph>让 Skeleton 中的 <reference internal="True" refuri="class_physicalbone3d#class-physicalbone3d"><inline classes="std std-ref">PhysicalBone3D</inline></reference> 节点停止仿真模拟。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton3d-method-register-skin"></target>
            <paragraph classes="classref-method" ids="class-skeleton3d-method-register-skin" names="class_skeleton3d_method_register_skin"><reference internal="True" refuri="class_skinreference#class-skinreference"><inline classes="std std-ref">SkinReference</inline></reference> <strong>register_skin</strong>(skin: <reference internal="True" refuri="class_skin#class-skin"><inline classes="std std-ref">Skin</inline></reference>) <reference internal="True" refid="class-skeleton3d-method-register-skin"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将给定的 Skin 绑定到 Skeleton。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton3d-method-reset-bone-pose"></target>
            <paragraph classes="classref-method" ids="class-skeleton3d-method-reset-bone-pose" names="class_skeleton3d_method_reset_bone_pose"><abbreviation explanation="无返回值。">void</abbreviation> <strong>reset_bone_pose</strong>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-skeleton3d-method-reset-bone-pose"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将 <literal>bone_idx</literal> 骨骼设置为放松姿势。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton3d-method-reset-bone-poses"></target>
            <paragraph classes="classref-method" ids="class-skeleton3d-method-reset-bone-poses" names="class_skeleton3d_method_reset_bone_poses"><abbreviation explanation="无返回值。">void</abbreviation> <strong>reset_bone_poses</strong>() <reference internal="True" refid="class-skeleton3d-method-reset-bone-poses"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将所有骨骼都设置为放松姿势。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton3d-method-set-animate-physical-bones"></target>
            <paragraph classes="classref-method" ids="class-skeleton3d-method-set-animate-physical-bones" names="class_skeleton3d_method_set_animate_physical_bones"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_animate_physical_bones</strong>(enabled: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <reference internal="True" refid="class-skeleton3d-method-set-animate-physical-bones"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><strong>已弃用：</strong> 未来版本中可能修改或移除该方法。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton3d-method-set-bone-enabled"></target>
            <paragraph classes="classref-method" ids="class-skeleton3d-method-set-bone-enabled" names="class_skeleton3d_method_set_bone_enabled"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_bone_enabled</strong>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, enabled: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = true) <reference internal="True" refid="class-skeleton3d-method-set-bone-enabled"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果为 <literal>false</literal> 则为位于 <literal>bone_idx</literal> 的骨骼禁用姿势，如果为 <literal>true</literal> 则启用该骨骼姿势。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton3d-method-set-bone-global-pose"></target>
            <paragraph classes="classref-method" ids="class-skeleton3d-method-set-bone-global-pose" names="class_skeleton3d_method_set_bone_global_pose"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_bone_global_pose</strong>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, pose: <reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference>) <reference internal="True" refid="class-skeleton3d-method-set-bone-global-pose"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Sets the global pose transform, <literal>pose</literal>, for the bone at <literal>bone_idx</literal>.</paragraph>
            <paragraph><strong>Note:</strong> If other bone poses have been changed, this method executes a dirty poses recalculation and will cause performance to deteriorate. If you know that multiple global poses will be applied, consider using <reference internal="True" refid="class-skeleton3d-method-set-bone-pose"><inline classes="std std-ref">set_bone_pose</inline></reference> with precalculation.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton3d-method-set-bone-global-pose-override"></target>
            <paragraph classes="classref-method" ids="class-skeleton3d-method-set-bone-global-pose-override" names="class_skeleton3d_method_set_bone_global_pose_override"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_bone_global_pose_override</strong>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, pose: <reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference>, amount: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>, persistent: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = false) <reference internal="True" refid="class-skeleton3d-method-set-bone-global-pose-override"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><strong>已弃用：</strong> 未来版本中可能修改或移除该方法。</paragraph>
            <paragraph>为 <literal>bone_idx</literal> 处的骨骼设置全局姿势变换 <literal>pose</literal>。</paragraph>
            <paragraph><literal>amount</literal> 是应用姿势时将使用的插值强度，<literal>persistent</literal> 决定应用的姿势是否会保留。</paragraph>
            <paragraph><strong>注意：</strong>姿势变换需要的是全局姿势！要将 <reference internal="True" refuri="class_node3d#class-node3d"><inline classes="std std-ref">Node3D</inline></reference> 的世界变换转换为全局骨骼姿势，请将节点的 <reference internal="True" refuri="class_node3d#class-node3d-property-global-transform"><inline classes="std std-ref">Node3D.global_transform</inline></reference> 的 <reference internal="True" refuri="class_transform3d#class-transform3d-method-affine-inverse"><inline classes="std std-ref">Transform3D.affine_inverse</inline></reference> 乘以所期望的世界变换。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton3d-method-set-bone-name"></target>
            <paragraph classes="classref-method" ids="class-skeleton3d-method-set-bone-name" names="class_skeleton3d_method_set_bone_name"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_bone_name</strong>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <reference internal="True" refid="class-skeleton3d-method-set-bone-name"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Sets the bone name, <literal>name</literal>, for the bone at <literal>bone_idx</literal>.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton3d-method-set-bone-parent"></target>
            <paragraph classes="classref-method" ids="class-skeleton3d-method-set-bone-parent" names="class_skeleton3d_method_set_bone_parent"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_bone_parent</strong>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, parent_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-skeleton3d-method-set-bone-parent"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将骨骼索引 <literal>parent_idx</literal> 设置为 <literal>bone_idx</literal> 处骨骼的父级。如果为 -1，则该骨骼没有父级。</paragraph>
            <paragraph><strong>注意：</strong><literal>parent_idx</literal> 必须小于 <literal>bone_idx</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton3d-method-set-bone-pose"></target>
            <paragraph classes="classref-method" ids="class-skeleton3d-method-set-bone-pose" names="class_skeleton3d_method_set_bone_pose"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_bone_pose</strong>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, pose: <reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference>) <reference internal="True" refid="class-skeleton3d-method-set-bone-pose"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Sets the pose transform, <literal>pose</literal>, for the bone at <literal>bone_idx</literal>.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton3d-method-set-bone-pose-position"></target>
            <paragraph classes="classref-method" ids="class-skeleton3d-method-set-bone-pose-position" names="class_skeleton3d_method_set_bone_pose_position"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_bone_pose_position</strong>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, position: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>) <reference internal="True" refid="class-skeleton3d-method-set-bone-pose-position"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将 <literal>bone_idx</literal> 处的骨骼姿势位置设置为 <literal>position</literal>。<literal>position</literal> 是一个 <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>，描述局部于 <strong>Skeleton3D</strong> 节点的位置。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton3d-method-set-bone-pose-rotation"></target>
            <paragraph classes="classref-method" ids="class-skeleton3d-method-set-bone-pose-rotation" names="class_skeleton3d_method_set_bone_pose_rotation"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_bone_pose_rotation</strong>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, rotation: <reference internal="True" refuri="class_quaternion#class-quaternion"><inline classes="std std-ref">Quaternion</inline></reference>) <reference internal="True" refid="class-skeleton3d-method-set-bone-pose-rotation"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将 <literal>bone_idx</literal> 处骨骼的姿势旋转设置为 <literal>rotation</literal>。<literal>rotation</literal> 是一个 <reference internal="True" refuri="class_quaternion#class-quaternion"><inline classes="std std-ref">Quaternion</inline></reference>，描述该骨骼局部坐标空间中相对于任何父骨骼的旋转的旋转。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton3d-method-set-bone-pose-scale"></target>
            <paragraph classes="classref-method" ids="class-skeleton3d-method-set-bone-pose-scale" names="class_skeleton3d_method_set_bone_pose_scale"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_bone_pose_scale</strong>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, scale: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>) <reference internal="True" refid="class-skeleton3d-method-set-bone-pose-scale"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将 <literal>bone_idx</literal> 处骨骼的姿势缩放设置为 <literal>scale</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton3d-method-set-bone-rest"></target>
            <paragraph classes="classref-method" ids="class-skeleton3d-method-set-bone-rest" names="class_skeleton3d_method_set_bone_rest"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_bone_rest</strong>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, rest: <reference internal="True" refuri="class_transform3d#class-transform3d"><inline classes="std std-ref">Transform3D</inline></reference>) <reference internal="True" refid="class-skeleton3d-method-set-bone-rest"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置骨骼 <literal>bone_idx</literal> 的放松变换。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-skeleton3d-method-unparent-bone-and-rest"></target>
            <paragraph classes="classref-method" ids="class-skeleton3d-method-unparent-bone-and-rest" names="class_skeleton3d_method_unparent_bone_and_rest"><abbreviation explanation="无返回值。">void</abbreviation> <strong>unparent_bone_and_rest</strong>(bone_idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-skeleton3d-method-unparent-bone-and-rest"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>让位于 <literal>bone_idx</literal> 的骨骼不再有父级，并将其放松位置设置为之前父级放松时的位置。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

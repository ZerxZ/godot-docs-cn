<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_editorsceneformatimporter.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/EditorSceneFormatImporter.xml.</comment>
    <target refid="class-editorsceneformatimporter"></target>
    <section ids="editorsceneformatimporter class-editorsceneformatimporter" names="editorsceneformatimporter class_editorsceneformatimporter">
        <title>EditorSceneFormatImporter</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph><strong>派生：</strong> <reference internal="True" refuri="class_editorsceneformatimporterblend#class-editorsceneformatimporterblend"><inline classes="std std-ref">EditorSceneFormatImporterBlend</inline></reference>, <reference internal="True" refuri="class_editorsceneformatimporterfbx2gltf#class-editorsceneformatimporterfbx2gltf"><inline classes="std std-ref">EditorSceneFormatImporterFBX2GLTF</inline></reference>, <reference internal="True" refuri="class_editorsceneformatimportergltf#class-editorsceneformatimportergltf"><inline classes="std std-ref">EditorSceneFormatImporterGLTF</inline></reference>, <reference internal="True" refuri="class_editorsceneformatimporterufbx#class-editorsceneformatimporterufbx"><inline classes="std std-ref">EditorSceneFormatImporterUFBX</inline></reference></paragraph>
        <paragraph>从第三方的 3D 文件中导入场景。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph><strong>EditorSceneFormatImporter</strong> 允许为第三方 3D 格式定义导入器脚本。</paragraph>
            <paragraph>要使用 <strong>EditorSceneFormatImporter</strong>，请先使用 <reference internal="True" refuri="class_editorplugin#class-editorplugin-method-add-scene-format-importer-plugin"><inline classes="std std-ref">EditorPlugin.add_scene_format_importer_plugin</inline></reference> 方法注册它。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="51"></colspec>
                    <colspec colwidth="241"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_packedstringarray#class-packedstringarray"><inline classes="std std-ref">PackedStringArray</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorsceneformatimporter-private-method-get-extensions"><inline classes="std std-ref">_get_extensions</inline></reference>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorsceneformatimporter-private-method-get-import-flags"><inline classes="std std-ref">_get_import_flags</inline></reference>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorsceneformatimporter-private-method-get-import-options"><inline classes="std std-ref">_get_import_options</inline></reference>(path: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorsceneformatimporter-private-method-get-option-visibility"><inline classes="std std-ref">_get_option_visibility</inline></reference>(path: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, for_animation: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>, option: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorsceneformatimporter-private-method-import-scene"><inline classes="std std-ref">_import_scene</inline></reference>(path: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, flags: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, options: <reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="常量">
            <title>常量</title>
            <target refid="class-editorsceneformatimporter-constant-import-scene"></target>
            <paragraph classes="classref-constant" ids="class-editorsceneformatimporter-constant-import-scene" names="class_editorsceneformatimporter_constant_import_scene"><strong>IMPORT_SCENE</strong> = <literal>1</literal> <reference internal="True" refid="class-editorsceneformatimporter-constant-import-scene"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <container classes="contribute">
                <paragraph>该常量目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
            <target refid="class-editorsceneformatimporter-constant-import-animation"></target>
            <paragraph classes="classref-constant" ids="class-editorsceneformatimporter-constant-import-animation" names="class_editorsceneformatimporter_constant_import_animation"><strong>IMPORT_ANIMATION</strong> = <literal>2</literal> <reference internal="True" refid="class-editorsceneformatimporter-constant-import-animation"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <container classes="contribute">
                <paragraph>该常量目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
            <target refid="class-editorsceneformatimporter-constant-import-fail-on-missing-dependencies"></target>
            <paragraph classes="classref-constant" ids="class-editorsceneformatimporter-constant-import-fail-on-missing-dependencies" names="class_editorsceneformatimporter_constant_import_fail_on_missing_dependencies"><strong>IMPORT_FAIL_ON_MISSING_DEPENDENCIES</strong> = <literal>4</literal> <reference internal="True" refid="class-editorsceneformatimporter-constant-import-fail-on-missing-dependencies"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <container classes="contribute">
                <paragraph>该常量目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
            <target refid="class-editorsceneformatimporter-constant-import-generate-tangent-arrays"></target>
            <paragraph classes="classref-constant" ids="class-editorsceneformatimporter-constant-import-generate-tangent-arrays" names="class_editorsceneformatimporter_constant_import_generate_tangent_arrays"><strong>IMPORT_GENERATE_TANGENT_ARRAYS</strong> = <literal>8</literal> <reference internal="True" refid="class-editorsceneformatimporter-constant-import-generate-tangent-arrays"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <container classes="contribute">
                <paragraph>该常量目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
            <target refid="class-editorsceneformatimporter-constant-import-use-named-skin-binds"></target>
            <paragraph classes="classref-constant" ids="class-editorsceneformatimporter-constant-import-use-named-skin-binds" names="class_editorsceneformatimporter_constant_import_use_named_skin_binds"><strong>IMPORT_USE_NAMED_SKIN_BINDS</strong> = <literal>16</literal> <reference internal="True" refid="class-editorsceneformatimporter-constant-import-use-named-skin-binds"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <container classes="contribute">
                <paragraph>该常量目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
            <target refid="class-editorsceneformatimporter-constant-import-discard-meshes-and-materials"></target>
            <paragraph classes="classref-constant" ids="class-editorsceneformatimporter-constant-import-discard-meshes-and-materials" names="class_editorsceneformatimporter_constant_import_discard_meshes_and_materials"><strong>IMPORT_DISCARD_MESHES_AND_MATERIALS</strong> = <literal>32</literal> <reference internal="True" refid="class-editorsceneformatimporter-constant-import-discard-meshes-and-materials"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <container classes="contribute">
                <paragraph>该常量目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
            <target refid="class-editorsceneformatimporter-constant-import-force-disable-mesh-compression"></target>
            <paragraph classes="classref-constant" ids="class-editorsceneformatimporter-constant-import-force-disable-mesh-compression" names="class_editorsceneformatimporter_constant_import_force_disable_mesh_compression"><strong>IMPORT_FORCE_DISABLE_MESH_COMPRESSION</strong> = <literal>64</literal> <reference internal="True" refid="class-editorsceneformatimporter-constant-import-force-disable-mesh-compression"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <container classes="contribute">
                <paragraph>该常量目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="方法说明">
            <title>方法说明</title>
            <target refid="class-editorsceneformatimporter-private-method-get-extensions"></target>
            <paragraph classes="classref-method" ids="class-editorsceneformatimporter-private-method-get-extensions" names="class_editorsceneformatimporter_private_method__get_extensions"><reference internal="True" refuri="class_packedstringarray#class-packedstringarray"><inline classes="std std-ref">PackedStringArray</inline></reference> <strong>_get_extensions</strong>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-editorsceneformatimporter-private-method-get-extensions"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <container classes="contribute">
                <paragraph>该方法目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorsceneformatimporter-private-method-get-import-flags"></target>
            <paragraph classes="classref-method" ids="class-editorsceneformatimporter-private-method-get-import-flags" names="class_editorsceneformatimporter_private_method__get_import_flags"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>_get_import_flags</strong>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-editorsceneformatimporter-private-method-get-import-flags"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <container classes="contribute">
                <paragraph>该方法目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorsceneformatimporter-private-method-get-import-options"></target>
            <paragraph classes="classref-method" ids="class-editorsceneformatimporter-private-method-get-import-options" names="class_editorsceneformatimporter_private_method__get_import_options"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_get_import_options</strong>(path: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-editorsceneformatimporter-private-method-get-import-options"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <container classes="contribute">
                <paragraph>该方法目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorsceneformatimporter-private-method-get-option-visibility"></target>
            <paragraph classes="classref-method" ids="class-editorsceneformatimporter-private-method-get-option-visibility" names="class_editorsceneformatimporter_private_method__get_option_visibility"><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> <strong>_get_option_visibility</strong>(path: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, for_animation: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>, option: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-editorsceneformatimporter-private-method-get-option-visibility"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <container classes="contribute">
                <paragraph>该方法目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorsceneformatimporter-private-method-import-scene"></target>
            <paragraph classes="classref-method" ids="class-editorsceneformatimporter-private-method-import-scene" names="class_editorsceneformatimporter_private_method__import_scene"><reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference> <strong>_import_scene</strong>(path: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, flags: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, options: <reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-editorsceneformatimporter-private-method-import-scene"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <container classes="contribute">
                <paragraph>该方法目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效运算符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列位标志构成位掩码的整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_inputeventscreendrag.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/InputEventScreenDrag.xml.</comment>
    <target refid="class-inputeventscreendrag"></target>
    <section ids="inputeventscreendrag class-inputeventscreendrag" names="inputeventscreendrag class_inputeventscreendrag">
        <title>InputEventScreenDrag</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_inputeventfromwindow#class-inputeventfromwindow"><inline classes="std std-ref">InputEventFromWindow</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_inputevent#class-inputevent"><inline classes="std std-ref">InputEvent</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>代表屏幕拖拽事件。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>存放与屏幕拖拽事件相关的信息。见 <reference internal="True" refuri="class_node#class-node-private-method-input"><inline classes="std std-ref">Node._input</inline></reference>。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference internal="True" refuri="../tutorials/inputs/inputevent"><inline classes="doc">使用 InputEvent</inline></reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="31"></colspec>
                    <colspec colwidth="77"></colspec>
                    <colspec colwidth="19"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-inputeventscreendrag-property-index"><inline classes="std std-ref">index</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-inputeventscreendrag-property-pen-inverted"><inline classes="std std-ref">pen_inverted</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-inputeventscreendrag-property-position"><inline classes="std std-ref">position</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Vector2(0, 0)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-inputeventscreendrag-property-pressure"><inline classes="std std-ref">pressure</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-inputeventscreendrag-property-relative"><inline classes="std std-ref">relative</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Vector2(0, 0)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-inputeventscreendrag-property-screen-relative"><inline classes="std std-ref">screen_relative</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Vector2(0, 0)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-inputeventscreendrag-property-screen-velocity"><inline classes="std std-ref">screen_velocity</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Vector2(0, 0)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-inputeventscreendrag-property-tilt"><inline classes="std std-ref">tilt</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Vector2(0, 0)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-inputeventscreendrag-property-velocity"><inline classes="std std-ref">velocity</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Vector2(0, 0)</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="属性说明">
            <title>属性说明</title>
            <target refid="class-inputeventscreendrag-property-index"></target>
            <paragraph classes="classref-property" ids="class-inputeventscreendrag-property-index" names="class_inputeventscreendrag_property_index"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>index</strong> = <literal>0</literal> <reference internal="True" refid="class-inputeventscreendrag-property-index"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_index</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_index</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>多次拖动事件中的拖动事件索引。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-inputeventscreendrag-property-pen-inverted"></target>
            <paragraph classes="classref-property" ids="class-inputeventscreendrag-property-pen-inverted" names="class_inputeventscreendrag_property_pen_inverted"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>pen_inverted</strong> = <literal>false</literal> <reference internal="True" refid="class-inputeventscreendrag-property-pen-inverted"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_pen_inverted</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_pen_inverted</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>正在使用手写笔的橡皮端时，会返回 <literal>true</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-inputeventscreendrag-property-position"></target>
            <paragraph classes="classref-property" ids="class-inputeventscreendrag-property-position" names="class_inputeventscreendrag_property_position"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>position</strong> = <literal>Vector2(0, 0)</literal> <reference internal="True" refid="class-inputeventscreendrag-property-position"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_position</strong>(value: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>get_position</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>节点所在视口中的拖动位置，使用该视口的坐标系。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-inputeventscreendrag-property-pressure"></target>
            <paragraph classes="classref-property" ids="class-inputeventscreendrag-property-pressure" names="class_inputeventscreendrag_property_pressure"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>pressure</strong> = <literal>0.0</literal> <reference internal="True" refid="class-inputeventscreendrag-property-pressure"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_pressure</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_pressure</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>表示用户对笔施加的压力。范围从 <literal>0.0</literal> 到 <literal>1.0</literal> 。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-inputeventscreendrag-property-relative"></target>
            <paragraph classes="classref-property" ids="class-inputeventscreendrag-property-relative" names="class_inputeventscreendrag_property_relative"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>relative</strong> = <literal>Vector2(0, 0)</literal> <reference internal="True" refid="class-inputeventscreendrag-property-relative"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_relative</strong>(value: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>get_relative</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>相对于前一位置（上一帧的位置）的拖动位置。</paragraph>
            <paragraph><strong>注意：</strong><reference internal="True" refid="class-inputeventscreendrag-property-relative"><inline classes="std std-ref">relative</inline></reference> 根据内容缩放系数自动缩放，内容缩放系数由项目的拉伸模式设置定义。这意味着在处理触摸瞄准的脚本中使用 <reference internal="True" refid="class-inputeventscreendrag-property-relative"><inline classes="std std-ref">relative</inline></reference> 时，触摸灵敏度将根据分辨率而有所不同。为了避免这种情况，请改用 <reference internal="True" refid="class-inputeventscreendrag-property-screen-relative"><inline classes="std std-ref">screen_relative</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-inputeventscreendrag-property-screen-relative"></target>
            <paragraph classes="classref-property" ids="class-inputeventscreendrag-property-screen-relative" names="class_inputeventscreendrag_property_screen_relative"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>screen_relative</strong> = <literal>Vector2(0, 0)</literal> <reference internal="True" refid="class-inputeventscreendrag-property-screen-relative"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_screen_relative</strong>(value: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>get_screen_relative</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>相对于屏幕坐标中的上一个位置（上一帧的位置）的未缩放拖动位置。该位置<emphasis>不</emphasis>根据内容缩放系数或调用 <reference internal="True" refuri="class_inputevent#class-inputevent-method-xformed-by"><inline classes="std std-ref">InputEvent.xformed_by</inline></reference> 进行缩放。无论项目的拉伸模式如何，对于触摸瞄准来说，这都应该优先于 <reference internal="True" refid="class-inputeventscreendrag-property-relative"><inline classes="std std-ref">relative</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-inputeventscreendrag-property-screen-velocity"></target>
            <paragraph classes="classref-property" ids="class-inputeventscreendrag-property-screen-velocity" names="class_inputeventscreendrag_property_screen_velocity"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>screen_velocity</strong> = <literal>Vector2(0, 0)</literal> <reference internal="True" refid="class-inputeventscreendrag-property-screen-velocity"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_screen_velocity</strong>(value: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>get_screen_velocity</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>屏幕坐标中未缩放的拖动速度（单位为每秒像素数）。该速度<emphasis>不会</emphasis>根据内容缩放系数或对 <reference internal="True" refuri="class_inputevent#class-inputevent-method-xformed-by"><inline classes="std std-ref">InputEvent.xformed_by</inline></reference> 的调用进行缩放。无论项目的拉伸模式如何，对于触摸瞄准来说，这都应该优先于 <reference internal="True" refid="class-inputeventscreendrag-property-velocity"><inline classes="std std-ref">velocity</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-inputeventscreendrag-property-tilt"></target>
            <paragraph classes="classref-property" ids="class-inputeventscreendrag-property-tilt" names="class_inputeventscreendrag_property_tilt"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>tilt</strong> = <literal>Vector2(0, 0)</literal> <reference internal="True" refid="class-inputeventscreendrag-property-tilt"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_tilt</strong>(value: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>get_tilt</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>代表笔的倾斜角度。正的 X 坐标值表示向右倾斜。正的Y坐标值表示向用户自身倾斜。两个轴的范围是 <literal>-1.0</literal> 到 <literal>1.0</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-inputeventscreendrag-property-velocity"></target>
            <paragraph classes="classref-property" ids="class-inputeventscreendrag-property-velocity" names="class_inputeventscreendrag_property_velocity"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>velocity</strong> = <literal>Vector2(0, 0)</literal> <reference internal="True" refid="class-inputeventscreendrag-property-velocity"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_velocity</strong>(value: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>get_velocity</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>拖动速度。</paragraph>
            <paragraph><strong>注意：</strong><reference internal="True" refid="class-inputeventscreendrag-property-velocity"><inline classes="std std-ref">velocity</inline></reference> 根据内容缩放系数自动缩放，内容缩放系数由项目的拉伸模式设置定义。这意味着在处理触摸瞄准的脚本中使用 <reference internal="True" refid="class-inputeventscreendrag-property-velocity"><inline classes="std std-ref">velocity</inline></reference> 时，触摸灵敏度将根据分辨率而表现不同。为了避免这种情况，请改用 <reference internal="True" refid="class-inputeventscreendrag-property-screen-velocity"><inline classes="std std-ref">screen_velocity</inline></reference>。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效运算符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列位标志构成位掩码的整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

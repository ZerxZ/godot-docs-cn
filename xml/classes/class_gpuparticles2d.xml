<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_gpuparticles2d.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/GPUParticles2D.xml.</comment>
    <target refid="class-gpuparticles2d"></target>
    <section ids="gpuparticles2d class-gpuparticles2d" names="gpuparticles2d class_gpuparticles2d">
        <title>GPUParticles2D</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_node2d#class-node2d"><inline classes="std std-ref">Node2D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_canvasitem#class-canvasitem"><inline classes="std std-ref">CanvasItem</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>2D 粒子发射器。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>2D 粒子节点，用于创建各种粒子系统和效果。<strong>GPUParticles2D</strong> 是一个发射器，特点是以给定的速度生成一定数量的粒子。</paragraph>
            <paragraph>使用 <reference internal="True" refid="class-gpuparticles2d-property-process-material"><inline classes="std std-ref">process_material</inline></reference> 属性来添加一个配置粒子的外观和行为的 <reference internal="True" refuri="class_particleprocessmaterial#class-particleprocessmaterial"><inline classes="std std-ref">ParticleProcessMaterial</inline></reference>。或者，你可以添加一个应用于所有粒子的 <reference internal="True" refuri="class_shadermaterial#class-shadermaterial"><inline classes="std std-ref">ShaderMaterial</inline></reference>。</paragraph>
            <paragraph>2D 粒子可以选择与 <reference internal="True" refuri="class_lightoccluder2d#class-lightoccluder2d"><inline classes="std std-ref">LightOccluder2D</inline></reference> 碰撞，但它们不会与 <reference internal="True" refuri="class_physicsbody2d#class-physicsbody2d"><inline classes="std std-ref">PhysicsBody2D</inline></reference> 节点碰撞。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference internal="True" refuri="../tutorials/2d/particle_systems_2d"><inline classes="doc">粒子系统（2D）</inline></reference></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference name="2D 粒子演示" refuri="https://godotengine.org/asset-library/asset/2724">2D 粒子演示</reference></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference name="2D Dodge The Creeps 演示（玩家身后的拖尾使用的是 GPUParticles2D）" refuri="https://godotengine.org/asset-library/asset/2712">2D Dodge The Creeps 演示（玩家身后的拖尾使用的是 GPUParticles2D）</reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="49"></colspec>
                    <colspec colwidth="93"></colspec>
                    <colspec colwidth="33"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gpuparticles2d-property-amount"><inline classes="std std-ref">amount</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>8</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gpuparticles2d-property-amount-ratio"><inline classes="std std-ref">amount_ratio</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gpuparticles2d-property-collision-base-size"><inline classes="std std-ref">collision_base_size</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-gpuparticles2d-draworder"><inline classes="std std-ref">DrawOrder</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gpuparticles2d-property-draw-order"><inline classes="std std-ref">draw_order</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gpuparticles2d-property-emitting"><inline classes="std std-ref">emitting</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gpuparticles2d-property-explosiveness"><inline classes="std std-ref">explosiveness</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gpuparticles2d-property-fixed-fps"><inline classes="std std-ref">fixed_fps</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>30</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gpuparticles2d-property-fract-delta"><inline classes="std std-ref">fract_delta</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gpuparticles2d-property-interp-to-end"><inline classes="std std-ref">interp_to_end</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gpuparticles2d-property-interpolate"><inline classes="std std-ref">interpolate</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gpuparticles2d-property-lifetime"><inline classes="std std-ref">lifetime</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gpuparticles2d-property-local-coords"><inline classes="std std-ref">local_coords</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gpuparticles2d-property-one-shot"><inline classes="std std-ref">one_shot</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gpuparticles2d-property-preprocess"><inline classes="std std-ref">preprocess</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_material#class-material"><inline classes="std std-ref">Material</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gpuparticles2d-property-process-material"><inline classes="std std-ref">process_material</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gpuparticles2d-property-randomness"><inline classes="std std-ref">randomness</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gpuparticles2d-property-speed-scale"><inline classes="std std-ref">speed_scale</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gpuparticles2d-property-sub-emitter"><inline classes="std std-ref">sub_emitter</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>NodePath("")</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gpuparticles2d-property-texture"><inline classes="std std-ref">texture</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gpuparticles2d-property-trail-enabled"><inline classes="std std-ref">trail_enabled</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gpuparticles2d-property-trail-lifetime"><inline classes="std std-ref">trail_lifetime</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.3</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gpuparticles2d-property-trail-section-subdivisions"><inline classes="std std-ref">trail_section_subdivisions</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>4</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gpuparticles2d-property-trail-sections"><inline classes="std std-ref">trail_sections</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>8</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rect2#class-rect2"><inline classes="std std-ref">Rect2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gpuparticles2d-property-visibility-rect"><inline classes="std std-ref">visibility_rect</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Rect2(-100, -100, 200, 200)</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id4" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="27"></colspec>
                    <colspec colwidth="262"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rect2#class-rect2"><inline classes="std std-ref">Rect2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gpuparticles2d-method-capture-rect"><inline classes="std std-ref">capture_rect</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gpuparticles2d-method-convert-from-particles"><inline classes="std std-ref">convert_from_particles</inline></reference>(particles: <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gpuparticles2d-method-emit-particle"><inline classes="std std-ref">emit_particle</inline></reference>(xform: <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference>, velocity: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>, color: <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference>, custom: <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference>, flags: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gpuparticles2d-method-restart"><inline classes="std std-ref">restart</inline></reference>()</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="信号">
            <title>信号</title>
            <target refid="class-gpuparticles2d-signal-finished"></target>
            <paragraph classes="classref-signal" ids="class-gpuparticles2d-signal-finished" names="class_gpuparticles2d_signal_finished"><strong>finished</strong>() <reference internal="True" refid="class-gpuparticles2d-signal-finished"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>所有活动粒子完成处理时发出。立即重启发射周期请调用 <reference internal="True" refid="class-gpuparticles2d-method-restart"><inline classes="std std-ref">restart</inline></reference>。</paragraph>
            <paragraph>禁用 <reference internal="True" refid="class-gpuparticles2d-property-one-shot"><inline classes="std std-ref">one_shot</inline></reference> 时不会发出，因为会持续发出并处理粒子。</paragraph>
            <paragraph><strong>注意：</strong>由于粒子是在 GPU 上计算的，所以 <reference internal="True" refid="class-gpuparticles2d-property-one-shot"><inline classes="std std-ref">one_shot</inline></reference> 的发射器在收到该信号后可能存在一小段特殊时期，在此期间将 <reference internal="True" refid="class-gpuparticles2d-property-emitting"><inline classes="std std-ref">emitting</inline></reference> 设为 <literal>true</literal> 无法重启发射周期。改成调用 <reference internal="True" refid="class-gpuparticles2d-method-restart"><inline classes="std std-ref">restart</inline></reference> 就可以避免这段延迟。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="枚举">
            <title>枚举</title>
            <target refid="enum-gpuparticles2d-draworder"></target>
            <paragraph classes="classref-enumeration" ids="enum-gpuparticles2d-draworder" names="enum_gpuparticles2d_draworder">enum <strong>DrawOrder</strong>: <reference internal="True" refid="enum-gpuparticles2d-draworder"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-gpuparticles2d-constant-draw-order-index"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-gpuparticles2d-constant-draw-order-index" names="class_gpuparticles2d_constant_draw_order_index"><reference internal="True" refid="enum-gpuparticles2d-draworder"><inline classes="std std-ref">DrawOrder</inline></reference> <strong>DRAW_ORDER_INDEX</strong> = <literal>0</literal></paragraph>
            <paragraph>粒子按发射顺序绘制。</paragraph>
            <target refid="class-gpuparticles2d-constant-draw-order-lifetime"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-gpuparticles2d-constant-draw-order-lifetime" names="class_gpuparticles2d_constant_draw_order_lifetime"><reference internal="True" refid="enum-gpuparticles2d-draworder"><inline classes="std std-ref">DrawOrder</inline></reference> <strong>DRAW_ORDER_LIFETIME</strong> = <literal>1</literal></paragraph>
            <paragraph>粒子按照剩余寿命的顺序绘制。换句话说，寿命最长的粒子被绘制在前面。</paragraph>
            <target refid="class-gpuparticles2d-constant-draw-order-reverse-lifetime"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-gpuparticles2d-constant-draw-order-reverse-lifetime" names="class_gpuparticles2d_constant_draw_order_reverse_lifetime"><reference internal="True" refid="enum-gpuparticles2d-draworder"><inline classes="std std-ref">DrawOrder</inline></reference> <strong>DRAW_ORDER_REVERSE_LIFETIME</strong> = <literal>2</literal></paragraph>
            <paragraph>粒子按照剩余寿命的相反顺序绘制。换句话说，寿命最短的粒子被绘制在前面。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-gpuparticles2d-emitflags"></target>
            <paragraph classes="classref-enumeration" ids="enum-gpuparticles2d-emitflags" names="enum_gpuparticles2d_emitflags">enum <strong>EmitFlags</strong>: <reference internal="True" refid="enum-gpuparticles2d-emitflags"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-gpuparticles2d-constant-emit-flag-position"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-gpuparticles2d-constant-emit-flag-position" names="class_gpuparticles2d_constant_emit_flag_position"><reference internal="True" refid="enum-gpuparticles2d-emitflags"><inline classes="std std-ref">EmitFlags</inline></reference> <strong>EMIT_FLAG_POSITION</strong> = <literal>1</literal></paragraph>
            <paragraph>粒子在指定位置开始。</paragraph>
            <target refid="class-gpuparticles2d-constant-emit-flag-rotation-scale"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-gpuparticles2d-constant-emit-flag-rotation-scale" names="class_gpuparticles2d_constant_emit_flag_rotation_scale"><reference internal="True" refid="enum-gpuparticles2d-emitflags"><inline classes="std std-ref">EmitFlags</inline></reference> <strong>EMIT_FLAG_ROTATION_SCALE</strong> = <literal>2</literal></paragraph>
            <paragraph>粒子以指定的旋转和缩放开始。</paragraph>
            <target refid="class-gpuparticles2d-constant-emit-flag-velocity"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-gpuparticles2d-constant-emit-flag-velocity" names="class_gpuparticles2d_constant_emit_flag_velocity"><reference internal="True" refid="enum-gpuparticles2d-emitflags"><inline classes="std std-ref">EmitFlags</inline></reference> <strong>EMIT_FLAG_VELOCITY</strong> = <literal>4</literal></paragraph>
            <paragraph>粒子从指定的速度向量开始，该向量定义了发射方向和速度。</paragraph>
            <target refid="class-gpuparticles2d-constant-emit-flag-color"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-gpuparticles2d-constant-emit-flag-color" names="class_gpuparticles2d_constant_emit_flag_color"><reference internal="True" refid="enum-gpuparticles2d-emitflags"><inline classes="std std-ref">EmitFlags</inline></reference> <strong>EMIT_FLAG_COLOR</strong> = <literal>8</literal></paragraph>
            <paragraph>粒子以指定的颜色开始。</paragraph>
            <target refid="class-gpuparticles2d-constant-emit-flag-custom"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-gpuparticles2d-constant-emit-flag-custom" names="class_gpuparticles2d_constant_emit_flag_custom"><reference internal="True" refid="enum-gpuparticles2d-emitflags"><inline classes="std std-ref">EmitFlags</inline></reference> <strong>EMIT_FLAG_CUSTOM</strong> = <literal>16</literal></paragraph>
            <paragraph>粒子以指定的 <literal>CUSTOM</literal> 数据开始。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id7" names="属性说明">
            <title>属性说明</title>
            <target refid="class-gpuparticles2d-property-amount"></target>
            <paragraph classes="classref-property" ids="class-gpuparticles2d-property-amount" names="class_gpuparticles2d_property_amount"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>amount</strong> = <literal>8</literal> <reference internal="True" refid="class-gpuparticles2d-property-amount"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_amount</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_amount</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>一个发射周期内发射的粒子数。有效发射速率为每秒 <literal>(amount * amount_ratio) / lifetime</literal> 个粒子。较高的值会增加 GPU 要求，即使在给定时间并非所有粒子都可见或 <reference internal="True" refid="class-gpuparticles2d-property-amount-ratio"><inline classes="std std-ref">amount_ratio</inline></reference> 减少。</paragraph>
            <paragraph><strong>注意：</strong>更改该值将导致粒子系统重新启动。为了避免这种情况，请更改 <reference internal="True" refid="class-gpuparticles2d-property-amount-ratio"><inline classes="std std-ref">amount_ratio</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gpuparticles2d-property-amount-ratio"></target>
            <paragraph classes="classref-property" ids="class-gpuparticles2d-property-amount-ratio" names="class_gpuparticles2d_property_amount_ratio"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>amount_ratio</strong> = <literal>1.0</literal> <reference internal="True" refid="class-gpuparticles2d-property-amount-ratio"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_amount_ratio</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_amount_ratio</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>实际应该发射的粒子的比率。如果被设置为低于 <literal>1.0</literal> 的值，则会将整个生命周期内发射的粒子数量设置为 <literal>amount * amount_ratio</literal>。与更改 <reference internal="True" refid="class-gpuparticles2d-property-amount"><inline classes="std std-ref">amount</inline></reference> 不同，发射时更改 <reference internal="True" refid="class-gpuparticles2d-property-amount-ratio"><inline classes="std std-ref">amount_ratio</inline></reference> 不会影响已发射的粒子，也不会导致粒子系统重新启动。<reference internal="True" refid="class-gpuparticles2d-property-amount-ratio"><inline classes="std std-ref">amount_ratio</inline></reference> 可用于创建使发射粒子的数量随时间变化的效果。</paragraph>
            <paragraph><strong>注意：</strong>减少 <reference internal="True" refid="class-gpuparticles2d-property-amount-ratio"><inline classes="std std-ref">amount_ratio</inline></reference> 不会带来性能优势，因为无论 <reference internal="True" refid="class-gpuparticles2d-property-amount-ratio"><inline classes="std std-ref">amount_ratio</inline></reference> 是多少，都需要为粒子总数 <reference internal="True" refid="class-gpuparticles2d-property-amount"><inline classes="std std-ref">amount</inline></reference> 分配和处理资源。如果你不打算在粒子发射时更改发射的粒子数量，请确保将 <reference internal="True" refid="class-gpuparticles2d-property-amount-ratio"><inline classes="std std-ref">amount_ratio</inline></reference> 设置为 <literal>1</literal> 并根据你的喜好更改 <reference internal="True" refid="class-gpuparticles2d-property-amount"><inline classes="std std-ref">amount</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gpuparticles2d-property-collision-base-size"></target>
            <paragraph classes="classref-property" ids="class-gpuparticles2d-property-collision-base-size" names="class_gpuparticles2d_property_collision_base_size"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>collision_base_size</strong> = <literal>1.0</literal> <reference internal="True" refid="class-gpuparticles2d-property-collision-base-size"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_collision_base_size</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_collision_base_size</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>粒子碰撞半径的乘数。<literal>1.0</literal> 对应于该精灵的大小。如果碰撞时粒子似乎沉入地下，请增加该值。如果粒子在碰撞时出现漂浮，请减小该值。仅当 <reference internal="True" refuri="class_particleprocessmaterial#class-particleprocessmaterial-property-collision-mode"><inline classes="std std-ref">ParticleProcessMaterial.collision_mode</inline></reference> 为 <reference internal="True" refuri="class_particleprocessmaterial#class-particleprocessmaterial-constant-collision-rigid"><inline classes="std std-ref">ParticleProcessMaterial.COLLISION_RIGID</inline></reference> 或 <reference internal="True" refuri="class_particleprocessmaterial#class-particleprocessmaterial-constant-collision-hide-on-contact"><inline classes="std std-ref">ParticleProcessMaterial.COLLISION_HIDE_ON_CONTACT</inline></reference> 时有效。</paragraph>
            <paragraph><strong>注意：</strong>粒子始终具有球形碰撞形状。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gpuparticles2d-property-draw-order"></target>
            <paragraph classes="classref-property" ids="class-gpuparticles2d-property-draw-order" names="class_gpuparticles2d_property_draw_order"><reference internal="True" refid="enum-gpuparticles2d-draworder"><inline classes="std std-ref">DrawOrder</inline></reference> <strong>draw_order</strong> = <literal>1</literal> <reference internal="True" refid="class-gpuparticles2d-property-draw-order"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_draw_order</strong>(value: <reference internal="True" refid="enum-gpuparticles2d-draworder"><inline classes="std std-ref">DrawOrder</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-gpuparticles2d-draworder"><inline classes="std std-ref">DrawOrder</inline></reference> <strong>get_draw_order</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>粒子绘制顺序。使用 <reference internal="True" refid="enum-gpuparticles2d-draworder"><inline classes="std std-ref">DrawOrder</inline></reference> 的值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gpuparticles2d-property-emitting"></target>
            <paragraph classes="classref-property" ids="class-gpuparticles2d-property-emitting" names="class_gpuparticles2d_property_emitting"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>emitting</strong> = <literal>true</literal> <reference internal="True" refid="class-gpuparticles2d-property-emitting"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_emitting</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_emitting</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>If <literal>true</literal>, particles are being emitted. <reference internal="True" refid="class-gpuparticles2d-property-emitting"><inline classes="std std-ref">emitting</inline></reference> can be used to start and stop particles from emitting. However, if <reference internal="True" refid="class-gpuparticles2d-property-one-shot"><inline classes="std std-ref">one_shot</inline></reference> is <literal>true</literal> setting <reference internal="True" refid="class-gpuparticles2d-property-emitting"><inline classes="std std-ref">emitting</inline></reference> to <literal>true</literal> will not restart the emission cycle unless all active particles have finished processing. Use the <reference internal="True" refid="class-gpuparticles2d-signal-finished"><inline classes="std std-ref">finished</inline></reference> signal to be notified once all active particles finish processing.</paragraph>
            <paragraph><strong>Note:</strong> For <reference internal="True" refid="class-gpuparticles2d-property-one-shot"><inline classes="std std-ref">one_shot</inline></reference> emitters, due to the particles being computed on the GPU, there may be a short period after receiving the <reference internal="True" refid="class-gpuparticles2d-signal-finished"><inline classes="std std-ref">finished</inline></reference> signal during which setting this to <literal>true</literal> will not restart the emission cycle.</paragraph>
            <paragraph><strong>Tip:</strong> If your <reference internal="True" refid="class-gpuparticles2d-property-one-shot"><inline classes="std std-ref">one_shot</inline></reference> emitter needs to immediately restart emitting particles once <reference internal="True" refid="class-gpuparticles2d-signal-finished"><inline classes="std std-ref">finished</inline></reference> signal is received, consider calling <reference internal="True" refid="class-gpuparticles2d-method-restart"><inline classes="std std-ref">restart</inline></reference> instead of setting <reference internal="True" refid="class-gpuparticles2d-property-emitting"><inline classes="std std-ref">emitting</inline></reference>.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gpuparticles2d-property-explosiveness"></target>
            <paragraph classes="classref-property" ids="class-gpuparticles2d-property-explosiveness" names="class_gpuparticles2d_property_explosiveness"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>explosiveness</strong> = <literal>0.0</literal> <reference internal="True" refid="class-gpuparticles2d-property-explosiveness"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_explosiveness_ratio</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_explosiveness_ratio</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>粒子在单个发射周期中的发射有多急。如果大于 <literal>0</literal>，则在下一个发射周期开始之前，发射会出现一个间隔。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gpuparticles2d-property-fixed-fps"></target>
            <paragraph classes="classref-property" ids="class-gpuparticles2d-property-fixed-fps" names="class_gpuparticles2d_property_fixed_fps"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>fixed_fps</strong> = <literal>30</literal> <reference internal="True" refid="class-gpuparticles2d-property-fixed-fps"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_fixed_fps</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_fixed_fps</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>粒子系统的帧速率被固定为一个值。例如，将值更改为 2 会使粒子以每秒 2 帧的速度渲染。请注意，这并不会降低粒子系统本身的模拟速度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gpuparticles2d-property-fract-delta"></target>
            <paragraph classes="classref-property" ids="class-gpuparticles2d-property-fract-delta" names="class_gpuparticles2d_property_fract_delta"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>fract_delta</strong> = <literal>true</literal> <reference internal="True" refid="class-gpuparticles2d-property-fract-delta"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_fractional_delta</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_fractional_delta</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>为true</literal>，则使用分数增量 delta 计算，将具有更平滑的粒子显示效果。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gpuparticles2d-property-interp-to-end"></target>
            <paragraph classes="classref-property" ids="class-gpuparticles2d-property-interp-to-end" names="class_gpuparticles2d_property_interp_to_end"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>interp_to_end</strong> = <literal>0.0</literal> <reference internal="True" refid="class-gpuparticles2d-property-interp-to-end"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_interp_to_end</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_interp_to_end</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>导致该节点中的所有粒子插值到其生命周期结束时。</paragraph>
            <paragraph><strong>注意：</strong>这仅在与 <reference internal="True" refuri="class_particleprocessmaterial#class-particleprocessmaterial"><inline classes="std std-ref">ParticleProcessMaterial</inline></reference> 一起使用时才有效。对于自定义进程着色器，需要手动实现。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gpuparticles2d-property-interpolate"></target>
            <paragraph classes="classref-property" ids="class-gpuparticles2d-property-interpolate" names="class_gpuparticles2d_property_interpolate"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>interpolate</strong> = <literal>true</literal> <reference internal="True" refid="class-gpuparticles2d-property-interpolate"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_interpolate</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_interpolate</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>启用粒子插值，当<reference internal="True" refid="class-gpuparticles2d-property-fixed-fps"><inline classes="std std-ref">fixed_fps</inline></reference> 低于屏幕刷新率时，使粒子运动更平滑。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gpuparticles2d-property-lifetime"></target>
            <paragraph classes="classref-property" ids="class-gpuparticles2d-property-lifetime" names="class_gpuparticles2d_property_lifetime"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>lifetime</strong> = <literal>1.0</literal> <reference internal="True" refid="class-gpuparticles2d-property-lifetime"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_lifetime</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_lifetime</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>每个粒子存在的时间（以秒为单位）。有效发射速率为每秒 <literal>(amount * amount_ratio) / lifetime</literal> 个粒子。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gpuparticles2d-property-local-coords"></target>
            <paragraph classes="classref-property" ids="class-gpuparticles2d-property-local-coords" names="class_gpuparticles2d_property_local_coords"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>local_coords</strong> = <literal>false</literal> <reference internal="True" refid="class-gpuparticles2d-property-local-coords"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_use_local_coordinates</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_use_local_coordinates</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则粒子使用父节点的坐标空间（称为局部坐标）。这将导致粒子在移动或旋转时沿着 <strong>GPUParticles2D</strong> 节点（及其父节点）移动和旋转。如果为 <literal>false</literal>，则粒子使用全局坐标；当移动或旋转时，它们不会沿着 <strong>GPUParticles2D</strong> 节点（及其父节点）移动或旋转。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gpuparticles2d-property-one-shot"></target>
            <paragraph classes="classref-property" ids="class-gpuparticles2d-property-one-shot" names="class_gpuparticles2d_property_one_shot"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>one_shot</strong> = <literal>false</literal> <reference internal="True" refid="class-gpuparticles2d-property-one-shot"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_one_shot</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_one_shot</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则只发生一个发射周期。如果在某个周期内设置为 <literal>true</literal>，则发射将在该周期结束时停止。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gpuparticles2d-property-preprocess"></target>
            <paragraph classes="classref-property" ids="class-gpuparticles2d-property-preprocess" names="class_gpuparticles2d_property_preprocess"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>preprocess</strong> = <literal>0.0</literal> <reference internal="True" refid="class-gpuparticles2d-property-preprocess"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_pre_process_time</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_pre_process_time</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>粒子系统启动时就好像已经运行了这么多秒一样。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gpuparticles2d-property-process-material"></target>
            <paragraph classes="classref-property" ids="class-gpuparticles2d-property-process-material" names="class_gpuparticles2d_property_process_material"><reference internal="True" refuri="class_material#class-material"><inline classes="std std-ref">Material</inline></reference> <strong>process_material</strong> <reference internal="True" refid="class-gpuparticles2d-property-process-material"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_process_material</strong>(value: <reference internal="True" refuri="class_material#class-material"><inline classes="std std-ref">Material</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_material#class-material"><inline classes="std std-ref">Material</inline></reference> <strong>get_process_material</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>用于处理粒子的 <reference internal="True" refuri="class_material#class-material"><inline classes="std std-ref">Material</inline></reference> 。可以是 <reference internal="True" refuri="class_particleprocessmaterial#class-particleprocessmaterial"><inline classes="std std-ref">ParticleProcessMaterial</inline></reference> 或 <reference internal="True" refuri="class_shadermaterial#class-shadermaterial"><inline classes="std std-ref">ShaderMaterial</inline></reference> 。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gpuparticles2d-property-randomness"></target>
            <paragraph classes="classref-property" ids="class-gpuparticles2d-property-randomness" names="class_gpuparticles2d_property_randomness"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>randomness</strong> = <literal>0.0</literal> <reference internal="True" refid="class-gpuparticles2d-property-randomness"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_randomness_ratio</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_randomness_ratio</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>发射寿命随机率。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gpuparticles2d-property-speed-scale"></target>
            <paragraph classes="classref-property" ids="class-gpuparticles2d-property-speed-scale" names="class_gpuparticles2d_property_speed_scale"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>speed_scale</strong> = <literal>1.0</literal> <reference internal="True" refid="class-gpuparticles2d-property-speed-scale"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_speed_scale</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_speed_scale</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>粒子系统的运行速度的缩放率。<literal>0</literal> 值可用于暂停粒子。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gpuparticles2d-property-sub-emitter"></target>
            <paragraph classes="classref-property" ids="class-gpuparticles2d-property-sub-emitter" names="class_gpuparticles2d_property_sub_emitter"><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> <strong>sub_emitter</strong> = <literal>NodePath("")</literal> <reference internal="True" refid="class-gpuparticles2d-property-sub-emitter"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_sub_emitter</strong>(value: <reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_nodepath#class-nodepath"><inline classes="std std-ref">NodePath</inline></reference> <strong>get_sub_emitter</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>到将被用作子发射器（请参阅 <reference internal="True" refuri="class_particleprocessmaterial#class-particleprocessmaterial-property-sub-emitter-mode"><inline classes="std std-ref">ParticleProcessMaterial.sub_emitter_mode</inline></reference>）的另一个 <strong>GPUParticles2D</strong> 节点的路径。子发射器可被用于实现烟花、碰撞火花、气泡弹出水滴等效果。</paragraph>
            <paragraph><strong>注意：</strong>当 <reference internal="True" refid="class-gpuparticles2d-property-sub-emitter"><inline classes="std std-ref">sub_emitter</inline></reference> 被设置时，该目标 <strong>GPUParticles2D</strong> 节点将不再自行发射粒子。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gpuparticles2d-property-texture"></target>
            <paragraph classes="classref-property" ids="class-gpuparticles2d-property-texture" names="class_gpuparticles2d_property_texture"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>texture</strong> <reference internal="True" refid="class-gpuparticles2d-property-texture"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_texture</strong>(value: <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>get_texture</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>粒子纹理。如果为 <literal>null</literal>，则粒子将是大小为 1×1 像素的正方形。</paragraph>
            <paragraph><strong>注意：</strong>要使用翻页纹理，请将新的 <reference internal="True" refuri="class_canvasitemmaterial#class-canvasitemmaterial"><inline classes="std std-ref">CanvasItemMaterial</inline></reference> 分配给 <strong>GPUParticles2D</strong> 的 <reference internal="True" refuri="class_canvasitem#class-canvasitem-property-material"><inline classes="std std-ref">CanvasItem.material</inline></reference> 属性，然后启用 <reference internal="True" refuri="class_canvasitemmaterial#class-canvasitemmaterial-property-particles-animation"><inline classes="std std-ref">CanvasItemMaterial.particles_animation</inline></reference> 并设置 <reference internal="True" refuri="class_canvasitemmaterial#class-canvasitemmaterial-property-particles-anim-h-frames"><inline classes="std std-ref">CanvasItemMaterial.particles_anim_h_frames</inline></reference>、<reference internal="True" refuri="class_canvasitemmaterial#class-canvasitemmaterial-property-particles-anim-v-frames"><inline classes="std std-ref">CanvasItemMaterial.particles_anim_v_frames</inline></reference> 和 <reference internal="True" refuri="class_canvasitemmaterial#class-canvasitemmaterial-property-particles-anim-loop"><inline classes="std std-ref">CanvasItemMaterial.particles_anim_loop</inline></reference> 来匹配该翻页纹理。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gpuparticles2d-property-trail-enabled"></target>
            <paragraph classes="classref-property" ids="class-gpuparticles2d-property-trail-enabled" names="class_gpuparticles2d_property_trail_enabled"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>trail_enabled</strong> = <literal>false</literal> <reference internal="True" refid="class-gpuparticles2d-property-trail-enabled"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_trail_enabled</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_trail_enabled</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果<literal>true</literal> ，可以使用网格换肤系统来启用粒子轨迹。</paragraph>
            <paragraph><strong>注意：</strong>与<reference internal="True" refuri="class_gpuparticles3d#class-gpuparticles3d"><inline classes="std std-ref">GPUParticles3D</inline></reference>不同的是，trail sections和subdivisions的数量是通过属性<reference internal="True" refid="class-gpuparticles2d-property-trail-sections"><inline classes="std std-ref">trail_sections</inline></reference>和<reference internal="True" refid="class-gpuparticles2d-property-trail-section-subdivisions"><inline classes="std std-ref">trail_section_subdivisions</inline></reference>设置的。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gpuparticles2d-property-trail-lifetime"></target>
            <paragraph classes="classref-property" ids="class-gpuparticles2d-property-trail-lifetime" names="class_gpuparticles2d_property_trail_lifetime"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>trail_lifetime</strong> = <literal>0.3</literal> <reference internal="True" refid="class-gpuparticles2d-property-trail-lifetime"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_trail_lifetime</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_trail_lifetime</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>代表粒子轨迹的时间量（以秒为单位）。仅当 <reference internal="True" refid="class-gpuparticles2d-property-trail-enabled"><inline classes="std std-ref">trail_enabled</inline></reference> 为 <literal>true</literal> 时有效。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gpuparticles2d-property-trail-section-subdivisions"></target>
            <paragraph classes="classref-property" ids="class-gpuparticles2d-property-trail-section-subdivisions" names="class_gpuparticles2d_property_trail_section_subdivisions"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>trail_section_subdivisions</strong> = <literal>4</literal> <reference internal="True" refid="class-gpuparticles2d-property-trail-section-subdivisions"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_trail_section_subdivisions</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_trail_section_subdivisions</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>用于粒子尾迹渲染的细分数。较高的值可以产生更平滑的尾迹曲线，但由于增加了网格的复杂度，因此会牺牲性能。另见 <reference internal="True" refid="class-gpuparticles2d-property-trail-sections"><inline classes="std std-ref">trail_sections</inline></reference>。仅当 <reference internal="True" refid="class-gpuparticles2d-property-trail-enabled"><inline classes="std std-ref">trail_enabled</inline></reference> 为 <literal>true</literal> 时有效。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gpuparticles2d-property-trail-sections"></target>
            <paragraph classes="classref-property" ids="class-gpuparticles2d-property-trail-sections" names="class_gpuparticles2d_property_trail_sections"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>trail_sections</strong> = <literal>8</literal> <reference internal="True" refid="class-gpuparticles2d-property-trail-sections"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_trail_sections</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_trail_sections</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>用于粒子轨迹渲染的部分数。较高的值可以产生更平滑的尾迹曲线，但由于增加了网格的复杂度，因此会牺牲性能。另见 <reference internal="True" refid="class-gpuparticles2d-property-trail-section-subdivisions"><inline classes="std std-ref">trail_section_subdivisions</inline></reference>。仅当 <reference internal="True" refid="class-gpuparticles2d-property-trail-enabled"><inline classes="std std-ref">trail_enabled</inline></reference> 为 <literal>true</literal> 时有效。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gpuparticles2d-property-visibility-rect"></target>
            <paragraph classes="classref-property" ids="class-gpuparticles2d-property-visibility-rect" names="class_gpuparticles2d_property_visibility_rect"><reference internal="True" refuri="class_rect2#class-rect2"><inline classes="std std-ref">Rect2</inline></reference> <strong>visibility_rect</strong> = <literal>Rect2(-100, -100, 200, 200)</literal> <reference internal="True" refid="class-gpuparticles2d-property-visibility-rect"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_visibility_rect</strong>(value: <reference internal="True" refuri="class_rect2#class-rect2"><inline classes="std std-ref">Rect2</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_rect2#class-rect2"><inline classes="std std-ref">Rect2</inline></reference> <strong>get_visibility_rect</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph><reference internal="True" refuri="class_rect2#class-rect2"><inline classes="std std-ref">Rect2</inline></reference> 确定节点的区域，该区域需要在屏幕上可见才能使粒子系统处于活动状态。</paragraph>
            <paragraph>如果当节点进入/退出屏幕时粒子突然出现/消失，则增长矩形。<reference internal="True" refuri="class_rect2#class-rect2"><inline classes="std std-ref">Rect2</inline></reference> 可以通过代码或使用 <strong>Particles → Generate Visibility Rect</strong> 编辑器工具生成。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id8" names="方法说明">
            <title>方法说明</title>
            <target refid="class-gpuparticles2d-method-capture-rect"></target>
            <paragraph classes="classref-method" ids="class-gpuparticles2d-method-capture-rect" names="class_gpuparticles2d_method_capture_rect"><reference internal="True" refuri="class_rect2#class-rect2"><inline classes="std std-ref">Rect2</inline></reference> <strong>capture_rect</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-gpuparticles2d-method-capture-rect"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回一个包含所有已有粒子位置的矩形。</paragraph>
            <paragraph><strong>注意：</strong>当使用线程渲染时，该方法会同步渲染线程。经常调用它可能会对性能产生负面影响。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gpuparticles2d-method-convert-from-particles"></target>
            <paragraph classes="classref-method" ids="class-gpuparticles2d-method-convert-from-particles" names="class_gpuparticles2d_method_convert_from_particles"><abbreviation explanation="无返回值。">void</abbreviation> <strong>convert_from_particles</strong>(particles: <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference>) <reference internal="True" refid="class-gpuparticles2d-method-convert-from-particles"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置该节点的属性以匹配给定的 <reference internal="True" refuri="class_cpuparticles2d#class-cpuparticles2d"><inline classes="std std-ref">CPUParticles2D</inline></reference> 节点。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gpuparticles2d-method-emit-particle"></target>
            <paragraph classes="classref-method" ids="class-gpuparticles2d-method-emit-particle" names="class_gpuparticles2d_method_emit_particle"><abbreviation explanation="无返回值。">void</abbreviation> <strong>emit_particle</strong>(xform: <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference>, velocity: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>, color: <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference>, custom: <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference>, flags: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-gpuparticles2d-method-emit-particle"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>发射单个粒子。是否应用 <literal>xform</literal>、<literal>velocity</literal>、<literal>color</literal> 和 <literal>custom</literal> 取决于 <literal>flags</literal> 的值。请参阅 <reference internal="True" refid="enum-gpuparticles2d-emitflags"><inline classes="std std-ref">EmitFlags</inline></reference>。</paragraph>
            <paragraph>默认的 ParticleProcessMaterial 将覆盖 <literal>color</literal> 并使用 <literal>custom</literal> 的内容作为 <literal>(rotation, age, animation, lifetime)</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gpuparticles2d-method-restart"></target>
            <paragraph classes="classref-method" ids="class-gpuparticles2d-method-restart" names="class_gpuparticles2d_method_restart"><abbreviation explanation="无返回值。">void</abbreviation> <strong>restart</strong>() <reference internal="True" refid="class-gpuparticles2d-method-restart"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>重新开始粒子发射周期，清除现存粒子。要避免粒子从视口中凭空消失，请在调用前等待 <reference internal="True" refid="class-gpuparticles2d-signal-finished"><inline classes="std std-ref">finished</inline></reference> 信号。</paragraph>
            <paragraph><strong>注意：</strong>只有 <reference internal="True" refid="class-gpuparticles2d-property-one-shot"><inline classes="std std-ref">one_shot</inline></reference> 的发射器会发出 <reference internal="True" refid="class-gpuparticles2d-signal-finished"><inline classes="std std-ref">finished</inline></reference> 信号。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

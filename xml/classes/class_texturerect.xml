<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_texturerect.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/TextureRect.xml.</comment>
    <target refid="class-texturerect"></target>
    <section ids="texturerect class-texturerect" names="texturerect class_texturerect">
        <title>TextureRect</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_control#class-control"><inline classes="std std-ref">Control</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_canvasitem#class-canvasitem"><inline classes="std std-ref">CanvasItem</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>显示纹理的控件。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>显示纹理的控件，例如显示 GUI 中的图标。可以使用 <reference internal="True" refid="class-texturerect-property-stretch-mode"><inline classes="std std-ref">stretch_mode</inline></reference> 属性控制纹理的放置。可以在边界框中进行缩放、平铺、居中。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference name="3D 体素演示" refuri="https://godotengine.org/asset-library/asset/676">3D 体素演示</reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="50"></colspec>
                    <colspec colwidth="62"></colspec>
                    <colspec colwidth="71"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-texturerect-expandmode"><inline classes="std std-ref">ExpandMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-texturerect-property-expand-mode"><inline classes="std std-ref">expand_mode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-texturerect-property-flip-h"><inline classes="std std-ref">flip_h</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-texturerect-property-flip-v"><inline classes="std std-ref">flip_v</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_control#enum-control-mousefilter"><inline classes="std std-ref">MouseFilter</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph>mouse_filter</paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1</literal> (overrides <reference internal="True" refuri="class_control#class-control-property-mouse-filter"><inline classes="std std-ref">Control</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-texturerect-stretchmode"><inline classes="std std-ref">StretchMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-texturerect-property-stretch-mode"><inline classes="std std-ref">stretch_mode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-texturerect-property-texture"><inline classes="std std-ref">texture</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="枚举">
            <title>枚举</title>
            <target refid="enum-texturerect-expandmode"></target>
            <paragraph classes="classref-enumeration" ids="enum-texturerect-expandmode" names="enum_texturerect_expandmode">enum <strong>ExpandMode</strong>:</paragraph>
            <target refid="class-texturerect-constant-expand-keep-size"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-texturerect-constant-expand-keep-size" names="class_texturerect_constant_expand_keep_size"><reference internal="True" refid="enum-texturerect-expandmode"><inline classes="std std-ref">ExpandMode</inline></reference> <strong>EXPAND_KEEP_SIZE</strong> = <literal>0</literal></paragraph>
            <paragraph>最小尺寸将等于纹理尺寸，即 <strong>TextureRect</strong> 不能小于纹理。</paragraph>
            <target refid="class-texturerect-constant-expand-ignore-size"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-texturerect-constant-expand-ignore-size" names="class_texturerect_constant_expand_ignore_size"><reference internal="True" refid="enum-texturerect-expandmode"><inline classes="std std-ref">ExpandMode</inline></reference> <strong>EXPAND_IGNORE_SIZE</strong> = <literal>1</literal></paragraph>
            <paragraph>纹理尺寸不会用于计算最小尺寸，所以 <strong>TextureRect</strong> 可以缩减得比纹理尺寸小。</paragraph>
            <target refid="class-texturerect-constant-expand-fit-width"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-texturerect-constant-expand-fit-width" names="class_texturerect_constant_expand_fit_width"><reference internal="True" refid="enum-texturerect-expandmode"><inline classes="std std-ref">ExpandMode</inline></reference> <strong>EXPAND_FIT_WIDTH</strong> = <literal>2</literal></paragraph>
            <paragraph>会忽略纹理的高度。最小宽度与当前高度一致。可用于横向布局，例如在 <reference internal="True" refuri="class_hboxcontainer#class-hboxcontainer"><inline classes="std std-ref">HBoxContainer</inline></reference> 中。</paragraph>
            <target refid="class-texturerect-constant-expand-fit-width-proportional"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-texturerect-constant-expand-fit-width-proportional" names="class_texturerect_constant_expand_fit_width_proportional"><reference internal="True" refid="enum-texturerect-expandmode"><inline classes="std std-ref">ExpandMode</inline></reference> <strong>EXPAND_FIT_WIDTH_PROPORTIONAL</strong> = <literal>3</literal></paragraph>
            <paragraph>与 <reference internal="True" refid="class-texturerect-constant-expand-fit-width"><inline classes="std std-ref">EXPAND_FIT_WIDTH</inline></reference> 相同，但保持纹理的长宽比。</paragraph>
            <target refid="class-texturerect-constant-expand-fit-height"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-texturerect-constant-expand-fit-height" names="class_texturerect_constant_expand_fit_height"><reference internal="True" refid="enum-texturerect-expandmode"><inline classes="std std-ref">ExpandMode</inline></reference> <strong>EXPAND_FIT_HEIGHT</strong> = <literal>4</literal></paragraph>
            <paragraph>会忽略纹理的宽度。最小高度与当前宽度一致。可用于纵向布局，例如在 <reference internal="True" refuri="class_vboxcontainer#class-vboxcontainer"><inline classes="std std-ref">VBoxContainer</inline></reference> 中。</paragraph>
            <target refid="class-texturerect-constant-expand-fit-height-proportional"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-texturerect-constant-expand-fit-height-proportional" names="class_texturerect_constant_expand_fit_height_proportional"><reference internal="True" refid="enum-texturerect-expandmode"><inline classes="std std-ref">ExpandMode</inline></reference> <strong>EXPAND_FIT_HEIGHT_PROPORTIONAL</strong> = <literal>5</literal></paragraph>
            <paragraph>与 <reference internal="True" refid="class-texturerect-constant-expand-fit-height"><inline classes="std std-ref">EXPAND_FIT_HEIGHT</inline></reference> 相同，但保持纹理的长宽比。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-texturerect-stretchmode"></target>
            <paragraph classes="classref-enumeration" ids="enum-texturerect-stretchmode" names="enum_texturerect_stretchmode">enum <strong>StretchMode</strong>:</paragraph>
            <target refid="class-texturerect-constant-stretch-scale"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-texturerect-constant-stretch-scale" names="class_texturerect_constant_stretch_scale"><reference internal="True" refid="enum-texturerect-stretchmode"><inline classes="std std-ref">StretchMode</inline></reference> <strong>STRETCH_SCALE</strong> = <literal>0</literal></paragraph>
            <paragraph>缩放以适应节点的边界矩形。</paragraph>
            <target refid="class-texturerect-constant-stretch-tile"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-texturerect-constant-stretch-tile" names="class_texturerect_constant_stretch_tile"><reference internal="True" refid="enum-texturerect-stretchmode"><inline classes="std std-ref">StretchMode</inline></reference> <strong>STRETCH_TILE</strong> = <literal>1</literal></paragraph>
            <paragraph>在节点的边界矩形内平铺。</paragraph>
            <target refid="class-texturerect-constant-stretch-keep"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-texturerect-constant-stretch-keep" names="class_texturerect_constant_stretch_keep"><reference internal="True" refid="enum-texturerect-stretchmode"><inline classes="std std-ref">StretchMode</inline></reference> <strong>STRETCH_KEEP</strong> = <literal>2</literal></paragraph>
            <paragraph>纹理保持它的原始尺寸，并保持在边界矩形的左上角。</paragraph>
            <target refid="class-texturerect-constant-stretch-keep-centered"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-texturerect-constant-stretch-keep-centered" names="class_texturerect_constant_stretch_keep_centered"><reference internal="True" refid="enum-texturerect-stretchmode"><inline classes="std std-ref">StretchMode</inline></reference> <strong>STRETCH_KEEP_CENTERED</strong> = <literal>3</literal></paragraph>
            <paragraph>纹理保持其原始大小，并在节点的边界矩形中保持居中。</paragraph>
            <target refid="class-texturerect-constant-stretch-keep-aspect"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-texturerect-constant-stretch-keep-aspect" names="class_texturerect_constant_stretch_keep_aspect"><reference internal="True" refid="enum-texturerect-stretchmode"><inline classes="std std-ref">StretchMode</inline></reference> <strong>STRETCH_KEEP_ASPECT</strong> = <literal>4</literal></paragraph>
            <paragraph>缩放纹理以适应节点的边界矩形，但保持纹理的长宽比。</paragraph>
            <target refid="class-texturerect-constant-stretch-keep-aspect-centered"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-texturerect-constant-stretch-keep-aspect-centered" names="class_texturerect_constant_stretch_keep_aspect_centered"><reference internal="True" refid="enum-texturerect-stretchmode"><inline classes="std std-ref">StretchMode</inline></reference> <strong>STRETCH_KEEP_ASPECT_CENTERED</strong> = <literal>5</literal></paragraph>
            <paragraph>缩放纹理以适应节点的边界矩形，使其居中并保持其长宽比。</paragraph>
            <target refid="class-texturerect-constant-stretch-keep-aspect-covered"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-texturerect-constant-stretch-keep-aspect-covered" names="class_texturerect_constant_stretch_keep_aspect_covered"><reference internal="True" refid="enum-texturerect-stretchmode"><inline classes="std std-ref">StretchMode</inline></reference> <strong>STRETCH_KEEP_ASPECT_COVERED</strong> = <literal>6</literal></paragraph>
            <paragraph>缩放纹理，使较短的一边适应边界矩形。另一边则裁剪到节点的界限内。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="属性说明">
            <title>属性说明</title>
            <target refid="class-texturerect-property-expand-mode"></target>
            <paragraph classes="classref-property" ids="class-texturerect-property-expand-mode" names="class_texturerect_property_expand_mode"><reference internal="True" refid="enum-texturerect-expandmode"><inline classes="std std-ref">ExpandMode</inline></reference> <strong>expand_mode</strong> = <literal>0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_expand_mode</strong> <strong>(</strong> <reference internal="True" refid="enum-texturerect-expandmode"><inline classes="std std-ref">ExpandMode</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-texturerect-expandmode"><inline classes="std std-ref">ExpandMode</inline></reference> <strong>get_expand_mode</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>定义如何根据该纹理的大小确定最小大小。有关选项，请参阅 <reference internal="True" refid="enum-texturerect-expandmode"><inline classes="std std-ref">ExpandMode</inline></reference>。</paragraph>
            <paragraph><strong>注意：</strong>使用 <reference internal="True" refid="class-texturerect-constant-expand-fit-width"><inline classes="std std-ref">EXPAND_FIT_WIDTH</inline></reference>、<reference internal="True" refid="class-texturerect-constant-expand-fit-width-proportional"><inline classes="std std-ref">EXPAND_FIT_WIDTH_PROPORTIONAL</inline></reference>、<reference internal="True" refid="class-texturerect-constant-expand-fit-height"><inline classes="std std-ref">EXPAND_FIT_HEIGHT</inline></reference>、或 <reference internal="True" refid="class-texturerect-constant-expand-fit-height-proportional"><inline classes="std std-ref">EXPAND_FIT_HEIGHT_PROPORTIONAL</inline></reference>，可能会导致某些容器的行为不稳定。该功能正在重新评估，将来可能会发生变化。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-texturerect-property-flip-h"></target>
            <paragraph classes="classref-property" ids="class-texturerect-property-flip-h" names="class_texturerect_property_flip_h"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>flip_h</strong> = <literal>false</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_flip_h</strong> <strong>(</strong> <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_flipped_h</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，纹理将被水平翻转。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-texturerect-property-flip-v"></target>
            <paragraph classes="classref-property" ids="class-texturerect-property-flip-v" names="class_texturerect_property_flip_v"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>flip_v</strong> = <literal>false</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_flip_v</strong> <strong>(</strong> <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_flipped_v</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，纹理将被垂直翻转。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-texturerect-property-stretch-mode"></target>
            <paragraph classes="classref-property" ids="class-texturerect-property-stretch-mode" names="class_texturerect_property_stretch_mode"><reference internal="True" refid="enum-texturerect-stretchmode"><inline classes="std std-ref">StretchMode</inline></reference> <strong>stretch_mode</strong> = <literal>0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_stretch_mode</strong> <strong>(</strong> <reference internal="True" refid="enum-texturerect-stretchmode"><inline classes="std std-ref">StretchMode</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-texturerect-stretchmode"><inline classes="std std-ref">StretchMode</inline></reference> <strong>get_stretch_mode</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>控件纹理在调整节点边界矩形时的行为。见 <reference internal="True" refid="enum-texturerect-stretchmode"><inline classes="std std-ref">StretchMode</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-texturerect-property-texture"></target>
            <paragraph classes="classref-property" ids="class-texturerect-property-texture" names="class_texturerect_property_texture"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>texture</strong></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_texture</strong> <strong>(</strong> <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>get_texture</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>该节点的 <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> 资源。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，所以可以直接使用类名调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_editorresourcepreview.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/EditorResourcePreview.xml.</comment>
    <target refid="class-editorresourcepreview"></target>
    <section ids="editorresourcepreview class-editorresourcepreview" names="editorresourcepreview class_editorresourcepreview">
        <title>EditorResourcePreview</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>用于生成资源或文件的预览的节点。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>该节点用于生成文件资源的预览。</paragraph>
            <paragraph><strong>注意：</strong>不应该直接实例化这个类。请使用 <reference internal="True" refuri="class_editorinterface#class-editorinterface-method-get-resource-previewer"><inline classes="std std-ref">EditorInterface.get_resource_previewer</inline></reference> 访问单例。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="8"></colspec>
                    <colspec colwidth="289"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorresourcepreview-method-add-preview-generator"><inline classes="std std-ref">add_preview_generator</inline></reference>(generator: <reference internal="True" refuri="class_editorresourcepreviewgenerator#class-editorresourcepreviewgenerator"><inline classes="std std-ref">EditorResourcePreviewGenerator</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorresourcepreview-method-check-for-invalidation"><inline classes="std std-ref">check_for_invalidation</inline></reference>(path: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorresourcepreview-method-queue-edited-resource-preview"><inline classes="std std-ref">queue_edited_resource_preview</inline></reference>(resource: <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference>, receiver: <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference>, receiver_func: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>, userdata: <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorresourcepreview-method-queue-resource-preview"><inline classes="std std-ref">queue_resource_preview</inline></reference>(path: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, receiver: <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference>, receiver_func: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>, userdata: <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorresourcepreview-method-remove-preview-generator"><inline classes="std std-ref">remove_preview_generator</inline></reference>(generator: <reference internal="True" refuri="class_editorresourcepreviewgenerator#class-editorresourcepreviewgenerator"><inline classes="std std-ref">EditorResourcePreviewGenerator</inline></reference>)</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="信号">
            <title>信号</title>
            <target refid="class-editorresourcepreview-signal-preview-invalidated"></target>
            <paragraph classes="classref-signal" ids="class-editorresourcepreview-signal-preview-invalidated" names="class_editorresourcepreview_signal_preview_invalidated"><strong>preview_invalidated</strong>(path: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <reference internal="True" refid="class-editorresourcepreview-signal-preview-invalidated"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>预览无效（更改）时发出。<literal>path</literal> 对应预览的路径。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="方法说明">
            <title>方法说明</title>
            <target refid="class-editorresourcepreview-method-add-preview-generator"></target>
            <paragraph classes="classref-method" ids="class-editorresourcepreview-method-add-preview-generator" names="class_editorresourcepreview_method_add_preview_generator"><abbreviation explanation="无返回值。">void</abbreviation> <strong>add_preview_generator</strong>(generator: <reference internal="True" refuri="class_editorresourcepreviewgenerator#class-editorresourcepreviewgenerator"><inline classes="std std-ref">EditorResourcePreviewGenerator</inline></reference>) <reference internal="True" refid="class-editorresourcepreview-method-add-preview-generator"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>创建一个自定义的预览生成器。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorresourcepreview-method-check-for-invalidation"></target>
            <paragraph classes="classref-method" ids="class-editorresourcepreview-method-check-for-invalidation" names="class_editorresourcepreview_method_check_for_invalidation"><abbreviation explanation="无返回值。">void</abbreviation> <strong>check_for_invalidation</strong>(path: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <reference internal="True" refid="class-editorresourcepreview-method-check-for-invalidation"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>检查资源是否发生变化，如果发生变化，则无效，并发出相应的信号。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorresourcepreview-method-queue-edited-resource-preview"></target>
            <paragraph classes="classref-method" ids="class-editorresourcepreview-method-queue-edited-resource-preview" names="class_editorresourcepreview_method_queue_edited_resource_preview"><abbreviation explanation="无返回值。">void</abbreviation> <strong>queue_edited_resource_preview</strong>(resource: <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference>, receiver: <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference>, receiver_func: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>, userdata: <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference>) <reference internal="True" refid="class-editorresourcepreview-method-queue-edited-resource-preview"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将正在编辑的 <literal>resource</literal> 排队以供预览。预览准备就绪后，将调用 <literal>receiver</literal> 的 <literal>receiver_func</literal>。<literal>receiver_func</literal> 必须接受以下四个参数：<reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> path、<reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> preview、<reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> thumbnail_preview、<reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> userdata。<literal>userdata</literal> 可以是任何东西，并将在调用 <literal>receiver_func</literal> 时返回。</paragraph>
            <paragraph><strong>注意：</strong>如果无法创建预览，<literal>receiver_func</literal> 仍将被调用，但 preview 将为 null。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorresourcepreview-method-queue-resource-preview"></target>
            <paragraph classes="classref-method" ids="class-editorresourcepreview-method-queue-resource-preview" names="class_editorresourcepreview_method_queue_resource_preview"><abbreviation explanation="无返回值。">void</abbreviation> <strong>queue_resource_preview</strong>(path: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, receiver: <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference>, receiver_func: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>, userdata: <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference>) <reference internal="True" refid="class-editorresourcepreview-method-queue-resource-preview"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将位于 <literal>path</literal> 的资源文件排队以供预览。预览准备就绪后，将调用 <literal>receiver</literal> 的 <literal>receiver_func</literal>。<literal>receiver_func</literal> 必须接受以下四个参数：<reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> path、<reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> preview、<reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> thumbnail_preview、<reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> userdata。<literal>userdata</literal> 可以是任何东西，并将在调用 <literal>receiver_func</literal> 时返回。</paragraph>
            <paragraph><strong>注意：</strong>如果无法创建预览，<literal>receiver_func</literal> 仍将被调用，但 preview 将为 null。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorresourcepreview-method-remove-preview-generator"></target>
            <paragraph classes="classref-method" ids="class-editorresourcepreview-method-remove-preview-generator" names="class_editorresourcepreview_method_remove_preview_generator"><abbreviation explanation="无返回值。">void</abbreviation> <strong>remove_preview_generator</strong>(generator: <reference internal="True" refuri="class_editorresourcepreviewgenerator#class-editorresourcepreviewgenerator"><inline classes="std std-ref">EditorResourcePreviewGenerator</inline></reference>) <reference internal="True" refid="class-editorresourcepreview-method-remove-preview-generator"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>移除自定义预览生成器。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

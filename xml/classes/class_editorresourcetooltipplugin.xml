<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_editorresourcetooltipplugin.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/EditorResourceTooltipPlugin.xml.</comment>
    <target refid="class-editorresourcetooltipplugin"></target>
    <section ids="editorresourcetooltipplugin class-editorresourcetooltipplugin" names="editorresourcetooltipplugin class_editorresourcetooltipplugin">
        <title>EditorResourceTooltipPlugin</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>为处理的资源类型制作高阶工具提示的插件。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph><reference internal="True" refuri="class_filesystemdock#class-filesystemdock"><inline classes="std std-ref">FileSystemDock</inline></reference> 使用的资源工具提示插件，能够为指定资源生成自定义工具提示。例如，<reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> 的工具提示会显示较大的预览和该纹理的尺寸。</paragraph>
            <paragraph>插件必须先使用 <reference internal="True" refuri="class_filesystemdock#class-filesystemdock-method-add-resource-tooltip-plugin"><inline classes="std std-ref">FileSystemDock.add_resource_tooltip_plugin</inline></reference> 注册。用户悬停在文件系统面板中该插件能够处理的资源上时，就会调用 <reference internal="True" refid="class-editorresourcetooltipplugin-private-method-make-tooltip-for-path"><inline classes="std std-ref">_make_tooltip_for_path</inline></reference> 来创建工具提示。工作原理类似于 <reference internal="True" refuri="class_control#class-control-private-method-make-custom-tooltip"><inline classes="std std-ref">Control._make_custom_tooltip</inline></reference>。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="31"></colspec>
                    <colspec colwidth="250"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorresourcetooltipplugin-private-method-handles"><inline classes="std std-ref">_handles</inline></reference>(type: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_control#class-control"><inline classes="std std-ref">Control</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorresourcetooltipplugin-private-method-make-tooltip-for-path"><inline classes="std std-ref">_make_tooltip_for_path</inline></reference>(path: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, metadata: <reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference>, base: <reference internal="True" refuri="class_control#class-control"><inline classes="std std-ref">Control</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorresourcetooltipplugin-method-request-thumbnail"><inline classes="std std-ref">request_thumbnail</inline></reference>(path: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, control: <reference internal="True" refuri="class_texturerect#class-texturerect"><inline classes="std std-ref">TextureRect</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="方法说明">
            <title>方法说明</title>
            <target refid="class-editorresourcetooltipplugin-private-method-handles"></target>
            <paragraph classes="classref-method" ids="class-editorresourcetooltipplugin-private-method-handles" names="class_editorresourcetooltipplugin_private_method__handles"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>_handles</strong>(type: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-editorresourcetooltipplugin-private-method-handles"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果插件要处理给定的 <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> 类型 <literal>type</literal>，则返回 <literal>true</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorresourcetooltipplugin-private-method-make-tooltip-for-path"></target>
            <paragraph classes="classref-method" ids="class-editorresourcetooltipplugin-private-method-make-tooltip-for-path" names="class_editorresourcetooltipplugin_private_method__make_tooltip_for_path"><reference internal="True" refuri="class_control#class-control"><inline classes="std std-ref">Control</inline></reference> <strong>_make_tooltip_for_path</strong>(path: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, metadata: <reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference>, base: <reference internal="True" refuri="class_control#class-control"><inline classes="std std-ref">Control</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-editorresourcetooltipplugin-private-method-make-tooltip-for-path"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>创建并返回工具提示，会在用户悬停在文件系统面板上路径为 <literal>path</literal> 的资源上时显示。</paragraph>
            <paragraph>元数据字典 <literal>metadata</literal> 由预览生成器提供（见 <reference internal="True" refuri="class_editorresourcepreviewgenerator#class-editorresourcepreviewgenerator-private-method-generate"><inline classes="std std-ref">EditorResourcePreviewGenerator._generate</inline></reference>）。</paragraph>
            <paragraph><literal>base</literal> 是基础的默认工具提示，是一个包含文件名、类型、大小标签的 <reference internal="True" refuri="class_vboxcontainer#class-vboxcontainer"><inline classes="std std-ref">VBoxContainer</inline></reference>。如果其他插件也能够处理相同的文件类型，那么 <literal>base</literal> 就是上一个插件的输出。为了达到最佳效果，请确保基础工具提示是返回的 <reference internal="True" refuri="class_control#class-control"><inline classes="std std-ref">Control</inline></reference> 的一部分。</paragraph>
            <paragraph><strong>注意：</strong>不建议使用 <reference internal="True" refuri="class_resourceloader#class-resourceloader-method-load"><inline classes="std std-ref">ResourceLoader.load</inline></reference>，尤其是模型、纹理等开销较大的资源，否则会在创建工具提示时让编辑器失去响应。如果想要在工具提示中显示预览，可以使用 <reference internal="True" refid="class-editorresourcetooltipplugin-method-request-thumbnail"><inline classes="std std-ref">request_thumbnail</inline></reference>。</paragraph>
            <paragraph><strong>注意：</strong>如果你决定要丢弃 <literal>base</literal>，请确保调用了 <reference internal="True" refuri="class_node#class-node-method-queue-free"><inline classes="std std-ref">Node.queue_free</inline></reference>，否则不会自动释放。</paragraph>
            <literal_block force="False" language="gdscript" linenos="False" xml:space="preserve">func _make_tooltip_for_path(path, metadata, base):
    var t_rect = TextureRect.new()
    request_thumbnail(path, t_rect)
    base.add_child(t_rect) # TextureRect 会出现在工具提示的底部。
    return base</literal_block>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorresourcetooltipplugin-method-request-thumbnail"></target>
            <paragraph classes="classref-method" ids="class-editorresourcetooltipplugin-method-request-thumbnail" names="class_editorresourcetooltipplugin_method_request_thumbnail"><abbreviation explanation="无返回值。">void</abbreviation> <strong>request_thumbnail</strong>(path: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, control: <reference internal="True" refuri="class_texturerect#class-texturerect"><inline classes="std std-ref">TextureRect</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-editorresourcetooltipplugin-method-request-thumbnail"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>为给定的 <reference internal="True" refuri="class_texturerect#class-texturerect"><inline classes="std std-ref">TextureRect</inline></reference> 请求缩略图。缩略图使用 <reference internal="True" refuri="class_editorresourcepreview#class-editorresourcepreview"><inline classes="std std-ref">EditorResourcePreview</inline></reference> 异步创建，会在可用时自动设置。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_visualshadernodeintparameter.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/VisualShaderNodeIntParameter.xml.</comment>
    <target refid="class-visualshadernodeintparameter"></target>
    <section ids="visualshadernodeintparameter class-visualshadernodeintparameter" names="visualshadernodeintparameter class_visualshadernodeintparameter">
        <title>VisualShaderNodeIntParameter</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_visualshadernodeparameter#class-visualshadernodeparameter"><inline classes="std std-ref">VisualShaderNodeParameter</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_visualshadernode#class-visualshadernode"><inline classes="std std-ref">VisualShaderNode</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> 类型着色器参数（uniform）的可视化着色器节点。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> 类型的 <reference internal="True" refuri="class_visualshadernodeparameter#class-visualshadernodeparameter"><inline classes="std std-ref">VisualShaderNodeParameter</inline></reference>。可以自定义能够接受的值的范围。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="53"></colspec>
                    <colspec colwidth="97"></colspec>
                    <colspec colwidth="11"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-visualshadernodeintparameter-property-default-value"><inline classes="std std-ref">default_value</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-visualshadernodeintparameter-property-default-value-enabled"><inline classes="std std-ref">default_value_enabled</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-visualshadernodeintparameter-hint"><inline classes="std std-ref">Hint</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-visualshadernodeintparameter-property-hint"><inline classes="std std-ref">hint</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-visualshadernodeintparameter-property-max"><inline classes="std std-ref">max</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>100</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-visualshadernodeintparameter-property-min"><inline classes="std std-ref">min</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-visualshadernodeintparameter-property-step"><inline classes="std std-ref">step</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="枚举">
            <title>枚举</title>
            <target refid="enum-visualshadernodeintparameter-hint"></target>
            <paragraph classes="classref-enumeration" ids="enum-visualshadernodeintparameter-hint" names="enum_visualshadernodeintparameter_hint">enum <strong>Hint</strong>: <reference internal="True" refid="enum-visualshadernodeintparameter-hint"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-visualshadernodeintparameter-constant-hint-none"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-visualshadernodeintparameter-constant-hint-none" names="class_visualshadernodeintparameter_constant_hint_none"><reference internal="True" refid="enum-visualshadernodeintparameter-hint"><inline classes="std std-ref">Hint</inline></reference> <strong>HINT_NONE</strong> = <literal>0</literal></paragraph>
            <paragraph>参数的取值没有约束。</paragraph>
            <target refid="class-visualshadernodeintparameter-constant-hint-range"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-visualshadernodeintparameter-constant-hint-range" names="class_visualshadernodeintparameter_constant_hint_range"><reference internal="True" refid="enum-visualshadernodeintparameter-hint"><inline classes="std std-ref">Hint</inline></reference> <strong>HINT_RANGE</strong> = <literal>1</literal></paragraph>
            <paragraph>参数的取值必须在指定的 <reference internal="True" refid="class-visualshadernodeintparameter-property-min"><inline classes="std std-ref">min</inline></reference>/<reference internal="True" refid="class-visualshadernodeintparameter-property-max"><inline classes="std std-ref">max</inline></reference> 范围内。</paragraph>
            <target refid="class-visualshadernodeintparameter-constant-hint-range-step"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-visualshadernodeintparameter-constant-hint-range-step" names="class_visualshadernodeintparameter_constant_hint_range_step"><reference internal="True" refid="enum-visualshadernodeintparameter-hint"><inline classes="std std-ref">Hint</inline></reference> <strong>HINT_RANGE_STEP</strong> = <literal>2</literal></paragraph>
            <paragraph>参数的取值必须在指定的范围内，值与值之间的步长为给定的 <reference internal="True" refid="class-visualshadernodeintparameter-property-step"><inline classes="std std-ref">step</inline></reference>。</paragraph>
            <target refid="class-visualshadernodeintparameter-constant-hint-max"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-visualshadernodeintparameter-constant-hint-max" names="class_visualshadernodeintparameter_constant_hint_max"><reference internal="True" refid="enum-visualshadernodeintparameter-hint"><inline classes="std std-ref">Hint</inline></reference> <strong>HINT_MAX</strong> = <literal>3</literal></paragraph>
            <paragraph>代表 <reference internal="True" refid="enum-visualshadernodeintparameter-hint"><inline classes="std std-ref">Hint</inline></reference> 枚举的大小。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="属性说明">
            <title>属性说明</title>
            <target refid="class-visualshadernodeintparameter-property-default-value"></target>
            <paragraph classes="classref-property" ids="class-visualshadernodeintparameter-property-default-value" names="class_visualshadernodeintparameter_property_default_value"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>default_value</strong> = <literal>0</literal> <reference internal="True" refid="class-visualshadernodeintparameter-property-default-value"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_default_value</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_default_value</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>这个参数的默认值，外部没有设值时使用。必须启用 <reference internal="True" refid="class-visualshadernodeintparameter-property-default-value-enabled"><inline classes="std std-ref">default_value_enabled</inline></reference>；否则默认为 <literal>0</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-visualshadernodeintparameter-property-default-value-enabled"></target>
            <paragraph classes="classref-property" ids="class-visualshadernodeintparameter-property-default-value-enabled" names="class_visualshadernodeintparameter_property_default_value_enabled"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>default_value_enabled</strong> = <literal>false</literal> <reference internal="True" refid="class-visualshadernodeintparameter-property-default-value-enabled"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_default_value_enabled</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_default_value_enabled</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则该节点有自定义默认值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-visualshadernodeintparameter-property-hint"></target>
            <paragraph classes="classref-property" ids="class-visualshadernodeintparameter-property-hint" names="class_visualshadernodeintparameter_property_hint"><reference internal="True" refid="enum-visualshadernodeintparameter-hint"><inline classes="std std-ref">Hint</inline></reference> <strong>hint</strong> = <literal>0</literal> <reference internal="True" refid="class-visualshadernodeintparameter-property-hint"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_hint</strong>(value: <reference internal="True" refid="enum-visualshadernodeintparameter-hint"><inline classes="std std-ref">Hint</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-visualshadernodeintparameter-hint"><inline classes="std std-ref">Hint</inline></reference> <strong>get_hint</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>该节点的范围提示。请用它来自定义有效的参数范围。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-visualshadernodeintparameter-property-max"></target>
            <paragraph classes="classref-property" ids="class-visualshadernodeintparameter-property-max" names="class_visualshadernodeintparameter_property_max"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>max</strong> = <literal>100</literal> <reference internal="True" refid="class-visualshadernodeintparameter-property-max"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_max</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_max</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>这个参数所能接受的最大值。<reference internal="True" refid="class-visualshadernodeintparameter-property-hint"><inline classes="std std-ref">hint</inline></reference> 必须为 <reference internal="True" refid="class-visualshadernodeintparameter-constant-hint-range"><inline classes="std std-ref">HINT_RANGE</inline></reference> 或 <reference internal="True" refid="class-visualshadernodeintparameter-constant-hint-range-step"><inline classes="std std-ref">HINT_RANGE_STEP</inline></reference> 才会生效。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-visualshadernodeintparameter-property-min"></target>
            <paragraph classes="classref-property" ids="class-visualshadernodeintparameter-property-min" names="class_visualshadernodeintparameter_property_min"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>min</strong> = <literal>0</literal> <reference internal="True" refid="class-visualshadernodeintparameter-property-min"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_min</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_min</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>这个参数所能接受的最小值。<reference internal="True" refid="class-visualshadernodeintparameter-property-hint"><inline classes="std std-ref">hint</inline></reference> 必须为 <reference internal="True" refid="class-visualshadernodeintparameter-constant-hint-range"><inline classes="std std-ref">HINT_RANGE</inline></reference> 或 <reference internal="True" refid="class-visualshadernodeintparameter-constant-hint-range-step"><inline classes="std std-ref">HINT_RANGE_STEP</inline></reference> 才会生效。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-visualshadernodeintparameter-property-step"></target>
            <paragraph classes="classref-property" ids="class-visualshadernodeintparameter-property-step" names="class_visualshadernodeintparameter_property_step"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>step</strong> = <literal>1</literal> <reference internal="True" refid="class-visualshadernodeintparameter-property-step"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_step</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_step</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>参数值之间的步长。迫使参数成为给定值的倍数。<reference internal="True" refid="class-visualshadernodeintparameter-property-hint"><inline classes="std std-ref">hint</inline></reference> 必须为 <reference internal="True" refid="class-visualshadernodeintparameter-constant-hint-range-step"><inline classes="std std-ref">HINT_RANGE_STEP</inline></reference> 才能生效。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_editorresourcepicker.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/EditorResourcePicker.xml.</comment>
    <target refid="class-editorresourcepicker"></target>
    <section ids="editorresourcepicker class-editorresourcepicker" names="editorresourcepicker class_editorresourcepicker">
        <title>EditorResourcePicker</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_hboxcontainer#class-hboxcontainer"><inline classes="std std-ref">HBoxContainer</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_boxcontainer#class-boxcontainer"><inline classes="std std-ref">BoxContainer</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_container#class-container"><inline classes="std std-ref">Container</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_control#class-control"><inline classes="std std-ref">Control</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_canvasitem#class-canvasitem"><inline classes="std std-ref">CanvasItem</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph><strong>派生：</strong> <reference internal="True" refuri="class_editorscriptpicker#class-editorscriptpicker"><inline classes="std std-ref">EditorScriptPicker</inline></reference></paragraph>
        <paragraph>Godot 编辑器用于选择 <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> 类型属性的控件。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>此 <reference internal="True" refuri="class_control#class-control"><inline classes="std std-ref">Control</inline></reference> 节点用于编辑器的属性检查器以允许编辑 <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> 类型属性。它提供了创建、加载、保存和转换资源的选项。可以与 <reference internal="True" refuri="class_editorinspectorplugin#class-editorinspectorplugin"><inline classes="std std-ref">EditorInspectorPlugin</inline></reference> 检查器插件一起使用以重新创建相同的行为。</paragraph>
            <paragraph><strong>注意：</strong>这个 <reference internal="True" refuri="class_control#class-control"><inline classes="std std-ref">Control</inline></reference> 不包括资源的任何编辑器，因为编辑是由属性检查器本身或子检查器控制的。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="33"></colspec>
                    <colspec colwidth="77"></colspec>
                    <colspec colwidth="11"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorresourcepicker-property-base-type"><inline classes="std std-ref">base_type</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>""</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorresourcepicker-property-editable"><inline classes="std std-ref">editable</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorresourcepicker-property-edited-resource"><inline classes="std std-ref">edited_resource</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorresourcepicker-property-toggle-mode"><inline classes="std std-ref">toggle_mode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="51"></colspec>
                    <colspec colwidth="148"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorresourcepicker-private-method-handle-menu-selected"><inline classes="std std-ref">_handle_menu_selected</inline></reference>(id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorresourcepicker-private-method-set-create-options"><inline classes="std std-ref">_set_create_options</inline></reference>(menu_node: <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_packedstringarray#class-packedstringarray"><inline classes="std std-ref">PackedStringArray</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorresourcepicker-method-get-allowed-types"><inline classes="std std-ref">get_allowed_types</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorresourcepicker-method-set-toggle-pressed"><inline classes="std std-ref">set_toggle_pressed</inline></reference>(pressed: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="信号">
            <title>信号</title>
            <target refid="class-editorresourcepicker-signal-resource-changed"></target>
            <paragraph classes="classref-signal" ids="class-editorresourcepicker-signal-resource-changed" names="class_editorresourcepicker_signal_resource_changed"><strong>resource_changed</strong>(resource: <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference>) <reference internal="True" refid="class-editorresourcepicker-signal-resource-changed"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当正在编辑的资源改变值时发出。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorresourcepicker-signal-resource-selected"></target>
            <paragraph classes="classref-signal" ids="class-editorresourcepicker-signal-resource-selected" names="class_editorresourcepicker_signal_resource_selected"><strong>resource_selected</strong>(resource: <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference>, inspect: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <reference internal="True" refid="class-editorresourcepicker-signal-resource-selected"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当资源值被设置，并且用户点击它编辑时触发。当 <literal>inspect</literal> 为 <literal>true</literal> 时，该信号是由上下文菜单“编辑”或“检查”选项引起的。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="属性说明">
            <title>属性说明</title>
            <target refid="class-editorresourcepicker-property-base-type"></target>
            <paragraph classes="classref-property" ids="class-editorresourcepicker-property-base-type" names="class_editorresourcepicker_property_base_type"><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>base_type</strong> = <literal>""</literal> <reference internal="True" refid="class-editorresourcepicker-property-base-type"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_base_type</strong>(value: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>get_base_type</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>允许资源类型的基本类型。可以是几个选项的逗号分离列表。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorresourcepicker-property-editable"></target>
            <paragraph classes="classref-property" ids="class-editorresourcepicker-property-editable" names="class_editorresourcepicker_property_editable"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>editable</strong> = <literal>true</literal> <reference internal="True" refid="class-editorresourcepicker-property-editable"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_editable</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_editable</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则可以选择和编辑该值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorresourcepicker-property-edited-resource"></target>
            <paragraph classes="classref-property" ids="class-editorresourcepicker-property-edited-resource" names="class_editorresourcepicker_property_edited_resource"><reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>edited_resource</strong> <reference internal="True" refid="class-editorresourcepicker-property-edited-resource"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_edited_resource</strong>(value: <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>get_edited_resource</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>已编辑的资源值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorresourcepicker-property-toggle-mode"></target>
            <paragraph classes="classref-property" ids="class-editorresourcepicker-property-toggle-mode" names="class_editorresourcepicker_property_toggle_mode"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>toggle_mode</strong> = <literal>false</literal> <reference internal="True" refid="class-editorresourcepicker-property-toggle-mode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_toggle_mode</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_toggle_mode</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，带有资源预览的主按钮在切换模式下工作。使用 <reference internal="True" refid="class-editorresourcepicker-method-set-toggle-pressed"><inline classes="std std-ref">set_toggle_pressed</inline></reference> 来手动设置状态。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="方法说明">
            <title>方法说明</title>
            <target refid="class-editorresourcepicker-private-method-handle-menu-selected"></target>
            <paragraph classes="classref-method" ids="class-editorresourcepicker-private-method-handle-menu-selected" names="class_editorresourcepicker_private_method__handle_menu_selected"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>_handle_menu_selected</strong>(id: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-editorresourcepicker-private-method-handle-menu-selected"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>该虚方法可以被实现，以处理默认未处理的上下文菜单项目。请参阅 <reference internal="True" refid="class-editorresourcepicker-private-method-set-create-options"><inline classes="std std-ref">_set_create_options</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorresourcepicker-private-method-set-create-options"></target>
            <paragraph classes="classref-method" ids="class-editorresourcepicker-private-method-set-create-options" names="class_editorresourcepicker_private_method__set_create_options"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_set_create_options</strong>(menu_node: <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-editorresourcepicker-private-method-set-create-options"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>在更新 <strong>EditorResourcePicker</strong> 的上下文菜单时调用该虚方法。实现该方法以使用你自己的选项覆盖“新建 ...”项目。<literal>menu_node</literal> 是对 <reference internal="True" refuri="class_popupmenu#class-popupmenu"><inline classes="std std-ref">PopupMenu</inline></reference> 节点的引用。</paragraph>
            <paragraph><strong>注意：</strong>实现 <reference internal="True" refid="class-editorresourcepicker-private-method-handle-menu-selected"><inline classes="std std-ref">_handle_menu_selected</inline></reference> 来处理这些自定义项。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorresourcepicker-method-get-allowed-types"></target>
            <paragraph classes="classref-method" ids="class-editorresourcepicker-method-get-allowed-types" names="class_editorresourcepicker_method_get_allowed_types"><reference internal="True" refuri="class_packedstringarray#class-packedstringarray"><inline classes="std std-ref">PackedStringArray</inline></reference> <strong>get_allowed_types</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-editorresourcepicker-method-get-allowed-types"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回一个与 <reference internal="True" refid="class-editorresourcepicker-property-base-type"><inline classes="std std-ref">base_type</inline></reference> 对应的所有允许的类型和子类型的列表。如果 <reference internal="True" refid="class-editorresourcepicker-property-base-type"><inline classes="std std-ref">base_type</inline></reference> 是空，将返回一个空的列表。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorresourcepicker-method-set-toggle-pressed"></target>
            <paragraph classes="classref-method" ids="class-editorresourcepicker-method-set-toggle-pressed" names="class_editorresourcepicker_method_set_toggle_pressed"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_toggle_pressed</strong>(pressed: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <reference internal="True" refid="class-editorresourcepicker-method-set-toggle-pressed"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置主按钮的切换模式状态。只有当 <reference internal="True" refid="class-editorresourcepicker-property-toggle-mode"><inline classes="std std-ref">toggle_mode</inline></reference> 被设置为 <literal>true</literal> 时才起作用。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

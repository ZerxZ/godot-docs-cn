<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_editorvcsinterface.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/EditorVCSInterface.xml.</comment>
    <target refid="class-editorvcsinterface"></target>
    <section ids="editorvcsinterface class-editorvcsinterface" names="editorvcsinterface class_editorvcsinterface">
        <title>EditorVCSInterface</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>版本控制系统（VCS）接口，用于读取和写入正在使用的本地 VCS。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>定义编辑器使用的 API，负责从底层 VCS 提取信息。该 API 的实现包含在 VCS 插件中，这些插件是继承 <strong>EditorVCSInterface</strong> 并被附加（按需）到 <strong>EditorVCSInterface</strong> 的单例实例的 GDExtension 插件。以下列出的所有虚函数都不会亲自执行操作，而是会去调用 VCS 插件中内部覆盖的函数，以提供即插即用的体验。自定义 VCS 插件应当继承 <strong>EditorVCSInterface</strong> 并覆盖这些虚函数。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference internal="True" refuri="../tutorials/best_practices/version_control_systems"><inline classes="doc">版本控制系统</inline></reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="66"></colspec>
                    <colspec colwidth="328"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorvcsinterface-private-method-checkout-branch"><inline classes="std std-ref">_checkout_branch</inline></reference>(branch_name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorvcsinterface-private-method-commit"><inline classes="std std-ref">_commit</inline></reference>(msg: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorvcsinterface-private-method-create-branch"><inline classes="std std-ref">_create_branch</inline></reference>(branch_name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorvcsinterface-private-method-create-remote"><inline classes="std std-ref">_create_remote</inline></reference>(remote_name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, remote_url: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorvcsinterface-private-method-discard-file"><inline classes="std std-ref">_discard_file</inline></reference>(file_path: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorvcsinterface-private-method-fetch"><inline classes="std std-ref">_fetch</inline></reference>(remote: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>]</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorvcsinterface-private-method-get-branch-list"><inline classes="std std-ref">_get_branch_list</inline></reference>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorvcsinterface-private-method-get-current-branch-name"><inline classes="std std-ref">_get_current_branch_name</inline></reference>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference>]</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorvcsinterface-private-method-get-diff"><inline classes="std std-ref">_get_diff</inline></reference>(identifier: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, area: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference>]</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorvcsinterface-private-method-get-line-diff"><inline classes="std std-ref">_get_line_diff</inline></reference>(file_path: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, text: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference>]</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorvcsinterface-private-method-get-modified-files-data"><inline classes="std std-ref">_get_modified_files_data</inline></reference>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference>]</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorvcsinterface-private-method-get-previous-commits"><inline classes="std std-ref">_get_previous_commits</inline></reference>(max_commits: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>]</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorvcsinterface-private-method-get-remotes"><inline classes="std std-ref">_get_remotes</inline></reference>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorvcsinterface-private-method-get-vcs-name"><inline classes="std std-ref">_get_vcs_name</inline></reference>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorvcsinterface-private-method-initialize"><inline classes="std std-ref">_initialize</inline></reference>(project_path: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorvcsinterface-private-method-pull"><inline classes="std std-ref">_pull</inline></reference>(remote: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorvcsinterface-private-method-push"><inline classes="std std-ref">_push</inline></reference>(remote: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, force: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorvcsinterface-private-method-remove-branch"><inline classes="std std-ref">_remove_branch</inline></reference>(branch_name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorvcsinterface-private-method-remove-remote"><inline classes="std std-ref">_remove_remote</inline></reference>(remote_name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorvcsinterface-private-method-set-credentials"><inline classes="std std-ref">_set_credentials</inline></reference>(username: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, password: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, ssh_public_key_path: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, ssh_private_key_path: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, ssh_passphrase: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorvcsinterface-private-method-shut-down"><inline classes="std std-ref">_shut_down</inline></reference>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorvcsinterface-private-method-stage-file"><inline classes="std std-ref">_stage_file</inline></reference>(file_path: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorvcsinterface-private-method-unstage-file"><inline classes="std std-ref">_unstage_file</inline></reference>(file_path: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorvcsinterface-method-add-diff-hunks-into-diff-file"><inline classes="std std-ref">add_diff_hunks_into_diff_file</inline></reference>(diff_file: <reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference>, diff_hunks: <reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference>])</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorvcsinterface-method-add-line-diffs-into-diff-hunk"><inline classes="std std-ref">add_line_diffs_into_diff_hunk</inline></reference>(diff_hunk: <reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference>, line_diffs: <reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference>])</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorvcsinterface-method-create-commit"><inline classes="std std-ref">create_commit</inline></reference>(msg: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, author: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, id: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, unix_timestamp: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, offset_minutes: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorvcsinterface-method-create-diff-file"><inline classes="std std-ref">create_diff_file</inline></reference>(new_file: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, old_file: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorvcsinterface-method-create-diff-hunk"><inline classes="std std-ref">create_diff_hunk</inline></reference>(old_start: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, new_start: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, old_lines: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, new_lines: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorvcsinterface-method-create-diff-line"><inline classes="std std-ref">create_diff_line</inline></reference>(new_line_no: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, old_line_no: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, content: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, status: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorvcsinterface-method-create-status-file"><inline classes="std std-ref">create_status_file</inline></reference>(file_path: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, change_type: <reference internal="True" refid="enum-editorvcsinterface-changetype"><inline classes="std std-ref">ChangeType</inline></reference>, area: <reference internal="True" refid="enum-editorvcsinterface-treearea"><inline classes="std std-ref">TreeArea</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorvcsinterface-method-popup-error"><inline classes="std std-ref">popup_error</inline></reference>(msg: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>)</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="枚举">
            <title>枚举</title>
            <target refid="enum-editorvcsinterface-changetype"></target>
            <paragraph classes="classref-enumeration" ids="enum-editorvcsinterface-changetype" names="enum_editorvcsinterface_changetype">enum <strong>ChangeType</strong>: <reference internal="True" refid="enum-editorvcsinterface-changetype"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-editorvcsinterface-constant-change-type-new"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-editorvcsinterface-constant-change-type-new" names="class_editorvcsinterface_constant_change_type_new"><reference internal="True" refid="enum-editorvcsinterface-changetype"><inline classes="std std-ref">ChangeType</inline></reference> <strong>CHANGE_TYPE_NEW</strong> = <literal>0</literal></paragraph>
            <paragraph>添加了新文件。</paragraph>
            <target refid="class-editorvcsinterface-constant-change-type-modified"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-editorvcsinterface-constant-change-type-modified" names="class_editorvcsinterface_constant_change_type_modified"><reference internal="True" refid="enum-editorvcsinterface-changetype"><inline classes="std std-ref">ChangeType</inline></reference> <strong>CHANGE_TYPE_MODIFIED</strong> = <literal>1</literal></paragraph>
            <paragraph>先前添加的文件已被修改。</paragraph>
            <target refid="class-editorvcsinterface-constant-change-type-renamed"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-editorvcsinterface-constant-change-type-renamed" names="class_editorvcsinterface_constant_change_type_renamed"><reference internal="True" refid="enum-editorvcsinterface-changetype"><inline classes="std std-ref">ChangeType</inline></reference> <strong>CHANGE_TYPE_RENAMED</strong> = <literal>2</literal></paragraph>
            <paragraph>先前添加的文件已被重命名。</paragraph>
            <target refid="class-editorvcsinterface-constant-change-type-deleted"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-editorvcsinterface-constant-change-type-deleted" names="class_editorvcsinterface_constant_change_type_deleted"><reference internal="True" refid="enum-editorvcsinterface-changetype"><inline classes="std std-ref">ChangeType</inline></reference> <strong>CHANGE_TYPE_DELETED</strong> = <literal>3</literal></paragraph>
            <paragraph>先前添加的文件已被删除。</paragraph>
            <target refid="class-editorvcsinterface-constant-change-type-typechange"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-editorvcsinterface-constant-change-type-typechange" names="class_editorvcsinterface_constant_change_type_typechange"><reference internal="True" refid="enum-editorvcsinterface-changetype"><inline classes="std std-ref">ChangeType</inline></reference> <strong>CHANGE_TYPE_TYPECHANGE</strong> = <literal>4</literal></paragraph>
            <paragraph>先前添加的文件已更改类型。</paragraph>
            <target refid="class-editorvcsinterface-constant-change-type-unmerged"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-editorvcsinterface-constant-change-type-unmerged" names="class_editorvcsinterface_constant_change_type_unmerged"><reference internal="True" refid="enum-editorvcsinterface-changetype"><inline classes="std std-ref">ChangeType</inline></reference> <strong>CHANGE_TYPE_UNMERGED</strong> = <literal>5</literal></paragraph>
            <paragraph>文件未合并。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-editorvcsinterface-treearea"></target>
            <paragraph classes="classref-enumeration" ids="enum-editorvcsinterface-treearea" names="enum_editorvcsinterface_treearea">enum <strong>TreeArea</strong>: <reference internal="True" refid="enum-editorvcsinterface-treearea"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-editorvcsinterface-constant-tree-area-commit"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-editorvcsinterface-constant-tree-area-commit" names="class_editorvcsinterface_constant_tree_area_commit"><reference internal="True" refid="enum-editorvcsinterface-treearea"><inline classes="std std-ref">TreeArea</inline></reference> <strong>TREE_AREA_COMMIT</strong> = <literal>0</literal></paragraph>
            <paragraph>在提交区域遇到了提交。</paragraph>
            <target refid="class-editorvcsinterface-constant-tree-area-staged"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-editorvcsinterface-constant-tree-area-staged" names="class_editorvcsinterface_constant_tree_area_staged"><reference internal="True" refid="enum-editorvcsinterface-treearea"><inline classes="std std-ref">TreeArea</inline></reference> <strong>TREE_AREA_STAGED</strong> = <literal>1</literal></paragraph>
            <paragraph>在暂存区域遇到了文件。</paragraph>
            <target refid="class-editorvcsinterface-constant-tree-area-unstaged"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-editorvcsinterface-constant-tree-area-unstaged" names="class_editorvcsinterface_constant_tree_area_unstaged"><reference internal="True" refid="enum-editorvcsinterface-treearea"><inline classes="std std-ref">TreeArea</inline></reference> <strong>TREE_AREA_UNSTAGED</strong> = <literal>2</literal></paragraph>
            <paragraph>在未暂存区域遇到了文件。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="方法说明">
            <title>方法说明</title>
            <target refid="class-editorvcsinterface-private-method-checkout-branch"></target>
            <paragraph classes="classref-method" ids="class-editorvcsinterface-private-method-checkout-branch" names="class_editorvcsinterface_private_method__checkout_branch"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>_checkout_branch</strong>(branch_name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-editorvcsinterface-private-method-checkout-branch"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>检出 VCS 中的 <literal>branch_name</literal> 分支。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorvcsinterface-private-method-commit"></target>
            <paragraph classes="classref-method" ids="class-editorvcsinterface-private-method-commit" names="class_editorvcsinterface_private_method__commit"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_commit</strong>(msg: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-editorvcsinterface-private-method-commit"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>提交当前暂存的修改，并对提交应用提交信息 <literal>msg</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorvcsinterface-private-method-create-branch"></target>
            <paragraph classes="classref-method" ids="class-editorvcsinterface-private-method-create-branch" names="class_editorvcsinterface_private_method__create_branch"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_create_branch</strong>(branch_name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-editorvcsinterface-private-method-create-branch"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>在 VCS 中新建名为 <literal>branch_name</literal> 的分支。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorvcsinterface-private-method-create-remote"></target>
            <paragraph classes="classref-method" ids="class-editorvcsinterface-private-method-create-remote" names="class_editorvcsinterface_private_method__create_remote"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_create_remote</strong>(remote_name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, remote_url: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-editorvcsinterface-private-method-create-remote"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>创建一个名为 <literal>remote_name</literal> 的新远程仓库目标，并将其指向 <literal>remote_url</literal>。这既可以是 HTTPS 远程仓库，也可以是 SSH 远程仓库。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorvcsinterface-private-method-discard-file"></target>
            <paragraph classes="classref-method" ids="class-editorvcsinterface-private-method-discard-file" names="class_editorvcsinterface_private_method__discard_file"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_discard_file</strong>(file_path: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-editorvcsinterface-private-method-discard-file"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>丢弃对位于 <literal>file_path</literal> 的文件进行的修改。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorvcsinterface-private-method-fetch"></target>
            <paragraph classes="classref-method" ids="class-editorvcsinterface-private-method-fetch" names="class_editorvcsinterface_private_method__fetch"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_fetch</strong>(remote: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-editorvcsinterface-private-method-fetch"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>从远程仓库 <literal>remote</literal> 中抓取新修改，但不将修改写入当前工作目录。相当于 <literal>git fetch</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorvcsinterface-private-method-get-branch-list"></target>
            <paragraph classes="classref-method" ids="class-editorvcsinterface-private-method-get-branch-list" names="class_editorvcsinterface_private_method__get_branch_list"><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>] <strong>_get_branch_list</strong>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-editorvcsinterface-private-method-get-branch-list"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>获取 <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> 字符串的 <reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference> 数组实例，包含在 VCS 中可用的分支名称。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorvcsinterface-private-method-get-current-branch-name"></target>
            <paragraph classes="classref-method" ids="class-editorvcsinterface-private-method-get-current-branch-name" names="class_editorvcsinterface_private_method__get_current_branch_name"><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>_get_current_branch_name</strong>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-editorvcsinterface-private-method-get-current-branch-name"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>获取 VCS 中定义的当前分支名称。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorvcsinterface-private-method-get-diff"></target>
            <paragraph classes="classref-method" ids="class-editorvcsinterface-private-method-get-diff" names="class_editorvcsinterface_private_method__get_diff"><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference>] <strong>_get_diff</strong>(identifier: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, area: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-editorvcsinterface-private-method-get-diff"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回 <reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference> 项的数组（参见 <reference internal="True" refid="class-editorvcsinterface-method-create-diff-file"><inline classes="std std-ref">create_diff_file</inline></reference>、<reference internal="True" refid="class-editorvcsinterface-method-create-diff-hunk"><inline classes="std std-ref">create_diff_hunk</inline></reference>、<reference internal="True" refid="class-editorvcsinterface-method-create-diff-line"><inline classes="std std-ref">create_diff_line</inline></reference>、<reference internal="True" refid="class-editorvcsinterface-method-add-line-diffs-into-diff-hunk"><inline classes="std std-ref">add_line_diffs_into_diff_hunk</inline></reference> 和 <reference internal="True" refid="class-editorvcsinterface-method-add-diff-hunks-into-diff-file"><inline classes="std std-ref">add_diff_hunks_into_diff_file</inline></reference>），每项都包含一个差异的信息。如果 <literal>identifier</literal> 是文件路径，则返回文件差异；如果它是提交标识符，则返回提交差异。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorvcsinterface-private-method-get-line-diff"></target>
            <paragraph classes="classref-method" ids="class-editorvcsinterface-private-method-get-line-diff" names="class_editorvcsinterface_private_method__get_line_diff"><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference>] <strong>_get_line_diff</strong>(file_path: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, text: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-editorvcsinterface-private-method-get-line-diff"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回 <reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference> 字典项的 <reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference> 数组（见 <reference internal="True" refid="class-editorvcsinterface-method-create-diff-hunk"><inline classes="std std-ref">create_diff_hunk</inline></reference>），每一项都包含位于 <literal>file_path</literal> 的文件与传入的 <literal>text</literal> 之间的单行差异。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorvcsinterface-private-method-get-modified-files-data"></target>
            <paragraph classes="classref-method" ids="class-editorvcsinterface-private-method-get-modified-files-data" names="class_editorvcsinterface_private_method__get_modified_files_data"><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference>] <strong>_get_modified_files_data</strong>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-editorvcsinterface-private-method-get-modified-files-data"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回 <reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference> 字典项的 <reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference> 数组（见 <reference internal="True" refid="class-editorvcsinterface-method-create-status-file"><inline classes="std std-ref">create_status_file</inline></reference>），每一项都包含项目文件夹中每个已修改的文件的状态数据。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorvcsinterface-private-method-get-previous-commits"></target>
            <paragraph classes="classref-method" ids="class-editorvcsinterface-private-method-get-previous-commits" names="class_editorvcsinterface_private_method__get_previous_commits"><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference>] <strong>_get_previous_commits</strong>(max_commits: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-editorvcsinterface-private-method-get-previous-commits"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回 <reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference> 字典项的 <reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference> 数组（见 <reference internal="True" refid="class-editorvcsinterface-method-create-commit"><inline classes="std std-ref">create_commit</inline></reference>），每一项都包含一个过去提交的数据。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorvcsinterface-private-method-get-remotes"></target>
            <paragraph classes="classref-method" ids="class-editorvcsinterface-private-method-get-remotes" names="class_editorvcsinterface_private_method__get_remotes"><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>] <strong>_get_remotes</strong>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-editorvcsinterface-private-method-get-remotes"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回 <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> 字符串的 <reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference> 数组，每一个都包含 VCS 中配置的一个远程仓库的名称。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorvcsinterface-private-method-get-vcs-name"></target>
            <paragraph classes="classref-method" ids="class-editorvcsinterface-private-method-get-vcs-name" names="class_editorvcsinterface_private_method__get_vcs_name"><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>_get_vcs_name</strong>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-editorvcsinterface-private-method-get-vcs-name"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回底层 VCS 提供方的名称。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorvcsinterface-private-method-initialize"></target>
            <paragraph classes="classref-method" ids="class-editorvcsinterface-private-method-initialize" names="class_editorvcsinterface_private_method__initialize"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>_initialize</strong>(project_path: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-editorvcsinterface-private-method-initialize"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>从编辑器中调用时初始化该 VCS 插件。返回该插件是否成功初始化。会在 <literal>project_path</literal> 初始化 VCS 项目。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorvcsinterface-private-method-pull"></target>
            <paragraph classes="classref-method" ids="class-editorvcsinterface-private-method-pull" names="class_editorvcsinterface_private_method__pull"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_pull</strong>(remote: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-editorvcsinterface-private-method-pull"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>从远程仓库拉取修改。这可能会导致合并冲突。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorvcsinterface-private-method-push"></target>
            <paragraph classes="classref-method" ids="class-editorvcsinterface-private-method-push" names="class_editorvcsinterface_private_method__push"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_push</strong>(remote: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, force: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-editorvcsinterface-private-method-push"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将修改推送至远程仓库 <literal>remote</literal>。如果 <literal>force</literal> 为 <literal>true</literal>，则会进行强制推送，覆盖远程仓库中现有的修改历史。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorvcsinterface-private-method-remove-branch"></target>
            <paragraph classes="classref-method" ids="class-editorvcsinterface-private-method-remove-branch" names="class_editorvcsinterface_private_method__remove_branch"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_remove_branch</strong>(branch_name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-editorvcsinterface-private-method-remove-branch"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>从本地 VCS 中移除一个分支。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorvcsinterface-private-method-remove-remote"></target>
            <paragraph classes="classref-method" ids="class-editorvcsinterface-private-method-remove-remote" names="class_editorvcsinterface_private_method__remove_remote"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_remove_remote</strong>(remote_name: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-editorvcsinterface-private-method-remove-remote"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>从本地 VCS 中移除一个远程仓库。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorvcsinterface-private-method-set-credentials"></target>
            <paragraph classes="classref-method" ids="class-editorvcsinterface-private-method-set-credentials" names="class_editorvcsinterface_private_method__set_credentials"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_set_credentials</strong>(username: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, password: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, ssh_public_key_path: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, ssh_private_key_path: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, ssh_passphrase: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-editorvcsinterface-private-method-set-credentials"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>在底层 VCS 中设置用户认证信息。用户名 <literal>username</literal> 和密码 <literal>password</literal> 只会在进行 HTTPS 认证且没有在远程仓库 URL 中给出时使用。SSH 公钥路径 <literal>ssh_public_key_path</literal>、SSH 私钥路径 <literal>ssh_private_key_path</literal>、SSH 密码 <literal>ssh_passphrase</literal> 只会在进行 SSH 认证时使用。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorvcsinterface-private-method-shut-down"></target>
            <paragraph classes="classref-method" ids="class-editorvcsinterface-private-method-shut-down" names="class_editorvcsinterface_private_method__shut_down"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>_shut_down</strong>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-editorvcsinterface-private-method-shut-down"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>关闭 VCS 插件实例。会在用户关闭编辑器或通过编辑器 UI 关闭该 VCS 插件时调用。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorvcsinterface-private-method-stage-file"></target>
            <paragraph classes="classref-method" ids="class-editorvcsinterface-private-method-stage-file" names="class_editorvcsinterface_private_method__stage_file"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_stage_file</strong>(file_path: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-editorvcsinterface-private-method-stage-file"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将位于 <literal>file_path</literal> 的文件暂存到暂存区。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorvcsinterface-private-method-unstage-file"></target>
            <paragraph classes="classref-method" ids="class-editorvcsinterface-private-method-unstage-file" names="class_editorvcsinterface_private_method__unstage_file"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_unstage_file</strong>(file_path: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-editorvcsinterface-private-method-unstage-file"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将位于 <literal>file_path</literal> 的文件从暂存区撤销到未暂存区。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorvcsinterface-method-add-diff-hunks-into-diff-file"></target>
            <paragraph classes="classref-method" ids="class-editorvcsinterface-method-add-diff-hunks-into-diff-file" names="class_editorvcsinterface_method_add_diff_hunks_into_diff_file"><reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference> <strong>add_diff_hunks_into_diff_file</strong>(diff_file: <reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference>, diff_hunks: <reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference>]) <reference internal="True" refid="class-editorvcsinterface-method-add-diff-hunks-into-diff-file"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>辅助函数，用于将一组 <literal>diff_hunks</literal> 添加到 <literal>diff_file</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorvcsinterface-method-add-line-diffs-into-diff-hunk"></target>
            <paragraph classes="classref-method" ids="class-editorvcsinterface-method-add-line-diffs-into-diff-hunk" names="class_editorvcsinterface_method_add_line_diffs_into_diff_hunk"><reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference> <strong>add_line_diffs_into_diff_hunk</strong>(diff_hunk: <reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference>, line_diffs: <reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference>]) <reference internal="True" refid="class-editorvcsinterface-method-add-line-diffs-into-diff-hunk"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>辅助函数，用于将一组 <literal>line_diffs</literal> 添加到 <literal>diff_hunk</literal> 中。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorvcsinterface-method-create-commit"></target>
            <paragraph classes="classref-method" ids="class-editorvcsinterface-method-create-commit" names="class_editorvcsinterface_method_create_commit"><reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference> <strong>create_commit</strong>(msg: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, author: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, id: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, unix_timestamp: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, offset_minutes: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-editorvcsinterface-method-create-commit"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>辅助函数， 用于创建一个提交 <reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference> 项。<literal>msg</literal> 是该提交的提交消息。<literal>author</literal> 是单个人类可读的字符串，包含所有作者的详细信息，例如 VCS 中配置的电子邮件和名称。无论 VCS 可能以哪种格式为提交提供标识符，<literal>id</literal> 是该提交的标识符。<literal>unix_timestamp</literal> 是该提交被创建时的 UTC Unix 时间戳。<literal>offset_minutes</literal> 是该提交创建时当前系统时区的偏移量，单位为分钟。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorvcsinterface-method-create-diff-file"></target>
            <paragraph classes="classref-method" ids="class-editorvcsinterface-method-create-diff-file" names="class_editorvcsinterface_method_create_diff_file"><reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference> <strong>create_diff_file</strong>(new_file: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, old_file: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <reference internal="True" refid="class-editorvcsinterface-method-create-diff-file"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>辅助函数，用于创建用来保存新旧文件路径差异的 <reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorvcsinterface-method-create-diff-hunk"></target>
            <paragraph classes="classref-method" ids="class-editorvcsinterface-method-create-diff-hunk" names="class_editorvcsinterface_method_create_diff_hunk"><reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference> <strong>create_diff_hunk</strong>(old_start: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, new_start: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, old_lines: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, new_lines: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-editorvcsinterface-method-create-diff-hunk"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>辅助函数，用于创建用于保存差异块数据的 <reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference>。<literal>old_start</literal> 是旧文件中的起始行号。<literal>new_start</literal> 是新文件中的起始行号。<literal>old_lines</literal> 是旧文件中的行数。<literal>new_lines</literal> 是新文件中的行数。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorvcsinterface-method-create-diff-line"></target>
            <paragraph classes="classref-method" ids="class-editorvcsinterface-method-create-diff-line" names="class_editorvcsinterface_method_create_diff_line"><reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference> <strong>create_diff_line</strong>(new_line_no: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, old_line_no: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, content: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, status: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <reference internal="True" refid="class-editorvcsinterface-method-create-diff-line"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>辅助函数，创建用于保存行差异的 <reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference>。<literal>new_line_no</literal> 是新文件中的行号（该行被删除时可为 <literal>-1</literal>）。<literal>old_line_no</literal> 是旧文件中的行号（该行为新增时可为 <literal>-1</literal>）。<literal>content</literal> 为差异文本。<literal>status</literal> 为保存该行原点的单字符字符串。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorvcsinterface-method-create-status-file"></target>
            <paragraph classes="classref-method" ids="class-editorvcsinterface-method-create-status-file" names="class_editorvcsinterface_method_create_status_file"><reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference> <strong>create_status_file</strong>(file_path: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, change_type: <reference internal="True" refid="enum-editorvcsinterface-changetype"><inline classes="std std-ref">ChangeType</inline></reference>, area: <reference internal="True" refid="enum-editorvcsinterface-treearea"><inline classes="std std-ref">TreeArea</inline></reference>) <reference internal="True" refid="class-editorvcsinterface-method-create-status-file"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>辅助函数，用于创建被编辑器用来读取文件状态的 <reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorvcsinterface-method-popup-error"></target>
            <paragraph classes="classref-method" ids="class-editorvcsinterface-method-popup-error" names="class_editorvcsinterface_method_popup_error"><abbreviation explanation="无返回值。">void</abbreviation> <strong>popup_error</strong>(msg: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>) <reference internal="True" refid="class-editorvcsinterface-method-popup-error"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>在编辑器中弹出一条错误消息，显示为来自底层 VCS。使用它来显示 VCS 特定的错误消息。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

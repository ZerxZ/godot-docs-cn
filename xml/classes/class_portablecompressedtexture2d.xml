<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_portablecompressedtexture2d.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/PortableCompressedTexture2D.xml.</comment>
    <target refid="class-portablecompressedtexture2d"></target>
    <section ids="portablecompressedtexture2d class-portablecompressedtexture2d" names="portablecompressedtexture2d class_portablecompressedtexture2d">
        <title>PortableCompressedTexture2D</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_texture#class-texture"><inline classes="std std-ref">Texture</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>为磁盘和/或显存提供可移植的压缩纹理。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>这个类能够将压缩纹理存储为自包含的资源（与导入资源相对）。</paragraph>
            <paragraph>用于 2D 时（在磁盘上压缩、在显存中不压缩）推荐使用有损和无损模式。用于 3D 时（在显存中压缩）则取决于目标平台。</paragraph>
            <paragraph>如果你只想用于桌面平台，则推荐使用 S3TC 或 BPTC。如果只用于移动平台，则推荐使用 ETC2。</paragraph>
            <paragraph>如果要实现可移植、自包含的 3D 纹理，让这种纹理能同时在桌面和移动平台使用，则推荐 Basis Universal（尽管代价是有较小的质量损耗和更长的压缩时间）。</paragraph>
            <paragraph>这个资源应使用代码创建。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="47"></colspec>
                    <colspec colwidth="98"></colspec>
                    <colspec colwidth="88"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_packedbytearray#class-packedbytearray"><inline classes="std std-ref">PackedByteArray</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-portablecompressedtexture2d-property-data"><inline classes="std std-ref">_data</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>PackedByteArray()</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-portablecompressedtexture2d-property-keep-compressed-buffer"><inline classes="std std-ref">keep_compressed_buffer</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph>resource_local_to_scene</paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal> (overrides <reference internal="True" refuri="class_resource#class-resource-property-resource-local-to-scene"><inline classes="std std-ref">Resource</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-portablecompressedtexture2d-property-size-override"><inline classes="std std-ref">size_override</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Vector2(0, 0)</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="74"></colspec>
                    <colspec colwidth="308"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-portablecompressedtexture2d-method-create-from-image"><inline classes="std std-ref">create_from_image</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_image#class-image"><inline classes="std std-ref">Image</inline></reference> image, <reference internal="True" refid="enum-portablecompressedtexture2d-compressionmode"><inline classes="std std-ref">CompressionMode</inline></reference> compression_mode, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> normal_map=false, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> lossy_quality=0.8 <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-portablecompressedtexture2d-compressionmode"><inline classes="std std-ref">CompressionMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-portablecompressedtexture2d-method-get-compression-mode"><inline classes="std std-ref">get_compression_mode</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_image#enum-image-format"><inline classes="std std-ref">Format</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-portablecompressedtexture2d-method-get-format"><inline classes="std std-ref">get_format</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-portablecompressedtexture2d-method-is-keeping-all-compressed-buffers"><inline classes="std std-ref">is_keeping_all_compressed_buffers</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="调用本方法无需实例，所以可以直接使用类名调用。">static</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-portablecompressedtexture2d-method-set-keep-all-compressed-buffers"><inline classes="std std-ref">set_keep_all_compressed_buffers</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> keep <strong>)</strong> <abbreviation explanation="调用本方法无需实例，所以可以直接使用类名调用。">static</abbreviation></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="枚举">
            <title>枚举</title>
            <target refid="enum-portablecompressedtexture2d-compressionmode"></target>
            <paragraph classes="classref-enumeration" ids="enum-portablecompressedtexture2d-compressionmode" names="enum_portablecompressedtexture2d_compressionmode">enum <strong>CompressionMode</strong>:</paragraph>
            <target refid="class-portablecompressedtexture2d-constant-compression-mode-lossless"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-portablecompressedtexture2d-constant-compression-mode-lossless" names="class_portablecompressedtexture2d_constant_compression_mode_lossless"><reference internal="True" refid="enum-portablecompressedtexture2d-compressionmode"><inline classes="std std-ref">CompressionMode</inline></reference> <strong>COMPRESSION_MODE_LOSSLESS</strong> = <literal>0</literal></paragraph>
            <target refid="class-portablecompressedtexture2d-constant-compression-mode-lossy"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-portablecompressedtexture2d-constant-compression-mode-lossy" names="class_portablecompressedtexture2d_constant_compression_mode_lossy"><reference internal="True" refid="enum-portablecompressedtexture2d-compressionmode"><inline classes="std std-ref">CompressionMode</inline></reference> <strong>COMPRESSION_MODE_LOSSY</strong> = <literal>1</literal></paragraph>
            <target refid="class-portablecompressedtexture2d-constant-compression-mode-basis-universal"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-portablecompressedtexture2d-constant-compression-mode-basis-universal" names="class_portablecompressedtexture2d_constant_compression_mode_basis_universal"><reference internal="True" refid="enum-portablecompressedtexture2d-compressionmode"><inline classes="std std-ref">CompressionMode</inline></reference> <strong>COMPRESSION_MODE_BASIS_UNIVERSAL</strong> = <literal>2</literal></paragraph>
            <target refid="class-portablecompressedtexture2d-constant-compression-mode-s3tc"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-portablecompressedtexture2d-constant-compression-mode-s3tc" names="class_portablecompressedtexture2d_constant_compression_mode_s3tc"><reference internal="True" refid="enum-portablecompressedtexture2d-compressionmode"><inline classes="std std-ref">CompressionMode</inline></reference> <strong>COMPRESSION_MODE_S3TC</strong> = <literal>3</literal></paragraph>
            <target refid="class-portablecompressedtexture2d-constant-compression-mode-etc2"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-portablecompressedtexture2d-constant-compression-mode-etc2" names="class_portablecompressedtexture2d_constant_compression_mode_etc2"><reference internal="True" refid="enum-portablecompressedtexture2d-compressionmode"><inline classes="std std-ref">CompressionMode</inline></reference> <strong>COMPRESSION_MODE_ETC2</strong> = <literal>4</literal></paragraph>
            <target refid="class-portablecompressedtexture2d-constant-compression-mode-bptc"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-portablecompressedtexture2d-constant-compression-mode-bptc" names="class_portablecompressedtexture2d_constant_compression_mode_bptc"><reference internal="True" refid="enum-portablecompressedtexture2d-compressionmode"><inline classes="std std-ref">CompressionMode</inline></reference> <strong>COMPRESSION_MODE_BPTC</strong> = <literal>5</literal></paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="属性说明">
            <title>属性说明</title>
            <target refid="class-portablecompressedtexture2d-property-data"></target>
            <paragraph classes="classref-property" ids="class-portablecompressedtexture2d-property-data" names="class_portablecompressedtexture2d_property__data"><reference internal="True" refuri="class_packedbytearray#class-packedbytearray"><inline classes="std std-ref">PackedByteArray</inline></reference> <strong>_data</strong> = <literal>PackedByteArray()</literal></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个属性的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-portablecompressedtexture2d-property-keep-compressed-buffer"></target>
            <paragraph classes="classref-property" ids="class-portablecompressedtexture2d-property-keep-compressed-buffer" names="class_portablecompressedtexture2d_property_keep_compressed_buffer"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>keep_compressed_buffer</strong> = <literal>false</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_keep_compressed_buffer</strong> <strong>(</strong> <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_keeping_compressed_buffer</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>在编辑器中运行时，这个类会将来源压缩数据保持在内存中。否则加载资源后来源压缩数据就会丢失，资源也无法重新保存。</paragraph>
            <paragraph>如果你要在加载后再次进行持久化，这个标志能够让压缩数据保持在内存中。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-portablecompressedtexture2d-property-size-override"></target>
            <paragraph classes="classref-property" ids="class-portablecompressedtexture2d-property-size-override" names="class_portablecompressedtexture2d_property_size_override"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>size_override</strong> = <literal>Vector2(0, 0)</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_size_override</strong> <strong>(</strong> <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>get_size_override</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>允许覆盖纹理大小（仅限 2D）。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="方法说明">
            <title>方法说明</title>
            <target refid="class-portablecompressedtexture2d-method-create-from-image"></target>
            <paragraph classes="classref-method" ids="class-portablecompressedtexture2d-method-create-from-image" names="class_portablecompressedtexture2d_method_create_from_image">void <strong>create_from_image</strong> <strong>(</strong> <reference internal="True" refuri="class_image#class-image"><inline classes="std std-ref">Image</inline></reference> image, <reference internal="True" refid="enum-portablecompressedtexture2d-compressionmode"><inline classes="std std-ref">CompressionMode</inline></reference> compression_mode, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> normal_map=false, <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> lossy_quality=0.8 <strong>)</strong></paragraph>
            <paragraph>使用基础图像初始化压缩纹理。必须提供压缩模式。</paragraph>
            <paragraph>如果该图像会用作法线贴图，则推荐使用 <literal>normal_map</literal>，确保达到最佳质量。</paragraph>
            <paragraph>如果请求了有损压缩，还可以提供质量设置。会映射至有损 WebP 压缩质量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-portablecompressedtexture2d-method-get-compression-mode"></target>
            <paragraph classes="classref-method" ids="class-portablecompressedtexture2d-method-get-compression-mode" names="class_portablecompressedtexture2d_method_get_compression_mode"><reference internal="True" refid="enum-portablecompressedtexture2d-compressionmode"><inline classes="std std-ref">CompressionMode</inline></reference> <strong>get_compression_mode</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回使用的压缩模式（初始化后有效）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-portablecompressedtexture2d-method-get-format"></target>
            <paragraph classes="classref-method" ids="class-portablecompressedtexture2d-method-get-format" names="class_portablecompressedtexture2d_method_get_format"><reference internal="True" refuri="class_image#enum-image-format"><inline classes="std std-ref">Format</inline></reference> <strong>get_format</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回使用的图像格式（初始化后有效）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-portablecompressedtexture2d-method-is-keeping-all-compressed-buffers"></target>
            <paragraph classes="classref-method" ids="class-portablecompressedtexture2d-method-is-keeping-all-compressed-buffers" names="class_portablecompressedtexture2d_method_is_keeping_all_compressed_buffers"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_keeping_all_compressed_buffers</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="调用本方法无需实例，所以可以直接使用类名调用。">static</abbreviation></paragraph>
            <paragraph>返回是否为所有该类型的纹理覆盖该标志。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-portablecompressedtexture2d-method-set-keep-all-compressed-buffers"></target>
            <paragraph classes="classref-method" ids="class-portablecompressedtexture2d-method-set-keep-all-compressed-buffers" names="class_portablecompressedtexture2d_method_set_keep_all_compressed_buffers">void <strong>set_keep_all_compressed_buffers</strong> <strong>(</strong> <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> keep <strong>)</strong> <abbreviation explanation="调用本方法无需实例，所以可以直接使用类名调用。">static</abbreviation></paragraph>
            <paragraph>为该类型的所有纹理全局覆盖该标志。主要由编辑器使用。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，所以可以直接使用类名调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

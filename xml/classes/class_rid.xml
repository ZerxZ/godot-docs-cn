<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_rid.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/RID.xml.</comment>
    <target refid="class-rid"></target>
    <section ids="rid class-rid" names="rid class_rid">
        <title>RID</title>
        <paragraph><reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> 的唯一标识符的句柄。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>RID <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> 类型用于通过其唯一 ID 访问低级资源。RID 是不透明的，这意味着它们不会自行授予对资源的访问权限。它们由低级服务类使用，例如 <reference internal="True" refuri="class_displayserver#class-displayserver"><inline classes="std std-ref">DisplayServer</inline></reference>、<reference internal="True" refuri="class_renderingserver#class-renderingserver"><inline classes="std std-ref">RenderingServer</inline></reference>、<reference internal="True" refuri="class_textserver#class-textserver"><inline classes="std std-ref">TextServer</inline></reference> 等。</paragraph>
            <paragraph>低级资源可能对应于高级 <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference>，例如 <reference internal="True" refuri="class_texture#class-texture"><inline classes="std std-ref">Texture</inline></reference> 或 <reference internal="True" refuri="class_mesh#class-mesh"><inline classes="std std-ref">Mesh</inline></reference>。</paragraph>
            <note>
                <paragraph>通过 C# 使用这个 API 时有显著的不同。详见 <reference internal="True" refuri="../tutorials/scripting/c_sharp/c_sharp_differences#doc-c-sharp-differences"><inline classes="std std-ref">C# API 与 GDScript 的差异</inline></reference>。</paragraph>
            </note>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="构造函数">
            <title>构造函数</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="23"></colspec>
                    <colspec colwidth="78"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rid-constructor-rid"><inline classes="std std-ref">RID</inline></reference> <strong>(</strong> <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rid-constructor-rid"><inline classes="std std-ref">RID</inline></reference> <strong>(</strong> <reference internal="True" refid="class-rid"><inline classes="std std-ref">RID</inline></reference> from <strong>)</strong></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="25"></colspec>
                    <colspec colwidth="64"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rid-method-get-id"><inline classes="std std-ref">get_id</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rid-method-is-valid"><inline classes="std std-ref">is_valid</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id4" names="操作符">
            <title>操作符</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="25"></colspec>
                    <colspec colwidth="89"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rid-operator-neq-rid"><inline classes="std std-ref">operator !=</inline></reference> <strong>(</strong> <reference internal="True" refid="class-rid"><inline classes="std std-ref">RID</inline></reference> right <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rid-operator-lt-rid"><inline classes="std std-ref">operator &lt;</inline></reference> <strong>(</strong> <reference internal="True" refid="class-rid"><inline classes="std std-ref">RID</inline></reference> right <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rid-operator-lte-rid"><inline classes="std std-ref">operator &lt;=</inline></reference> <strong>(</strong> <reference internal="True" refid="class-rid"><inline classes="std std-ref">RID</inline></reference> right <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rid-operator-eq-rid"><inline classes="std std-ref">operator ==</inline></reference> <strong>(</strong> <reference internal="True" refid="class-rid"><inline classes="std std-ref">RID</inline></reference> right <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rid-operator-gt-rid"><inline classes="std std-ref">operator &gt;</inline></reference> <strong>(</strong> <reference internal="True" refid="class-rid"><inline classes="std std-ref">RID</inline></reference> right <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-rid-operator-gte-rid"><inline classes="std std-ref">operator &gt;=</inline></reference> <strong>(</strong> <reference internal="True" refid="class-rid"><inline classes="std std-ref">RID</inline></reference> right <strong>)</strong></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="构造函数说明">
            <title>构造函数说明</title>
            <target refid="class-rid-constructor-rid"></target>
            <paragraph classes="classref-constructor" ids="class-rid-constructor-rid" names="class_rid_constructor_rid"><reference internal="True" refid="class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>RID</strong> <strong>(</strong> <strong>)</strong></paragraph>
            <paragraph>构造空的 <strong>RID</strong>，内容为无效的 ID <literal>0</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <paragraph classes="classref-constructor"><reference internal="True" refid="class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>RID</strong> <strong>(</strong> <reference internal="True" refid="class-rid"><inline classes="std std-ref">RID</inline></reference> from <strong>)</strong></paragraph>
            <paragraph>构造给定 <strong>RID</strong> 的副本。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="方法说明">
            <title>方法说明</title>
            <target refid="class-rid-method-get-id"></target>
            <paragraph classes="classref-method" ids="class-rid-method-get-id" names="class_rid_method_get_id"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_id</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回引用的底层资源的 ID。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-rid-method-is-valid"></target>
            <paragraph classes="classref-method" ids="class-rid-method-is-valid" names="class_rid_method_is_valid"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_valid</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>如果该 <strong>RID</strong> 非 <literal>0</literal>，则返回 <literal>true</literal>。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id7" names="操作符说明">
            <title>操作符说明</title>
            <target refid="class-rid-operator-neq-rid"></target>
            <paragraph classes="classref-operator" ids="class-rid-operator-neq-rid" names="class_rid_operator_neq_rid"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>operator !=</strong> <strong>(</strong> <reference internal="True" refid="class-rid"><inline classes="std std-ref">RID</inline></reference> right <strong>)</strong></paragraph>
            <paragraph>如果 <strong>RID</strong> 不相等，则返回 <literal>true</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-rid-operator-lt-rid"></target>
            <paragraph classes="classref-operator" ids="class-rid-operator-lt-rid" names="class_rid_operator_lt_rid"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>operator &lt;</strong> <strong>(</strong> <reference internal="True" refid="class-rid"><inline classes="std std-ref">RID</inline></reference> right <strong>)</strong></paragraph>
            <paragraph>如果该 <strong>RID</strong> 的 ID 小于右侧 <literal>right</literal> 的 ID，则返回 <literal>true</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-rid-operator-lte-rid"></target>
            <paragraph classes="classref-operator" ids="class-rid-operator-lte-rid" names="class_rid_operator_lte_rid"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>operator &lt;=</strong> <strong>(</strong> <reference internal="True" refid="class-rid"><inline classes="std std-ref">RID</inline></reference> right <strong>)</strong></paragraph>
            <paragraph>如果该 <strong>RID</strong> 的 ID 小于等于右侧 <literal>right</literal> 的 ID，则返回 <literal>true</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-rid-operator-eq-rid"></target>
            <paragraph classes="classref-operator" ids="class-rid-operator-eq-rid" names="class_rid_operator_eq_rid"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>operator ==</strong> <strong>(</strong> <reference internal="True" refid="class-rid"><inline classes="std std-ref">RID</inline></reference> right <strong>)</strong></paragraph>
            <paragraph>如果 <strong>RID</strong> 相等，则返回 <literal>true</literal>，表示它们引用的是同一个底层资源。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-rid-operator-gt-rid"></target>
            <paragraph classes="classref-operator" ids="class-rid-operator-gt-rid" names="class_rid_operator_gt_rid"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>operator &gt;</strong> <strong>(</strong> <reference internal="True" refid="class-rid"><inline classes="std std-ref">RID</inline></reference> right <strong>)</strong></paragraph>
            <paragraph>如果该 <strong>RID</strong> 的 ID 大于右侧 <literal>right</literal> 的 ID，则返回 <literal>true</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-rid-operator-gte-rid"></target>
            <paragraph classes="classref-operator" ids="class-rid-operator-gte-rid" names="class_rid_operator_gte_rid"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>operator &gt;=</strong> <strong>(</strong> <reference internal="True" refid="class-rid"><inline classes="std std-ref">RID</inline></reference> right <strong>)</strong></paragraph>
            <paragraph>如果该 <strong>RID</strong> 的 ID 大于等于右侧 <literal>right</literal> 的 ID，则返回 <literal>true</literal>。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，所以可以直接使用类名调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

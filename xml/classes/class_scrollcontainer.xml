<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_scrollcontainer.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/ScrollContainer.xml.</comment>
    <target refid="class-scrollcontainer"></target>
    <section ids="scrollcontainer class-scrollcontainer" names="scrollcontainer class_scrollcontainer">
        <title>ScrollContainer</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_container#class-container"><inline classes="std std-ref">Container</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_control#class-control"><inline classes="std std-ref">Control</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_canvasitem#class-canvasitem"><inline classes="std std-ref">CanvasItem</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph><strong>派生：</strong> <reference internal="True" refuri="class_editorinspector#class-editorinspector"><inline classes="std std-ref">EditorInspector</inline></reference></paragraph>
        <paragraph>需要时能够为子控件提供滚动条的容器。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>用于在需要时为子控件提供滚动条的容器。滚动条会自动绘制在右侧（垂直滚动条）或底部（水平滚动条），拖动滚动条能够移动 ScrollContainer 中的可见 Control（及其子项）。滚动条会根据该 Control 的 <reference internal="True" refuri="class_control#class-control-property-custom-minimum-size"><inline classes="std std-ref">Control.custom_minimum_size</inline></reference> 相对于 ScrollContainer 的大小自动调整抓取器的大小。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference internal="True" refuri="../tutorials/ui/gui_containers"><inline classes="doc">使用容器</inline></reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="52"></colspec>
                    <colspec colwidth="100"></colspec>
                    <colspec colwidth="75"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph>clip_contents</paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal> (overrides <reference internal="True" refuri="class_control#class-control-property-clip-contents"><inline classes="std std-ref">Control</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-scrollcontainer-property-follow-focus"><inline classes="std std-ref">follow_focus</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-scrollcontainer-scrollmode"><inline classes="std std-ref">ScrollMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-scrollcontainer-property-horizontal-scroll-mode"><inline classes="std std-ref">horizontal_scroll_mode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-scrollcontainer-property-scroll-deadzone"><inline classes="std std-ref">scroll_deadzone</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-scrollcontainer-property-scroll-horizontal"><inline classes="std std-ref">scroll_horizontal</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-scrollcontainer-property-scroll-horizontal-custom-step"><inline classes="std std-ref">scroll_horizontal_custom_step</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>-1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-scrollcontainer-property-scroll-vertical"><inline classes="std std-ref">scroll_vertical</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-scrollcontainer-property-scroll-vertical-custom-step"><inline classes="std std-ref">scroll_vertical_custom_step</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>-1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-scrollcontainer-scrollmode"><inline classes="std std-ref">ScrollMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-scrollcontainer-property-vertical-scroll-mode"><inline classes="std std-ref">vertical_scroll_mode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id4" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="37"></colspec>
                    <colspec colwidth="131"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-scrollcontainer-method-ensure-control-visible"><inline classes="std std-ref">ensure_control_visible</inline></reference>(control: <reference internal="True" refuri="class_control#class-control"><inline classes="std std-ref">Control</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_hscrollbar#class-hscrollbar"><inline classes="std std-ref">HScrollBar</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-scrollcontainer-method-get-h-scroll-bar"><inline classes="std std-ref">get_h_scroll_bar</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vscrollbar#class-vscrollbar"><inline classes="std std-ref">VScrollBar</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-scrollcontainer-method-get-v-scroll-bar"><inline classes="std std-ref">get_v_scroll_bar</inline></reference>()</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id5" names="主题属性">
            <title>主题属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="33"></colspec>
                    <colspec colwidth="55"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-scrollcontainer-theme-style-panel"><inline classes="std std-ref">panel</inline></reference></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="信号">
            <title>信号</title>
            <target refid="class-scrollcontainer-signal-scroll-ended"></target>
            <paragraph classes="classref-signal" ids="class-scrollcontainer-signal-scroll-ended" names="class_scrollcontainer_signal_scroll_ended"><strong>scroll_ended</strong>() <reference internal="True" refid="class-scrollcontainer-signal-scroll-ended"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当<emphasis>通过触摸事件</emphasis>拖动可滚动区域而导致滚动停止时发出。当通过拖动滚动条滚动、使用鼠标滚轮滚动、或使用键盘/游戏手柄事件滚动时，<emphasis>不会</emphasis>发出该信号。</paragraph>
            <paragraph><strong>注意：</strong>该信号仅会在 Android、iOS、桌面、Web 平台上发出，在桌面/Web 平台上需要启用 <reference internal="True" refuri="class_projectsettings#class-projectsettings-property-input-devices-pointing-emulate-touch-from-mouse"><inline classes="std std-ref">ProjectSettings.input_devices/pointing/emulate_touch_from_mouse</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-scrollcontainer-signal-scroll-started"></target>
            <paragraph classes="classref-signal" ids="class-scrollcontainer-signal-scroll-started" names="class_scrollcontainer_signal_scroll_started"><strong>scroll_started</strong>() <reference internal="True" refid="class-scrollcontainer-signal-scroll-started"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当<emphasis>通过触摸事件</emphasis>拖动可滚动区域而导致滚动开始时发出。当通过拖动滚动条滚动、使用鼠标滚轮滚动、或使用键盘/游戏手柄事件滚动时，<emphasis>不</emphasis>会发出该信号。</paragraph>
            <paragraph><strong>注意：</strong>该信号仅会在 Android、iOS、桌面、Web 平台上发出，在桌面/Web 平台上需要启用 <reference internal="True" refuri="class_projectsettings#class-projectsettings-property-input-devices-pointing-emulate-touch-from-mouse"><inline classes="std std-ref">ProjectSettings.input_devices/pointing/emulate_touch_from_mouse</inline></reference>。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id7" names="枚举">
            <title>枚举</title>
            <target refid="enum-scrollcontainer-scrollmode"></target>
            <paragraph classes="classref-enumeration" ids="enum-scrollcontainer-scrollmode" names="enum_scrollcontainer_scrollmode">enum <strong>ScrollMode</strong>: <reference internal="True" refid="enum-scrollcontainer-scrollmode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-scrollcontainer-constant-scroll-mode-disabled"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-scrollcontainer-constant-scroll-mode-disabled" names="class_scrollcontainer_constant_scroll_mode_disabled"><reference internal="True" refid="enum-scrollcontainer-scrollmode"><inline classes="std std-ref">ScrollMode</inline></reference> <strong>SCROLL_MODE_DISABLED</strong> = <literal>0</literal></paragraph>
            <paragraph>禁用滚动，滚动条不可见。</paragraph>
            <target refid="class-scrollcontainer-constant-scroll-mode-auto"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-scrollcontainer-constant-scroll-mode-auto" names="class_scrollcontainer_constant_scroll_mode_auto"><reference internal="True" refid="enum-scrollcontainer-scrollmode"><inline classes="std std-ref">ScrollMode</inline></reference> <strong>SCROLL_MODE_AUTO</strong> = <literal>1</literal></paragraph>
            <paragraph>启用滚动，滚动条仅在需要时可见，即容器的内容比容器大时。</paragraph>
            <target refid="class-scrollcontainer-constant-scroll-mode-show-always"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-scrollcontainer-constant-scroll-mode-show-always" names="class_scrollcontainer_constant_scroll_mode_show_always"><reference internal="True" refid="enum-scrollcontainer-scrollmode"><inline classes="std std-ref">ScrollMode</inline></reference> <strong>SCROLL_MODE_SHOW_ALWAYS</strong> = <literal>2</literal></paragraph>
            <paragraph>启用滚动，滚动条始终可见。</paragraph>
            <target refid="class-scrollcontainer-constant-scroll-mode-show-never"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-scrollcontainer-constant-scroll-mode-show-never" names="class_scrollcontainer_constant_scroll_mode_show_never"><reference internal="True" refid="enum-scrollcontainer-scrollmode"><inline classes="std std-ref">ScrollMode</inline></reference> <strong>SCROLL_MODE_SHOW_NEVER</strong> = <literal>3</literal></paragraph>
            <paragraph>启用滚动，滚动条隐藏。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id8" names="属性说明">
            <title>属性说明</title>
            <target refid="class-scrollcontainer-property-follow-focus"></target>
            <paragraph classes="classref-property" ids="class-scrollcontainer-property-follow-focus" names="class_scrollcontainer_property_follow_focus"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>follow_focus</strong> = <literal>false</literal> <reference internal="True" refid="class-scrollcontainer-property-follow-focus"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_follow_focus</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_following_focus</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则 ScrollContainer 将自动滚动到获得焦点的子项（包括间接子项）以确保它们完全可见。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-scrollcontainer-property-horizontal-scroll-mode"></target>
            <paragraph classes="classref-property" ids="class-scrollcontainer-property-horizontal-scroll-mode" names="class_scrollcontainer_property_horizontal_scroll_mode"><reference internal="True" refid="enum-scrollcontainer-scrollmode"><inline classes="std std-ref">ScrollMode</inline></reference> <strong>horizontal_scroll_mode</strong> = <literal>1</literal> <reference internal="True" refid="class-scrollcontainer-property-horizontal-scroll-mode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_horizontal_scroll_mode</strong>(value: <reference internal="True" refid="enum-scrollcontainer-scrollmode"><inline classes="std std-ref">ScrollMode</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-scrollcontainer-scrollmode"><inline classes="std std-ref">ScrollMode</inline></reference> <strong>get_horizontal_scroll_mode</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>控制水平滚动条是否可用、应该何时可见。选项见 <reference internal="True" refid="enum-scrollcontainer-scrollmode"><inline classes="std std-ref">ScrollMode</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-scrollcontainer-property-scroll-deadzone"></target>
            <paragraph classes="classref-property" ids="class-scrollcontainer-property-scroll-deadzone" names="class_scrollcontainer_property_scroll_deadzone"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>scroll_deadzone</strong> = <literal>0</literal> <reference internal="True" refid="class-scrollcontainer-property-scroll-deadzone"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_deadzone</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_deadzone</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>触摸滚动的死区。较低的死区使滚动更加敏感。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-scrollcontainer-property-scroll-horizontal"></target>
            <paragraph classes="classref-property" ids="class-scrollcontainer-property-scroll-horizontal" names="class_scrollcontainer_property_scroll_horizontal"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>scroll_horizontal</strong> = <literal>0</literal> <reference internal="True" refid="class-scrollcontainer-property-scroll-horizontal"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_h_scroll</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_h_scroll</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>当前的水平滚动值。</paragraph>
            <paragraph><strong>注意：</strong>如果在 <reference internal="True" refuri="class_node#class-node-private-method-ready"><inline classes="std std-ref">Node._ready</inline></reference> 函数或更早的函数中设置该值，则需要用 <reference internal="True" refuri="class_object#class-object-method-set-deferred"><inline classes="std std-ref">Object.set_deferred</inline></reference> 包装，因为滚动条的 <reference internal="True" refuri="class_range#class-range-property-max-value"><inline classes="std std-ref">Range.max_value</inline></reference> 此时尚未初始化。</paragraph>
            <literal_block force="False" language="gdscript" linenos="False" xml:space="preserve">func _ready():
    set_deferred("scroll_horizontal", 600)</literal_block>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-scrollcontainer-property-scroll-horizontal-custom-step"></target>
            <paragraph classes="classref-property" ids="class-scrollcontainer-property-scroll-horizontal-custom-step" names="class_scrollcontainer_property_scroll_horizontal_custom_step"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>scroll_horizontal_custom_step</strong> = <literal>-1.0</literal> <reference internal="True" refid="class-scrollcontainer-property-scroll-horizontal-custom-step"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_horizontal_custom_step</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_horizontal_custom_step</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>覆盖点击内部滚动条的水平增减按钮或 <reference internal="True" refuri="class_scrollbar#class-scrollbar"><inline classes="std std-ref">ScrollBar</inline></reference> 处于聚焦状态下使用方向键时使用的 <reference internal="True" refuri="class_scrollbar#class-scrollbar-property-custom-step"><inline classes="std std-ref">ScrollBar.custom_step</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-scrollcontainer-property-scroll-vertical"></target>
            <paragraph classes="classref-property" ids="class-scrollcontainer-property-scroll-vertical" names="class_scrollcontainer_property_scroll_vertical"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>scroll_vertical</strong> = <literal>0</literal> <reference internal="True" refid="class-scrollcontainer-property-scroll-vertical"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_v_scroll</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_v_scroll</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>当前的垂直滚动值。</paragraph>
            <paragraph><strong>注意：</strong>与 <reference internal="True" refid="class-scrollcontainer-property-scroll-horizontal"><inline classes="std std-ref">scroll_horizontal</inline></reference> 一样，最初设置时需要进行延迟。</paragraph>
            <literal_block force="False" language="gdscript" linenos="False" xml:space="preserve">func _ready():
    set_deferred("scroll_vertical", 600)</literal_block>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-scrollcontainer-property-scroll-vertical-custom-step"></target>
            <paragraph classes="classref-property" ids="class-scrollcontainer-property-scroll-vertical-custom-step" names="class_scrollcontainer_property_scroll_vertical_custom_step"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>scroll_vertical_custom_step</strong> = <literal>-1.0</literal> <reference internal="True" refid="class-scrollcontainer-property-scroll-vertical-custom-step"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_vertical_custom_step</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_vertical_custom_step</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>覆盖点击内部滚动条的垂直增减按钮或 <reference internal="True" refuri="class_scrollbar#class-scrollbar"><inline classes="std std-ref">ScrollBar</inline></reference> 处于聚焦状态下使用方向键时使用的 <reference internal="True" refuri="class_scrollbar#class-scrollbar-property-custom-step"><inline classes="std std-ref">ScrollBar.custom_step</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-scrollcontainer-property-vertical-scroll-mode"></target>
            <paragraph classes="classref-property" ids="class-scrollcontainer-property-vertical-scroll-mode" names="class_scrollcontainer_property_vertical_scroll_mode"><reference internal="True" refid="enum-scrollcontainer-scrollmode"><inline classes="std std-ref">ScrollMode</inline></reference> <strong>vertical_scroll_mode</strong> = <literal>1</literal> <reference internal="True" refid="class-scrollcontainer-property-vertical-scroll-mode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_vertical_scroll_mode</strong>(value: <reference internal="True" refid="enum-scrollcontainer-scrollmode"><inline classes="std std-ref">ScrollMode</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-scrollcontainer-scrollmode"><inline classes="std std-ref">ScrollMode</inline></reference> <strong>get_vertical_scroll_mode</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>控制垂直滚动条是否可用、应该何时可见。选项见 <reference internal="True" refid="enum-scrollcontainer-scrollmode"><inline classes="std std-ref">ScrollMode</inline></reference>。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id9" names="方法说明">
            <title>方法说明</title>
            <target refid="class-scrollcontainer-method-ensure-control-visible"></target>
            <paragraph classes="classref-method" ids="class-scrollcontainer-method-ensure-control-visible" names="class_scrollcontainer_method_ensure_control_visible"><abbreviation explanation="无返回值。">void</abbreviation> <strong>ensure_control_visible</strong>(control: <reference internal="True" refuri="class_control#class-control"><inline classes="std std-ref">Control</inline></reference>) <reference internal="True" refid="class-scrollcontainer-method-ensure-control-visible"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>确保给定的 <literal>control</literal> 控件可见（必须是 ScrollContainer 的直接或间接子节点）。会被 <reference internal="True" refid="class-scrollcontainer-property-follow-focus"><inline classes="std std-ref">follow_focus</inline></reference> 使用。</paragraph>
            <paragraph><strong>注意：</strong>这不适用于在同一帧内刚刚添加的节点。如果想滚动到一个新添加的子节点，就必须使用 <reference internal="True" refuri="class_scenetree#class-scenetree-signal-process-frame"><inline classes="std std-ref">SceneTree.process_frame</inline></reference> 等待至下一帧：</paragraph>
            <literal_block force="False" language="gdscript" linenos="False" xml:space="preserve">add_child(child_node)
await get_tree().process_frame
ensure_control_visible(child_node)</literal_block>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-scrollcontainer-method-get-h-scroll-bar"></target>
            <paragraph classes="classref-method" ids="class-scrollcontainer-method-get-h-scroll-bar" names="class_scrollcontainer_method_get_h_scroll_bar"><reference internal="True" refuri="class_hscrollbar#class-hscrollbar"><inline classes="std std-ref">HScrollBar</inline></reference> <strong>get_h_scroll_bar</strong>() <reference internal="True" refid="class-scrollcontainer-method-get-h-scroll-bar"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回该 <strong>ScrollContainer</strong> 的水平滚动条 <reference internal="True" refuri="class_hscrollbar#class-hscrollbar"><inline classes="std std-ref">HScrollBar</inline></reference>。</paragraph>
            <paragraph><strong>警告：</strong>这是一个必要的内部节点，移除和释放它可能会导致崩溃。如果你想禁用或隐藏滚动条，可以使用 <reference internal="True" refid="class-scrollcontainer-property-horizontal-scroll-mode"><inline classes="std std-ref">horizontal_scroll_mode</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-scrollcontainer-method-get-v-scroll-bar"></target>
            <paragraph classes="classref-method" ids="class-scrollcontainer-method-get-v-scroll-bar" names="class_scrollcontainer_method_get_v_scroll_bar"><reference internal="True" refuri="class_vscrollbar#class-vscrollbar"><inline classes="std std-ref">VScrollBar</inline></reference> <strong>get_v_scroll_bar</strong>() <reference internal="True" refid="class-scrollcontainer-method-get-v-scroll-bar"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回该 <strong>ScrollContainer</strong> 的垂直滚动条 <reference internal="True" refuri="class_vscrollbar#class-vscrollbar"><inline classes="std std-ref">VScrollBar</inline></reference>。</paragraph>
            <paragraph><strong>警告：</strong>这是一个必要的内部节点，移除和释放它可能会导致崩溃。如果你想禁用或隐藏滚动条，可以使用 <reference internal="True" refid="class-scrollcontainer-property-vertical-scroll-mode"><inline classes="std std-ref">vertical_scroll_mode</inline></reference>。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id10" names="主题属性说明">
            <title>主题属性说明</title>
            <target refid="class-scrollcontainer-theme-style-panel"></target>
            <paragraph classes="classref-themeproperty" ids="class-scrollcontainer-theme-style-panel" names="class_scrollcontainer_theme_style_panel"><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference> <strong>panel</strong> <reference internal="True" refid="class-scrollcontainer-theme-style-panel"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><strong>ScrollContainer</strong> 的背景 <reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference>。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

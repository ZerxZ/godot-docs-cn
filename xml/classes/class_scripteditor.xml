<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_scripteditor.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/ScriptEditor.xml.</comment>
    <target refid="class-scripteditor"></target>
    <section ids="scripteditor class-scripteditor" names="scripteditor class_scripteditor">
        <title>ScriptEditor</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_panelcontainer#class-panelcontainer"><inline classes="std std-ref">PanelContainer</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_container#class-container"><inline classes="std std-ref">Container</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_control#class-control"><inline classes="std std-ref">Control</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_canvasitem#class-canvasitem"><inline classes="std std-ref">CanvasItem</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>Godot 编辑器的脚本编辑器。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>Godot 编辑器的脚本编辑器。</paragraph>
            <paragraph><strong>注意：</strong>这个类不应该被直接实例化。请使用 <reference internal="True" refuri="class_editorinterface#class-editorinterface-method-get-script-editor"><inline classes="std std-ref">EditorInterface.get_script_editor</inline></reference> 来访问这个单例。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="51"></colspec>
                    <colspec colwidth="188"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_scripteditorbase#class-scripteditorbase"><inline classes="std std-ref">ScriptEditorBase</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-scripteditor-method-get-current-editor"><inline classes="std std-ref">get_current_editor</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_script#class-script"><inline classes="std std-ref">Script</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-scripteditor-method-get-current-script"><inline classes="std std-ref">get_current_script</inline></reference> <strong>(</strong> <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_scripteditorbase#class-scripteditorbase"><inline classes="std std-ref">ScriptEditorBase[]</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-scripteditor-method-get-open-script-editors"><inline classes="std std-ref">get_open_script_editors</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_script#class-script"><inline classes="std std-ref">Script[]</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-scripteditor-method-get-open-scripts"><inline classes="std std-ref">get_open_scripts</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-scripteditor-method-goto-line"><inline classes="std std-ref">goto_line</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> line_number <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-scripteditor-method-open-script-create-dialog"><inline classes="std std-ref">open_script_create_dialog</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> base_name, <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> base_path <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-scripteditor-method-register-syntax-highlighter"><inline classes="std std-ref">register_syntax_highlighter</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_editorsyntaxhighlighter#class-editorsyntaxhighlighter"><inline classes="std std-ref">EditorSyntaxHighlighter</inline></reference> syntax_highlighter <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-scripteditor-method-unregister-syntax-highlighter"><inline classes="std std-ref">unregister_syntax_highlighter</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_editorsyntaxhighlighter#class-editorsyntaxhighlighter"><inline classes="std std-ref">EditorSyntaxHighlighter</inline></reference> syntax_highlighter <strong>)</strong></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="信号">
            <title>信号</title>
            <target refid="class-scripteditor-signal-editor-script-changed"></target>
            <paragraph classes="classref-signal" ids="class-scripteditor-signal-editor-script-changed" names="class_scripteditor_signal_editor_script_changed"><strong>editor_script_changed</strong> <strong>(</strong> <reference internal="True" refuri="class_script#class-script"><inline classes="std std-ref">Script</inline></reference> script <strong>)</strong></paragraph>
            <paragraph>当用户更改活动脚本时发出。参数是新激活的 <reference internal="True" refuri="class_script#class-script"><inline classes="std std-ref">Script</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-scripteditor-signal-script-close"></target>
            <paragraph classes="classref-signal" ids="class-scripteditor-signal-script-close" names="class_scripteditor_signal_script_close"><strong>script_close</strong> <strong>(</strong> <reference internal="True" refuri="class_script#class-script"><inline classes="std std-ref">Script</inline></reference> script <strong>)</strong></paragraph>
            <paragraph>当编辑器即将关闭活动脚本时发出。参数是将要关闭的 <reference internal="True" refuri="class_script#class-script"><inline classes="std std-ref">Script</inline></reference>。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="方法说明">
            <title>方法说明</title>
            <target refid="class-scripteditor-method-get-current-editor"></target>
            <paragraph classes="classref-method" ids="class-scripteditor-method-get-current-editor" names="class_scripteditor_method_get_current_editor"><reference internal="True" refuri="class_scripteditorbase#class-scripteditorbase"><inline classes="std std-ref">ScriptEditorBase</inline></reference> <strong>get_current_editor</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回用户当前正在编辑的 <reference internal="True" refuri="class_scripteditorbase#class-scripteditorbase"><inline classes="std std-ref">ScriptEditorBase</inline></reference> 对象。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-scripteditor-method-get-current-script"></target>
            <paragraph classes="classref-method" ids="class-scripteditor-method-get-current-script" names="class_scripteditor_method_get_current_script"><reference internal="True" refuri="class_script#class-script"><inline classes="std std-ref">Script</inline></reference> <strong>get_current_script</strong> <strong>(</strong> <strong>)</strong></paragraph>
            <paragraph>返回当前在编辑器中处于活动状态的 <reference internal="True" refuri="class_script#class-script"><inline classes="std std-ref">Script</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-scripteditor-method-get-open-script-editors"></target>
            <paragraph classes="classref-method" ids="class-scripteditor-method-get-open-script-editors" names="class_scripteditor_method_get_open_script_editors"><reference internal="True" refuri="class_scripteditorbase#class-scripteditorbase"><inline classes="std std-ref">ScriptEditorBase[]</inline></reference> <strong>get_open_script_editors</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回一个数组，其中包含当前在编辑器中打开的所有 <reference internal="True" refuri="class_scripteditorbase#class-scripteditorbase"><inline classes="std std-ref">ScriptEditorBase</inline></reference> 对象。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-scripteditor-method-get-open-scripts"></target>
            <paragraph classes="classref-method" ids="class-scripteditor-method-get-open-scripts" names="class_scripteditor_method_get_open_scripts"><reference internal="True" refuri="class_script#class-script"><inline classes="std std-ref">Script[]</inline></reference> <strong>get_open_scripts</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回一个包含当前在编辑器中打开的所有 <reference internal="True" refuri="class_script#class-script"><inline classes="std std-ref">Script</inline></reference> 对象的数组。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-scripteditor-method-goto-line"></target>
            <paragraph classes="classref-method" ids="class-scripteditor-method-goto-line" names="class_scripteditor_method_goto_line">void <strong>goto_line</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> line_number <strong>)</strong></paragraph>
            <paragraph>转到当前脚本中的指定行。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-scripteditor-method-open-script-create-dialog"></target>
            <paragraph classes="classref-method" ids="class-scripteditor-method-open-script-create-dialog" names="class_scripteditor_method_open_script_create_dialog">void <strong>open_script_create_dialog</strong> <strong>(</strong> <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> base_name, <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> base_path <strong>)</strong></paragraph>
            <paragraph>打开创建脚本对话框。脚本将扩展 <literal>base_name</literal>。文件扩展名可以从 <literal>base_path</literal> 中省略，会根据所选择的脚本语言添加。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-scripteditor-method-register-syntax-highlighter"></target>
            <paragraph classes="classref-method" ids="class-scripteditor-method-register-syntax-highlighter" names="class_scripteditor_method_register_syntax_highlighter">void <strong>register_syntax_highlighter</strong> <strong>(</strong> <reference internal="True" refuri="class_editorsyntaxhighlighter#class-editorsyntaxhighlighter"><inline classes="std std-ref">EditorSyntaxHighlighter</inline></reference> syntax_highlighter <strong>)</strong></paragraph>
            <paragraph>向编辑器注册该 <reference internal="True" refuri="class_editorsyntaxhighlighter#class-editorsyntaxhighlighter"><inline classes="std std-ref">EditorSyntaxHighlighter</inline></reference>，打开的所有脚本都可以使用这个 <reference internal="True" refuri="class_editorsyntaxhighlighter#class-editorsyntaxhighlighter"><inline classes="std std-ref">EditorSyntaxHighlighter</inline></reference>。</paragraph>
            <paragraph><strong>注意：</strong>不适用于已经打开的脚本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-scripteditor-method-unregister-syntax-highlighter"></target>
            <paragraph classes="classref-method" ids="class-scripteditor-method-unregister-syntax-highlighter" names="class_scripteditor_method_unregister_syntax_highlighter">void <strong>unregister_syntax_highlighter</strong> <strong>(</strong> <reference internal="True" refuri="class_editorsyntaxhighlighter#class-editorsyntaxhighlighter"><inline classes="std std-ref">EditorSyntaxHighlighter</inline></reference> syntax_highlighter <strong>)</strong></paragraph>
            <paragraph>从编辑器注销该 <reference internal="True" refuri="class_editorsyntaxhighlighter#class-editorsyntaxhighlighter"><inline classes="std std-ref">EditorSyntaxHighlighter</inline></reference>。</paragraph>
            <paragraph><strong>注意：</strong>已经打开的脚本仍然适用该 <reference internal="True" refuri="class_editorsyntaxhighlighter#class-editorsyntaxhighlighter"><inline classes="std std-ref">EditorSyntaxHighlighter</inline></reference>。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，所以可以直接使用类名调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

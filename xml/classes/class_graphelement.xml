<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_graphelement.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/GraphElement.xml.</comment>
    <target refid="class-graphelement"></target>
    <section ids="graphelement class-graphelement" names="graphelement class_graphelement">
        <title>GraphElement</title>
        <paragraph><strong>实验性：</strong> This class may be changed or removed in future versions.</paragraph>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_container#class-container"><inline classes="std std-ref">Container</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_control#class-control"><inline classes="std std-ref">Control</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_canvasitem#class-canvasitem"><inline classes="std std-ref">CanvasItem</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph><strong>派生：</strong> <reference internal="True" refuri="class_graphframe#class-graphframe"><inline classes="std std-ref">GraphFrame</inline></reference>, <reference internal="True" refuri="class_graphnode#class-graphnode"><inline classes="std std-ref">GraphNode</inline></reference></paragraph>
        <paragraph>表示可以放置在 <reference internal="True" refuri="class_graphedit#class-graphedit"><inline classes="std std-ref">GraphEdit</inline></reference> 控件内的基本元素的容器。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph><strong>GraphElement</strong> 允许为 <reference internal="True" refuri="class_graphedit#class-graphedit"><inline classes="std std-ref">GraphEdit</inline></reference> 图表创建自定义元素。默认情况下，可以此类元素可以被选择、调整大小和重新定位，但它们无法被连接。对于允许连接的图形元素，请参阅 <reference internal="True" refuri="class_graphnode#class-graphnode"><inline classes="std std-ref">GraphNode</inline></reference>。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="31"></colspec>
                    <colspec colwidth="69"></colspec>
                    <colspec colwidth="19"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-graphelement-property-draggable"><inline classes="std std-ref">draggable</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-graphelement-property-position-offset"><inline classes="std std-ref">position_offset</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Vector2(0, 0)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-graphelement-property-resizable"><inline classes="std std-ref">resizable</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-graphelement-property-selectable"><inline classes="std std-ref">selectable</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-graphelement-property-selected"><inline classes="std std-ref">selected</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="主题属性">
            <title>主题属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="35"></colspec>
                    <colspec colwidth="55"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-graphelement-theme-icon-resizer"><inline classes="std std-ref">resizer</inline></reference></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="信号">
            <title>信号</title>
            <target refid="class-graphelement-signal-delete-request"></target>
            <paragraph classes="classref-signal" ids="class-graphelement-signal-delete-request" names="class_graphelement_signal_delete_request"><strong>delete_request</strong>() <reference internal="True" refid="class-graphelement-signal-delete-request"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>请求删除 GraphElement 时发出。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-graphelement-signal-dragged"></target>
            <paragraph classes="classref-signal" ids="class-graphelement-signal-dragged" names="class_graphelement_signal_dragged"><strong>dragged</strong>(from: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>, to: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <reference internal="True" refid="class-graphelement-signal-dragged"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当 GraphElement 被拖动时发出。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-graphelement-signal-node-deselected"></target>
            <paragraph classes="classref-signal" ids="class-graphelement-signal-node-deselected" names="class_graphelement_signal_node_deselected"><strong>node_deselected</strong>() <reference internal="True" refid="class-graphelement-signal-node-deselected"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当 GraphElement 被取消选择时发出。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-graphelement-signal-node-selected"></target>
            <paragraph classes="classref-signal" ids="class-graphelement-signal-node-selected" names="class_graphelement_signal_node_selected"><strong>node_selected</strong>() <reference internal="True" refid="class-graphelement-signal-node-selected"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当 GraphElement 被选中时发出。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-graphelement-signal-position-offset-changed"></target>
            <paragraph classes="classref-signal" ids="class-graphelement-signal-position-offset-changed" names="class_graphelement_signal_position_offset_changed"><strong>position_offset_changed</strong>() <reference internal="True" refid="class-graphelement-signal-position-offset-changed"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当 GraphElement 被移动时触发。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-graphelement-signal-raise-request"></target>
            <paragraph classes="classref-signal" ids="class-graphelement-signal-raise-request" names="class_graphelement_signal_raise_request"><strong>raise_request</strong>() <reference internal="True" refid="class-graphelement-signal-raise-request"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当 GraphElement 被要求显示在其他节点之上时触发。在 GraphElement 获得焦点（鼠标点击进入）时触发。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-graphelement-signal-resize-end"></target>
            <paragraph classes="classref-signal" ids="class-graphelement-signal-resize-end" names="class_graphelement_signal_resize_end"><strong>resize_end</strong>(new_size: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <reference internal="True" refid="class-graphelement-signal-resize-end"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>Emitted when releasing the mouse button after dragging the resizer handle (see <reference internal="True" refid="class-graphelement-property-resizable"><inline classes="std std-ref">resizable</inline></reference>).</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-graphelement-signal-resize-request"></target>
            <paragraph classes="classref-signal" ids="class-graphelement-signal-resize-request" names="class_graphelement_signal_resize_request"><strong>resize_request</strong>(new_size: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <reference internal="True" refid="class-graphelement-signal-resize-request"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当 GraphElement 被要求调整大小时发出。在拖动调整器手柄时发生（见 <reference internal="True" refid="class-graphelement-property-resizable"><inline classes="std std-ref">resizable</inline></reference>）。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="属性说明">
            <title>属性说明</title>
            <target refid="class-graphelement-property-draggable"></target>
            <paragraph classes="classref-property" ids="class-graphelement-property-draggable" names="class_graphelement_property_draggable"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>draggable</strong> = <literal>true</literal> <reference internal="True" refid="class-graphelement-property-draggable"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_draggable</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_draggable</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则用户能够拖动该 GraphElement。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-graphelement-property-position-offset"></target>
            <paragraph classes="classref-property" ids="class-graphelement-property-position-offset" names="class_graphelement_property_position_offset"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>position_offset</strong> = <literal>Vector2(0, 0)</literal> <reference internal="True" refid="class-graphelement-property-position-offset"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_position_offset</strong>(value: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>get_position_offset</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>GraphElement 的偏移量，相对于 <reference internal="True" refuri="class_graphedit#class-graphedit"><inline classes="std std-ref">GraphEdit</inline></reference> 的滚动偏移量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-graphelement-property-resizable"></target>
            <paragraph classes="classref-property" ids="class-graphelement-property-resizable" names="class_graphelement_property_resizable"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>resizable</strong> = <literal>false</literal> <reference internal="True" refid="class-graphelement-property-resizable"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_resizable</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_resizable</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>If <literal>true</literal>, the user can resize the GraphElement.</paragraph>
            <paragraph><strong>Note:</strong> Dragging the handle will only emit the <reference internal="True" refid="class-graphelement-signal-resize-request"><inline classes="std std-ref">resize_request</inline></reference> and <reference internal="True" refid="class-graphelement-signal-resize-end"><inline classes="std std-ref">resize_end</inline></reference> signals, the GraphElement needs to be resized manually.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-graphelement-property-selectable"></target>
            <paragraph classes="classref-property" ids="class-graphelement-property-selectable" names="class_graphelement_property_selectable"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>selectable</strong> = <literal>true</literal> <reference internal="True" refid="class-graphelement-property-selectable"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_selectable</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_selectable</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则用户能够选中该 GraphElement。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-graphelement-property-selected"></target>
            <paragraph classes="classref-property" ids="class-graphelement-property-selected" names="class_graphelement_property_selected"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>selected</strong> = <literal>false</literal> <reference internal="True" refid="class-graphelement-property-selected"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_selected</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_selected</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则选中该 GraphElement 。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="主题属性说明">
            <title>主题属性说明</title>
            <target refid="class-graphelement-theme-icon-resizer"></target>
            <paragraph classes="classref-themeproperty" ids="class-graphelement-theme-icon-resizer" names="class_graphelement_theme_icon_resizer"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>resizer</strong> <reference internal="True" refid="class-graphelement-theme-icon-resizer"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>用于调整大小的图标，在 <reference internal="True" refid="class-graphelement-property-resizable"><inline classes="std std-ref">resizable</inline></reference> 被启用时可见。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

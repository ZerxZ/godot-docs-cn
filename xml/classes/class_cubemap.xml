<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_cubemap.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/Cubemap.xml.</comment>
    <target refid="class-cubemap"></target>
    <section ids="cubemap class-cubemap" names="cubemap class_cubemap">
        <title>Cubemap</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_imagetexturelayered#class-imagetexturelayered"><inline classes="std std-ref">ImageTextureLayered</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_texturelayered#class-texturelayered"><inline classes="std std-ref">TextureLayered</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_texture#class-texture"><inline classes="std std-ref">Texture</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>代表立方体面的六个正方形纹理。通常用作天空盒。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>单个立方体贴图是由 6 个纹理分层组织的纹理组成的。它们通常用于在 3D 渲染中伪造反射（参见 <reference internal="True" refuri="class_reflectionprobe#class-reflectionprobe"><inline classes="std std-ref">ReflectionProbe</inline></reference>）。可以用来让对象看起来像是在反射它的周围环境。与其他反射方法相比，这通常能提供更好的性能。</paragraph>
            <paragraph>这种资源通常在自定义着色器中用作一个 uniform。很少有 Godot 的核心方法会使用 <strong>Cubemap</strong> 资源。</paragraph>
            <paragraph>要想自己创建这样的纹理文件，请使用 Godot 编辑器的导入预设重新导入你的图像文件。</paragraph>
            <paragraph><strong>注意：</strong>Godot 不支持在 <reference internal="True" refuri="class_panoramaskymaterial#class-panoramaskymaterial"><inline classes="std std-ref">PanoramaSkyMaterial</inline></reference> 中使用立方体贴图。可以使用<reference name="这个工具" refuri="https://danilw.github.io/GLSL-howto/cubemap_to_panorama_js/cubemap_to_panorama.html">这个工具</reference>将立方体贴图转换为等距柱状天空贴图。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="33"></colspec>
                    <colspec colwidth="88"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-cubemap-method-create-placeholder"><inline classes="std std-ref">create_placeholder</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="方法说明">
            <title>方法说明</title>
            <target refid="class-cubemap-method-create-placeholder"></target>
            <paragraph classes="classref-method" ids="class-cubemap-method-create-placeholder" names="class_cubemap_method_create_placeholder"><reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>create_placeholder</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>创建该资源的占位符版本（<reference internal="True" refuri="class_placeholdercubemap#class-placeholdercubemap"><inline classes="std std-ref">PlaceholderCubemap</inline></reference>）。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，所以可以直接使用类名调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

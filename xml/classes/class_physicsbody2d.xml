<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_physicsbody2d.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/PhysicsBody2D.xml.</comment>
    <target refid="class-physicsbody2d"></target>
    <section ids="physicsbody2d class-physicsbody2d" names="physicsbody2d class_physicsbody2d">
        <title>PhysicsBody2D</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_collisionobject2d#class-collisionobject2d"><inline classes="std std-ref">CollisionObject2D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node2d#class-node2d"><inline classes="std std-ref">Node2D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_canvasitem#class-canvasitem"><inline classes="std std-ref">CanvasItem</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph><strong>派生：</strong> <reference internal="True" refuri="class_characterbody2d#class-characterbody2d"><inline classes="std std-ref">CharacterBody2D</inline></reference>, <reference internal="True" refuri="class_rigidbody2d#class-rigidbody2d"><inline classes="std std-ref">RigidBody2D</inline></reference>, <reference internal="True" refuri="class_staticbody2d#class-staticbody2d"><inline classes="std std-ref">StaticBody2D</inline></reference></paragraph>
        <paragraph>受物理影响的 2D 游戏对象的抽象基类。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph><strong>PhysicsBody2D</strong> 与受物理影响的 2D 游戏对象的抽象基类。所有 2D 物理体都继承自这个类。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference internal="True" refuri="../tutorials/physics/physics_introduction"><inline classes="doc">物理介绍</inline></reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="25"></colspec>
                    <colspec colwidth="16"></colspec>
                    <colspec colwidth="97"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph>input_pickable</paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal> (overrides <reference internal="True" refuri="class_collisionobject2d#class-collisionobject2d-property-input-pickable"><inline classes="std std-ref">CollisionObject2D</inline></reference>)</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id4" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="72"></colspec>
                    <colspec colwidth="329"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsbody2d-method-add-collision-exception-with"><inline classes="std std-ref">add_collision_exception_with</inline></reference>(body: <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refid="class-physicsbody2d"><inline classes="std std-ref">PhysicsBody2D</inline></reference>]</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsbody2d-method-get-collision-exceptions"><inline classes="std std-ref">get_collision_exceptions</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsbody2d-method-get-gravity"><inline classes="std std-ref">get_gravity</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_kinematiccollision2d#class-kinematiccollision2d"><inline classes="std std-ref">KinematicCollision2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsbody2d-method-move-and-collide"><inline classes="std std-ref">move_and_collide</inline></reference>(motion: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>, test_only: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = false, safe_margin: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> = 0.08, recovery_as_collision: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = false)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsbody2d-method-remove-collision-exception-with"><inline classes="std std-ref">remove_collision_exception_with</inline></reference>(body: <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-physicsbody2d-method-test-move"><inline classes="std std-ref">test_move</inline></reference>(from: <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference>, motion: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>, collision: <reference internal="True" refuri="class_kinematiccollision2d#class-kinematiccollision2d"><inline classes="std std-ref">KinematicCollision2D</inline></reference> = null, safe_margin: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> = 0.08, recovery_as_collision: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = false)</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="方法说明">
            <title>方法说明</title>
            <target refid="class-physicsbody2d-method-add-collision-exception-with"></target>
            <paragraph classes="classref-method" ids="class-physicsbody2d-method-add-collision-exception-with" names="class_physicsbody2d_method_add_collision_exception_with"><abbreviation explanation="无返回值。">void</abbreviation> <strong>add_collision_exception_with</strong>(body: <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference>) <reference internal="True" refid="class-physicsbody2d-method-add-collision-exception-with"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将一个物体添加到这个物体不能碰撞的物体列表中。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsbody2d-method-get-collision-exceptions"></target>
            <paragraph classes="classref-method" ids="class-physicsbody2d-method-get-collision-exceptions" names="class_physicsbody2d_method_get_collision_exceptions"><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>[<reference internal="True" refid="class-physicsbody2d"><inline classes="std std-ref">PhysicsBody2D</inline></reference>] <strong>get_collision_exceptions</strong>() <reference internal="True" refid="class-physicsbody2d-method-get-collision-exceptions"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回该物体的碰撞例外节点数组。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsbody2d-method-get-gravity"></target>
            <paragraph classes="classref-method" ids="class-physicsbody2d-method-get-gravity" names="class_physicsbody2d_method_get_gravity"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>get_gravity</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-physicsbody2d-method-get-gravity"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回根据能够影响该物体的所有来源计算得到的重力向量，包括 <reference internal="True" refuri="class_area2d#class-area2d"><inline classes="std std-ref">Area2D</inline></reference> 节点的重力覆盖和全局世界重力。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsbody2d-method-move-and-collide"></target>
            <paragraph classes="classref-method" ids="class-physicsbody2d-method-move-and-collide" names="class_physicsbody2d_method_move_and_collide"><reference internal="True" refuri="class_kinematiccollision2d#class-kinematiccollision2d"><inline classes="std std-ref">KinematicCollision2D</inline></reference> <strong>move_and_collide</strong>(motion: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>, test_only: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = false, safe_margin: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> = 0.08, recovery_as_collision: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = false) <reference internal="True" refid="class-physicsbody2d-method-move-and-collide"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>沿着运动向量 <literal>motion</literal> 移动该物体。为了在 <reference internal="True" refuri="class_node#class-node-private-method-physics-process"><inline classes="std std-ref">Node._physics_process</inline></reference> 和 <reference internal="True" refuri="class_node#class-node-private-method-process"><inline classes="std std-ref">Node._process</inline></reference> 中不依赖帧速率，<literal>motion</literal> 应该使用 <literal>delta</literal> 计算。</paragraph>
            <paragraph>返回 <reference internal="True" refuri="class_kinematiccollision2d#class-kinematiccollision2d"><inline classes="std std-ref">KinematicCollision2D</inline></reference>，包含停止时的碰撞信息，或者沿运动向量接触到其他物体时的碰撞信息。</paragraph>
            <paragraph>如果 <literal>test_only</literal> 为 <literal>true</literal>，则该物体不会移动，但会给出可能的碰撞信息。</paragraph>
            <paragraph><literal>safe_margin</literal> 是用于碰撞恢复的额外边距（详见 <reference internal="True" refuri="class_characterbody2d#class-characterbody2d-property-safe-margin"><inline classes="std std-ref">CharacterBody2D.safe_margin</inline></reference> ）。</paragraph>
            <paragraph>如果 <literal>recovery_as_collision</literal> 为 <literal>true</literal>，则恢复阶段发生的穿透解除也会被报告为碰撞；例如，<reference internal="True" refuri="class_characterbody2d#class-characterbody2d"><inline classes="std std-ref">CharacterBody2D</inline></reference> 在吸附到地板时会用这个选项来改善对地板检测。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsbody2d-method-remove-collision-exception-with"></target>
            <paragraph classes="classref-method" ids="class-physicsbody2d-method-remove-collision-exception-with" names="class_physicsbody2d_method_remove_collision_exception_with"><abbreviation explanation="无返回值。">void</abbreviation> <strong>remove_collision_exception_with</strong>(body: <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference>) <reference internal="True" refid="class-physicsbody2d-method-remove-collision-exception-with"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将一个物体从该物体不能碰撞的物体列表中移除。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-physicsbody2d-method-test-move"></target>
            <paragraph classes="classref-method" ids="class-physicsbody2d-method-test-move" names="class_physicsbody2d_method_test_move"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>test_move</strong>(from: <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference>, motion: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>, collision: <reference internal="True" refuri="class_kinematiccollision2d#class-kinematiccollision2d"><inline classes="std std-ref">KinematicCollision2D</inline></reference> = null, safe_margin: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> = 0.08, recovery_as_collision: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> = false) <reference internal="True" refid="class-physicsbody2d-method-test-move"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>在不移动实体的情况下检查碰撞。为了在 <reference internal="True" refuri="class_node#class-node-private-method-physics-process"><inline classes="std std-ref">Node._physics_process</inline></reference> 或 <reference internal="True" refuri="class_node#class-node-private-method-process"><inline classes="std std-ref">Node._process</inline></reference> 中独立于帧速率，<literal>motion</literal> 应该使用 <literal>delta</literal> 来计算。</paragraph>
            <paragraph>实际上是将节点的位置、缩放和旋转设置为给定 <reference internal="True" refuri="class_transform2d#class-transform2d"><inline classes="std std-ref">Transform2D</inline></reference> 的位置、缩放和旋转，然后尝试沿向量 <literal>motion</literal> 移动实体。如果碰撞会阻止实体沿整个路径移动，则返回 <literal>true</literal>。</paragraph>
            <paragraph><literal>collision</literal> 是类型为 <reference internal="True" refuri="class_kinematiccollision2d#class-kinematiccollision2d"><inline classes="std std-ref">KinematicCollision2D</inline></reference> 的一个可选对象，它包含有关停止时碰撞或沿运动接触另一个实体时碰撞的附加信息。</paragraph>
            <paragraph><literal>safe_margin</literal> 是用于碰撞恢复的额外余量（详情见 <reference internal="True" refuri="class_characterbody2d#class-characterbody2d-property-safe-margin"><inline classes="std std-ref">CharacterBody2D.safe_margin</inline></reference>）。</paragraph>
            <paragraph>如果 <literal>recovery_as_collision</literal> 为 <literal>true</literal>，恢复阶段的任何穿透也将被报告为碰撞；这对于检查该实体是否会<emphasis>接触</emphasis>其他任意实体很有用。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

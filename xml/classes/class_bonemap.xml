<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_bonemap.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/BoneMap.xml.</comment>
    <target refid="class-bonemap"></target>
    <section ids="bonemap class-bonemap" names="bonemap class_bonemap">
        <title>BoneMap</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>描述骨骼名称的映射，用于将 <reference internal="True" refuri="class_skeleton3d#class-skeleton3d"><inline classes="std std-ref">Skeleton3D</inline></reference> 重定向至 <reference internal="True" refuri="class_skeletonprofile#class-skeletonprofile"><inline classes="std std-ref">SkeletonProfile</inline></reference> 中定义的通用名称。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>这个类中有一个字典，使用 <reference internal="True" refuri="class_skeletonprofile#class-skeletonprofile"><inline classes="std std-ref">SkeletonProfile</inline></reference> 中的骨骼名称作为键名。</paragraph>
            <paragraph>将实际的 <reference internal="True" refuri="class_skeleton3d#class-skeleton3d"><inline classes="std std-ref">Skeleton3D</inline></reference> 骨骼名称赋为键值后，就会将 <reference internal="True" refuri="class_skeleton3d#class-skeleton3d"><inline classes="std std-ref">Skeleton3D</inline></reference> 映射到 <reference internal="True" refuri="class_skeletonprofile#class-skeletonprofile"><inline classes="std std-ref">SkeletonProfile</inline></reference>。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference internal="True" refuri="../tutorials/assets_pipeline/retargeting_3d_skeletons"><inline classes="doc">重定向 3D 骨架</inline></reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="47"></colspec>
                    <colspec colwidth="48"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_skeletonprofile#class-skeletonprofile"><inline classes="std std-ref">SkeletonProfile</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-bonemap-property-profile"><inline classes="std std-ref">profile</inline></reference></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id4" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="37"></colspec>
                    <colspec colwidth="197"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-bonemap-method-find-profile-bone-name"><inline classes="std std-ref">find_profile_bone_name</inline></reference>(skeleton_bone_name: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-bonemap-method-get-skeleton-bone-name"><inline classes="std std-ref">get_skeleton_bone_name</inline></reference>(profile_bone_name: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-bonemap-method-set-skeleton-bone-name"><inline classes="std std-ref">set_skeleton_bone_name</inline></reference>(profile_bone_name: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>, skeleton_bone_name: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>)</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="信号">
            <title>信号</title>
            <target refid="class-bonemap-signal-bone-map-updated"></target>
            <paragraph classes="classref-signal" ids="class-bonemap-signal-bone-map-updated" names="class_bonemap_signal_bone_map_updated"><strong>bone_map_updated</strong>() <reference internal="True" refid="class-bonemap-signal-bone-map-updated"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><strong>BoneMap</strong> 中的键值发生改变时发出此信号。用于验证映射和更新 <strong>BoneMap</strong> 编辑器。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-bonemap-signal-profile-updated"></target>
            <paragraph classes="classref-signal" ids="class-bonemap-signal-profile-updated" names="class_bonemap_signal_profile_updated"><strong>profile_updated</strong>() <reference internal="True" refid="class-bonemap-signal-profile-updated"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>配置中的值发生改变或配置的引用发生改变时发出此信号。用于更新 <strong>BoneMap</strong> 中的键名、重绘 <strong>BoneMap</strong> 编辑器。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="属性说明">
            <title>属性说明</title>
            <target refid="class-bonemap-property-profile"></target>
            <paragraph classes="classref-property" ids="class-bonemap-property-profile" names="class_bonemap_property_profile"><reference internal="True" refuri="class_skeletonprofile#class-skeletonprofile"><inline classes="std std-ref">SkeletonProfile</inline></reference> <strong>profile</strong> <reference internal="True" refid="class-bonemap-property-profile"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_profile</strong>(value: <reference internal="True" refuri="class_skeletonprofile#class-skeletonprofile"><inline classes="std std-ref">SkeletonProfile</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_skeletonprofile#class-skeletonprofile"><inline classes="std std-ref">SkeletonProfile</inline></reference> <strong>get_profile</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>映射目标的 <reference internal="True" refuri="class_skeletonprofile#class-skeletonprofile"><inline classes="std std-ref">SkeletonProfile</inline></reference>。<strong>BoneMap</strong> 中的键名与此同步。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id7" names="方法说明">
            <title>方法说明</title>
            <target refid="class-bonemap-method-find-profile-bone-name"></target>
            <paragraph classes="classref-method" ids="class-bonemap-method-find-profile-bone-name" names="class_bonemap_method_find_profile_bone_name"><reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference> <strong>find_profile_bone_name</strong>(skeleton_bone_name: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-bonemap-method-find-profile-bone-name"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回具有 <literal>skeleton_bone_name</literal> 的轮廓骨骼名称。如果没有找到，将返回一个空的 <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>。</paragraph>
            <paragraph>在重定向过程中，返回的骨骼名称是目标骨架的骨骼名称。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-bonemap-method-get-skeleton-bone-name"></target>
            <paragraph classes="classref-method" ids="class-bonemap-method-get-skeleton-bone-name" names="class_bonemap_method_get_skeleton_bone_name"><reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference> <strong>get_skeleton_bone_name</strong>(profile_bone_name: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-bonemap-method-get-skeleton-bone-name"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回与配置中的某个骨骼名称 <literal>profile_bone_name</literal> 映射的骨架中的骨骼名称。</paragraph>
            <paragraph>在重定向过程中，设置的骨骼名称是源骨架中骨骼的名称。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-bonemap-method-set-skeleton-bone-name"></target>
            <paragraph classes="classref-method" ids="class-bonemap-method-set-skeleton-bone-name" names="class_bonemap_method_set_skeleton_bone_name"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_skeleton_bone_name</strong>(profile_bone_name: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>, skeleton_bone_name: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>) <reference internal="True" refid="class-bonemap-method-set-skeleton-bone-name"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将骨架中的某个骨骼名称映射到配置中的骨骼名称 <literal>profile_bone_name</literal>。</paragraph>
            <paragraph>在重定向过程中，设置的骨骼名称是源骨架中骨骼的名称。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效运算符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列位标志构成位掩码的整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_primitivemesh.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/PrimitiveMesh.xml.</comment>
    <target refid="class-primitivemesh"></target>
    <section ids="primitivemesh class-primitivemesh" names="primitivemesh class_primitivemesh">
        <title>PrimitiveMesh</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_mesh#class-mesh"><inline classes="std std-ref">Mesh</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph><strong>派生：</strong> <reference internal="True" refuri="class_boxmesh#class-boxmesh"><inline classes="std std-ref">BoxMesh</inline></reference>, <reference internal="True" refuri="class_capsulemesh#class-capsulemesh"><inline classes="std std-ref">CapsuleMesh</inline></reference>, <reference internal="True" refuri="class_cylindermesh#class-cylindermesh"><inline classes="std std-ref">CylinderMesh</inline></reference>, <reference internal="True" refuri="class_planemesh#class-planemesh"><inline classes="std std-ref">PlaneMesh</inline></reference>, <reference internal="True" refuri="class_pointmesh#class-pointmesh"><inline classes="std std-ref">PointMesh</inline></reference>, <reference internal="True" refuri="class_prismmesh#class-prismmesh"><inline classes="std std-ref">PrismMesh</inline></reference>, <reference internal="True" refuri="class_ribbontrailmesh#class-ribbontrailmesh"><inline classes="std std-ref">RibbonTrailMesh</inline></reference>, <reference internal="True" refuri="class_spheremesh#class-spheremesh"><inline classes="std std-ref">SphereMesh</inline></reference>, <reference internal="True" refuri="class_textmesh#class-textmesh"><inline classes="std std-ref">TextMesh</inline></reference>, <reference internal="True" refuri="class_torusmesh#class-torusmesh"><inline classes="std std-ref">TorusMesh</inline></reference>, <reference internal="True" refuri="class_tubetrailmesh#class-tubetrailmesh"><inline classes="std std-ref">TubeTrailMesh</inline></reference></paragraph>
        <paragraph>所有图元网格的基类。处理将 <reference internal="True" refuri="class_material#class-material"><inline classes="std std-ref">Material</inline></reference> 应用到图元网格的问题。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>所有基本网格的基类，能够处理将 <reference internal="True" refuri="class_material#class-material"><inline classes="std std-ref">Material</inline></reference> 应用到基本网格的操作。有 <reference internal="True" refuri="class_boxmesh#class-boxmesh"><inline classes="std std-ref">BoxMesh</inline></reference>、<reference internal="True" refuri="class_capsulemesh#class-capsulemesh"><inline classes="std std-ref">CapsuleMesh</inline></reference>、<reference internal="True" refuri="class_cylindermesh#class-cylindermesh"><inline classes="std std-ref">CylinderMesh</inline></reference>、<reference internal="True" refuri="class_planemesh#class-planemesh"><inline classes="std std-ref">PlaneMesh</inline></reference>、<reference internal="True" refuri="class_prismmesh#class-prismmesh"><inline classes="std std-ref">PrismMesh</inline></reference>、<reference internal="True" refuri="class_spheremesh#class-spheremesh"><inline classes="std std-ref">SphereMesh</inline></reference> 等基本网格。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="33"></colspec>
                    <colspec colwidth="62"></colspec>
                    <colspec colwidth="28"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-primitivemesh-property-add-uv2"><inline classes="std std-ref">add_uv2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_aabb#class-aabb"><inline classes="std std-ref">AABB</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-primitivemesh-property-custom-aabb"><inline classes="std std-ref">custom_aabb</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>AABB(0, 0, 0, 0, 0, 0)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-primitivemesh-property-flip-faces"><inline classes="std std-ref">flip_faces</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_material#class-material"><inline classes="std std-ref">Material</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-primitivemesh-property-material"><inline classes="std std-ref">material</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-primitivemesh-property-uv2-padding"><inline classes="std std-ref">uv2_padding</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>2.0</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="27"></colspec>
                    <colspec colwidth="112"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-primitivemesh-private-method-create-mesh-array"><inline classes="std std-ref">_create_mesh_array</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-primitivemesh-method-get-mesh-arrays"><inline classes="std std-ref">get_mesh_arrays</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="属性说明">
            <title>属性说明</title>
            <target refid="class-primitivemesh-property-add-uv2"></target>
            <paragraph classes="classref-property" ids="class-primitivemesh-property-add-uv2" names="class_primitivemesh_property_add_uv2"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>add_uv2</strong> = <literal>false</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_add_uv2</strong> <strong>(</strong> <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_add_uv2</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>打开后将生成 UV2 UV 坐标，使用 <reference internal="True" refid="class-primitivemesh-property-uv2-padding"><inline classes="std std-ref">uv2_padding</inline></reference> 设置的间距。光照映射需要 UV2。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-primitivemesh-property-custom-aabb"></target>
            <paragraph classes="classref-property" ids="class-primitivemesh-property-custom-aabb" names="class_primitivemesh_property_custom_aabb"><reference internal="True" refuri="class_aabb#class-aabb"><inline classes="std std-ref">AABB</inline></reference> <strong>custom_aabb</strong> = <literal>AABB(0, 0, 0, 0, 0, 0)</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_custom_aabb</strong> <strong>(</strong> <reference internal="True" refuri="class_aabb#class-aabb"><inline classes="std std-ref">AABB</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_aabb#class-aabb"><inline classes="std std-ref">AABB</inline></reference> <strong>get_custom_aabb</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>用用户定义的用于使用视锥剔除的一种替代 <reference internal="True" refuri="class_aabb#class-aabb"><inline classes="std std-ref">AABB</inline></reference>。在使用着色器偏移顶点时，避免非预期的剔除特别有用。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-primitivemesh-property-flip-faces"></target>
            <paragraph classes="classref-property" ids="class-primitivemesh-property-flip-faces" names="class_primitivemesh_property_flip_faces"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>flip_faces</strong> = <literal>false</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_flip_faces</strong> <strong>(</strong> <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_flip_faces</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>打开后会颠倒各个三角形中顶点的顺序，导致绘制网格的背面。</paragraph>
            <paragraph>和在 <reference internal="True" refuri="class_basematerial3d#class-basematerial3d-property-cull-mode"><inline classes="std std-ref">BaseMaterial3D.cull_mode</inline></reference> 中使用 <reference internal="True" refuri="class_basematerial3d#class-basematerial3d-constant-cull-front"><inline classes="std std-ref">BaseMaterial3D.CULL_FRONT</inline></reference> 的效果一致。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-primitivemesh-property-material"></target>
            <paragraph classes="classref-property" ids="class-primitivemesh-property-material" names="class_primitivemesh_property_material"><reference internal="True" refuri="class_material#class-material"><inline classes="std std-ref">Material</inline></reference> <strong>material</strong></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_material</strong> <strong>(</strong> <reference internal="True" refuri="class_material#class-material"><inline classes="std std-ref">Material</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_material#class-material"><inline classes="std std-ref">Material</inline></reference> <strong>get_material</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>该图元网格的当前 <reference internal="True" refuri="class_material#class-material"><inline classes="std std-ref">Material</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-primitivemesh-property-uv2-padding"></target>
            <paragraph classes="classref-property" ids="class-primitivemesh-property-uv2-padding" names="class_primitivemesh_property_uv2_padding"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>uv2_padding</strong> = <literal>2.0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_uv2_padding</strong> <strong>(</strong> <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_uv2_padding</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果设置了 <reference internal="True" refid="class-primitivemesh-property-add-uv2"><inline classes="std std-ref">add_uv2</inline></reference>，则指定沿网格接缝被应用的以像素为单位的填充。较低的填充值允许更好地利用光照贴图纹理（导致更高的纹素密度），但可能会沿边缘引入可见的光照贴图渗色。</paragraph>
            <paragraph>如果在生成网格时无法确定光照贴图纹理的大小，则计算 UV2 时假定纹理大小为 1024x1024。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="方法说明">
            <title>方法说明</title>
            <target refid="class-primitivemesh-private-method-create-mesh-array"></target>
            <paragraph classes="classref-method" ids="class-primitivemesh-private-method-create-mesh-array" names="class_primitivemesh_private_method__create_mesh_array"><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference> <strong>_create_mesh_array</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>重写该方法以自定义应如何生成该基本网格。应该返回一个 <reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference>，其中每个元素都是该网格所需的另一个值数组（请参阅 <reference internal="True" refuri="class_mesh#enum-mesh-arraytype"><inline classes="std std-ref">ArrayType</inline></reference> 常量）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-primitivemesh-method-get-mesh-arrays"></target>
            <paragraph classes="classref-method" ids="class-primitivemesh-method-get-mesh-arrays" names="class_primitivemesh_method_get_mesh_arrays"><reference internal="True" refuri="class_array#class-array"><inline classes="std std-ref">Array</inline></reference> <strong>get_mesh_arrays</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回用于构成 <reference internal="True" refuri="class_mesh#class-mesh"><inline classes="std std-ref">Mesh</inline></reference> 表面的网格数组。结果可以传递给 <reference internal="True" refuri="class_arraymesh#class-arraymesh-method-add-surface-from-arrays"><inline classes="std std-ref">ArrayMesh.add_surface_from_arrays</inline></reference> 创建新的表面。例如：</paragraph>
            <container classes="sphinx-tabs" type="tab-element">
                <div aria-label="Tabbed content" role="tablist">
                    <button aria-controls="panel-0-R0RTY3JpcHQ=" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-0-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tab" tabindex="0">GDScript</button>
                    <button aria-controls="panel-0-QyM=" aria-selected="false" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-0-QyM=" name="QyM=" role="tab" tabindex="-1">C#</button>
                </div>
                <div aria-labelledby="tab-0-R0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-0-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve">var c = CylinderMesh.new()
var arr_mesh = ArrayMesh.new()
arr_mesh.add_surface_from_arrays(Mesh.PRIMITIVE_TRIANGLES, c.get_mesh_arrays())</literal_block>
                </div>
                <div aria-labelledby="tab-0-QyM=" classes="sphinx-tabs-panel code-tab group-tab" hidden="true" ids="panel-0-QyM=" name="QyM=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="csharp" linenos="False" xml:space="preserve">var c = new CylinderMesh();
var arrMesh = new ArrayMesh();
arrMesh.AddSurfaceFromArrays(Mesh.PrimitiveType.Triangles, c.GetMeshArrays());</literal_block>
                </div>
            </container>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，所以可以直接使用类名调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

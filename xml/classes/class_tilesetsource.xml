<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_tilesetsource.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/TileSetSource.xml.</comment>
    <target refid="class-tilesetsource"></target>
    <section ids="tilesetsource class-tilesetsource" names="tilesetsource class_tilesetsource">
        <title>TileSetSource</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph><strong>派生：</strong> <reference internal="True" refuri="class_tilesetatlassource#class-tilesetatlassource"><inline classes="std std-ref">TileSetAtlasSource</inline></reference>, <reference internal="True" refuri="class_tilesetscenescollectionsource#class-tilesetscenescollectionsource"><inline classes="std std-ref">TileSetScenesCollectionSource</inline></reference></paragraph>
        <paragraph>向 <reference internal="True" refuri="class_tileset#class-tileset"><inline classes="std std-ref">TileSet</inline></reference> 资源暴露一组图块。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>向 <reference internal="True" refuri="class_tileset#class-tileset"><inline classes="std std-ref">TileSet</inline></reference> 资源暴露一组图块。</paragraph>
            <paragraph>源中的图块具有索引，索引为两个 ID，分别是坐标 ID（类型为 Vector2i）和备选 ID（类型为 int），名称反映了在 <reference internal="True" refuri="class_tilesetatlassource#class-tilesetatlassource"><inline classes="std std-ref">TileSetAtlasSource</inline></reference> 中的使用方法。</paragraph>
            <paragraph>根据 TileSet 源类型的不同，对这些 ID 的值可能有不同的限制，这就是 <strong>TileSetSource</strong> 基类仅暴露了 getter 的原因。</paragraph>
            <paragraph>要遍历 TileSetSource 中暴露的所有图块，你可以首先使用 <reference internal="True" refid="class-tilesetsource-method-get-tiles-count"><inline classes="std std-ref">get_tiles_count</inline></reference> 和 <reference internal="True" refid="class-tilesetsource-method-get-tile-id"><inline classes="std std-ref">get_tile_id</inline></reference> 遍历坐标 ID，然后使用 <reference internal="True" refid="class-tilesetsource-method-get-alternative-tiles-count"><inline classes="std std-ref">get_alternative_tiles_count</inline></reference> 和 <reference internal="True" refid="class-tilesetsource-method-get-alternative-tile-id"><inline classes="std std-ref">get_alternative_tile_id</inline></reference> 遍历备选 ID。</paragraph>
            <paragraph><strong>警告：</strong>同一个 <strong>TileSetSource</strong> 不能同时属于两个 TileSet。对第二个 <reference internal="True" refuri="class_tileset#class-tileset"><inline classes="std std-ref">TileSet</inline></reference> 调用 <reference internal="True" refuri="class_tileset#class-tileset-method-add-source"><inline classes="std std-ref">TileSet.add_source</inline></reference> 会在第一个 TileSet 中移除该源。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="33"></colspec>
                    <colspec colwidth="182"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tilesetsource-method-get-alternative-tile-id"><inline classes="std std-ref">get_alternative_tile_id</inline></reference>(atlas_coords: <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference>, index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tilesetsource-method-get-alternative-tiles-count"><inline classes="std std-ref">get_alternative_tiles_count</inline></reference>(atlas_coords: <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tilesetsource-method-get-tile-id"><inline classes="std std-ref">get_tile_id</inline></reference>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tilesetsource-method-get-tiles-count"><inline classes="std std-ref">get_tiles_count</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tilesetsource-method-has-alternative-tile"><inline classes="std std-ref">has_alternative_tile</inline></reference>(atlas_coords: <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference>, alternative_tile: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-tilesetsource-method-has-tile"><inline classes="std std-ref">has_tile</inline></reference>(atlas_coords: <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="方法说明">
            <title>方法说明</title>
            <target refid="class-tilesetsource-method-get-alternative-tile-id"></target>
            <paragraph classes="classref-method" ids="class-tilesetsource-method-get-alternative-tile-id" names="class_tilesetsource_method_get_alternative_tile_id"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_alternative_tile_id</strong>(atlas_coords: <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference>, index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tilesetsource-method-get-alternative-tile-id"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回坐标 ID 为 <literal>atlas_coords</literal> 的图块的索引为 <literal>index</literal> 的备选 ID。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tilesetsource-method-get-alternative-tiles-count"></target>
            <paragraph classes="classref-method" ids="class-tilesetsource-method-get-alternative-tiles-count" names="class_tilesetsource_method_get_alternative_tiles_count"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_alternative_tiles_count</strong>(atlas_coords: <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tilesetsource-method-get-alternative-tiles-count"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回坐标 ID 为 <literal>atlas_coords</literal> 的图块的备选图块数量。</paragraph>
            <paragraph><reference internal="True" refuri="class_tilesetatlassource#class-tilesetatlassource"><inline classes="std std-ref">TileSetAtlasSource</inline></reference> 返回的数量至少为 1，因为备选列表中始终存在 ID 为 0 的基础图块。</paragraph>
            <paragraph>如果给定的坐标处没有图块，则返回 -1。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tilesetsource-method-get-tile-id"></target>
            <paragraph classes="classref-method" ids="class-tilesetsource-method-get-tile-id" names="class_tilesetsource_method_get_tile_id"><reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference> <strong>get_tile_id</strong>(index: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tilesetsource-method-get-tile-id"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回索引为 <literal>index</literal> 的图块的图块坐标 ID。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tilesetsource-method-get-tiles-count"></target>
            <paragraph classes="classref-method" ids="class-tilesetsource-method-get-tiles-count" names="class_tilesetsource_method_get_tiles_count"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_tiles_count</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tilesetsource-method-get-tiles-count"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回该图集源中定义的图块数量（不含备选图块）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tilesetsource-method-has-alternative-tile"></target>
            <paragraph classes="classref-method" ids="class-tilesetsource-method-has-alternative-tile" names="class_tilesetsource_method_has_alternative_tile"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>has_alternative_tile</strong>(atlas_coords: <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference>, alternative_tile: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tilesetsource-method-has-alternative-tile"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回位于坐标 <literal>atlas_coords</literal> 的基础图块是否存在 ID 为 <literal>alternative_tile</literal> 的备选图块。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-tilesetsource-method-has-tile"></target>
            <paragraph classes="classref-method" ids="class-tilesetsource-method-has-tile" names="class_tilesetsource_method_has_tile"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>has_tile</strong>(atlas_coords: <reference internal="True" refuri="class_vector2i#class-vector2i"><inline classes="std std-ref">Vector2i</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-tilesetsource-method-has-tile"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回该图集中是否存在坐标 ID 为 <literal>atlas_coords</literal> 的图块。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

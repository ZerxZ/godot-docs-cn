<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_spinbox.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <meta content="number, numeric, input" name="keywords">
    </meta>
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/SpinBox.xml.</comment>
    <target refid="class-spinbox"></target>
    <section ids="spinbox class-spinbox" names="spinbox class_spinbox">
        <title>SpinBox</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_range#class-range"><inline classes="std std-ref">Range</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_control#class-control"><inline classes="std std-ref">Control</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_canvasitem#class-canvasitem"><inline classes="std std-ref">CanvasItem</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>数字的输入字段。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph><strong>SpinBox</strong> 是一种用于输入数值的文本字段，允许输入整数和浮点数。</paragraph>
            <paragraph><strong>示例：</strong></paragraph>
            <container classes="sphinx-tabs" type="tab-element">
                <div aria-label="Tabbed content" role="tablist">
                    <button aria-controls="panel-0-R0RTY3JpcHQ=" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-0-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tab" tabindex="0">GDScript</button>
                    <button aria-controls="panel-0-QyM=" aria-selected="false" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-0-QyM=" name="QyM=" role="tab" tabindex="-1">C#</button>
                </div>
                <div aria-labelledby="tab-0-R0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-0-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve">var spin_box = SpinBox.new()
add_child(spin_box)
var line_edit = spin_box.get_line_edit()
line_edit.context_menu_enabled = false
spin_box.horizontal_alignment = LineEdit.HORIZONTAL_ALIGNMENT_RIGHT</literal_block>
                </div>
                <div aria-labelledby="tab-0-QyM=" classes="sphinx-tabs-panel code-tab group-tab" hidden="true" ids="panel-0-QyM=" name="QyM=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="csharp" linenos="False" xml:space="preserve">var spinBox = new SpinBox();
AddChild(spinBox);
var lineEdit = spinBox.GetLineEdit();
lineEdit.ContextMenuEnabled = false;
spinBox.AlignHorizontal = LineEdit.HorizontalAlignEnum.Right;</literal_block>
                </div>
            </container>
            <paragraph>上面的代码会创建一个 <strong>SpinBox</strong>，禁用其中的上下文菜单，并将文本设置为右对齐。</paragraph>
            <paragraph><strong>SpinBox</strong> 的更多选项见 <reference internal="True" refuri="class_range#class-range"><inline classes="std std-ref">Range</inline></reference> 类。</paragraph>
            <paragraph><strong>注意：</strong><strong>SpinBox</strong> 的上下文菜单被禁用时，右键单击微调框的下半部分可以将取值设置最小值，右键单击上半部分可以将取值设置最大值。</paragraph>
            <paragraph><strong>注意：</strong><strong>SpinBox</strong> 依赖底层的 <reference internal="True" refuri="class_lineedit#class-lineedit"><inline classes="std std-ref">LineEdit</inline></reference> 节点。要为 <strong>SpinBox</strong> 的背景设置主题，请为 <reference internal="True" refuri="class_lineedit#class-lineedit"><inline classes="std std-ref">LineEdit</inline></reference> 添加主题项目并进行自定义。</paragraph>
            <paragraph><strong>注意：</strong>如果你想要为底层的 <reference internal="True" refuri="class_lineedit#class-lineedit"><inline classes="std std-ref">LineEdit</inline></reference> 实现拖放，可以对 <reference internal="True" refid="class-spinbox-method-get-line-edit"><inline classes="std std-ref">get_line_edit</inline></reference> 所返回的节点使用 <reference internal="True" refuri="class_control#class-control-method-set-drag-forwarding"><inline classes="std std-ref">Control.set_drag_forwarding</inline></reference>。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="67"></colspec>
                    <colspec colwidth="78"></colspec>
                    <colspec colwidth="78"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_@globalscope#enum-globalscope-horizontalalignment"><inline classes="std std-ref">HorizontalAlignment</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-spinbox-property-alignment"><inline classes="std std-ref">alignment</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-spinbox-property-custom-arrow-step"><inline classes="std std-ref">custom_arrow_step</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-spinbox-property-editable"><inline classes="std std-ref">editable</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-spinbox-property-prefix"><inline classes="std std-ref">prefix</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>""</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-spinbox-property-select-all-on-focus"><inline classes="std std-ref">select_all_on_focus</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation>[<reference internal="True" refuri="class_control#enum-control-sizeflags"><inline classes="std std-ref">SizeFlags</inline></reference>]</paragraph>
                            </entry>
                            <entry>
                                <paragraph>size_flags_vertical</paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1</literal> (overrides <reference internal="True" refuri="class_control#class-control-property-size-flags-vertical"><inline classes="std std-ref">Control</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph>step</paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal> (overrides <reference internal="True" refuri="class_range#class-range-property-step"><inline classes="std std-ref">Range</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-spinbox-property-suffix"><inline classes="std std-ref">suffix</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>""</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-spinbox-property-update-on-text-changed"><inline classes="std std-ref">update_on_text_changed</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="33"></colspec>
                    <colspec colwidth="64"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-spinbox-method-apply"><inline classes="std std-ref">apply</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_lineedit#class-lineedit"><inline classes="std std-ref">LineEdit</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-spinbox-method-get-line-edit"><inline classes="std std-ref">get_line_edit</inline></reference>()</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id4" names="主题属性">
            <title>主题属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="35"></colspec>
                    <colspec colwidth="48"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-spinbox-theme-icon-updown"><inline classes="std std-ref">updown</inline></reference></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="属性说明">
            <title>属性说明</title>
            <target refid="class-spinbox-property-alignment"></target>
            <paragraph classes="classref-property" ids="class-spinbox-property-alignment" names="class_spinbox_property_alignment"><reference internal="True" refuri="class_@globalscope#enum-globalscope-horizontalalignment"><inline classes="std std-ref">HorizontalAlignment</inline></reference> <strong>alignment</strong> = <literal>0</literal> <reference internal="True" refid="class-spinbox-property-alignment"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_horizontal_alignment</strong>(value: <reference internal="True" refuri="class_@globalscope#enum-globalscope-horizontalalignment"><inline classes="std std-ref">HorizontalAlignment</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_@globalscope#enum-globalscope-horizontalalignment"><inline classes="std std-ref">HorizontalAlignment</inline></reference> <strong>get_horizontal_alignment</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>更改底层 <reference internal="True" refuri="class_lineedit#class-lineedit"><inline classes="std std-ref">LineEdit</inline></reference> 的对齐方式。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-spinbox-property-custom-arrow-step"></target>
            <paragraph classes="classref-property" ids="class-spinbox-property-custom-arrow-step" names="class_spinbox_property_custom_arrow_step"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>custom_arrow_step</strong> = <literal>0.0</literal> <reference internal="True" refid="class-spinbox-property-custom-arrow-step"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_custom_arrow_step</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_custom_arrow_step</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果不是 <literal>0</literal>，则在与 <strong>SpinBox</strong> 的箭头按钮交互时，<reference internal="True" refuri="class_range#class-range-property-value"><inline classes="std std-ref">Range.value</inline></reference> 将始终四舍五入为 <reference internal="True" refid="class-spinbox-property-custom-arrow-step"><inline classes="std std-ref">custom_arrow_step</inline></reference> 的倍数。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-spinbox-property-editable"></target>
            <paragraph classes="classref-property" ids="class-spinbox-property-editable" names="class_spinbox_property_editable"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>editable</strong> = <literal>true</literal> <reference internal="True" refid="class-spinbox-property-editable"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_editable</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_editable</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则 <strong>SpinBox</strong> 将是可编辑的。否则，它将是只读的。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-spinbox-property-prefix"></target>
            <paragraph classes="classref-property" ids="class-spinbox-property-prefix" names="class_spinbox_property_prefix"><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>prefix</strong> = <literal>""</literal> <reference internal="True" refid="class-spinbox-property-prefix"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_prefix</strong>(value: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>get_prefix</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>在 <strong>SpinBox</strong> 的数值前添加指定的前缀字符串。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-spinbox-property-select-all-on-focus"></target>
            <paragraph classes="classref-property" ids="class-spinbox-property-select-all-on-focus" names="class_spinbox_property_select_all_on_focus"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>select_all_on_focus</strong> = <literal>false</literal> <reference internal="True" refid="class-spinbox-property-select-all-on-focus"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_select_all_on_focus</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_select_all_on_focus</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则该 <strong>SpinBox</strong> 会在 <reference internal="True" refuri="class_lineedit#class-lineedit"><inline classes="std std-ref">LineEdit</inline></reference> 获得焦点时选中整个文本。点击上下箭头不会触发这种行为。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-spinbox-property-suffix"></target>
            <paragraph classes="classref-property" ids="class-spinbox-property-suffix" names="class_spinbox_property_suffix"><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>suffix</strong> = <literal>""</literal> <reference internal="True" refid="class-spinbox-property-suffix"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_suffix</strong>(value: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>get_suffix</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>在 <strong>SpinBox</strong> 的数值后添加指定的后缀字符串。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-spinbox-property-update-on-text-changed"></target>
            <paragraph classes="classref-property" ids="class-spinbox-property-update-on-text-changed" names="class_spinbox_property_update_on_text_changed"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>update_on_text_changed</strong> = <literal>false</literal> <reference internal="True" refid="class-spinbox-property-update-on-text-changed"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_update_on_text_changed</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_update_on_text_changed</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>当 <reference internal="True" refuri="class_lineedit#class-lineedit"><inline classes="std std-ref">LineEdit</inline></reference> 的文本<emphasis>发生变化</emphasis>而不是<emphasis>被提交</emphasis>时，设置这个 <strong>SpinBox</strong> 的 <reference internal="True" refuri="class_range#class-range"><inline classes="std std-ref">Range</inline></reference> 的值。见 <reference internal="True" refuri="class_lineedit#class-lineedit-signal-text-changed"><inline classes="std std-ref">LineEdit.text_changed</inline></reference> 和 <reference internal="True" refuri="class_lineedit#class-lineedit-signal-text-submitted"><inline classes="std std-ref">LineEdit.text_submitted</inline></reference>。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="方法说明">
            <title>方法说明</title>
            <target refid="class-spinbox-method-apply"></target>
            <paragraph classes="classref-method" ids="class-spinbox-method-apply" names="class_spinbox_method_apply"><abbreviation explanation="无返回值。">void</abbreviation> <strong>apply</strong>() <reference internal="True" refid="class-spinbox-method-apply"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>应用此 <strong>SpinBox</strong> 的当前值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-spinbox-method-get-line-edit"></target>
            <paragraph classes="classref-method" ids="class-spinbox-method-get-line-edit" names="class_spinbox_method_get_line_edit"><reference internal="True" refuri="class_lineedit#class-lineedit"><inline classes="std std-ref">LineEdit</inline></reference> <strong>get_line_edit</strong>() <reference internal="True" refid="class-spinbox-method-get-line-edit"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回这个 <strong>SpinBox</strong> 中的 <reference internal="True" refuri="class_lineedit#class-lineedit"><inline classes="std std-ref">LineEdit</inline></reference> 实例。你可以用它来访问 <reference internal="True" refuri="class_lineedit#class-lineedit"><inline classes="std std-ref">LineEdit</inline></reference> 的属性和方法。</paragraph>
            <paragraph><strong>警告：</strong>这是一个必要的内部节点，移除和释放它可能会导致崩溃。如果你想隐藏它或它的任何子节点，请使用其 <reference internal="True" refuri="class_canvasitem#class-canvasitem-property-visible"><inline classes="std std-ref">CanvasItem.visible</inline></reference> 属性。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id7" names="主题属性说明">
            <title>主题属性说明</title>
            <target refid="class-spinbox-theme-icon-updown"></target>
            <paragraph classes="classref-themeproperty" ids="class-spinbox-theme-icon-updown" names="class_spinbox_theme_icon_updown"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>updown</strong> <reference internal="True" refid="class-spinbox-theme-icon-updown"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>为该 <strong>SpinBox</strong> 的上下箭头设置自定义的 <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference>。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

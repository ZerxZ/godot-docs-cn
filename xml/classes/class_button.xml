<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_button.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/Button.xml.</comment>
    <target refid="class-button"></target>
    <section ids="button class-button" names="button class_button">
        <title>Button</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_basebutton#class-basebutton"><inline classes="std std-ref">BaseButton</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_control#class-control"><inline classes="std std-ref">Control</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_canvasitem#class-canvasitem"><inline classes="std std-ref">CanvasItem</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph><strong>派生：</strong> <reference internal="True" refuri="class_checkbox#class-checkbox"><inline classes="std std-ref">CheckBox</inline></reference>, <reference internal="True" refuri="class_checkbutton#class-checkbutton"><inline classes="std std-ref">CheckButton</inline></reference>, <reference internal="True" refuri="class_colorpickerbutton#class-colorpickerbutton"><inline classes="std std-ref">ColorPickerButton</inline></reference>, <reference internal="True" refuri="class_menubutton#class-menubutton"><inline classes="std std-ref">MenuButton</inline></reference>, <reference internal="True" refuri="class_optionbutton#class-optionbutton"><inline classes="std std-ref">OptionButton</inline></reference></paragraph>
        <paragraph>按钮，支持主题，能够包含文本和图标。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph><strong>Button</strong> 是标准的主题按钮，可以包含文字和图标，显示样式会根据当前的 <reference internal="True" refuri="class_theme#class-theme"><inline classes="std std-ref">Theme</inline></reference> 改变。</paragraph>
            <paragraph><strong>示例：通过代码创建按钮并指定在按下时的动作</strong></paragraph>
            <container classes="sphinx-tabs" type="tab-element">
                <div aria-label="Tabbed content" role="tablist">
                    <button aria-controls="panel-0-R0RTY3JpcHQ=" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-0-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tab" tabindex="0">GDScript</button>
                    <button aria-controls="panel-0-QyM=" aria-selected="false" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-0-QyM=" name="QyM=" role="tab" tabindex="-1">C#</button>
                </div>
                <div aria-labelledby="tab-0-R0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-0-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve">func _ready():
    var button = Button.new()
    button.text = "Click me"
    button.pressed.connect(self._button_pressed)
    add_child(button)

func _button_pressed():
    print("Hello world!")</literal_block>
                </div>
                <div aria-labelledby="tab-0-QyM=" classes="sphinx-tabs-panel code-tab group-tab" hidden="true" ids="panel-0-QyM=" name="QyM=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="csharp" linenos="False" xml:space="preserve">public override void _Ready()
{
    var button = new Button();
    button.Text = "Click me";
    button.Pressed += ButtonPressed;
    AddChild(button);
}

private void ButtonPressed()
{
    GD.Print("Hello world!");
}</literal_block>
                </div>
            </container>
            <paragraph>另请参阅 <reference internal="True" refuri="class_basebutton#class-basebutton"><inline classes="std std-ref">BaseButton</inline></reference>，其中包含与此节点相关联的通用属性和方法。</paragraph>
            <paragraph><strong>注意：</strong>按钮不处理触摸输入，因此不支持多点触控，因为模拟鼠标在给定时间只能按下一个按钮。请用 <reference internal="True" refuri="class_touchscreenbutton#class-touchscreenbutton"><inline classes="std std-ref">TouchScreenButton</inline></reference> 制作触发游戏移动或动作的按钮。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference name="2D Dodge The Creeps 演示" refuri="https://godotengine.org/asset-library/asset/2712">2D Dodge The Creeps 演示</reference></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference name="操作系统测试演示" refuri="https://godotengine.org/asset-library/asset/2789">操作系统测试演示</reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="67"></colspec>
                    <colspec colwidth="79"></colspec>
                    <colspec colwidth="11"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_@globalscope#enum-globalscope-horizontalalignment"><inline classes="std std-ref">HorizontalAlignment</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-button-property-alignment"><inline classes="std std-ref">alignment</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_textserver#enum-textserver-autowrapmode"><inline classes="std std-ref">AutowrapMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-button-property-autowrap-mode"><inline classes="std std-ref">autowrap_mode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-button-property-clip-text"><inline classes="std std-ref">clip_text</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-button-property-expand-icon"><inline classes="std std-ref">expand_icon</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-button-property-flat"><inline classes="std std-ref">flat</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-button-property-icon"><inline classes="std std-ref">icon</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_@globalscope#enum-globalscope-horizontalalignment"><inline classes="std std-ref">HorizontalAlignment</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-button-property-icon-alignment"><inline classes="std std-ref">icon_alignment</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-button-property-language"><inline classes="std std-ref">language</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>""</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-button-property-text"><inline classes="std std-ref">text</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>""</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_control#enum-control-textdirection"><inline classes="std std-ref">TextDirection</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-button-property-text-direction"><inline classes="std std-ref">text_direction</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_textserver#enum-textserver-overrunbehavior"><inline classes="std std-ref">OverrunBehavior</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-button-property-text-overrun-behavior"><inline classes="std std-ref">text_overrun_behavior</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_@globalscope#enum-globalscope-verticalalignment"><inline classes="std std-ref">VerticalAlignment</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-button-property-vertical-icon-alignment"><inline classes="std std-ref">vertical_icon_alignment</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id4" names="主题属性">
            <title>主题属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="35"></colspec>
                    <colspec colwidth="89"></colspec>
                    <colspec colwidth="37"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-button-theme-color-font-color"><inline classes="std std-ref">font_color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Color(0.875, 0.875, 0.875, 1)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-button-theme-color-font-disabled-color"><inline classes="std std-ref">font_disabled_color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Color(0.875, 0.875, 0.875, 0.5)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-button-theme-color-font-focus-color"><inline classes="std std-ref">font_focus_color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Color(0.95, 0.95, 0.95, 1)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-button-theme-color-font-hover-color"><inline classes="std std-ref">font_hover_color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Color(0.95, 0.95, 0.95, 1)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-button-theme-color-font-hover-pressed-color"><inline classes="std std-ref">font_hover_pressed_color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Color(1, 1, 1, 1)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-button-theme-color-font-outline-color"><inline classes="std std-ref">font_outline_color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Color(0, 0, 0, 1)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-button-theme-color-font-pressed-color"><inline classes="std std-ref">font_pressed_color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Color(1, 1, 1, 1)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-button-theme-color-icon-disabled-color"><inline classes="std std-ref">icon_disabled_color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Color(1, 1, 1, 0.4)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-button-theme-color-icon-focus-color"><inline classes="std std-ref">icon_focus_color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Color(1, 1, 1, 1)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-button-theme-color-icon-hover-color"><inline classes="std std-ref">icon_hover_color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Color(1, 1, 1, 1)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-button-theme-color-icon-hover-pressed-color"><inline classes="std std-ref">icon_hover_pressed_color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Color(1, 1, 1, 1)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-button-theme-color-icon-normal-color"><inline classes="std std-ref">icon_normal_color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Color(1, 1, 1, 1)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-button-theme-color-icon-pressed-color"><inline classes="std std-ref">icon_pressed_color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Color(1, 1, 1, 1)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-button-theme-constant-align-to-largest-stylebox"><inline classes="std std-ref">align_to_largest_stylebox</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-button-theme-constant-h-separation"><inline classes="std std-ref">h_separation</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>4</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-button-theme-constant-icon-max-width"><inline classes="std std-ref">icon_max_width</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-button-theme-constant-outline-size"><inline classes="std std-ref">outline_size</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_font#class-font"><inline classes="std std-ref">Font</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-button-theme-font-font"><inline classes="std std-ref">font</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-button-theme-font-size-font-size"><inline classes="std std-ref">font_size</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-button-theme-icon-icon"><inline classes="std std-ref">icon</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-button-theme-style-disabled"><inline classes="std std-ref">disabled</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-button-theme-style-disabled-mirrored"><inline classes="std std-ref">disabled_mirrored</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-button-theme-style-focus"><inline classes="std std-ref">focus</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-button-theme-style-hover"><inline classes="std std-ref">hover</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-button-theme-style-hover-mirrored"><inline classes="std std-ref">hover_mirrored</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-button-theme-style-hover-pressed"><inline classes="std std-ref">hover_pressed</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-button-theme-style-hover-pressed-mirrored"><inline classes="std std-ref">hover_pressed_mirrored</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-button-theme-style-normal"><inline classes="std std-ref">normal</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-button-theme-style-normal-mirrored"><inline classes="std std-ref">normal_mirrored</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-button-theme-style-pressed"><inline classes="std std-ref">pressed</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-button-theme-style-pressed-mirrored"><inline classes="std std-ref">pressed_mirrored</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="属性说明">
            <title>属性说明</title>
            <target refid="class-button-property-alignment"></target>
            <paragraph classes="classref-property" ids="class-button-property-alignment" names="class_button_property_alignment"><reference internal="True" refuri="class_@globalscope#enum-globalscope-horizontalalignment"><inline classes="std std-ref">HorizontalAlignment</inline></reference> <strong>alignment</strong> = <literal>1</literal> <reference internal="True" refid="class-button-property-alignment"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_text_alignment</strong>(value: <reference internal="True" refuri="class_@globalscope#enum-globalscope-horizontalalignment"><inline classes="std std-ref">HorizontalAlignment</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_@globalscope#enum-globalscope-horizontalalignment"><inline classes="std std-ref">HorizontalAlignment</inline></reference> <strong>get_text_alignment</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>按钮文本的文本对齐策略，使用 <reference internal="True" refuri="class_@globalscope#enum-globalscope-horizontalalignment"><inline classes="std std-ref">HorizontalAlignment</inline></reference> 常量之一。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-button-property-autowrap-mode"></target>
            <paragraph classes="classref-property" ids="class-button-property-autowrap-mode" names="class_button_property_autowrap_mode"><reference internal="True" refuri="class_textserver#enum-textserver-autowrapmode"><inline classes="std std-ref">AutowrapMode</inline></reference> <strong>autowrap_mode</strong> = <literal>0</literal> <reference internal="True" refid="class-button-property-autowrap-mode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_autowrap_mode</strong>(value: <reference internal="True" refuri="class_textserver#enum-textserver-autowrapmode"><inline classes="std std-ref">AutowrapMode</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_textserver#enum-textserver-autowrapmode"><inline classes="std std-ref">AutowrapMode</inline></reference> <strong>get_autowrap_mode</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果设置为 <reference internal="True" refuri="class_textserver#class-textserver-constant-autowrap-off"><inline classes="std std-ref">TextServer.AUTOWRAP_OFF</inline></reference> 以外的值，则文本将在节点的边界矩形内换行。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-button-property-clip-text"></target>
            <paragraph classes="classref-property" ids="class-button-property-clip-text" names="class_button_property_clip_text"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>clip_text</strong> = <literal>false</literal> <reference internal="True" refid="class-button-property-clip-text"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_clip_text</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_clip_text</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>当此属性被启用时，过大而无法容纳按钮的文本会被剪掉，当被禁用时，按钮将始终有足够的宽度来容纳文本。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-button-property-expand-icon"></target>
            <paragraph classes="classref-property" ids="class-button-property-expand-icon" names="class_button_property_expand_icon"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>expand_icon</strong> = <literal>false</literal> <reference internal="True" refid="class-button-property-expand-icon"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_expand_icon</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_expand_icon</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>启用后，将在保持按钮图标长宽比的前提下对该图标进行扩展/收缩，从而适应按钮的大小。另见 <reference internal="True" refid="class-button-theme-constant-icon-max-width"><inline classes="std std-ref">icon_max_width</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-button-property-flat"></target>
            <paragraph classes="classref-property" ids="class-button-property-flat" names="class_button_property_flat"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>flat</strong> = <literal>false</literal> <reference internal="True" refid="class-button-property-flat"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_flat</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_flat</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>平面按钮不显示装饰。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-button-property-icon"></target>
            <paragraph classes="classref-property" ids="class-button-property-icon" names="class_button_property_icon"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>icon</strong> <reference internal="True" refid="class-button-property-icon"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_button_icon</strong>(value: <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>get_button_icon</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>按钮的图标，如果文本存在，则图标将被放置在文本之前。</paragraph>
            <paragraph>要编辑图标的边距和间距，请使用 <reference internal="True" refid="class-button-theme-constant-h-separation"><inline classes="std std-ref">h_separation</inline></reference> 主题属性，和所用 <reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference> 的 <literal>content_margin_*</literal> 属性。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-button-property-icon-alignment"></target>
            <paragraph classes="classref-property" ids="class-button-property-icon-alignment" names="class_button_property_icon_alignment"><reference internal="True" refuri="class_@globalscope#enum-globalscope-horizontalalignment"><inline classes="std std-ref">HorizontalAlignment</inline></reference> <strong>icon_alignment</strong> = <literal>0</literal> <reference internal="True" refid="class-button-property-icon-alignment"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_icon_alignment</strong>(value: <reference internal="True" refuri="class_@globalscope#enum-globalscope-horizontalalignment"><inline classes="std std-ref">HorizontalAlignment</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_@globalscope#enum-globalscope-horizontalalignment"><inline classes="std std-ref">HorizontalAlignment</inline></reference> <strong>get_icon_alignment</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>指定图标在按钮上水平对齐的方式应该为左对齐、右对齐还是居中对齐。请使用与文本对齐相同的 <reference internal="True" refuri="class_@globalscope#enum-globalscope-horizontalalignment"><inline classes="std std-ref">HorizontalAlignment</inline></reference> 常量。如果水平居中并且垂直居中，则文本将被绘制在图标之上。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-button-property-language"></target>
            <paragraph classes="classref-property" ids="class-button-property-language" names="class_button_property_language"><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>language</strong> = <literal>""</literal> <reference internal="True" refid="class-button-property-language"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_language</strong>(value: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>get_language</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>语言代码，用于断行和文本塑形算法，如果留空则使用当前区域设置。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-button-property-text"></target>
            <paragraph classes="classref-property" ids="class-button-property-text" names="class_button_property_text"><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>text</strong> = <literal>""</literal> <reference internal="True" refid="class-button-property-text"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_text</strong>(value: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>get_text</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>该按钮的文本，将显示在按钮的区域内。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-button-property-text-direction"></target>
            <paragraph classes="classref-property" ids="class-button-property-text-direction" names="class_button_property_text_direction"><reference internal="True" refuri="class_control#enum-control-textdirection"><inline classes="std std-ref">TextDirection</inline></reference> <strong>text_direction</strong> = <literal>0</literal> <reference internal="True" refid="class-button-property-text-direction"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_text_direction</strong>(value: <reference internal="True" refuri="class_control#enum-control-textdirection"><inline classes="std std-ref">TextDirection</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_control#enum-control-textdirection"><inline classes="std std-ref">TextDirection</inline></reference> <strong>get_text_direction</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>基础文本书写方向。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-button-property-text-overrun-behavior"></target>
            <paragraph classes="classref-property" ids="class-button-property-text-overrun-behavior" names="class_button_property_text_overrun_behavior"><reference internal="True" refuri="class_textserver#enum-textserver-overrunbehavior"><inline classes="std std-ref">OverrunBehavior</inline></reference> <strong>text_overrun_behavior</strong> = <literal>0</literal> <reference internal="True" refid="class-button-property-text-overrun-behavior"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_text_overrun_behavior</strong>(value: <reference internal="True" refuri="class_textserver#enum-textserver-overrunbehavior"><inline classes="std std-ref">OverrunBehavior</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_textserver#enum-textserver-overrunbehavior"><inline classes="std std-ref">OverrunBehavior</inline></reference> <strong>get_text_overrun_behavior</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>设置文本超出节点的边界矩形时的裁剪行为。有关所有模式的描述，请参阅 <reference internal="True" refuri="class_textserver#enum-textserver-overrunbehavior"><inline classes="std std-ref">OverrunBehavior</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-button-property-vertical-icon-alignment"></target>
            <paragraph classes="classref-property" ids="class-button-property-vertical-icon-alignment" names="class_button_property_vertical_icon_alignment"><reference internal="True" refuri="class_@globalscope#enum-globalscope-verticalalignment"><inline classes="std std-ref">VerticalAlignment</inline></reference> <strong>vertical_icon_alignment</strong> = <literal>1</literal> <reference internal="True" refid="class-button-property-vertical-icon-alignment"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_vertical_icon_alignment</strong>(value: <reference internal="True" refuri="class_@globalscope#enum-globalscope-verticalalignment"><inline classes="std std-ref">VerticalAlignment</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_@globalscope#enum-globalscope-verticalalignment"><inline classes="std std-ref">VerticalAlignment</inline></reference> <strong>get_vertical_icon_alignment</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>指定图标在按钮上垂直对齐的方式应该为顶端对齐、底部对齐还是居中对齐。请使用与文本对齐相同的 <reference internal="True" refuri="class_@globalscope#enum-globalscope-verticalalignment"><inline classes="std std-ref">VerticalAlignment</inline></reference> 常量。如果水平居中并且垂直居中，则文本将被绘制在图标之上。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="主题属性说明">
            <title>主题属性说明</title>
            <target refid="class-button-theme-color-font-color"></target>
            <paragraph classes="classref-themeproperty" ids="class-button-theme-color-font-color" names="class_button_theme_color_font_color"><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>font_color</strong> = <literal>Color(0.875, 0.875, 0.875, 1)</literal> <reference internal="True" refid="class-button-theme-color-font-color"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>该 <strong>Button</strong> 的默认文本 <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-button-theme-color-font-disabled-color"></target>
            <paragraph classes="classref-themeproperty" ids="class-button-theme-color-font-disabled-color" names="class_button_theme_color_font_disabled_color"><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>font_disabled_color</strong> = <literal>Color(0.875, 0.875, 0.875, 0.5)</literal> <reference internal="True" refid="class-button-theme-color-font-disabled-color"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>该 <strong>Button</strong> 处于禁用状态时，使用的文本 <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-button-theme-color-font-focus-color"></target>
            <paragraph classes="classref-themeproperty" ids="class-button-theme-color-font-focus-color" names="class_button_theme_color_font_focus_color"><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>font_focus_color</strong> = <literal>Color(0.95, 0.95, 0.95, 1)</literal> <reference internal="True" refid="class-button-theme-color-font-focus-color"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>该 <strong>Button</strong> 处于聚焦状态时，使用的文本 <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference>。只替换该按钮的正常文本颜色。禁用、悬停、按下状态优先于这个颜色。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-button-theme-color-font-hover-color"></target>
            <paragraph classes="classref-themeproperty" ids="class-button-theme-color-font-hover-color" names="class_button_theme_color_font_hover_color"><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>font_hover_color</strong> = <literal>Color(0.95, 0.95, 0.95, 1)</literal> <reference internal="True" refid="class-button-theme-color-font-hover-color"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>该 <strong>Button</strong> 处于悬停状态时，使用的文本 <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-button-theme-color-font-hover-pressed-color"></target>
            <paragraph classes="classref-themeproperty" ids="class-button-theme-color-font-hover-pressed-color" names="class_button_theme_color_font_hover_pressed_color"><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>font_hover_pressed_color</strong> = <literal>Color(1, 1, 1, 1)</literal> <reference internal="True" refid="class-button-theme-color-font-hover-pressed-color"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>该 <strong>Button</strong> 处于悬停并按下状态时，使用的文本 <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-button-theme-color-font-outline-color"></target>
            <paragraph classes="classref-themeproperty" ids="class-button-theme-color-font-outline-color" names="class_button_theme_color_font_outline_color"><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>font_outline_color</strong> = <literal>Color(0, 0, 0, 1)</literal> <reference internal="True" refid="class-button-theme-color-font-outline-color"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>该 <strong>Button</strong> 的文本轮廓的色调。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-button-theme-color-font-pressed-color"></target>
            <paragraph classes="classref-themeproperty" ids="class-button-theme-color-font-pressed-color" names="class_button_theme_color_font_pressed_color"><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>font_pressed_color</strong> = <literal>Color(1, 1, 1, 1)</literal> <reference internal="True" refid="class-button-theme-color-font-pressed-color"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>该 <strong>Button</strong> 处于按下状态时，使用的文本 <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> 。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-button-theme-color-icon-disabled-color"></target>
            <paragraph classes="classref-themeproperty" ids="class-button-theme-color-icon-disabled-color" names="class_button_theme_color_icon_disabled_color"><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>icon_disabled_color</strong> = <literal>Color(1, 1, 1, 0.4)</literal> <reference internal="True" refid="class-button-theme-color-icon-disabled-color"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>该 <strong>Button</strong> 处于禁用状态时，使用的图标调制 <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-button-theme-color-icon-focus-color"></target>
            <paragraph classes="classref-themeproperty" ids="class-button-theme-color-icon-focus-color" names="class_button_theme_color_icon_focus_color"><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>icon_focus_color</strong> = <literal>Color(1, 1, 1, 1)</literal> <reference internal="True" refid="class-button-theme-color-icon-focus-color"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>该 <strong>Button</strong> 处于聚焦状态时，使用的图标调制 <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference>。仅替换该按钮的正常调制颜色。禁用、悬停和按下状态优先于这个颜色。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-button-theme-color-icon-hover-color"></target>
            <paragraph classes="classref-themeproperty" ids="class-button-theme-color-icon-hover-color" names="class_button_theme_color_icon_hover_color"><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>icon_hover_color</strong> = <literal>Color(1, 1, 1, 1)</literal> <reference internal="True" refid="class-button-theme-color-icon-hover-color"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>该 <strong>Button</strong> 处于悬停状态时，使用的图标调制<reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-button-theme-color-icon-hover-pressed-color"></target>
            <paragraph classes="classref-themeproperty" ids="class-button-theme-color-icon-hover-pressed-color" names="class_button_theme_color_icon_hover_pressed_color"><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>icon_hover_pressed_color</strong> = <literal>Color(1, 1, 1, 1)</literal> <reference internal="True" refid="class-button-theme-color-icon-hover-pressed-color"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>该 <strong>Button</strong> 处于悬停并按下按下状态时，使用的图标调制 <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-button-theme-color-icon-normal-color"></target>
            <paragraph classes="classref-themeproperty" ids="class-button-theme-color-icon-normal-color" names="class_button_theme_color_icon_normal_color"><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>icon_normal_color</strong> = <literal>Color(1, 1, 1, 1)</literal> <reference internal="True" refid="class-button-theme-color-icon-normal-color"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>该 <strong>Button</strong> 的默认图标调制 <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-button-theme-color-icon-pressed-color"></target>
            <paragraph classes="classref-themeproperty" ids="class-button-theme-color-icon-pressed-color" names="class_button_theme_color_icon_pressed_color"><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>icon_pressed_color</strong> = <literal>Color(1, 1, 1, 1)</literal> <reference internal="True" refid="class-button-theme-color-icon-pressed-color"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>该 <strong>Button</strong> 处于按下状态时，使用的图标调制 <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-button-theme-constant-align-to-largest-stylebox"></target>
            <paragraph classes="classref-themeproperty" ids="class-button-theme-constant-align-to-largest-stylebox" names="class_button_theme_constant_align_to_largest_stylebox"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>align_to_largest_stylebox</strong> = <literal>0</literal> <reference internal="True" refid="class-button-theme-constant-align-to-largest-stylebox"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>This constant acts as a boolean. If <literal>true</literal>, text and icon are always aligned to the largest stylebox margins, otherwise it's aligned to the current button state stylebox margins.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-button-theme-constant-h-separation"></target>
            <paragraph classes="classref-themeproperty" ids="class-button-theme-constant-h-separation" names="class_button_theme_constant_h_separation"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>h_separation</strong> = <literal>4</literal> <reference internal="True" refid="class-button-theme-constant-h-separation"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><strong>Button</strong> 的图标和文本之间的水平间距。使用时会将负值当作 <literal>0</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-button-theme-constant-icon-max-width"></target>
            <paragraph classes="classref-themeproperty" ids="class-button-theme-constant-icon-max-width" names="class_button_theme_constant_icon_max_width"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>icon_max_width</strong> = <literal>0</literal> <reference internal="True" refid="class-button-theme-constant-icon-max-width"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>The maximum allowed width of the <strong>Button</strong>'s icon. This limit is applied on top of the default size of the icon, or its expanded size if <reference internal="True" refid="class-button-property-expand-icon"><inline classes="std std-ref">expand_icon</inline></reference> is <literal>true</literal>. The height is adjusted according to the icon's ratio. If the button has additional icons (e.g. <reference internal="True" refuri="class_checkbox#class-checkbox"><inline classes="std std-ref">CheckBox</inline></reference>), they will also be limited.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-button-theme-constant-outline-size"></target>
            <paragraph classes="classref-themeproperty" ids="class-button-theme-constant-outline-size" names="class_button_theme_constant_outline_size"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>outline_size</strong> = <literal>0</literal> <reference internal="True" refid="class-button-theme-constant-outline-size"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>文字轮廓的大小。</paragraph>
            <paragraph><strong>注意：</strong>如果使用启用了 <reference internal="True" refuri="class_fontfile#class-fontfile-property-multichannel-signed-distance-field"><inline classes="std std-ref">FontFile.multichannel_signed_distance_field</inline></reference> 的字体，其 <reference internal="True" refuri="class_fontfile#class-fontfile-property-msdf-pixel-range"><inline classes="std std-ref">FontFile.msdf_pixel_range</inline></reference> 必须至少设置为 <reference internal="True" refid="class-button-theme-constant-outline-size"><inline classes="std std-ref">outline_size</inline></reference> 的<emphasis>两倍</emphasis>，轮廓渲染才能看起来正确。否则，轮廓可能会比预期的更早被切断。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-button-theme-font-font"></target>
            <paragraph classes="classref-themeproperty" ids="class-button-theme-font-font" names="class_button_theme_font_font"><reference internal="True" refuri="class_font#class-font"><inline classes="std std-ref">Font</inline></reference> <strong>font</strong> <reference internal="True" refid="class-button-theme-font-font"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>该 <strong>Button</strong> 文本的 <reference internal="True" refuri="class_font#class-font"><inline classes="std std-ref">Font</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-button-theme-font-size-font-size"></target>
            <paragraph classes="classref-themeproperty" ids="class-button-theme-font-size-font-size" names="class_button_theme_font_size_font_size"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>font_size</strong> <reference internal="True" refid="class-button-theme-font-size-font-size"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>该 <strong>Button</strong> 文本的字体大小。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-button-theme-icon-icon"></target>
            <paragraph classes="classref-themeproperty" ids="class-button-theme-icon-icon" names="class_button_theme_icon_icon"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>icon</strong> <reference internal="True" refid="class-button-theme-icon-icon"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>该 <strong>Button</strong> 的默认图标。仅在未指定 <reference internal="True" refid="class-button-property-icon"><inline classes="std std-ref">icon</inline></reference> 时显示。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-button-theme-style-disabled"></target>
            <paragraph classes="classref-themeproperty" ids="class-button-theme-style-disabled" names="class_button_theme_style_disabled"><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference> <strong>disabled</strong> <reference internal="True" refid="class-button-theme-style-disabled"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>该 <strong>Button</strong> 处于禁用状态时使用的 <reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-button-theme-style-disabled-mirrored"></target>
            <paragraph classes="classref-themeproperty" ids="class-button-theme-style-disabled-mirrored" names="class_button_theme_style_disabled_mirrored"><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference> <strong>disabled_mirrored</strong> <reference internal="True" refid="class-button-theme-style-disabled-mirrored"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>该 <strong>Button</strong> 处于禁用状态时使用的 <reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference>（用于从右至左布局）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-button-theme-style-focus"></target>
            <paragraph classes="classref-themeproperty" ids="class-button-theme-style-focus" names="class_button_theme_style_focus"><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference> <strong>focus</strong> <reference internal="True" refid="class-button-theme-style-focus"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>该 <strong>Button</strong> 处于聚焦状态时使用的 <reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference>。<reference internal="True" refid="class-button-theme-style-focus"><inline classes="std std-ref">focus</inline></reference> <reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference> 显示在基础 <reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference> <emphasis>之上</emphasis>，所以应该使用部分透明的 <reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference>，确保基础 <reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference> 仍然可见。代表轮廓或下划线的 <reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference> 可以很好地实现这个目的。要禁用聚焦的视觉效果，请指定 <reference internal="True" refuri="class_styleboxempty#class-styleboxempty"><inline classes="std std-ref">StyleBoxEmpty</inline></reference> 资源。请注意，禁用聚焦的视觉效果会影响使用键盘/手柄进行导航的可用性，所以出于可访问性的原因，不建议这样做。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-button-theme-style-hover"></target>
            <paragraph classes="classref-themeproperty" ids="class-button-theme-style-hover" names="class_button_theme_style_hover"><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference> <strong>hover</strong> <reference internal="True" refid="class-button-theme-style-hover"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>该 <strong>Button</strong> 处于悬停状态时使用的 <reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-button-theme-style-hover-mirrored"></target>
            <paragraph classes="classref-themeproperty" ids="class-button-theme-style-hover-mirrored" names="class_button_theme_style_hover_mirrored"><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference> <strong>hover_mirrored</strong> <reference internal="True" refid="class-button-theme-style-hover-mirrored"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>该 <strong>Button</strong> 处于悬停状态时使用的 <reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference>（用于从右至左布局）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-button-theme-style-hover-pressed"></target>
            <paragraph classes="classref-themeproperty" ids="class-button-theme-style-hover-pressed" names="class_button_theme_style_hover_pressed"><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference> <strong>hover_pressed</strong> <reference internal="True" refid="class-button-theme-style-hover-pressed"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>该 <strong>Button</strong> 同时处于按下和悬停状态时使用的 <reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-button-theme-style-hover-pressed-mirrored"></target>
            <paragraph classes="classref-themeproperty" ids="class-button-theme-style-hover-pressed-mirrored" names="class_button_theme_style_hover_pressed_mirrored"><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference> <strong>hover_pressed_mirrored</strong> <reference internal="True" refid="class-button-theme-style-hover-pressed-mirrored"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>该 <strong>Button</strong> 同时处于按下和悬停状态时使用的 <reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference>（用于从右至左布局）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-button-theme-style-normal"></target>
            <paragraph classes="classref-themeproperty" ids="class-button-theme-style-normal" names="class_button_theme_style_normal"><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference> <strong>normal</strong> <reference internal="True" refid="class-button-theme-style-normal"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>该 <strong>Button</strong> 的默认 <reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-button-theme-style-normal-mirrored"></target>
            <paragraph classes="classref-themeproperty" ids="class-button-theme-style-normal-mirrored" names="class_button_theme_style_normal_mirrored"><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference> <strong>normal_mirrored</strong> <reference internal="True" refid="class-button-theme-style-normal-mirrored"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>该 <strong>Button</strong> 的默认 <reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference>（用于从右至左布局）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-button-theme-style-pressed"></target>
            <paragraph classes="classref-themeproperty" ids="class-button-theme-style-pressed" names="class_button_theme_style_pressed"><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference> <strong>pressed</strong> <reference internal="True" refid="class-button-theme-style-pressed"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>该 <strong>Button</strong> 处于按下状态时使用的 <reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-button-theme-style-pressed-mirrored"></target>
            <paragraph classes="classref-themeproperty" ids="class-button-theme-style-pressed-mirrored" names="class_button_theme_style_pressed_mirrored"><reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference> <strong>pressed_mirrored</strong> <reference internal="True" refid="class-button-theme-style-pressed-mirrored"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>该 <strong>Button</strong> 处于按下状态时使用的 <reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference>（用于从右至左布局）。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

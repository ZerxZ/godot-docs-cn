<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_visualinstance3d.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/VisualInstance3D.xml.</comment>
    <target refid="class-visualinstance3d"></target>
    <section ids="visualinstance3d class-visualinstance3d" names="visualinstance3d class_visualinstance3d">
        <title>VisualInstance3D</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_node3d#class-node3d"><inline classes="std std-ref">Node3D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph><strong>派生：</strong> <reference internal="True" refuri="class_decal#class-decal"><inline classes="std std-ref">Decal</inline></reference>, <reference internal="True" refuri="class_fogvolume#class-fogvolume"><inline classes="std std-ref">FogVolume</inline></reference>, <reference internal="True" refuri="class_geometryinstance3d#class-geometryinstance3d"><inline classes="std std-ref">GeometryInstance3D</inline></reference>, <reference internal="True" refuri="class_gpuparticlesattractor3d#class-gpuparticlesattractor3d"><inline classes="std std-ref">GPUParticlesAttractor3D</inline></reference>, <reference internal="True" refuri="class_gpuparticlescollision3d#class-gpuparticlescollision3d"><inline classes="std std-ref">GPUParticlesCollision3D</inline></reference>, <reference internal="True" refuri="class_light3d#class-light3d"><inline classes="std std-ref">Light3D</inline></reference>, <reference internal="True" refuri="class_lightmapgi#class-lightmapgi"><inline classes="std std-ref">LightmapGI</inline></reference>, <reference internal="True" refuri="class_reflectionprobe#class-reflectionprobe"><inline classes="std std-ref">ReflectionProbe</inline></reference>, <reference internal="True" refuri="class_rootmotionview#class-rootmotionview"><inline classes="std std-ref">RootMotionView</inline></reference>, <reference internal="True" refuri="class_visibleonscreennotifier3d#class-visibleonscreennotifier3d"><inline classes="std std-ref">VisibleOnScreenNotifier3D</inline></reference>, <reference internal="True" refuri="class_voxelgi#class-voxelgi"><inline classes="std std-ref">VoxelGI</inline></reference></paragraph>
        <paragraph>所有可视 3D 节点的父节点。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph><strong>VisualInstance3D</strong> 可用于将资源连接到视觉表示。所有的可视化 3D 节点都继承自 <strong>VisualInstance3D</strong>。一般来说，你不应该直接访问 <strong>VisualInstance3D</strong> 的属性，因为它们是由继承自 <strong>VisualInstance3D</strong> 的节点访问和管理的。<strong>VisualInstance3D</strong> 是 <reference internal="True" refuri="class_renderingserver#class-renderingserver"><inline classes="std std-ref">RenderingServer</inline></reference> 实例的节点表示。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="27"></colspec>
                    <colspec colwidth="89"></colspec>
                    <colspec colwidth="9"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-visualinstance3d-property-layers"><inline classes="std std-ref">layers</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-visualinstance3d-property-sorting-offset"><inline classes="std std-ref">sorting_offset</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-visualinstance3d-property-sorting-use-aabb-center"><inline classes="std std-ref">sorting_use_aabb_center</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="25"></colspec>
                    <colspec colwidth="159"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_aabb#class-aabb"><inline classes="std std-ref">AABB</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-visualinstance3d-private-method-get-aabb"><inline classes="std std-ref">_get_aabb</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_aabb#class-aabb"><inline classes="std std-ref">AABB</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-visualinstance3d-method-get-aabb"><inline classes="std std-ref">get_aabb</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-visualinstance3d-method-get-base"><inline classes="std std-ref">get_base</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-visualinstance3d-method-get-instance"><inline classes="std std-ref">get_instance</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-visualinstance3d-method-get-layer-mask-value"><inline classes="std std-ref">get_layer_mask_value</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> layer_number <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-visualinstance3d-method-set-base"><inline classes="std std-ref">set_base</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> base <strong>)</strong></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-visualinstance3d-method-set-layer-mask-value"><inline classes="std std-ref">set_layer_mask_value</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> layer_number, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> value <strong>)</strong></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="属性说明">
            <title>属性说明</title>
            <target refid="class-visualinstance3d-property-layers"></target>
            <paragraph classes="classref-property" ids="class-visualinstance3d-property-layers" names="class_visualinstance3d_property_layers"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>layers</strong> = <literal>1</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_layer_mask</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_layer_mask</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>绘制该 <strong>VisualInstance3D</strong> 的渲染层。</paragraph>
            <paragraph><reference internal="True" refuri="class_camera3d#class-camera3d"><inline classes="std std-ref">Camera3D</inline></reference> 的剔除掩码包含该 <strong>VisualInstance3D</strong> 所设置的任何渲染层时，该对象才在该相机中可见。</paragraph>
            <paragraph>对于 <reference internal="True" refuri="class_light3d#class-light3d"><inline classes="std std-ref">Light3D</inline></reference>，可以用于控制指定的灯光能够影响哪些 <strong>VisualInstance3D</strong>。对于 <reference internal="True" refuri="class_gpuparticles3d#class-gpuparticles3d"><inline classes="std std-ref">GPUParticles3D</inline></reference>，可以用于控制哪些粒子受到吸引器的影响。对于 <reference internal="True" refuri="class_decal#class-decal"><inline classes="std std-ref">Decal</inline></reference>，可以用于控制哪些 <strong>VisualInstance3D</strong> 受到指定贴花的影响。</paragraph>
            <paragraph>要在脚本中更加方便地调整 <reference internal="True" refid="class-visualinstance3d-property-layers"><inline classes="std std-ref">layers</inline></reference>，请使用 <reference internal="True" refid="class-visualinstance3d-method-get-layer-mask-value"><inline classes="std std-ref">get_layer_mask_value</inline></reference> 和 <reference internal="True" refid="class-visualinstance3d-method-set-layer-mask-value"><inline classes="std std-ref">set_layer_mask_value</inline></reference>。</paragraph>
            <paragraph><strong>注意：</strong><reference internal="True" refuri="class_voxelgi#class-voxelgi"><inline classes="std std-ref">VoxelGI</inline></reference>、SDFGI、<reference internal="True" refuri="class_lightmapgi#class-lightmapgi"><inline classes="std std-ref">LightmapGI</inline></reference> 在确定全局光照影响时始终会考虑所有渲染层。如果不希望这样，请将网格的 <reference internal="True" refuri="class_geometryinstance3d#class-geometryinstance3d-property-gi-mode"><inline classes="std std-ref">GeometryInstance3D.gi_mode</inline></reference> 设置为 <reference internal="True" refuri="class_geometryinstance3d#class-geometryinstance3d-constant-gi-mode-disabled"><inline classes="std std-ref">GeometryInstance3D.GI_MODE_DISABLED</inline></reference>，将灯光的 <reference internal="True" refuri="class_light3d#class-light3d-property-light-bake-mode"><inline classes="std std-ref">Light3D.light_bake_mode</inline></reference> 设置为 <reference internal="True" refuri="class_light3d#class-light3d-constant-bake-disabled"><inline classes="std std-ref">Light3D.BAKE_DISABLED</inline></reference>，这样就能从全局光照中剔除。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-visualinstance3d-property-sorting-offset"></target>
            <paragraph classes="classref-property" ids="class-visualinstance3d-property-sorting-offset" names="class_visualinstance3d_property_sorting_offset"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>sorting_offset</strong> = <literal>0.0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_sorting_offset</strong> <strong>(</strong> <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_sorting_offset</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>按深度排序时该 <strong>VisualInstance3D</strong> 的深度将调整的量。使用与引擎相同的单位（通常是米）。将其调整为更高的值，将使 <strong>VisualInstance3D</strong> 可靠地绘制在位于同一位置的其他 <strong>VisualInstance3D</strong> 之上。为确保它始终绘制在它周围的其他对象之上（不位于同一位置），请将值设置为大于该 <strong>VisualInstance3D</strong> 与附近其他 <strong>VisualInstance3D</strong> 之间的距离值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-visualinstance3d-property-sorting-use-aabb-center"></target>
            <paragraph classes="classref-property" ids="class-visualinstance3d-property-sorting-use-aabb-center" names="class_visualinstance3d_property_sorting_use_aabb_center"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>sorting_use_aabb_center</strong></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_sorting_use_aabb_center</strong> <strong>(</strong> <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_sorting_use_aabb_center</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则该对象会根据其 <reference internal="True" refuri="class_aabb#class-aabb"><inline classes="std std-ref">AABB</inline></reference> 中心点排序。否则会根据其全局位置排序。</paragraph>
            <paragraph>对 3D 模型而言，根据 <reference internal="True" refuri="class_aabb#class-aabb"><inline classes="std std-ref">AABB</inline></reference> 的中心点排序一般更为精确。使用 <reference internal="True" refuri="class_gpuparticles3d#class-gpuparticles3d"><inline classes="std std-ref">GPUParticles3D</inline></reference> 和 <reference internal="True" refuri="class_cpuparticles3d#class-cpuparticles3d"><inline classes="std std-ref">CPUParticles3D</inline></reference> 时，根据位置排序能够更好地控制绘制顺序。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="方法说明">
            <title>方法说明</title>
            <target refid="class-visualinstance3d-private-method-get-aabb"></target>
            <paragraph classes="classref-method" ids="class-visualinstance3d-private-method-get-aabb" names="class_visualinstance3d_private_method__get_aabb"><reference internal="True" refuri="class_aabb#class-aabb"><inline classes="std std-ref">AABB</inline></reference> <strong>_get_aabb</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <container classes="contribute">
                <paragraph>目前没有这个方法的描述。请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>！</paragraph>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-visualinstance3d-method-get-aabb"></target>
            <paragraph classes="classref-method" ids="class-visualinstance3d-method-get-aabb" names="class_visualinstance3d_method_get_aabb"><reference internal="True" refuri="class_aabb#class-aabb"><inline classes="std std-ref">AABB</inline></reference> <strong>get_aabb</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回此 <strong>VisualInstance3D</strong> 的 <reference internal="True" refuri="class_aabb#class-aabb"><inline classes="std std-ref">AABB</inline></reference>（也叫边界框）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-visualinstance3d-method-get-base"></target>
            <paragraph classes="classref-method" ids="class-visualinstance3d-method-get-base" names="class_visualinstance3d_method_get_base"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>get_base</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回与此 <strong>VisualInstance3D</strong> 相关联的资源的 RID。例如，如果该节点是 <reference internal="True" refuri="class_meshinstance3d#class-meshinstance3d"><inline classes="std std-ref">MeshInstance3D</inline></reference>，则会返回相关联的 <reference internal="True" refuri="class_mesh#class-mesh"><inline classes="std std-ref">Mesh</inline></reference> 的 RID。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-visualinstance3d-method-get-instance"></target>
            <paragraph classes="classref-method" ids="class-visualinstance3d-method-get-instance" names="class_visualinstance3d_method_get_instance"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>get_instance</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回这个实例的 RID。这个 RID 与 <reference internal="True" refuri="class_renderingserver#class-renderingserver-method-instance-create"><inline classes="std std-ref">RenderingServer.instance_create</inline></reference> 返回的 RID 相同。如果你想为这个 <strong>VisualInstance3D</strong> 直接调用 <reference internal="True" refuri="class_renderingserver#class-renderingserver"><inline classes="std std-ref">RenderingServer</inline></reference> 函数，就需要这个 RID。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-visualinstance3d-method-get-layer-mask-value"></target>
            <paragraph classes="classref-method" ids="class-visualinstance3d-method-get-layer-mask-value" names="class_visualinstance3d_method_get_layer_mask_value"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_layer_mask_value</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> layer_number <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回是否启用了 <reference internal="True" refid="class-visualinstance3d-property-layers"><inline classes="std std-ref">layers</inline></reference> 的指定层，该层由一个介于 1 和 20 之间的 <literal>layer_number</literal> 指定。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-visualinstance3d-method-set-base"></target>
            <paragraph classes="classref-method" ids="class-visualinstance3d-method-set-base" names="class_visualinstance3d_method_set_base">void <strong>set_base</strong> <strong>(</strong> <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> base <strong>)</strong></paragraph>
            <paragraph>设置由该 <strong>VisualInstance3D</strong> 实例化的资源，这将改变引擎在底层对该 <strong>VisualInstance3D</strong> 的处理方式。相当于 <reference internal="True" refuri="class_renderingserver#class-renderingserver-method-instance-set-base"><inline classes="std std-ref">RenderingServer.instance_set_base</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-visualinstance3d-method-set-layer-mask-value"></target>
            <paragraph classes="classref-method" ids="class-visualinstance3d-method-set-layer-mask-value" names="class_visualinstance3d_method_set_layer_mask_value">void <strong>set_layer_mask_value</strong> <strong>(</strong> <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> layer_number, <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> value <strong>)</strong></paragraph>
            <paragraph>基于 <literal>value</literal>，启用或禁用 <reference internal="True" refid="class-visualinstance3d-property-layers"><inline classes="std std-ref">layers</inline></reference> 中的指定层，该层由一个介于 1 和 20 之间的给定 <literal>layer_number</literal> 指定。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，所以可以直接使用类名调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_renderdata.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/RenderData.xml.</comment>
    <target refid="class-renderdata"></target>
    <section ids="renderdata class-renderdata" names="renderdata class_renderdata">
        <title>RenderData</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph><strong>派生：</strong> <reference internal="True" refuri="class_renderdataextension#class-renderdataextension"><inline classes="std std-ref">RenderDataExtension</inline></reference>, <reference internal="True" refuri="class_renderdatard#class-renderdatard"><inline classes="std std-ref">RenderDataRD</inline></reference></paragraph>
        <paragraph>抽象渲染数据对象，存放的是与渲染视口中某一帧相关的帧数据。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>抽象渲染数据对象，渲染某一视口期间可用。</paragraph>
            <paragraph><strong>注意：</strong>这是内部渲染服务器对象，请勿在脚本中实例化。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="53"></colspec>
                    <colspec colwidth="97"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-renderdata-method-get-camera-attributes"><inline classes="std std-ref">get_camera_attributes</inline></reference>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-renderdata-method-get-environment"><inline classes="std std-ref">get_environment</inline></reference>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_renderscenebuffers#class-renderscenebuffers"><inline classes="std std-ref">RenderSceneBuffers</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-renderdata-method-get-render-scene-buffers"><inline classes="std std-ref">get_render_scene_buffers</inline></reference>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_renderscenedata#class-renderscenedata"><inline classes="std std-ref">RenderSceneData</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-renderdata-method-get-render-scene-data"><inline classes="std std-ref">get_render_scene_data</inline></reference>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="方法说明">
            <title>方法说明</title>
            <target refid="class-renderdata-method-get-camera-attributes"></target>
            <paragraph classes="classref-method" ids="class-renderdata-method-get-camera-attributes" names="class_renderdata_method_get_camera_attributes"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>get_camera_attributes</strong>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-renderdata-method-get-camera-attributes"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回 <reference internal="True" refuri="class_renderingserver#class-renderingserver"><inline classes="std std-ref">RenderingServer</inline></reference> 中用来渲染这个视口的相机属性对象的 <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-renderdata-method-get-environment"></target>
            <paragraph classes="classref-method" ids="class-renderdata-method-get-environment" names="class_renderdata_method_get_environment"><reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference> <strong>get_environment</strong>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-renderdata-method-get-environment"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回 <reference internal="True" refuri="class_renderingserver#class-renderingserver"><inline classes="std std-ref">RenderingServer</inline></reference> 中用来渲染这个视口的环境对象的 <reference internal="True" refuri="class_rid#class-rid"><inline classes="std std-ref">RID</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-renderdata-method-get-render-scene-buffers"></target>
            <paragraph classes="classref-method" ids="class-renderdata-method-get-render-scene-buffers" names="class_renderdata_method_get_render_scene_buffers"><reference internal="True" refuri="class_renderscenebuffers#class-renderscenebuffers"><inline classes="std std-ref">RenderSceneBuffers</inline></reference> <strong>get_render_scene_buffers</strong>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-renderdata-method-get-render-scene-buffers"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回管理这个视口渲染的 <reference internal="True" refuri="class_renderscenebuffers#class-renderscenebuffers"><inline classes="std std-ref">RenderSceneBuffers</inline></reference> 对象。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-renderdata-method-get-render-scene-data"></target>
            <paragraph classes="classref-method" ids="class-renderdata-method-get-render-scene-data" names="class_renderdata_method_get_render_scene_data"><reference internal="True" refuri="class_renderscenedata#class-renderscenedata"><inline classes="std std-ref">RenderSceneData</inline></reference> <strong>get_render_scene_data</strong>() <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-renderdata-method-get-render-scene-data"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回管理这个帧场景数据的 <reference internal="True" refuri="class_renderscenedata#class-renderscenedata"><inline classes="std std-ref">RenderSceneData</inline></reference> 对象。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效运算符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列位标志构成位掩码的整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_editorscript.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/EditorScript.xml.</comment>
    <target refid="class-editorscript"></target>
    <section ids="editorscript class-editorscript" names="editorscript class_editorscript">
        <title>EditorScript</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>可用于为编辑器添加扩展功能的基础脚本。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>扩展该类并实现其 <reference internal="True" refid="class-editorscript-private-method-run"><inline classes="std std-ref">_run</inline></reference> 方法的脚本可以在编辑器运行时通过脚本编辑器的<strong>文件 &gt; 运行</strong>菜单选项（或按 <literal classes="kbd">Ctrl + Shift + X</literal>）执行。这对于向 Godot 添加自定义的编辑内功能很有用。对于更复杂的添加，请考虑改用 <reference internal="True" refuri="class_editorplugin#class-editorplugin"><inline classes="std std-ref">EditorPlugin</inline></reference>。</paragraph>
            <paragraph><strong>注意：</strong>扩展脚本需要启用 <literal>tool</literal> 工具模式。</paragraph>
            <paragraph><strong>示例脚本：</strong></paragraph>
            <container classes="sphinx-tabs" type="tab-element">
                <div aria-label="Tabbed content" role="tablist">
                    <button aria-controls="panel-0-R0RTY3JpcHQ=" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-0-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tab" tabindex="0">GDScript</button>
                    <button aria-controls="panel-0-QyM=" aria-selected="false" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-0-QyM=" name="QyM=" role="tab" tabindex="-1">C#</button>
                </div>
                <div aria-labelledby="tab-0-R0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-0-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve">@tool
extends EditorScript

func _run():
    print("Hello from the Godot Editor!")</literal_block>
                </div>
                <div aria-labelledby="tab-0-QyM=" classes="sphinx-tabs-panel code-tab group-tab" hidden="true" ids="panel-0-QyM=" name="QyM=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="csharp" linenos="False" xml:space="preserve">using Godot;

[Tool]
public partial class HelloEditor : EditorScript
{
    public override void _Run()
    {
        GD.Print("Hello from the Godot Editor!");
    }
}</literal_block>
                </div>
            </container>
            <paragraph><strong>注意：</strong>脚本在编辑器上下文中运行，这意味着输出在使用编辑器（stdout）启动的控制台窗口中可见，而不是通常的 Godot <strong>输出</strong>停靠面板。</paragraph>
            <paragraph><strong>注意：</strong>EditorScript 是 <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference>，这意味着它不再被引用时会被销毁。如果没有对脚本的引用，这可能会在异步操作期间导致错误。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="47"></colspec>
                    <colspec colwidth="101"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorscript-private-method-run"><inline classes="std std-ref">_run</inline></reference>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorscript-method-add-root-node"><inline classes="std std-ref">add_root_node</inline></reference>(node: <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_editorinterface#class-editorinterface"><inline classes="std std-ref">EditorInterface</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorscript-method-get-editor-interface"><inline classes="std std-ref">get_editor_interface</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorscript-method-get-scene"><inline classes="std std-ref">get_scene</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="方法说明">
            <title>方法说明</title>
            <target refid="class-editorscript-private-method-run"></target>
            <paragraph classes="classref-method" ids="class-editorscript-private-method-run" names="class_editorscript_private_method__run"><abbreviation explanation="无返回值。">void</abbreviation> <strong>_run</strong>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <reference internal="True" refid="class-editorscript-private-method-run"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当使用<strong>文件 &gt; 运行</strong>时，此方法由编辑器执行。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorscript-method-add-root-node"></target>
            <paragraph classes="classref-method" ids="class-editorscript-method-add-root-node" names="class_editorscript_method_add_root_node"><abbreviation explanation="无返回值。">void</abbreviation> <strong>add_root_node</strong>(node: <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference>) <reference internal="True" refid="class-editorscript-method-add-root-node"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>在编辑器上下文中，将 <literal>node</literal> 添加为根节点的子节点。</paragraph>
            <paragraph><strong>警告：</strong>该方法的实现目前已被禁用。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorscript-method-get-editor-interface"></target>
            <paragraph classes="classref-method" ids="class-editorscript-method-get-editor-interface" names="class_editorscript_method_get_editor_interface"><reference internal="True" refuri="class_editorinterface#class-editorinterface"><inline classes="std std-ref">EditorInterface</inline></reference> <strong>get_editor_interface</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-editorscript-method-get-editor-interface"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph><strong>已弃用：</strong> <reference internal="True" refuri="class_editorinterface#class-editorinterface"><inline classes="std std-ref">EditorInterface</inline></reference> is a global singleton and can be accessed directly by its name.</paragraph>
            <paragraph>返回 <reference internal="True" refuri="class_editorinterface#class-editorinterface"><inline classes="std std-ref">EditorInterface</inline></reference> 单例实例。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorscript-method-get-scene"></target>
            <paragraph classes="classref-method" ids="class-editorscript-method-get-scene" names="class_editorscript_method_get_scene"><reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>get_scene</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-editorscript-method-get-scene"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回编辑器的当前活动场景。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

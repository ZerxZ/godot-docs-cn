<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_shadermaterial.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/ShaderMaterial.xml.</comment>
    <target refid="class-shadermaterial"></target>
    <section ids="shadermaterial class-shadermaterial" names="shadermaterial class_shadermaterial">
        <title>ShaderMaterial</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_material#class-material"><inline classes="std std-ref">Material</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>由自定义 <reference internal="True" refuri="class_shader#class-shader"><inline classes="std std-ref">Shader</inline></reference> 程序定义的材质及其着色器参数的值。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>使用自定义 <reference internal="True" refuri="class_shader#class-shader"><inline classes="std std-ref">Shader</inline></reference> 程序来渲染可见项目（画布项目、网格、天空、雾）或处理粒子的材质。与其他材质相比，<strong>ShaderMaterial</strong> 可以更深入地控制生成的着色器代码。有关更多信息，请参阅下面的着色器文档索引。</paragraph>
            <paragraph>多个 <strong>ShaderMaterial</strong> 可以使用相同的着色器并为着色器 uniform 配置不同的值。</paragraph>
            <paragraph><strong>注意：</strong>出于性能原因，仅当 <reference internal="True" refuri="class_resource#class-resource-property-resource-name"><inline classes="std std-ref">Resource.resource_name</inline></reference> 更改时才会发出 <reference internal="True" refuri="class_resource#class-resource-signal-changed"><inline classes="std std-ref">Resource.changed</inline></reference> 信号。仅在编辑器中，它也会针对 <reference internal="True" refid="class-shadermaterial-property-shader"><inline classes="std std-ref">shader</inline></reference> 更改而发出。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference internal="True" refuri="../tutorials/shaders/index"><inline classes="doc">着色器文档索引</inline></reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="29"></colspec>
                    <colspec colwidth="53"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_shader#class-shader"><inline classes="std std-ref">Shader</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-shadermaterial-property-shader"><inline classes="std std-ref">shader</inline></reference></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id4" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="31"></colspec>
                    <colspec colwidth="170"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-shadermaterial-method-get-shader-parameter"><inline classes="std std-ref">get_shader_parameter</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference> param <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>void</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-shadermaterial-method-set-shader-parameter"><inline classes="std std-ref">set_shader_parameter</inline></reference> <strong>(</strong> <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference> param, <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> value <strong>)</strong></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="属性说明">
            <title>属性说明</title>
            <target refid="class-shadermaterial-property-shader"></target>
            <paragraph classes="classref-property" ids="class-shadermaterial-property-shader" names="class_shadermaterial_property_shader"><reference internal="True" refuri="class_shader#class-shader"><inline classes="std std-ref">Shader</inline></reference> <strong>shader</strong></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_shader</strong> <strong>(</strong> <reference internal="True" refuri="class_shader#class-shader"><inline classes="std std-ref">Shader</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_shader#class-shader"><inline classes="std std-ref">Shader</inline></reference> <strong>get_shader</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>用于渲染此材质的 <reference internal="True" refuri="class_shader#class-shader"><inline classes="std std-ref">Shader</inline></reference> 程序。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="方法说明">
            <title>方法说明</title>
            <target refid="class-shadermaterial-method-get-shader-parameter"></target>
            <paragraph classes="classref-method" ids="class-shadermaterial-method-get-shader-parameter" names="class_shadermaterial_method_get_shader_parameter"><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> <strong>get_shader_parameter</strong> <strong>(</strong> <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference> param <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>返回在着色器中此 uniform 材质的当前值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-shadermaterial-method-set-shader-parameter"></target>
            <paragraph classes="classref-method" ids="class-shadermaterial-method-set-shader-parameter" names="class_shadermaterial_method_set_shader_parameter">void <strong>set_shader_parameter</strong> <strong>(</strong> <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference> param, <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> value <strong>)</strong></paragraph>
            <paragraph>更改这个材质的着色器中为某个 uniform 设置的值。</paragraph>
            <paragraph><strong>注意：</strong><literal>param</literal> 大小写敏感，必须完全匹配代码中 uniform 的名称（不是检查器中首字母大写后的名称）。</paragraph>
            <paragraph><strong>注意：</strong>对着色器 uniform 的修改会在使用这个 <strong>ShaderMaterial</strong> 的所有实例上生效。要防止这种行为，请通过 <reference internal="True" refuri="class_geometryinstance3d#class-geometryinstance3d-method-set-instance-shader-parameter"><inline classes="std std-ref">GeometryInstance3D.set_instance_shader_parameter</inline></reference> 使用单实例 uniform，或者使用 <reference internal="True" refuri="class_resource#class-resource-method-duplicate"><inline classes="std std-ref">Resource.duplicate</inline></reference> 制作该 <strong>ShaderMaterial</strong> 的副本。单实例 uniform 可以更好地复用着色器，因此速度也更快，所以应该尽可能优先使用，而不是制作 <strong>ShaderMaterial</strong> 的副本。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，所以可以直接使用类名调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

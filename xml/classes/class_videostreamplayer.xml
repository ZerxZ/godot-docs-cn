<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_videostreamplayer.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/VideoStreamPlayer.xml.</comment>
    <target refid="class-videostreamplayer"></target>
    <section ids="videostreamplayer class-videostreamplayer" names="videostreamplayer class_videostreamplayer">
        <title>VideoStreamPlayer</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_control#class-control"><inline classes="std std-ref">Control</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_canvasitem#class-canvasitem"><inline classes="std std-ref">CanvasItem</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>用于播放视频的控件。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>用于播放 <reference internal="True" refuri="class_videostream#class-videostream"><inline classes="std std-ref">VideoStream</inline></reference> 资源的控件。</paragraph>
            <paragraph>支持的视频格式有 <reference name="Ogg Theora" refuri="https://www.theora.org/">Ogg Theora</reference>（<literal>.ogv</literal>，<reference internal="True" refuri="class_videostreamtheora#class-videostreamtheora"><inline classes="std std-ref">VideoStreamTheora</inline></reference>）以及任何通过 GDExtension 插件公开的格式。</paragraph>
            <paragraph><strong>警告：</strong>在 Web 上，视频播放<emphasis>会</emphasis>由于缺少特定于体系结构的汇编优化而表现不佳。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference internal="True" refuri="../tutorials/animation/playing_videos"><inline classes="doc">播放视频</inline></reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="39"></colspec>
                    <colspec colwidth="74"></colspec>
                    <colspec colwidth="15"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-videostreamplayer-property-audio-track"><inline classes="std std-ref">audio_track</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-videostreamplayer-property-autoplay"><inline classes="std std-ref">autoplay</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-videostreamplayer-property-buffering-msec"><inline classes="std std-ref">buffering_msec</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>500</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-videostreamplayer-property-bus"><inline classes="std std-ref">bus</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>&amp;"Master"</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-videostreamplayer-property-expand"><inline classes="std std-ref">expand</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-videostreamplayer-property-loop"><inline classes="std std-ref">loop</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-videostreamplayer-property-paused"><inline classes="std std-ref">paused</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_videostream#class-videostream"><inline classes="std std-ref">VideoStream</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-videostreamplayer-property-stream"><inline classes="std std-ref">stream</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-videostreamplayer-property-stream-position"><inline classes="std std-ref">stream_position</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-videostreamplayer-property-volume"><inline classes="std std-ref">volume</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-videostreamplayer-property-volume-db"><inline classes="std std-ref">volume_db</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id4" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="35"></colspec>
                    <colspec colwidth="90"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-videostreamplayer-method-get-stream-length"><inline classes="std std-ref">get_stream_length</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-videostreamplayer-method-get-stream-name"><inline classes="std std-ref">get_stream_name</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-videostreamplayer-method-get-video-texture"><inline classes="std std-ref">get_video_texture</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-videostreamplayer-method-is-playing"><inline classes="std std-ref">is_playing</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-videostreamplayer-method-play"><inline classes="std std-ref">play</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-videostreamplayer-method-stop"><inline classes="std std-ref">stop</inline></reference>()</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="信号">
            <title>信号</title>
            <target refid="class-videostreamplayer-signal-finished"></target>
            <paragraph classes="classref-signal" ids="class-videostreamplayer-signal-finished" names="class_videostreamplayer_signal_finished"><strong>finished</strong>() <reference internal="True" refid="class-videostreamplayer-signal-finished"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>播放结束时触发。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="属性说明">
            <title>属性说明</title>
            <target refid="class-videostreamplayer-property-audio-track"></target>
            <paragraph classes="classref-property" ids="class-videostreamplayer-property-audio-track" names="class_videostreamplayer_property_audio_track"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>audio_track</strong> = <literal>0</literal> <reference internal="True" refid="class-videostreamplayer-property-audio-track"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_audio_track</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_audio_track</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>要播放的嵌入式音轨。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-videostreamplayer-property-autoplay"></target>
            <paragraph classes="classref-property" ids="class-videostreamplayer-property-autoplay" names="class_videostreamplayer_property_autoplay"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>autoplay</strong> = <literal>false</literal> <reference internal="True" refid="class-videostreamplayer-property-autoplay"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_autoplay</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>has_autoplay</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，当场景加载时开始播放。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-videostreamplayer-property-buffering-msec"></target>
            <paragraph classes="classref-property" ids="class-videostreamplayer-property-buffering-msec" names="class_videostreamplayer_property_buffering_msec"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>buffering_msec</strong> = <literal>500</literal> <reference internal="True" refid="class-videostreamplayer-property-buffering-msec"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_buffering_msec</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_buffering_msec</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>播放时存储在缓冲区的时间，以毫秒计。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-videostreamplayer-property-bus"></target>
            <paragraph classes="classref-property" ids="class-videostreamplayer-property-bus" names="class_videostreamplayer_property_bus"><reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference> <strong>bus</strong> = <literal>&amp;"Master"</literal> <reference internal="True" refid="class-videostreamplayer-property-bus"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_bus</strong>(value: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference> <strong>get_bus</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>用于声音播放的音频总线。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-videostreamplayer-property-expand"></target>
            <paragraph classes="classref-property" ids="class-videostreamplayer-property-expand" names="class_videostreamplayer_property_expand"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>expand</strong> = <literal>false</literal> <reference internal="True" refid="class-videostreamplayer-property-expand"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_expand</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>has_expand</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，视频会缩放到控件的尺寸。否则，控件的最小尺寸将被自动调整以匹配视频流的尺寸。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-videostreamplayer-property-loop"></target>
            <paragraph classes="classref-property" ids="class-videostreamplayer-property-loop" names="class_videostreamplayer_property_loop"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>loop</strong> = <literal>false</literal> <reference internal="True" refid="class-videostreamplayer-property-loop"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_loop</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>has_loop</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，该视频将在到达末尾时重新开始。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-videostreamplayer-property-paused"></target>
            <paragraph classes="classref-property" ids="class-videostreamplayer-property-paused" names="class_videostreamplayer_property_paused"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>paused</strong> = <literal>false</literal> <reference internal="True" refid="class-videostreamplayer-property-paused"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_paused</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_paused</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则暂停视频。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-videostreamplayer-property-stream"></target>
            <paragraph classes="classref-property" ids="class-videostreamplayer-property-stream" names="class_videostreamplayer_property_stream"><reference internal="True" refuri="class_videostream#class-videostream"><inline classes="std std-ref">VideoStream</inline></reference> <strong>stream</strong> <reference internal="True" refid="class-videostreamplayer-property-stream"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_stream</strong>(value: <reference internal="True" refuri="class_videostream#class-videostream"><inline classes="std std-ref">VideoStream</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_videostream#class-videostream"><inline classes="std std-ref">VideoStream</inline></reference> <strong>get_stream</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>指定的视频流。支持的格式见描述。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-videostreamplayer-property-stream-position"></target>
            <paragraph classes="classref-property" ids="class-videostreamplayer-property-stream-position" names="class_videostreamplayer_property_stream_position"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>stream_position</strong> <reference internal="True" refid="class-videostreamplayer-property-stream-position"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_stream_position</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_stream_position</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>流的当前位置，单位：秒。</paragraph>
            <paragraph><strong>注意：</strong>更改此值不会产生任何影响，因为除了由 GDExtension 插件实现的视频格式，搜索定位尚未被实现。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-videostreamplayer-property-volume"></target>
            <paragraph classes="classref-property" ids="class-videostreamplayer-property-volume" names="class_videostreamplayer_property_volume"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>volume</strong> <reference internal="True" refid="class-videostreamplayer-property-volume"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_volume</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_volume</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>音频音量为线性值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-videostreamplayer-property-volume-db"></target>
            <paragraph classes="classref-property" ids="class-videostreamplayer-property-volume-db" names="class_videostreamplayer_property_volume_db"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>volume_db</strong> = <literal>0.0</literal> <reference internal="True" refid="class-videostreamplayer-property-volume-db"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_volume_db</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_volume_db</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>音频音量，单位是 dB。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id7" names="方法说明">
            <title>方法说明</title>
            <target refid="class-videostreamplayer-method-get-stream-length"></target>
            <paragraph classes="classref-method" ids="class-videostreamplayer-method-get-stream-length" names="class_videostreamplayer_method_get_stream_length"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_stream_length</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-videostreamplayer-method-get-stream-length"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当前流的长度，单位：秒。</paragraph>
            <paragraph><strong>注意：</strong>对于 <reference internal="True" refuri="class_videostreamtheora#class-videostreamtheora"><inline classes="std std-ref">VideoStreamTheora</inline></reference> 流（Godot 支持的内置格式），该值将始终为零，因为获取流长度尚未实现。GDExtension 插件实现的视频格式可能会支持该功能。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-videostreamplayer-method-get-stream-name"></target>
            <paragraph classes="classref-method" ids="class-videostreamplayer-method-get-stream-name" names="class_videostreamplayer_method_get_stream_name"><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>get_stream_name</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-videostreamplayer-method-get-stream-name"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回视频流的名称，如果没有指定视频流，则返回 <literal>"&lt;No Stream&gt;"</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-videostreamplayer-method-get-video-texture"></target>
            <paragraph classes="classref-method" ids="class-videostreamplayer-method-get-video-texture" names="class_videostreamplayer_method_get_video_texture"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>get_video_texture</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-videostreamplayer-method-get-video-texture"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将当前帧作为 <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> 返回。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-videostreamplayer-method-is-playing"></target>
            <paragraph classes="classref-method" ids="class-videostreamplayer-method-is-playing" names="class_videostreamplayer_method_is_playing"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_playing</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-videostreamplayer-method-is-playing"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果视频正在播放，返回 <literal>true</literal>。</paragraph>
            <paragraph><strong>注意：</strong>如果在播放过程中暂停，视频仍被认为在播放。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-videostreamplayer-method-play"></target>
            <paragraph classes="classref-method" ids="class-videostreamplayer-method-play" names="class_videostreamplayer_method_play"><abbreviation explanation="无返回值。">void</abbreviation> <strong>play</strong>() <reference internal="True" refid="class-videostreamplayer-method-play"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>从头开始播放视频。如果视频处于暂停状态，不会取消暂停。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-videostreamplayer-method-stop"></target>
            <paragraph classes="classref-method" ids="class-videostreamplayer-method-stop" names="class_videostreamplayer_method_stop"><abbreviation explanation="无返回值。">void</abbreviation> <strong>stop</strong>() <reference internal="True" refid="class-videostreamplayer-method-stop"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>停止视频播放并将视频流位置设置为 0。</paragraph>
            <paragraph><strong>注意：</strong>虽然视频流位置将被设置为 0，但视频流的第一帧不会成为当前帧。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

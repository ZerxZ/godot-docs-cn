<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_gltfaccessor.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/modules/gltf/doc_classes/GLTFAccessor.xml.</comment>
    <target refid="class-gltfaccessor"></target>
    <section ids="gltfaccessor class-gltfaccessor" names="gltfaccessor class_gltfaccessor">
        <title>GLTFAccessor</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>代表 GLTF 访问器。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>GLTFAccessor 是一个表示 GLTF 的数据结构，一个可以在 <literal>"accessors"</literal> 数组中找到的 <literal>accessor</literal>。缓冲区是二进制数据的 blob。缓冲区视图是缓冲区的一个切片。访问器是缓冲区视图中数据的类型化解释。</paragraph>
            <paragraph>大多数存储在 GLTF 中的自定义数据不需要访问器，只需要缓冲区视图（请参阅 <reference internal="True" refuri="class_gltfbufferview#class-gltfbufferview"><inline classes="std std-ref">GLTFBufferView</inline></reference>）。访问器适用于更高级的用例，例如为 GPU 编码的交错网格数据。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference name="Khronos glTF 规范中的缓冲区、BufferView 和访问器" refuri="https://github.com/KhronosGroup/glTF-Tutorials/blob/master/gltfTutorial/gltfTutorial_005_BuffersBufferViewsAccessors.md">Khronos glTF 规范中的缓冲区、BufferView 和访问器</reference></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="../tutorials/io/runtime_file_loading_and_saving"><inline classes="doc">运行时文件加载与保存</inline></reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="53"></colspec>
                    <colspec colwidth="97"></colspec>
                    <colspec colwidth="26"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gltfaccessor-property-accessor-type"><inline classes="std std-ref">accessor_type</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gltfaccessor-property-buffer-view"><inline classes="std std-ref">buffer_view</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>-1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gltfaccessor-property-byte-offset"><inline classes="std std-ref">byte_offset</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gltfaccessor-property-component-type"><inline classes="std std-ref">component_type</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gltfaccessor-property-count"><inline classes="std std-ref">count</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_packedfloat64array#class-packedfloat64array"><inline classes="std std-ref">PackedFloat64Array</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gltfaccessor-property-max"><inline classes="std std-ref">max</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>PackedFloat64Array()</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_packedfloat64array#class-packedfloat64array"><inline classes="std std-ref">PackedFloat64Array</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gltfaccessor-property-min"><inline classes="std std-ref">min</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>PackedFloat64Array()</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gltfaccessor-property-normalized"><inline classes="std std-ref">normalized</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gltfaccessor-property-sparse-count"><inline classes="std std-ref">sparse_count</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gltfaccessor-property-sparse-indices-buffer-view"><inline classes="std std-ref">sparse_indices_buffer_view</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gltfaccessor-property-sparse-indices-byte-offset"><inline classes="std std-ref">sparse_indices_byte_offset</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gltfaccessor-property-sparse-indices-component-type"><inline classes="std std-ref">sparse_indices_component_type</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gltfaccessor-property-sparse-values-buffer-view"><inline classes="std std-ref">sparse_values_buffer_view</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gltfaccessor-property-sparse-values-byte-offset"><inline classes="std std-ref">sparse_values_byte_offset</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gltfaccessor-property-type"><inline classes="std std-ref">type</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="属性说明">
            <title>属性说明</title>
            <target refid="class-gltfaccessor-property-accessor-type"></target>
            <paragraph classes="classref-property" ids="class-gltfaccessor-property-accessor-type" names="class_gltfaccessor_property_accessor_type"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>accessor_type</strong> = <literal>0</literal> <reference internal="True" refid="class-gltfaccessor-property-accessor-type"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_accessor_type</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_accessor_type</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>The GLTF accessor type as an enum. Possible values are 0 for "SCALAR", 1 for "VEC2", 2 for "VEC3", 3 for "VEC4", 4 for "MAT2", 5 for "MAT3", and 6 for "MAT4".</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gltfaccessor-property-buffer-view"></target>
            <paragraph classes="classref-property" ids="class-gltfaccessor-property-buffer-view" names="class_gltfaccessor_property_buffer_view"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>buffer_view</strong> = <literal>-1</literal> <reference internal="True" refid="class-gltfaccessor-property-buffer-view"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_buffer_view</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_buffer_view</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>该访问器正在引用的缓冲区视图的索引。如果为 <literal>-1</literal>，则该访问器未引用任何缓冲区视图。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gltfaccessor-property-byte-offset"></target>
            <paragraph classes="classref-property" ids="class-gltfaccessor-property-byte-offset" names="class_gltfaccessor_property_byte_offset"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>byte_offset</strong> = <literal>0</literal> <reference internal="True" refid="class-gltfaccessor-property-byte-offset"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_byte_offset</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_byte_offset</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>The offset relative to the start of the buffer view in bytes.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gltfaccessor-property-component-type"></target>
            <paragraph classes="classref-property" ids="class-gltfaccessor-property-component-type" names="class_gltfaccessor_property_component_type"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>component_type</strong> = <literal>0</literal> <reference internal="True" refid="class-gltfaccessor-property-component-type"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_component_type</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_component_type</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>The GLTF component type as an enum. Possible values are 5120 for "BYTE", 5121 for "UNSIGNED_BYTE", 5122 for "SHORT", 5123 for "UNSIGNED_SHORT", 5125 for "UNSIGNED_INT", and 5126 for "FLOAT". A value of 5125 or "UNSIGNED_INT" must not be used for any accessor that is not referenced by mesh.primitive.indices.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gltfaccessor-property-count"></target>
            <paragraph classes="classref-property" ids="class-gltfaccessor-property-count" names="class_gltfaccessor_property_count"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>count</strong> = <literal>0</literal> <reference internal="True" refid="class-gltfaccessor-property-count"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_count</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_count</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>The number of elements referenced by this accessor.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gltfaccessor-property-max"></target>
            <paragraph classes="classref-property" ids="class-gltfaccessor-property-max" names="class_gltfaccessor_property_max"><reference internal="True" refuri="class_packedfloat64array#class-packedfloat64array"><inline classes="std std-ref">PackedFloat64Array</inline></reference> <strong>max</strong> = <literal>PackedFloat64Array()</literal> <reference internal="True" refid="class-gltfaccessor-property-max"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_max</strong>(value: <reference internal="True" refuri="class_packedfloat64array#class-packedfloat64array"><inline classes="std std-ref">PackedFloat64Array</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_packedfloat64array#class-packedfloat64array"><inline classes="std std-ref">PackedFloat64Array</inline></reference> <strong>get_max</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>Maximum value of each component in this accessor.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gltfaccessor-property-min"></target>
            <paragraph classes="classref-property" ids="class-gltfaccessor-property-min" names="class_gltfaccessor_property_min"><reference internal="True" refuri="class_packedfloat64array#class-packedfloat64array"><inline classes="std std-ref">PackedFloat64Array</inline></reference> <strong>min</strong> = <literal>PackedFloat64Array()</literal> <reference internal="True" refid="class-gltfaccessor-property-min"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_min</strong>(value: <reference internal="True" refuri="class_packedfloat64array#class-packedfloat64array"><inline classes="std std-ref">PackedFloat64Array</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_packedfloat64array#class-packedfloat64array"><inline classes="std std-ref">PackedFloat64Array</inline></reference> <strong>get_min</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>Minimum value of each component in this accessor.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gltfaccessor-property-normalized"></target>
            <paragraph classes="classref-property" ids="class-gltfaccessor-property-normalized" names="class_gltfaccessor_property_normalized"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>normalized</strong> = <literal>false</literal> <reference internal="True" refid="class-gltfaccessor-property-normalized"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_normalized</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_normalized</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>Specifies whether integer data values are normalized before usage.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gltfaccessor-property-sparse-count"></target>
            <paragraph classes="classref-property" ids="class-gltfaccessor-property-sparse-count" names="class_gltfaccessor_property_sparse_count"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>sparse_count</strong> = <literal>0</literal> <reference internal="True" refid="class-gltfaccessor-property-sparse-count"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_sparse_count</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_sparse_count</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>Number of deviating accessor values stored in the sparse array.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gltfaccessor-property-sparse-indices-buffer-view"></target>
            <paragraph classes="classref-property" ids="class-gltfaccessor-property-sparse-indices-buffer-view" names="class_gltfaccessor_property_sparse_indices_buffer_view"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>sparse_indices_buffer_view</strong> = <literal>0</literal> <reference internal="True" refid="class-gltfaccessor-property-sparse-indices-buffer-view"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_sparse_indices_buffer_view</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_sparse_indices_buffer_view</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>The index of the buffer view with sparse indices. The referenced buffer view MUST NOT have its target or byteStride properties defined. The buffer view and the optional byteOffset MUST be aligned to the componentType byte length.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gltfaccessor-property-sparse-indices-byte-offset"></target>
            <paragraph classes="classref-property" ids="class-gltfaccessor-property-sparse-indices-byte-offset" names="class_gltfaccessor_property_sparse_indices_byte_offset"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>sparse_indices_byte_offset</strong> = <literal>0</literal> <reference internal="True" refid="class-gltfaccessor-property-sparse-indices-byte-offset"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_sparse_indices_byte_offset</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_sparse_indices_byte_offset</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>The offset relative to the start of the buffer view in bytes.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gltfaccessor-property-sparse-indices-component-type"></target>
            <paragraph classes="classref-property" ids="class-gltfaccessor-property-sparse-indices-component-type" names="class_gltfaccessor_property_sparse_indices_component_type"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>sparse_indices_component_type</strong> = <literal>0</literal> <reference internal="True" refid="class-gltfaccessor-property-sparse-indices-component-type"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_sparse_indices_component_type</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_sparse_indices_component_type</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>The indices component data type as an enum. Possible values are 5121 for "UNSIGNED_BYTE", 5123 for "UNSIGNED_SHORT", and 5125 for "UNSIGNED_INT".</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gltfaccessor-property-sparse-values-buffer-view"></target>
            <paragraph classes="classref-property" ids="class-gltfaccessor-property-sparse-values-buffer-view" names="class_gltfaccessor_property_sparse_values_buffer_view"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>sparse_values_buffer_view</strong> = <literal>0</literal> <reference internal="True" refid="class-gltfaccessor-property-sparse-values-buffer-view"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_sparse_values_buffer_view</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_sparse_values_buffer_view</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>The index of the bufferView with sparse values. The referenced buffer view MUST NOT have its target or byteStride properties defined.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gltfaccessor-property-sparse-values-byte-offset"></target>
            <paragraph classes="classref-property" ids="class-gltfaccessor-property-sparse-values-byte-offset" names="class_gltfaccessor_property_sparse_values_byte_offset"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>sparse_values_byte_offset</strong> = <literal>0</literal> <reference internal="True" refid="class-gltfaccessor-property-sparse-values-byte-offset"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_sparse_values_byte_offset</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_sparse_values_byte_offset</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>The offset relative to the start of the bufferView in bytes.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gltfaccessor-property-type"></target>
            <paragraph classes="classref-property" ids="class-gltfaccessor-property-type" names="class_gltfaccessor_property_type"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>type</strong> = <literal>0</literal> <reference internal="True" refid="class-gltfaccessor-property-type"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_type</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_type</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph><strong>已弃用：</strong> Use <reference internal="True" refid="class-gltfaccessor-property-accessor-type"><inline classes="std std-ref">accessor_type</inline></reference> instead.</paragraph>
            <paragraph>The GLTF accessor type as an enum. Use <reference internal="True" refid="class-gltfaccessor-property-accessor-type"><inline classes="std std-ref">accessor_type</inline></reference> instead.</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

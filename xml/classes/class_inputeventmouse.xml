<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_inputeventmouse.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/InputEventMouse.xml.</comment>
    <target refid="class-inputeventmouse"></target>
    <section ids="inputeventmouse class-inputeventmouse" names="inputeventmouse class_inputeventmouse">
        <title>InputEventMouse</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_inputeventwithmodifiers#class-inputeventwithmodifiers"><inline classes="std std-ref">InputEventWithModifiers</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_inputeventfromwindow#class-inputeventfromwindow"><inline classes="std std-ref">InputEventFromWindow</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_inputevent#class-inputevent"><inline classes="std std-ref">InputEvent</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph><strong>派生：</strong> <reference internal="True" refuri="class_inputeventmousebutton#class-inputeventmousebutton"><inline classes="std std-ref">InputEventMouseButton</inline></reference>, <reference internal="True" refuri="class_inputeventmousemotion#class-inputeventmousemotion"><inline classes="std std-ref">InputEventMouseMotion</inline></reference></paragraph>
        <paragraph>鼠标事件的基本输入事件类型。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>存储与鼠标事件相关的通用信息。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference internal="True" refuri="../tutorials/inputs/inputevent"><inline classes="doc">使用 InputEvent</inline></reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="73"></colspec>
                    <colspec colwidth="72"></colspec>
                    <colspec colwidth="19"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="这个值是由下列位标志构成位掩码的整数。">BitField</abbreviation>[<reference internal="True" refuri="class_@globalscope#enum-globalscope-mousebuttonmask"><inline classes="std std-ref">MouseButtonMask</inline></reference>]</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-inputeventmouse-property-button-mask"><inline classes="std std-ref">button_mask</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-inputeventmouse-property-global-position"><inline classes="std std-ref">global_position</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Vector2(0, 0)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-inputeventmouse-property-position"><inline classes="std std-ref">position</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Vector2(0, 0)</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="属性说明">
            <title>属性说明</title>
            <target refid="class-inputeventmouse-property-button-mask"></target>
            <paragraph classes="classref-property" ids="class-inputeventmouse-property-button-mask" names="class_inputeventmouse_property_button_mask"><abbreviation explanation="这个值是由下列位标志构成位掩码的整数。">BitField</abbreviation>[<reference internal="True" refuri="class_@globalscope#enum-globalscope-mousebuttonmask"><inline classes="std std-ref">MouseButtonMask</inline></reference>] <strong>button_mask</strong> = <literal>0</literal> <reference internal="True" refid="class-inputeventmouse-property-button-mask"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_button_mask</strong>(value: <abbreviation explanation="这个值是由下列位标志构成位掩码的整数。">BitField</abbreviation>[<reference internal="True" refuri="class_@globalscope#enum-globalscope-mousebuttonmask"><inline classes="std std-ref">MouseButtonMask</inline></reference>])</paragraph>
                </list_item>
                <list_item>
                    <paragraph><abbreviation explanation="这个值是由下列位标志构成位掩码的整数。">BitField</abbreviation>[<reference internal="True" refuri="class_@globalscope#enum-globalscope-mousebuttonmask"><inline classes="std std-ref">MouseButtonMask</inline></reference>] <strong>get_button_mask</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>鼠标按键掩码标识符，<reference internal="True" refuri="class_@globalscope#enum-globalscope-mousebutton"><inline classes="std std-ref">MouseButton</inline></reference> 按钮掩码或将其按位组合。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-inputeventmouse-property-global-position"></target>
            <paragraph classes="classref-property" ids="class-inputeventmouse-property-global-position" names="class_inputeventmouse_property_global_position"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>global_position</strong> = <literal>Vector2(0, 0)</literal> <reference internal="True" refid="class-inputeventmouse-property-global-position"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_global_position</strong>(value: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>get_global_position</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>在 <reference internal="True" refuri="class_node#class-node-private-method-input"><inline classes="std std-ref">Node._input</inline></reference> 或 <reference internal="True" refuri="class_node#class-node-private-method-unhandled-input"><inline classes="std std-ref">Node._unhandled_input</inline></reference> 中获取时，返回根 <reference internal="True" refuri="class_viewport#class-viewport"><inline classes="std std-ref">Viewport</inline></reference> 中鼠标的位置，使用根 <reference internal="True" refuri="class_viewport#class-viewport"><inline classes="std std-ref">Viewport</inline></reference> 的坐标系。</paragraph>
            <paragraph>在 <reference internal="True" refuri="class_control#class-control-private-method-gui-input"><inline classes="std std-ref">Control._gui_input</inline></reference> 中获取时，返回该 <reference internal="True" refuri="class_control#class-control"><inline classes="std std-ref">Control</inline></reference> 所在的 <reference internal="True" refuri="class_canvaslayer#class-canvaslayer"><inline classes="std std-ref">CanvasLayer</inline></reference> 中鼠标的位置，使用该 <reference internal="True" refuri="class_canvaslayer#class-canvaslayer"><inline classes="std std-ref">CanvasLayer</inline></reference> 的坐标系。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-inputeventmouse-property-position"></target>
            <paragraph classes="classref-property" ids="class-inputeventmouse-property-position" names="class_inputeventmouse_property_position"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>position</strong> = <literal>Vector2(0, 0)</literal> <reference internal="True" refid="class-inputeventmouse-property-position"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_position</strong>(value: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>get_position</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>在 <reference internal="True" refuri="class_node#class-node-private-method-input"><inline classes="std std-ref">Node._input</inline></reference> 或 <reference internal="True" refuri="class_node#class-node-private-method-unhandled-input"><inline classes="std std-ref">Node._unhandled_input</inline></reference> 中获取时，返回该 <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> 所在 <reference internal="True" refuri="class_viewport#class-viewport"><inline classes="std std-ref">Viewport</inline></reference> 中鼠标的位置，使用该 <reference internal="True" refuri="class_viewport#class-viewport"><inline classes="std std-ref">Viewport</inline></reference> 的坐标系。</paragraph>
            <paragraph>在 <reference internal="True" refuri="class_control#class-control-private-method-gui-input"><inline classes="std std-ref">Control._gui_input</inline></reference> 中获取时，返回该 <reference internal="True" refuri="class_control#class-control"><inline classes="std std-ref">Control</inline></reference> 中鼠标的位置，使用该 <reference internal="True" refuri="class_control#class-control"><inline classes="std std-ref">Control</inline></reference> 的坐标系。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效运算符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列位标志构成位掩码的整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_packetpeerdtls.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/PacketPeerDTLS.xml.</comment>
    <target refid="class-packetpeerdtls"></target>
    <section ids="packetpeerdtls class-packetpeerdtls" names="packetpeerdtls class_packetpeerdtls">
        <title>PacketPeerDTLS</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_packetpeer#class-packetpeer"><inline classes="std std-ref">PacketPeer</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>DTLS 数据包客户端。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>这个类表示 DTLS 对等体连接。它可以用来连接到 DTLS 服务器，由 <reference internal="True" refuri="class_dtlsserver#class-dtlsserver-method-take-connection"><inline classes="std std-ref">DTLSServer.take_connection</inline></reference> 返回。</paragraph>
            <paragraph><strong>注意：</strong>导出到 Android 时，在导出项目或使用一键部署前，请确保在 Android 导出预设中启用 <literal>INTERNET</literal> 权限。否则，任何类型的网络通信都将被 Android 阻止。</paragraph>
            <paragraph><strong>警告：</strong>目前不支持 TLS 证书撤销和证书绑定。只要撤销的证书在其他方面有效，就会被接受。如果这是一个问题，可以使用有效期较短的自动管理证书。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="43"></colspec>
                    <colspec colwidth="233"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_@globalscope#enum-globalscope-error"><inline classes="std std-ref">Error</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-packetpeerdtls-method-connect-to-peer"><inline classes="std std-ref">connect_to_peer</inline></reference>(packet_peer: <reference internal="True" refuri="class_packetpeerudp#class-packetpeerudp"><inline classes="std std-ref">PacketPeerUDP</inline></reference>, hostname: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, client_options: <reference internal="True" refuri="class_tlsoptions#class-tlsoptions"><inline classes="std std-ref">TLSOptions</inline></reference> = null)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-packetpeerdtls-method-disconnect-from-peer"><inline classes="std std-ref">disconnect_from_peer</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-packetpeerdtls-status"><inline classes="std std-ref">Status</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-packetpeerdtls-method-get-status"><inline classes="std std-ref">get_status</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-packetpeerdtls-method-poll"><inline classes="std std-ref">poll</inline></reference>()</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="枚举">
            <title>枚举</title>
            <target refid="enum-packetpeerdtls-status"></target>
            <paragraph classes="classref-enumeration" ids="enum-packetpeerdtls-status" names="enum_packetpeerdtls_status">enum <strong>Status</strong>: <reference internal="True" refid="enum-packetpeerdtls-status"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-packetpeerdtls-constant-status-disconnected"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-packetpeerdtls-constant-status-disconnected" names="class_packetpeerdtls_constant_status_disconnected"><reference internal="True" refid="enum-packetpeerdtls-status"><inline classes="std std-ref">Status</inline></reference> <strong>STATUS_DISCONNECTED</strong> = <literal>0</literal></paragraph>
            <paragraph>表示已断开连接的 <strong>PacketPeerDTLS</strong> 的状态。</paragraph>
            <target refid="class-packetpeerdtls-constant-status-handshaking"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-packetpeerdtls-constant-status-handshaking" names="class_packetpeerdtls_constant_status_handshaking"><reference internal="True" refid="enum-packetpeerdtls-status"><inline classes="std std-ref">Status</inline></reference> <strong>STATUS_HANDSHAKING</strong> = <literal>1</literal></paragraph>
            <paragraph>表示当前正在与远程对等方进行握手的 <strong>PacketPeerDTLS</strong> 的状态。</paragraph>
            <target refid="class-packetpeerdtls-constant-status-connected"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-packetpeerdtls-constant-status-connected" names="class_packetpeerdtls_constant_status_connected"><reference internal="True" refid="enum-packetpeerdtls-status"><inline classes="std std-ref">Status</inline></reference> <strong>STATUS_CONNECTED</strong> = <literal>2</literal></paragraph>
            <paragraph>表示连接到远程对等方的 <strong>PacketPeerDTLS</strong> 的状态。</paragraph>
            <target refid="class-packetpeerdtls-constant-status-error"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-packetpeerdtls-constant-status-error" names="class_packetpeerdtls_constant_status_error"><reference internal="True" refid="enum-packetpeerdtls-status"><inline classes="std std-ref">Status</inline></reference> <strong>STATUS_ERROR</strong> = <literal>3</literal></paragraph>
            <paragraph>表示处于一般错误状态的 <strong>PacketPeerDTLS</strong> 的状态。</paragraph>
            <target refid="class-packetpeerdtls-constant-status-error-hostname-mismatch"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-packetpeerdtls-constant-status-error-hostname-mismatch" names="class_packetpeerdtls_constant_status_error_hostname_mismatch"><reference internal="True" refid="enum-packetpeerdtls-status"><inline classes="std std-ref">Status</inline></reference> <strong>STATUS_ERROR_HOSTNAME_MISMATCH</strong> = <literal>4</literal></paragraph>
            <paragraph>显示主机提供的 DTLS 证书域与请求验证的域不匹配的错误状态。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="方法说明">
            <title>方法说明</title>
            <target refid="class-packetpeerdtls-method-connect-to-peer"></target>
            <paragraph classes="classref-method" ids="class-packetpeerdtls-method-connect-to-peer" names="class_packetpeerdtls_method_connect_to_peer"><reference internal="True" refuri="class_@globalscope#enum-globalscope-error"><inline classes="std std-ref">Error</inline></reference> <strong>connect_to_peer</strong>(packet_peer: <reference internal="True" refuri="class_packetpeerudp#class-packetpeerudp"><inline classes="std std-ref">PacketPeerUDP</inline></reference>, hostname: <reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference>, client_options: <reference internal="True" refuri="class_tlsoptions#class-tlsoptions"><inline classes="std std-ref">TLSOptions</inline></reference> = null) <reference internal="True" refid="class-packetpeerdtls-method-connect-to-peer"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>连接 <literal>packet_peer</literal> 并开始使用底层的 <reference internal="True" refuri="class_packetpeerudp#class-packetpeerudp"><inline classes="std std-ref">PacketPeerUDP</inline></reference> 进行 DTLS 握手，进行握手时 <reference internal="True" refuri="class_packetpeerudp#class-packetpeerudp"><inline classes="std std-ref">PacketPeerUDP</inline></reference> 必须已连接（见 <reference internal="True" refuri="class_packetpeerudp#class-packetpeerudp-method-connect-to-host"><inline classes="std std-ref">PacketPeerUDP.connect_to_host</inline></reference>）。你还可以指定验证 TLS 连接时使用的 <literal>client_options</literal>。见 <reference internal="True" refuri="class_tlsoptions#class-tlsoptions-method-client"><inline classes="std std-ref">TLSOptions.client</inline></reference> 和 <reference internal="True" refuri="class_tlsoptions#class-tlsoptions-method-client-unsafe"><inline classes="std std-ref">TLSOptions.client_unsafe</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-packetpeerdtls-method-disconnect-from-peer"></target>
            <paragraph classes="classref-method" ids="class-packetpeerdtls-method-disconnect-from-peer" names="class_packetpeerdtls_method_disconnect_from_peer"><abbreviation explanation="无返回值。">void</abbreviation> <strong>disconnect_from_peer</strong>() <reference internal="True" refid="class-packetpeerdtls-method-disconnect-from-peer"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>断开此对等体的连接，终止 DTLS 会话。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-packetpeerdtls-method-get-status"></target>
            <paragraph classes="classref-method" ids="class-packetpeerdtls-method-get-status" names="class_packetpeerdtls_method_get_status"><reference internal="True" refid="enum-packetpeerdtls-status"><inline classes="std std-ref">Status</inline></reference> <strong>get_status</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-packetpeerdtls-method-get-status"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回连接的状态。取值见 <reference internal="True" refid="enum-packetpeerdtls-status"><inline classes="std std-ref">Status</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-packetpeerdtls-method-poll"></target>
            <paragraph classes="classref-method" ids="class-packetpeerdtls-method-poll" names="class_packetpeerdtls_method_poll"><abbreviation explanation="无返回值。">void</abbreviation> <strong>poll</strong>() <reference internal="True" refid="class-packetpeerdtls-method-poll"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>轮询连接以检查传入的数据包。经常调用此选项以更新状态并保持连接正常工作。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

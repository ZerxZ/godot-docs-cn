<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_audiostreamplayer3d.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <meta content="sound, sfx" name="keywords">
    </meta>
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/AudioStreamPlayer3D.xml.</comment>
    <target refid="class-audiostreamplayer3d"></target>
    <section ids="audiostreamplayer3d class-audiostreamplayer3d" names="audiostreamplayer3d class_audiostreamplayer3d">
        <title>AudioStreamPlayer3D</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_node3d#class-node3d"><inline classes="std std-ref">Node3D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>在 3D 空间中播放与位置相关的声音。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>根据音频收听者的相对位置播放具有位置音效的音频。位置效应包括距离衰减、方向性和多普勒效应。为了更逼真，低通滤波器会自动应用于远处的声音。这可以通过将 <reference internal="True" refid="class-audiostreamplayer3d-property-attenuation-filter-cutoff-hz"><inline classes="std std-ref">attenuation_filter_cutoff_hz</inline></reference> 设置为 <literal>20500</literal> 来禁用。</paragraph>
            <paragraph>默认情况下，音频是从相机的位置听到的，这可以通过在场景中添加一个 <reference internal="True" refuri="class_audiolistener3d#class-audiolistener3d"><inline classes="std std-ref">AudioListener3D</inline></reference> 节点，并通过对其调用 <reference internal="True" refuri="class_audiolistener3d#class-audiolistener3d-method-make-current"><inline classes="std std-ref">AudioListener3D.make_current</inline></reference> 来启用该节点来改变。</paragraph>
            <paragraph>参阅 <reference internal="True" refuri="class_audiostreamplayer#class-audiostreamplayer"><inline classes="std std-ref">AudioStreamPlayer</inline></reference> 来播放非位置的声音。</paragraph>
            <paragraph><strong>注意：</strong>隐藏一个 <strong>AudioStreamPlayer3D</strong> 节点并不能禁用其音频输出。要暂时禁用 <strong>AudioStreamPlayer3D</strong> 的音频输出，请将 <reference internal="True" refid="class-audiostreamplayer3d-property-volume-db"><inline classes="std std-ref">volume_db</inline></reference> 设置为一个非常低的值，如 <literal>-100</literal>（人的听觉听不到）。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference internal="True" refuri="../tutorials/audio/audio_streams"><inline classes="doc">音频流</inline></reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="68"></colspec>
                    <colspec colwidth="118"></colspec>
                    <colspec colwidth="15"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplayer3d-property-area-mask"><inline classes="std std-ref">area_mask</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplayer3d-property-attenuation-filter-cutoff-hz"><inline classes="std std-ref">attenuation_filter_cutoff_hz</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>5000.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplayer3d-property-attenuation-filter-db"><inline classes="std std-ref">attenuation_filter_db</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>-24.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-audiostreamplayer3d-attenuationmodel"><inline classes="std std-ref">AttenuationModel</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplayer3d-property-attenuation-model"><inline classes="std std-ref">attenuation_model</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplayer3d-property-autoplay"><inline classes="std std-ref">autoplay</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplayer3d-property-bus"><inline classes="std std-ref">bus</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>&amp;"Master"</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-audiostreamplayer3d-dopplertracking"><inline classes="std std-ref">DopplerTracking</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplayer3d-property-doppler-tracking"><inline classes="std std-ref">doppler_tracking</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplayer3d-property-emission-angle-degrees"><inline classes="std std-ref">emission_angle_degrees</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>45.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplayer3d-property-emission-angle-enabled"><inline classes="std std-ref">emission_angle_enabled</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplayer3d-property-emission-angle-filter-attenuation-db"><inline classes="std std-ref">emission_angle_filter_attenuation_db</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>-12.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplayer3d-property-max-db"><inline classes="std std-ref">max_db</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>3.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplayer3d-property-max-distance"><inline classes="std std-ref">max_distance</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplayer3d-property-max-polyphony"><inline classes="std std-ref">max_polyphony</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplayer3d-property-panning-strength"><inline classes="std std-ref">panning_strength</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplayer3d-property-pitch-scale"><inline classes="std std-ref">pitch_scale</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_audioserver#enum-audioserver-playbacktype"><inline classes="std std-ref">PlaybackType</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplayer3d-property-playback-type"><inline classes="std std-ref">playback_type</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplayer3d-property-playing"><inline classes="std std-ref">playing</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_audiostream#class-audiostream"><inline classes="std std-ref">AudioStream</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplayer3d-property-stream"><inline classes="std std-ref">stream</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplayer3d-property-stream-paused"><inline classes="std std-ref">stream_paused</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplayer3d-property-unit-size"><inline classes="std std-ref">unit_size</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>10.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplayer3d-property-volume-db"><inline classes="std std-ref">volume_db</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id4" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="55"></colspec>
                    <colspec colwidth="107"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplayer3d-method-get-playback-position"><inline classes="std std-ref">get_playback_position</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_audiostreamplayback#class-audiostreamplayback"><inline classes="std std-ref">AudioStreamPlayback</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplayer3d-method-get-stream-playback"><inline classes="std std-ref">get_stream_playback</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplayer3d-method-has-stream-playback"><inline classes="std std-ref">has_stream_playback</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplayer3d-method-play"><inline classes="std std-ref">play</inline></reference>(from_position: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> = 0.0)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplayer3d-method-seek"><inline classes="std std-ref">seek</inline></reference>(to_position: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-audiostreamplayer3d-method-stop"><inline classes="std std-ref">stop</inline></reference>()</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="信号">
            <title>信号</title>
            <target refid="class-audiostreamplayer3d-signal-finished"></target>
            <paragraph classes="classref-signal" ids="class-audiostreamplayer3d-signal-finished" names="class_audiostreamplayer3d_signal_finished"><strong>finished</strong>() <reference internal="True" refid="class-audiostreamplayer3d-signal-finished"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>当音频停止播放时发出。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="枚举">
            <title>枚举</title>
            <target refid="enum-audiostreamplayer3d-attenuationmodel"></target>
            <paragraph classes="classref-enumeration" ids="enum-audiostreamplayer3d-attenuationmodel" names="enum_audiostreamplayer3d_attenuationmodel">enum <strong>AttenuationModel</strong>: <reference internal="True" refid="enum-audiostreamplayer3d-attenuationmodel"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-audiostreamplayer3d-constant-attenuation-inverse-distance"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-audiostreamplayer3d-constant-attenuation-inverse-distance" names="class_audiostreamplayer3d_constant_attenuation_inverse_distance"><reference internal="True" refid="enum-audiostreamplayer3d-attenuationmodel"><inline classes="std std-ref">AttenuationModel</inline></reference> <strong>ATTENUATION_INVERSE_DISTANCE</strong> = <literal>0</literal></paragraph>
            <paragraph>根据距离对响度进行线性衰减。</paragraph>
            <target refid="class-audiostreamplayer3d-constant-attenuation-inverse-square-distance"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-audiostreamplayer3d-constant-attenuation-inverse-square-distance" names="class_audiostreamplayer3d_constant_attenuation_inverse_square_distance"><reference internal="True" refid="enum-audiostreamplayer3d-attenuationmodel"><inline classes="std std-ref">AttenuationModel</inline></reference> <strong>ATTENUATION_INVERSE_SQUARE_DISTANCE</strong> = <literal>1</literal></paragraph>
            <paragraph>根据距离对响度进行平方衰减。</paragraph>
            <target refid="class-audiostreamplayer3d-constant-attenuation-logarithmic"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-audiostreamplayer3d-constant-attenuation-logarithmic" names="class_audiostreamplayer3d_constant_attenuation_logarithmic"><reference internal="True" refid="enum-audiostreamplayer3d-attenuationmodel"><inline classes="std std-ref">AttenuationModel</inline></reference> <strong>ATTENUATION_LOGARITHMIC</strong> = <literal>2</literal></paragraph>
            <paragraph>根据距离对响度进行对数衰减。</paragraph>
            <target refid="class-audiostreamplayer3d-constant-attenuation-disabled"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-audiostreamplayer3d-constant-attenuation-disabled" names="class_audiostreamplayer3d_constant_attenuation_disabled"><reference internal="True" refid="enum-audiostreamplayer3d-attenuationmodel"><inline classes="std std-ref">AttenuationModel</inline></reference> <strong>ATTENUATION_DISABLED</strong> = <literal>3</literal></paragraph>
            <paragraph>不根据距离衰减响度。与 <reference internal="True" refuri="class_audiostreamplayer#class-audiostreamplayer"><inline classes="std std-ref">AudioStreamPlayer</inline></reference> 不同，声音仍会在位置上被听到。<reference internal="True" refid="class-audiostreamplayer3d-constant-attenuation-disabled"><inline classes="std std-ref">ATTENUATION_DISABLED</inline></reference> 可以与大于 <literal>0.0</literal> 的 <reference internal="True" refid="class-audiostreamplayer3d-property-max-distance"><inline classes="std std-ref">max_distance</inline></reference> 值结合使用，以实现线性衰减，限制在定义的球体大小。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-audiostreamplayer3d-dopplertracking"></target>
            <paragraph classes="classref-enumeration" ids="enum-audiostreamplayer3d-dopplertracking" names="enum_audiostreamplayer3d_dopplertracking">enum <strong>DopplerTracking</strong>: <reference internal="True" refid="enum-audiostreamplayer3d-dopplertracking"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-audiostreamplayer3d-constant-doppler-tracking-disabled"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-audiostreamplayer3d-constant-doppler-tracking-disabled" names="class_audiostreamplayer3d_constant_doppler_tracking_disabled"><reference internal="True" refid="enum-audiostreamplayer3d-dopplertracking"><inline classes="std std-ref">DopplerTracking</inline></reference> <strong>DOPPLER_TRACKING_DISABLED</strong> = <literal>0</literal></paragraph>
            <paragraph>禁用多普勒跟踪。</paragraph>
            <target refid="class-audiostreamplayer3d-constant-doppler-tracking-idle-step"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-audiostreamplayer3d-constant-doppler-tracking-idle-step" names="class_audiostreamplayer3d_constant_doppler_tracking_idle_step"><reference internal="True" refid="enum-audiostreamplayer3d-dopplertracking"><inline classes="std std-ref">DopplerTracking</inline></reference> <strong>DOPPLER_TRACKING_IDLE_STEP</strong> = <literal>1</literal></paragraph>
            <paragraph>在过程帧期间执行多普勒跟踪（请参阅 <reference internal="True" refuri="class_node#class-node-constant-notification-internal-process"><inline classes="std std-ref">Node.NOTIFICATION_INTERNAL_PROCESS</inline></reference>）。</paragraph>
            <target refid="class-audiostreamplayer3d-constant-doppler-tracking-physics-step"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-audiostreamplayer3d-constant-doppler-tracking-physics-step" names="class_audiostreamplayer3d_constant_doppler_tracking_physics_step"><reference internal="True" refid="enum-audiostreamplayer3d-dopplertracking"><inline classes="std std-ref">DopplerTracking</inline></reference> <strong>DOPPLER_TRACKING_PHYSICS_STEP</strong> = <literal>2</literal></paragraph>
            <paragraph>在物理帧期间执行多普勒跟踪（请参阅 <reference internal="True" refuri="class_node#class-node-constant-notification-internal-physics-process"><inline classes="std std-ref">Node.NOTIFICATION_INTERNAL_PHYSICS_PROCESS</inline></reference>）。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id7" names="属性说明">
            <title>属性说明</title>
            <target refid="class-audiostreamplayer3d-property-area-mask"></target>
            <paragraph classes="classref-property" ids="class-audiostreamplayer3d-property-area-mask" names="class_audiostreamplayer3d_property_area_mask"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>area_mask</strong> = <literal>1</literal> <reference internal="True" refid="class-audiostreamplayer3d-property-area-mask"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_area_mask</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_area_mask</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>确定哪些 <reference internal="True" refuri="class_area3d#class-area3d"><inline classes="std std-ref">Area3D</inline></reference> 层影响混响和音频总线效果的声音。区域可用于重定向 <reference internal="True" refuri="class_audiostream#class-audiostream"><inline classes="std std-ref">AudioStream</inline></reference>，以便它们在特定音频总线中播放。可以如何使用它的一个示例是制作一个“水”区域，以便在水中播放的声音通过音频总线重定向，使它们听起来像是在水下播放的。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamplayer3d-property-attenuation-filter-cutoff-hz"></target>
            <paragraph classes="classref-property" ids="class-audiostreamplayer3d-property-attenuation-filter-cutoff-hz" names="class_audiostreamplayer3d_property_attenuation_filter_cutoff_hz"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>attenuation_filter_cutoff_hz</strong> = <literal>5000.0</literal> <reference internal="True" refid="class-audiostreamplayer3d-property-attenuation-filter-cutoff-hz"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_attenuation_filter_cutoff_hz</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_attenuation_filter_cutoff_hz</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>衰减低通滤波器的截止频率，单位为 Hz。高于该频率的声音比低于此频率的声音衰减得更多。要禁用该效果，请将其设置为 <literal>20500</literal>，因为该频率高于人类听力极限。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamplayer3d-property-attenuation-filter-db"></target>
            <paragraph classes="classref-property" ids="class-audiostreamplayer3d-property-attenuation-filter-db" names="class_audiostreamplayer3d_property_attenuation_filter_db"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>attenuation_filter_db</strong> = <literal>-24.0</literal> <reference internal="True" refid="class-audiostreamplayer3d-property-attenuation-filter-db"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_attenuation_filter_db</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_attenuation_filter_db</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>滤波器对响度的影响程度，以分贝为单位。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamplayer3d-property-attenuation-model"></target>
            <paragraph classes="classref-property" ids="class-audiostreamplayer3d-property-attenuation-model" names="class_audiostreamplayer3d_property_attenuation_model"><reference internal="True" refid="enum-audiostreamplayer3d-attenuationmodel"><inline classes="std std-ref">AttenuationModel</inline></reference> <strong>attenuation_model</strong> = <literal>0</literal> <reference internal="True" refid="class-audiostreamplayer3d-property-attenuation-model"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_attenuation_model</strong>(value: <reference internal="True" refid="enum-audiostreamplayer3d-attenuationmodel"><inline classes="std std-ref">AttenuationModel</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-audiostreamplayer3d-attenuationmodel"><inline classes="std std-ref">AttenuationModel</inline></reference> <strong>get_attenuation_model</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>决定音频是否应该随着距离，以线性、二次、对数的方式变得更安静，或者不受距离影响，有效地禁用衰减。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamplayer3d-property-autoplay"></target>
            <paragraph classes="classref-property" ids="class-audiostreamplayer3d-property-autoplay" names="class_audiostreamplayer3d_property_autoplay"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>autoplay</strong> = <literal>false</literal> <reference internal="True" refid="class-audiostreamplayer3d-property-autoplay"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_autoplay</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_autoplay_enabled</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则在将 AudioStreamPlayer3D 节点添加到场景树时播放音频。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamplayer3d-property-bus"></target>
            <paragraph classes="classref-property" ids="class-audiostreamplayer3d-property-bus" names="class_audiostreamplayer3d_property_bus"><reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference> <strong>bus</strong> = <literal>&amp;"Master"</literal> <reference internal="True" refid="class-audiostreamplayer3d-property-bus"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_bus</strong>(value: <reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference> <strong>get_bus</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>播放音频的总线。</paragraph>
            <paragraph><strong>注意：</strong>设置这个属性时，请记住它并不会对给定的名称是否与现有总线匹配进行校验。这是因为音频总线布局可以在设置这个属性后再加载。如果这个给定的名称在运行时无法解析，就会回退到 <literal>"Master"</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamplayer3d-property-doppler-tracking"></target>
            <paragraph classes="classref-property" ids="class-audiostreamplayer3d-property-doppler-tracking" names="class_audiostreamplayer3d_property_doppler_tracking"><reference internal="True" refid="enum-audiostreamplayer3d-dopplertracking"><inline classes="std std-ref">DopplerTracking</inline></reference> <strong>doppler_tracking</strong> = <literal>0</literal> <reference internal="True" refid="class-audiostreamplayer3d-property-doppler-tracking"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_doppler_tracking</strong>(value: <reference internal="True" refid="enum-audiostreamplayer3d-dopplertracking"><inline classes="std std-ref">DopplerTracking</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-audiostreamplayer3d-dopplertracking"><inline classes="std std-ref">DopplerTracking</inline></reference> <strong>get_doppler_tracking</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>决定应该在哪个步骤计算多普勒效应。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamplayer3d-property-emission-angle-degrees"></target>
            <paragraph classes="classref-property" ids="class-audiostreamplayer3d-property-emission-angle-degrees" names="class_audiostreamplayer3d_property_emission_angle_degrees"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>emission_angle_degrees</strong> = <literal>45.0</literal> <reference internal="True" refid="class-audiostreamplayer3d-property-emission-angle-degrees"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_emission_angle</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_emission_angle</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>音频到达听者而不衰减的角度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamplayer3d-property-emission-angle-enabled"></target>
            <paragraph classes="classref-property" ids="class-audiostreamplayer3d-property-emission-angle-enabled" names="class_audiostreamplayer3d_property_emission_angle_enabled"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>emission_angle_enabled</strong> = <literal>false</literal> <reference internal="True" refid="class-audiostreamplayer3d-property-emission-angle-enabled"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_emission_angle_enabled</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_emission_angle_enabled</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则音频应该根据声音的方向衰减。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamplayer3d-property-emission-angle-filter-attenuation-db"></target>
            <paragraph classes="classref-property" ids="class-audiostreamplayer3d-property-emission-angle-filter-attenuation-db" names="class_audiostreamplayer3d_property_emission_angle_filter_attenuation_db"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>emission_angle_filter_attenuation_db</strong> = <literal>-12.0</literal> <reference internal="True" refid="class-audiostreamplayer3d-property-emission-angle-filter-attenuation-db"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_emission_angle_filter_attenuation_db</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_emission_angle_filter_attenuation_db</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>听者在 <reference internal="True" refid="class-audiostreamplayer3d-property-emission-angle-degrees"><inline classes="std std-ref">emission_angle_degrees</inline></reference> 之外且 <reference internal="True" refid="class-audiostreamplayer3d-property-emission-angle-enabled"><inline classes="std std-ref">emission_angle_enabled</inline></reference> 被设置时使用的衰减系数，单位是分贝。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamplayer3d-property-max-db"></target>
            <paragraph classes="classref-property" ids="class-audiostreamplayer3d-property-max-db" names="class_audiostreamplayer3d_property_max_db"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>max_db</strong> = <literal>3.0</literal> <reference internal="True" refid="class-audiostreamplayer3d-property-max-db"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_max_db</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_max_db</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>设置声级的绝对最大值，以分贝为单位。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamplayer3d-property-max-distance"></target>
            <paragraph classes="classref-property" ids="class-audiostreamplayer3d-property-max-distance" names="class_audiostreamplayer3d_property_max_distance"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>max_distance</strong> = <literal>0.0</literal> <reference internal="True" refid="class-audiostreamplayer3d-property-max-distance"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_max_distance</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_max_distance</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>完全听不到声音的距离。仅当设置为大于 <literal>0.0</literal> 的值时才有效。<reference internal="True" refid="class-audiostreamplayer3d-property-max-distance"><inline classes="std std-ref">max_distance</inline></reference> 与 <reference internal="True" refid="class-audiostreamplayer3d-property-unit-size"><inline classes="std std-ref">unit_size</inline></reference> 协同工作。但是，与 <reference internal="True" refid="class-audiostreamplayer3d-property-unit-size"><inline classes="std std-ref">unit_size</inline></reference> 的行为取决于 <reference internal="True" refid="class-audiostreamplayer3d-property-attenuation-model"><inline classes="std std-ref">attenuation_model</inline></reference> 不同，<reference internal="True" refid="class-audiostreamplayer3d-property-max-distance"><inline classes="std std-ref">max_distance</inline></reference> 始终以线性方式工作。这可用于防止 <strong>AudioStreamPlayer3D</strong> 在听者较远时需要混音，从而节省 CPU 资源。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamplayer3d-property-max-polyphony"></target>
            <paragraph classes="classref-property" ids="class-audiostreamplayer3d-property-max-polyphony" names="class_audiostreamplayer3d_property_max_polyphony"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>max_polyphony</strong> = <literal>1</literal> <reference internal="True" refid="class-audiostreamplayer3d-property-max-polyphony"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_max_polyphony</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_max_polyphony</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>该节点可以同时播放的最大声音数。达到此值后，播放额外的声音将切断最旧的声音。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamplayer3d-property-panning-strength"></target>
            <paragraph classes="classref-property" ids="class-audiostreamplayer3d-property-panning-strength" names="class_audiostreamplayer3d_property_panning_strength"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>panning_strength</strong> = <literal>1.0</literal> <reference internal="True" refid="class-audiostreamplayer3d-property-panning-strength"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_panning_strength</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_panning_strength</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>通过将基础 <reference internal="True" refuri="class_projectsettings#class-projectsettings-property-audio-general-3d-panning-strength"><inline classes="std std-ref">ProjectSettings.audio/general/3d_panning_strength</inline></reference> 乘以该因子，来缩放该节点的声像强度。与较低的值相比，较高的值将从左到右更显著地声像移动音频。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamplayer3d-property-pitch-scale"></target>
            <paragraph classes="classref-property" ids="class-audiostreamplayer3d-property-pitch-scale" names="class_audiostreamplayer3d_property_pitch_scale"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>pitch_scale</strong> = <literal>1.0</literal> <reference internal="True" refid="class-audiostreamplayer3d-property-pitch-scale"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_pitch_scale</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_pitch_scale</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>音频的音高和节奏，作为音频样本的采样率的倍数。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamplayer3d-property-playback-type"></target>
            <paragraph classes="classref-property" ids="class-audiostreamplayer3d-property-playback-type" names="class_audiostreamplayer3d_property_playback_type"><reference internal="True" refuri="class_audioserver#enum-audioserver-playbacktype"><inline classes="std std-ref">PlaybackType</inline></reference> <strong>playback_type</strong> = <literal>0</literal> <reference internal="True" refid="class-audiostreamplayer3d-property-playback-type"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_playback_type</strong>(value: <reference internal="True" refuri="class_audioserver#enum-audioserver-playbacktype"><inline classes="std std-ref">PlaybackType</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_audioserver#enum-audioserver-playbacktype"><inline classes="std std-ref">PlaybackType</inline></reference> <strong>get_playback_type</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph><strong>实验性：</strong> 未来版本中可能会修改或移除该属性。</paragraph>
            <paragraph>The playback type of the stream player. If set other than to the default value, it will force that playback type.</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamplayer3d-property-playing"></target>
            <paragraph classes="classref-property" ids="class-audiostreamplayer3d-property-playing" names="class_audiostreamplayer3d_property_playing"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>playing</strong> = <literal>false</literal> <reference internal="True" refid="class-audiostreamplayer3d-property-playing"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_playing</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则音频正在播放，或者已加入播放队列（见 <reference internal="True" refid="class-audiostreamplayer3d-method-play"><inline classes="std std-ref">play</inline></reference>）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamplayer3d-property-stream"></target>
            <paragraph classes="classref-property" ids="class-audiostreamplayer3d-property-stream" names="class_audiostreamplayer3d_property_stream"><reference internal="True" refuri="class_audiostream#class-audiostream"><inline classes="std std-ref">AudioStream</inline></reference> <strong>stream</strong> <reference internal="True" refid="class-audiostreamplayer3d-property-stream"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_stream</strong>(value: <reference internal="True" refuri="class_audiostream#class-audiostream"><inline classes="std std-ref">AudioStream</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_audiostream#class-audiostream"><inline classes="std std-ref">AudioStream</inline></reference> <strong>get_stream</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>要播放的 <reference internal="True" refuri="class_audiostream#class-audiostream"><inline classes="std std-ref">AudioStream</inline></reference> 资源。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamplayer3d-property-stream-paused"></target>
            <paragraph classes="classref-property" ids="class-audiostreamplayer3d-property-stream-paused" names="class_audiostreamplayer3d_property_stream_paused"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>stream_paused</strong> = <literal>false</literal> <reference internal="True" refid="class-audiostreamplayer3d-property-stream-paused"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_stream_paused</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_stream_paused</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则播放会暂停。你可以通过将 <reference internal="True" refid="class-audiostreamplayer3d-property-stream-paused"><inline classes="std std-ref">stream_paused</inline></reference> 设置为 <literal>false</literal>来恢复它。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamplayer3d-property-unit-size"></target>
            <paragraph classes="classref-property" ids="class-audiostreamplayer3d-property-unit-size" names="class_audiostreamplayer3d_property_unit_size"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>unit_size</strong> = <literal>10.0</literal> <reference internal="True" refid="class-audiostreamplayer3d-property-unit-size"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_unit_size</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_unit_size</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>衰减效果的系数。更高的值使声音在更远的距离可以听到。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamplayer3d-property-volume-db"></target>
            <paragraph classes="classref-property" ids="class-audiostreamplayer3d-property-volume-db" names="class_audiostreamplayer3d_property_volume_db"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>volume_db</strong> = <literal>0.0</literal> <reference internal="True" refid="class-audiostreamplayer3d-property-volume-db"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_volume_db</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_volume_db</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>不受衰减影响的基础声级，单位为分贝。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id8" names="方法说明">
            <title>方法说明</title>
            <target refid="class-audiostreamplayer3d-method-get-playback-position"></target>
            <paragraph classes="classref-method" ids="class-audiostreamplayer3d-method-get-playback-position" names="class_audiostreamplayer3d_method_get_playback_position"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_playback_position</strong>() <reference internal="True" refid="class-audiostreamplayer3d-method-get-playback-position"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回 <reference internal="True" refuri="class_audiostream#class-audiostream"><inline classes="std std-ref">AudioStream</inline></reference> 中的位置。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamplayer3d-method-get-stream-playback"></target>
            <paragraph classes="classref-method" ids="class-audiostreamplayer3d-method-get-stream-playback" names="class_audiostreamplayer3d_method_get_stream_playback"><reference internal="True" refuri="class_audiostreamplayback#class-audiostreamplayback"><inline classes="std std-ref">AudioStreamPlayback</inline></reference> <strong>get_stream_playback</strong>() <reference internal="True" refid="class-audiostreamplayer3d-method-get-stream-playback"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回与这个 <strong>AudioStreamPlayer3D</strong> 相关联的 <reference internal="True" refuri="class_audiostreamplayback#class-audiostreamplayback"><inline classes="std std-ref">AudioStreamPlayback</inline></reference> 对象。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamplayer3d-method-has-stream-playback"></target>
            <paragraph classes="classref-method" ids="class-audiostreamplayer3d-method-has-stream-playback" names="class_audiostreamplayer3d_method_has_stream_playback"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>has_stream_playback</strong>() <reference internal="True" refid="class-audiostreamplayer3d-method-has-stream-playback"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回该 <reference internal="True" refuri="class_audiostreamplayer#class-audiostreamplayer"><inline classes="std std-ref">AudioStreamPlayer</inline></reference> 是否能够返回 <reference internal="True" refuri="class_audiostreamplayback#class-audiostreamplayback"><inline classes="std std-ref">AudioStreamPlayback</inline></reference> 对象。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamplayer3d-method-play"></target>
            <paragraph classes="classref-method" ids="class-audiostreamplayer3d-method-play" names="class_audiostreamplayer3d_method_play"><abbreviation explanation="无返回值。">void</abbreviation> <strong>play</strong>(from_position: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> = 0.0) <reference internal="True" refid="class-audiostreamplayer3d-method-play"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将要播放的音频入队，将在下一物理帧从给定的位置 <literal>from_position</literal> 开始播放，单位为秒。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamplayer3d-method-seek"></target>
            <paragraph classes="classref-method" ids="class-audiostreamplayer3d-method-seek" names="class_audiostreamplayer3d_method_seek"><abbreviation explanation="无返回值。">void</abbreviation> <strong>seek</strong>(to_position: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <reference internal="True" refid="class-audiostreamplayer3d-method-seek"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置音频的播放位置，以秒为单位。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-audiostreamplayer3d-method-stop"></target>
            <paragraph classes="classref-method" ids="class-audiostreamplayer3d-method-stop" names="class_audiostreamplayer3d_method_stop"><abbreviation explanation="无返回值。">void</abbreviation> <strong>stop</strong>() <reference internal="True" refid="class-audiostreamplayer3d-method-stop"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>停止音频。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效运算符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列位标志构成位掩码的整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

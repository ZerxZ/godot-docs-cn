<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_gltfcamera.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/modules/gltf/doc_classes/GLTFCamera.xml.</comment>
    <target refid="class-gltfcamera"></target>
    <section ids="gltfcamera class-gltfcamera" names="gltfcamera class_gltfcamera">
        <title>GLTFCamera</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>代表 GLTF 相机。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>代表基础 GLTF 规格中定义的相机。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference internal="True" refuri="../tutorials/io/runtime_file_loading_and_saving"><inline classes="doc">运行时文件加载与保存</inline></reference></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference name="GLTF 相机的详细规格" refuri="https://registry.khronos.org/glTF/specs/2.0/glTF-2.0.html#reference-camera">GLTF 相机的详细规格</reference></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference name="GLTF 相机规格和示例文件" refuri="https://github.com/KhronosGroup/glTF-Tutorials/blob/master/gltfTutorial/gltfTutorial_015_SimpleCameras.md">GLTF 相机规格和示例文件</reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="27"></colspec>
                    <colspec colwidth="59"></colspec>
                    <colspec colwidth="12"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gltfcamera-property-depth-far"><inline classes="std std-ref">depth_far</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>4000.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gltfcamera-property-depth-near"><inline classes="std std-ref">depth_near</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.05</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gltfcamera-property-fov"><inline classes="std std-ref">fov</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.309</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gltfcamera-property-perspective"><inline classes="std std-ref">perspective</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gltfcamera-property-size-mag"><inline classes="std std-ref">size_mag</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.5</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id4" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="37"></colspec>
                    <colspec colwidth="130"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gltfcamera"><inline classes="std std-ref">GLTFCamera</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gltfcamera-method-from-dictionary"><inline classes="std std-ref">from_dictionary</inline></reference>(dictionary: <reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference>) <abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gltfcamera"><inline classes="std std-ref">GLTFCamera</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gltfcamera-method-from-node"><inline classes="std std-ref">from_node</inline></reference>(camera_node: <reference internal="True" refuri="class_camera3d#class-camera3d"><inline classes="std std-ref">Camera3D</inline></reference>) <abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gltfcamera-method-to-dictionary"><inline classes="std std-ref">to_dictionary</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_camera3d#class-camera3d"><inline classes="std std-ref">Camera3D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-gltfcamera-method-to-node"><inline classes="std std-ref">to_node</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="属性说明">
            <title>属性说明</title>
            <target refid="class-gltfcamera-property-depth-far"></target>
            <paragraph classes="classref-property" ids="class-gltfcamera-property-depth-far" names="class_gltfcamera_property_depth_far"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>depth_far</strong> = <literal>4000.0</literal> <reference internal="True" refid="class-gltfcamera-property-depth-far"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_depth_far</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_depth_far</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>该相机与远剔除边界的距离，相对于其本地 Z 轴，单位为米。映射到 GLTF 的 <literal>zfar</literal> 属性。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gltfcamera-property-depth-near"></target>
            <paragraph classes="classref-property" ids="class-gltfcamera-property-depth-near" names="class_gltfcamera_property_depth_near"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>depth_near</strong> = <literal>0.05</literal> <reference internal="True" refid="class-gltfcamera-property-depth-near"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_depth_near</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_depth_near</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>该相机与近剔除边界的距离，相对于其本地 Z 轴，单位为米。映射到 GLTF 的 <literal>znear</literal> 属性。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gltfcamera-property-fov"></target>
            <paragraph classes="classref-property" ids="class-gltfcamera-property-fov" names="class_gltfcamera_property_fov"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>fov</strong> = <literal>1.309</literal> <reference internal="True" refid="class-gltfcamera-property-fov"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_fov</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_fov</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>该相机的 FOV。这个类和 GLTF 在定义相机 FOV 时使用的都是弧度，但 Godot 使用的是度。映射到 GLTF 的 <literal>yfov</literal> 属性。只在透视相机中使用，即 <reference internal="True" refid="class-gltfcamera-property-perspective"><inline classes="std std-ref">perspective</inline></reference> 为 true 时。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gltfcamera-property-perspective"></target>
            <paragraph classes="classref-property" ids="class-gltfcamera-property-perspective" names="class_gltfcamera_property_perspective"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>perspective</strong> = <literal>true</literal> <reference internal="True" refid="class-gltfcamera-property-perspective"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_perspective</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_perspective</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>该相机是否处于透视模式。如果为 false，则该相机处于正交模式。映射到 GLTF 的相机 <literal>type</literal> 属性。详情见 <reference internal="True" refuri="class_camera3d#class-camera3d-property-projection"><inline classes="std std-ref">Camera3D.projection</inline></reference> 及 GLTF 规格。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gltfcamera-property-size-mag"></target>
            <paragraph classes="classref-property" ids="class-gltfcamera-property-size-mag" names="class_gltfcamera_property_size_mag"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>size_mag</strong> = <literal>0.5</literal> <reference internal="True" refid="class-gltfcamera-property-size-mag"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_size_mag</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_size_mag</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>该相机的大小。这个类和 GLTF 在定义相机大小尺度时使用的都是半径的米数，但 Godot 使用的是直径的米数。映射到 GLTF 的 <literal>ymag</literal> 属性。只在正交相机中使用，即 <reference internal="True" refid="class-gltfcamera-property-perspective"><inline classes="std std-ref">perspective</inline></reference> 为 false 时。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="方法说明">
            <title>方法说明</title>
            <target refid="class-gltfcamera-method-from-dictionary"></target>
            <paragraph classes="classref-method" ids="class-gltfcamera-method-from-dictionary" names="class_gltfcamera_method_from_dictionary"><reference internal="True" refid="class-gltfcamera"><inline classes="std std-ref">GLTFCamera</inline></reference> <strong>from_dictionary</strong>(dictionary: <reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference>) <abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation> <reference internal="True" refid="class-gltfcamera-method-from-dictionary"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>通过解析给定的 <reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference> 新建 GLTFCamera 实例。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gltfcamera-method-from-node"></target>
            <paragraph classes="classref-method" ids="class-gltfcamera-method-from-node" names="class_gltfcamera_method_from_node"><reference internal="True" refid="class-gltfcamera"><inline classes="std std-ref">GLTFCamera</inline></reference> <strong>from_node</strong>(camera_node: <reference internal="True" refuri="class_camera3d#class-camera3d"><inline classes="std std-ref">Camera3D</inline></reference>) <abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation> <reference internal="True" refid="class-gltfcamera-method-from-node"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>从给定的 Godot <reference internal="True" refuri="class_camera3d#class-camera3d"><inline classes="std std-ref">Camera3D</inline></reference> 节点新建 GLTFCamera 实例。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gltfcamera-method-to-dictionary"></target>
            <paragraph classes="classref-method" ids="class-gltfcamera-method-to-dictionary" names="class_gltfcamera_method_to_dictionary"><reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference> <strong>to_dictionary</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-gltfcamera-method-to-dictionary"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将这个 GLTFCamera 实例序列化为 <reference internal="True" refuri="class_dictionary#class-dictionary"><inline classes="std std-ref">Dictionary</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-gltfcamera-method-to-node"></target>
            <paragraph classes="classref-method" ids="class-gltfcamera-method-to-node" names="class_gltfcamera_method_to_node"><reference internal="True" refuri="class_camera3d#class-camera3d"><inline classes="std std-ref">Camera3D</inline></reference> <strong>to_node</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-gltfcamera-method-to-node"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将这个 GLTFCamera 实例转换为 Godot <reference internal="True" refuri="class_camera3d#class-camera3d"><inline classes="std std-ref">Camera3D</inline></reference> 节点。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

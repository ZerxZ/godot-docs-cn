<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_visibleonscreennotifier2d.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/VisibleOnScreenNotifier2D.xml.</comment>
    <target refid="class-visibleonscreennotifier2d"></target>
    <section ids="visibleonscreennotifier2d class-visibleonscreennotifier2d" names="visibleonscreennotifier2d class_visibleonscreennotifier2d">
        <title>VisibleOnScreenNotifier2D</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_node2d#class-node2d"><inline classes="std std-ref">Node2D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_canvasitem#class-canvasitem"><inline classes="std std-ref">CanvasItem</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_node#class-node"><inline classes="std std-ref">Node</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph><strong>派生：</strong> <reference internal="True" refuri="class_visibleonscreenenabler2d#class-visibleonscreenenabler2d"><inline classes="std std-ref">VisibleOnScreenEnabler2D</inline></reference></paragraph>
        <paragraph>2D 空间的矩形区域，用于检测其在屏幕上是否可见。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph><reference internal="True" refuri="class_visibleonscreenenabler2d#class-visibleonscreenenabler2d"><inline classes="std std-ref">VisibleOnScreenEnabler2D</inline></reference> 表示 2D 空间的矩形区块。当该区块的任何部分在屏幕或视口中可见时，它将发出 <reference internal="True" refid="class-visibleonscreennotifier2d-signal-screen-entered"><inline classes="std std-ref">screen_entered</inline></reference> 信号，同样，当其任何部分都不可见时，它将发出 <reference internal="True" refid="class-visibleonscreennotifier2d-signal-screen-exited"><inline classes="std std-ref">screen_exited</inline></reference> 信号。</paragraph>
            <paragraph>如果希望当该区块在屏幕上可见时自动启用节点，请使用 <reference internal="True" refuri="class_visibleonscreenenabler2d#class-visibleonscreenenabler2d"><inline classes="std std-ref">VisibleOnScreenEnabler2D</inline></reference>。</paragraph>
            <paragraph><strong>注意：</strong><strong>VisibleOnScreenNotifier2D</strong> 使用渲染剔除代码来确定它在屏幕上是否可见，因此除非 <reference internal="True" refuri="class_canvasitem#class-canvasitem-property-visible"><inline classes="std std-ref">CanvasItem.visible</inline></reference> 被设置为 <literal>true</literal>，否则它不会起作用。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference name="2D Dodge The Creeps 演示" refuri="https://godotengine.org/asset-library/asset/515">2D Dodge The Creeps 演示</reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="27"></colspec>
                    <colspec colwidth="60"></colspec>
                    <colspec colwidth="29"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rect2#class-rect2"><inline classes="std std-ref">Rect2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-visibleonscreennotifier2d-property-rect"><inline classes="std std-ref">rect</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Rect2(-10, -10, 20, 20)</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id4" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="25"></colspec>
                    <colspec colwidth="94"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-visibleonscreennotifier2d-method-is-on-screen"><inline classes="std std-ref">is_on_screen</inline></reference> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="信号">
            <title>信号</title>
            <target refid="class-visibleonscreennotifier2d-signal-screen-entered"></target>
            <paragraph classes="classref-signal" ids="class-visibleonscreennotifier2d-signal-screen-entered" names="class_visibleonscreennotifier2d_signal_screen_entered"><strong>screen_entered</strong> <strong>(</strong> <strong>)</strong></paragraph>
            <paragraph>当该 VisibleOnScreenNotifier2D 进入屏幕时发出。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-visibleonscreennotifier2d-signal-screen-exited"></target>
            <paragraph classes="classref-signal" ids="class-visibleonscreennotifier2d-signal-screen-exited" names="class_visibleonscreennotifier2d_signal_screen_exited"><strong>screen_exited</strong> <strong>(</strong> <strong>)</strong></paragraph>
            <paragraph>当该 VisibleOnScreenNotifier2D 退出屏幕时发出。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="属性说明">
            <title>属性说明</title>
            <target refid="class-visibleonscreennotifier2d-property-rect"></target>
            <paragraph classes="classref-property" ids="class-visibleonscreennotifier2d-property-rect" names="class_visibleonscreennotifier2d_property_rect"><reference internal="True" refuri="class_rect2#class-rect2"><inline classes="std std-ref">Rect2</inline></reference> <strong>rect</strong> = <literal>Rect2(-10, -10, 20, 20)</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_rect</strong> <strong>(</strong> <reference internal="True" refuri="class_rect2#class-rect2"><inline classes="std std-ref">Rect2</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_rect2#class-rect2"><inline classes="std std-ref">Rect2</inline></reference> <strong>get_rect</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>该 VisibleOnScreenNotifier2D 的边界矩形。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id7" names="方法说明">
            <title>方法说明</title>
            <target refid="class-visibleonscreennotifier2d-method-is-on-screen"></target>
            <paragraph classes="classref-method" ids="class-visibleonscreennotifier2d-method-is-on-screen" names="class_visibleonscreennotifier2d_method_is_on_screen"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_on_screen</strong> <strong>(</strong> <strong>)</strong> <abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
            <paragraph>如果为 <literal>true</literal>，则边界矩形在屏幕上。</paragraph>
            <paragraph><strong>注意：</strong><strong>VisibleOnScreenNotifier2D</strong> 被添加到场景树后需要一帧才能确定其可见性，因此该方法在它被实例化后，在绘制阶段之前，将始终返回 <literal>false</literal> 。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，所以可以直接使用类名调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

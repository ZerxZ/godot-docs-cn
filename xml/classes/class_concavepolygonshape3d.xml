<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_concavepolygonshape3d.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/ConcavePolygonShape3D.xml.</comment>
    <target refid="class-concavepolygonshape3d"></target>
    <section ids="concavepolygonshape3d class-concavepolygonshape3d" names="concavepolygonshape3d class_concavepolygonshape3d">
        <title>ConcavePolygonShape3D</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_shape3d#class-shape3d"><inline classes="std std-ref">Shape3D</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>用于物理碰撞的 3D 三角网格形状。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>一种用于物理模拟的 3D 三角网格形状。通常用于为 <reference internal="True" refuri="class_collisionshape3d#class-collisionshape3d"><inline classes="std std-ref">CollisionShape3D</inline></reference> 提供形状。</paragraph>
            <paragraph>作为一组相互连接的三角形， <strong>ConcavePolygonShape3D</strong> 是最自由的可配置的单一 3D 形状。它可以用于形成任何性质的多面体，甚至是不封闭体积的形状。然而，即使相互连接的三角形封闭了一个体积， <reference internal="True" refuri="class_convexpolygonshape3d#class-convexpolygonshape3d"><inline classes="std std-ref">ConvexPolygonShape3D</inline></reference> 仍然是<emphasis>中空</emphasis>的，这常常使其不适用于物理模拟或碰撞检测。</paragraph>
            <paragraph><strong>注意：</strong>当用于碰撞计算时， <strong>ConcavePolygonShape3D</strong> 旨在与 <reference internal="True" refuri="class_staticbody3d#class-staticbody3d"><inline classes="std std-ref">StaticBody3D</inline></reference> 等静态 <reference internal="True" refuri="class_collisionshape3d#class-collisionshape3d"><inline classes="std std-ref">CollisionShape3D</inline></reference> 节点一起使用 。并且对于 <reference internal="True" refuri="class_characterbody3d#class-characterbody3d"><inline classes="std std-ref">CharacterBody3D</inline></reference> 或 <reference internal="True" refuri="class_rigidbody3d#class-rigidbody3d"><inline classes="std std-ref">RigidBody3D</inline></reference>，在除静态模式之外的其他模式下可能表现不佳。</paragraph>
            <paragraph><strong>警告：</strong>较小的物理物体在快速移动时有机会穿过该形状。发生这种情况是因为在一帧上，物理物体可能位于形状的“外部”，而在下一帧上，它可能位于形状的“内部”。由于<strong>ConcavePolygonShape3D</strong> 是中空的，因此它不会检测到碰撞。</paragraph>
            <paragraph><strong>性能：</strong>由于其复杂性， <strong>ConcavePolygonShape3D</strong> 是检测碰撞最慢的 3D 碰撞形状。它的使用一般仅限于关卡几何体。对于凸几何体，应使用 <reference internal="True" refuri="class_convexpolygonshape3d#class-convexpolygonshape3d"><inline classes="std std-ref">ConvexPolygonShape3D</inline></reference> 。对于需要凹碰撞的动态物体，可以使用多个 <reference internal="True" refuri="class_convexpolygonshape3d#class-convexpolygonshape3d"><inline classes="std std-ref">ConvexPolygonShape3D</inline></reference> 通过凸分解来表示其碰撞；相关说明请参阅 <reference internal="True" refuri="class_convexpolygonshape3d#class-convexpolygonshape3d"><inline classes="std std-ref">ConvexPolygonShape3D</inline></reference> 文档。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference name="3D 物理测试演示" refuri="https://godotengine.org/asset-library/asset/2747">3D 物理测试演示</reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="25"></colspec>
                    <colspec colwidth="84"></colspec>
                    <colspec colwidth="11"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-concavepolygonshape3d-property-backface-collision"><inline classes="std std-ref">backface_collision</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id4" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="53"></colspec>
                    <colspec colwidth="131"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_packedvector3array#class-packedvector3array"><inline classes="std std-ref">PackedVector3Array</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-concavepolygonshape3d-method-get-faces"><inline classes="std std-ref">get_faces</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-concavepolygonshape3d-method-set-faces"><inline classes="std std-ref">set_faces</inline></reference>(faces: <reference internal="True" refuri="class_packedvector3array#class-packedvector3array"><inline classes="std std-ref">PackedVector3Array</inline></reference>)</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="属性说明">
            <title>属性说明</title>
            <target refid="class-concavepolygonshape3d-property-backface-collision"></target>
            <paragraph classes="classref-property" ids="class-concavepolygonshape3d-property-backface-collision" names="class_concavepolygonshape3d_property_backface_collision"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>backface_collision</strong> = <literal>false</literal> <reference internal="True" refid="class-concavepolygonshape3d-property-backface-collision"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_backface_collision_enabled</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_backface_collision_enabled</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果设置为 <literal>true</literal>，则碰撞会发生在凹形面的两侧。否则，它们只会沿着面法线发生。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="方法说明">
            <title>方法说明</title>
            <target refid="class-concavepolygonshape3d-method-get-faces"></target>
            <paragraph classes="classref-method" ids="class-concavepolygonshape3d-method-get-faces" names="class_concavepolygonshape3d_method_get_faces"><reference internal="True" refuri="class_packedvector3array#class-packedvector3array"><inline classes="std std-ref">PackedVector3Array</inline></reference> <strong>get_faces</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-concavepolygonshape3d-method-get-faces"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>以顶点数组的形式返回三角网格形状中的面。该（长度能被三整除的）数组自然三三分组；每组中的三个顶点定义一个三角形。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-concavepolygonshape3d-method-set-faces"></target>
            <paragraph classes="classref-method" ids="class-concavepolygonshape3d-method-set-faces" names="class_concavepolygonshape3d_method_set_faces"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_faces</strong>(faces: <reference internal="True" refuri="class_packedvector3array#class-packedvector3array"><inline classes="std std-ref">PackedVector3Array</inline></reference>) <reference internal="True" refid="class-concavepolygonshape3d-method-set-faces"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>根据顶点数组设置三角网格形状的面。<literal>faces</literal> 数组应更多由若干三元组构成，每三个顶点定义一个三角形。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

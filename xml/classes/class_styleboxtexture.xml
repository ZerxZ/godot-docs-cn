<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_styleboxtexture.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/StyleBoxTexture.xml.</comment>
    <target refid="class-styleboxtexture"></target>
    <section ids="styleboxtexture class-styleboxtexture" names="styleboxtexture class_styleboxtexture">
        <title>StyleBoxTexture</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>基于纹理的九宫格 <reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference>。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>基于纹理的九宫格 <reference internal="True" refuri="class_stylebox#class-stylebox"><inline classes="std std-ref">StyleBox</inline></reference>，类似于 <reference internal="True" refuri="class_ninepatchrect#class-ninepatchrect"><inline classes="std std-ref">NinePatchRect</inline></reference>。这种样式盒对纹理执行 3×3 缩放，只有中心单元格会被完全拉伸。这样就能够为不同大小的样式盒设计带边框的样式。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="62"></colspec>
                    <colspec colwidth="88"></colspec>
                    <colspec colwidth="23"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-styleboxtexture-axisstretchmode"><inline classes="std std-ref">AxisStretchMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-styleboxtexture-property-axis-stretch-horizontal"><inline classes="std std-ref">axis_stretch_horizontal</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-styleboxtexture-axisstretchmode"><inline classes="std std-ref">AxisStretchMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-styleboxtexture-property-axis-stretch-vertical"><inline classes="std std-ref">axis_stretch_vertical</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-styleboxtexture-property-draw-center"><inline classes="std std-ref">draw_center</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-styleboxtexture-property-expand-margin-bottom"><inline classes="std std-ref">expand_margin_bottom</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-styleboxtexture-property-expand-margin-left"><inline classes="std std-ref">expand_margin_left</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-styleboxtexture-property-expand-margin-right"><inline classes="std std-ref">expand_margin_right</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-styleboxtexture-property-expand-margin-top"><inline classes="std std-ref">expand_margin_top</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-styleboxtexture-property-modulate-color"><inline classes="std std-ref">modulate_color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Color(1, 1, 1, 1)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_rect2#class-rect2"><inline classes="std std-ref">Rect2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-styleboxtexture-property-region-rect"><inline classes="std std-ref">region_rect</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Rect2(0, 0, 0, 0)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-styleboxtexture-property-texture"><inline classes="std std-ref">texture</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-styleboxtexture-property-texture-margin-bottom"><inline classes="std std-ref">texture_margin_bottom</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-styleboxtexture-property-texture-margin-left"><inline classes="std std-ref">texture_margin_left</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-styleboxtexture-property-texture-margin-right"><inline classes="std std-ref">texture_margin_right</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-styleboxtexture-property-texture-margin-top"><inline classes="std std-ref">texture_margin_top</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="27"></colspec>
                    <colspec colwidth="162"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-styleboxtexture-method-get-expand-margin"><inline classes="std std-ref">get_expand_margin</inline></reference>(margin: <reference internal="True" refuri="class_@globalscope#enum-globalscope-side"><inline classes="std std-ref">Side</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-styleboxtexture-method-get-texture-margin"><inline classes="std std-ref">get_texture_margin</inline></reference>(margin: <reference internal="True" refuri="class_@globalscope#enum-globalscope-side"><inline classes="std std-ref">Side</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-styleboxtexture-method-set-expand-margin"><inline classes="std std-ref">set_expand_margin</inline></reference>(margin: <reference internal="True" refuri="class_@globalscope#enum-globalscope-side"><inline classes="std std-ref">Side</inline></reference>, size: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-styleboxtexture-method-set-expand-margin-all"><inline classes="std std-ref">set_expand_margin_all</inline></reference>(size: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-styleboxtexture-method-set-texture-margin"><inline classes="std std-ref">set_texture_margin</inline></reference>(margin: <reference internal="True" refuri="class_@globalscope#enum-globalscope-side"><inline classes="std std-ref">Side</inline></reference>, size: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-styleboxtexture-method-set-texture-margin-all"><inline classes="std std-ref">set_texture_margin_all</inline></reference>(size: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="枚举">
            <title>枚举</title>
            <target refid="enum-styleboxtexture-axisstretchmode"></target>
            <paragraph classes="classref-enumeration" ids="enum-styleboxtexture-axisstretchmode" names="enum_styleboxtexture_axisstretchmode">enum <strong>AxisStretchMode</strong>: <reference internal="True" refid="enum-styleboxtexture-axisstretchmode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-styleboxtexture-constant-axis-stretch-mode-stretch"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-styleboxtexture-constant-axis-stretch-mode-stretch" names="class_styleboxtexture_constant_axis_stretch_mode_stretch"><reference internal="True" refid="enum-styleboxtexture-axisstretchmode"><inline classes="std std-ref">AxisStretchMode</inline></reference> <strong>AXIS_STRETCH_MODE_STRETCH</strong> = <literal>0</literal></paragraph>
            <paragraph>拉伸样式盒的纹理。这会导致可见的失真，除非纹理大小与样式盒的大小完美匹配。</paragraph>
            <target refid="class-styleboxtexture-constant-axis-stretch-mode-tile"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-styleboxtexture-constant-axis-stretch-mode-tile" names="class_styleboxtexture_constant_axis_stretch_mode_tile"><reference internal="True" refid="enum-styleboxtexture-axisstretchmode"><inline classes="std std-ref">AxisStretchMode</inline></reference> <strong>AXIS_STRETCH_MODE_TILE</strong> = <literal>1</literal></paragraph>
            <paragraph>根据九宫格系统，重复样式盒的纹理，以匹配样式盒的大小。</paragraph>
            <target refid="class-styleboxtexture-constant-axis-stretch-mode-tile-fit"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-styleboxtexture-constant-axis-stretch-mode-tile-fit" names="class_styleboxtexture_constant_axis_stretch_mode_tile_fit"><reference internal="True" refid="enum-styleboxtexture-axisstretchmode"><inline classes="std std-ref">AxisStretchMode</inline></reference> <strong>AXIS_STRETCH_MODE_TILE_FIT</strong> = <literal>2</literal></paragraph>
            <paragraph>根据九宫格系统，重复样式盒的纹理，以匹配样式盒的大小。与 <reference internal="True" refid="class-styleboxtexture-constant-axis-stretch-mode-tile"><inline classes="std std-ref">AXIS_STRETCH_MODE_TILE</inline></reference> 不同，可能会稍微拉伸纹理以使九宫格纹理平铺无缝。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="属性说明">
            <title>属性说明</title>
            <target refid="class-styleboxtexture-property-axis-stretch-horizontal"></target>
            <paragraph classes="classref-property" ids="class-styleboxtexture-property-axis-stretch-horizontal" names="class_styleboxtexture_property_axis_stretch_horizontal"><reference internal="True" refid="enum-styleboxtexture-axisstretchmode"><inline classes="std std-ref">AxisStretchMode</inline></reference> <strong>axis_stretch_horizontal</strong> = <literal>0</literal> <reference internal="True" refid="class-styleboxtexture-property-axis-stretch-horizontal"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_h_axis_stretch_mode</strong>(value: <reference internal="True" refid="enum-styleboxtexture-axisstretchmode"><inline classes="std std-ref">AxisStretchMode</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-styleboxtexture-axisstretchmode"><inline classes="std std-ref">AxisStretchMode</inline></reference> <strong>get_h_axis_stretch_mode</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>控制如何水平拉伸或平铺样式盒的纹理。可能的取值见 <reference internal="True" refid="enum-styleboxtexture-axisstretchmode"><inline classes="std std-ref">AxisStretchMode</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-styleboxtexture-property-axis-stretch-vertical"></target>
            <paragraph classes="classref-property" ids="class-styleboxtexture-property-axis-stretch-vertical" names="class_styleboxtexture_property_axis_stretch_vertical"><reference internal="True" refid="enum-styleboxtexture-axisstretchmode"><inline classes="std std-ref">AxisStretchMode</inline></reference> <strong>axis_stretch_vertical</strong> = <literal>0</literal> <reference internal="True" refid="class-styleboxtexture-property-axis-stretch-vertical"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_v_axis_stretch_mode</strong>(value: <reference internal="True" refid="enum-styleboxtexture-axisstretchmode"><inline classes="std std-ref">AxisStretchMode</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-styleboxtexture-axisstretchmode"><inline classes="std std-ref">AxisStretchMode</inline></reference> <strong>get_v_axis_stretch_mode</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>控制如何垂直拉伸或平铺样式盒的纹理。可能的取值见 <reference internal="True" refid="enum-styleboxtexture-axisstretchmode"><inline classes="std std-ref">AxisStretchMode</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-styleboxtexture-property-draw-center"></target>
            <paragraph classes="classref-property" ids="class-styleboxtexture-property-draw-center" names="class_styleboxtexture_property_draw_center"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>draw_center</strong> = <literal>true</literal> <reference internal="True" refid="class-styleboxtexture-property-draw-center"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_draw_center</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_draw_center_enabled</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，将绘制九宫格纹理的中心图块。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-styleboxtexture-property-expand-margin-bottom"></target>
            <paragraph classes="classref-property" ids="class-styleboxtexture-property-expand-margin-bottom" names="class_styleboxtexture_property_expand_margin_bottom"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>expand_margin_bottom</strong> = <literal>0.0</literal> <reference internal="True" refid="class-styleboxtexture-property-expand-margin-bottom"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_expand_margin</strong>(margin: <reference internal="True" refuri="class_@globalscope#enum-globalscope-side"><inline classes="std std-ref">Side</inline></reference>, size: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_expand_margin</strong>(margin: <reference internal="True" refuri="class_@globalscope#enum-globalscope-side"><inline classes="std std-ref">Side</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>绘制时扩展此样式盒的下边距，使其绘制得比请求的大。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-styleboxtexture-property-expand-margin-left"></target>
            <paragraph classes="classref-property" ids="class-styleboxtexture-property-expand-margin-left" names="class_styleboxtexture_property_expand_margin_left"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>expand_margin_left</strong> = <literal>0.0</literal> <reference internal="True" refid="class-styleboxtexture-property-expand-margin-left"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_expand_margin</strong>(margin: <reference internal="True" refuri="class_@globalscope#enum-globalscope-side"><inline classes="std std-ref">Side</inline></reference>, size: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_expand_margin</strong>(margin: <reference internal="True" refuri="class_@globalscope#enum-globalscope-side"><inline classes="std std-ref">Side</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>绘制时扩展此样式盒的左边距，使其绘制得比请求的大。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-styleboxtexture-property-expand-margin-right"></target>
            <paragraph classes="classref-property" ids="class-styleboxtexture-property-expand-margin-right" names="class_styleboxtexture_property_expand_margin_right"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>expand_margin_right</strong> = <literal>0.0</literal> <reference internal="True" refid="class-styleboxtexture-property-expand-margin-right"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_expand_margin</strong>(margin: <reference internal="True" refuri="class_@globalscope#enum-globalscope-side"><inline classes="std std-ref">Side</inline></reference>, size: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_expand_margin</strong>(margin: <reference internal="True" refuri="class_@globalscope#enum-globalscope-side"><inline classes="std std-ref">Side</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>绘制时扩展此样式盒的右边距，使其绘制得比请求的大。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-styleboxtexture-property-expand-margin-top"></target>
            <paragraph classes="classref-property" ids="class-styleboxtexture-property-expand-margin-top" names="class_styleboxtexture_property_expand_margin_top"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>expand_margin_top</strong> = <literal>0.0</literal> <reference internal="True" refid="class-styleboxtexture-property-expand-margin-top"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_expand_margin</strong>(margin: <reference internal="True" refuri="class_@globalscope#enum-globalscope-side"><inline classes="std std-ref">Side</inline></reference>, size: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_expand_margin</strong>(margin: <reference internal="True" refuri="class_@globalscope#enum-globalscope-side"><inline classes="std std-ref">Side</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>绘制时扩展此样式盒的上边距，使其绘制得比请求的大。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-styleboxtexture-property-modulate-color"></target>
            <paragraph classes="classref-property" ids="class-styleboxtexture-property-modulate-color" names="class_styleboxtexture_property_modulate_color"><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>modulate_color</strong> = <literal>Color(1, 1, 1, 1)</literal> <reference internal="True" refid="class-styleboxtexture-property-modulate-color"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_modulate</strong>(value: <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>get_modulate</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>绘制此样式盒时用于调制纹理的颜色。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-styleboxtexture-property-region-rect"></target>
            <paragraph classes="classref-property" ids="class-styleboxtexture-property-region-rect" names="class_styleboxtexture_property_region_rect"><reference internal="True" refuri="class_rect2#class-rect2"><inline classes="std std-ref">Rect2</inline></reference> <strong>region_rect</strong> = <literal>Rect2(0, 0, 0, 0)</literal> <reference internal="True" refid="class-styleboxtexture-property-region-rect"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_region_rect</strong>(value: <reference internal="True" refuri="class_rect2#class-rect2"><inline classes="std std-ref">Rect2</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_rect2#class-rect2"><inline classes="std std-ref">Rect2</inline></reference> <strong>get_region_rect</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>指定要使用的纹理的子区域。</paragraph>
            <paragraph>这相当于首先将纹理包裹在具有相同区域的 <reference internal="True" refuri="class_atlastexture#class-atlastexture"><inline classes="std std-ref">AtlasTexture</inline></reference> 中。</paragraph>
            <paragraph>如果为空（<literal>Rect2(0, 0, 0, 0)</literal>），则将使用整个纹理。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-styleboxtexture-property-texture"></target>
            <paragraph classes="classref-property" ids="class-styleboxtexture-property-texture" names="class_styleboxtexture_property_texture"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>texture</strong> <reference internal="True" refid="class-styleboxtexture-property-texture"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_texture</strong>(value: <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>get_texture</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>绘制此样式盒时所使用的纹理。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-styleboxtexture-property-texture-margin-bottom"></target>
            <paragraph classes="classref-property" ids="class-styleboxtexture-property-texture-margin-bottom" names="class_styleboxtexture_property_texture_margin_bottom"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>texture_margin_bottom</strong> = <literal>0.0</literal> <reference internal="True" refid="class-styleboxtexture-property-texture-margin-bottom"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_texture_margin</strong>(margin: <reference internal="True" refuri="class_@globalscope#enum-globalscope-side"><inline classes="std std-ref">Side</inline></reference>, size: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_texture_margin</strong>(margin: <reference internal="True" refuri="class_@globalscope#enum-globalscope-side"><inline classes="std std-ref">Side</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>增加 3×3 StyleBox 的底边距。</paragraph>
            <paragraph>更高的值意味着更多的源纹理被认为是 3×3 box的底边的一部分。</paragraph>
            <paragraph>如果 <reference internal="True" refuri="class_stylebox#class-stylebox-property-content-margin-bottom"><inline classes="std std-ref">StyleBox.content_margin_bottom</inline></reference> 为负值，这个值也是作为后备值使用。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-styleboxtexture-property-texture-margin-left"></target>
            <paragraph classes="classref-property" ids="class-styleboxtexture-property-texture-margin-left" names="class_styleboxtexture_property_texture_margin_left"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>texture_margin_left</strong> = <literal>0.0</literal> <reference internal="True" refid="class-styleboxtexture-property-texture-margin-left"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_texture_margin</strong>(margin: <reference internal="True" refuri="class_@globalscope#enum-globalscope-side"><inline classes="std std-ref">Side</inline></reference>, size: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_texture_margin</strong>(margin: <reference internal="True" refuri="class_@globalscope#enum-globalscope-side"><inline classes="std std-ref">Side</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>增加 3×3 StyleBox 的左边距。</paragraph>
            <paragraph>较高的值意味着更多的源纹理被认为是 3×3 box左边框的一部分。</paragraph>
            <paragraph>如果 <reference internal="True" refuri="class_stylebox#class-stylebox-property-content-margin-left"><inline classes="std std-ref">StyleBox.content_margin_left</inline></reference> 为负值，这个值也是作为后备值使用。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-styleboxtexture-property-texture-margin-right"></target>
            <paragraph classes="classref-property" ids="class-styleboxtexture-property-texture-margin-right" names="class_styleboxtexture_property_texture_margin_right"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>texture_margin_right</strong> = <literal>0.0</literal> <reference internal="True" refid="class-styleboxtexture-property-texture-margin-right"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_texture_margin</strong>(margin: <reference internal="True" refuri="class_@globalscope#enum-globalscope-side"><inline classes="std std-ref">Side</inline></reference>, size: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_texture_margin</strong>(margin: <reference internal="True" refuri="class_@globalscope#enum-globalscope-side"><inline classes="std std-ref">Side</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>增加 3×3 StyleBox 的右边距。</paragraph>
            <paragraph>较高的值意味着更多的源纹理被认为是 3×3 box右边框的一部分。</paragraph>
            <paragraph>如果 <reference internal="True" refuri="class_stylebox#class-stylebox-property-content-margin-right"><inline classes="std std-ref">StyleBox.content_margin_right</inline></reference> 为负值，这个值也是作为后备值使用。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-styleboxtexture-property-texture-margin-top"></target>
            <paragraph classes="classref-property" ids="class-styleboxtexture-property-texture-margin-top" names="class_styleboxtexture_property_texture_margin_top"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>texture_margin_top</strong> = <literal>0.0</literal> <reference internal="True" refid="class-styleboxtexture-property-texture-margin-top"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_texture_margin</strong>(margin: <reference internal="True" refuri="class_@globalscope#enum-globalscope-side"><inline classes="std std-ref">Side</inline></reference>, size: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_texture_margin</strong>(margin: <reference internal="True" refuri="class_@globalscope#enum-globalscope-side"><inline classes="std std-ref">Side</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>增加 3×3 StyleBox 的上边距。</paragraph>
            <paragraph>较高的值意味着更多的源纹理被认为是 3×3 box上边框的一部分。</paragraph>
            <paragraph>如果 <reference internal="True" refuri="class_stylebox#class-stylebox-property-content-margin-top"><inline classes="std std-ref">StyleBox.content_margin_top</inline></reference> 为负值，这个值也是作为后备值使用。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="方法说明">
            <title>方法说明</title>
            <target refid="class-styleboxtexture-method-get-expand-margin"></target>
            <paragraph classes="classref-method" ids="class-styleboxtexture-method-get-expand-margin" names="class_styleboxtexture_method_get_expand_margin"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_expand_margin</strong>(margin: <reference internal="True" refuri="class_@globalscope#enum-globalscope-side"><inline classes="std std-ref">Side</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-styleboxtexture-method-get-expand-margin"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回指定边 <reference internal="True" refuri="class_@globalscope#enum-globalscope-side"><inline classes="std std-ref">Side</inline></reference> 的扩展边距大小。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-styleboxtexture-method-get-texture-margin"></target>
            <paragraph classes="classref-method" ids="class-styleboxtexture-method-get-texture-margin" names="class_styleboxtexture_method_get_texture_margin"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_texture_margin</strong>(margin: <reference internal="True" refuri="class_@globalscope#enum-globalscope-side"><inline classes="std std-ref">Side</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-styleboxtexture-method-get-texture-margin"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回指定边 <reference internal="True" refuri="class_@globalscope#enum-globalscope-side"><inline classes="std std-ref">Side</inline></reference> 的边距大小。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-styleboxtexture-method-set-expand-margin"></target>
            <paragraph classes="classref-method" ids="class-styleboxtexture-method-set-expand-margin" names="class_styleboxtexture_method_set_expand_margin"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_expand_margin</strong>(margin: <reference internal="True" refuri="class_@globalscope#enum-globalscope-side"><inline classes="std std-ref">Side</inline></reference>, size: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <reference internal="True" refid="class-styleboxtexture-method-set-expand-margin"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将指定边 <reference internal="True" refuri="class_@globalscope#enum-globalscope-side"><inline classes="std std-ref">Side</inline></reference> 的扩展边距设置为 <literal>size</literal> 像素。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-styleboxtexture-method-set-expand-margin-all"></target>
            <paragraph classes="classref-method" ids="class-styleboxtexture-method-set-expand-margin-all" names="class_styleboxtexture_method_set_expand_margin_all"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_expand_margin_all</strong>(size: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <reference internal="True" refid="class-styleboxtexture-method-set-expand-margin-all"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将所有边的扩展边距都设置为 <literal>size</literal> 像素。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-styleboxtexture-method-set-texture-margin"></target>
            <paragraph classes="classref-method" ids="class-styleboxtexture-method-set-texture-margin" names="class_styleboxtexture_method_set_texture_margin"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_texture_margin</strong>(margin: <reference internal="True" refuri="class_@globalscope#enum-globalscope-side"><inline classes="std std-ref">Side</inline></reference>, size: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <reference internal="True" refid="class-styleboxtexture-method-set-texture-margin"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将指定边 <reference internal="True" refuri="class_@globalscope#enum-globalscope-side"><inline classes="std std-ref">Side</inline></reference> 的边距设置为 <literal>size</literal> 像素。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-styleboxtexture-method-set-texture-margin-all"></target>
            <paragraph classes="classref-method" ids="class-styleboxtexture-method-set-texture-margin-all" names="class_styleboxtexture_method_set_texture_margin_all"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_texture_margin_all</strong>(size: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <reference internal="True" refid="class-styleboxtexture-method-set-texture-margin-all"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将所有边的边距都设置为 <literal>size</literal> 像素。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

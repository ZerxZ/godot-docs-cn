<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_visualshadernodecolorop.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/VisualShaderNodeColorOp.xml.</comment>
    <target refid="class-visualshadernodecolorop"></target>
    <section ids="visualshadernodecolorop class-visualshadernodecolorop" names="visualshadernodecolorop class_visualshadernodecolorop">
        <title>VisualShaderNodeColorOp</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_visualshadernode#class-visualshadernode"><inline classes="std std-ref">VisualShaderNode</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>在可视化着色器图中使用的 <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> 运算符。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>将 <reference internal="True" refid="class-visualshadernodecolorop-property-operator"><inline classes="std std-ref">operator</inline></reference> 应用于两个颜色输入。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="56"></colspec>
                    <colspec colwidth="66"></colspec>
                    <colspec colwidth="7"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-visualshadernodecolorop-operator"><inline classes="std std-ref">Operator</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-visualshadernodecolorop-property-operator"><inline classes="std std-ref">operator</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="枚举">
            <title>枚举</title>
            <target refid="enum-visualshadernodecolorop-operator"></target>
            <paragraph classes="classref-enumeration" ids="enum-visualshadernodecolorop-operator" names="enum_visualshadernodecolorop_operator">enum <strong>Operator</strong>:</paragraph>
            <target refid="class-visualshadernodecolorop-constant-op-screen"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-visualshadernodecolorop-constant-op-screen" names="class_visualshadernodecolorop_constant_op_screen"><reference internal="True" refid="enum-visualshadernodecolorop-operator"><inline classes="std std-ref">Operator</inline></reference> <strong>OP_SCREEN</strong> = <literal>0</literal></paragraph>
            <paragraph>用以下公式产生屏幕效果。</paragraph>
            <literal_block force="False" language="gdscript" linenos="False" xml:space="preserve">result = vec3(1.0) - (vec3(1.0) - a) * (vec3(1.0) - b);</literal_block>
            <target refid="class-visualshadernodecolorop-constant-op-difference"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-visualshadernodecolorop-constant-op-difference" names="class_visualshadernodecolorop_constant_op_difference"><reference internal="True" refid="enum-visualshadernodecolorop-operator"><inline classes="std std-ref">Operator</inline></reference> <strong>OP_DIFFERENCE</strong> = <literal>1</literal></paragraph>
            <paragraph>用以下公式产生差异效果。</paragraph>
            <literal_block force="False" language="gdscript" linenos="False" xml:space="preserve">result = abs(a - b);</literal_block>
            <target refid="class-visualshadernodecolorop-constant-op-darken"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-visualshadernodecolorop-constant-op-darken" names="class_visualshadernodecolorop_constant_op_darken"><reference internal="True" refid="enum-visualshadernodecolorop-operator"><inline classes="std std-ref">Operator</inline></reference> <strong>OP_DARKEN</strong> = <literal>2</literal></paragraph>
            <paragraph>用以下公式产生变暗效果。</paragraph>
            <literal_block force="False" language="gdscript" linenos="False" xml:space="preserve">result = min(a, b);</literal_block>
            <target refid="class-visualshadernodecolorop-constant-op-lighten"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-visualshadernodecolorop-constant-op-lighten" names="class_visualshadernodecolorop_constant_op_lighten"><reference internal="True" refid="enum-visualshadernodecolorop-operator"><inline classes="std std-ref">Operator</inline></reference> <strong>OP_LIGHTEN</strong> = <literal>3</literal></paragraph>
            <paragraph>用以下公式产生减淡效果。</paragraph>
            <literal_block force="False" language="gdscript" linenos="False" xml:space="preserve">result = max(a, b);</literal_block>
            <target refid="class-visualshadernodecolorop-constant-op-overlay"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-visualshadernodecolorop-constant-op-overlay" names="class_visualshadernodecolorop_constant_op_overlay"><reference internal="True" refid="enum-visualshadernodecolorop-operator"><inline classes="std std-ref">Operator</inline></reference> <strong>OP_OVERLAY</strong> = <literal>4</literal></paragraph>
            <paragraph>用以下公式产生叠加效果。</paragraph>
            <literal_block force="False" language="gdscript" linenos="False" xml:space="preserve">for (int i = 0; i &lt; 3; i++) {
    float base = a[i];
    float blend = b[i];
    if (base &lt; 0.5) {
        result[i] = 2.0 * base * blend;
    } else {
        result[i] = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
    }
}</literal_block>
            <target refid="class-visualshadernodecolorop-constant-op-dodge"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-visualshadernodecolorop-constant-op-dodge" names="class_visualshadernodecolorop_constant_op_dodge"><reference internal="True" refid="enum-visualshadernodecolorop-operator"><inline classes="std std-ref">Operator</inline></reference> <strong>OP_DODGE</strong> = <literal>5</literal></paragraph>
            <paragraph>用以下公式产生闪避效果。</paragraph>
            <literal_block force="False" language="gdscript" linenos="False" xml:space="preserve">result = a / (vec3(1.0) - b);</literal_block>
            <target refid="class-visualshadernodecolorop-constant-op-burn"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-visualshadernodecolorop-constant-op-burn" names="class_visualshadernodecolorop_constant_op_burn"><reference internal="True" refid="enum-visualshadernodecolorop-operator"><inline classes="std std-ref">Operator</inline></reference> <strong>OP_BURN</strong> = <literal>6</literal></paragraph>
            <paragraph>用以下公式产生燃烧效果。</paragraph>
            <literal_block force="False" language="gdscript" linenos="False" xml:space="preserve">result = vec3(1.0) - (vec3(1.0) - a) / b;</literal_block>
            <target refid="class-visualshadernodecolorop-constant-op-soft-light"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-visualshadernodecolorop-constant-op-soft-light" names="class_visualshadernodecolorop_constant_op_soft_light"><reference internal="True" refid="enum-visualshadernodecolorop-operator"><inline classes="std std-ref">Operator</inline></reference> <strong>OP_SOFT_LIGHT</strong> = <literal>7</literal></paragraph>
            <paragraph>用以下公式产生柔光效果。</paragraph>
            <literal_block force="False" language="gdscript" linenos="False" xml:space="preserve">for (int i = 0; i &lt; 3; i++) {
    float base = a[i];
    float blend = b[i];
    if (base &lt; 0.5) {
        result[i] = base * (blend + 0.5);
    } else {
        result[i] = 1.0 - (1.0 - base) * (1.0 - (blend - 0.5));
    }
}</literal_block>
            <target refid="class-visualshadernodecolorop-constant-op-hard-light"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-visualshadernodecolorop-constant-op-hard-light" names="class_visualshadernodecolorop_constant_op_hard_light"><reference internal="True" refid="enum-visualshadernodecolorop-operator"><inline classes="std std-ref">Operator</inline></reference> <strong>OP_HARD_LIGHT</strong> = <literal>8</literal></paragraph>
            <paragraph>用以下公式产生硬光效果。</paragraph>
            <literal_block force="False" language="gdscript" linenos="False" xml:space="preserve">for (int i = 0; i &lt; 3; i++) {
    float base = a[i];
    float blend = b[i];
    if (base &lt; 0.5) {
        result[i] = base * (2.0 * blend);
    } else {
        result[i] = 1.0 - (1.0 - base) * (1.0 - 2.0 * (blend - 0.5));
    }
}</literal_block>
            <target refid="class-visualshadernodecolorop-constant-op-max"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-visualshadernodecolorop-constant-op-max" names="class_visualshadernodecolorop_constant_op_max"><reference internal="True" refid="enum-visualshadernodecolorop-operator"><inline classes="std std-ref">Operator</inline></reference> <strong>OP_MAX</strong> = <literal>9</literal></paragraph>
            <paragraph>代表 <reference internal="True" refid="enum-visualshadernodecolorop-operator"><inline classes="std std-ref">Operator</inline></reference> 枚举的大小。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="属性说明">
            <title>属性说明</title>
            <target refid="class-visualshadernodecolorop-property-operator"></target>
            <paragraph classes="classref-property" ids="class-visualshadernodecolorop-property-operator" names="class_visualshadernodecolorop_property_operator"><reference internal="True" refid="enum-visualshadernodecolorop-operator"><inline classes="std std-ref">Operator</inline></reference> <strong>operator</strong> = <literal>0</literal></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph>void <strong>set_operator</strong> <strong>(</strong> <reference internal="True" refid="enum-visualshadernodecolorop-operator"><inline classes="std std-ref">Operator</inline></reference> value <strong>)</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-visualshadernodecolorop-operator"><inline classes="std std-ref">Operator</inline></reference> <strong>get_operator</strong> <strong>(</strong> <strong>)</strong></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>要应用于输入的运算符。参阅 <reference internal="True" refid="enum-visualshadernodecolorop-operator"><inline classes="std std-ref">Operator</inline></reference> 的选项。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用。不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，所以可以直接使用类名调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

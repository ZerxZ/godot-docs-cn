<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_meshdatatool.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/MeshDataTool.xml.</comment>
    <target refid="class-meshdatatool"></target>
    <section ids="meshdatatool class-meshdatatool" names="meshdatatool class_meshdatatool">
        <title>MeshDataTool</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>用于访问和编辑 <reference internal="True" refuri="class_mesh#class-mesh"><inline classes="std std-ref">Mesh</inline></reference> 数据的辅助工具。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>MeshDataTool 提供对 <reference internal="True" refuri="class_mesh#class-mesh"><inline classes="std std-ref">Mesh</inline></reference> 中各个顶点的访问。它允许用户读取和编辑网格的顶点数据。它还创建了一系列面和边。</paragraph>
            <paragraph>要使用 MeshDataTool，请使用 <reference internal="True" refid="class-meshdatatool-method-create-from-surface"><inline classes="std std-ref">create_from_surface</inline></reference> 加载一个网格。完成数据编辑后，使用 <reference internal="True" refid="class-meshdatatool-method-commit-to-surface"><inline classes="std std-ref">commit_to_surface</inline></reference> 将数据提交到一个网格。</paragraph>
            <paragraph>下面是如何使用 MeshDataTool 的示例。</paragraph>
            <container classes="sphinx-tabs" type="tab-element">
                <div aria-label="Tabbed content" role="tablist">
                    <button aria-controls="panel-0-R0RTY3JpcHQ=" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-0-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tab" tabindex="0">GDScript</button>
                    <button aria-controls="panel-0-QyM=" aria-selected="false" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-0-QyM=" name="QyM=" role="tab" tabindex="-1">C#</button>
                </div>
                <div aria-labelledby="tab-0-R0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-0-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve">var mesh = ArrayMesh.new()
mesh.add_surface_from_arrays(Mesh.PRIMITIVE_TRIANGLES, BoxMesh.new().get_mesh_arrays())
var mdt = MeshDataTool.new()
mdt.create_from_surface(mesh, 0)
for i in range(mdt.get_vertex_count()):
    var vertex = mdt.get_vertex(i)
    # 在这个例子中，我们将网格挤出一个单位，这会导致分离的面，因为它是平直着色的。
    vertex += mdt.get_vertex_normal(i)
    # 保存你的更改。
    mdt.set_vertex(i, vertex)
mesh.clear_surfaces()
mdt.commit_to_surface(mesh)
var mi = MeshInstance.new()
mi.mesh = mesh
add_child(mi)</literal_block>
                </div>
                <div aria-labelledby="tab-0-QyM=" classes="sphinx-tabs-panel code-tab group-tab" hidden="true" ids="panel-0-QyM=" name="QyM=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="csharp" linenos="False" xml:space="preserve">var mesh = new ArrayMesh();
mesh.AddSurfaceFromArrays(Mesh.PrimitiveType.Triangles, new BoxMesh().GetMeshArrays());
var mdt = new MeshDataTool();
mdt.CreateFromSurface(mesh, 0);
for (var i = 0; i &lt; mdt.GetVertexCount(); i++)
{
    Vector3 vertex = mdt.GetVertex(i);
    // 在这个例子中，我们将网格挤出一个单位，这会导致分离的面，因为它是平直着色的。
    vertex += mdt.GetVertexNormal(i);
    // 保存你的更改。
    mdt.SetVertex(i, vertex);
}
mesh.ClearSurfaces();
mdt.CommitToSurface(mesh);
var mi = new MeshInstance();
mi.Mesh = mesh;
AddChild(mi);</literal_block>
                </div>
            </container>
            <paragraph>另请参阅 <reference internal="True" refuri="class_arraymesh#class-arraymesh"><inline classes="std std-ref">ArrayMesh</inline></reference>、<reference internal="True" refuri="class_immediatemesh#class-immediatemesh"><inline classes="std std-ref">ImmediateMesh</inline></reference> 和 <reference internal="True" refuri="class_surfacetool#class-surfacetool"><inline classes="std std-ref">SurfaceTool</inline></reference>，以了解程序化几何生成。</paragraph>
            <paragraph><strong>注意：</strong>对于三角形基元模式的前面，Godot 使用顺时针<reference name="缠绕顺序" refuri="https://learnopengl.com/Advanced-OpenGL/Face-culling">缠绕顺序</reference>。</paragraph>
        </section>
        <section classes="classref-introduction-group" ids="id2" names="教程">
            <title>教程</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference internal="True" refuri="../tutorials/3d/procedural_geometry/meshdatatool"><inline classes="doc">使用 MeshDataTool</inline></reference></paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="53"></colspec>
                    <colspec colwidth="171"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-meshdatatool-method-clear"><inline classes="std std-ref">clear</inline></reference>()</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_@globalscope#enum-globalscope-error"><inline classes="std std-ref">Error</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-meshdatatool-method-commit-to-surface"><inline classes="std std-ref">commit_to_surface</inline></reference>(mesh: <reference internal="True" refuri="class_arraymesh#class-arraymesh"><inline classes="std std-ref">ArrayMesh</inline></reference>, compression_flags: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> = 0)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_@globalscope#enum-globalscope-error"><inline classes="std std-ref">Error</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-meshdatatool-method-create-from-surface"><inline classes="std std-ref">create_from_surface</inline></reference>(mesh: <reference internal="True" refuri="class_arraymesh#class-arraymesh"><inline classes="std std-ref">ArrayMesh</inline></reference>, surface: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-meshdatatool-method-get-edge-count"><inline classes="std std-ref">get_edge_count</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_packedint32array#class-packedint32array"><inline classes="std std-ref">PackedInt32Array</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-meshdatatool-method-get-edge-faces"><inline classes="std std-ref">get_edge_faces</inline></reference>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-meshdatatool-method-get-edge-meta"><inline classes="std std-ref">get_edge_meta</inline></reference>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-meshdatatool-method-get-edge-vertex"><inline classes="std std-ref">get_edge_vertex</inline></reference>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, vertex: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-meshdatatool-method-get-face-count"><inline classes="std std-ref">get_face_count</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-meshdatatool-method-get-face-edge"><inline classes="std std-ref">get_face_edge</inline></reference>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, edge: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-meshdatatool-method-get-face-meta"><inline classes="std std-ref">get_face_meta</inline></reference>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-meshdatatool-method-get-face-normal"><inline classes="std std-ref">get_face_normal</inline></reference>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-meshdatatool-method-get-face-vertex"><inline classes="std std-ref">get_face_vertex</inline></reference>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, vertex: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-meshdatatool-method-get-format"><inline classes="std std-ref">get_format</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_material#class-material"><inline classes="std std-ref">Material</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-meshdatatool-method-get-material"><inline classes="std std-ref">get_material</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-meshdatatool-method-get-vertex"><inline classes="std std-ref">get_vertex</inline></reference>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_packedint32array#class-packedint32array"><inline classes="std std-ref">PackedInt32Array</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-meshdatatool-method-get-vertex-bones"><inline classes="std std-ref">get_vertex_bones</inline></reference>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-meshdatatool-method-get-vertex-color"><inline classes="std std-ref">get_vertex_color</inline></reference>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-meshdatatool-method-get-vertex-count"><inline classes="std std-ref">get_vertex_count</inline></reference>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_packedint32array#class-packedint32array"><inline classes="std std-ref">PackedInt32Array</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-meshdatatool-method-get-vertex-edges"><inline classes="std std-ref">get_vertex_edges</inline></reference>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_packedint32array#class-packedint32array"><inline classes="std std-ref">PackedInt32Array</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-meshdatatool-method-get-vertex-faces"><inline classes="std std-ref">get_vertex_faces</inline></reference>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-meshdatatool-method-get-vertex-meta"><inline classes="std std-ref">get_vertex_meta</inline></reference>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-meshdatatool-method-get-vertex-normal"><inline classes="std std-ref">get_vertex_normal</inline></reference>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_plane#class-plane"><inline classes="std std-ref">Plane</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-meshdatatool-method-get-vertex-tangent"><inline classes="std std-ref">get_vertex_tangent</inline></reference>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-meshdatatool-method-get-vertex-uv"><inline classes="std std-ref">get_vertex_uv</inline></reference>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-meshdatatool-method-get-vertex-uv2"><inline classes="std std-ref">get_vertex_uv2</inline></reference>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_packedfloat32array#class-packedfloat32array"><inline classes="std std-ref">PackedFloat32Array</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-meshdatatool-method-get-vertex-weights"><inline classes="std std-ref">get_vertex_weights</inline></reference>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-meshdatatool-method-set-edge-meta"><inline classes="std std-ref">set_edge_meta</inline></reference>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, meta: <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-meshdatatool-method-set-face-meta"><inline classes="std std-ref">set_face_meta</inline></reference>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, meta: <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-meshdatatool-method-set-material"><inline classes="std std-ref">set_material</inline></reference>(material: <reference internal="True" refuri="class_material#class-material"><inline classes="std std-ref">Material</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-meshdatatool-method-set-vertex"><inline classes="std std-ref">set_vertex</inline></reference>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, vertex: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-meshdatatool-method-set-vertex-bones"><inline classes="std std-ref">set_vertex_bones</inline></reference>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, bones: <reference internal="True" refuri="class_packedint32array#class-packedint32array"><inline classes="std std-ref">PackedInt32Array</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-meshdatatool-method-set-vertex-color"><inline classes="std std-ref">set_vertex_color</inline></reference>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, color: <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-meshdatatool-method-set-vertex-meta"><inline classes="std std-ref">set_vertex_meta</inline></reference>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, meta: <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-meshdatatool-method-set-vertex-normal"><inline classes="std std-ref">set_vertex_normal</inline></reference>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, normal: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-meshdatatool-method-set-vertex-tangent"><inline classes="std std-ref">set_vertex_tangent</inline></reference>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, tangent: <reference internal="True" refuri="class_plane#class-plane"><inline classes="std std-ref">Plane</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-meshdatatool-method-set-vertex-uv"><inline classes="std std-ref">set_vertex_uv</inline></reference>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, uv: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-meshdatatool-method-set-vertex-uv2"><inline classes="std std-ref">set_vertex_uv2</inline></reference>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, uv2: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-meshdatatool-method-set-vertex-weights"><inline classes="std std-ref">set_vertex_weights</inline></reference>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, weights: <reference internal="True" refuri="class_packedfloat32array#class-packedfloat32array"><inline classes="std std-ref">PackedFloat32Array</inline></reference>)</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="方法说明">
            <title>方法说明</title>
            <target refid="class-meshdatatool-method-clear"></target>
            <paragraph classes="classref-method" ids="class-meshdatatool-method-clear" names="class_meshdatatool_method_clear"><abbreviation explanation="无返回值。">void</abbreviation> <strong>clear</strong>() <reference internal="True" refid="class-meshdatatool-method-clear"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将当前 MeshDataTool 中所有的数据全部清除。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-meshdatatool-method-commit-to-surface"></target>
            <paragraph classes="classref-method" ids="class-meshdatatool-method-commit-to-surface" names="class_meshdatatool_method_commit_to_surface"><reference internal="True" refuri="class_@globalscope#enum-globalscope-error"><inline classes="std std-ref">Error</inline></reference> <strong>commit_to_surface</strong>(mesh: <reference internal="True" refuri="class_arraymesh#class-arraymesh"><inline classes="std std-ref">ArrayMesh</inline></reference>, compression_flags: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> = 0) <reference internal="True" refid="class-meshdatatool-method-commit-to-surface"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>使用编辑后的数据，向指定的 <reference internal="True" refuri="class_mesh#class-mesh"><inline classes="std std-ref">Mesh</inline></reference> 中添加一个新的表面。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-meshdatatool-method-create-from-surface"></target>
            <paragraph classes="classref-method" ids="class-meshdatatool-method-create-from-surface" names="class_meshdatatool_method_create_from_surface"><reference internal="True" refuri="class_@globalscope#enum-globalscope-error"><inline classes="std std-ref">Error</inline></reference> <strong>create_from_surface</strong>(mesh: <reference internal="True" refuri="class_arraymesh#class-arraymesh"><inline classes="std std-ref">ArrayMesh</inline></reference>, surface: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <reference internal="True" refid="class-meshdatatool-method-create-from-surface"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>使用给定 <reference internal="True" refuri="class_mesh#class-mesh"><inline classes="std std-ref">Mesh</inline></reference> 的指定表面来填充 MeshDataTool 的数据。</paragraph>
            <paragraph>要求 <reference internal="True" refuri="class_mesh#class-mesh"><inline classes="std std-ref">Mesh</inline></reference> 的图元类型为 <reference internal="True" refuri="class_mesh#class-mesh-constant-primitive-triangles"><inline classes="std std-ref">Mesh.PRIMITIVE_TRIANGLES</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-meshdatatool-method-get-edge-count"></target>
            <paragraph classes="classref-method" ids="class-meshdatatool-method-get-edge-count" names="class_meshdatatool_method_get_edge_count"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_edge_count</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-meshdatatool-method-get-edge-count"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回这个 <reference internal="True" refuri="class_mesh#class-mesh"><inline classes="std std-ref">Mesh</inline></reference> 的边数。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-meshdatatool-method-get-edge-faces"></target>
            <paragraph classes="classref-method" ids="class-meshdatatool-method-get-edge-faces" names="class_meshdatatool_method_get_edge_faces"><reference internal="True" refuri="class_packedint32array#class-packedint32array"><inline classes="std std-ref">PackedInt32Array</inline></reference> <strong>get_edge_faces</strong>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-meshdatatool-method-get-edge-faces"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回与给定边相邻的面数组。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-meshdatatool-method-get-edge-meta"></target>
            <paragraph classes="classref-method" ids="class-meshdatatool-method-get-edge-meta" names="class_meshdatatool_method_get_edge_meta"><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> <strong>get_edge_meta</strong>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-meshdatatool-method-get-edge-meta"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回给定边的元数据。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-meshdatatool-method-get-edge-vertex"></target>
            <paragraph classes="classref-method" ids="class-meshdatatool-method-get-edge-vertex" names="class_meshdatatool_method_get_edge_vertex"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_edge_vertex</strong>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, vertex: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-meshdatatool-method-get-edge-vertex"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回连接到给定边的指定顶点的索引。</paragraph>
            <paragraph>顶点参数只能是 0 或 1，因为边是由两个顶点组成的。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-meshdatatool-method-get-face-count"></target>
            <paragraph classes="classref-method" ids="class-meshdatatool-method-get-face-count" names="class_meshdatatool_method_get_face_count"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_face_count</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-meshdatatool-method-get-face-count"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回这个 <reference internal="True" refuri="class_mesh#class-mesh"><inline classes="std std-ref">Mesh</inline></reference> 中的面数。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-meshdatatool-method-get-face-edge"></target>
            <paragraph classes="classref-method" ids="class-meshdatatool-method-get-face-edge" names="class_meshdatatool_method_get_face_edge"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_face_edge</strong>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, edge: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-meshdatatool-method-get-face-edge"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回与给定面关联的指定边。</paragraph>
            <paragraph>边参数必须是 0、1、2 之一，因为面只有 3 条边。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-meshdatatool-method-get-face-meta"></target>
            <paragraph classes="classref-method" ids="class-meshdatatool-method-get-face-meta" names="class_meshdatatool_method_get_face_meta"><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> <strong>get_face_meta</strong>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-meshdatatool-method-get-face-meta"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回与给定面关联的元数据。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-meshdatatool-method-get-face-normal"></target>
            <paragraph classes="classref-method" ids="class-meshdatatool-method-get-face-normal" names="class_meshdatatool_method_get_face_normal"><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> <strong>get_face_normal</strong>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-meshdatatool-method-get-face-normal"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>计算并返回给定面的面法线。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-meshdatatool-method-get-face-vertex"></target>
            <paragraph classes="classref-method" ids="class-meshdatatool-method-get-face-vertex" names="class_meshdatatool_method_get_face_vertex"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_face_vertex</strong>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, vertex: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-meshdatatool-method-get-face-vertex"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回给定面的指定顶点索引。</paragraph>
            <paragraph>顶点参数必须为 0、1 或 2，因为面包含三个顶点。</paragraph>
            <paragraph><strong>示例：</strong></paragraph>
            <container classes="sphinx-tabs" type="tab-element">
                <div aria-label="Tabbed content" role="tablist">
                    <button aria-controls="panel-1-R0RTY3JpcHQ=" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-1-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tab" tabindex="0">GDScript</button>
                    <button aria-controls="panel-1-QyM=" aria-selected="false" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-1-QyM=" name="QyM=" role="tab" tabindex="-1">C#</button>
                </div>
                <div aria-labelledby="tab-1-R0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-1-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve">var index = mesh_data_tool.get_face_vertex(0, 1) # 获取第一个面的第二个顶点的索引。
var position = mesh_data_tool.get_vertex(index)
var normal = mesh_data_tool.get_vertex_normal(index)</literal_block>
                </div>
                <div aria-labelledby="tab-1-QyM=" classes="sphinx-tabs-panel code-tab group-tab" hidden="true" ids="panel-1-QyM=" name="QyM=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="csharp" linenos="False" xml:space="preserve">int index = meshDataTool.GetFaceVertex(0, 1); // 获取第一个面的第二个顶点的索引。
Vector3 position = meshDataTool.GetVertex(index);
Vector3 normal = meshDataTool.GetVertexNormal(index);</literal_block>
                </div>
            </container>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-meshdatatool-method-get-format"></target>
            <paragraph classes="classref-method" ids="class-meshdatatool-method-get-format" names="class_meshdatatool_method_get_format"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_format</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-meshdatatool-method-get-format"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>将 <reference internal="True" refuri="class_mesh#class-mesh"><inline classes="std std-ref">Mesh</inline></reference> 的格式返回为 <reference internal="True" refuri="class_mesh#enum-mesh-arrayformat"><inline classes="std std-ref">ArrayFormat</inline></reference> 标志的组合。例如，包含顶点和法线的网格将返回为 <literal>3</literal> 的格式，因为 <reference internal="True" refuri="class_mesh#class-mesh-constant-array-format-vertex"><inline classes="std std-ref">Mesh.ARRAY_FORMAT_VERTEX</inline></reference> 是 <literal>1</literal>，而 <reference internal="True" refuri="class_mesh#class-mesh-constant-array-format-normal"><inline classes="std std-ref">Mesh.ARRAY_FORMAT_NORMAL</inline></reference> 是 <literal>2</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-meshdatatool-method-get-material"></target>
            <paragraph classes="classref-method" ids="class-meshdatatool-method-get-material" names="class_meshdatatool_method_get_material"><reference internal="True" refuri="class_material#class-material"><inline classes="std std-ref">Material</inline></reference> <strong>get_material</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-meshdatatool-method-get-material"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回分配给该 <reference internal="True" refuri="class_mesh#class-mesh"><inline classes="std std-ref">Mesh</inline></reference> 的材质。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-meshdatatool-method-get-vertex"></target>
            <paragraph classes="classref-method" ids="class-meshdatatool-method-get-vertex" names="class_meshdatatool_method_get_vertex"><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> <strong>get_vertex</strong>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-meshdatatool-method-get-vertex"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回给定顶点的位置。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-meshdatatool-method-get-vertex-bones"></target>
            <paragraph classes="classref-method" ids="class-meshdatatool-method-get-vertex-bones" names="class_meshdatatool_method_get_vertex_bones"><reference internal="True" refuri="class_packedint32array#class-packedint32array"><inline classes="std std-ref">PackedInt32Array</inline></reference> <strong>get_vertex_bones</strong>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-meshdatatool-method-get-vertex-bones"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回给定顶点的骨骼。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-meshdatatool-method-get-vertex-color"></target>
            <paragraph classes="classref-method" ids="class-meshdatatool-method-get-vertex-color" names="class_meshdatatool_method_get_vertex_color"><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>get_vertex_color</strong>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-meshdatatool-method-get-vertex-color"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回给定顶点的颜色。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-meshdatatool-method-get-vertex-count"></target>
            <paragraph classes="classref-method" ids="class-meshdatatool-method-get-vertex-count" names="class_meshdatatool_method_get_vertex_count"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_vertex_count</strong>() <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-meshdatatool-method-get-vertex-count"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回 <reference internal="True" refuri="class_mesh#class-mesh"><inline classes="std std-ref">Mesh</inline></reference> 中顶点的总数。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-meshdatatool-method-get-vertex-edges"></target>
            <paragraph classes="classref-method" ids="class-meshdatatool-method-get-vertex-edges" names="class_meshdatatool_method_get_vertex_edges"><reference internal="True" refuri="class_packedint32array#class-packedint32array"><inline classes="std std-ref">PackedInt32Array</inline></reference> <strong>get_vertex_edges</strong>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-meshdatatool-method-get-vertex-edges"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回共享给定顶点的边的数组。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-meshdatatool-method-get-vertex-faces"></target>
            <paragraph classes="classref-method" ids="class-meshdatatool-method-get-vertex-faces" names="class_meshdatatool_method_get_vertex_faces"><reference internal="True" refuri="class_packedint32array#class-packedint32array"><inline classes="std std-ref">PackedInt32Array</inline></reference> <strong>get_vertex_faces</strong>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-meshdatatool-method-get-vertex-faces"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回共享给定顶点的面数组。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-meshdatatool-method-get-vertex-meta"></target>
            <paragraph classes="classref-method" ids="class-meshdatatool-method-get-vertex-meta" names="class_meshdatatool_method_get_vertex_meta"><reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> <strong>get_vertex_meta</strong>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-meshdatatool-method-get-vertex-meta"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回与给定顶点关联的元数据。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-meshdatatool-method-get-vertex-normal"></target>
            <paragraph classes="classref-method" ids="class-meshdatatool-method-get-vertex-normal" names="class_meshdatatool_method_get_vertex_normal"><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> <strong>get_vertex_normal</strong>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-meshdatatool-method-get-vertex-normal"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回给定顶点的法线。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-meshdatatool-method-get-vertex-tangent"></target>
            <paragraph classes="classref-method" ids="class-meshdatatool-method-get-vertex-tangent" names="class_meshdatatool_method_get_vertex_tangent"><reference internal="True" refuri="class_plane#class-plane"><inline classes="std std-ref">Plane</inline></reference> <strong>get_vertex_tangent</strong>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-meshdatatool-method-get-vertex-tangent"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回给定顶点的切线。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-meshdatatool-method-get-vertex-uv"></target>
            <paragraph classes="classref-method" ids="class-meshdatatool-method-get-vertex-uv" names="class_meshdatatool_method_get_vertex_uv"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>get_vertex_uv</strong>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-meshdatatool-method-get-vertex-uv"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回给定顶点的 UV。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-meshdatatool-method-get-vertex-uv2"></target>
            <paragraph classes="classref-method" ids="class-meshdatatool-method-get-vertex-uv2" names="class_meshdatatool_method_get_vertex_uv2"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>get_vertex_uv2</strong>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-meshdatatool-method-get-vertex-uv2"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回给定顶点的 UV2。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-meshdatatool-method-get-vertex-weights"></target>
            <paragraph classes="classref-method" ids="class-meshdatatool-method-get-vertex-weights" names="class_meshdatatool_method_get_vertex_weights"><reference internal="True" refuri="class_packedfloat32array#class-packedfloat32array"><inline classes="std std-ref">PackedFloat32Array</inline></reference> <strong>get_vertex_weights</strong>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>) <abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-meshdatatool-method-get-vertex-weights"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回给定顶点的骨骼权重。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-meshdatatool-method-set-edge-meta"></target>
            <paragraph classes="classref-method" ids="class-meshdatatool-method-set-edge-meta" names="class_meshdatatool_method_set_edge_meta"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_edge_meta</strong>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, meta: <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference>) <reference internal="True" refid="class-meshdatatool-method-set-edge-meta"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置给定边的元数据。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-meshdatatool-method-set-face-meta"></target>
            <paragraph classes="classref-method" ids="class-meshdatatool-method-set-face-meta" names="class_meshdatatool_method_set_face_meta"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_face_meta</strong>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, meta: <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference>) <reference internal="True" refid="class-meshdatatool-method-set-face-meta"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置给定面的元数据。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-meshdatatool-method-set-material"></target>
            <paragraph classes="classref-method" ids="class-meshdatatool-method-set-material" names="class_meshdatatool_method_set_material"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_material</strong>(material: <reference internal="True" refuri="class_material#class-material"><inline classes="std std-ref">Material</inline></reference>) <reference internal="True" refid="class-meshdatatool-method-set-material"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置新构建的 <reference internal="True" refuri="class_mesh#class-mesh"><inline classes="std std-ref">Mesh</inline></reference> 使用的材质。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-meshdatatool-method-set-vertex"></target>
            <paragraph classes="classref-method" ids="class-meshdatatool-method-set-vertex" names="class_meshdatatool_method_set_vertex"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_vertex</strong>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, vertex: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>) <reference internal="True" refid="class-meshdatatool-method-set-vertex"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置给定顶点的位置。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-meshdatatool-method-set-vertex-bones"></target>
            <paragraph classes="classref-method" ids="class-meshdatatool-method-set-vertex-bones" names="class_meshdatatool_method_set_vertex_bones"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_vertex_bones</strong>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, bones: <reference internal="True" refuri="class_packedint32array#class-packedint32array"><inline classes="std std-ref">PackedInt32Array</inline></reference>) <reference internal="True" refid="class-meshdatatool-method-set-vertex-bones"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置给定顶点的骨骼。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-meshdatatool-method-set-vertex-color"></target>
            <paragraph classes="classref-method" ids="class-meshdatatool-method-set-vertex-color" names="class_meshdatatool_method_set_vertex_color"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_vertex_color</strong>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, color: <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference>) <reference internal="True" refid="class-meshdatatool-method-set-vertex-color"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置给定顶点的颜色。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-meshdatatool-method-set-vertex-meta"></target>
            <paragraph classes="classref-method" ids="class-meshdatatool-method-set-vertex-meta" names="class_meshdatatool_method_set_vertex_meta"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_vertex_meta</strong>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, meta: <reference internal="True" refuri="class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference>) <reference internal="True" refid="class-meshdatatool-method-set-vertex-meta"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置与给定顶点关联的元数据。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-meshdatatool-method-set-vertex-normal"></target>
            <paragraph classes="classref-method" ids="class-meshdatatool-method-set-vertex-normal" names="class_meshdatatool_method_set_vertex_normal"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_vertex_normal</strong>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, normal: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>) <reference internal="True" refid="class-meshdatatool-method-set-vertex-normal"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置给定顶点的法线。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-meshdatatool-method-set-vertex-tangent"></target>
            <paragraph classes="classref-method" ids="class-meshdatatool-method-set-vertex-tangent" names="class_meshdatatool_method_set_vertex_tangent"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_vertex_tangent</strong>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, tangent: <reference internal="True" refuri="class_plane#class-plane"><inline classes="std std-ref">Plane</inline></reference>) <reference internal="True" refid="class-meshdatatool-method-set-vertex-tangent"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置给定顶点的切线。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-meshdatatool-method-set-vertex-uv"></target>
            <paragraph classes="classref-method" ids="class-meshdatatool-method-set-vertex-uv" names="class_meshdatatool_method_set_vertex_uv"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_vertex_uv</strong>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, uv: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <reference internal="True" refid="class-meshdatatool-method-set-vertex-uv"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置给定顶点的 UV。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-meshdatatool-method-set-vertex-uv2"></target>
            <paragraph classes="classref-method" ids="class-meshdatatool-method-set-vertex-uv2" names="class_meshdatatool_method_set_vertex_uv2"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_vertex_uv2</strong>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, uv2: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <reference internal="True" refid="class-meshdatatool-method-set-vertex-uv2"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置给定顶点的 UV2。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-meshdatatool-method-set-vertex-weights"></target>
            <paragraph classes="classref-method" ids="class-meshdatatool-method-set-vertex-weights" names="class_meshdatatool_method_set_vertex_weights"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_vertex_weights</strong>(idx: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>, weights: <reference internal="True" refuri="class_packedfloat32array#class-packedfloat32array"><inline classes="std std-ref">PackedFloat32Array</inline></reference>) <reference internal="True" refid="class-meshdatatool-method-set-vertex-weights"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置给定顶点的骨骼权重。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法没有副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效操作符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列标志构成的位掩码整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

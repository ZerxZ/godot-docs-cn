<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_editorresourceconversionplugin.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/EditorResourceConversionPlugin.xml.</comment>
    <target refid="class-editorresourceconversionplugin"></target>
    <section ids="editorresourceconversionplugin class-editorresourceconversionplugin" names="editorresourceconversionplugin class_editorresourceconversionplugin">
        <title>EditorResourceConversionPlugin</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>用于在编辑器资源选择器的上下文菜单中添加从一种资源格式到另一种资源格式的自定义转换器的插件；例如，将 <reference internal="True" refuri="class_standardmaterial3d#class-standardmaterial3d"><inline classes="std std-ref">StandardMaterial3D</inline></reference> 转换为 <reference internal="True" refuri="class_shadermaterial#class-shadermaterial"><inline classes="std std-ref">ShaderMaterial</inline></reference>。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph>当编辑器检查器中的资源被调出上下文菜单时，<strong>EditorResourceConversionPlugin</strong> 被调用。相关的转换插件将作为菜单选项出现，以将给定的资源转换为目标类型。</paragraph>
            <paragraph>下面展示了一个将 <reference internal="True" refuri="class_imagetexture#class-imagetexture"><inline classes="std std-ref">ImageTexture</inline></reference> 转换为 <reference internal="True" refuri="class_portablecompressedtexture2d#class-portablecompressedtexture2d"><inline classes="std std-ref">PortableCompressedTexture2D</inline></reference> 的基本插件示例。</paragraph>
            <container classes="sphinx-tabs" type="tab-element">
                <div aria-label="Tabbed content" role="tablist">
                    <button aria-controls="panel-0-R0RTY3JpcHQ=" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-0-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tab" tabindex="0">GDScript</button>
                </div>
                <div aria-labelledby="tab-0-R0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-0-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve">extends EditorResourceConversionPlugin

func _handles(resource: Resource):
    return resource is ImageTexture

func _converts_to():
    return "PortableCompressedTexture2D"

func _convert(itex: Resource):
    var ptex = PortableCompressedTexture2D.new()
    ptex.create_from_image(itex.get_image(), PortableCompressedTexture2D.COMPRESSION_MODE_LOSSLESS)
    return ptex</literal_block>
                </div>
            </container>
            <paragraph>要使用 <strong>EditorResourceConversionPlugin</strong>，请先使用 <reference internal="True" refuri="class_editorplugin#class-editorplugin-method-add-resource-conversion-plugin"><inline classes="std std-ref">EditorPlugin.add_resource_conversion_plugin</inline></reference> 方法注册它。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="33"></colspec>
                    <colspec colwidth="147"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorresourceconversionplugin-private-method-convert"><inline classes="std std-ref">_convert</inline></reference>(resource: <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorresourceconversionplugin-private-method-converts-to"><inline classes="std std-ref">_converts_to</inline></reference>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-editorresourceconversionplugin-private-method-handles"><inline classes="std std-ref">_handles</inline></reference>(resource: <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id3" names="方法说明">
            <title>方法说明</title>
            <target refid="class-editorresourceconversionplugin-private-method-convert"></target>
            <paragraph classes="classref-method" ids="class-editorresourceconversionplugin-private-method-convert" names="class_editorresourceconversionplugin_private_method__convert"><reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>_convert</strong>(resource: <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-editorresourceconversionplugin-private-method-convert"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>获取输入 <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> 并将其转换为 <reference internal="True" refid="class-editorresourceconversionplugin-private-method-converts-to"><inline classes="std std-ref">_converts_to</inline></reference> 中给定的类型。返回的 <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> 是转换后的结果，输入的 <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> 保持不变。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorresourceconversionplugin-private-method-converts-to"></target>
            <paragraph classes="classref-method" ids="class-editorresourceconversionplugin-private-method-converts-to" names="class_editorresourceconversionplugin_private_method__converts_to"><reference internal="True" refuri="class_string#class-string"><inline classes="std std-ref">String</inline></reference> <strong>_converts_to</strong>() <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-editorresourceconversionplugin-private-method-converts-to"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回该插件将源资源转换为的 <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> 的目标类型的类名。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-editorresourceconversionplugin-private-method-handles"></target>
            <paragraph classes="classref-method" ids="class-editorresourceconversionplugin-private-method-handles" names="class_editorresourceconversionplugin_private_method__handles"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>_handles</strong>(resource: <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference>) <abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation> <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-editorresourceconversionplugin-private-method-handles"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>调用以确定特定 <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> 是否可以通过该插件转换为目标资源类型。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效运算符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列位标志构成位掩码的整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/classes/class_particleprocessmaterial.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <comment xml:space="preserve">DO NOT EDIT THIS FILE!!!</comment>
    <comment xml:space="preserve">Generated automatically from Godot engine sources.</comment>
    <comment xml:space="preserve">Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.</comment>
    <comment xml:space="preserve">XML source: https://github.com/godotengine/godot/tree/master/doc/classes/ParticleProcessMaterial.xml.</comment>
    <target refid="class-particleprocessmaterial"></target>
    <section ids="particleprocessmaterial class-particleprocessmaterial" names="particleprocessmaterial class_particleprocessmaterial">
        <title>ParticleProcessMaterial</title>
        <paragraph><strong>继承：</strong> <reference internal="True" refuri="class_material#class-material"><inline classes="std std-ref">Material</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_resource#class-resource"><inline classes="std std-ref">Resource</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_refcounted#class-refcounted"><inline classes="std std-ref">RefCounted</inline></reference> <strong>&lt;</strong> <reference internal="True" refuri="class_object#class-object"><inline classes="std std-ref">Object</inline></reference></paragraph>
        <paragraph>保存用于 <reference internal="True" refuri="class_gpuparticles2d#class-gpuparticles2d"><inline classes="std std-ref">GPUParticles2D</inline></reference> 或 <reference internal="True" refuri="class_gpuparticles3d#class-gpuparticles3d"><inline classes="std std-ref">GPUParticles3D</inline></reference> 节点的粒子配置。</paragraph>
        <section classes="classref-introduction-group" ids="id1" names="描述">
            <title>描述</title>
            <paragraph><strong>ParticleProcessMaterial</strong> 定义了粒子的属性和行为。<reference internal="True" refuri="class_gpuparticles3d#class-gpuparticles3d"><inline classes="std std-ref">GPUParticles3D</inline></reference> 和 <reference internal="True" refuri="class_gpuparticles2d#class-gpuparticles2d"><inline classes="std std-ref">GPUParticles2D</inline></reference> 节点的 <literal>process_material</literal> 会使用这种材质。这种材质的有些属性是在粒子发射时应用的，有些则会应用 <reference internal="True" refuri="class_curvetexture#class-curvetexture"><inline classes="std std-ref">CurveTexture</inline></reference> 或 <reference internal="True" refuri="class_gradienttexture1d#class-gradienttexture1d"><inline classes="std std-ref">GradientTexture1D</inline></reference> 让数值或颜色值在粒子的生命周期中不断变化。</paragraph>
        </section>
        <section classes="classref-reftable-group" ids="id2" names="属性">
            <title>属性</title>
            <table classes="colwidths-auto">
                <tgroup cols="3">
                    <colspec colwidth="68"></colspec>
                    <colspec colwidth="120"></colspec>
                    <colspec colwidth="25"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-alpha-curve"><inline classes="std std-ref">alpha_curve</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-angle-curve"><inline classes="std std-ref">angle_curve</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-angle-max"><inline classes="std std-ref">angle_max</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-angle-min"><inline classes="std std-ref">angle_min</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-angular-velocity-curve"><inline classes="std std-ref">angular_velocity_curve</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-angular-velocity-max"><inline classes="std std-ref">angular_velocity_max</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-angular-velocity-min"><inline classes="std std-ref">angular_velocity_min</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-anim-offset-curve"><inline classes="std std-ref">anim_offset_curve</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-anim-offset-max"><inline classes="std std-ref">anim_offset_max</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-anim-offset-min"><inline classes="std std-ref">anim_offset_min</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-anim-speed-curve"><inline classes="std std-ref">anim_speed_curve</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-anim-speed-max"><inline classes="std std-ref">anim_speed_max</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-anim-speed-min"><inline classes="std std-ref">anim_speed_min</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-attractor-interaction-enabled"><inline classes="std std-ref">attractor_interaction_enabled</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>true</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-collision-bounce"><inline classes="std std-ref">collision_bounce</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-collision-friction"><inline classes="std std-ref">collision_friction</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-particleprocessmaterial-collisionmode"><inline classes="std std-ref">CollisionMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-collision-mode"><inline classes="std std-ref">collision_mode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-collision-use-scale"><inline classes="std std-ref">collision_use_scale</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-color"><inline classes="std std-ref">color</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Color(1, 1, 1, 1)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-color-initial-ramp"><inline classes="std std-ref">color_initial_ramp</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-color-ramp"><inline classes="std std-ref">color_ramp</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-damping-curve"><inline classes="std std-ref">damping_curve</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-damping-max"><inline classes="std std-ref">damping_max</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-damping-min"><inline classes="std std-ref">damping_min</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-direction"><inline classes="std std-ref">direction</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Vector3(1, 0, 0)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-directional-velocity-curve"><inline classes="std std-ref">directional_velocity_curve</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-directional-velocity-max"><inline classes="std std-ref">directional_velocity_max</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-directional-velocity-min"><inline classes="std std-ref">directional_velocity_min</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-emission-box-extents"><inline classes="std std-ref">emission_box_extents</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-emission-color-texture"><inline classes="std std-ref">emission_color_texture</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-emission-curve"><inline classes="std std-ref">emission_curve</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-emission-normal-texture"><inline classes="std std-ref">emission_normal_texture</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-emission-point-count"><inline classes="std std-ref">emission_point_count</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-emission-point-texture"><inline classes="std std-ref">emission_point_texture</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-emission-ring-axis"><inline classes="std std-ref">emission_ring_axis</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-emission-ring-height"><inline classes="std std-ref">emission_ring_height</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-emission-ring-inner-radius"><inline classes="std std-ref">emission_ring_inner_radius</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-emission-ring-radius"><inline classes="std std-ref">emission_ring_radius</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-particleprocessmaterial-emissionshape"><inline classes="std std-ref">EmissionShape</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-emission-shape"><inline classes="std std-ref">emission_shape</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-emission-shape-offset"><inline classes="std std-ref">emission_shape_offset</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Vector3(0, 0, 0)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-emission-shape-scale"><inline classes="std std-ref">emission_shape_scale</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Vector3(1, 1, 1)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-emission-sphere-radius"><inline classes="std std-ref">emission_sphere_radius</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-flatness"><inline classes="std std-ref">flatness</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-gravity"><inline classes="std std-ref">gravity</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Vector3(0, -9.8, 0)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-hue-variation-curve"><inline classes="std std-ref">hue_variation_curve</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-hue-variation-max"><inline classes="std std-ref">hue_variation_max</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-hue-variation-min"><inline classes="std std-ref">hue_variation_min</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-inherit-velocity-ratio"><inline classes="std std-ref">inherit_velocity_ratio</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-initial-velocity-max"><inline classes="std std-ref">initial_velocity_max</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-initial-velocity-min"><inline classes="std std-ref">initial_velocity_min</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-lifetime-randomness"><inline classes="std std-ref">lifetime_randomness</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-linear-accel-curve"><inline classes="std std-ref">linear_accel_curve</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-linear-accel-max"><inline classes="std std-ref">linear_accel_max</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-linear-accel-min"><inline classes="std std-ref">linear_accel_min</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-orbit-velocity-curve"><inline classes="std std-ref">orbit_velocity_curve</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-orbit-velocity-max"><inline classes="std std-ref">orbit_velocity_max</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-orbit-velocity-min"><inline classes="std std-ref">orbit_velocity_min</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-particle-flag-align-y"><inline classes="std std-ref">particle_flag_align_y</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-particle-flag-damping-as-friction"><inline classes="std std-ref">particle_flag_damping_as_friction</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-particle-flag-disable-z"><inline classes="std std-ref">particle_flag_disable_z</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-particle-flag-rotate-y"><inline classes="std std-ref">particle_flag_rotate_y</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-radial-accel-curve"><inline classes="std std-ref">radial_accel_curve</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-radial-accel-max"><inline classes="std std-ref">radial_accel_max</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-radial-accel-min"><inline classes="std std-ref">radial_accel_min</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-radial-velocity-curve"><inline classes="std std-ref">radial_velocity_curve</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-radial-velocity-max"><inline classes="std std-ref">radial_velocity_max</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-radial-velocity-min"><inline classes="std std-ref">radial_velocity_min</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-scale-curve"><inline classes="std std-ref">scale_curve</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-scale-max"><inline classes="std std-ref">scale_max</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-scale-min"><inline classes="std std-ref">scale_min</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-scale-over-velocity-curve"><inline classes="std std-ref">scale_over_velocity_curve</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-scale-over-velocity-max"><inline classes="std std-ref">scale_over_velocity_max</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-scale-over-velocity-min"><inline classes="std std-ref">scale_over_velocity_min</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-spread"><inline classes="std std-ref">spread</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>45.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-sub-emitter-amount-at-collision"><inline classes="std std-ref">sub_emitter_amount_at_collision</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-sub-emitter-amount-at-end"><inline classes="std std-ref">sub_emitter_amount_at_end</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-sub-emitter-frequency"><inline classes="std std-ref">sub_emitter_frequency</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-sub-emitter-keep-velocity"><inline classes="std std-ref">sub_emitter_keep_velocity</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refid="enum-particleprocessmaterial-subemittermode"><inline classes="std std-ref">SubEmitterMode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-sub-emitter-mode"><inline classes="std std-ref">sub_emitter_mode</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-tangential-accel-curve"><inline classes="std std-ref">tangential_accel_curve</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-tangential-accel-max"><inline classes="std std-ref">tangential_accel_max</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-tangential-accel-min"><inline classes="std std-ref">tangential_accel_min</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-turbulence-enabled"><inline classes="std std-ref">turbulence_enabled</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>false</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-turbulence-influence-max"><inline classes="std std-ref">turbulence_influence_max</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-turbulence-influence-min"><inline classes="std std-ref">turbulence_influence_min</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.1</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-turbulence-influence-over-life"><inline classes="std std-ref">turbulence_influence_over_life</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-turbulence-initial-displacement-max"><inline classes="std std-ref">turbulence_initial_displacement_max</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-turbulence-initial-displacement-min"><inline classes="std std-ref">turbulence_initial_displacement_min</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-turbulence-noise-scale"><inline classes="std std-ref">turbulence_noise_scale</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>9.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-turbulence-noise-speed"><inline classes="std std-ref">turbulence_noise_speed</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Vector3(0, 0, 0)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-turbulence-noise-speed-random"><inline classes="std std-ref">turbulence_noise_speed_random</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>0.2</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-turbulence-noise-strength"><inline classes="std std-ref">turbulence_noise_strength</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>1.0</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-velocity-limit-curve"><inline classes="std std-ref">velocity_limit_curve</inline></reference></paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-velocity-pivot"><inline classes="std std-ref">velocity_pivot</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Vector3(0, 0, 0)</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section classes="classref-reftable-group" ids="id3" names="方法">
            <title>方法</title>
            <table classes="colwidths-auto">
                <tgroup cols="2">
                    <colspec colwidth="35"></colspec>
                    <colspec colwidth="204"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-method-get-param"><inline classes="std std-ref">get_param</inline></reference>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-method-get-param-max"><inline classes="std std-ref">get_param_max</inline></reference>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-method-get-param-min"><inline classes="std std-ref">get_param_min</inline></reference>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-method-get-param-texture"><inline classes="std std-ref">get_param_texture</inline></reference>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-method-get-particle-flag"><inline classes="std std-ref">get_particle_flag</inline></reference>(particle_flag: <reference internal="True" refid="enum-particleprocessmaterial-particleflags"><inline classes="std std-ref">ParticleFlags</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-method-set-param"><inline classes="std std-ref">set_param</inline></reference>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-method-set-param-max"><inline classes="std std-ref">set_param_max</inline></reference>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-method-set-param-min"><inline classes="std std-ref">set_param_min</inline></reference>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-method-set-param-texture"><inline classes="std std-ref">set_param_texture</inline></reference>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, texture: <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference>)</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><abbreviation explanation="无返回值。">void</abbreviation></paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference internal="True" refid="class-particleprocessmaterial-method-set-particle-flag"><inline classes="std std-ref">set_particle_flag</inline></reference>(particle_flag: <reference internal="True" refid="enum-particleprocessmaterial-particleflags"><inline classes="std std-ref">ParticleFlags</inline></reference>, enable: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id4" names="枚举">
            <title>枚举</title>
            <target refid="enum-particleprocessmaterial-parameter"></target>
            <paragraph classes="classref-enumeration" ids="enum-particleprocessmaterial-parameter" names="enum_particleprocessmaterial_parameter">enum <strong>Parameter</strong>: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-particleprocessmaterial-constant-param-initial-linear-velocity"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-particleprocessmaterial-constant-param-initial-linear-velocity" names="class_particleprocessmaterial_constant_param_initial_linear_velocity"><reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference> <strong>PARAM_INITIAL_LINEAR_VELOCITY</strong> = <literal>0</literal></paragraph>
            <paragraph>与 <reference internal="True" refid="class-particleprocessmaterial-method-set-param-min"><inline classes="std std-ref">set_param_min</inline></reference>、<reference internal="True" refid="class-particleprocessmaterial-method-set-param-max"><inline classes="std std-ref">set_param_max</inline></reference> 和 <reference internal="True" refid="class-particleprocessmaterial-method-set-param-texture"><inline classes="std std-ref">set_param_texture</inline></reference> 一起使用，设置初始速度属性。</paragraph>
            <target refid="class-particleprocessmaterial-constant-param-angular-velocity"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-particleprocessmaterial-constant-param-angular-velocity" names="class_particleprocessmaterial_constant_param_angular_velocity"><reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference> <strong>PARAM_ANGULAR_VELOCITY</strong> = <literal>1</literal></paragraph>
            <paragraph>与 <reference internal="True" refid="class-particleprocessmaterial-method-set-param-min"><inline classes="std std-ref">set_param_min</inline></reference>、<reference internal="True" refid="class-particleprocessmaterial-method-set-param-max"><inline classes="std std-ref">set_param_max</inline></reference> 和 <reference internal="True" refid="class-particleprocessmaterial-method-set-param-texture"><inline classes="std std-ref">set_param_texture</inline></reference> 一起使用，设置角速度属性。</paragraph>
            <target refid="class-particleprocessmaterial-constant-param-orbit-velocity"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-particleprocessmaterial-constant-param-orbit-velocity" names="class_particleprocessmaterial_constant_param_orbit_velocity"><reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference> <strong>PARAM_ORBIT_VELOCITY</strong> = <literal>2</literal></paragraph>
            <paragraph>与 <reference internal="True" refid="class-particleprocessmaterial-method-set-param-min"><inline classes="std std-ref">set_param_min</inline></reference>、<reference internal="True" refid="class-particleprocessmaterial-method-set-param-max"><inline classes="std std-ref">set_param_max</inline></reference> 和 <reference internal="True" refid="class-particleprocessmaterial-method-set-param-texture"><inline classes="std std-ref">set_param_texture</inline></reference> 一起使用，设置轨道速度属性。</paragraph>
            <target refid="class-particleprocessmaterial-constant-param-linear-accel"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-particleprocessmaterial-constant-param-linear-accel" names="class_particleprocessmaterial_constant_param_linear_accel"><reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference> <strong>PARAM_LINEAR_ACCEL</strong> = <literal>3</literal></paragraph>
            <paragraph>与 <reference internal="True" refid="class-particleprocessmaterial-method-set-param-min"><inline classes="std std-ref">set_param_min</inline></reference>、<reference internal="True" refid="class-particleprocessmaterial-method-set-param-max"><inline classes="std std-ref">set_param_max</inline></reference> 和 <reference internal="True" refid="class-particleprocessmaterial-method-set-param-texture"><inline classes="std std-ref">set_param_texture</inline></reference> 一起使用，设置线速度属性。</paragraph>
            <target refid="class-particleprocessmaterial-constant-param-radial-accel"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-particleprocessmaterial-constant-param-radial-accel" names="class_particleprocessmaterial_constant_param_radial_accel"><reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference> <strong>PARAM_RADIAL_ACCEL</strong> = <literal>4</literal></paragraph>
            <paragraph>与 <reference internal="True" refid="class-particleprocessmaterial-method-set-param-min"><inline classes="std std-ref">set_param_min</inline></reference>、<reference internal="True" refid="class-particleprocessmaterial-method-set-param-max"><inline classes="std std-ref">set_param_max</inline></reference> 和 <reference internal="True" refid="class-particleprocessmaterial-method-set-param-texture"><inline classes="std std-ref">set_param_texture</inline></reference> 一起使用，设置径向加速度属性。</paragraph>
            <target refid="class-particleprocessmaterial-constant-param-tangential-accel"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-particleprocessmaterial-constant-param-tangential-accel" names="class_particleprocessmaterial_constant_param_tangential_accel"><reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference> <strong>PARAM_TANGENTIAL_ACCEL</strong> = <literal>5</literal></paragraph>
            <paragraph>与 <reference internal="True" refid="class-particleprocessmaterial-method-set-param-min"><inline classes="std std-ref">set_param_min</inline></reference>、<reference internal="True" refid="class-particleprocessmaterial-method-set-param-max"><inline classes="std std-ref">set_param_max</inline></reference> 和 <reference internal="True" refid="class-particleprocessmaterial-method-set-param-texture"><inline classes="std std-ref">set_param_texture</inline></reference> 一起使用，设置切向加速度属性。</paragraph>
            <target refid="class-particleprocessmaterial-constant-param-damping"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-particleprocessmaterial-constant-param-damping" names="class_particleprocessmaterial_constant_param_damping"><reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference> <strong>PARAM_DAMPING</strong> = <literal>6</literal></paragraph>
            <paragraph>与 <reference internal="True" refid="class-particleprocessmaterial-method-set-param-min"><inline classes="std std-ref">set_param_min</inline></reference>、<reference internal="True" refid="class-particleprocessmaterial-method-set-param-max"><inline classes="std std-ref">set_param_max</inline></reference> 和 <reference internal="True" refid="class-particleprocessmaterial-method-set-param-texture"><inline classes="std std-ref">set_param_texture</inline></reference> 一起使用，设置阻尼属性。</paragraph>
            <target refid="class-particleprocessmaterial-constant-param-angle"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-particleprocessmaterial-constant-param-angle" names="class_particleprocessmaterial_constant_param_angle"><reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference> <strong>PARAM_ANGLE</strong> = <literal>7</literal></paragraph>
            <paragraph>与 <reference internal="True" refid="class-particleprocessmaterial-method-set-param-min"><inline classes="std std-ref">set_param_min</inline></reference>、<reference internal="True" refid="class-particleprocessmaterial-method-set-param-max"><inline classes="std std-ref">set_param_max</inline></reference> 和 <reference internal="True" refid="class-particleprocessmaterial-method-set-param-texture"><inline classes="std std-ref">set_param_texture</inline></reference> 一起使用，设置角度属性。</paragraph>
            <target refid="class-particleprocessmaterial-constant-param-scale"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-particleprocessmaterial-constant-param-scale" names="class_particleprocessmaterial_constant_param_scale"><reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference> <strong>PARAM_SCALE</strong> = <literal>8</literal></paragraph>
            <paragraph>与 <reference internal="True" refid="class-particleprocessmaterial-method-set-param-min"><inline classes="std std-ref">set_param_min</inline></reference>、<reference internal="True" refid="class-particleprocessmaterial-method-set-param-max"><inline classes="std std-ref">set_param_max</inline></reference> 和 <reference internal="True" refid="class-particleprocessmaterial-method-set-param-texture"><inline classes="std std-ref">set_param_texture</inline></reference> 一起使用，设置缩放属性。</paragraph>
            <target refid="class-particleprocessmaterial-constant-param-hue-variation"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-particleprocessmaterial-constant-param-hue-variation" names="class_particleprocessmaterial_constant_param_hue_variation"><reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference> <strong>PARAM_HUE_VARIATION</strong> = <literal>9</literal></paragraph>
            <paragraph>与 <reference internal="True" refid="class-particleprocessmaterial-method-set-param-min"><inline classes="std std-ref">set_param_min</inline></reference>、<reference internal="True" refid="class-particleprocessmaterial-method-set-param-max"><inline classes="std std-ref">set_param_max</inline></reference> 和 <reference internal="True" refid="class-particleprocessmaterial-method-set-param-texture"><inline classes="std std-ref">set_param_texture</inline></reference> 一起使用，设置色相变化属性。</paragraph>
            <target refid="class-particleprocessmaterial-constant-param-anim-speed"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-particleprocessmaterial-constant-param-anim-speed" names="class_particleprocessmaterial_constant_param_anim_speed"><reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference> <strong>PARAM_ANIM_SPEED</strong> = <literal>10</literal></paragraph>
            <paragraph>与 <reference internal="True" refid="class-particleprocessmaterial-method-set-param-min"><inline classes="std std-ref">set_param_min</inline></reference>、<reference internal="True" refid="class-particleprocessmaterial-method-set-param-max"><inline classes="std std-ref">set_param_max</inline></reference> 和 <reference internal="True" refid="class-particleprocessmaterial-method-set-param-texture"><inline classes="std std-ref">set_param_texture</inline></reference> 一起使用，设置动画速度属性。</paragraph>
            <target refid="class-particleprocessmaterial-constant-param-anim-offset"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-particleprocessmaterial-constant-param-anim-offset" names="class_particleprocessmaterial_constant_param_anim_offset"><reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference> <strong>PARAM_ANIM_OFFSET</strong> = <literal>11</literal></paragraph>
            <paragraph>与 <reference internal="True" refid="class-particleprocessmaterial-method-set-param-min"><inline classes="std std-ref">set_param_min</inline></reference>、<reference internal="True" refid="class-particleprocessmaterial-method-set-param-max"><inline classes="std std-ref">set_param_max</inline></reference> 和 <reference internal="True" refid="class-particleprocessmaterial-method-set-param-texture"><inline classes="std std-ref">set_param_texture</inline></reference> 一起使用，设置动画偏移属性。</paragraph>
            <target refid="class-particleprocessmaterial-constant-param-radial-velocity"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-particleprocessmaterial-constant-param-radial-velocity" names="class_particleprocessmaterial_constant_param_radial_velocity"><reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference> <strong>PARAM_RADIAL_VELOCITY</strong> = <literal>15</literal></paragraph>
            <paragraph>与 <reference internal="True" refid="class-particleprocessmaterial-method-set-param-min"><inline classes="std std-ref">set_param_min</inline></reference>、<reference internal="True" refid="class-particleprocessmaterial-method-set-param-max"><inline classes="std std-ref">set_param_max</inline></reference> 和 <reference internal="True" refid="class-particleprocessmaterial-method-set-param-texture"><inline classes="std std-ref">set_param_texture</inline></reference> 一起使用来设置径向速度属性。</paragraph>
            <target refid="class-particleprocessmaterial-constant-param-directional-velocity"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-particleprocessmaterial-constant-param-directional-velocity" names="class_particleprocessmaterial_constant_param_directional_velocity"><reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference> <strong>PARAM_DIRECTIONAL_VELOCITY</strong> = <literal>16</literal></paragraph>
            <paragraph>与 <reference internal="True" refid="class-particleprocessmaterial-method-set-param-min"><inline classes="std std-ref">set_param_min</inline></reference>、<reference internal="True" refid="class-particleprocessmaterial-method-set-param-max"><inline classes="std std-ref">set_param_max</inline></reference> 和 <reference internal="True" refid="class-particleprocessmaterial-method-set-param-texture"><inline classes="std std-ref">set_param_texture</inline></reference> 一起使用来设置定向速度属性。</paragraph>
            <target refid="class-particleprocessmaterial-constant-param-scale-over-velocity"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-particleprocessmaterial-constant-param-scale-over-velocity" names="class_particleprocessmaterial_constant_param_scale_over_velocity"><reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference> <strong>PARAM_SCALE_OVER_VELOCITY</strong> = <literal>17</literal></paragraph>
            <paragraph>与 <reference internal="True" refid="class-particleprocessmaterial-method-set-param-min"><inline classes="std std-ref">set_param_min</inline></reference>、<reference internal="True" refid="class-particleprocessmaterial-method-set-param-max"><inline classes="std std-ref">set_param_max</inline></reference> 和 <reference internal="True" refid="class-particleprocessmaterial-method-set-param-texture"><inline classes="std std-ref">set_param_texture</inline></reference> 一起使用来设置速度属性的缩放。</paragraph>
            <target refid="class-particleprocessmaterial-constant-param-max"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-particleprocessmaterial-constant-param-max" names="class_particleprocessmaterial_constant_param_max"><reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference> <strong>PARAM_MAX</strong> = <literal>18</literal></paragraph>
            <paragraph>代表 <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference> 枚举的大小。</paragraph>
            <target refid="class-particleprocessmaterial-constant-param-turb-vel-influence"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-particleprocessmaterial-constant-param-turb-vel-influence" names="class_particleprocessmaterial_constant_param_turb_vel_influence"><reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference> <strong>PARAM_TURB_VEL_INFLUENCE</strong> = <literal>13</literal></paragraph>
            <paragraph>与 <reference internal="True" refid="class-particleprocessmaterial-method-set-param-min"><inline classes="std std-ref">set_param_min</inline></reference> 和 <reference internal="True" refid="class-particleprocessmaterial-method-set-param-max"><inline classes="std std-ref">set_param_max</inline></reference> 一起使用，以设置湍流对每个粒子速度的最小和最大影响。</paragraph>
            <target refid="class-particleprocessmaterial-constant-param-turb-init-displacement"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-particleprocessmaterial-constant-param-turb-init-displacement" names="class_particleprocessmaterial_constant_param_turb_init_displacement"><reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference> <strong>PARAM_TURB_INIT_DISPLACEMENT</strong> = <literal>14</literal></paragraph>
            <paragraph>与 <reference internal="True" refid="class-particleprocessmaterial-method-set-param-min"><inline classes="std std-ref">set_param_min</inline></reference> 和 <reference internal="True" refid="class-particleprocessmaterial-method-set-param-max"><inline classes="std std-ref">set_param_max</inline></reference> 一起使用，以设置粒子出生位置的湍流最小和最大位移。</paragraph>
            <target refid="class-particleprocessmaterial-constant-param-turb-influence-over-life"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-particleprocessmaterial-constant-param-turb-influence-over-life" names="class_particleprocessmaterial_constant_param_turb_influence_over_life"><reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference> <strong>PARAM_TURB_INFLUENCE_OVER_LIFE</strong> = <literal>12</literal></paragraph>
            <paragraph>与 <reference internal="True" refid="class-particleprocessmaterial-method-set-param-texture"><inline classes="std std-ref">set_param_texture</inline></reference> 一起使用，以设置湍流对粒子寿命的影响。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-particleprocessmaterial-particleflags"></target>
            <paragraph classes="classref-enumeration" ids="enum-particleprocessmaterial-particleflags" names="enum_particleprocessmaterial_particleflags">enum <strong>ParticleFlags</strong>: <reference internal="True" refid="enum-particleprocessmaterial-particleflags"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-particleprocessmaterial-constant-particle-flag-align-y-to-velocity"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-particleprocessmaterial-constant-particle-flag-align-y-to-velocity" names="class_particleprocessmaterial_constant_particle_flag_align_y_to_velocity"><reference internal="True" refid="enum-particleprocessmaterial-particleflags"><inline classes="std std-ref">ParticleFlags</inline></reference> <strong>PARTICLE_FLAG_ALIGN_Y_TO_VELOCITY</strong> = <literal>0</literal></paragraph>
            <paragraph>与 <reference internal="True" refid="class-particleprocessmaterial-method-set-particle-flag"><inline classes="std std-ref">set_particle_flag</inline></reference> 一起使用，设置 <reference internal="True" refid="class-particleprocessmaterial-property-particle-flag-align-y"><inline classes="std std-ref">particle_flag_align_y</inline></reference>。</paragraph>
            <target refid="class-particleprocessmaterial-constant-particle-flag-rotate-y"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-particleprocessmaterial-constant-particle-flag-rotate-y" names="class_particleprocessmaterial_constant_particle_flag_rotate_y"><reference internal="True" refid="enum-particleprocessmaterial-particleflags"><inline classes="std std-ref">ParticleFlags</inline></reference> <strong>PARTICLE_FLAG_ROTATE_Y</strong> = <literal>1</literal></paragraph>
            <paragraph>与 <reference internal="True" refid="class-particleprocessmaterial-method-set-particle-flag"><inline classes="std std-ref">set_particle_flag</inline></reference> 一起使用，设置 <reference internal="True" refid="class-particleprocessmaterial-property-particle-flag-rotate-y"><inline classes="std std-ref">particle_flag_rotate_y</inline></reference>。</paragraph>
            <target refid="class-particleprocessmaterial-constant-particle-flag-disable-z"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-particleprocessmaterial-constant-particle-flag-disable-z" names="class_particleprocessmaterial_constant_particle_flag_disable_z"><reference internal="True" refid="enum-particleprocessmaterial-particleflags"><inline classes="std std-ref">ParticleFlags</inline></reference> <strong>PARTICLE_FLAG_DISABLE_Z</strong> = <literal>2</literal></paragraph>
            <paragraph>与 <reference internal="True" refid="class-particleprocessmaterial-method-set-particle-flag"><inline classes="std std-ref">set_particle_flag</inline></reference> 一起使用，设置<reference internal="True" refid="class-particleprocessmaterial-property-particle-flag-disable-z"><inline classes="std std-ref">particle_flag_disable_z</inline></reference>。</paragraph>
            <target refid="class-particleprocessmaterial-constant-particle-flag-damping-as-friction"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-particleprocessmaterial-constant-particle-flag-damping-as-friction" names="class_particleprocessmaterial_constant_particle_flag_damping_as_friction"><reference internal="True" refid="enum-particleprocessmaterial-particleflags"><inline classes="std std-ref">ParticleFlags</inline></reference> <strong>PARTICLE_FLAG_DAMPING_AS_FRICTION</strong> = <literal>3</literal></paragraph>
            <container classes="contribute">
                <paragraph>该枚举目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
            <target refid="class-particleprocessmaterial-constant-particle-flag-max"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-particleprocessmaterial-constant-particle-flag-max" names="class_particleprocessmaterial_constant_particle_flag_max"><reference internal="True" refid="enum-particleprocessmaterial-particleflags"><inline classes="std std-ref">ParticleFlags</inline></reference> <strong>PARTICLE_FLAG_MAX</strong> = <literal>4</literal></paragraph>
            <paragraph>代表 <reference internal="True" refid="enum-particleprocessmaterial-particleflags"><inline classes="std std-ref">ParticleFlags</inline></reference> 枚举的大小。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-particleprocessmaterial-emissionshape"></target>
            <paragraph classes="classref-enumeration" ids="enum-particleprocessmaterial-emissionshape" names="enum_particleprocessmaterial_emissionshape">enum <strong>EmissionShape</strong>: <reference internal="True" refid="enum-particleprocessmaterial-emissionshape"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-particleprocessmaterial-constant-emission-shape-point"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-particleprocessmaterial-constant-emission-shape-point" names="class_particleprocessmaterial_constant_emission_shape_point"><reference internal="True" refid="enum-particleprocessmaterial-emissionshape"><inline classes="std std-ref">EmissionShape</inline></reference> <strong>EMISSION_SHAPE_POINT</strong> = <literal>0</literal></paragraph>
            <paragraph>所有粒子将从单个点发射。</paragraph>
            <target refid="class-particleprocessmaterial-constant-emission-shape-sphere"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-particleprocessmaterial-constant-emission-shape-sphere" names="class_particleprocessmaterial_constant_emission_shape_sphere"><reference internal="True" refid="enum-particleprocessmaterial-emissionshape"><inline classes="std std-ref">EmissionShape</inline></reference> <strong>EMISSION_SHAPE_SPHERE</strong> = <literal>1</literal></paragraph>
            <paragraph>粒子将在球体的体积中发射。</paragraph>
            <target refid="class-particleprocessmaterial-constant-emission-shape-sphere-surface"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-particleprocessmaterial-constant-emission-shape-sphere-surface" names="class_particleprocessmaterial_constant_emission_shape_sphere_surface"><reference internal="True" refid="enum-particleprocessmaterial-emissionshape"><inline classes="std std-ref">EmissionShape</inline></reference> <strong>EMISSION_SHAPE_SPHERE_SURFACE</strong> = <literal>2</literal></paragraph>
            <paragraph>粒子将在球体表面发射。</paragraph>
            <target refid="class-particleprocessmaterial-constant-emission-shape-box"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-particleprocessmaterial-constant-emission-shape-box" names="class_particleprocessmaterial_constant_emission_shape_box"><reference internal="True" refid="enum-particleprocessmaterial-emissionshape"><inline classes="std std-ref">EmissionShape</inline></reference> <strong>EMISSION_SHAPE_BOX</strong> = <literal>3</literal></paragraph>
            <paragraph>粒子将在盒子的体积中发射。</paragraph>
            <target refid="class-particleprocessmaterial-constant-emission-shape-points"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-particleprocessmaterial-constant-emission-shape-points" names="class_particleprocessmaterial_constant_emission_shape_points"><reference internal="True" refid="enum-particleprocessmaterial-emissionshape"><inline classes="std std-ref">EmissionShape</inline></reference> <strong>EMISSION_SHAPE_POINTS</strong> = <literal>4</literal></paragraph>
            <paragraph>粒子将在 <reference internal="True" refid="class-particleprocessmaterial-property-emission-point-texture"><inline classes="std std-ref">emission_point_texture</inline></reference> 上随机采样点所决定的位置发射。粒子颜色将由 <reference internal="True" refid="class-particleprocessmaterial-property-emission-color-texture"><inline classes="std std-ref">emission_color_texture</inline></reference> 调节。</paragraph>
            <target refid="class-particleprocessmaterial-constant-emission-shape-directed-points"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-particleprocessmaterial-constant-emission-shape-directed-points" names="class_particleprocessmaterial_constant_emission_shape_directed_points"><reference internal="True" refid="enum-particleprocessmaterial-emissionshape"><inline classes="std std-ref">EmissionShape</inline></reference> <strong>EMISSION_SHAPE_DIRECTED_POINTS</strong> = <literal>5</literal></paragraph>
            <paragraph>粒子将在 <reference internal="True" refid="class-particleprocessmaterial-property-emission-point-texture"><inline classes="std std-ref">emission_point_texture</inline></reference> 上随机采样点所决定的位置发射。粒子速度和旋转将基于 <reference internal="True" refid="class-particleprocessmaterial-property-emission-normal-texture"><inline classes="std std-ref">emission_normal_texture</inline></reference> 进行设置。粒子颜色将由 <reference internal="True" refid="class-particleprocessmaterial-property-emission-color-texture"><inline classes="std std-ref">emission_color_texture</inline></reference> 调节。</paragraph>
            <target refid="class-particleprocessmaterial-constant-emission-shape-ring"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-particleprocessmaterial-constant-emission-shape-ring" names="class_particleprocessmaterial_constant_emission_shape_ring"><reference internal="True" refid="enum-particleprocessmaterial-emissionshape"><inline classes="std std-ref">EmissionShape</inline></reference> <strong>EMISSION_SHAPE_RING</strong> = <literal>6</literal></paragraph>
            <paragraph>粒子将以环形或圆柱的形式发射出来。</paragraph>
            <target refid="class-particleprocessmaterial-constant-emission-shape-max"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-particleprocessmaterial-constant-emission-shape-max" names="class_particleprocessmaterial_constant_emission_shape_max"><reference internal="True" refid="enum-particleprocessmaterial-emissionshape"><inline classes="std std-ref">EmissionShape</inline></reference> <strong>EMISSION_SHAPE_MAX</strong> = <literal>7</literal></paragraph>
            <paragraph>代表 <reference internal="True" refid="enum-particleprocessmaterial-emissionshape"><inline classes="std std-ref">EmissionShape</inline></reference> 枚举的大小。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-particleprocessmaterial-subemittermode"></target>
            <paragraph classes="classref-enumeration" ids="enum-particleprocessmaterial-subemittermode" names="enum_particleprocessmaterial_subemittermode">enum <strong>SubEmitterMode</strong>: <reference internal="True" refid="enum-particleprocessmaterial-subemittermode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-particleprocessmaterial-constant-sub-emitter-disabled"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-particleprocessmaterial-constant-sub-emitter-disabled" names="class_particleprocessmaterial_constant_sub_emitter_disabled"><reference internal="True" refid="enum-particleprocessmaterial-subemittermode"><inline classes="std std-ref">SubEmitterMode</inline></reference> <strong>SUB_EMITTER_DISABLED</strong> = <literal>0</literal></paragraph>
            <container classes="contribute">
                <paragraph>该枚举目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
            <target refid="class-particleprocessmaterial-constant-sub-emitter-constant"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-particleprocessmaterial-constant-sub-emitter-constant" names="class_particleprocessmaterial_constant_sub_emitter_constant"><reference internal="True" refid="enum-particleprocessmaterial-subemittermode"><inline classes="std std-ref">SubEmitterMode</inline></reference> <strong>SUB_EMITTER_CONSTANT</strong> = <literal>1</literal></paragraph>
            <container classes="contribute">
                <paragraph>该枚举目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
            <target refid="class-particleprocessmaterial-constant-sub-emitter-at-end"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-particleprocessmaterial-constant-sub-emitter-at-end" names="class_particleprocessmaterial_constant_sub_emitter_at_end"><reference internal="True" refid="enum-particleprocessmaterial-subemittermode"><inline classes="std std-ref">SubEmitterMode</inline></reference> <strong>SUB_EMITTER_AT_END</strong> = <literal>2</literal></paragraph>
            <container classes="contribute">
                <paragraph>该枚举目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
            <target refid="class-particleprocessmaterial-constant-sub-emitter-at-collision"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-particleprocessmaterial-constant-sub-emitter-at-collision" names="class_particleprocessmaterial_constant_sub_emitter_at_collision"><reference internal="True" refid="enum-particleprocessmaterial-subemittermode"><inline classes="std std-ref">SubEmitterMode</inline></reference> <strong>SUB_EMITTER_AT_COLLISION</strong> = <literal>3</literal></paragraph>
            <container classes="contribute">
                <paragraph>该枚举目前没有描述，请帮我们<reference internal="True" refuri="../contributing/documentation/updating_the_class_reference#doc-updating-the-class-reference"><inline classes="std std-ref">贡献一个</inline></reference>吧！</paragraph>
            </container>
            <target refid="class-particleprocessmaterial-constant-sub-emitter-max"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-particleprocessmaterial-constant-sub-emitter-max" names="class_particleprocessmaterial_constant_sub_emitter_max"><reference internal="True" refid="enum-particleprocessmaterial-subemittermode"><inline classes="std std-ref">SubEmitterMode</inline></reference> <strong>SUB_EMITTER_MAX</strong> = <literal>4</literal></paragraph>
            <paragraph>代表 <reference internal="True" refid="enum-particleprocessmaterial-subemittermode"><inline classes="std std-ref">SubEmitterMode</inline></reference> 枚举的大小。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="enum-particleprocessmaterial-collisionmode"></target>
            <paragraph classes="classref-enumeration" ids="enum-particleprocessmaterial-collisionmode" names="enum_particleprocessmaterial_collisionmode">enum <strong>CollisionMode</strong>: <reference internal="True" refid="enum-particleprocessmaterial-collisionmode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <target refid="class-particleprocessmaterial-constant-collision-disabled"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-particleprocessmaterial-constant-collision-disabled" names="class_particleprocessmaterial_constant_collision_disabled"><reference internal="True" refid="enum-particleprocessmaterial-collisionmode"><inline classes="std std-ref">CollisionMode</inline></reference> <strong>COLLISION_DISABLED</strong> = <literal>0</literal></paragraph>
            <paragraph>粒子没有碰撞。粒子会穿过 <reference internal="True" refuri="class_gpuparticlescollision3d#class-gpuparticlescollision3d"><inline classes="std std-ref">GPUParticlesCollision3D</inline></reference> 节点。</paragraph>
            <target refid="class-particleprocessmaterial-constant-collision-rigid"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-particleprocessmaterial-constant-collision-rigid" names="class_particleprocessmaterial_constant_collision_rigid"><reference internal="True" refid="enum-particleprocessmaterial-collisionmode"><inline classes="std std-ref">CollisionMode</inline></reference> <strong>COLLISION_RIGID</strong> = <literal>1</literal></paragraph>
            <paragraph>为使用 <reference internal="True" refuri="class_gpuparticlescollision3d#class-gpuparticlescollision3d"><inline classes="std std-ref">GPUParticlesCollision3D</inline></reference> 节点的粒子设置 <reference internal="True" refuri="class_rigidbody3d#class-rigidbody3d"><inline classes="std std-ref">RigidBody3D</inline></reference> 风格的碰撞。</paragraph>
            <target refid="class-particleprocessmaterial-constant-collision-hide-on-contact"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-particleprocessmaterial-constant-collision-hide-on-contact" names="class_particleprocessmaterial_constant_collision_hide_on_contact"><reference internal="True" refid="enum-particleprocessmaterial-collisionmode"><inline classes="std std-ref">CollisionMode</inline></reference> <strong>COLLISION_HIDE_ON_CONTACT</strong> = <literal>2</literal></paragraph>
            <paragraph>与 <reference internal="True" refuri="class_gpuparticlescollision3d#class-gpuparticlescollision3d"><inline classes="std std-ref">GPUParticlesCollision3D</inline></reference> 节点碰撞时立即隐藏粒子。可以和使用 <reference internal="True" refid="class-particleprocessmaterial-constant-collision-rigid"><inline classes="std std-ref">COLLISION_RIGID</inline></reference> 碰撞模式的子发射器组合，在撞击时将父粒子“替换”为子发射器。</paragraph>
            <target refid="class-particleprocessmaterial-constant-collision-max"></target>
            <paragraph classes="classref-enumeration-constant" ids="class-particleprocessmaterial-constant-collision-max" names="class_particleprocessmaterial_constant_collision_max"><reference internal="True" refid="enum-particleprocessmaterial-collisionmode"><inline classes="std std-ref">CollisionMode</inline></reference> <strong>COLLISION_MAX</strong> = <literal>3</literal></paragraph>
            <paragraph>代表 <reference internal="True" refid="enum-particleprocessmaterial-collisionmode"><inline classes="std std-ref">CollisionMode</inline></reference> 枚举的大小。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id5" names="属性说明">
            <title>属性说明</title>
            <target refid="class-particleprocessmaterial-property-alpha-curve"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-alpha-curve" names="class_particleprocessmaterial_property_alpha_curve"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>alpha_curve</strong> <reference internal="True" refid="class-particleprocessmaterial-property-alpha-curve"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_alpha_curve</strong>(value: <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>get_alpha_curve</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>每个粒子颜色的 alpha 值将在其生命周期内乘以该 <reference internal="True" refuri="class_curvetexture#class-curvetexture"><inline classes="std std-ref">CurveTexture</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-angle-curve"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-angle-curve" names="class_particleprocessmaterial_property_angle_curve"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>angle_curve</strong> <reference internal="True" refid="class-particleprocessmaterial-property-angle-curve"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_texture</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, texture: <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>get_param_texture</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>每个粒子的旋转将沿着这个 <reference internal="True" refuri="class_curvetexture#class-curvetexture"><inline classes="std std-ref">CurveTexture</inline></reference> 动画。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-angle-max"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-angle-max" names="class_particleprocessmaterial_property_angle_max"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>angle_max</strong> = <literal>0.0</literal> <reference internal="True" refid="class-particleprocessmaterial-property-angle-max"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_max</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_max</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>应用于每个粒子的最大初始旋转，以度为单位。</paragraph>
            <paragraph>仅在 <reference internal="True" refid="class-particleprocessmaterial-property-particle-flag-disable-z"><inline classes="std std-ref">particle_flag_disable_z</inline></reference> 或 <reference internal="True" refid="class-particleprocessmaterial-property-particle-flag-rotate-y"><inline classes="std std-ref">particle_flag_rotate_y</inline></reference> 为 <literal>true</literal>，或 <reference internal="True" refuri="class_basematerial3d#class-basematerial3d"><inline classes="std std-ref">BaseMaterial3D</inline></reference> 使用 <reference internal="True" refuri="class_basematerial3d#class-basematerial3d-constant-billboard-particles"><inline classes="std std-ref">BaseMaterial3D.BILLBOARD_PARTICLES</inline></reference> 绘制粒子时应用。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-angle-min"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-angle-min" names="class_particleprocessmaterial_property_angle_min"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>angle_min</strong> = <literal>0.0</literal> <reference internal="True" refid="class-particleprocessmaterial-property-angle-min"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_min</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_min</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-angle-max"><inline classes="std std-ref">angle_max</inline></reference> 的对应最小值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-angular-velocity-curve"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-angular-velocity-curve" names="class_particleprocessmaterial_property_angular_velocity_curve"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>angular_velocity_curve</strong> <reference internal="True" refid="class-particleprocessmaterial-property-angular-velocity-curve"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_texture</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, texture: <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>get_param_texture</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>在每个粒子生命周期内，其角速度（旋转速度）将沿着此 <reference internal="True" refuri="class_curvetexture#class-curvetexture"><inline classes="std std-ref">CurveTexture</inline></reference> 变化。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-angular-velocity-max"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-angular-velocity-max" names="class_particleprocessmaterial_property_angular_velocity_max"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>angular_velocity_max</strong> = <literal>0.0</literal> <reference internal="True" refid="class-particleprocessmaterial-property-angular-velocity-max"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_max</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_max</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>应用于每个粒子的最大初始角速度（旋转速度），以<emphasis>度</emphasis>每秒为单位。</paragraph>
            <paragraph>仅在 <reference internal="True" refid="class-particleprocessmaterial-property-particle-flag-disable-z"><inline classes="std std-ref">particle_flag_disable_z</inline></reference> 或 <reference internal="True" refid="class-particleprocessmaterial-property-particle-flag-rotate-y"><inline classes="std std-ref">particle_flag_rotate_y</inline></reference> 为 <literal>true</literal>，或 <reference internal="True" refuri="class_basematerial3d#class-basematerial3d"><inline classes="std std-ref">BaseMaterial3D</inline></reference> 使用 <reference internal="True" refuri="class_basematerial3d#class-basematerial3d-constant-billboard-particles"><inline classes="std std-ref">BaseMaterial3D.BILLBOARD_PARTICLES</inline></reference> 绘制粒子时应用。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-angular-velocity-min"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-angular-velocity-min" names="class_particleprocessmaterial_property_angular_velocity_min"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>angular_velocity_min</strong> = <literal>0.0</literal> <reference internal="True" refid="class-particleprocessmaterial-property-angular-velocity-min"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_min</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_min</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-angular-velocity-max"><inline classes="std std-ref">angular_velocity_max</inline></reference> 的对应最小值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-anim-offset-curve"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-anim-offset-curve" names="class_particleprocessmaterial_property_anim_offset_curve"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>anim_offset_curve</strong> <reference internal="True" refid="class-particleprocessmaterial-property-anim-offset-curve"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_texture</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, texture: <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>get_param_texture</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>每个粒子的动画偏移将沿着这个 <reference internal="True" refuri="class_curvetexture#class-curvetexture"><inline classes="std std-ref">CurveTexture</inline></reference> 变化。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-anim-offset-max"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-anim-offset-max" names="class_particleprocessmaterial_property_anim_offset_max"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>anim_offset_max</strong> = <literal>0.0</literal> <reference internal="True" refid="class-particleprocessmaterial-property-anim-offset-max"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_max</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_max</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>与纹理中的帧索引相对应的最大动画偏移量。<literal>0</literal> 是第一帧，<literal>1</literal> 是最后一帧。参见 <reference internal="True" refuri="class_canvasitemmaterial#class-canvasitemmaterial-property-particles-animation"><inline classes="std std-ref">CanvasItemMaterial.particles_animation</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-anim-offset-min"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-anim-offset-min" names="class_particleprocessmaterial_property_anim_offset_min"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>anim_offset_min</strong> = <literal>0.0</literal> <reference internal="True" refid="class-particleprocessmaterial-property-anim-offset-min"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_min</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_min</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-anim-offset-max"><inline classes="std std-ref">anim_offset_max</inline></reference> 的对应最小值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-anim-speed-curve"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-anim-speed-curve" names="class_particleprocessmaterial_property_anim_speed_curve"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>anim_speed_curve</strong> <reference internal="True" refid="class-particleprocessmaterial-property-anim-speed-curve"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_texture</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, texture: <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>get_param_texture</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>每个粒子的动画速度将沿着这个 <reference internal="True" refuri="class_curvetexture#class-curvetexture"><inline classes="std std-ref">CurveTexture</inline></reference> 变化。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-anim-speed-max"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-anim-speed-max" names="class_particleprocessmaterial_property_anim_speed_max"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>anim_speed_max</strong> = <literal>0.0</literal> <reference internal="True" refid="class-particleprocessmaterial-property-anim-speed-max"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_max</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_max</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>最大粒子动画速度。<literal>1</literal> 的动画速度是指粒子在生命周期内会做完整的 <literal>0</literal> 到 <literal>1</literal> 的偏移循环，<literal>2</literal> 则表示 <literal>2</literal> 个循环，如此等等。</paragraph>
            <paragraph>当动画速度大于 <literal>1</literal> 时，如果希望动画重复，请记住启用 <reference internal="True" refuri="class_canvasitemmaterial#class-canvasitemmaterial-property-particles-anim-loop"><inline classes="std std-ref">CanvasItemMaterial.particles_anim_loop</inline></reference> 属性。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-anim-speed-min"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-anim-speed-min" names="class_particleprocessmaterial_property_anim_speed_min"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>anim_speed_min</strong> = <literal>0.0</literal> <reference internal="True" refid="class-particleprocessmaterial-property-anim-speed-min"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_min</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_min</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-anim-speed-max"><inline classes="std std-ref">anim_speed_max</inline></reference> 的对应最小值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-attractor-interaction-enabled"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-attractor-interaction-enabled" names="class_particleprocessmaterial_property_attractor_interaction_enabled"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>attractor_interaction_enabled</strong> = <literal>true</literal> <reference internal="True" refid="class-particleprocessmaterial-property-attractor-interaction-enabled"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_attractor_interaction_enabled</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_attractor_interaction_enabled</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则启用与粒子吸引器的交互。在 3D 中，吸引力仅发生在 <reference internal="True" refuri="class_gpuparticles3d#class-gpuparticles3d"><inline classes="std std-ref">GPUParticles3D</inline></reference> 节点的 <reference internal="True" refuri="class_gpuparticles3d#class-gpuparticles3d-property-visibility-aabb"><inline classes="std std-ref">GPUParticles3D.visibility_aabb</inline></reference> 定义的区域内。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-collision-bounce"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-collision-bounce" names="class_particleprocessmaterial_property_collision_bounce"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>collision_bounce</strong> <reference internal="True" refid="class-particleprocessmaterial-property-collision-bounce"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_collision_bounce</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_collision_bounce</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>粒子的弹性。值范围从 <literal>0</literal>（无弹跳）到 <literal>1</literal>（完全弹跳）。仅当 <reference internal="True" refid="class-particleprocessmaterial-property-collision-mode"><inline classes="std std-ref">collision_mode</inline></reference> 为 <reference internal="True" refid="class-particleprocessmaterial-constant-collision-rigid"><inline classes="std std-ref">COLLISION_RIGID</inline></reference> 时有效。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-collision-friction"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-collision-friction" names="class_particleprocessmaterial_property_collision_friction"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>collision_friction</strong> <reference internal="True" refid="class-particleprocessmaterial-property-collision-friction"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_collision_friction</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_collision_friction</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>粒子的摩擦。值范围从 <literal>0</literal>（无摩擦）到 <literal>1</literal>（最大摩擦）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-collision-mode"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-collision-mode" names="class_particleprocessmaterial_property_collision_mode"><reference internal="True" refid="enum-particleprocessmaterial-collisionmode"><inline classes="std std-ref">CollisionMode</inline></reference> <strong>collision_mode</strong> = <literal>0</literal> <reference internal="True" refid="class-particleprocessmaterial-property-collision-mode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_collision_mode</strong>(value: <reference internal="True" refid="enum-particleprocessmaterial-collisionmode"><inline classes="std std-ref">CollisionMode</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-particleprocessmaterial-collisionmode"><inline classes="std std-ref">CollisionMode</inline></reference> <strong>get_collision_mode</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>粒子的碰撞模式。</paragraph>
            <paragraph><strong>注意：</strong>3D 粒子只能与 <reference internal="True" refuri="class_gpuparticlescollision3d#class-gpuparticlescollision3d"><inline classes="std std-ref">GPUParticlesCollision3D</inline></reference> 节点碰撞，无法与 <reference internal="True" refuri="class_physicsbody3d#class-physicsbody3d"><inline classes="std std-ref">PhysicsBody3D</inline></reference> 节点碰撞。要使粒子与不同的物体碰撞，可以将 <reference internal="True" refuri="class_gpuparticlescollision3d#class-gpuparticlescollision3d"><inline classes="std std-ref">GPUParticlesCollision3D</inline></reference> 节点添加为 <reference internal="True" refuri="class_physicsbody3d#class-physicsbody3d"><inline classes="std std-ref">PhysicsBody3D</inline></reference> 节点的子节点。在 3D 中，碰撞仅发生在 <reference internal="True" refuri="class_gpuparticles3d#class-gpuparticles3d"><inline classes="std std-ref">GPUParticles3D</inline></reference> 节点的 <reference internal="True" refuri="class_gpuparticles3d#class-gpuparticles3d-property-visibility-aabb"><inline classes="std std-ref">GPUParticles3D.visibility_aabb</inline></reference> 定义的区域内。</paragraph>
            <paragraph><strong>注意：</strong>2D 粒子只能与 <reference internal="True" refuri="class_lightoccluder2d#class-lightoccluder2d"><inline classes="std std-ref">LightOccluder2D</inline></reference> 节点碰撞，无法与 <reference internal="True" refuri="class_physicsbody2d#class-physicsbody2d"><inline classes="std std-ref">PhysicsBody2D</inline></reference> 节点碰撞。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-collision-use-scale"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-collision-use-scale" names="class_particleprocessmaterial_property_collision_use_scale"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>collision_use_scale</strong> = <literal>false</literal> <reference internal="True" refid="class-particleprocessmaterial-property-collision-use-scale"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_collision_use_scale</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>is_collision_using_scale</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，<reference internal="True" refuri="class_gpuparticles3d#class-gpuparticles3d-property-collision-base-size"><inline classes="std std-ref">GPUParticles3D.collision_base_size</inline></reference> 乘以粒子的有效缩放（请参阅 <reference internal="True" refid="class-particleprocessmaterial-property-scale-min"><inline classes="std std-ref">scale_min</inline></reference>、<reference internal="True" refid="class-particleprocessmaterial-property-scale-max"><inline classes="std std-ref">scale_max</inline></reference>、<reference internal="True" refid="class-particleprocessmaterial-property-scale-curve"><inline classes="std std-ref">scale_curve</inline></reference> 和 <reference internal="True" refid="class-particleprocessmaterial-property-scale-over-velocity-curve"><inline classes="std std-ref">scale_over_velocity_curve</inline></reference>）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-color"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-color" names="class_particleprocessmaterial_property_color"><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>color</strong> = <literal>Color(1, 1, 1, 1)</literal> <reference internal="True" refid="class-particleprocessmaterial-property-color"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_color</strong>(value: <reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_color#class-color"><inline classes="std std-ref">Color</inline></reference> <strong>get_color</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>每个粒子的初始颜色。如果定义了 <reference internal="True" refuri="class_gpuparticles2d#class-gpuparticles2d"><inline classes="std std-ref">GPUParticles2D</inline></reference> 的 <literal>texture</literal>，它将乘以该颜色。</paragraph>
            <paragraph><strong>注意：</strong><reference internal="True" refid="class-particleprocessmaterial-property-color"><inline classes="std std-ref">color</inline></reference> 乘以粒子网格的顶点颜色。要在 <reference internal="True" refuri="class_basematerial3d#class-basematerial3d"><inline classes="std std-ref">BaseMaterial3D</inline></reference> 上产生可见效果，<reference internal="True" refuri="class_basematerial3d#class-basematerial3d-property-vertex-color-use-as-albedo"><inline classes="std std-ref">BaseMaterial3D.vertex_color_use_as_albedo</inline></reference> <emphasis>必须</emphasis>为 <literal>true</literal>。对于 <reference internal="True" refuri="class_shadermaterial#class-shadermaterial"><inline classes="std std-ref">ShaderMaterial</inline></reference>，必须在着色器的 <literal>fragment()</literal> 函数中插入 <literal>ALBEDO *= COLOR.rgb;</literal>。否则，<reference internal="True" refid="class-particleprocessmaterial-property-color"><inline classes="std std-ref">color</inline></reference> 将没有可见效果。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-color-initial-ramp"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-color-initial-ramp" names="class_particleprocessmaterial_property_color_initial_ramp"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>color_initial_ramp</strong> <reference internal="True" refid="class-particleprocessmaterial-property-color-initial-ramp"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_color_initial_ramp</strong>(value: <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>get_color_initial_ramp</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>每个粒子的初始颜色将沿着该 <reference internal="True" refuri="class_gradienttexture1d#class-gradienttexture1d"><inline classes="std std-ref">GradientTexture1D</inline></reference>（乘以 <reference internal="True" refid="class-particleprocessmaterial-property-color"><inline classes="std std-ref">color</inline></reference>）而变化。</paragraph>
            <paragraph><strong>注意：</strong><reference internal="True" refid="class-particleprocessmaterial-property-color-initial-ramp"><inline classes="std std-ref">color_initial_ramp</inline></reference> 乘以粒子网格的顶点颜色。要在 <reference internal="True" refuri="class_basematerial3d#class-basematerial3d"><inline classes="std std-ref">BaseMaterial3D</inline></reference> 上产生可见效果，<reference internal="True" refuri="class_basematerial3d#class-basematerial3d-property-vertex-color-use-as-albedo"><inline classes="std std-ref">BaseMaterial3D.vertex_color_use_as_albedo</inline></reference> <emphasis>必须</emphasis>为 <literal>true</literal>。对于 <reference internal="True" refuri="class_shadermaterial#class-shadermaterial"><inline classes="std std-ref">ShaderMaterial</inline></reference>，必须在着色器的 <literal>fragment()</literal> 函数中插入 <literal>ALBEDO *= COLOR.rgb;</literal>。否则，<reference internal="True" refid="class-particleprocessmaterial-property-color-initial-ramp"><inline classes="std std-ref">color_initial_ramp</inline></reference> 将没有可见效果。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-color-ramp"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-color-ramp" names="class_particleprocessmaterial_property_color_ramp"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>color_ramp</strong> <reference internal="True" refid="class-particleprocessmaterial-property-color-ramp"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_color_ramp</strong>(value: <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>get_color_ramp</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>每个粒子的颜色将在其生命周期内沿该 <reference internal="True" refuri="class_gradienttexture1d#class-gradienttexture1d"><inline classes="std std-ref">GradientTexture1D</inline></reference> 变化（乘以 <reference internal="True" refid="class-particleprocessmaterial-property-color"><inline classes="std std-ref">color</inline></reference>）。</paragraph>
            <paragraph><strong>注意：</strong><reference internal="True" refid="class-particleprocessmaterial-property-color-ramp"><inline classes="std std-ref">color_ramp</inline></reference> 乘以粒子网格的顶点颜色。要在 <reference internal="True" refuri="class_basematerial3d#class-basematerial3d"><inline classes="std std-ref">BaseMaterial3D</inline></reference> 上产生可见效果，<reference internal="True" refuri="class_basematerial3d#class-basematerial3d-property-vertex-color-use-as-albedo"><inline classes="std std-ref">BaseMaterial3D.vertex_color_use_as_albedo</inline></reference> <emphasis>必须</emphasis>为 <literal>true</literal>。对于 <reference internal="True" refuri="class_shadermaterial#class-shadermaterial"><inline classes="std std-ref">ShaderMaterial</inline></reference>，必须在着色器的 <literal>fragment()</literal> 函数中插入 <literal>ALBEDO *= COLOR.rgb;</literal>。否则，<reference internal="True" refid="class-particleprocessmaterial-property-color-ramp"><inline classes="std std-ref">color_ramp</inline></reference> 将没有可见效果。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-damping-curve"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-damping-curve" names="class_particleprocessmaterial_property_damping_curve"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>damping_curve</strong> <reference internal="True" refid="class-particleprocessmaterial-property-damping-curve"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_texture</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, texture: <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>get_param_texture</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>阻尼将沿着这个 <reference internal="True" refuri="class_curvetexture#class-curvetexture"><inline classes="std std-ref">CurveTexture</inline></reference> 变化。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-damping-max"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-damping-max" names="class_particleprocessmaterial_property_damping_max"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>damping_max</strong> = <literal>0.0</literal> <reference internal="True" refid="class-particleprocessmaterial-property-damping-max"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_max</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_max</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>粒子失去速度的最大速率。例如 <literal>100</literal> 的值表示粒子将在 <literal>1</literal> 秒内，速度从 <literal>100</literal> 变为 <literal>0</literal>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-damping-min"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-damping-min" names="class_particleprocessmaterial_property_damping_min"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>damping_min</strong> = <literal>0.0</literal> <reference internal="True" refid="class-particleprocessmaterial-property-damping-min"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_min</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_min</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-damping-max"><inline classes="std std-ref">damping_max</inline></reference> 的对应最小值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-direction"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-direction" names="class_particleprocessmaterial_property_direction"><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> <strong>direction</strong> = <literal>Vector3(1, 0, 0)</literal> <reference internal="True" refid="class-particleprocessmaterial-property-direction"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_direction</strong>(value: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> <strong>get_direction</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>指定粒子发射方向的单位向量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-directional-velocity-curve"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-directional-velocity-curve" names="class_particleprocessmaterial_property_directional_velocity_curve"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>directional_velocity_curve</strong> <reference internal="True" refid="class-particleprocessmaterial-property-directional-velocity-curve"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_texture</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, texture: <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>get_param_texture</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>一条曲线，指定粒子系统在其生命周期内沿每个轴的速度。</paragraph>
            <paragraph><strong>注意：</strong>动画速度不会受到阻尼的影响，请使用 <reference internal="True" refid="class-particleprocessmaterial-property-velocity-limit-curve"><inline classes="std std-ref">velocity_limit_curve</inline></reference> 代替。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-directional-velocity-max"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-directional-velocity-max" names="class_particleprocessmaterial_property_directional_velocity_max"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>directional_velocity_max</strong> <reference internal="True" refid="class-particleprocessmaterial-property-directional-velocity-max"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_max</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_max</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>最大方向速度值，乘以 <reference internal="True" refid="class-particleprocessmaterial-property-directional-velocity-curve"><inline classes="std std-ref">directional_velocity_curve</inline></reference>。</paragraph>
            <paragraph><strong>注意：</strong>动画速度不会受到阻尼的影响，请使用 <reference internal="True" refid="class-particleprocessmaterial-property-velocity-limit-curve"><inline classes="std std-ref">velocity_limit_curve</inline></reference> 代替。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-directional-velocity-min"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-directional-velocity-min" names="class_particleprocessmaterial_property_directional_velocity_min"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>directional_velocity_min</strong> <reference internal="True" refid="class-particleprocessmaterial-property-directional-velocity-min"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_min</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_min</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>最小方向速度值，乘以 <reference internal="True" refid="class-particleprocessmaterial-property-directional-velocity-curve"><inline classes="std std-ref">directional_velocity_curve</inline></reference>。</paragraph>
            <paragraph><strong>注意：</strong>动画速度不会受到阻尼的影响，请使用 <reference internal="True" refid="class-particleprocessmaterial-property-velocity-limit-curve"><inline classes="std std-ref">velocity_limit_curve</inline></reference> 代替。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-emission-box-extents"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-emission-box-extents" names="class_particleprocessmaterial_property_emission_box_extents"><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> <strong>emission_box_extents</strong> <reference internal="True" refid="class-particleprocessmaterial-property-emission-box-extents"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_emission_box_extents</strong>(value: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> <strong>get_emission_box_extents</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果 <reference internal="True" refid="class-particleprocessmaterial-property-emission-shape"><inline classes="std std-ref">emission_shape</inline></reference> 设置为 <reference internal="True" refid="class-particleprocessmaterial-constant-emission-shape-box"><inline classes="std std-ref">EMISSION_SHAPE_BOX</inline></reference>，则为框的范围。</paragraph>
            <paragraph><strong>注意：</strong><reference internal="True" refid="class-particleprocessmaterial-property-emission-box-extents"><inline classes="std std-ref">emission_box_extents</inline></reference> 从中心点开始，并在两个方向上应用 X、Y 和 Z 值。大小是范围区域的两倍。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-emission-color-texture"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-emission-color-texture" names="class_particleprocessmaterial_property_emission_color_texture"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>emission_color_texture</strong> <reference internal="True" refid="class-particleprocessmaterial-property-emission-color-texture"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_emission_color_texture</strong>(value: <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>get_emission_color_texture</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>粒子颜色将被调制，调制使用的颜色将通过对该纹理在与 <reference internal="True" refid="class-particleprocessmaterial-property-emission-point-texture"><inline classes="std std-ref">emission_point_texture</inline></reference> 相同的点处进行采样来确定。</paragraph>
            <paragraph><strong>注意：</strong><reference internal="True" refid="class-particleprocessmaterial-property-emission-color-texture"><inline classes="std std-ref">emission_color_texture</inline></reference> 乘以粒子网格的顶点颜色。要在 <reference internal="True" refuri="class_basematerial3d#class-basematerial3d"><inline classes="std std-ref">BaseMaterial3D</inline></reference> 上产生可见效果，<reference internal="True" refuri="class_basematerial3d#class-basematerial3d-property-vertex-color-use-as-albedo"><inline classes="std std-ref">BaseMaterial3D.vertex_color_use_as_albedo</inline></reference> <emphasis>必须</emphasis>为 <literal>true</literal>。对于 <reference internal="True" refuri="class_shadermaterial#class-shadermaterial"><inline classes="std std-ref">ShaderMaterial</inline></reference>，必须在着色器的 <literal>fragment()</literal> 函数中插入 <literal>ALBEDO *= COLOR.rgb;</literal>。否则，<reference internal="True" refid="class-particleprocessmaterial-property-emission-color-texture"><inline classes="std std-ref">emission_color_texture</inline></reference> 将没有可见效果。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-emission-curve"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-emission-curve" names="class_particleprocessmaterial_property_emission_curve"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>emission_curve</strong> <reference internal="True" refid="class-particleprocessmaterial-property-emission-curve"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_emission_curve</strong>(value: <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>get_emission_curve</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>每个粒子的颜色将在其生命周期内乘以该 <reference internal="True" refuri="class_curvetexture#class-curvetexture"><inline classes="std std-ref">CurveTexture</inline></reference>。</paragraph>
            <paragraph><strong>注意：</strong>除非渲染材质被标记为无阴影，否则该属性不会产生可见效果。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-emission-normal-texture"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-emission-normal-texture" names="class_particleprocessmaterial_property_emission_normal_texture"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>emission_normal_texture</strong> <reference internal="True" refid="class-particleprocessmaterial-property-emission-normal-texture"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_emission_normal_texture</strong>(value: <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>get_emission_normal_texture</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>粒子的速度和旋转将通过在与<reference internal="True" refid="class-particleprocessmaterial-property-emission-point-texture"><inline classes="std std-ref">emission_point_texture</inline></reference>相同的点上对该纹理进行采样来设置。仅在<reference internal="True" refid="class-particleprocessmaterial-constant-emission-shape-directed-points"><inline classes="std std-ref">EMISSION_SHAPE_DIRECTED_POINTS</inline></reference>中使用。可以通过选择工具栏中 "粒子 "工具下的 "从网格/节点创建发射点"，从网格或节点自动创建。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-emission-point-count"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-emission-point-count" names="class_particleprocessmaterial_property_emission_point_count"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>emission_point_count</strong> <reference internal="True" refid="class-particleprocessmaterial-property-emission-point-count"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_emission_point_count</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_emission_point_count</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-emission-shape"><inline classes="std std-ref">emission_shape</inline></reference> 被设置为 <reference internal="True" refid="class-particleprocessmaterial-constant-emission-shape-points"><inline classes="std std-ref">EMISSION_SHAPE_POINTS</inline></reference> 或 <reference internal="True" refid="class-particleprocessmaterial-constant-emission-shape-directed-points"><inline classes="std std-ref">EMISSION_SHAPE_DIRECTED_POINTS</inline></reference> 时，发射点的数量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-emission-point-texture"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-emission-point-texture" names="class_particleprocessmaterial_property_emission_point_texture"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>emission_point_texture</strong> <reference internal="True" refid="class-particleprocessmaterial-property-emission-point-texture"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_emission_point_texture</strong>(value: <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>get_emission_point_texture</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>粒子将被发射到由随机采样纹理所决定的位置。与<reference internal="True" refid="class-particleprocessmaterial-constant-emission-shape-points"><inline classes="std std-ref">EMISSION_SHAPE_POINTS</inline></reference>和<reference internal="True" refid="class-particleprocessmaterial-constant-emission-shape-directed-points"><inline classes="std std-ref">EMISSION_SHAPE_DIRECTED_POINTS</inline></reference>一起使用。可以通过选择工具栏中的“粒子”工具下的“从网格/节点中创建发射点”自动创建网格或节点。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-emission-ring-axis"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-emission-ring-axis" names="class_particleprocessmaterial_property_emission_ring_axis"><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> <strong>emission_ring_axis</strong> <reference internal="True" refid="class-particleprocessmaterial-property-emission-ring-axis"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_emission_ring_axis</strong>(value: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> <strong>get_emission_ring_axis</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>使用形为 <reference internal="True" refid="class-particleprocessmaterial-constant-emission-shape-ring"><inline classes="std std-ref">EMISSION_SHAPE_RING</inline></reference> 的发射器时环的轴。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-emission-ring-height"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-emission-ring-height" names="class_particleprocessmaterial_property_emission_ring_height"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>emission_ring_height</strong> <reference internal="True" refid="class-particleprocessmaterial-property-emission-ring-height"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_emission_ring_height</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_emission_ring_height</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>使用形为 <reference internal="True" refid="class-particleprocessmaterial-constant-emission-shape-ring"><inline classes="std std-ref">EMISSION_SHAPE_RING</inline></reference> 的发射器时环的高度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-emission-ring-inner-radius"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-emission-ring-inner-radius" names="class_particleprocessmaterial_property_emission_ring_inner_radius"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>emission_ring_inner_radius</strong> <reference internal="True" refid="class-particleprocessmaterial-property-emission-ring-inner-radius"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_emission_ring_inner_radius</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_emission_ring_inner_radius</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>使用形为 <reference internal="True" refid="class-particleprocessmaterial-constant-emission-shape-ring"><inline classes="std std-ref">EMISSION_SHAPE_RING</inline></reference> 的发射器时环的内半径。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-emission-ring-radius"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-emission-ring-radius" names="class_particleprocessmaterial_property_emission_ring_radius"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>emission_ring_radius</strong> <reference internal="True" refid="class-particleprocessmaterial-property-emission-ring-radius"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_emission_ring_radius</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_emission_ring_radius</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>使用形为 <reference internal="True" refid="class-particleprocessmaterial-constant-emission-shape-ring"><inline classes="std std-ref">EMISSION_SHAPE_RING</inline></reference> 的发射器时环的半径。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-emission-shape"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-emission-shape" names="class_particleprocessmaterial_property_emission_shape"><reference internal="True" refid="enum-particleprocessmaterial-emissionshape"><inline classes="std std-ref">EmissionShape</inline></reference> <strong>emission_shape</strong> = <literal>0</literal> <reference internal="True" refid="class-particleprocessmaterial-property-emission-shape"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_emission_shape</strong>(value: <reference internal="True" refid="enum-particleprocessmaterial-emissionshape"><inline classes="std std-ref">EmissionShape</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-particleprocessmaterial-emissionshape"><inline classes="std std-ref">EmissionShape</inline></reference> <strong>get_emission_shape</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>粒子将在这个区域内发射。使用<reference internal="True" refid="enum-particleprocessmaterial-emissionshape"><inline classes="std std-ref">EmissionShape</inline></reference>常量作为值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-emission-shape-offset"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-emission-shape-offset" names="class_particleprocessmaterial_property_emission_shape_offset"><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> <strong>emission_shape_offset</strong> = <literal>Vector3(0, 0, 0)</literal> <reference internal="True" refid="class-particleprocessmaterial-property-emission-shape-offset"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_emission_shape_offset</strong>(value: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> <strong>get_emission_shape_offset</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-emission-shape"><inline classes="std std-ref">emission_shape</inline></reference> 在局部空间中的偏移量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-emission-shape-scale"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-emission-shape-scale" names="class_particleprocessmaterial_property_emission_shape_scale"><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> <strong>emission_shape_scale</strong> = <literal>Vector3(1, 1, 1)</literal> <reference internal="True" refid="class-particleprocessmaterial-property-emission-shape-scale"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_emission_shape_scale</strong>(value: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> <strong>get_emission_shape_scale</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>局部空间中 <reference internal="True" refid="class-particleprocessmaterial-property-emission-shape"><inline classes="std std-ref">emission_shape</inline></reference> 的缩放。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-emission-sphere-radius"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-emission-sphere-radius" names="class_particleprocessmaterial_property_emission_sphere_radius"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>emission_sphere_radius</strong> <reference internal="True" refid="class-particleprocessmaterial-property-emission-sphere-radius"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_emission_sphere_radius</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_emission_sphere_radius</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-emission-shape"><inline classes="std std-ref">emission_shape</inline></reference> 被设置为 <reference internal="True" refid="class-particleprocessmaterial-constant-emission-shape-sphere"><inline classes="std std-ref">EMISSION_SHAPE_SPHERE</inline></reference> 时，该球体的半径。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-flatness"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-flatness" names="class_particleprocessmaterial_property_flatness"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>flatness</strong> = <literal>0.0</literal> <reference internal="True" refid="class-particleprocessmaterial-property-flatness"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_flatness</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_flatness</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>沿 Y 轴的 <reference internal="True" refid="class-particleprocessmaterial-property-spread"><inline classes="std std-ref">spread</inline></reference> 量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-gravity"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-gravity" names="class_particleprocessmaterial_property_gravity"><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> <strong>gravity</strong> = <literal>Vector3(0, -9.8, 0)</literal> <reference internal="True" refid="class-particleprocessmaterial-property-gravity"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_gravity</strong>(value: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> <strong>get_gravity</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>应用于每个粒子的重力。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-hue-variation-curve"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-hue-variation-curve" names="class_particleprocessmaterial_property_hue_variation_curve"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>hue_variation_curve</strong> <reference internal="True" refid="class-particleprocessmaterial-property-hue-variation-curve"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_texture</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, texture: <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>get_param_texture</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>每个粒子的色调将沿着这个 <reference internal="True" refuri="class_curvetexture#class-curvetexture"><inline classes="std std-ref">CurveTexture</inline></reference> 变化。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-hue-variation-max"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-hue-variation-max" names="class_particleprocessmaterial_property_hue_variation_max"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>hue_variation_max</strong> = <literal>0.0</literal> <reference internal="True" refid="class-particleprocessmaterial-property-hue-variation-max"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_max</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_max</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>应用于每个粒子的最大初始色相变化。会改变粒子颜色的色相。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-hue-variation-min"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-hue-variation-min" names="class_particleprocessmaterial_property_hue_variation_min"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>hue_variation_min</strong> = <literal>0.0</literal> <reference internal="True" refid="class-particleprocessmaterial-property-hue-variation-min"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_min</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_min</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-hue-variation-max"><inline classes="std std-ref">hue_variation_max</inline></reference> 的对应最小值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-inherit-velocity-ratio"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-inherit-velocity-ratio" names="class_particleprocessmaterial_property_inherit_velocity_ratio"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>inherit_velocity_ratio</strong> = <literal>0.0</literal> <reference internal="True" refid="class-particleprocessmaterial-property-inherit-velocity-ratio"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_inherit_velocity_ratio</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_inherit_velocity_ratio</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>每个粒子在生成时继承的相应 <reference internal="True" refuri="class_gpuparticles2d#class-gpuparticles2d"><inline classes="std std-ref">GPUParticles2D</inline></reference> 或 <reference internal="True" refuri="class_gpuparticles3d#class-gpuparticles3d"><inline classes="std std-ref">GPUParticles3D</inline></reference> 的速度百分比。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-initial-velocity-max"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-initial-velocity-max" names="class_particleprocessmaterial_property_initial_velocity_max"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>initial_velocity_max</strong> = <literal>0.0</literal> <reference internal="True" refid="class-particleprocessmaterial-property-initial-velocity-max"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_max</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_max</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>每个粒子的最大初始速度大小。方向来自 <reference internal="True" refid="class-particleprocessmaterial-property-direction"><inline classes="std std-ref">direction</inline></reference> 和 <reference internal="True" refid="class-particleprocessmaterial-property-spread"><inline classes="std std-ref">spread</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-initial-velocity-min"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-initial-velocity-min" names="class_particleprocessmaterial_property_initial_velocity_min"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>initial_velocity_min</strong> = <literal>0.0</literal> <reference internal="True" refid="class-particleprocessmaterial-property-initial-velocity-min"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_min</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_min</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-initial-velocity-max"><inline classes="std std-ref">initial_velocity_max</inline></reference> 的对应最小值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-lifetime-randomness"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-lifetime-randomness" names="class_particleprocessmaterial_property_lifetime_randomness"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>lifetime_randomness</strong> = <literal>0.0</literal> <reference internal="True" refid="class-particleprocessmaterial-property-lifetime-randomness"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_lifetime_randomness</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_lifetime_randomness</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>粒子寿命随机比率。粒子寿命的公式为 <literal>lifetime * (1.0 - randf() * lifetime_randomness)</literal>。例如 <reference internal="True" refid="class-particleprocessmaterial-property-lifetime-randomness"><inline classes="std std-ref">lifetime_randomness</inline></reference> 为 <literal>0.4</literal> 时，寿命会被缩放为原本的 <literal>0.6</literal> 到 <literal>1.0</literal> 倍。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-linear-accel-curve"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-linear-accel-curve" names="class_particleprocessmaterial_property_linear_accel_curve"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>linear_accel_curve</strong> <reference internal="True" refid="class-particleprocessmaterial-property-linear-accel-curve"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_texture</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, texture: <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>get_param_texture</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>每个粒子的线性加速度将沿着这个 <reference internal="True" refuri="class_curvetexture#class-curvetexture"><inline classes="std std-ref">CurveTexture</inline></reference> 变化。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-linear-accel-max"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-linear-accel-max" names="class_particleprocessmaterial_property_linear_accel_max"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>linear_accel_max</strong> = <literal>0.0</literal> <reference internal="True" refid="class-particleprocessmaterial-property-linear-accel-max"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_max</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_max</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>在运动方向上应用于每个粒子的最大线性加速度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-linear-accel-min"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-linear-accel-min" names="class_particleprocessmaterial_property_linear_accel_min"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>linear_accel_min</strong> = <literal>0.0</literal> <reference internal="True" refid="class-particleprocessmaterial-property-linear-accel-min"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_min</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_min</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-linear-accel-max"><inline classes="std std-ref">linear_accel_max</inline></reference> 的对应最小值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-orbit-velocity-curve"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-orbit-velocity-curve" names="class_particleprocessmaterial_property_orbit_velocity_curve"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>orbit_velocity_curve</strong> <reference internal="True" refid="class-particleprocessmaterial-property-orbit-velocity-curve"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_texture</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, texture: <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>get_param_texture</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>每个粒子的轨道速度将沿着该 <reference internal="True" refuri="class_curvetexture#class-curvetexture"><inline classes="std std-ref">CurveTexture</inline></reference> 变化。</paragraph>
            <paragraph><strong>注意：</strong>对于 3D 轨道速度，请使用 <reference internal="True" refuri="class_curvexyztexture#class-curvexyztexture"><inline classes="std std-ref">CurveXYZTexture</inline></reference>。</paragraph>
            <paragraph><strong>注意：</strong>动画速度不会受到阻尼的影响，请使用 <reference internal="True" refid="class-particleprocessmaterial-property-velocity-limit-curve"><inline classes="std std-ref">velocity_limit_curve</inline></reference> 代替。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-orbit-velocity-max"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-orbit-velocity-max" names="class_particleprocessmaterial_property_orbit_velocity_max"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>orbit_velocity_max</strong> = <literal>0.0</literal> <reference internal="True" refid="class-particleprocessmaterial-property-orbit-velocity-max"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_max</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_max</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>应用于每个粒子的最大轨道速度。使粒子围绕原点环绕。以每秒围绕原点的完整旋转次数指定。</paragraph>
            <paragraph><strong>注意：</strong>动画速度不会受到阻尼的影响，请使用 <reference internal="True" refid="class-particleprocessmaterial-property-velocity-limit-curve"><inline classes="std std-ref">velocity_limit_curve</inline></reference> 代替。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-orbit-velocity-min"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-orbit-velocity-min" names="class_particleprocessmaterial_property_orbit_velocity_min"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>orbit_velocity_min</strong> = <literal>0.0</literal> <reference internal="True" refid="class-particleprocessmaterial-property-orbit-velocity-min"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_min</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_min</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-orbit-velocity-max"><inline classes="std std-ref">orbit_velocity_max</inline></reference> 的最小等效值。</paragraph>
            <paragraph><strong>注意：</strong>动画速度不会受到阻尼的影响，请使用 <reference internal="True" refid="class-particleprocessmaterial-property-velocity-limit-curve"><inline classes="std std-ref">velocity_limit_curve</inline></reference> 代替。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-particle-flag-align-y"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-particle-flag-align-y" names="class_particleprocessmaterial_property_particle_flag_align_y"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>particle_flag_align_y</strong> = <literal>false</literal> <reference internal="True" refid="class-particleprocessmaterial-property-particle-flag-align-y"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_particle_flag</strong>(particle_flag: <reference internal="True" refid="enum-particleprocessmaterial-particleflags"><inline classes="std std-ref">ParticleFlags</inline></reference>, enable: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_particle_flag</strong>(particle_flag: <reference internal="True" refid="enum-particleprocessmaterial-particleflags"><inline classes="std std-ref">ParticleFlags</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>将粒子的 Y 轴与其速度方向对齐。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-particle-flag-damping-as-friction"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-particle-flag-damping-as-friction" names="class_particleprocessmaterial_property_particle_flag_damping_as_friction"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>particle_flag_damping_as_friction</strong> = <literal>false</literal> <reference internal="True" refid="class-particleprocessmaterial-property-particle-flag-damping-as-friction"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_particle_flag</strong>(particle_flag: <reference internal="True" refid="enum-particleprocessmaterial-particleflags"><inline classes="std std-ref">ParticleFlags</inline></reference>, enable: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_particle_flag</strong>(particle_flag: <reference internal="True" refid="enum-particleprocessmaterial-particleflags"><inline classes="std std-ref">ParticleFlags</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>将阻尼属性的行为从线性减速度更改为基于速度百分比的减速度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-particle-flag-disable-z"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-particle-flag-disable-z" names="class_particleprocessmaterial_property_particle_flag_disable_z"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>particle_flag_disable_z</strong> = <literal>false</literal> <reference internal="True" refid="class-particleprocessmaterial-property-particle-flag-disable-z"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_particle_flag</strong>(particle_flag: <reference internal="True" refid="enum-particleprocessmaterial-particleflags"><inline classes="std std-ref">ParticleFlags</inline></reference>, enable: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_particle_flag</strong>(particle_flag: <reference internal="True" refid="enum-particleprocessmaterial-particleflags"><inline classes="std std-ref">ParticleFlags</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则粒子将不会在 z 轴上移动。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-particle-flag-rotate-y"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-particle-flag-rotate-y" names="class_particleprocessmaterial_property_particle_flag_rotate_y"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>particle_flag_rotate_y</strong> = <literal>false</literal> <reference internal="True" refid="class-particleprocessmaterial-property-particle-flag-rotate-y"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_particle_flag</strong>(particle_flag: <reference internal="True" refid="enum-particleprocessmaterial-particleflags"><inline classes="std std-ref">ParticleFlags</inline></reference>, enable: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_particle_flag</strong>(particle_flag: <reference internal="True" refid="enum-particleprocessmaterial-particleflags"><inline classes="std std-ref">ParticleFlags</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则粒子绕 Y 轴旋转 <reference internal="True" refid="class-particleprocessmaterial-property-angle-min"><inline classes="std std-ref">angle_min</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-radial-accel-curve"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-radial-accel-curve" names="class_particleprocessmaterial_property_radial_accel_curve"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>radial_accel_curve</strong> <reference internal="True" refid="class-particleprocessmaterial-property-radial-accel-curve"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_texture</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, texture: <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>get_param_texture</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>每个粒子的径向加速度将沿着这个 <reference internal="True" refuri="class_curvetexture#class-curvetexture"><inline classes="std std-ref">CurveTexture</inline></reference> 变化。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-radial-accel-max"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-radial-accel-max" names="class_particleprocessmaterial_property_radial_accel_max"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>radial_accel_max</strong> = <literal>0.0</literal> <reference internal="True" refid="class-particleprocessmaterial-property-radial-accel-max"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_max</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_max</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>应用于每个粒子的最大径向加速度。使粒子加速远离原点；或如果为负，则加速靠近原点。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-radial-accel-min"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-radial-accel-min" names="class_particleprocessmaterial_property_radial_accel_min"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>radial_accel_min</strong> = <literal>0.0</literal> <reference internal="True" refid="class-particleprocessmaterial-property-radial-accel-min"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_min</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_min</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-radial-accel-max"><inline classes="std std-ref">radial_accel_max</inline></reference> 的对应最小值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-radial-velocity-curve"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-radial-velocity-curve" names="class_particleprocessmaterial_property_radial_velocity_curve"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>radial_velocity_curve</strong> <reference internal="True" refid="class-particleprocessmaterial-property-radial-velocity-curve"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_texture</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, texture: <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>get_param_texture</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>一个 <reference internal="True" refuri="class_curvetexture#class-curvetexture"><inline classes="std std-ref">CurveTexture</inline></reference>，定义粒子生命周期中远离（或朝向）<reference internal="True" refid="class-particleprocessmaterial-property-velocity-pivot"><inline classes="std std-ref">velocity_pivot</inline></reference> 的速度。</paragraph>
            <paragraph><strong>注意：</strong>动画速度不会受到阻尼的影响，请使用 <reference internal="True" refid="class-particleprocessmaterial-property-velocity-limit-curve"><inline classes="std std-ref">velocity_limit_curve</inline></reference> 代替。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-radial-velocity-max"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-radial-velocity-max" names="class_particleprocessmaterial_property_radial_velocity_max"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>radial_velocity_max</strong> = <literal>0.0</literal> <reference internal="True" refid="class-particleprocessmaterial-property-radial-velocity-max"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_max</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_max</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>应用于每个粒子的最大径向速度。使粒子远离 <reference internal="True" refid="class-particleprocessmaterial-property-velocity-pivot"><inline classes="std std-ref">velocity_pivot</inline></reference>，如果为负则朝它移动。</paragraph>
            <paragraph><strong>注意：</strong>动画速度不会受到阻尼的影响，请使用 <reference internal="True" refid="class-particleprocessmaterial-property-velocity-limit-curve"><inline classes="std std-ref">velocity_limit_curve</inline></reference> 代替。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-radial-velocity-min"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-radial-velocity-min" names="class_particleprocessmaterial_property_radial_velocity_min"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>radial_velocity_min</strong> = <literal>0.0</literal> <reference internal="True" refid="class-particleprocessmaterial-property-radial-velocity-min"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_min</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_min</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>应用于每个粒子的最小径向速度。使粒子远离 <reference internal="True" refid="class-particleprocessmaterial-property-velocity-pivot"><inline classes="std std-ref">velocity_pivot</inline></reference>，如果为负则朝它移动。</paragraph>
            <paragraph><strong>注意：</strong>动画速度不会受到阻尼的影响，请使用 <reference internal="True" refid="class-particleprocessmaterial-property-velocity-limit-curve"><inline classes="std std-ref">velocity_limit_curve</inline></reference> 代替。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-scale-curve"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-scale-curve" names="class_particleprocessmaterial_property_scale_curve"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>scale_curve</strong> <reference internal="True" refid="class-particleprocessmaterial-property-scale-curve"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_texture</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, texture: <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>get_param_texture</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>每个粒子的缩放将在其生命周期内沿着这个 <reference internal="True" refuri="class_curvetexture#class-curvetexture"><inline classes="std std-ref">CurveTexture</inline></reference> 变化。如果改为提供一个 <reference internal="True" refuri="class_curvexyztexture#class-curvexyztexture"><inline classes="std std-ref">CurveXYZTexture</inline></reference>，则缩放将按轴分离。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-scale-max"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-scale-max" names="class_particleprocessmaterial_property_scale_max"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>scale_max</strong> = <literal>1.0</literal> <reference internal="True" refid="class-particleprocessmaterial-property-scale-max"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_max</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_max</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>应用于每个粒子的最大初始缩放。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-scale-min"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-scale-min" names="class_particleprocessmaterial_property_scale_min"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>scale_min</strong> = <literal>1.0</literal> <reference internal="True" refid="class-particleprocessmaterial-property-scale-min"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_min</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_min</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-scale-max"><inline classes="std std-ref">scale_max</inline></reference> 对应的最小值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-scale-over-velocity-curve"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-scale-over-velocity-curve" names="class_particleprocessmaterial_property_scale_over_velocity_curve"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>scale_over_velocity_curve</strong> <reference internal="True" refid="class-particleprocessmaterial-property-scale-over-velocity-curve"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_texture</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, texture: <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>get_param_texture</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>根据 <reference internal="True" refuri="class_curvetexture#class-curvetexture"><inline classes="std std-ref">CurveTexture</inline></reference> 或 <reference internal="True" refuri="class_curvexyztexture#class-curvexyztexture"><inline classes="std std-ref">CurveXYZTexture</inline></reference> 缩放每个粒子的速度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-scale-over-velocity-max"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-scale-over-velocity-max" names="class_particleprocessmaterial_property_scale_over_velocity_max"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>scale_over_velocity_max</strong> = <literal>0.0</literal> <reference internal="True" refid="class-particleprocessmaterial-property-scale-over-velocity-max"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_max</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_max</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-scale-over-velocity-curve"><inline classes="std std-ref">scale_over_velocity_curve</inline></reference> 的最大速度参考值。</paragraph>
            <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-scale-over-velocity-curve"><inline classes="std std-ref">scale_over_velocity_curve</inline></reference> 将在 <reference internal="True" refid="class-particleprocessmaterial-property-scale-over-velocity-min"><inline classes="std std-ref">scale_over_velocity_min</inline></reference> 和 <reference internal="True" refid="class-particleprocessmaterial-property-scale-over-velocity-max"><inline classes="std std-ref">scale_over_velocity_max</inline></reference> 之间插值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-scale-over-velocity-min"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-scale-over-velocity-min" names="class_particleprocessmaterial_property_scale_over_velocity_min"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>scale_over_velocity_min</strong> = <literal>0.0</literal> <reference internal="True" refid="class-particleprocessmaterial-property-scale-over-velocity-min"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_min</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_min</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-scale-over-velocity-curve"><inline classes="std std-ref">scale_over_velocity_curve</inline></reference> 的最小速度参考值。</paragraph>
            <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-scale-over-velocity-curve"><inline classes="std std-ref">scale_over_velocity_curve</inline></reference> 将在 <reference internal="True" refid="class-particleprocessmaterial-property-scale-over-velocity-min"><inline classes="std std-ref">scale_over_velocity_min</inline></reference> 和 <reference internal="True" refid="class-particleprocessmaterial-property-scale-over-velocity-max"><inline classes="std std-ref">scale_over_velocity_max</inline></reference> 之间插值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-spread"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-spread" names="class_particleprocessmaterial_property_spread"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>spread</strong> = <literal>45.0</literal> <reference internal="True" refid="class-particleprocessmaterial-property-spread"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_spread</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_spread</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>每个粒子的初始方向范围，从 <literal>+spread</literal> 度到 <literal>-spread</literal> 度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-sub-emitter-amount-at-collision"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-sub-emitter-amount-at-collision" names="class_particleprocessmaterial_property_sub_emitter_amount_at_collision"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>sub_emitter_amount_at_collision</strong> <reference internal="True" refid="class-particleprocessmaterial-property-sub-emitter-amount-at-collision"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_sub_emitter_amount_at_collision</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_sub_emitter_amount_at_collision</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>发生碰撞时从子发射器节点生成的粒子数量。当与主要粒子材质上的 <reference internal="True" refid="class-particleprocessmaterial-constant-collision-hide-on-contact"><inline classes="std std-ref">COLLISION_HIDE_ON_CONTACT</inline></reference> 结合使用时，可以用来实现雨滴撞击地面等效果。</paragraph>
            <paragraph><strong>注意：</strong>该值不应超过<emphasis>子发射器节点</emphasis>（不是主节点）上定义的 <reference internal="True" refuri="class_gpuparticles2d#class-gpuparticles2d-property-amount"><inline classes="std std-ref">GPUParticles2D.amount</inline></reference> 或 <reference internal="True" refuri="class_gpuparticles3d#class-gpuparticles3d-property-amount"><inline classes="std std-ref">GPUParticles3D.amount</inline></reference>，相对于子发射器的粒子寿命。如果超过粒子数量，则在足够的粒子过期之前，不会从子发射器中产生新的粒子。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-sub-emitter-amount-at-end"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-sub-emitter-amount-at-end" names="class_particleprocessmaterial_property_sub_emitter_amount_at_end"><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>sub_emitter_amount_at_end</strong> <reference internal="True" refid="class-particleprocessmaterial-property-sub-emitter-amount-at-end"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_sub_emitter_amount_at_end</strong>(value: <reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_int#class-int"><inline classes="std std-ref">int</inline></reference> <strong>get_sub_emitter_amount_at_end</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>粒子过期时从子发射器节点生成的粒子数量。</paragraph>
            <paragraph><strong>注意：</strong>该值不应超过<emphasis>子发射器节点</emphasis>（不是主节点）上定义的 <reference internal="True" refuri="class_gpuparticles2d#class-gpuparticles2d-property-amount"><inline classes="std std-ref">GPUParticles2D.amount</inline></reference> 或 <reference internal="True" refuri="class_gpuparticles3d#class-gpuparticles3d-property-amount"><inline classes="std std-ref">GPUParticles3D.amount</inline></reference>，相对于子发射器的粒子寿命。如果超过粒子数量，则在足够的粒子过期之前，不会从子发射器中产生新的粒子。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-sub-emitter-frequency"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-sub-emitter-frequency" names="class_particleprocessmaterial_property_sub_emitter_frequency"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>sub_emitter_frequency</strong> <reference internal="True" refid="class-particleprocessmaterial-property-sub-emitter-frequency"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_sub_emitter_frequency</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_sub_emitter_frequency</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>从子发射器节点发射粒子的频率。每 <reference internal="True" refid="class-particleprocessmaterial-property-sub-emitter-frequency"><inline classes="std std-ref">sub_emitter_frequency</inline></reference> 秒就会产生一个粒子。</paragraph>
            <paragraph><strong>注意：</strong>该值不应超过<emphasis>子发射器节点</emphasis>（不是主节点）上定义的 <reference internal="True" refuri="class_gpuparticles2d#class-gpuparticles2d-property-amount"><inline classes="std std-ref">GPUParticles2D.amount</inline></reference> 或 <reference internal="True" refuri="class_gpuparticles3d#class-gpuparticles3d-property-amount"><inline classes="std std-ref">GPUParticles3D.amount</inline></reference>，相对于子发射器的粒子寿命。如果超过粒子数量，则在足够的粒子过期之前，不会从子发射器中产生新的粒子。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-sub-emitter-keep-velocity"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-sub-emitter-keep-velocity" names="class_particleprocessmaterial_property_sub_emitter_keep_velocity"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>sub_emitter_keep_velocity</strong> = <literal>false</literal> <reference internal="True" refid="class-particleprocessmaterial-property-sub-emitter-keep-velocity"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_sub_emitter_keep_velocity</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_sub_emitter_keep_velocity</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则子发射器在其生成时继承父粒子的速度。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-sub-emitter-mode"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-sub-emitter-mode" names="class_particleprocessmaterial_property_sub_emitter_mode"><reference internal="True" refid="enum-particleprocessmaterial-subemittermode"><inline classes="std std-ref">SubEmitterMode</inline></reference> <strong>sub_emitter_mode</strong> = <literal>0</literal> <reference internal="True" refid="class-particleprocessmaterial-property-sub-emitter-mode"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_sub_emitter_mode</strong>(value: <reference internal="True" refid="enum-particleprocessmaterial-subemittermode"><inline classes="std std-ref">SubEmitterMode</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="enum-particleprocessmaterial-subemittermode"><inline classes="std std-ref">SubEmitterMode</inline></reference> <strong>get_sub_emitter_mode</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>粒子子发射器模式（参见 <reference internal="True" refuri="class_gpuparticles2d#class-gpuparticles2d-property-sub-emitter"><inline classes="std std-ref">GPUParticles2D.sub_emitter</inline></reference> 和 <reference internal="True" refuri="class_gpuparticles3d#class-gpuparticles3d-property-sub-emitter"><inline classes="std std-ref">GPUParticles3D.sub_emitter</inline></reference>）。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-tangential-accel-curve"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-tangential-accel-curve" names="class_particleprocessmaterial_property_tangential_accel_curve"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>tangential_accel_curve</strong> <reference internal="True" refid="class-particleprocessmaterial-property-tangential-accel-curve"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_texture</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, texture: <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>get_param_texture</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>每个粒子的切向加速度将沿着这个 <reference internal="True" refuri="class_curvetexture#class-curvetexture"><inline classes="std std-ref">CurveTexture</inline></reference> 变化。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-tangential-accel-max"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-tangential-accel-max" names="class_particleprocessmaterial_property_tangential_accel_max"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>tangential_accel_max</strong> = <literal>0.0</literal> <reference internal="True" refid="class-particleprocessmaterial-property-tangential-accel-max"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_max</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_max</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>应用于每个粒子的最大切向加速度。切向加速度垂直于粒子的速度，从而使粒子产生涡旋运动。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-tangential-accel-min"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-tangential-accel-min" names="class_particleprocessmaterial_property_tangential_accel_min"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>tangential_accel_min</strong> = <literal>0.0</literal> <reference internal="True" refid="class-particleprocessmaterial-property-tangential-accel-min"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_min</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_min</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph><reference internal="True" refid="class-particleprocessmaterial-property-tangential-accel-max"><inline classes="std std-ref">tangential_accel_max</inline></reference> 的对应最小值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-turbulence-enabled"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-turbulence-enabled" names="class_particleprocessmaterial_property_turbulence_enabled"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>turbulence_enabled</strong> = <literal>false</literal> <reference internal="True" refid="class-particleprocessmaterial-property-turbulence-enabled"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_turbulence_enabled</strong>(value: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_turbulence_enabled</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果为 <literal>true</literal>，则为粒子系统启用湍流。湍流可以（基于 3D 噪声图案）根据粒子的位置来改变粒子的移动。在 3D 中，可以用 <reference internal="True" refuri="class_gpuparticlesattractorvectorfield3d#class-gpuparticlesattractorvectorfield3d"><inline classes="std std-ref">GPUParticlesAttractorVectorField3D</inline></reference> 和 <reference internal="True" refuri="class_noisetexture3d#class-noisetexture3d"><inline classes="std std-ref">NoiseTexture3D</inline></reference> 作为世界空间湍流的平替，能够让不同粒子系统作出相同的反应。</paragraph>
            <paragraph><strong>注意：</strong>启用湍流对于 GPU 有较高的性能消耗。请最多只对少量粒子系统启用湍流，以移动/Web 平台作为目标时请考虑禁用湍流。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-turbulence-influence-max"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-turbulence-influence-max" names="class_particleprocessmaterial_property_turbulence_influence_max"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>turbulence_influence_max</strong> = <literal>0.1</literal> <reference internal="True" refid="class-particleprocessmaterial-property-turbulence-influence-max"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_max</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_max</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>对每个粒子的最大湍流影响。</paragraph>
            <paragraph>对每个粒子的实际湍流影响量，计算为介于 <reference internal="True" refid="class-particleprocessmaterial-property-turbulence-influence-min"><inline classes="std std-ref">turbulence_influence_min</inline></reference> 和 <reference internal="True" refid="class-particleprocessmaterial-property-turbulence-influence-max"><inline classes="std std-ref">turbulence_influence_max</inline></reference> 之间的一个随机值，并乘以来自 <reference internal="True" refid="class-particleprocessmaterial-property-turbulence-influence-over-life"><inline classes="std std-ref">turbulence_influence_over_life</inline></reference> 的湍流影响量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-turbulence-influence-min"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-turbulence-influence-min" names="class_particleprocessmaterial_property_turbulence_influence_min"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>turbulence_influence_min</strong> = <literal>0.1</literal> <reference internal="True" refid="class-particleprocessmaterial-property-turbulence-influence-min"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_min</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_min</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>对每个粒子的最小湍流影响。</paragraph>
            <paragraph>对每个粒子的实际湍流影响量，计算为介于 <reference internal="True" refid="class-particleprocessmaterial-property-turbulence-influence-min"><inline classes="std std-ref">turbulence_influence_min</inline></reference> 和 <reference internal="True" refid="class-particleprocessmaterial-property-turbulence-influence-max"><inline classes="std std-ref">turbulence_influence_max</inline></reference> 之间的一个随机值，并乘以来自 <reference internal="True" refid="class-particleprocessmaterial-property-turbulence-influence-over-life"><inline classes="std std-ref">turbulence_influence_over_life</inline></reference> 的湍流影响量。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-turbulence-influence-over-life"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-turbulence-influence-over-life" names="class_particleprocessmaterial_property_turbulence_influence_over_life"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>turbulence_influence_over_life</strong> <reference internal="True" refid="class-particleprocessmaterial-property-turbulence-influence-over-life"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_texture</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, texture: <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>get_param_texture</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>每个粒子的湍流量，将在其生命周期内沿这条 <reference internal="True" refuri="class_curvetexture#class-curvetexture"><inline classes="std std-ref">CurveTexture</inline></reference> 受到影响。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-turbulence-initial-displacement-max"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-turbulence-initial-displacement-max" names="class_particleprocessmaterial_property_turbulence_initial_displacement_max"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>turbulence_initial_displacement_max</strong> = <literal>0.0</literal> <reference internal="True" refid="class-particleprocessmaterial-property-turbulence-initial-displacement-max"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_max</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_max</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>湍流对每个粒子出生位置的最大位移。</paragraph>
            <paragraph>实际位移量将是基础湍流乘以一个介于 <reference internal="True" refid="class-particleprocessmaterial-property-turbulence-initial-displacement-min"><inline classes="std std-ref">turbulence_initial_displacement_min</inline></reference> 和 <reference internal="True" refid="class-particleprocessmaterial-property-turbulence-initial-displacement-max"><inline classes="std std-ref">turbulence_initial_displacement_max</inline></reference> 之间的随机值的系数。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-turbulence-initial-displacement-min"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-turbulence-initial-displacement-min" names="class_particleprocessmaterial_property_turbulence_initial_displacement_min"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>turbulence_initial_displacement_min</strong> = <literal>0.0</literal> <reference internal="True" refid="class-particleprocessmaterial-property-turbulence-initial-displacement-min"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_min</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_min</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>湍流对每个粒子出生位置的最小位移。</paragraph>
            <paragraph>实际位移量将是基础湍流乘以一个介于 <reference internal="True" refid="class-particleprocessmaterial-property-turbulence-initial-displacement-min"><inline classes="std std-ref">turbulence_initial_displacement_min</inline></reference> 和 <reference internal="True" refid="class-particleprocessmaterial-property-turbulence-initial-displacement-max"><inline classes="std std-ref">turbulence_initial_displacement_max</inline></reference> 之间的随机值的系数。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-turbulence-noise-scale"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-turbulence-noise-scale" names="class_particleprocessmaterial_property_turbulence_noise_scale"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>turbulence_noise_scale</strong> = <literal>9.0</literal> <reference internal="True" refid="class-particleprocessmaterial-property-turbulence-noise-scale"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_turbulence_noise_scale</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_turbulence_noise_scale</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>该值控制湍流噪声图案的整体比例/频率。</paragraph>
            <paragraph>小的比例会产生更小的特征具有更多细节，而高的比例会产生具有更大特征的更平滑的噪声。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-turbulence-noise-speed"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-turbulence-noise-speed" names="class_particleprocessmaterial_property_turbulence_noise_speed"><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> <strong>turbulence_noise_speed</strong> = <literal>Vector3(0, 0, 0)</literal> <reference internal="True" refid="class-particleprocessmaterial-property-turbulence-noise-speed"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_turbulence_noise_speed</strong>(value: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> <strong>get_turbulence_noise_speed</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>湍流场的滚动速度。设置的是图案随时间移动的方向趋势。</paragraph>
            <paragraph>默认值 <literal>Vector3(0, 0, 0)</literal> 会将滚动关闭。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-turbulence-noise-speed-random"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-turbulence-noise-speed-random" names="class_particleprocessmaterial_property_turbulence_noise_speed_random"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>turbulence_noise_speed_random</strong> = <literal>0.2</literal> <reference internal="True" refid="class-particleprocessmaterial-property-turbulence-noise-speed-random"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_turbulence_noise_speed_random</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_turbulence_noise_speed_random</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>湍流场的原地变化率。会决定噪声图案随时间变化的快慢。</paragraph>
            <paragraph>值为 0.0 时得到的是固定的图案。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-turbulence-noise-strength"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-turbulence-noise-strength" names="class_particleprocessmaterial_property_turbulence_noise_strength"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>turbulence_noise_strength</strong> = <literal>1.0</literal> <reference internal="True" refid="class-particleprocessmaterial-property-turbulence-noise-strength"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_turbulence_noise_strength</strong>(value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_turbulence_noise_strength</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>湍流噪声强度。增加此值将导致更强烈、对比度更高的噪声图案。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-velocity-limit-curve"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-velocity-limit-curve" names="class_particleprocessmaterial_property_velocity_limit_curve"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>velocity_limit_curve</strong> <reference internal="True" refid="class-particleprocessmaterial-property-velocity-limit-curve"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_velocity_limit_curve</strong>(value: <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>get_velocity_limit_curve</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>定义粒子在其生命周期内的最大速度的 <reference internal="True" refuri="class_curvetexture#class-curvetexture"><inline classes="std std-ref">CurveTexture</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-property-velocity-pivot"></target>
            <paragraph classes="classref-property" ids="class-particleprocessmaterial-property-velocity-pivot" names="class_particleprocessmaterial_property_velocity_pivot"><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> <strong>velocity_pivot</strong> = <literal>Vector3(0, 0, 0)</literal> <reference internal="True" refid="class-particleprocessmaterial-property-velocity-pivot"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <bullet_list bullet="-" classes="classref-property-setget">
                <list_item>
                    <paragraph><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_velocity_pivot</strong>(value: <reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference>)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> <strong>get_velocity_pivot</strong>()</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>用于计算粒子的径向速度和轨道速度的轴心点。</paragraph>
        </section>
        <transition classes="classref-section-separator"></transition>
        <section classes="classref-descriptions-group" ids="id6" names="方法说明">
            <title>方法说明</title>
            <target refid="class-particleprocessmaterial-method-get-param"></target>
            <paragraph classes="classref-method" ids="class-particleprocessmaterial-method-get-param" names="class_particleprocessmaterial_method_get_param"><reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference> <strong>get_param</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-particleprocessmaterial-method-get-param"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>以向量的形式返回给定 <literal>param</literal> 的最大最小值。</paragraph>
            <paragraph>返回向量的 <literal>x</literal> 分量对应最小值，<literal>y</literal> 分量对应最大值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-method-get-param-max"></target>
            <paragraph classes="classref-method" ids="class-particleprocessmaterial-method-get-param-max" names="class_particleprocessmaterial_method_get_param_max"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_max</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-particleprocessmaterial-method-get-param-max"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回给定参数的最大值范围。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-method-get-param-min"></target>
            <paragraph classes="classref-method" ids="class-particleprocessmaterial-method-get-param-min" names="class_particleprocessmaterial_method_get_param_min"><reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference> <strong>get_param_min</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-particleprocessmaterial-method-get-param-min"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回给定参数的最小值范围。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-method-get-param-texture"></target>
            <paragraph classes="classref-method" ids="class-particleprocessmaterial-method-get-param-texture" names="class_particleprocessmaterial_method_get_param_texture"><reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference> <strong>get_param_texture</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-particleprocessmaterial-method-get-param-texture"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>返回指定参数所使用的 <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-method-get-particle-flag"></target>
            <paragraph classes="classref-method" ids="class-particleprocessmaterial-method-get-particle-flag" names="class_particleprocessmaterial_method_get_particle_flag"><reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference> <strong>get_particle_flag</strong>(particle_flag: <reference internal="True" refid="enum-particleprocessmaterial-particleflags"><inline classes="std std-ref">ParticleFlags</inline></reference>) <abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation> <reference internal="True" refid="class-particleprocessmaterial-method-get-particle-flag"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果启用了指定的粒子标志，则返回 <literal>true</literal>。可选项见 <reference internal="True" refid="enum-particleprocessmaterial-particleflags"><inline classes="std std-ref">ParticleFlags</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-method-set-param"></target>
            <paragraph classes="classref-method" ids="class-particleprocessmaterial-method-set-param" names="class_particleprocessmaterial_method_set_param"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>) <reference internal="True" refid="class-particleprocessmaterial-method-set-param"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>以向量的形式设置给定 <literal>param</literal> 的最大最小值。</paragraph>
            <paragraph>参数向量的 <literal>x</literal> 分量对应最小值，<literal>y</literal> 分量对应最大值。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-method-set-param-max"></target>
            <paragraph classes="classref-method" ids="class-particleprocessmaterial-method-set-param-max" names="class_particleprocessmaterial_method_set_param_max"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_max</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <reference internal="True" refid="class-particleprocessmaterial-method-set-param-max"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置给定参数的最大值范围。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-method-set-param-min"></target>
            <paragraph classes="classref-method" ids="class-particleprocessmaterial-method-set-param-min" names="class_particleprocessmaterial_method_set_param_min"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_min</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, value: <reference internal="True" refuri="class_float#class-float"><inline classes="std std-ref">float</inline></reference>) <reference internal="True" refid="class-particleprocessmaterial-method-set-param-min"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>设置给定参数的最小值范围。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-method-set-param-texture"></target>
            <paragraph classes="classref-method" ids="class-particleprocessmaterial-method-set-param-texture" names="class_particleprocessmaterial_method_set_param_texture"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_param_texture</strong>(param: <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference>, texture: <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference>) <reference internal="True" refid="class-particleprocessmaterial-method-set-param-texture"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>为指定的 <reference internal="True" refid="enum-particleprocessmaterial-parameter"><inline classes="std std-ref">Parameter</inline></reference> 设置 <reference internal="True" refuri="class_texture2d#class-texture2d"><inline classes="std std-ref">Texture2D</inline></reference>。</paragraph>
            <transition classes="classref-item-separator"></transition>
            <target refid="class-particleprocessmaterial-method-set-particle-flag"></target>
            <paragraph classes="classref-method" ids="class-particleprocessmaterial-method-set-particle-flag" names="class_particleprocessmaterial_method_set_particle_flag"><abbreviation explanation="无返回值。">void</abbreviation> <strong>set_particle_flag</strong>(particle_flag: <reference internal="True" refid="enum-particleprocessmaterial-particleflags"><inline classes="std std-ref">ParticleFlags</inline></reference>, enable: <reference internal="True" refuri="class_bool#class-bool"><inline classes="std std-ref">bool</inline></reference>) <reference internal="True" refid="class-particleprocessmaterial-method-set-particle-flag"><inline classes="std std-ref">🔗</inline></reference></paragraph>
            <paragraph>如果为 <literal>true</literal>，则启用指定的粒子标志。选项见 <reference internal="True" refid="enum-particleprocessmaterial-particleflags"><inline classes="std std-ref">ParticleFlags</inline></reference>。</paragraph>
            <substitution_definition names="virtual"><abbreviation explanation="本方法通常需要用户覆盖才能生效。">virtual</abbreviation></substitution_definition>
            <substitution_definition names="const"><abbreviation explanation="本方法无副作用，不会修改该实例的任何成员变量。">const</abbreviation></substitution_definition>
            <substitution_definition names="vararg"><abbreviation explanation="本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。">vararg</abbreviation></substitution_definition>
            <substitution_definition names="constructor"><abbreviation explanation="本方法用于构造某个类型。">constructor</abbreviation></substitution_definition>
            <substitution_definition names="static"><abbreviation explanation="调用本方法无需实例，可直接使用类名进行调用。">static</abbreviation></substitution_definition>
            <substitution_definition names="operator"><abbreviation explanation="本方法描述的是使用本类型作为左操作数的有效运算符。">operator</abbreviation></substitution_definition>
            <substitution_definition names="bitfield"><abbreviation explanation="这个值是由下列位标志构成位掩码的整数。">BitField</abbreviation></substitution_definition>
            <substitution_definition names="void"><abbreviation explanation="无返回值。">void</abbreviation></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="Translation status" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

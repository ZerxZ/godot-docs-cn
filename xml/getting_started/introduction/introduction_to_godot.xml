<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/getting_started/introduction/introduction_to_godot.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <target refid="doc-introduction-to-godot"></target>
    <section ids="introduction-to-godot doc-introduction-to-godot" names="introduction\ to\ godot godot\ 简介 doc_introduction_to_godot">
        <title>Godot 简介</title>
        <paragraph>本文可帮助你了解 Godot 是否适合你。我们将介绍该引擎的一些广泛的功能，让你感受到它能实现什么，并回答“入门需要知道什么？”等问题。</paragraph>
        <paragraph>这绝不是一个详尽的概述。我们将在这个入门系列中介绍更多的功能。</paragraph>
        <section ids="what-is-godot" names="what\ is\ godot? godot\ 是什么？">
            <title>Godot 是什么？</title>
            <paragraph>Godot 是一个通用的 2D 和 3D 游戏引擎，旨在支持各种项目。你可以用它来创建游戏或应用程序，然后在桌面、手机以及 Web 平台上发布。</paragraph>
            <paragraph>你也可以用它来创建主机平台的游戏，尽管你需要很强的编程技能，或者需要一个开发者为你移植游戏。</paragraph>
            <note>
                <paragraph>由于游戏主机制造商施加的许可条款，Godot 团队无法提供开源的主机导出项。但是无论使用哪种引擎，在主机上发布游戏始终是一项繁重的工作。更多相关内容：<reference internal="True" refuri="../../tutorials/platform/consoles#doc-consoles"><inline classes="std std-ref">Godot 的游戏主机支持</inline></reference>。</paragraph>
            </note>
        </section>
        <section ids="what-can-the-engine-do" names="what\ can\ the\ engine\ do? 这个引擎能干什么？">
            <title>这个引擎能干什么？</title>
            <paragraph>Godot 最初是由一家阿根廷游戏工作室内部开发的。开发始于 2001 年，2014 年开源发布后经过了重写和大量的改进。</paragraph>
            <paragraph>使用 Godot 创建的游戏的一些例子包括《Ex-Zodiac》和《Helms of Fury》。</paragraph>
            <image candidates="{'*': 'getting_started/introduction/img/introduction_ex_zodiac.png'}" uri="getting_started/introduction/img/introduction_ex_zodiac.png"></image>
            <image candidates="{'*': 'getting_started/introduction/img/introduction_helms_of_fury.jpg'}" uri="getting_started/introduction/img/introduction_helms_of_fury.jpg"></image>
            <paragraph>应用程序方面，开源的像素艺术绘画程序 Pixelorama 是由 Godot 驱动的，体素 RPG 制作器 RPG in a box 也是如此。</paragraph>
            <image candidates="{'*': 'getting_started/introduction/img/introduction_rpg_in_a_box.png'}" uri="getting_started/introduction/img/introduction_rpg_in_a_box.png"></image>
            <paragraph>你可以在<reference name="官方展示视频" refuri="https://www.youtube.com/playlist?list=PLeG_dAglpVo6EpaO9A1nkwJZOwrfiLdQ8">官方展示视频</reference>中找到更多示例。</paragraph>
        </section>
        <section ids="how-does-it-work-and-look" names="how\ does\ it\ work\ and\ look? 它的工作原理是怎样的，看起来又是怎样的？">
            <title>它的工作原理是怎样的，看起来又是怎样的？</title>
            <paragraph>Godot 配备了成熟的游戏编辑器，其集成工具可以满足最常见的需求。它包括代码编辑器、动画编辑器、图块地图编辑器、着色器编辑器、调试器、性能分析器等等。</paragraph>
            <image candidates="{'*': 'getting_started/introduction/img/introduction_editor.webp'}" uri="getting_started/introduction/img/introduction_editor.webp"></image>
            <paragraph>开发团队致力于提供功能丰富的游戏编辑器，并提供一致的用户体验。虽然总是有改进的余地，但用户界面不断得到完善。</paragraph>
            <paragraph>当然，如果你愿意，你可以用外部程序工作。我们官方支持导入在 <reference name="Blender" refuri="https://www.blender.org/">Blender</reference> 中设计的3D场景，并维护在 <reference name="VSCode" refuri="https://github.com/godotengine/godot-vscode-plugin">VSCode</reference> 和 <reference name="Emacs" refuri="https://github.com/godotengine/emacs-gdscript-mode">Emacs</reference> 中编写 GDScript 和 C# 的插件。我们还支持 Windows 上的 Visual Studio for C#。</paragraph>
            <image candidates="{'*': 'getting_started/introduction/img/introduction_vscode.png'}" uri="getting_started/introduction/img/introduction_vscode.png"></image>
        </section>
        <section ids="programming-languages" names="programming\ languages 编程语言">
            <title>编程语言</title>
            <paragraph>我们来看看现有的编程语言。</paragraph>
            <paragraph>你可以使用 <reference internal="True" refuri="../../tutorials/scripting/gdscript/index#toc-learn-scripting-gdscript"><inline classes="std std-ref">GDScript</inline></reference> 编写游戏，它是一门专属于 Godot、紧密集成、语法轻量的语言，也可以使用 <reference internal="True" refuri="../../tutorials/scripting/c_sharp/index#toc-learn-scripting-c"><inline classes="std std-ref">C#</inline></reference>，在游戏工业中很流行。这两者是我们支持的主要脚本语言。</paragraph>
            <paragraph>通过 GDExtension 技术，你也可以用 C 或 C++ 编写游戏玩法相关或高性能算法，而无需重新编译引擎。你可以使用这项技术在引擎中集成第三方库和其他软件开发工具包（SDK）。</paragraph>
            <paragraph>当然，你也可以直接向引擎添加模块和功能，因为它是完全自由且开源的。</paragraph>
            <comment xml:space="preserve">doc_learning_programming</comment>
        </section>
        <section ids="what-do-i-need-to-know-to-use-godot" names="what\ do\ i\ need\ to\ know\ to\ use\ godot? 使用\ godot\ 我需要知道什么？">
            <title>使用 Godot 我需要知道什么？</title>
            <paragraph>Godot 是一个功能丰富的游戏引擎。它有成千上万的功能，有很多东西需要学习。为了充分利用它，你需要良好的编程基础。虽然我们试图让引擎变得简单易懂，但如果你首先知道如何像程序员一样思考，你会受益匪浅的。</paragraph>
            <paragraph>Godot 依赖面向对象编程规范。熟悉类、对象之类的概念可以更有效率地去写代码。</paragraph>
            <paragraph>如果你是一个编程新手，我们建议你去观看哈佛大学提供的 <reference name="CS50 open courseware" refuri="https://cs50.harvard.edu/x">CS50 open courseware</reference>。这是一个很好的免费课程。它能教你所有你在使用 Godot 前需要知道的知识。在之后学习任何游戏引擎时，他会帮你节省非常多的时间并跨过非常多的障碍。</paragraph>
            <note>
                <paragraph>在 CS50 中，你会学习很多编程语言。不要感到害怕：编程语言之间有很多的相似之处。你在学习一个语言时学到的技巧能够很容易地转移到其他语言上。</paragraph>
            </note>
            <paragraph>在 <reference internal="True" refuri="learning_new_features#doc-learning-new-features"><inline classes="std std-ref">学习新特性</inline></reference> 中，我们会提供更多具体为 Godot 学习的资源。</paragraph>
            <paragraph>在下一部分中，你将大致了解引擎的基本概念。</paragraph>
            <target ids="blender" names="blender" refuri="https://www.blender.org/"></target>
            <target ids="vscode" names="vscode" refuri="https://github.com/godotengine/godot-vscode-plugin"></target>
            <target ids="emacs" names="emacs" refuri="https://github.com/godotengine/emacs-gdscript-mode"></target>
            <target ids="official-showcase-videos" names="official\ showcase\ videos" refuri="https://www.youtube.com/playlist?list=PLeG_dAglpVo6EpaO9A1nkwJZOwrfiLdQ8"></target>
            <target ids="cs50-open-courseware" names="cs50\ open\ courseware" refuri="https://cs50.harvard.edu/x"></target>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="翻译状态" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

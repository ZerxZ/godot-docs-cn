<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/getting_started/first_3d_game/02.player_input.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <target refid="doc-first-3d-game-player-scene-and-input"></target>
    <section ids="player-scene-and-input-actions doc-first-3d-game-player-scene-and-input" names="player\ scene\ and\ input\ actions player\ 场景与输入事件 doc_first_3d_game_player_scene_and_input">
        <title>Player 场景与输入事件</title>
        <paragraph>在接下来的两节课程中，我们将会设计玩家场景、注册自定义输入动作、编写玩家移动代码。在最后，你将会得到一个可以八方向移动的可游玩角色。</paragraph>
        <comment xml:space="preserve">TODO: add player animated gif?</comment>
        <comment xml:space="preserve">player_movement.gif</comment>
        <paragraph>在左上角的<emphasis>场景</emphasis>菜单中单击<emphasis>新建场景</emphasis>来创建一个新场景。</paragraph>
        <paragraph><image alt="image0" candidates="{'*': 'getting_started/first_3d_game/img/02.player_input/01.new_scene.png'}" uri="getting_started/first_3d_game/img/02.player_input/01.new_scene.png"></image></paragraph>
        <block_quote>
            <paragraph>创建一个 <reference internal="True" refuri="../../classes/class_characterbody3d#class-characterbody3d"><inline classes="std std-ref">CharacterBody3D</inline></reference> 节点来当根节点</paragraph>
        </block_quote>
        <image candidates="{'*': 'getting_started/first_3d_game/img/02.player_input/add_character_body3D.webp'}" uri="getting_started/first_3d_game/img/02.player_input/add_character_body3D.webp"></image>
        <paragraph>将 <reference internal="True" refuri="../../classes/class_characterbody3d#class-characterbody3d"><inline classes="std std-ref">CharacterBody3D</inline></reference> 命名为``Player``。角色身体（Character body）对应的是 2D 游戏教程中的区域（Area）和刚体（Rigid Body）。与刚体类似，它可以移动并与环境发生碰撞，但它的运动并不是由物理引擎控制的，而是由*你*支配。当我们编写跳跃和踩踏机制时，你就会看到我们是如何使用这一该节点独有的特性的。</paragraph>
        <seealso>
            <paragraph>要学习更多关于不同物理节点类型的内容，请参阅 <reference internal="True" refuri="../../tutorials/physics/physics_introduction#doc-physics-introduction"><inline classes="std std-ref">物理介绍</inline></reference>。</paragraph>
        </seealso>
        <paragraph>现在，我们将为角色的 3D 模型创建一个基本的装备。稍后我们将在播放动画时通过代码旋转模型。</paragraph>
        <paragraph>新建一个 <reference internal="True" refuri="../../classes/class_node3d#class-node3d"><inline classes="std std-ref">Node3D</inline></reference> 节点作为 <literal>Player</literal> 的子节点，并将其命名为 <literal>Pivot</literal></paragraph>
        <image candidates="{'*': 'getting_started/first_3d_game/img/02.player_input/adding_node3D.webp'}" uri="getting_started/first_3d_game/img/02.player_input/adding_node3D.webp"></image>
        <paragraph>然后在文件系统面板中，双击展开 <literal>art/</literal> 文件夹，将 <literal>player.glb</literal> 拖放到 <literal>Pivot</literal> 节点上。</paragraph>
        <paragraph><image alt="image1" candidates="{'*': 'getting_started/first_3d_game/img/02.player_input/02.instantiating_the_model.webp'}" uri="getting_started/first_3d_game/img/02.player_input/02.instantiating_the_model.webp"></image></paragraph>
        <paragraph>这样应该就会把这个模型实例化为 <literal>Pivot</literal> 的子项。你可以将其重命名为 <literal>Character</literal> 。</paragraph>
        <paragraph><image alt="image2" candidates="{'*': 'getting_started/first_3d_game/img/02.player_input/03.scene_structure.png'}" uri="getting_started/first_3d_game/img/02.player_input/03.scene_structure.png"></image></paragraph>
        <note>
            <paragraph><literal>.glb</literal> 文件包含基于开源的 GLTF 2.0 规范的 3D 场景数据。它是一种现代的、强大的并替代 FBX 等专有格式的文件，Godot 也支持这种格式。为了制作这些文件，我们在 <reference name="Blender 3D" refuri="https://www.blender.org/">Blender 3D</reference> 中设计了模型，并将其导出为 GLTF。</paragraph>
        </note>
        <paragraph>与所有类型的物理节点一样，我们的角色需要一个碰撞形状才能与环境相碰撞。再次选中 <literal>Player</literal> 节点并添加 <reference internal="True" refuri="../../classes/class_collisionshape3d#class-collisionshape3d"><inline classes="std std-ref">CollisionShape3D</inline></reference> 子节点。在<emphasis>检查器</emphasis>中，为 <emphasis>Shape</emphasis> 属性新建一个 <reference internal="True" refuri="../../classes/class_sphereshape3d#class-sphereshape3d"><inline classes="std std-ref">SphereShape3D</inline></reference>。</paragraph>
        <image candidates="{'*': 'getting_started/first_3d_game/img/02.player_input/add_capsuleshape3d.webp'}" uri="getting_started/first_3d_game/img/02.player_input/add_capsuleshape3d.webp"></image>
        <paragraph>球体的线框出现在角色的下面。</paragraph>
        <paragraph><image alt="image3" candidates="{'*': 'getting_started/first_3d_game/img/02.player_input/04.sphere_shape.png'}" uri="getting_started/first_3d_game/img/02.player_input/04.sphere_shape.png"></image></paragraph>
        <paragraph>它将是物理引擎用来与环境碰撞的形状，因此我们希望它更适合 3D 模型。通过拖动视口中的橙色点将其缩小一点。我的球体半径约为 <literal>0.8</literal> 米。</paragraph>
        <paragraph>然后，向上移动形状，使其底部与网格平面大致对齐。</paragraph>
        <paragraph><image alt="image4" candidates="{'*': 'getting_started/first_3d_game/img/02.player_input/05.moving_the_sphere_up.png'}" uri="getting_started/first_3d_game/img/02.player_input/05.moving_the_sphere_up.png"></image></paragraph>
        <paragraph>你可以通过单击 <literal>Character</literal> 或 <literal>Pivot</literal> 节点旁边的眼睛图标来切换模型的可见性。</paragraph>
        <paragraph><image alt="image5" candidates="{'*': 'getting_started/first_3d_game/img/02.player_input/06.toggling_visibility.webp'}" uri="getting_started/first_3d_game/img/02.player_input/06.toggling_visibility.webp"></image></paragraph>
        <paragraph>将场景保存为 <literal>player.tscn</literal></paragraph>
        <paragraph>节点准备就绪后，我们开始编写程序。但首先，我们需要定义一些输入动作。</paragraph>
        <section ids="creating-input-actions" names="creating\ input\ actions 创建输入动作">
            <title>创建输入动作</title>
            <paragraph>要移动角色，我们就要监听玩家的输入，比如按下方向键。在 Godot 中，我们能够使用代码来绑定按键，但还有一个非常强大的系统，可以让你为一系列按键和按钮设置标签。这样可以简化我们的脚本，让它们更易读。</paragraph>
            <paragraph>这个系统是“按键映射”。可以在<emphasis>项目</emphasis>菜单中选择<emphasis>项目设置</emphasis>来打开编辑器。</paragraph>
            <paragraph><image alt="image6" candidates="{'*': 'getting_started/first_3d_game/img/02.player_input/07.project_settings.png'}" uri="getting_started/first_3d_game/img/02.player_input/07.project_settings.png"></image></paragraph>
            <paragraph>顶部有许多标签。点击<emphasis>按键映射</emphasis>。你可以在这个窗口顶部添加新的动作；即标签。下半部分可以为这些动作绑定按键。</paragraph>
            <paragraph><image alt="image7" candidates="{'*': 'getting_started/first_3d_game/img/02.player_input/07.input_map_tab.png'}" uri="getting_started/first_3d_game/img/02.player_input/07.input_map_tab.png"></image></paragraph>
            <paragraph>Godot 项目针对用户界面设计提供了一些预定义的动作，我们这里可以直接使用。不过为了支持手柄，我们还是自己来定义。</paragraph>
            <paragraph>我们要把这些动作命名为 <literal>move_left</literal>、<literal>move_right</literal>、<literal>move_forward</literal>、<literal>move_back</literal>、<literal>jump</literal>（向左移动、向右移动、向前移动、向后移动、跳跃）。</paragraph>
            <paragraph>要添加动作，可以在顶部的框中输入名称然后按回车键。</paragraph>
            <paragraph><image alt="image8" candidates="{'*': 'getting_started/first_3d_game/img/02.player_input/07.adding_action.png'}" uri="getting_started/first_3d_game/img/02.player_input/07.adding_action.png"></image></paragraph>
            <paragraph>创建以下五个动作：</paragraph>
            <paragraph><image alt="image9" candidates="{'*': 'getting_started/first_3d_game/img/02.player_input/08.actions_list_empty.png'}" uri="getting_started/first_3d_game/img/02.player_input/08.actions_list_empty.png"></image></paragraph>
            <paragraph>要为动作绑定按键或按钮，请点击右侧的“+”按钮。对 <literal>move_left</literal> 执行此操作，按下左方向键，然后单击<emphasis>确定</emphasis>。</paragraph>
            <image candidates="{'*': 'getting_started/first_3d_game/img/02.player_input/left_inputmap.webp'}" uri="getting_started/first_3d_game/img/02.player_input/left_inputmap.webp"></image>
            <paragraph>将 <literal classes="kbd">A</literal> 键也绑定在动作 <literal>move_left</literal> 上面。</paragraph>
            <paragraph><image alt="image12" candidates="{'*': 'getting_started/first_3d_game/img/02.player_input/09.keyboard_keys.png'}" uri="getting_started/first_3d_game/img/02.player_input/09.keyboard_keys.png"></image></paragraph>
            <paragraph>现在让我们为手柄左摇杆添加支持。再次点击“+”按钮，但是这一次选择<emphasis>手动选择 -&gt; 摇杆轴</emphasis>。</paragraph>
            <image candidates="{'*': 'getting_started/first_3d_game/img/02.player_input/joystick_axis_input.webp'}" uri="getting_started/first_3d_game/img/02.player_input/joystick_axis_input.webp"></image>
            <paragraph>选择左边遥感的负 X 轴。</paragraph>
            <image candidates="{'*': 'getting_started/first_3d_game/img/02.player_input/left_joystick_select.webp'}" uri="getting_started/first_3d_game/img/02.player_input/left_joystick_select.webp"></image>
            <paragraph>将其它值保持为默认，然后点击 <emphasis>确定</emphasis></paragraph>
            <note>
                <paragraph>如果你想让多个手柄有不同的输入动作，你需要在额外选项中使用设备选项。设备 0 对应的是第一个插入的手柄，设备 1 对应的是第二个插入的手柄，以此类推。</paragraph>
            </note>
            <paragraph>为其他输入动作也执行同样的操作。比如将右方向键、D、左摇杆的正轴绑定给 <literal>move_right</literal>。全部绑定完后，你的界面应该类似这样。</paragraph>
            <paragraph><image alt="image15" candidates="{'*': 'getting_started/first_3d_game/img/02.player_input/12.move_inputs_mapped.webp'}" uri="getting_started/first_3d_game/img/02.player_input/12.move_inputs_mapped.webp"></image></paragraph>
            <paragraph>最后一个动作是设置 <literal>jump</literal> 动作。绑定空格键和手柄的 A 键。</paragraph>
            <paragraph><image alt="image16" candidates="{'*': 'getting_started/first_3d_game/img/02.player_input/13.joy_button_option.webp'}" uri="getting_started/first_3d_game/img/02.player_input/13.joy_button_option.webp"></image></paragraph>
            <paragraph>你的跳跃输入动作应该看上去类似这样。</paragraph>
            <paragraph><image alt="image18" candidates="{'*': 'getting_started/first_3d_game/img/02.player_input/14.jump_input_action.webp'}" uri="getting_started/first_3d_game/img/02.player_input/14.jump_input_action.webp"></image></paragraph>
            <paragraph>这些就是这个游戏所需的所有动作了。你可以使用这个菜单来对项目中的任意按键和按钮组进行标记。</paragraph>
            <paragraph>在下一部分，我们将为玩家的移动进行编程和测试。</paragraph>
            <substitution_definition names="image0"><image alt="image0" candidates="{'*': 'getting_started/first_3d_game/img/02.player_input/01.new_scene.png'}" uri="getting_started/first_3d_game/img/02.player_input/01.new_scene.png"></image></substitution_definition>
            <substitution_definition names="image1"><image alt="image1" candidates="{'*': 'getting_started/first_3d_game/img/02.player_input/02.instantiating_the_model.webp'}" uri="getting_started/first_3d_game/img/02.player_input/02.instantiating_the_model.webp"></image></substitution_definition>
            <substitution_definition names="image2"><image alt="image2" candidates="{'*': 'getting_started/first_3d_game/img/02.player_input/03.scene_structure.png'}" uri="getting_started/first_3d_game/img/02.player_input/03.scene_structure.png"></image></substitution_definition>
            <substitution_definition names="image3"><image alt="image3" candidates="{'*': 'getting_started/first_3d_game/img/02.player_input/04.sphere_shape.png'}" uri="getting_started/first_3d_game/img/02.player_input/04.sphere_shape.png"></image></substitution_definition>
            <substitution_definition names="image4"><image alt="image4" candidates="{'*': 'getting_started/first_3d_game/img/02.player_input/05.moving_the_sphere_up.png'}" uri="getting_started/first_3d_game/img/02.player_input/05.moving_the_sphere_up.png"></image></substitution_definition>
            <substitution_definition names="image5"><image alt="image5" candidates="{'*': 'getting_started/first_3d_game/img/02.player_input/06.toggling_visibility.webp'}" uri="getting_started/first_3d_game/img/02.player_input/06.toggling_visibility.webp"></image></substitution_definition>
            <substitution_definition names="image6"><image alt="image6" candidates="{'*': 'getting_started/first_3d_game/img/02.player_input/07.project_settings.png'}" uri="getting_started/first_3d_game/img/02.player_input/07.project_settings.png"></image></substitution_definition>
            <substitution_definition names="image7"><image alt="image7" candidates="{'*': 'getting_started/first_3d_game/img/02.player_input/07.input_map_tab.png'}" uri="getting_started/first_3d_game/img/02.player_input/07.input_map_tab.png"></image></substitution_definition>
            <substitution_definition names="image8"><image alt="image8" candidates="{'*': 'getting_started/first_3d_game/img/02.player_input/07.adding_action.png'}" uri="getting_started/first_3d_game/img/02.player_input/07.adding_action.png"></image></substitution_definition>
            <substitution_definition names="image9"><image alt="image9" candidates="{'*': 'getting_started/first_3d_game/img/02.player_input/08.actions_list_empty.png'}" uri="getting_started/first_3d_game/img/02.player_input/08.actions_list_empty.png"></image></substitution_definition>
            <substitution_definition names="image11"><image alt="image11" candidates="{'*': 'getting_started/first_3d_game/img/02.player_input/09.keyboard_key_popup.png'}" uri="getting_started/first_3d_game/img/02.player_input/09.keyboard_key_popup.png"></image></substitution_definition>
            <substitution_definition names="image12"><image alt="image12" candidates="{'*': 'getting_started/first_3d_game/img/02.player_input/09.keyboard_keys.png'}" uri="getting_started/first_3d_game/img/02.player_input/09.keyboard_keys.png"></image></substitution_definition>
            <substitution_definition names="image15"><image alt="image15" candidates="{'*': 'getting_started/first_3d_game/img/02.player_input/12.move_inputs_mapped.webp'}" uri="getting_started/first_3d_game/img/02.player_input/12.move_inputs_mapped.webp"></image></substitution_definition>
            <substitution_definition names="image16"><image alt="image16" candidates="{'*': 'getting_started/first_3d_game/img/02.player_input/13.joy_button_option.webp'}" uri="getting_started/first_3d_game/img/02.player_input/13.joy_button_option.webp"></image></substitution_definition>
            <substitution_definition names="image17"><image alt="image17" candidates="{'*': 'getting_started/first_3d_game/img/02.player_input/14.add_jump_button.png'}" uri="getting_started/first_3d_game/img/02.player_input/14.add_jump_button.png"></image></substitution_definition>
            <substitution_definition names="image18"><image alt="image18" candidates="{'*': 'getting_started/first_3d_game/img/02.player_input/14.jump_input_action.webp'}" uri="getting_started/first_3d_game/img/02.player_input/14.jump_input_action.webp"></image></substitution_definition>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="翻译状态" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

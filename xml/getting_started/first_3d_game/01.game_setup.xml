<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/getting_started/first_3d_game/01.game_setup.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <target refid="doc-first-3d-game-game-area"></target>
    <section ids="setting-up-the-game-area doc-first-3d-game-game-area" names="setting\ up\ the\ game\ area 设置游戏区域 doc_first_3d_game_game_area">
        <title>设置游戏区域</title>
        <paragraph>在第一部分中，我们将设置游戏区域。让我们从导入初始资产、设置游戏场景入手。</paragraph>
        <paragraph>我们为这个教程准备了一个带有 3D 模型和音效的 Godot 项目，链接在索引页。如果你还没有下载，可以下载这个压缩包：<reference name="Squash the Creeps 资产" refuri="https://github.com/godotengine/godot-3d-dodge-the-creeps/releases/tag/1.1.0">Squash the Creeps 资产</reference>。</paragraph>
        <paragraph>下载完成之后，请将 .zip 压缩包解压到你的电脑上。打开 Godot 项目管理器，然后点击<emphasis>导入</emphasis>按钮。</paragraph>
        <image candidates="{'*': 'getting_started/first_3d_game/img/01.game_setup/01.import_button.webp'}" uri="getting_started/first_3d_game/img/01.game_setup/01.import_button.webp"></image>
        <paragraph>请在导入弹出框中输入刚才新建的目录 <literal>squash_the_creeps_start/</literal> 的完整路径。你也可以点击右侧的<emphasis>浏览</emphasis>按钮，打开文件浏览器并找到该文件夹所包含的 <literal>project.godot</literal> 文件。</paragraph>
        <image candidates="{'*': 'getting_started/first_3d_game/img/01.game_setup/02.browse_to_project_folder.webp'}" uri="getting_started/first_3d_game/img/01.game_setup/02.browse_to_project_folder.webp"></image>
        <paragraph>点击<emphasis>导入并编辑</emphasis>在编辑器中打开该项目。</paragraph>
        <image candidates="{'*': 'getting_started/first_3d_game/img/01.game_setup/03.import_and_edit.webp'}" uri="getting_started/first_3d_game/img/01.game_setup/03.import_and_edit.webp"></image>
        <paragraph>起始项目中包含一个图标和两个文件夹：<literal>art/</literal> 和 <literal>fonts/</literal>。你可以在里面找到游戏中我们会用到的艺术资产和音乐。</paragraph>
        <image candidates="{'*': 'getting_started/first_3d_game/img/01.game_setup/04.start_assets.png'}" uri="getting_started/first_3d_game/img/01.game_setup/04.start_assets.png"></image>
        <paragraph>里面有两个 3D 模型，<literal>player.glb</literal> 和 <literal>mob.glb</literal>，一些模型使用的材质，以及一首音乐。</paragraph>
        <section ids="setting-up-the-playable-area" names="setting\ up\ the\ playable\ area 设置游玩区域">
            <title>设置游玩区域</title>
            <paragraph>We're going to create our main scene with a plain <reference internal="True" refuri="../../classes/class_node#class-node"><inline classes="std std-ref">Node</inline></reference> as its root. In the
                <emphasis>Scene</emphasis> dock, click the <emphasis>Add Child Node</emphasis> button represented by a "+" icon in the
                top-left and double-click on <emphasis>Node</emphasis>. Name the node <literal>Main</literal>. An alternate method to rename the node is to right-click on <emphasis>Node</emphasis> and choose <emphasis>Rename</emphasis> (or <literal classes="kbd">F2</literal>). Alternatively, to add
                a node to the scene, you can press <literal classes="kbd">Ctrl + A</literal> (<literal classes="kbd">Cmd + A</literal> on macOS).</paragraph>
            <image candidates="{'*': 'getting_started/first_3d_game/img/01.game_setup/05.main_node.png'}" uri="getting_started/first_3d_game/img/01.game_setup/05.main_node.png"></image>
            <paragraph>Save the scene as <literal>main.tscn</literal> by pressing <literal classes="kbd">Ctrl + S</literal> (<literal classes="kbd">Cmd + S</literal> on macOS).</paragraph>
            <paragraph>我们先添加一个地板，以防止角色掉落。要创建地板、墙壁或天花板等静态碰撞器，可以使用 <reference internal="True" refuri="../../classes/class_staticbody3d#class-staticbody3d"><inline classes="std std-ref">StaticBody3D</inline></reference> 节点。它们需要 <reference internal="True" refuri="../../classes/class_collisionshape3d#class-collisionshape3d"><inline classes="std std-ref">CollisionShape3D</inline></reference> 子节点来定义碰撞区域。选择 <emphasis>Main</emphasis> 节点后，添加 <reference internal="True" refuri="../../classes/class_staticbody3d#class-staticbody3d"><inline classes="std std-ref">StaticBody3D</inline></reference> 节点，然后添加 <reference internal="True" refuri="../../classes/class_collisionshape3d#class-collisionshape3d"><inline classes="std std-ref">CollisionShape3D</inline></reference>。将 <reference internal="True" refuri="../../classes/class_staticbody3d#class-staticbody3d"><inline classes="std std-ref">StaticBody3D</inline></reference> 重命名为 <literal>Ground</literal> 。</paragraph>
            <image candidates="{'*': 'getting_started/first_3d_game/img/01.game_setup/adding_static_body3D.webp'}" uri="getting_started/first_3d_game/img/01.game_setup/adding_static_body3D.webp"></image>
            <paragraph>你的场景树应该看上去像这样</paragraph>
            <image candidates="{'*': 'getting_started/first_3d_game/img/01.game_setup/06.staticbody_node.png'}" uri="getting_started/first_3d_game/img/01.game_setup/06.staticbody_node.png"></image>
            <paragraph>在 <reference internal="True" refuri="../../classes/class_collisionshape3d#class-collisionshape3d"><inline classes="std std-ref">CollisionShape3D</inline></reference> 旁边会出现一个警告标志，因为我们还没有定义它的形状。如果你点击这个图标，就会弹出一个窗口，为你提供更多信息。</paragraph>
            <image candidates="{'*': 'getting_started/first_3d_game/img/01.game_setup/07.collision_shape_warning.png'}" uri="getting_started/first_3d_game/img/01.game_setup/07.collision_shape_warning.png"></image>
            <paragraph>要创建形状，请选中 <reference internal="True" refuri="../../classes/class_collisionshape3d#class-collisionshape3d"><inline classes="std std-ref">CollisionShape3D</inline></reference>，转到<emphasis>检查器</emphasis>，然后单击 <emphasis>Shape</emphasis>（形状）属性旁边的 <emphasis>&lt;空&gt;</emphasis> 字段。创建一个新的 <emphasis>BoxShape3D</emphasis>。</paragraph>
            <image candidates="{'*': 'getting_started/first_3d_game/img/01.game_setup/08.create_box_shape3D.jpg'}" uri="getting_started/first_3d_game/img/01.game_setup/08.create_box_shape3D.jpg"></image>
            <paragraph>盒子形状非常适合平坦的地面和墙壁。它的厚度使它能够可靠地阻挡甚至快速移动的物体。</paragraph>
            <paragraph>A box's wireframe appears in the viewport with three orange dots. You can click
                and drag these to edit the shape's extents interactively. We can also precisely
                set the size in the inspector. Click on the <reference internal="True" refuri="../../classes/class_boxshape3d#class-boxshape3d"><inline classes="std std-ref">BoxShape3D</inline></reference> to expand the resource.
                Set its <emphasis>Size</emphasis> to <literal>60</literal> on the X-axis, <literal>2</literal> for the Y-axis, and <literal>60</literal> for
                the Z-axis.</paragraph>
            <image candidates="{'*': 'getting_started/first_3d_game/img/01.game_setup/09.box_size.webp'}" uri="getting_started/first_3d_game/img/01.game_setup/09.box_size.webp"></image>
            <paragraph>碰撞形状是不可见的。我们需要添加一个与之配套的视觉层。选择 <literal>Ground</literal> 节点并添加一个 <reference internal="True" refuri="../../classes/class_meshinstance3d#class-meshinstance3d"><inline classes="std std-ref">MeshInstance3D</inline></reference> 作为其子节点。</paragraph>
            <image candidates="{'*': 'getting_started/first_3d_game/img/01.game_setup/10.mesh_instance3d.png'}" uri="getting_started/first_3d_game/img/01.game_setup/10.mesh_instance3d.png"></image>
            <paragraph>在<emphasis>检查器</emphasis>中，点击 <emphasis>Mesh</emphasis> 旁边的字段，创建一个 <reference internal="True" refuri="../../classes/class_boxmesh#class-boxmesh"><inline classes="std std-ref">BoxMesh</inline></reference> 资源，创建一个可见的立方体。</paragraph>
            <image candidates="{'*': 'getting_started/first_3d_game/img/01.game_setup/11.box_mesh.webp'}" uri="getting_started/first_3d_game/img/01.game_setup/11.box_mesh.webp"></image>
            <paragraph>再次设置大小，对于默认值来说它有点太小了。点击立方体图标展开资源，并将其 <emphasis>Size</emphasis> 设置为 <literal>60</literal>、<literal>2</literal>、<literal>60</literal>。由于立方体资源使用的是大小（size）而不是范围（extents），我们需要使用这些值，以便它与我们的碰撞形状相匹配。</paragraph>
            <image candidates="{'*': 'getting_started/first_3d_game/img/01.game_setup/12.cube_resized.png'}" uri="getting_started/first_3d_game/img/01.game_setup/12.cube_resized.png"></image>
            <paragraph>你应该会在视口中看到一个覆盖网格以及蓝色和红色轴的宽灰色平板。</paragraph>
            <paragraph>We're going to move the ground down so we can see the floor grid. To do this, the grid snapping feature can be used.
                Grid snapping can be activated 2 ways in the 3D editor.
                The first is by pressing the <emphasis>Use Snap</emphasis> button (or pressing the <literal classes="kbd">Y</literal> key).
                The second is by selecting a node, dragging a handle on the gizmo <strong>then</strong> holding <literal classes="kbd">Ctrl</literal> while still clicking to enable snapping as long as <literal classes="kbd">Ctrl</literal> is held.</paragraph>
            <image candidates="{'*': 'getting_started/first_3d_game/img/01.game_setup/use_snap.webp'}" uri="getting_started/first_3d_game/img/01.game_setup/use_snap.webp"></image>
            <paragraph>Start by setting snapping with your preferred method. Then move the <literal>Ground</literal> node using the Y-axis (the green arrow on the gizmo).</paragraph>
            <image candidates="{'*': 'getting_started/first_3d_game/img/01.game_setup/move_gizmo_y_axis.webp'}" uri="getting_started/first_3d_game/img/01.game_setup/move_gizmo_y_axis.webp"></image>
            <note>
                <paragraph>如果你没有看到如上图所示的 3D 对象操作器，请确保已激活视图上方工具栏中的<emphasis>选择模式</emphasis>。</paragraph>
            </note>
            <image candidates="{'*': 'getting_started/first_3d_game/img/01.game_setup/14.select_mode_icon.png'}" uri="getting_started/first_3d_game/img/01.game_setup/14.select_mode_icon.png"></image>
            <paragraph>为了有一个可见的编辑器栅格，可以将地面往下移动 <literal>1</literal> 米。视口左下角的标签会显示你将该节点平移了多远。</paragraph>
            <image candidates="{'*': 'getting_started/first_3d_game/img/01.game_setup/15.translation_amount.png'}" uri="getting_started/first_3d_game/img/01.game_setup/15.translation_amount.png"></image>
            <note>
                <paragraph>子节点会跟随 <emphasis>Ground</emphasis> 节点一起往下移动。请确保你移动的是 <emphasis>Ground</emphasis> 节点，而不是 <emphasis>MeshInstance3D</emphasis> 和 <emphasis>CollisionShape3D</emphasis>。</paragraph>
            </note>
            <paragraph>最终，<literal>Ground</literal> 的 transform.position.y 应当是 -1</paragraph>
            <image candidates="{'*': 'getting_started/first_3d_game/img/01.game_setup/ground_down1meter.webp'}" uri="getting_started/first_3d_game/img/01.game_setup/ground_down1meter.webp"></image>
            <paragraph>现在来添加一个平行光，从而让我们的整个场景不全都是灰色的。选择 <literal>Main</literal> 节点，然后添加一个子节点 <reference internal="True" refuri="../../classes/class_directionallight3d#class-directionallight3d"><inline classes="std std-ref">DirectionalLight3D</inline></reference>。</paragraph>
            <image candidates="{'*': 'getting_started/first_3d_game/img/01.game_setup/create_directional_light3d.webp'}" uri="getting_started/first_3d_game/img/01.game_setup/create_directional_light3d.webp"></image>
            <paragraph>We need to move and rotate the <reference internal="True" refuri="../../classes/class_directionallight3d#class-directionallight3d"><inline classes="std std-ref">DirectionalLight3D</inline></reference> node.
                Move it up by clicking and dragging on the manipulator's green arrow
                and click and drag on the red arc to rotate it around the X-axis, until the
                ground is lit.</paragraph>
            <paragraph>在<emphasis>检查器</emphasis>中，勾选复选框打开<emphasis>Shadow -&gt; Enabled</emphasis>。</paragraph>
            <image candidates="{'*': 'getting_started/first_3d_game/img/01.game_setup/16.turn_on_shadows.webp'}" uri="getting_started/first_3d_game/img/01.game_setup/16.turn_on_shadows.webp"></image>
            <paragraph>项目此时看起来是这个样子。</paragraph>
            <image candidates="{'*': 'getting_started/first_3d_game/img/01.game_setup/17.project_with_light.webp'}" uri="getting_started/first_3d_game/img/01.game_setup/17.project_with_light.webp"></image>
            <paragraph>这就是我们的起点了。在下一部分中，我们将处理玩家场景与基础移动。</paragraph>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="翻译状态" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

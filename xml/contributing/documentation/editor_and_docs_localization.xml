<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/contributing/documentation/editor_and_docs_localization.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <target refid="doc-editor-and-docs-localization"></target>
    <section ids="editor-and-documentation-localization doc-editor-and-docs-localization" names="editor\ and\ documentation\ localization 编辑器和文档的本地化 doc_editor_and_docs_localization">
        <title>编辑器和文档的本地化</title>
        <paragraph>Godot 的目标是将游戏开发提供给每一个人，包括那些可能不知道或不习惯英语的人。因此，多亏了社区的翻译工作，我们尽最大努力使最重要的资源以多种语言提供。</paragraph>
        <paragraph>这些资源包括：</paragraph>
        <enumerated_list enumtype="arabic" prefix="" suffix=".">
            <list_item>
                <paragraph><reference name="Godot 编辑器界面" refuri="https://hosted.weblate.org/projects/godot-engine/godot/">Godot 编辑器界面</reference>（约 15,000 个字）。</paragraph>
            </list_item>
            <list_item>
                <paragraph><reference name="在线文档" refuri="https://hosted.weblate.org/projects/godot-engine/godot-docs/">在线文档</reference>（编辑器手册和教程，约 30 万字）。</paragraph>
            </list_item>
            <list_item>
                <paragraph><reference name="类参考手册" refuri="https://hosted.weblate.org/projects/godot-engine/godot-class-reference/">类参考手册</reference>，可在线和编辑器中查看（约 200000 单词）。</paragraph>
            </list_item>
        </enumerated_list>
        <paragraph>为了管理翻译，我们使用 GNU gettext 文件格式（<literal>PO</literal> 文件）和基于 Web 的开源本地化平台的 <reference name="Weblate" refuri="https://weblate.org">Weblate</reference>，能够让贡献者们轻松协作，完成各种组件的翻译，并使其保持最新。单击上面粗体的链接访问 Weblate 上的每个资源。</paragraph>
        <paragraph>本页概述了 Weblate 上的一般翻译工作流程，以及一些特定于资源的说明，例如如何处理某些关键字或图像的本地化。</paragraph>
        <tip>
            <paragraph>翻译所有的官方 Godot 内容是一项艰巨的任务，因此我们建议优先考虑上面列出的资源：首先是编辑器界面，然后是在线文档，如果有足够的翻译人员跟上更新，最后是类参考。</paragraph>
        </tip>
        <section ids="using-weblate-for-translations" names="using\ weblate\ for\ translations 使用\ weblate\ 进行翻译">
            <title>使用 Weblate 进行翻译</title>
            <paragraph>虽然我们的翻译最终驻留在 Godot 引擎及其文档的 Git 仓库中，但所有翻译更新都是通过 Weblate 处理的，因此不接受对 Git 仓库的直接拉取请求。维护人员在 Weblate 和 Godot 仓库之间手动同步翻译。</paragraph>
            <paragraph>因此，你应该<reference name="在 Weblate 上注册" refuri="https://hosted.weblate.org/accounts/register/">在 Weblate 上注册</reference>，来为 Godot 的翻译贡献力量。</paragraph>
            <paragraph>登录后，浏览到你要参与的 Godot 资源（在本页中，我们将使用<reference name="编辑器翻译" refuri="https://hosted.weblate.org/projects/godot-engine/godot/">编辑器翻译</reference>为例）要查找所有语言的列表：</paragraph>
            <image candidates="{'*': 'contributing/documentation/img/l10n_01_language_list.png'}" uri="contributing/documentation/img/l10n_01_language_list.png"></image>
            <seealso>
                <paragraph>更多细节请随意查阅 Weblate 自己的<reference name="翻译工作流程文档" refuri="https://docs.weblate.org/en/latest/user/translating.html">翻译工作流程文档</reference>。</paragraph>
            </seealso>
            <section ids="adding-a-new-language" names="adding\ a\ new\ language 增加新的语言">
                <title>增加新的语言</title>
                <paragraph>如果你的语言已经列出，请单击其名称以访问概述，然后跳过本节的其余部分。</paragraph>
                <paragraph>如果你的语言未列出，请滚动到语言列表的底部，单击“开始新翻译”按钮，然后选择要翻译的语言：</paragraph>
                <image candidates="{'*': 'contributing/documentation/img/l10n_02_new_translation.png'}" uri="contributing/documentation/img/l10n_02_new_translation.png"></image>
                <important>
                    <paragraph>如果你的语言在多个国家使用，但地区差异有限，请考虑将其添加为通用变体（如 <literal>fr</literal> 表示法语）而不是区域变体（如 <literal>fr_FR</literal> 表示法语（法国）、<literal>fr_CA</literal> 表示法语（加拿大）、<literal>fr_DZ</literal> 表示法语（阿尔及利亚））。</paragraph>
                    <paragraph>Godot 有大量的内容需要翻译，因此只有在语言差异足够显著的情况下，才应该复制区域变体的工作。此外，如果对区域变体进行了翻译，则该翻译将仅对位于该区域的用户（或为该区域配置了系统语言）自动可用。</paragraph>
                    <paragraph>当地区差异大到需要单独翻译时，如果可能的话，我们建议先集中精力完成一个通用的变体，然后将完全完成的翻译复制到地区变体中，并进行相关的编辑。这通常是一个很好的策略，例如西班牙语（先完成 <literal>es</literal> ，然后必要时复制到 <literal>es_AR</literal>、<literal>es_ES</literal>、<literal>es_MX</literal> 等）或葡萄牙语（ <literal>pt_BR</literal> 与 <literal>pt_PT</literal> ）。</paragraph>
                </important>
            </section>
            <section ids="translation-interface" names="translation\ interface 翻译界面">
                <title>翻译界面</title>
                <paragraph>一旦选择了一种语言，你将看到翻译状态的概述，包括还有多少字符串需要翻译或审阅。每个项目都可以单击并用于浏览相应的列表。你还可以点击“翻译”按钮开始操作字符串列表。</paragraph>
                <image candidates="{'*': 'contributing/documentation/img/l10n_03_translation_overview.png'}" uri="contributing/documentation/img/l10n_03_translation_overview.png"></image>
                <paragraph>选择“翻译”列表后，你将看到所有工作发生的主要翻译界面：</paragraph>
                <image candidates="{'*': 'contributing/documentation/img/l10n_04_translation_interface.png'}" uri="contributing/documentation/img/l10n_04_translation_interface.png"></image>
                <paragraph>那个页面上包含有：</paragraph>
                <block_quote>
                    <bullet_list bullet="-">
                        <list_item>
                            <paragraph>一个工具栏，可以让你在当前列表的字符串中循环，切换到其他预定义的列表或进行自定义搜索等。还有一个提供简化界面的“禅”编辑模式。</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>在“翻译”面板中处理的实际字符串。默认情况下，应该有英语源字符串和你的语言的编辑框。如果你熟悉其他语言，可以将其添加到用户设置中，以提供更多翻译上下文。编辑完当前字符串后，按“保存”确认更改并移到下一个条目。或者使用“跳过”按钮跳过它。“需要编辑”复选框意味着原始字符串已更新，因此需要检查翻译以考虑这些更改（在 PO 术语中，这些是所谓的“模糊”字符串）。在修复之前，这些字符串不会在翻译中使用。</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>底部面板有各种工具可以帮助翻译工作，例如来自附近字符串的上下文（通常来自同一编辑器工具或文档页，因此它们可能使用类似的术语），来自其他翻译人员的注释、机器翻译以及该字符串的所有其他现有翻译的列表。</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>在右上角，术语表显示了先前添加了条目的术语，以及当前字符串中包含的术语。例如，如果你与其他翻译人员一起决定对 Godot 中的“node”术语使用特定的翻译，你可以将其添加到词汇表中，以确保其他翻译人员使用相同的约定。</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>右下面板包含有关源字符串的信息。最相关的项目是“源字符串位置”，它将你链接到 GitHub 上的原始字符串。你可能需要在页面中搜索字符串来定位它及其周围的上下文。</paragraph>
                        </list_item>
                    </bullet_list>
                </block_quote>
            </section>
        </section>
        <section ids="locating-original-content" names="locating\ original\ content 定位原始内容">
            <title>定位原始内容</title>
            <paragraph>PO 文件是源字符串（<literal>msgid</literal>）及其翻译（<literal>msgstr</literal>）的有序列表。默认情况下，Weblate 将按该顺序显示字符串。因此，了解 PO 文件中内容的组织方式非常有用，可以帮助你定位原始内容，并在翻译时将其用作参考。</paragraph>
            <important>
                <paragraph>翻译时以原文语境为参照是最原始的，因为许多词根据语境有几种可能的翻译。使用错误的翻译实际上会对用户造成伤害，并且会比使用英语更难理解。使用上下文也使翻译工作更容易和更愉快，因为你可以直接看到你写的翻译是否在上下文中有意义。</paragraph>
            </important>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>编辑器接口的翻译模板是通过按照<emphasis>字母顺序</emphasis>解析所有 C++ 源代码生成的，所以在给定文件中定义的所有字符串将被分组在一起。例如，如果“源字符串位置”指示 <literal>editor/code_editor.cpp</literal>，则当前字符串（以及附近的字符串）在 <literal>editor/code_editor.cpp</literal> 代码文件，因此与 Godot（GDScript、着色器）中的代码编辑器相关。</paragraph>
                </list_item>
                <list_item>
                    <paragraph>在线文档的翻译模板是按照<strong>目录</strong>中所示的相同顺序从源 RST 文件生成的，因此，举例而言，前几个字符串都来自文档的首页。所以推荐的工作流程是找到与要翻译的页面相对应的唯一字符串，然后翻译具有相同源字符串位置的所有字符串，同时与该页面的英文联机版本进行比较。源字符串位置的示例可以是 <literal>getting_started/step_by_step/nodes_and_scenes.rst</literal> 对于页面 <reference internal="True" refuri="../../getting_started/step_by_step/nodes_and_scenes#doc-nodes-and-scenes"><inline classes="std std-ref">节点与场景</inline></reference>。</paragraph>
                </list_item>
                <list_item>
                    <paragraph>类引用的翻译模板是按照<strong>字母顺序</strong>从源 XML 文件中生成的，这与联机版本的目录顺序相同。因此，你可以定位与给定类的简要描述相对应的源字符串，以找到要翻译的第一个字符串，并且该类中的所有其他描述都应位于 Weblate 上的后续字符串中。例如 <reference internal="True" refuri="../../classes/class_node2d#class-node2d"><inline classes="std std-ref">Node2D</inline></reference> 类的描述将具有源字符串位置 <literal>doc/classes/Node2D.xml</literal>。</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>定位特定页面和类的一个方便工具是使用 Weblate 的高级搜索功能，尤其是“位置字符串”查询（也可以通过 <literal>location:</literal> 标记使用，例如 <literal>location:nodes_and_scenes.rst</literal>）：</paragraph>
            <image candidates="{'*': 'contributing/documentation/img/l10n_05_search_location.png'}" uri="contributing/documentation/img/l10n_05_search_location.png"></image>
            <image candidates="{'*': 'contributing/documentation/img/l10n_06_browse_by_location.png'}" uri="contributing/documentation/img/l10n_06_browse_by_location.png"></image>
            <note>
                <paragraph>当一个给定的源字符串被用于多个源位置时，它们都将被串联成一个。例如，上面的 <literal>location:nodes_and_scenes.rst</literal> 查询将首先落在“Introduction”源字符串上，它被用于几十个页面，包括模板中 <literal>nodes_and_scenes.rst</literal> 之前的一些。然后点击下一步按钮，我们就会看到上面显示的场景和节点标题字符串。因此，可能会发生这样的情况：当阅读一个页面的在线版本时，某个段落或章节的标题不在你期望的位置。</paragraph>
            </note>
        </section>
        <section ids="respecting-the-markup-syntax" names="respecting\ the\ markup\ syntax 遵守标记语法">
            <title>遵守标记语法</title>
            <paragraph>每个翻译资源源于不同的源代码格式，对每个资源使用的标记语言有一些概念对于避免在翻译中产生语法错误非常重要。</paragraph>
            <section ids="editor-interface-c" names="editor\ interface\ (c++) 编辑器界面（c++）">
                <title>编辑器界面（C++）</title>
                <paragraph>编辑器的翻译源于 C++ 字符串，可能使用：</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph><strong>C 格式说明符</strong>，如 <literal>%s</literal>（字符串）或 <literal>%d</literal>（数字）。这些说明符在运行时会被替换为具体的内容，并且应该在必要时保留并放置在翻译中，以便在替换后有意义。你可能需要参考源字符串的位置，以了解如果句子中不清楚将替换什么类型的内容。示例（<literal>%s</literal> 将被替换为文件名或路径）：</paragraph>
                        <literal_block force="False" language="none" linenos="False" xml:space="preserve"># PO file:
"There is no '%s' file."

# Weblate:
There is no '%s' file.</literal_block>
                    </list_item>
                    <list_item>
                        <paragraph><strong>C 转义字符</strong>，如 <literal>\n</literal>（换行符）或 <literal>\t</literal>（制表符）。在 Weblate 编辑器中，<literal>\n</literal> 字符由 <literal>↵</literal> 替换，<literal>\t</literal> 由 <literal>↹</literal> 替换。制表符的使用并不多，但你应该确保使用与原始英文字符串相同的换行符（如果不使用，Weblate 将发出警告）。换行符有时可能用于垂直间距，或手动换行，否则会太长（特别是在编辑器翻译中）。例子：</paragraph>
                        <literal_block force="False" language="none" linenos="False" xml:space="preserve"># PO file:
"Scene '%s' is currently being edited.\n"
"Changes will only take effect when reloaded."

# Weblate:
Scene '%s' is currently being edited.↵
Changes will only take effect when reloaded.</literal_block>
                    </list_item>
                </bullet_list>
                <note>
                    <paragraph>只考虑字符的逻辑顺序，在从右到左的文本中，格式字符串会被显示为 <literal>s%</literal>。</paragraph>
                </note>
            </section>
            <section ids="online-documentation-rst" names="online\ documentation\ (rst) 在线文档（rst）">
                <title>在线文档（RST）</title>
                <paragraph>文档翻译源于 reStructuredText（RST）文件，这些文件还使用自己的标记语法来设置文本样式，创建内部和外部链接等。以下是一些示例：</paragraph>
                <literal_block force="False" language="none" linenos="False" xml:space="preserve"># "development" is styled bold.
# "Have a look here" is a link pointing to https://docs.godotengine.org/en/latest.
# You should translate "Have a look here", but not the URL, unless there is
# a matching URL for the same content in your language.
# Note: The `, &lt;, &gt;, and _ characters all have a meaning in the hyperlink
# syntax and should be preserved.

Looking for the documentation of the current **development** branch?
`Have a look here &lt;https://docs.godotengine.org/en/latest&gt;`_.

# "|supported|" is an inline reference to an image and should stay unchanged.
# "master" uses the markup for inline code, and will be styled as such.
# Note: Inline code in RST uses 2 backticks on each side, unlike Markdown.
# Single backticks are used for hyperlinks.

|supported| Backwards-compatible new features (backported from the ``master``
branch) as well as bug, security, and platform support fixes.

# The :ref: Sphinx "role" is used for internal references to other pages of
# the documentation.
# It can be used with only the reference name of a page (which should not be
# changed), in which case the title of that page will be displayed:

See :ref:`doc_ways_to_contribute`.

# Or it can be used with an optional custom title, which should thus be translated:

See :ref:`how to contribute &lt;doc_ways_to_contribute&gt;`.

# You may encounter other Sphinx roles, such as :kbd: used for shortcut keys.
# You can translate the content between backticks to match the usual key names,
# if it's different from the English one.

Save the scene. Click Scene -&gt; Save, or press :kbd:`Ctrl + S` on Windows/Linux
or :kbd:`Cmd + S` on macOS.</literal_block>
                <seealso>
                    <paragraph>参见 Sphinx 的 <reference name="reStructured Text 入门" refuri="https://www.sphinx-doc.org/en/master/usage/restructuredtext/basics.html">reStructured Text 入门</reference> 有关标记语言的快速概述, 请参阅源字符串。你可能会特别遇到内联标记（粗体，斜体，内联代码）以及内部和外部超链接标记。</paragraph>
                </seealso>
            </section>
            <section ids="class-reference-bbcode" names="class\ reference\ (bbcode) 类参考（bbcode）">
                <title>类参考（BBCode）</title>
                <paragraph>类引用使用 XML 文件记录在 Godot 主仓库库中，并使用类似 BBCode 的标记进行样式设置和内部引用。</paragraph>
                <paragraph>使用的一些标记来自原始 BBCode（例如 <literal>[b]Bold[/b]</literal> 和 <literal>[i]Italics[/i]</literal>）而其他标记是 Godot 特定的，用于高级功能，例如内联代码（例如 <literal>[code]true[/code]</literal>），链接到另一个类（例如 <literal>[Node2D]</literal>），或链接到给定类中的属性（例如 <literal>[member Node2D.position]</literal>），或用于多行代码块。例子：</paragraph>
                <literal_block force="False" language="none" linenos="False" xml:space="preserve">Returns a color according to the standardized [code]name[/code] with [code]alpha[/code] ranging from 0 to 1.
[codeblock]
red = ColorN("red", 1)
[/codeblock]
Supported color names are the same as the constants defined in [Color].</literal_block>
                <paragraph>在上面的例子中，不应被翻译 <literal>[code]name[/code]</literal>、<literal>[code]alpha[/code]</literal>、<literal>[Color]</literal>，因为它们分别指的是参数名和 Godot API 的一个类。同样，<literal>[codeblock]</literal> 的内容也不应该翻译，因为 <literal>ColorN</literal> 是 Godot API 的一个函数，而 <literal>"red"</literal> 是它支持的一个命名颜色。你最多可以翻译持有结果的变量名称（<literal>red = ...</literal>）。</paragraph>
                <paragraph>另请注意，在 XML 中，每一行都是一个段落，因此如果换行符不是原始翻译的一部分，则不应添加换行符。</paragraph>
                <seealso>
                    <paragraph>See our documentation for class reference writers for the <reference internal="True" refuri="class_reference_primer#doc-class-reference-bbcode"><inline classes="std std-ref">list of
                                BBCode-like tags</inline></reference> which are used
                        throughout the class reference.</paragraph>
                </seealso>
            </section>
        </section>
        <section ids="offline-translation-and-testing" names="offline\ translation\ and\ testing 离线翻译和测试">
            <title>离线翻译和测试</title>
            <paragraph>虽然我们建议使用 Weblate 界面来编写翻译，但你也可以在本地下载 PO 文件，用 <reference name="Poedit" refuri="https://poedit.net/">Poedit</reference>、<reference name="Lokalize" refuri="https://userbase.kde.org/Lokalize">Lokalize</reference> 等你喜欢的 PO 编辑程序进行翻译。</paragraph>
            <paragraph>要在本地下载 PO 文件，请浏览到你所用语言的翻译概述，然后选择“文件”菜单中的第一项：</paragraph>
            <image candidates="{'*': 'contributing/documentation/img/l10n_07_download_po_file.png'}" uri="contributing/documentation/img/l10n_07_download_po_file.png"></image>
            <paragraph>完成一系列编辑后，使用同一菜单中的“上传翻译”项并选择文件。选择“添加为翻译”作为文件的上传模式。</paragraph>
            <note>
                <paragraph>如果在你下载 PO 文件和上传编辑版本之间经过了相当长的时间，则有可能同时覆盖其他贡献者编写的翻译。这就是为什么我们建议使用在线界面，以便你始终使用最新版本。</paragraph>
            </note>
            <paragraph>如果你想在本地测试更改（特别是编辑器翻译），可以使用下载的 PO 文件并<reference internal="True" refuri="../development/compiling/index#toc-devel-compiling"><inline classes="std std-ref">从源码编译 Godot</inline></reference>。</paragraph>
            <paragraph>将编辑器翻译 PO 文件重命名为 <literal>&lt;lang&gt;.PO</literal>（例如世界语 <literal>eo.po</literal>），并将其放入 <literal>editor/translations/</literal> 文件夹（<reference name="GitHub" refuri="https://github.com/godotengine/godot/tree/master/editor/translations">GitHub</reference>）。</paragraph>
            <paragraph>你也可以用同样的方法测试类的引用变化，方法是对 PO 文件进行类似的重命名，并将其放入 <literal>doc/translations/</literal> 文件夹（<reference name="GitHub" refuri="https://github.com/godotengine/godot/tree/master/doc/translations">GitHub</reference>）。</paragraph>
        </section>
        <section ids="localizing-documentation-images" names="localizing\ documentation\ images 本地化文档图像">
            <title>本地化文档图像</title>
            <paragraph>在线文档包括许多图像，这些图像可以是Godot编辑器的屏幕截图，定制的图形以及任何其他类型的视觉内容。其中一些包含文本，因此可能与你的语言中的本地化相关。</paragraph>
            <paragraph>这部分不通过 Weblate 处理，而是直接在 <reference name="godot-docs-l10n" refuri="https://github.com/godotengine/godot-docs-l10n">godot-docs-l10n</reference><target ids="godot-docs-l10n" names="godot-docs-l10n" refuri="https://github.com/godotengine/godot-docs-l10n"></target> Git 仓库中处理，文档翻译从 Weblate 同步过来。</paragraph>
            <note>
                <paragraph>工作流不是最简单的, 需要一些Git知识. 我们计划开发一个简化的Web工具, 用它可以方便地管理图像定位, 抽象出这些步骤.</paragraph>
            </note>
            <paragraph>要翻译图像，你应该首先在原始的英文文档中找到它。为此，请浏览文档中的相关页面，例如 <reference internal="True" refuri="../../getting_started/introduction/first_look_at_the_editor#doc-intro-to-the-editor-interface"><inline classes="std std-ref">初识 Godot 编辑器</inline></reference>。单击右上角的“Edit on GitHub”链接：</paragraph>
            <image candidates="{'*': 'contributing/documentation/img/l10n_08_edit_on_github.png'}" uri="contributing/documentation/img/l10n_08_edit_on_github.png"></image>
            <paragraph>在 GitHub 上，单击要翻译的图像。如果相关，请单击“下载”将其下载到本地，并使用图像编辑工具进行编辑。请注意图像的完整路径，因为它需要进一步向下（这里是 <literal>getting_started/step_by_step/img/project_manager_first_open.png</literal>）。</paragraph>
            <image candidates="{'*': 'contributing/documentation/img/l10n_09_path_to_image.png'}" uri="contributing/documentation/img/l10n_09_path_to_image.png"></image>
            <paragraph>创建图像的本地化版本，或者编辑英文版本，或者用你的语言截取编辑器的屏幕截图(如果是编辑器截图的话)。有些图像还可能有SVG格式的源文件，因此你可以浏览包含它们的 <literal>img/</literal> 文件夹以进行检查。</paragraph>
            <paragraph>将你的本地化图片名改为原始图片名称, 并在扩展名前加上语言代码, 例如用于法语本地化的 <literal>project_manager_first_open.png</literal> 将变成 <literal>project_manager_first_open.fr.png</literal> .</paragraph>
            <paragraph>最后，在 <reference name="godot-docs-l10n" refuri="https://github.com/godotengine/godot-docs-l10n">godot-docs-l10n</reference> 上，在 <literal>images</literal> 子文件夹中重新创建相同的文件夹结构（<reference name="GitHub" refuri="https://github.com/godotengine/godot-docs-l10n/tree/master/images">GitHub</reference><target ids="github" names="github" refuri="https://github.com/godotengine/godot-docs-l10n/tree/master/images"></target>），并将翻译后的图像放在那里。在我们的示例中，最终结果应该是 <literal>images/getting_started/step_by_step/img/project_manager_first_open.fr.png</literal>。</paragraph>
            <paragraph>对其他图片重复这些操作，然后<reference internal="True" refuri="../workflow/pr_workflow#doc-pr-workflow"><inline classes="std std-ref">提交拉取请求</inline></reference>。</paragraph>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="翻译状态" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

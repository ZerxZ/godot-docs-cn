<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/contributing/development/compiling/optimizing_for_size.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <target refid="doc-optimizing-for-size"></target>
    <section ids="optimizing-a-build-for-size doc-optimizing-for-size" names="optimizing\ a\ build\ for\ size 为尺寸优化构建 doc_optimizing_for_size">
        <title>为尺寸优化构建</title>
        <section ids="rationale" names="rationale 依据">
            <title>依据</title>
            <paragraph>有时, 需要针对大小而不是速度来优化构建. 这意味着不编译引擎上的未使用的函数, 以及使用特定的编译器标志来帮助减小构建大小. 常见情况包括为移动和Web平台创建构建.</paragraph>
            <paragraph>本教程旨在概述创建较小二进制文件的不同方法. 在继续之前, 建议阅读之前有关为每个平台编译Godot的教程.</paragraph>
            <paragraph>下面的选项按照从最重要（大小节省得最多）到最不重要（大小节省得最少）的顺序排列。</paragraph>
        </section>
        <section ids="stripping-binaries" names="stripping\ binaries 剥离二进制文件">
            <title>剥离二进制文件</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><strong>节省空间：</strong>非常高</paragraph>
                </list_item>
                <list_item>
                    <paragraph><strong>难度：</strong>简单</paragraph>
                </list_item>
                <list_item>
                    <paragraph><strong>在官方构建中执行：</strong>是</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>如果你从源码构建了 Windows（MinGW）、Linux、macOS 的二进制文件，请记得剥离二进制文件中的调试符号。首先请安装你的发行版中的 <literal>strip</literal> 包，然后执行：</paragraph>
            <literal_block force="False" language="shell" linenos="False" xml:space="preserve">strip path/to/godot.binary</literal_block>
            <paragraph>在 Windows 上，大多数 MinGW 工具链安装时都会包含 <literal>strip.exe</literal>。</paragraph>
            <paragraph>这样可以将编译后二进制文件减少到原先五分之一到十分之一的大小。缺点是崩溃追踪中就无法再提供准确的信息了（可用于查找崩溃原因）。<reference internal="True" refuri="../debugging/using_cpp_profilers#doc-using-cpp-profilers"><inline classes="std std-ref">C++ 性能分析器</inline></reference>也将无法显示函数名称（不影响内置的 GDScript 性能分析器）。</paragraph>
            <note>
                <paragraph>The above command will not work on Windows binaries compiled with MSVC
                    and platforms such as Android and Web. Instead, pass <literal>debug_symbols=no</literal>
                    on the SCons command line when compiling.</paragraph>
            </note>
        </section>
        <section ids="compiling-with-link-time-optimization" names="compiling\ with\ link-time\ optimization 编译时使用连接时间优化">
            <title>编译时使用连接时间优化</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><strong>节省空间：</strong>高</paragraph>
                </list_item>
                <list_item>
                    <paragraph><strong>难度：</strong>简单</paragraph>
                </list_item>
                <list_item>
                    <paragraph><strong>在官方构建中执行：</strong>是</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>启用链接时优化可以在性能和文件大小方面生成更高效的二进制文件. 它通过消除重复的模板功能和未使用的代码来工作. 目前, 它可以与GCC和MSVC编译器一起使用:</paragraph>
            <literal_block force="False" language="shell" linenos="False" xml:space="preserve">scons target=template_release lto=full</literal_block>
            <paragraph>使用此选项时，链接会变得特别慢、消耗更多的内存，所以应该仅用于构建发布版本：</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>编译 <literal>master</literal> 分支时，如果启用了 LTO，那么你需要至少 8 GB 可用内存才能成功链接。</paragraph>
                </list_item>
                <list_item>
                    <paragraph>编译 <literal>3.x</literal> 分支时，如果启用了 LTO，那么你需要至少 6 GB 可用内存才能成功链接。</paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section ids="optimizing-for-size-instead-of-speed" names="optimizing\ for\ size\ instead\ of\ speed 针对大小而不是速度优化">
            <title>针对大小而不是速度优化</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><strong>节省空间：</strong>高</paragraph>
                </list_item>
                <list_item>
                    <paragraph><strong>难度：</strong>简单</paragraph>
                </list_item>
                <list_item>
                    <paragraph><strong>Performed in official builds:</strong> Yes, but only for web builds</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>Godot 3.1以上版本允许使用尺寸优化(而不是速度优化)进行编译. 要启用这个功能, 请将 <literal>optimize</literal> 标志设置为 <literal>size</literal> :</paragraph>
            <literal_block force="False" language="shell" linenos="False" xml:space="preserve">scons target=template_release optimize=size</literal_block>
            <paragraph>某些平台如WebAssembly默认情况下已使用此模式.</paragraph>
        </section>
        <section ids="disabling-advanced-text-server" names="disabling\ advanced\ text\ server">
            <title>Disabling advanced text server</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><strong>节省空间：</strong>高</paragraph>
                </list_item>
                <list_item>
                    <paragraph><strong>难度：</strong>简单</paragraph>
                </list_item>
                <list_item>
                    <paragraph><strong>在官方构建中执行：</strong>否</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>By default, Godot uses an advanced text server with the support for the
                following features:</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>Right-to-left typesetting and complex scripts, required to write languages
                        such as Arabic and Hebrew.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Font ligatures and OpenType features (such as small capitals, fractions and
                        slashed zero).</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>Godot provides a fallback text server that isn't compiled by default. This text
                server can be used as a lightweight alternative to the default advanced text
                server:</paragraph>
            <literal_block force="False" language="shell" linenos="False" xml:space="preserve">scons target=template_release module_text_server_adv_enabled=no module_text_server_fb_enabled=yes</literal_block>
            <paragraph>If you only intend on supporting Latin, Greek and Cyrillic-based languages in
                your project, the fallback text server should suffice.</paragraph>
            <paragraph>This fallback text server can also process large amounts of text more quickly
                than the advanced text server. This makes the fallback text server a good fit
                for mobile/web projects.</paragraph>
            <note>
                <paragraph>Remember to always pass <literal>module_text_server_fb_enabled=yes</literal> when using
                    <literal>module_text_server_adv_enabled=no</literal>. Otherwise, the compiled binary won't
                    contain any text server, which means no text will be displayed at all when
                    running the project.</paragraph>
            </note>
        </section>
        <section ids="disabling-3d" names="disabling\ 3d 禁用\ 3d">
            <title>禁用 3D</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><strong>节省空间：</strong>一般</paragraph>
                </list_item>
                <list_item>
                    <paragraph><strong>难度：</strong>简单</paragraph>
                </list_item>
                <list_item>
                    <paragraph><strong>在官方构建中执行：</strong>否</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>对于 2D 游戏，拥有整个 3D 引擎通常没有任何意义。因此，有一个构建标志来禁用它：</paragraph>
            <literal_block force="False" language="shell" linenos="False" xml:space="preserve">scons target=template_release disable_3d=yes</literal_block>
            <paragraph>必须禁用工具才能使用此标志, 因为编辑器不能在没有3D支持的情况下运行. 没有它, 二进制大小可以减少大约15％.</paragraph>
        </section>
        <section ids="disabling-advanced-gui-objects" names="disabling\ advanced\ gui\ objects 禁用高级\ gui\ 对象">
            <title>禁用高级 GUI 对象</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><strong>节省空间：</strong>一般</paragraph>
                </list_item>
                <list_item>
                    <paragraph><strong>难度：</strong>简单</paragraph>
                </list_item>
                <list_item>
                    <paragraph><strong>在官方构建中执行：</strong>否</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>大多数小游戏不需要复杂的GUI控件, 如Tree, ItemList, TextEdit或GraphEdit. 它们可以用一个构建标志来禁用:</paragraph>
            <literal_block force="False" language="shell" linenos="False" xml:space="preserve">scons target=template_release disable_advanced_gui=yes</literal_block>
            <paragraph>以下所有东西都会被禁用：</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>FileDialog</paragraph>
                </list_item>
                <list_item>
                    <paragraph>PopupMenu</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Tree</paragraph>
                </list_item>
                <list_item>
                    <paragraph>TextEdit</paragraph>
                </list_item>
                <list_item>
                    <paragraph>CodeEdit</paragraph>
                </list_item>
                <list_item>
                    <paragraph>SyntaxHighlighter</paragraph>
                </list_item>
                <list_item>
                    <paragraph>CodeHighlighter</paragraph>
                </list_item>
                <list_item>
                    <paragraph>TreeItem</paragraph>
                </list_item>
                <list_item>
                    <paragraph>OptionButton</paragraph>
                </list_item>
                <list_item>
                    <paragraph>SpinBox</paragraph>
                </list_item>
                <list_item>
                    <paragraph>ColorPicker</paragraph>
                </list_item>
                <list_item>
                    <paragraph>ColorPickerButton</paragraph>
                </list_item>
                <list_item>
                    <paragraph>RichTextlabel</paragraph>
                </list_item>
                <list_item>
                    <paragraph>RichTextEffect</paragraph>
                </list_item>
                <list_item>
                    <paragraph>CharFXTransform</paragraph>
                </list_item>
                <list_item>
                    <paragraph>AcceptDialog</paragraph>
                </list_item>
                <list_item>
                    <paragraph>ConfirmationDialog</paragraph>
                </list_item>
                <list_item>
                    <paragraph>MarginContainer</paragraph>
                </list_item>
                <list_item>
                    <paragraph>SubViewportContainer</paragraph>
                </list_item>
                <list_item>
                    <paragraph>SplitContainer</paragraph>
                </list_item>
                <list_item>
                    <paragraph>HSplitContainer</paragraph>
                </list_item>
                <list_item>
                    <paragraph>VSplitContainer</paragraph>
                </list_item>
                <list_item>
                    <paragraph>GraphNode</paragraph>
                </list_item>
                <list_item>
                    <paragraph>GraphEdit</paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section ids="disabling-unwanted-modules" names="disabling\ unwanted\ modules 禁用不需要的模块">
            <title>禁用不需要的模块</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><strong>节省空间：</strong>非常低到一般之间，取决于模块</paragraph>
                </list_item>
                <list_item>
                    <paragraph><strong>难度：</strong>中等到难之间，取决于模块</paragraph>
                </list_item>
                <list_item>
                    <paragraph><strong>在官方构建中执行：</strong>否</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>许多Godot的功能都作为模块提供. 你可以使用以下命令查看模块列表:</paragraph>
            <literal_block force="False" language="shell" linenos="False" xml:space="preserve">scons --help</literal_block>
            <paragraph>将显示可以禁用的模块列表以及所有构建选项. 如果你正在开发简单的2D游戏, 则可以禁用其中的许多功能:</paragraph>
            <literal_block force="False" language="shell" linenos="False" xml:space="preserve">scons target=template_release module_basis_universal_enabled=no module_bmp_enabled=no module_camera_enabled=no module_csg_enabled=no module_dds_enabled=no module_enet_enabled=no module_gridmap_enabled=no module_hdr_enabled=no module_jsonrpc_enabled=no module_ktx_enabled=no module_mbedtls_enabled=no module_meshoptimizer_enabled=no module_minimp3_enabled=no module_mobile_vr_enabled=no module_msdfgen_enabled=no module_multiplayer_enabled=no module_noise_enabled=no module_navigation_enabled=no module_ogg_enabled=no module_openxr_enabled=no module_raycast_enabled=no module_regex_enabled=no module_squish_enabled=no module_svg_enabled=no module_tga_enabled=no module_theora_enabled=no module_tinyexr_enabled=no module_upnp_enabled=no module_vhacd_enabled=no module_vorbis_enabled=no module_webrtc_enabled=no module_websocket_enabled=no module_webxr_enabled=no module_zip_enabled=no</literal_block>
            <paragraph>If this proves not to work for your use case, you should review the list of
                modules and see which ones you actually still need for your game (e.g. you might
                want to keep networking-related modules, regex support,
                <literal>minimp3</literal>/<literal>ogg</literal>/<literal>vorbis</literal> to play music, or <literal>theora</literal> to play videos).</paragraph>
            <paragraph>或者, 你也可以通过在源代码的根部创建 <literal>custom.py</literal> 来提供一个禁用模块的列表, 其内容类似于以下:</paragraph>
            <literal_block force="False" highlight_args="{}" language="python" linenos="False" xml:space="preserve"># custom.py

module_basis_universal_enabled = "no"
module_bmp_enabled = "no"
module_camera_enabled = "no"
module_csg_enabled = "no"
module_dds_enabled = "no"
module_enet_enabled = "no"
module_gridmap_enabled = "no"
module_hdr_enabled = "no"
module_jsonrpc_enabled = "no"
module_ktx_enabled = "no"
module_mbedtls_enabled = "no"
module_meshoptimizer_enabled = "no"
module_minimp3_enabled = "no"
module_mobile_vr_enabled = "no"
module_msdfgen_enabled= "no"
module_multiplayer_enabled = "no"
module_noise_enabled = "no"
module_navigation_enabled = "no"
module_ogg_enabled = "no"
module_openxr_enabled = "no"
module_raycast_enabled = "no"
module_regex_enabled = "no"
module_squish_enabled = "no"
module_svg_enabled = "no"
module_tga_enabled = "no"
module_theora_enabled = "no"
module_tinyexr_enabled = "no"
module_upnp_enabled = "no"
module_vhacd_enabled = "no"
module_vorbis_enabled = "no"
module_webrtc_enabled = "no"
module_websocket_enabled = "no"
module_webxr_enabled = "no"
module_zip_enabled = "no"</literal_block>
            <seealso>
                <paragraph><reference internal="True" refuri="introduction_to_the_buildsystem#doc-overriding-build-options"><inline classes="std std-ref">重写构建选项</inline></reference>.</paragraph>
            </seealso>
        </section>
        <section ids="optimizing-the-distribution-of-your-project" names="optimizing\ the\ distribution\ of\ your\ project">
            <title>Optimizing the distribution of your project</title>
            <section ids="desktop" names="desktop">
                <title>Desktop</title>
                <note>
                    <paragraph>This section is only relevant when distributing the files on a desktop
                        platform that doesn't perform its own compression or packing. As such, this
                        advice is relevant when you distribute ZIP archives on itch.io or GitHub
                        Releases.</paragraph>
                    <paragraph>Platforms like Steam already apply their own compression scheme, so you
                        don't need to create a ZIP archive to distribute files in the first place.</paragraph>
                </note>
                <paragraph>As an aside, you can look into optimizing the distribution of your project itself.
                    This can be done even without recompiling the export template.</paragraph>
                <paragraph><reference name="7-Zip" refuri="https://7-zip.org/">7-Zip</reference> can be used to create ZIP archives that are more
                    efficient than usual, while remaining compatible with every ZIP extractor
                    (including Windows' own built-in extractor). ZIP size reduction in a large
                    project can reach dozens of megabytes compared to a typical ZIP compressor,
                    although average savings are in the 1-5 MB range. Creating this ZIP archive will
                    take longer than usual, but it will extract just as fast as any other ZIP
                    archive.</paragraph>
                <paragraph>When using the 7-Zip GUI, this is done by creating a ZIP archive with the Ultra
                    compression mode. When using the command line, this is done using the following
                    command:</paragraph>
                <literal_block force="False" language="shell" linenos="False" xml:space="preserve">7z a -mx9 my_project.zip folder_containing_executable_and_pck</literal_block>
            </section>
            <section ids="web" names="web">
                <title>Web</title>
                <paragraph>Enabling gzip or Brotli compression for all file types from the web export
                    (especially the <literal>.wasm</literal> and <literal>.pck</literal>) can reduce the download size
                    significantly, leading to faster loading times, especially on slow connections.</paragraph>
                <paragraph>Creating precompressed gzip or Brotli files with a high compression level can be
                    even more efficient, as long as the web server is configured to serve those
                    files when they exist. When supported, Brotli should be preferred over gzip as
                    it has a greater potential for file size reduction.</paragraph>
                <paragraph>See <reference internal="True" refuri="../../../tutorials/export/exporting_for_web#doc-exporting-for-web-serving-the-files"><inline classes="std std-ref">提供文件</inline></reference> for instructions.</paragraph>
                <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="翻译状态" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
            </section>
        </section>
    </section>
</document>

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/contributing/development/compiling/compiling_for_android.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <target refid="doc-compiling-for-android"></target>
    <section ids="compiling-for-android doc-compiling-for-android" names="compiling\ for\ android 为\ android\ 平台编译 doc_compiling_for_android">
        <title>为 Android 平台编译</title>
        <seealso>
            <paragraph>这个页面描述的是如何从源码编译 Android 导出模板二进制。如果你想要找的是导出项目到 Android，请阅读 <reference internal="True" refuri="../../../tutorials/export/exporting_for_android#doc-exporting-for-android"><inline classes="std std-ref">为 Android 导出</inline></reference>。</paragraph>
        </seealso>
        <section ids="note" names="note 注意">
            <title>注意</title>
            <paragraph>对于大多数情况, 使用内置部署程序和导出模板就足够了. 手动编译Android APK对于部署程序的自定义版本或自定义程序包最有用.</paragraph>
            <paragraph>此外, 在尝试构建自定义导出模板之前, 你仍然需要按照 <reference internal="True" refuri="../../../tutorials/export/exporting_for_android#doc-exporting-for-android"><inline classes="std std-ref">为 Android 导出</inline></reference> 教程中提到的步骤进行操作.</paragraph>
        </section>
        <section ids="requirements" names="requirements 需求">
            <title>需求</title>
            <paragraph>要在Windows, Linux或macOS下进行编译, 需要以下内容:</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference name="Python 3.6+" refuri="https://www.python.org/downloads/">Python 3.6+</reference><target ids="python-3-6" names="python\ 3.6+" refuri="https://www.python.org/downloads/"></target>.</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference name="SCons 3.0+" refuri="https://scons.org/pages/download.html">SCons 3.0+</reference><target ids="scons-3-0" names="scons\ 3.0+" refuri="https://scons.org/pages/download.html"></target> 构建系统.</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference name="Android SDK" refuri="https://developer.android.com/studio/#command-tools">Android SDK</reference><target ids="android-sdk" names="android\ sdk" refuri="https://developer.android.com/studio/#command-tools"></target> (命令行工具就足够了).</paragraph>
                    <block_quote>
                        <bullet_list bullet="-">
                            <list_item>
                                <paragraph>所需的 SDK 组件将被自动安装。</paragraph>
                            </list_item>
                            <list_item>
                                <definition_list>
                                    <definition_list_item>
                                        <term>在Linux上，</term>
                                        <definition>
                                            <paragraph><strong>do not use an Android SDK provided by your distribution's repositories as it will often be outdated</strong>.</paragraph>
                                        </definition>
                                    </definition_list_item>
                                </definition_list>
                            </list_item>
                        </bullet_list>
                    </block_quote>
                </list_item>
                <list_item>
                    <paragraph>Gradle（如果缺少，将自动下载并安装）。</paragraph>
                </list_item>
                <list_item>
                    <paragraph>JDK 17 (either OpenJDK or Oracle JDK).</paragraph>
                    <block_quote>
                        <bullet_list bullet="-">
                            <list_item>
                                <paragraph>You can download a build from <reference name="ojdkbuild" refuri="https://adoptium.net/temurin/releases/?variant=openjdk17">ojdkbuild</reference><target ids="ojdkbuild" names="ojdkbuild" refuri="https://adoptium.net/temurin/releases/?variant=openjdk17"></target>.</paragraph>
                            </list_item>
                        </bullet_list>
                    </block_quote>
                </list_item>
            </bullet_list>
            <seealso>
                <paragraph>要获取编译所需的 Godot 源码，请参阅 <reference internal="True" refuri="getting_source#doc-getting-source"><inline classes="std std-ref">获取源代码</inline></reference>。</paragraph>
                <paragraph>有关 Godot 的 SCons 用法的一般概述，请参阅 <reference internal="True" refuri="introduction_to_the_buildsystem#doc-introduction-to-the-buildsystem"><inline classes="std std-ref">构建系统介绍</inline></reference>。</paragraph>
            </seealso>
            <target refid="doc-android-setting-up-the-buildsystem"></target>
        </section>
        <section ids="setting-up-the-buildsystem doc-android-setting-up-the-buildsystem" names="setting\ up\ the\ buildsystem 设置构建系统 doc_android_setting_up_the_buildsystem">
            <title>设置构建系统</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>Set the environment variable <literal>ANDROID_HOME</literal> to point to the Android
                        SDK. If you downloaded the Android command-line tools, this would be
                        the folder where you extracted the contents of the ZIP archive.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>在此文件夹中安装必要的SDK组件:</paragraph>
                    <block_quote>
                        <bullet_list bullet="-">
                            <list_item>
                                <paragraph>通过运行以下命令接受SDK组件许可证, 其中 <literal>android_sdk_path</literal> 是android SDK的路径, 然后用 <literal>y</literal> 回答所有提示:</paragraph>
                            </list_item>
                        </bullet_list>
                        <literal_block force="False" language="shell" linenos="False" xml:space="preserve">cmdline-tools/latest/bin/sdkmanager --sdk_root=&lt;android_sdk_path&gt; --licenses</literal_block>
                        <bullet_list bullet="-">
                            <list_item>
                                <paragraph>运行以下命令完成安装, 其中 <literal>android_sdk_path</literal> 是Android SDK的路径.</paragraph>
                            </list_item>
                        </bullet_list>
                        <literal_block force="False" language="shell" linenos="False" xml:space="preserve">cmdline-tools/latest/bin/sdkmanager --sdk_root=&lt;android_sdk_path&gt; "platform-tools" "build-tools;30.0.3" "platforms;android-29" "cmdline-tools;latest" "cmake;3.10.2.4988404"</literal_block>
                    </block_quote>
                </list_item>
            </bullet_list>
            <seealso>
                <paragraph>要在Windows上设置环境变量, 按 <literal classes="kbd">Windows + R</literal>, 输入 "control system" , 然后在左侧窗格中点击 <strong>Advanced system settings</strong> , 然后在出现的窗口中点击 <strong>Environment</strong> .</paragraph>
            </seealso>
            <seealso>
                <paragraph>To set the environment variable on Linux or macOS, use
                    <literal>export ANDROID_HOME=/path/to/android-sdk</literal> where <literal>/path/to/android-sdk</literal> points to
                    the root of the SDK directories.</paragraph>
            </seealso>
        </section>
        <section ids="building-the-export-templates" names="building\ the\ export\ templates 构建导出模板">
            <title>构建导出模板</title>
            <paragraph>Godot需要两个Android导出模板: 优化的 "发布" 模板(<literal>android_release.apk</literal>)和调试模板(<literal>android_debug.apk</literal>). 由于Google将要求所有APK从2019年8月开始包含ARMv8(64位)库, 因此以下命令将构建包含ARMv7和ARMv8库的APK.</paragraph>
            <paragraph>编译标准导出模板的方法是在Godot根目录下调用SCons, 参数如下:</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>发布模板(在导出时未选中 "启用调试" 的情况下使用)</paragraph>
                </list_item>
            </bullet_list>
            <literal_block force="False" language="shell" linenos="False" xml:space="preserve">scons platform=android target=template_release arch=arm32
scons platform=android target=template_release arch=arm64
cd platform/android/java
# On Windows
.\gradlew generateGodotTemplates
# On Linux and macOS
./gradlew generateGodotTemplates</literal_block>
            <paragraph>生成的APK将位于 <literal>bin/android_release.apk</literal>.</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>调试模板(用于在导出时选中 "启用调试" 的情况下使用)</paragraph>
                </list_item>
            </bullet_list>
            <literal_block force="False" language="shell" linenos="False" xml:space="preserve">scons platform=android target=template_debug arch=arm32
scons platform=android target=template_debug arch=arm64
cd platform/android/java
# On Windows
.\gradlew generateGodotTemplates
# On Linux and macOS
./gradlew generateGodotTemplates</literal_block>
            <paragraph>生成的APK将位于 <literal>bin/android_debug.apk</literal>.</paragraph>
            <seealso>
                <paragraph>如果你想启用 Vulkan 验证层，查看 <reference internal="True" refuri="../debugging/vulkan/vulkan_validation_layers#doc-vulkan-validation-layers-android"><inline classes="std std-ref">Vulkan validation layers on Android</inline></reference>。</paragraph>
            </seealso>
            <section ids="adding-support-for-x86-devices" names="adding\ support\ for\ x86\ devices 添加对\ x86\ 设备的支持">
                <title>添加对 x86 设备的支持</title>
                <paragraph>If you also want to include support for x86 and x86-64 devices, run the SCons
                    command a third and fourth time with the <literal>arch=x86_32</literal>, and
                    <literal>arch=x86_64</literal> arguments before building the APK with Gradle. For
                    example, for the release template:</paragraph>
                <literal_block force="False" language="shell" linenos="False" xml:space="preserve">scons platform=android target=template_release arch=arm32
scons platform=android target=template_release arch=arm64
scons platform=android target=template_release arch=x86_32
scons platform=android target=template_release arch=x86_64
cd platform/android/java
# On Windows
.\gradlew generateGodotTemplates
# On Linux and macOS
./gradlew generateGodotTemplates</literal_block>
                <paragraph>这将创建一个适用于所有平台的胖二进制文件. 导出项目的最终APK大小取决于你在导出时选择支持的平台；换句话说, 未使用的平台将从APK中删除.</paragraph>
            </section>
            <section ids="cleaning-the-generated-export-templates" names="cleaning\ the\ generated\ export\ templates 清理生成的导出模板">
                <title>清理生成的导出模板</title>
                <paragraph>你可以使用以下命令删除生成的导出模板:</paragraph>
                <literal_block force="False" language="shell" linenos="False" xml:space="preserve">cd platform/android/java
# On Windows
.\gradlew clean
# On Linux and macOS
./gradlew clean</literal_block>
            </section>
        </section>
        <section ids="using-the-export-templates" names="using\ the\ export\ templates 使用导出模板">
            <title>使用导出模板</title>
            <paragraph>作为Android的导出模板,Godot需根据与编辑器相同的版本/提交编译发布版和调试版APK. 如果你使用官方二进制文件作为编辑器, 请确保安装匹配的导出模板, 或者从相同版本构建自己的模板.</paragraph>
            <paragraph>导出游戏时,Godot将打开APK, 更改其中的一些内容并添加文件.</paragraph>
            <section ids="installing-the-templates" names="installing\ the\ templates 安装模板">
                <title>安装模板</title>
                <paragraph>新编译的模板(<literal>android_debug.apk</literal> 和 <literal>android_release.apk</literal>)必须使用各自的名称复制到Godot的模板文件夹中. 模板文件夹可以位于:</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>Windows: <literal>%APPDATA%\Godot\export_templates\&lt;version&gt;\</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Linux: <literal>$HOME/.local/share/godot/export_templates/&lt;version&gt;/</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>macOS: <literal>$HOME/Library/Application Support/Godot/export_templates/&lt;version&gt;/</literal></paragraph>
                    </list_item>
                </bullet_list>
                <paragraph><literal>&lt;version&gt;</literal> 的格式为 <literal>major.minor[.patch].status</literal> , 使用Godot源代码库中 <literal>version.py</literal> 的值(例如 <literal>3.0.5.stable</literal> 或 <literal>3.1.dev</literal>). 你还需要将此相同的版本字符串写入到导出模板旁边的 <literal>version.txt</literal> 文件中.</paragraph>
                <comment xml:space="preserve">TODO: Move these paths to a common reference page</comment>
                <paragraph>但是, 如果要编写自定义模块或自定义C++代码, 则可能需要在此处将APK配置为自定义导出模板:</paragraph>
                <image candidates="{'*': 'contributing/development/compiling/img/andtemplates.png'}" uri="contributing/development/compiling/img/andtemplates.png"></image>
                <paragraph>你甚至不需要复制它们, 只需引用在Godot源文件夹的 <literal>bin\</literal> 目录中生成的文件, 因此下次构建时, 将自动引用自定义模板.</paragraph>
            </section>
        </section>
        <section ids="building-the-godot-editor" names="building\ the\ godot\ editor 构建\ godot\ 编辑器">
            <title>构建 Godot 编辑器</title>
            <paragraph>Compiling the editor is done by calling SCons from the Godot
                root directory with the following arguments:</paragraph>
            <literal_block force="False" language="shell" linenos="False" xml:space="preserve">scons platform=android arch=arm32 production=yes target=editor
scons platform=android arch=arm64 production=yes target=editor
scons platform=android arch=x86_32 production=yes target=editor
scons platform=android arch=x86_64 production=yes target=editor
cd platform/android/java
# On Windows
.\gradlew generateGodotEditor
# On Linux and macOS
./gradlew generateGodotEditor</literal_block>
            <paragraph>The resulting APK will be located at <literal>bin/android_editor_builds/android_editor-release.apk</literal>.</paragraph>
        </section>
        <section ids="removing-the-editor-templates" names="removing\ the\ editor\ templates 移除编辑器模板">
            <title>移除编辑器模板</title>
            <paragraph>你可以使用以下命令移除生成的编辑器模板：</paragraph>
            <literal_block force="False" language="shell" linenos="False" xml:space="preserve"> cd platform/android/java
 # On Windows
.\gradlew clean
# On Linux and macOS
./gradlew clean</literal_block>
        </section>
        <section ids="installing-the-godot-editor" names="installing\ the\ godot\ editor 安装\ godot\ 编辑器">
            <title>安装 Godot 编辑器</title>
            <paragraph>在启用了开发者选项的 Android 设备上，通过 USB/USB-C 端口的充电线将 Android 设备连接到你的计算机。打开终端/命令提示符并在根目录使用以下参数运行命令：</paragraph>
            <literal_block force="False" language="shell" linenos="False" xml:space="preserve">adb install ./bin/android_editor_builds/android_editor-release.apk</literal_block>
        </section>
        <section ids="troubleshooting" names="troubleshooting 故障排除">
            <title>故障排除</title>
            <section ids="platform-doesn-t-appear-in-scons" names="platform\ doesn't\ appear\ in\ scons 平台未在\ scons\ 中出现">
                <title>平台未在 SCons 中出现</title>
                <paragraph>Double-check that you've set the <literal>ANDROID_HOME</literal>
                    environment variable. This is required for the platform to appear in SCons'
                    list of detected platforms.
                    See <reference internal="True" refid="doc-android-setting-up-the-buildsystem"><inline classes="std std-ref">Setting up the buildsystem</inline></reference>
                    for more information.</paragraph>
            </section>
            <section ids="application-not-installed" names="application\ not\ installed 应用程序未安装">
                <title>应用程序未安装</title>
                <paragraph>Android可能会抱怨该应用程序未正确安装. 如果是这样的话:</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>检查是否正确生成了调试密钥库。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>检查jarsigner可执行文件是否来自JDK 8.</paragraph>
                    </list_item>
                </bullet_list>
                <paragraph>如果仍然失败, 请打开命令行并运行 <reference name="logcat" refuri="https://developer.android.com/studio/command-line/logcat">logcat</reference><target ids="logcat" names="logcat" refuri="https://developer.android.com/studio/command-line/logcat"></target>:</paragraph>
                <literal_block force="False" language="shell" linenos="False" xml:space="preserve">adb logcat</literal_block>
                <paragraph>然后在安装应用程序时检查输出；错误消息应该在此处显示. 如果无法解决, 请寻求帮助.</paragraph>
            </section>
            <section ids="application-exits-immediately" names="application\ exits\ immediately 应用程序秒退">
                <title>应用程序秒退</title>
                <paragraph>如果应用程序运行但秒退, 则可能是以下原因之一:</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>确保使用与你的编辑器版本匹配的导出模板；如果你使用的是新版Godot, 则还 <emphasis>必须</emphasis> 更新模板.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>libgodot_android.so</literal> is not in <literal>libs/&lt;arch&gt;/</literal>
                            where <literal>&lt;arch&gt;</literal> is the device's architecture.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>设备的体系结构与导出的体系结构不匹配. 确保你的模板是针对该设备的体系结构构建的, 并且导出设置包括对该体系结构的支持.</paragraph>
                    </list_item>
                </bullet_list>
                <paragraph>无论如何, <literal>adb logcat</literal> 也应显示错误原因.</paragraph>
                <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="翻译状态" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
            </section>
        </section>
    </section>
</document>

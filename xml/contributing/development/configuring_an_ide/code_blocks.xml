<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/contributing/development/configuring_an_ide/code_blocks.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <target refid="doc-configuring-an-ide-code-blocks"></target>
    <section dupnames="code::blocks" ids="code-blocks doc-configuring-an-ide-code-blocks" names="doc_configuring_an_ide_code_blocks">
        <title>Code::Blocks</title>
        <paragraph><reference name="Code::Blocks" refuri="https://codeblocks.org/">Code::Blocks</reference><target ids="code-blocks" names="code::blocks" refuri="https://codeblocks.org/"></target> 是一款自由、开源且跨平台的 IDE。</paragraph>
        <section ids="creating-a-new-project" names="creating\ a\ new\ project 创建一个新项目">
            <title>创建一个新项目</title>
            <paragraph>在 Code::Blocks 的主界面，点击<strong>创建新项目</strong>或选择<strong>文件 &gt; 新建 &gt; 项目...</strong>。</paragraph>
            <figure align="center" classes="figure-w480">
                <image candidates="{'*': 'contributing/development/configuring_an_ide/img/code_blocks_file_new_project.png'}" uri="contributing/development/configuring_an_ide/img/code_blocks_file_new_project.png"></image>
            </figure>
            <paragraph>打开 <strong>新建模板(New from template)</strong> 窗口中, 从 <strong>项目(Projects)</strong> 中, 选择 <strong>空项目(Empty project)</strong> , 然后点击 <strong>前往(Go)</strong> .</paragraph>
            <figure align="center" classes="figure-w480">
                <image candidates="{'*': 'contributing/development/configuring_an_ide/img/code_blocks_new_empty_project.png'}" uri="contributing/development/configuring_an_ide/img/code_blocks_new_empty_project.png"></image>
            </figure>
            <paragraph>单击 "下一步", 将欢迎传递到新的空项目向导中.</paragraph>
            <figure align="center" classes="figure-w480">
                <image candidates="{'*': 'contributing/development/configuring_an_ide/img/code_blocks_wizard_welcome.png'}" uri="contributing/development/configuring_an_ide/img/code_blocks_wizard_welcome.png"></image>
            </figure>
            <paragraph>项目文件应该在克隆的项目文件夹的根目录下创建. 要做到这一点, 首先, 确保 <strong>项目标题</strong> 与Godot被克隆到的文件夹名称相同. 除非你将项目克隆到一个不同名称的文件夹中, 否则将是 <literal>godot</literal> .</paragraph>
            <paragraph>其次, 确保 <strong>创建项目的文件夹</strong> 是你运行Git克隆命令的文件夹, 而不是 <literal>godot</literal> 项目文件夹. 确认 <strong>结果文件名</strong> 字段将在克隆的项目文件夹的根目录下创建项目文件.</paragraph>
            <figure align="center" classes="figure-w480">
                <image candidates="{'*': 'contributing/development/configuring_an_ide/img/code_blocks_project_title_and_location.png'}" uri="contributing/development/configuring_an_ide/img/code_blocks_project_title_and_location.png"></image>
            </figure>
            <paragraph>编译器和配置设置是通过 <strong>SCons</strong> 管理的, 稍后将进行配置. 然而, 值得取消选择 <strong>Create "Release" 配置</strong> 选项；因此在点击 <strong>Finish</strong> 之前, 只创建一个构建目标.</paragraph>
            <figure align="center" classes="figure-w480">
                <image candidates="{'*': 'contributing/development/configuring_an_ide/img/code_blocks_compiler_and_configuration.png'}" uri="contributing/development/configuring_an_ide/img/code_blocks_compiler_and_configuration.png"></image>
            </figure>
        </section>
        <section ids="configuring-the-build" names="configuring\ the\ build 配置构建">
            <title>配置构建</title>
            <paragraph>第一步是更改项目属性. 右击新项目, 选择 <strong>属性...</strong> .</paragraph>
            <figure align="center" classes="figure-w480">
                <image candidates="{'*': 'contributing/development/configuring_an_ide/img/code_blocks_open_properties.png'}" uri="contributing/development/configuring_an_ide/img/code_blocks_open_properties.png"></image>
            </figure>
            <paragraph>勾选 <strong>This is a custom Makefile</strong> 属性. 单击 "确定" 保存更改.</paragraph>
            <figure align="center" classes="figure-w480">
                <image candidates="{'*': 'contributing/development/configuring_an_ide/img/code_blocks_project_properties.png'}" uri="contributing/development/configuring_an_ide/img/code_blocks_project_properties.png"></image>
            </figure>
            <paragraph>下一步是更改构建选项. 右键点击新项目, 选择 <strong>构建选项...</strong> .</paragraph>
            <figure align="center" classes="figure-w480">
                <image candidates="{'*': 'contributing/development/configuring_an_ide/img/code_blocks_open_build_options.png'}" uri="contributing/development/configuring_an_ide/img/code_blocks_open_build_options.png"></image>
            </figure>
            <paragraph>Select the <strong>"Make" commands</strong> tab and remove all the existing commands for all the build targets. For each build target enter the <strong>SCons</strong> command for creating the desired build in the <strong>Build project/target</strong> field. The minimum is <literal>scons</literal>. For details on the <strong>SCons</strong> build options, see <reference internal="True" refuri="../compiling/introduction_to_the_buildsystem#doc-introduction-to-the-buildsystem"><inline classes="std std-ref">构建系统介绍</inline></reference>. It's also useful to add the <literal>scons --clean</literal> command in the <strong>Clean project/target</strong> field to the project's default commands.</paragraph>
            <paragraph>If you're using Windows, all the commands need to be preceded with <literal>cmd /c</literal> to initialize the command interpreter.</paragraph>
            <figure align="center" classes="figure-w480">
                <image candidates="{'*': 'contributing/development/configuring_an_ide/img/code_blocks_scons_minimum.png'}" uri="contributing/development/configuring_an_ide/img/code_blocks_scons_minimum.png"></image>
            </figure>
            <figure align="center" classes="figure-w480">
                <image candidates="{'*': 'contributing/development/configuring_an_ide/img/code_blocks_scons_clean.png'}" uri="contributing/development/configuring_an_ide/img/code_blocks_scons_clean.png"></image>
            </figure>
            <paragraph>Windows示例:</paragraph>
            <figure align="center" classes="figure-w480">
                <image candidates="{'*': 'contributing/development/configuring_an_ide/img/code_blocks_scons_windows.png'}" uri="contributing/development/configuring_an_ide/img/code_blocks_scons_windows.png"></image>
            </figure>
            <paragraph>Code::Blocks 现在应该被配置为构建 Godot；所以选择 <strong>Build &gt; Build</strong>，点击齿轮按钮，或者按 <literal classes="kbd">Ctrl + F9</literal>。</paragraph>
        </section>
        <section ids="configuring-the-run" names="configuring\ the\ run 配置运行">
            <title>配置运行</title>
            <paragraph>一旦 <strong>SCons</strong> 成功构建了所需的目标, 重新打开项目 <strong>Properties...</strong> 并选择 <strong>Build targets</strong> 选项卡. 在 <strong>输出文件名</strong> 字段, 浏览到 <literal>bin</literal> 文件夹, 选择编译文件.</paragraph>
            <paragraph>取消选择 <strong>Auto-generate filename prefix</strong>（自动生成文件名前缀）和 <strong>Auto-generate filename extension</strong>（自动生成文件扩展名）选项。</paragraph>
            <figure align="center" classes="figure-w480">
                <image candidates="{'*': 'contributing/development/configuring_an_ide/img/code_blocks_build_targets.png'}" uri="contributing/development/configuring_an_ide/img/code_blocks_build_targets.png"></image>
            </figure>
            <paragraph>Code::Blocks 现在应该被配置为运行你的编译后的 Godot 可执行文件；所以选择 <strong>Build &gt; Run</strong>，点击绿色箭头按钮，或者按 <literal classes="kbd">Ctrl + F10</literal>。</paragraph>
            <paragraph>还有两点值得注意. 首先, 如果需要, <strong>Execution working dir</strong> 字段可用于测试特定项目, 将其设置为包含 <literal>project.godot</literal> 文件的文件夹. 其次, <strong>Build targets</strong> 选项卡可用于添加和删除构建目标, 以便使用和创建不同的构建.</paragraph>
        </section>
        <section ids="adding-files-to-the-project" names="adding\ files\ to\ the\ project 将文件添加到项目">
            <title>将文件添加到项目</title>
            <paragraph>要将所有Godot代码文件添加到项目中, 右击新项目, 选择 <strong>递归添加文件...</strong> .</paragraph>
            <figure align="center" classes="figure-w480">
                <image candidates="{'*': 'contributing/development/configuring_an_ide/img/code_blocks_add_files_recursively.png'}" uri="contributing/development/configuring_an_ide/img/code_blocks_add_files_recursively.png"></image>
            </figure>
            <paragraph>它应该会自动选择项目文件夹;所以单击 <strong>打开</strong> . 默认情况下, 所有的代码文件都已被包含在内, 所以只需单击 <strong>确定</strong> 即可.</paragraph>
            <figure align="center" classes="figure-w480">
                <image candidates="{'*': 'contributing/development/configuring_an_ide/img/code_blocks_select_files.png'}" uri="contributing/development/configuring_an_ide/img/code_blocks_select_files.png"></image>
            </figure>
        </section>
        <section ids="code-style-configuration" names="code\ style\ configuration 代码风格配置">
            <title>代码风格配置</title>
            <paragraph>在编辑任何文件以前，请记住，所有的代码文件都应该遵守 <reference internal="True" refuri="../code_style_guidelines#doc-code-style-guidelines"><inline classes="std std-ref">代码风格规范</inline></reference>。与 Godot 中的一个很大的不同是制表符缩进的使用。因此，需要启用 Code::Blocks 编辑器设置中的制表符缩进。该设置可以在 <strong>Settings &gt; Editor</strong> 中找到。</paragraph>
            <figure align="center" classes="figure-w480">
                <image candidates="{'*': 'contributing/development/configuring_an_ide/img/code_blocks_update_editor_settings.png'}" uri="contributing/development/configuring_an_ide/img/code_blocks_update_editor_settings.png"></image>
            </figure>
            <paragraph>在 <strong>General Settings(常规设置)</strong> --&gt; <strong>Editor Settings(编辑器设置)</strong> --&gt; <strong>tab选项</strong> 下单击 <strong>Use TAB character(使用TAB字符)</strong> .</paragraph>
            <figure align="center" classes="figure-w480">
                <image candidates="{'*': 'contributing/development/configuring_an_ide/img/code_block_use_tab_character.png'}" uri="contributing/development/configuring_an_ide/img/code_block_use_tab_character.png"></image>
            </figure>
            <paragraph>这样一来，你就可以开始使用 Code::Blocks IDE 来向 Godot 贡献代码了。记得保存项目文件和 <strong>Workspace</strong> 。如果遇到了问题，可以在 <reference name="Godot 的社区频道" refuri="https://godotengine.org/community">Godot 的社区频道</reference> 中求助。</paragraph>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="翻译状态" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

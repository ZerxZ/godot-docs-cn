<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/contributing/development/editor/introduction_to_editor_development.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <target refid="doc-introduction-to-editor-development"></target>
    <section ids="introduction-to-editor-development doc-introduction-to-editor-development" names="introduction\ to\ editor\ development 编辑器开发简介 doc_introduction_to_editor_development">
        <title>编辑器开发简介</title>
        <paragraph>在这一页，你将了解到:</paragraph>
        <bullet_list bullet="-">
            <list_item>
                <paragraph>Godot 编辑器背后的<strong>设计决策</strong>。</paragraph>
            </list_item>
            <list_item>
                <paragraph>如何高效地处理Godot编辑器的C++代码。</paragraph>
            </list_item>
        </bullet_list>
        <paragraph>本指南针对的是目前或未来的引擎贡献者。要在GDScript中创建编辑器插件，请参见 <reference internal="True" refuri="../../../tutorials/plugins/editor/making_plugins#doc-making-plugins"><inline classes="std std-ref">制作插件</inline></reference> 。</paragraph>
        <seealso>
            <paragraph>如果你是 Godot 的新手，建议你在继续之前先阅读 <reference internal="True" refuri="../../../getting_started/introduction/godot_design_philosophy#doc-godot-design-philosophy"><inline classes="std std-ref">Godot 的设计理念</inline></reference> 。由于 Godot 编辑器是用 C++ 编写的 Godot 项目，引擎的许多理念同样适用于编辑器。</paragraph>
        </seealso>
        <section ids="technical-choices" names="technical\ choices 技术选择">
            <title>技术选择</title>
            <paragraph>The Godot editor is drawn using Godot's renderer and
                <reference internal="True" refuri="../../../tutorials/ui/index#doc-user-interface"><inline classes="std std-ref">UI system</inline></reference>. It does <emphasis>not</emphasis> rely on a toolkit
                such as GTK or Qt. This is similar in spirit to software like Blender.
                While using toolkits makes it easier to achieve a "native" appearance, they are
                also quite heavy and their licensing is not compatible with Godot's.</paragraph>
            <paragraph>该编辑器完全是用C++编写的。它不能包含任何GDScript或C#代码。</paragraph>
        </section>
        <section ids="directory-structure" names="directory\ structure 目录结构">
            <title>目录结构</title>
            <paragraph>编辑器的代码完全独立于Godot源代码库的 <reference name="editor/" refuri="https://github.com/godotengine/godot/tree/master/editor">editor/</reference> 文件夹中。</paragraph>
            <paragraph>Some editor functionality is also implemented via
                <reference internal="True" refuri="../core_and_modules/custom_modules_in_cpp#doc-custom-modules-in-cpp"><inline classes="std std-ref">modules</inline></reference>. Some of these are only enabled in
                editor builds to decrease the binary size of export templates. See the
                <reference name="modules/" refuri="https://github.com/godotengine/godot/tree/master/modules">modules/</reference> folder
                in the Godot source repository.</paragraph>
            <paragraph>编辑器中的一些重要文件包括：</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference name="editor/editor_node.cpp" refuri="https://github.com/godotengine/godot/blob/mastereditor/editor_node.cpp">editor/editor_node.cpp</reference>：主编辑器初始化文件。相当于编辑器的“主场景”。</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference name="editor/project_manager.cpp" refuri="https://github.com/godotengine/godot/blob/master/editor/project_manager.cpp">editor/project_manager.cpp</reference>：主项目管理器初始化文件。相当于项目管理器的“主场景”。</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference name="editor/plugins/canvas_item_editor_plugin.cpp" refuri="https://github.com/godotengine/godot/blob/master/editor/plugins/canvas_item_editor_plugin.cpp">editor/plugins/canvas_item_editor_plugin.cpp</reference>:
                        The 2D editor viewport and related functionality (toolbar at the top, editing modes, overlaid helpers/panels, …).</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference name="editor/plugins/node_3d_editor_plugin.cpp" refuri="https://github.com/godotengine/godot/blob/master/editor/plugins/node_3d_editor_plugin.cpp">editor/plugins/node_3d_editor_plugin.cpp</reference>:
                        The 3D editor viewport and related functionality (toolbar at the top, editing modes, overlaid panels, …).</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference name="editor/plugins/node_3d_editor_gizmos.cpp" refuri="https://github.com/godotengine/godot/blob/master/editor/plugins/node_3d_editor_gizmos.cpp">editor/plugins/node_3d_editor_gizmos.cpp</reference>:
                        Where the 3D editor gizmos are defined and drawn.
                        This file doesn't have a 2D counterpart as 2D gizmos are drawn by the nodes themselves.</paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section ids="editor-dependencies-in-scene-files" names="editor\ dependencies\ in\ scene/\ files scene/\ 中文件对编辑器的依赖性">
            <title><literal>scene/</literal> 中文件对编辑器的依赖性</title>
            <paragraph>在处理编辑器功能时，你可能需要修改Godot的GUI节点中的文件，你可以在 <literal>scene/</literal> 文件夹中找到。</paragraph>
            <paragraph>需要记住的一条规则是，你<strong>不能</strong>给 <literal>editor/</literal> 在其他文件夹中引入新的依赖关系，如 <literal>scene/</literal>。即使你使用 <literal>#ifdef TOOLS_ENABLED</literal> 也是如此。</paragraph>
            <paragraph>为了使代码库更容易操作，更自成一体，允许的依赖性顺序是:</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><literal>editor/</literal> -&gt; <literal>scene/</literal> -&gt; <literal>servers/</literal> -&gt; <literal>core/</literal></paragraph>
                </list_item>
            </bullet_list>
            <paragraph>这意味着 <literal>editor/</literal> 中的文件可以依赖 <literal>scene/</literal>, <literal>servers/</literal>, 和 <literal>core/</literal> 中的包含。但是，虽然 <literal>scene/</literal> 可以依赖 <literal>servers/</literal> 和 <literal>core/</literal> 的内容，但它不能依赖 <literal>editor/</literal> 的内容。</paragraph>
            <paragraph>Currently, there are some dependencies to <literal>editor/</literal> includes in <literal>scene/</literal>
                files, but
                <reference name="they are in the process of being removed" refuri="https://github.com/godotengine/godot/issues/53295">they are in the process of being removed</reference>.</paragraph>
        </section>
        <section ids="development-tips" names="development\ tips 开发技巧">
            <title>开发技巧</title>
            <paragraph>To iterate quickly on the editor, we recommend to set up a test project and
                <reference internal="True" refuri="../../../tutorials/editor/command_line_tutorial#doc-command-line-tutorial"><inline classes="std std-ref">open it from the command line</inline></reference> after compiling
                the editor. This way, you don't have to go through the Project Manager every
                time you start Godot.</paragraph>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="翻译状态" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

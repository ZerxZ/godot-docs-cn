<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/contributing/development/cpp_usage_guidelines.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <target refid="doc-cpp-usage-guidelines"></target>
    <section ids="c-usage-guidelines doc-cpp-usage-guidelines" names="c++\ usage\ guidelines c++\ 使用规范 doc_cpp_usage_guidelines">
        <title>C++ 使用规范</title>
        <section ids="rationale" names="rationale 依据">
            <title>依据</title>
            <paragraph>从 Godot 4.0 开始，代码库中所使用的 C++ 标准是 <strong>C++17</strong> 的子集。现代 C++ 带来了许多机会，让我们能够编写更快、更易读的代码，但我们选择将我们对 C++ 的使用限制在一个子集中，原因有这么几点：</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>易于使用在线编辑器审核代码。这是因为引擎的贡献者在审核代码时并不总是可以使用完整的 IDE。</paragraph>
                </list_item>
                <list_item>
                    <paragraph>易于让新手贡献者掌握代码（他们可能不是专业的 C++ 程序员）。Godot 的代码库是公认的易于学习，我们希望继续保持。</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>To get your pull request merged, it needs to follow the C++ usage guidelines
                outlined here. Of course, you can use features not allowed here in your own C++
                modules or GDExtensions.</paragraph>
            <note>
                <paragraph>在 Godot 4.0 之前的版本中，代码库所使用的 C++ 标准曾是 C++03，外加一些 C++14 扩展。如果你是在为 <title_reference>3.x</title_reference> 分支提交拉取请求而不是 <title_reference>master</title_reference>，就不能使用 C++17 的特性。请确保你的代码能够使用 C++14 编译器构建。</paragraph>
                <paragraph>以下规范并不适用于第三方依赖，虽然我们一般倾向于使用小型的库而不是大型的解决方案。另请参阅 <reference internal="True" refuri="best_practices_for_engine_contributors#doc-best-practices-for-engine-contributors"><inline classes="std std-ref">引擎贡献者的最佳实践</inline></reference>。</paragraph>
            </note>
            <seealso>
                <paragraph>格式化规范请参阅 <reference internal="True" refuri="code_style_guidelines#doc-code-style-guidelines"><inline classes="std std-ref">代码风格规范</inline></reference>。</paragraph>
            </seealso>
        </section>
        <section ids="disallowed-features" names="disallowed\ features 禁用的特性">
            <title>禁用的特性</title>
            <paragraph><strong>未在下方列出的特性都是允许的。</strong>鼓励尽可能使用 <literal>constexpr</literal> 变量和 <literal>nullptr</literal> 等特性。不过请你在使用现代 C++ 特性时保持保守。使用时应当为实际的目的服务，例如提升代码可读性或性能。</paragraph>
            <section ids="standard-template-library" names="standard\ template\ library 标准模板库">
                <title>标准模板库</title>
                <paragraph>我们不允许使用 <reference name="STL" refuri="https://en.wikipedia.org/wiki/Standard_Template_Library">STL</reference>，因为 Godot 提供了自有的数据类型（及其他工具）。详情请参阅 <reference internal="True" refuri="../../about/faq#doc-faq-why-not-stl"><inline classes="std std-ref">为什么 Godot 不使用 STL（标准模板库）？</inline></reference>。</paragraph>
                <paragraph>这意味着拉取请求中<strong>不应该</strong>使用 <literal>std::string</literal>、<literal>std::vector</literal> 等工具。请使用如下所述的 Godot 数据类型代替：</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>使用 <literal>String</literal> 代替 <literal>std::string</literal>。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>使用 <literal>Vector</literal> 代替 <literal>std::vector</literal>。某些情况下也可以用 <literal>LocalVector</literal> 代替（请先咨询核心开发者）。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>使用 <literal>Array</literal> 代替 <literal>std::array</literal>。</paragraph>
                    </list_item>
                </bullet_list>
                <note>
                    <paragraph>Godot 还有一个 List 数据类型（是个链表）。虽然 List 在代码库中有所使用，但一般性能都比 Vector 和 Array 等数据类型要差。因此，除非必要，否则应该避免在新代码中使用 List。</paragraph>
                </note>
            </section>
            <section ids="auto-keyword" names="auto\ keyword auto\ 关键字">
                <title><literal>auto</literal> 关键字</title>
                <paragraph>请勿使用 <literal>auto</literal> 关键字进行类型推导。虽然可以避免重复，但也可能导致令人费解的代码：</paragraph>
                <literal_block force="False" highlight_args="{}" language="cpp" linenos="False" xml:space="preserve">// Not so confusing...
auto button = memnew(Button);

// ...but what about this?
auto result = EditorNode::get_singleton()-&gt;get_complex_result();</literal_block>
                <paragraph>请记住，拉取请求的审核者一般是没有悬停文档的。大多数情况下，审核者是用 GitHub 的在线查看器审核拉取请求的。</paragraph>
                <paragraph>为了避免需要在难以抉择的极端情况上下定论的情况发生，我们选择禁止 <literal>auto</literal>，不允许特事特办。感谢你的理解。</paragraph>
            </section>
            <section ids="lambdas" names="lambdas lambda">
                <title>Lambda</title>
                <paragraph>应该保守地使用 lambda，需要在能让代码更快或者更简单的同时，不妨碍可读性。请在拉取请求中使用 lambda 前先询问。</paragraph>
            </section>
            <section ids="pragma-once-directive" names="#pragma\ once\ directive #pragma\ once\ 指令">
                <title><literal>#pragma once</literal> 指令</title>
                <paragraph>为了遵循现有风格，请在新文件中使用标准的基于 <literal>#ifdef</literal> 的包含保护，不要使用 <literal>#pragma once</literal>。</paragraph>
                <seealso>
                    <paragraph>C++ 和 Objective-C 文件中 include 的排序规范请参阅 <reference internal="True" refuri="code_style_guidelines#doc-code-style-guidelines-header-includes"><inline classes="std std-ref">头文件的引入</inline></reference>。</paragraph>
                </seealso>
                <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="翻译状态" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
            </section>
        </section>
    </section>
</document>

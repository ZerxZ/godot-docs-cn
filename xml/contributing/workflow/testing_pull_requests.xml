<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/contributing/workflow/testing_pull_requests.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <target refid="doc-testing-pull-requests"></target>
    <section ids="testing-pull-requests doc-testing-pull-requests" names="testing\ pull\ requests 测试拉取请求 doc_testing_pull_requests">
        <title>测试拉取请求</title>
        <paragraph>许多人正在GitHub上开发新功能或修复错误。为了帮助引擎开发，你可能会被要求用Godot构建来测试这些拉取请求，该构建包括有关拉取请求中的代码。</paragraph>
        <paragraph>感谢GitHub Actions，所有的 <reference name="拉取请求pull requests" refuri="https://github.com/godotengine/godot/pulls">拉取请求pull requests</reference> 都有持续构建。这些构建可以让你尝试拉取请求，而不需要从源代码编译任何东西。</paragraph>
        <section ids="downloading-a-compiled-build" names="downloading\ a\ compiled\ build 下载编译后的版本">
            <title>下载编译后的版本</title>
            <paragraph>你可以从GitHub Actions中下载拉取请求构建。由于只有已登录的用户可以直接从GitHub Actions下载构建，因此根据你是否有GitHub账户，程序会有所不同。</paragraph>
            <note>
                <paragraph>由于GitHub Actions的限制，构建只在拉取请求最后更新后的90天内可用。如果你仍然希望在本地尝试拉取请求，你可以 <reference internal="True" refid="doc-testing-pull-requests-compile"><inline classes="std std-ref">从源代码编译拉取请求</inline></reference> 分支来代替。</paragraph>
            </note>
            <section ids="if-you-have-a-github-account" names="if\ you\ have\ a\ github\ account 如果你有\ github\ 账户">
                <title>如果你有 GitHub 账户</title>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>打开拉取请求页面。点击页面顶部附近的 <strong>检查Checks</strong> 标签:</paragraph>
                    </list_item>
                </bullet_list>
                <image candidates="{'*': 'contributing/workflow/img/testing_pull_requests_access_checks.webp'}" uri="contributing/workflow/img/testing_pull_requests_access_checks.webp"></image>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>Click the <strong>Artifacts</strong> dropdown on the right of the page:</paragraph>
                    </list_item>
                </bullet_list>
                <image candidates="{'*': 'contributing/workflow/img/testing_pull_requests_checks_artifacts.webp'}" uri="contributing/workflow/img/testing_pull_requests_checks_artifacts.webp"></image>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>In the dropdown, click the artifact's name to download it. Remember to scroll
                            if you cannot see the name of the platform you're looking for:</paragraph>
                    </list_item>
                </bullet_list>
                <image candidates="{'*': 'contributing/workflow/img/testing_pull_requests_checks_artifacts_list.webp'}" uri="contributing/workflow/img/testing_pull_requests_checks_artifacts_list.webp"></image>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>Extract the ZIP archive then run the executable.
                            Note that Windows and macOS binaries are <strong>not</strong> code signed.
                            This means you may have to bypass a security warning before you can run the executable.
                            On Windows, if you frequently test pull request builds, it may be better to disable
                            Windows SmartScreen permanently in the Windows security settings.
                            On macOS, see <reference internal="True" refuri="../../tutorials/export/running_on_macos#doc-running-on-macos"><inline classes="std std-ref">在 macOS 上运行 Godot 应用</inline></reference> for instructions on bypassing Gatekeeper.</paragraph>
                    </list_item>
                </bullet_list>
            </section>
            <section ids="if-you-don-t-have-a-github-account" names="if\ you\ don't\ have\ a\ github\ account 如果你没有\ github\ 账户">
                <title>如果你没有 GitHub 账户</title>
                <paragraph>如果你没有GitHub账户，也无法注册，你可以使用第三方的 <reference name="nightly.link" refuri="https://nightly.link">nightly.link</reference> 服务来生成一个通用的下载链接。</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>打开拉取请求页面。点击页面顶部附近的 <emphasis>fork</emphasis> 分支名称:</paragraph>
                    </list_item>
                </bullet_list>
                <image candidates="{'*': 'contributing/workflow/img/testing_pull_requests_access_fork.png'}" uri="contributing/workflow/img/testing_pull_requests_access_fork.png"></image>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>Now that you are on the fork's branch page, click the <literal>.github</literal> folder at the top of the file list.
                            Then, click on the <literal>workflows</literal> folder (which is inside the <literal>.github</literal> folder).
                            Click the workflow file for the platform you wish to download artifacts for.
                            <emphasis>After</emphasis> clicking on the file (which opens the file view), copy the page URL from your browser's address bar.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Open the <reference name="nightly.link" refuri="https://nightly.link">nightly.link</reference> website and paste the URL you just copied
                            into the text field located below the heading <strong>Paste a GitHub link, get a nightly.link!</strong>.
                            After pasting the URL, click <strong>Get links</strong> on the right.
                            If the format of the URL you pasted is correct, you should be presented
                            with a page like this:</paragraph>
                    </list_item>
                </bullet_list>
                <image candidates="{'*': 'contributing/workflow/img/testing_pull_requests_nightly_link.png'}" uri="contributing/workflow/img/testing_pull_requests_nightly_link.png"></image>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>点击你想下载的工件的URL。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>提取ZIP档案，然后运行可执行文件。注意，Windows和macOS的二进制文件是没有代码签名的。这意味着你可能必须在运行可执行文件之前绕过安全警告。如果你经常测试拉取请求的构建，可能最好永久地禁用Windows SmartScreen或 <reference name="禁用macOS Gatekeeper" refuri="https://disable-gatekeeper.github.io/">禁用macOS Gatekeeper</reference> 。</paragraph>
                    </list_item>
                </bullet_list>
                <target refid="doc-testing-pull-requests-compile"></target>
            </section>
        </section>
        <section ids="compiling-a-pull-request-branch-from-source doc-testing-pull-requests-compile" names="compiling\ a\ pull\ request\ branch\ from\ source 从源编译拉取请求分支 doc_testing_pull_requests_compile">
            <title>从源编译拉取请求分支</title>
            <paragraph>对于最后一次更新超过90天的拉取请求，或者在Godot的GitHub Actions设置不支持的平台和配置上进行测试，可能需要采用这种方法。</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>打开拉取请求页面。点击页面顶部附近的 <emphasis>fork</emphasis> 分支名称:</paragraph>
                </list_item>
            </bullet_list>
            <image candidates="{'*': 'contributing/workflow/img/testing_pull_requests_access_fork.png'}" uri="contributing/workflow/img/testing_pull_requests_access_fork.png"></image>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>现在你在fork的分支页面上，点击页面右侧的绿色 <strong>Code</strong> 按钮，然后在下拉菜单中选择 <strong>下载ZIP</strong> :</paragraph>
                </list_item>
            </bullet_list>
            <image candidates="{'*': 'contributing/workflow/img/testing_pull_requests_fork_zip.png'}" uri="contributing/workflow/img/testing_pull_requests_fork_zip.png"></image>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>提取 ZIP 压缩包，按照你的操作系统的<reference internal="True" refuri="../development/compiling/index#toc-devel-compiling"><inline classes="std std-ref">编译</inline></reference>说明操作。</paragraph>
                </list_item>
            </bullet_list>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="翻译状态" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/tutorials/io/data_paths.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <target refid="doc-data-paths"></target>
    <section ids="file-paths-in-godot-projects doc-data-paths" names="file\ paths\ in\ godot\ projects godot\ 项目中的文件路径 doc_data_paths">
        <title>Godot 项目中的文件路径</title>
        <paragraph>本页面会讲解 Godot 项目中文件路径的工作原理。你会学到如何在项目中使用 <literal>res://</literal> 和 <literal>user://</literal> 标记来访问路径，以及 Godot 会在你的以及用户系统上的哪些位置存储项目和编辑器文件。</paragraph>
        <section ids="path-separators" names="path\ separators 路径分隔符">
            <title>路径分隔符</title>
            <paragraph>为了让支持跨平台更方便，Godot 使用 <strong>UNIX 风格的路径分隔符</strong>（正斜杠 <literal>/</literal>）。在所有平台上都可以使用，<strong>包括 Windows</strong>。</paragraph>
            <paragraph>在 Godot 里写的不是类似 <literal>C:\Projects\Game</literal> 的路径，而应该写 <literal>C:/Projects/Game</literal>。</paragraph>
            <paragraph>有些路径相关的方法也支持 Windows 风格的路径分隔符（反斜杠<literal>\</literal>），不过需要写两个（<literal>\\</literal>），因为 <literal>\</literal> 一般是用来进行字符转义的，有特殊含义。</paragraph>
            <paragraph>这样就能够处理其他 Windows 程序所返回的路径了。我们仍然建议在你自己的代码里只使用正斜杠，这样才能确保一切都能正常工作。</paragraph>
        </section>
        <section ids="accessing-files-in-the-project-folder-res" names="accessing\ files\ in\ the\ project\ folder\ (res://) 访问项目文件夹中的文件（res://）">
            <title>访问项目文件夹中的文件（<literal>res://</literal>）</title>
            <paragraph>只要文件夹中存在名叫 <literal>project.godot</literal> 的文本文件，即便是空文件，Godot 也会认为这个文件夹中包含了一个项目。包含这个文件的文件夹是你的项目的根文件夹。</paragraph>
            <paragraph>相对于这个文件夹的任何文件，都可以通过以 <literal>res://</literal> 开头的路径访问，这个前缀代表“资源”（resource）。例如，在代码中，你可以通过 <literal>res://character.png</literal> 来访问位于项目根文件夹的 <literal>character.png</literal> 图片。</paragraph>
        </section>
        <section ids="accessing-persistent-user-data-user" names="accessing\ persistent\ user\ data\ (user://) 访问持久化用户数据（user://）">
            <title>访问持久化用户数据（<literal>user://</literal>）</title>
            <paragraph>要存储持久化数据文件，比如玩家的存档、设置等，你会想要使用 <literal>user://</literal> 作为路径前缀，而不是 <literal>res://</literal>。这是因为游戏运行时，项目的文件系统很可能是只读的。</paragraph>
            <paragraph><literal>user://</literal> 前缀指向的是用户设备上的其他目录。与 <literal>res://</literal> 不同，即便在导出后的项目中，<literal>user://</literal> 指向的这个目录也会自动创建并且<emphasis>保证</emphasis>可写。</paragraph>
            <paragraph><literal>user://</literal> 文件夹的位置由“项目设置”中的配置决定：</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>默认情况下，<literal>user://</literal> 文件夹是在<reference internal="True" refid="doc-data-paths-editor-data-paths"><inline classes="std std-ref">编辑器数据路径</inline></reference>中创建的 <literal>app_userdata/[项目名称]</literal> 文件夹。使用这一默认值的目的是让原型和测试项目能够在 Godot 的数据文件夹中达到自包含。</paragraph>
                </list_item>
                <list_item>
                    <paragraph>如果“项目设置”中启用了 <reference internal="True" refuri="../../classes/class_projectsettings#class-projectsettings-property-application-config-use-custom-user-dir"><inline classes="std std-ref">application/config/use_custom_user_dir</inline></reference>，<literal>user://</literal> 文件夹会与 Godot 编辑器的数据路径<emphasis>同级</emphasis>，即程序数据的标准位置。</paragraph>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph>默认情况下，文件夹名称是从项目名称推导出来的，但可以使用 <reference internal="True" refuri="../../classes/class_projectsettings#class-projectsettings-property-application-config-custom-user-dir-name"><inline classes="std std-ref">application/config/custom_user_dir_name</inline></reference> 进行进一步的自定义。这个路径可以包含路径分隔符，那么比如你就可以把给定工作室的项目都分组到 <literal>工作室名称/游戏名称</literal> 这样的目录结构之下。</paragraph>
                        </list_item>
                    </bullet_list>
                </list_item>
            </bullet_list>
            <paragraph>在桌面平台上，<literal>user://</literal> 的实际目录路径为：</paragraph>
            <table>
                <tgroup cols="2">
                    <colspec colwidth="21"></colspec>
                    <colspec colwidth="78"></colspec>
                    <thead>
                        <row>
                            <entry>
                                <paragraph>类型</paragraph>
                            </entry>
                            <entry>
                                <paragraph>位置</paragraph>
                            </entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph>默认</paragraph>
                            </entry>
                            <entry>
                                <line_block>
                                    <line>Windows：<literal>%APPDATA%\Godot\app_userdata\[项目名称]</literal></line>
                                    <line>macOS：<literal>~/Library/Application Support/Godot/app_userdata/[项目名称]</literal></line>
                                    <line>Linux：<literal>~/.local/share/godot/app_userdata/[项目名称]</literal></line>
                                </line_block>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>自定义目录</paragraph>
                            </entry>
                            <entry>
                                <line_block>
                                    <line>Windows：<literal>%APPDATA%\[项目名称]</literal></line>
                                    <line>macOS：<literal>~/Library/Application Support/Godot/[项目名称]</literal></line>
                                    <line>Linux：<literal>~/.local/share/godot/[项目名称]</literal></line>
                                </line_block>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>自定义目录及名称</paragraph>
                            </entry>
                            <entry>
                                <line_block>
                                    <line>Windows：<literal>%APPDATA%\[自定义目录名称]</literal></line>
                                    <line>macOS：<literal>~/Library/Application Support/[自定义目录名称]</literal></line>
                                    <line>Linux：<literal>~/.local/share/[自定义目录名称]</literal></line>
                                </line_block>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
            <paragraph><literal>[项目名称]</literal> 基于的是项目设置中定义的应用名称，不过你可以使用<reference internal="True" refuri="../export/feature_tags#doc-feature-tags"><inline classes="std std-ref">特性标签</inline></reference>来为不同平台单独进行覆盖。</paragraph>
            <paragraph>在移动平台上，这个路径是与项目相关的，每个项目都不一样，并且出于安全原因无法被其他应用程序访问。</paragraph>
            <paragraph>在 HTML5 导出中，<literal>user://</literal> 会指向保存在设备的虚拟文件系统，这个文件系统使用 IndexedDB 实现。（仍然可以通过 <reference internal="True" refuri="../../classes/class_javascriptbridge#class-javascriptbridge"><inline classes="std std-ref">JavaScriptBridge</inline></reference> 与主文件系统交互。）</paragraph>
        </section>
        <section ids="converting-paths-to-absolute-paths-or-local-paths" names='converting\ paths\ to\ absolute\ paths\ or\ "local"\ paths 将路径转换为绝对路径或“本地”路径'>
            <title>将路径转换为绝对路径或“本地”路径</title>
            <paragraph>你可以使用 <reference internal="True" refuri="../../classes/class_projectsettings#class-projectsettings-method-globalize-path"><inline classes="std std-ref">ProjectSettings.globalize_path()</inline></reference> 将类似 <literal>res://path/to/file.txt</literal> 的本地路径转换为操作系统的绝对路径。例如，可以使用 <reference internal="True" refuri="../../classes/class_projectsettings#class-projectsettings-method-globalize-path"><inline classes="std std-ref">ProjectSettings.globalize_path()</inline></reference> 在操作系统的文件管理器中通过 <reference internal="True" refuri="../../classes/class_os#class-os-method-shell-open"><inline classes="std std-ref">OS.shell_open()</inline></reference> 打开“本地”路径，因为这个函数只接受原生操作系统路径。</paragraph>
            <paragraph>要将操作系统绝对路径转换为以 <literal>res://</literal> 或 <literal>user://</literal> 开头的“本地”路径，请使用 <reference internal="True" refuri="../../classes/class_projectsettings#class-projectsettings-method-localize-path"><inline classes="std std-ref">ProjectSettings.localize_path()</inline></reference>。只对指向项目根目录或者 <literal>user://</literal> 文件夹中的文件或文件夹有效。</paragraph>
            <target refid="doc-data-paths-editor-data-paths"></target>
        </section>
        <section ids="editor-data-paths doc-data-paths-editor-data-paths" names="editor\ data\ paths 编辑器数据路径 doc_data_paths_editor_data_paths">
            <title>编辑器数据路径</title>
            <paragraph>根据平台的不同，编辑器会使用不同的路径来存储编辑器数据、编辑器设置、缓存。默认情况下，这些路径是：</paragraph>
            <table>
                <tgroup cols="2">
                    <colspec colwidth="17"></colspec>
                    <colspec colwidth="51"></colspec>
                    <thead>
                        <row>
                            <entry>
                                <paragraph>类型</paragraph>
                            </entry>
                            <entry>
                                <paragraph>位置</paragraph>
                            </entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph>编辑器数据</paragraph>
                            </entry>
                            <entry>
                                <line_block>
                                    <line>Windows：<literal>%APPDATA%\Godot\</literal></line>
                                    <line>macOS：<literal>~/Library/Application Support/Godot/</literal></line>
                                    <line>Linux：<literal>~/.local/share/godot/</literal></line>
                                </line_block>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>编辑器设置</paragraph>
                            </entry>
                            <entry>
                                <line_block>
                                    <line>Windows：<literal>%APPDATA%\Godot\</literal></line>
                                    <line>macOS：<literal>~/Library/Application Support/Godot/</literal></line>
                                    <line>Linux：<literal>~/.config/godot/</literal></line>
                                </line_block>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>缓存</paragraph>
                            </entry>
                            <entry>
                                <line_block>
                                    <line>Windows：<literal>%TEMP%\Godot\</literal></line>
                                    <line>macOS：<literal>~/Library/Caches/Godot/</literal></line>
                                    <line>Linux：<literal>~/.cache/godot/</literal></line>
                                </line_block>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><strong>编辑器数据</strong>包含导出模板和具体项目数据。</paragraph>
                </list_item>
                <list_item>
                    <paragraph><strong>编辑器设置</strong>包含主编辑器设置的配置，以及各种针对用户的自定义信息（编辑器布局、功能配置、脚本模板等）。</paragraph>
                </list_item>
                <list_item>
                    <paragraph><strong>缓存</strong>包含编辑器生成的数据，或者临时存储的数据。当 Godot 关闭时可以放心地移除。</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>Godot 在所有平台上都遵守 <reference name="XDG 基本目录规范" refuri="https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html">XDG 基本目录规范</reference>。可以根据规范通过覆盖环境变量来更改编辑器和项目的数据路径。</paragraph>
            <note>
                <paragraph>如果你使用的是 <reference name="Flatpak 打包的 Godot" refuri="https://flathub.org/apps/details/org.godotengine.Godot">Flatpak 打包的 Godot</reference>，编辑器数据路径将位于 <literal>~/.var/app/org.godotengine.godot/</literal> 的子文件夹中。</paragraph>
            </note>
            <target refid="doc-data-paths-self-contained-mode"></target>
            <section ids="self-contained-mode doc-data-paths-self-contained-mode" names="self-contained\ mode 自包含模式 doc_data_paths_self_contained_mode">
                <title>自包含模式</title>
                <paragraph>如果你在编辑器二进制文件所在的目录下创建了名为 <literal>._sc_</literal> 或 <literal>_sc_</literal> 的文件（macOS 编辑器 .app 捆绑包则是在 <title_reference>MacOS/Contents/</title_reference> 下），Godot 就会开启<emphasis>自包含模式</emphasis>。这种模式下，Godot 会将所有编辑器数据、设置、缓存都写入一个与编辑器二进制文件位于同一目录中的名为 <literal>editor_data/</literal> 的目录。你可以用它来创建便携安装的编辑器。</paragraph>
                <paragraph><reference name="Steam 版本的 Godot" refuri="https://store.steampowered.com/app/404790/">Steam 版本的 Godot</reference> 默认使用自包含模式。</paragraph>
                <note>
                    <paragraph>导出后的项目目前不支持自包含模式。要对相对于可执行文件路径的文件进行读写，请使用 <reference internal="True" refuri="../../classes/class_os#class-os-method-get-executable-path"><inline classes="std std-ref">OS.get_executable_path()</inline></reference>。注意，只有可执行文件位于可写的位置时，才能够对可执行文件路径上的文件进行写操作（即<strong>不在</strong> Program Files 或者其他普通用户只读的目录中）。</paragraph>
                </note>
                <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="翻译状态" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
            </section>
        </section>
    </section>
</document>

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/tutorials/editor/command_line_tutorial.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <target refid="doc-command-line-tutorial"></target>
    <section ids="command-line-tutorial doc-command-line-tutorial" names="command\ line\ tutorial 命令行教程 doc_command_line_tutorial">
        <title>命令行教程</title>
        <paragraph>一些开发人员喜欢广泛使用命令行.Godot被设计为对他们友好, 所以这里是完全用命令行工作的步骤. 由于引擎几乎不依赖外部库, 因此初始化时间非常快, 使其适合此工作流程.</paragraph>
        <note>
            <paragraph>在 Windows 和 Linux 上，你可以通过指定其相对或绝对路径在终端中运行 Godot 可执行文件。</paragraph>
            <paragraph>在 macOS 上，由于 Godot 包含在 <literal>.app</literal> 包中，它是一个 <emphasis>文件夹</emphasis>，而不是文件，因此运行过程有所不同。要从 macOS 的终端运行 Godot 可执行文件，你必须 <literal>cd</literal> 到 Godot 应用程序包所在的文件夹，然后运行 <literal>Godot.app/Contents/MacOS/Godot</literal>，并在后面加上相关命令行参数。如果你把应用包从 <literal>Godot</literal> 改名为其他名称，则需相应地编辑这个命令行。</paragraph>
        </note>
        <section ids="command-line-reference" names="command\ line\ reference 命令行参考">
            <title>命令行参考</title>
            <substitution_definition names="release"><image alt="release" candidates="{'*': 'tutorials/editor/img/template_release.svg'}" uri="tutorials/editor/img/template_release.svg"></image></substitution_definition>
            <substitution_definition names="debug"><image alt="debug" candidates="{'*': 'tutorials/editor/img/template_debug.svg'}" uri="tutorials/editor/img/template_debug.svg"></image></substitution_definition>
            <substitution_definition names="editor"><image alt="editor" candidates="{'*': 'tutorials/editor/img/editor.svg'}" uri="tutorials/editor/img/editor.svg"></image></substitution_definition>
            <paragraph><strong>图例解释</strong></paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><image alt="release" candidates="{'*': 'tutorials/editor/img/template_release.svg'}" uri="tutorials/editor/img/template_release.svg"></image> 仅适用于编辑器构建、调试导出模板和发布导出模板中。</paragraph>
                </list_item>
                <list_item>
                    <paragraph><image alt="debug" candidates="{'*': 'tutorials/editor/img/template_debug.svg'}" uri="tutorials/editor/img/template_debug.svg"></image> 仅适用于编辑器构建和调试导出模板。</paragraph>
                </list_item>
                <list_item>
                    <paragraph><image alt="editor" candidates="{'*': 'tutorials/editor/img/editor.svg'}" uri="tutorials/editor/img/editor.svg"></image> 仅适用于编辑器构建。</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>请注意，未知的命令行参数不会产生任何影响。当命令行中使用了不存在的构建类型时，引擎不会发出警告。</paragraph>
            <paragraph><strong>常规选项</strong></paragraph>
            <table>
                <tgroup cols="2">
                    <colspec colwidth="28"></colspec>
                    <colspec colwidth="77"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph>命令</paragraph>
                            </entry>
                            <entry>
                                <paragraph>描述</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>-h</literal>, <literal>--help</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><image alt="release" candidates="{'*': 'tutorials/editor/img/template_release.svg'}" uri="tutorials/editor/img/template_release.svg"></image> 显示命令行选项列表。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--version</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><image alt="release" candidates="{'*': 'tutorials/editor/img/template_release.svg'}" uri="tutorials/editor/img/template_release.svg"></image> 显示版本字符串。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>-v</literal>, <literal>--verbose</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><image alt="release" candidates="{'*': 'tutorials/editor/img/template_release.svg'}" uri="tutorials/editor/img/template_release.svg"></image> 使用冗长标准输出模式。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>-q</literal>, <literal>--quiet</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><image alt="release" candidates="{'*': 'tutorials/editor/img/template_release.svg'}" uri="tutorials/editor/img/template_release.svg"></image> 安静模式，静默标准输出的信息。但错误仍然会显示。</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
            <paragraph><strong>运行选项</strong></paragraph>
            <table>
                <tgroup cols="2">
                    <colspec colwidth="42"></colspec>
                    <colspec colwidth="158"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph>命令</paragraph>
                            </entry>
                            <entry>
                                <paragraph>描述</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--</literal>, <literal>++</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><image alt="release" candidates="{'*': 'tutorials/editor/img/template_release.svg'}" uri="tutorials/editor/img/template_release.svg"></image> 用户提供参数时使用的分隔符。引擎不会使用这些参数，但可以通过 <literal>OS.get_cmdline_user_args()</literal> 读取到。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>-e</literal>, <literal>--editor</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><image alt="editor" candidates="{'*': 'tutorials/editor/img/editor.svg'}" uri="tutorials/editor/img/editor.svg"></image> 启动编辑器而不是运行场景。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>-p</literal>, <literal>--project-manager</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><image alt="editor" candidates="{'*': 'tutorials/editor/img/editor.svg'}" uri="tutorials/editor/img/editor.svg"></image> 即使已经自动检测到项目，仍然启动项目管理器。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--debug-server &lt;uri&gt;</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><image alt="editor" candidates="{'*': 'tutorials/editor/img/editor.svg'}" uri="tutorials/editor/img/editor.svg"></image> 启动编辑器调试服务器（ <literal>&lt;protocol&gt;://&lt;host/IP&gt;[:&lt;port&gt;]</literal>，例如， <literal>tcp://127.0.0.1:6007</literal>）</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--quit</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph>第一次迭代后退出.</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--quit-after</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><image alt="release" candidates="{'*': 'tutorials/editor/img/template_release.svg'}" uri="tutorials/editor/img/template_release.svg"></image> 指定迭代次数后退出。设置为 0 则禁用。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>-l &lt;locale&gt;</literal>, <literal>--language &lt;locale&gt;</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><image alt="release" candidates="{'*': 'tutorials/editor/img/template_release.svg'}" uri="tutorials/editor/img/template_release.svg"></image> 使用特定本地语言。 <literal>&lt;locale&gt;</literal> 格式为 <literal>language_Script_COUNTRY_VARIANT</literal>，其中 language 为小写的 2 或 3 个字母组成的语言代码，其余为可选项。详情请参见 <reference internal="True" refuri="../i18n/locales#doc-locales"><inline classes="std std-ref">区域设置代码</inline></reference>。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--path &lt;目录&gt;</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><image alt="release" candidates="{'*': 'tutorials/editor/img/template_release.svg'}" uri="tutorials/editor/img/template_release.svg"></image> 项目的路径（&lt;directory&gt; 目录中必须包含一个“project.godot”文件）。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>-u</literal>, <literal>--upwards</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><image alt="release" candidates="{'*': 'tutorials/editor/img/template_release.svg'}" uri="tutorials/editor/img/template_release.svg"></image> 向上扫描文件夹中的“project.godot”文件。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--main-pack &lt;file&gt;</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><image alt="release" candidates="{'*': 'tutorials/editor/img/template_release.svg'}" uri="tutorials/editor/img/template_release.svg"></image> 要加载的包（.pck）文件的路径。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--render-thread &lt;模式&gt;</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><image alt="release" candidates="{'*': 'tutorials/editor/img/template_release.svg'}" uri="tutorials/editor/img/template_release.svg"></image> 渲染线程模式（'unsafe'、'safe'、'separate'）。详见<reference internal="True" refuri="../../classes/class_projectsettings#class-projectsettings-property-rendering-driver-threads-thread-model"><inline classes="std std-ref">线程模型</inline></reference>。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--remote-fs &lt;地址&gt;</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><image alt="release" candidates="{'*': 'tutorials/editor/img/template_release.svg'}" uri="tutorials/editor/img/template_release.svg"></image> 远程文件系统（<literal>&lt;主机名/IP&gt;[:&lt;端口号&gt;]</literal> 地址）。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--remote-fs-password &lt;password&gt;</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><image alt="release" candidates="{'*': 'tutorials/editor/img/template_release.svg'}" uri="tutorials/editor/img/template_release.svg"></image> 远程文件系统的密码。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--audio-driver &lt;驱动&gt;</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><image alt="release" candidates="{'*': 'tutorials/editor/img/template_release.svg'}" uri="tutorials/editor/img/template_release.svg"></image> 音频驱动。使用 <literal>--help</literal> 来显示可用驱动列表。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--display-driver &lt;driver&gt;</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph>视频驱动。使用 <literal>--help</literal> 来显示可用驱动列表。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--rendering-method &lt;renderer&gt;</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><image alt="release" candidates="{'*': 'tutorials/editor/img/template_release.svg'}" uri="tutorials/editor/img/template_release.svg"></image> 渲染器名称。需要驱动程序支持。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--rendering-driver &lt;driver&gt;</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph>视频驱动。使用 <literal>--help</literal> 来显示可用驱动列表。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--gpu-index &lt;设备索引&gt;</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><image alt="release" candidates="{'*': 'tutorials/editor/img/template_release.svg'}" uri="tutorials/editor/img/template_release.svg"></image> 使用特定 GPU（使用 <literal>--verbose</literal> 运行以获取可用设备列表）。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--text-driver &lt;driver&gt;</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><image alt="release" candidates="{'*': 'tutorials/editor/img/template_release.svg'}" uri="tutorials/editor/img/template_release.svg"></image> 文本驱动程序（字体、BiDi、整形）。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--tablet-driver &lt;driver&gt;</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><image alt="release" candidates="{'*': 'tutorials/editor/img/template_release.svg'}" uri="tutorials/editor/img/template_release.svg"></image> 手写板输入驱动程序。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--headless</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><image alt="release" candidates="{'*': 'tutorials/editor/img/template_release.svg'}" uri="tutorials/editor/img/template_release.svg"></image> 启用无头模式（<title_reference>--display-driver headless --audio-driver Dummy</title_reference>）。适用于服务器和 <literal>--script</literal>。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--write-movie &lt;file&gt;</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><image alt="release" candidates="{'*': 'tutorials/editor/img/template_release.svg'}" uri="tutorials/editor/img/template_release.svg"></image> 以写入影片（通常以 .avi 或 .png 为扩展名）的方式运行引擎。 <literal>-fixed-fps</literal> 在启用时是强制的，但可以用来改变影片的 FPS。 <literal>disable-vsync</literal> 可以加快影片的写入速度，但会增加交互难度。 <literal>--quit-after</literal> 可以用来指定要写入的帧数。</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
            <paragraph><strong>显示选项</strong></paragraph>
            <table>
                <tgroup cols="2">
                    <colspec colwidth="36"></colspec>
                    <colspec colwidth="76"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph>命令</paragraph>
                            </entry>
                            <entry>
                                <paragraph>描述</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>-f</literal>, <literal>--fullscreen</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph>尝试使用全屏模式.</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>-m</literal>, <literal>--maximized</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph>尝试最大化窗口。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>-w</literal>, <literal>--windowed</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph>使用窗口模式。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>-t</literal>, <literal>--always-on-top</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph>请求一个置顶窗口.</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--resolution &lt;W&gt;x&lt;H&gt;</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph>窗口分辨率。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--position &lt;X&gt;,&lt;Y&gt;</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph>指定屏幕位置.</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--screen &lt;N&gt;</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph>请求窗口分辨率。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--single-window</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><image alt="release" candidates="{'*': 'tutorials/editor/img/template_release.svg'}" uri="tutorials/editor/img/template_release.svg"></image> 使用单个窗口（没有单独的子窗口）。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--xr-mode &lt;mode&gt;</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><image alt="release" candidates="{'*': 'tutorials/editor/img/template_release.svg'}" uri="tutorials/editor/img/template_release.svg"></image> 选择 XR 模式（"默认"、"关闭"、"打开"）。</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
            <paragraph><strong>调试选项</strong></paragraph>
            <table>
                <tgroup cols="2">
                    <colspec colwidth="32"></colspec>
                    <colspec colwidth="113"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph>命令</paragraph>
                            </entry>
                            <entry>
                                <paragraph>描述</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>-d</literal>, <literal>--debug</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph>调试(本地 stdout 调试器)。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>-b</literal>, <literal>--breakpoints</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><image alt="release" candidates="{'*': 'tutorials/editor/img/template_release.svg'}" uri="tutorials/editor/img/template_release.svg"></image> 断点列表，形式为英文逗号分隔的“源文件::行号”，不带空格（空格用 <literal>%20</literal> 代替）。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--profiling</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph>在脚本调试器中启用分析。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--gpu-profile</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><image alt="release" candidates="{'*': 'tutorials/editor/img/template_release.svg'}" uri="tutorials/editor/img/template_release.svg"></image> 显示帧渲染过程中耗时最长任务的 GPU 分析。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--gpu-validation</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><image alt="release" candidates="{'*': 'tutorials/editor/img/template_release.svg'}" uri="tutorials/editor/img/template_release.svg"></image> 启用图形 API <reference internal="True" refuri="../../contributing/development/debugging/vulkan/vulkan_validation_layers#doc-vulkan-validation-layers"><inline classes="std std-ref">验证层</inline></reference> 以进行调试。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--gpu-abort</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><image alt="debug" candidates="{'*': 'tutorials/editor/img/template_debug.svg'}" uri="tutorials/editor/img/template_debug.svg"></image> 在 GPU 出错时终止（通常是验证层错误），这有助于在系统冻结时发现问题。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--remote-debug &lt;uri&gt;</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><image alt="release" candidates="{'*': 'tutorials/editor/img/template_release.svg'}" uri="tutorials/editor/img/template_release.svg"></image> 远程调试（ <literal>&lt;protocol&gt;://&lt;host/IP&gt;[:&lt;port&gt;]</literal>，例如 <literal>tcp://127.0.0.1:6007</literal>）。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--single-threaded-scene</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><image alt="release" candidates="{'*': 'tutorials/editor/img/template_release.svg'}" uri="tutorials/editor/img/template_release.svg"></image> 场景树以单线程模式运行。子线程组被禁用，在主线程上运行。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--debug-collisions</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph>运行场景时显示碰撞框形状。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--debug-paths</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph>运行场景时显示路径。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--debug-navigation</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph>运行场景时显示多边形导航。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--debug-avoidance</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph>当运行场景时显示多边形导航.</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--debug-stringnames</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><image alt="debug" candidates="{'*': 'tutorials/editor/img/template_debug.svg'}" uri="tutorials/editor/img/template_debug.svg"></image> 当引擎退出时，将所有 StringName 分配打印到 stdout。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--frame-delay &lt;ms&gt;</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><image alt="release" candidates="{'*': 'tutorials/editor/img/template_release.svg'}" uri="tutorials/editor/img/template_release.svg"></image> 模拟高 CPU 负载（每帧延迟 &lt;ms&gt; 毫秒）。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--time-scale &lt;缩放&gt;</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><image alt="release" candidates="{'*': 'tutorials/editor/img/template_release.svg'}" uri="tutorials/editor/img/template_release.svg"></image> 强制时间缩放（值越大速度越快，1.0是正常速度）。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--disable-vsync</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><image alt="release" candidates="{'*': 'tutorials/editor/img/template_release.svg'}" uri="tutorials/editor/img/template_release.svg"></image> 即使在项目设置中启用，也会强制禁用垂直同步。不会覆盖驱动程序级的 V-Sync 执行。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--disable-render-loop</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><image alt="release" candidates="{'*': 'tutorials/editor/img/template_release.svg'}" uri="tutorials/editor/img/template_release.svg"></image> 禁用渲染循环，以便仅在从脚本显式调用时才进行渲染。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--disable-crash-handler</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><image alt="release" candidates="{'*': 'tutorials/editor/img/template_release.svg'}" uri="tutorials/editor/img/template_release.svg"></image> 当平台代码支持时，禁用崩溃处理程序。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--fixed-fps &lt;帧率&gt;</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph>每秒强制固定数量的帧。此设置禁用实时同步。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--delta-smoothing &lt;启用&gt;</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><image alt="release" candidates="{'*': 'tutorials/editor/img/template_release.svg'}" uri="tutorials/editor/img/template_release.svg"></image> 启用或禁用帧间隔平滑（"启用"、"禁用"）。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--print-fps</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><image alt="release" candidates="{'*': 'tutorials/editor/img/template_release.svg'}" uri="tutorials/editor/img/template_release.svg"></image> 将每秒帧数打印到标准输出上。</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
            <paragraph><strong>单独的工具</strong></paragraph>
            <table>
                <tgroup cols="2">
                    <colspec colwidth="66"></colspec>
                    <colspec colwidth="153"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph>命令</paragraph>
                            </entry>
                            <entry>
                                <paragraph>描述</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>-s</literal>, <literal>--script &lt;script&gt;</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><image alt="release" candidates="{'*': 'tutorials/editor/img/template_release.svg'}" uri="tutorials/editor/img/template_release.svg"></image> 运行脚本。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--check-only</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><image alt="release" candidates="{'*': 'tutorials/editor/img/template_release.svg'}" uri="tutorials/editor/img/template_release.svg"></image> 仅解析错误并退出（与 <literal>--script</literal> 一起使用）。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--export-release &lt;preset&gt; &lt;path&gt;</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><image alt="editor" candidates="{'*': 'tutorials/editor/img/editor.svg'}" uri="tutorials/editor/img/editor.svg"></image> 使用给定的预设和匹配的发布模板导出项目。预设名称应与 export_presets.cfg 中定义的名称一致。 <literal>&lt;路径&gt;</literal> 应为项目目录的绝对或相对路径，并包含二进制文件的文件名（例如 “builds/game.exe”）。并且目标目录应该存在。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--export-debug &lt;preset&gt; &lt;path&gt;</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><image alt="editor" candidates="{'*': 'tutorials/editor/img/editor.svg'}" uri="tutorials/editor/img/editor.svg"></image> 与 <literal>--export-release</literal> 类似，但使用调试模板。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--export-pack &lt;预设&gt; &lt;路径&gt;</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><image alt="editor" candidates="{'*': 'tutorials/editor/img/editor.svg'}" uri="tutorials/editor/img/editor.svg"></image> 与 <literal>--export-release</literal> 类似，但只会以预设参数导出游戏包。<literal>&lt;path&gt;</literal> 的扩展名决定它是 PCK 还是 ZIP 格式。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--convert-3to4 [&lt;最大文件kb值&gt;] [&lt;最大行数&gt;]</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><image alt="editor" candidates="{'*': 'tutorials/editor/img/editor.svg'}" uri="tutorials/editor/img/editor.svg"></image> 将项目从 Godot 3.x 转换到 Godot 4.x。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--validate-conversion-3to4 [&lt;最大文件kb值&gt;] [&lt;最大行数&gt;]</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><image alt="editor" candidates="{'*': 'tutorials/editor/img/editor.svg'}" uri="tutorials/editor/img/editor.svg"></image> 显示把项目从 Godot 3.x 转换到 Godot 4.x 时将重命名哪些元素。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--doctool [&lt;path&gt;]</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><image alt="editor" candidates="{'*': 'tutorials/editor/img/editor.svg'}" uri="tutorials/editor/img/editor.svg"></image> 将引擎 API 参考以 XML 格式转储到给定的 <literal>&lt;path&gt;</literal> 中，如果路径已有文件则进行合并。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--no-docbase</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><image alt="editor" candidates="{'*': 'tutorials/editor/img/editor.svg'}" uri="tutorials/editor/img/editor.svg"></image> 禁止转储基本类型（与 <literal>--doctool</literal> 一起使用）。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--gdscript-docs &lt;路径&gt;</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><image alt="editor" candidates="{'*': 'tutorials/editor/img/editor.svg'}" uri="tutorials/editor/img/editor.svg"></image> 不转储引擎 API，而是从 &lt;路径&gt; 找到 GDScript 文件（与 <literal>--doctool</literal> 一起使用）的内联文档生成 API 引用。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--build-solutions</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><image alt="editor" candidates="{'*': 'tutorials/editor/img/editor.svg'}" uri="tutorials/editor/img/editor.svg"></image> 构建脚本解决方案（例如 C# 项目）。隐含 <literal>--editor</literal> 并需要一个有效的项目来编辑。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--dump-gdextension-interface</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><image alt="editor" candidates="{'*': 'tutorials/editor/img/editor.svg'}" uri="tutorials/editor/img/editor.svg"></image> 在当前文件夹下生成 GDExtension 头文件 “gdnative_interface.h”。该文件是实现 GDExtension 所需的基础文件。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--dump-extension-api</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><image alt="editor" candidates="{'*': 'tutorials/editor/img/editor.svg'}" uri="tutorials/editor/img/editor.svg"></image> 在当前文件夹中生成 GDExtension 绑定的 Godot API ，其名为“extension_api.json” 的JSON 转储。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--validate-extension-api &lt;路径&gt;</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><image alt="editor" candidates="{'*': 'tutorials/editor/img/editor.svg'}" uri="tutorials/editor/img/editor.svg"></image> 验证从上一版本引擎转储（使用上述选项）的扩展 API 文件，以确保 API 的兼容性。如果检测到不兼容或错误，返回代码将为非零。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--benchmark</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><image alt="editor" candidates="{'*': 'tutorials/editor/img/editor.svg'}" uri="tutorials/editor/img/editor.svg"></image> 对运行时间进行基准测试，并将其打印到控制台。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>--benchmark-file &lt;路径&gt;</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><image alt="editor" candidates="{'*': 'tutorials/editor/img/editor.svg'}" uri="tutorials/editor/img/editor.svg"></image> 对运行时间进行基准测试，并以 JSON 格式保存到指定文件。路径应为绝对路径。</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section ids="path" names="path 路径">
            <title>路径</title>
            <paragraph>建议将 Godot 编辑器的二进制文件放在 <literal>PATH</literal> 环境变量中，这样就可以通过在任何地方键入 <literal>godot</literal> 来轻松地执行。在 Linux 上，就可以将 Godot 二进制文件放在 <literal>/usr/local/bin</literal> 中，请确保文件名为 <literal>godot</literal>（注意大小写）。</paragraph>
            <paragraph>要在 Windows 或 macOS 上轻松实现这一目标，可以使用 <reference name="Scoop" refuri="https://scoop.sh">Scoop</reference>（在 Windows 上）或 <reference name="Homebrew" refuri="https://brew.sh">Homebrew</reference>（在 macOS 上）安装 Godot。这将自动在 <literal>PATH</literal> 中提供已安装的 Godot 副本：</paragraph>
            <container classes="sphinx-tabs" type="tab-element">
                <div aria-label="Tabbed content" role="tablist">
                    <button aria-controls="panel-0-V2luZG93cw==" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-0-V2luZG93cw==" name="V2luZG93cw==" role="tab" tabindex="0">Windows</button>
                    <button aria-controls="panel-0-bWFjT1M=" aria-selected="false" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-0-bWFjT1M=" name="bWFjT1M=" role="tab" tabindex="-1">macOS</button>
                </div>
                <div aria-labelledby="tab-0-V2luZG93cw==" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-0-V2luZG93cw==" name="V2luZG93cw==" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="sh" linenos="False" xml:space="preserve"># Standard editor:
scoop install godot

# Editor with C# support (will be available as `godot-mono` in `PATH`):
scoop install godot-mono</literal_block>
                </div>
                <div aria-labelledby="tab-0-bWFjT1M=" classes="sphinx-tabs-panel code-tab group-tab" hidden="true" ids="panel-0-bWFjT1M=" name="bWFjT1M=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="sh" linenos="False" xml:space="preserve"># Standard editor:
brew install godot

# Editor with C# support (will be available as `godot-mono` in `PATH`):
brew install godot-mono</literal_block>
                </div>
            </container>
        </section>
        <section ids="setting-the-project-path" names="setting\ the\ project\ path 设置项目路径">
            <title>设置项目路径</title>
            <paragraph>根据Godot二进制文件的位置以及当前的工作目录, 你可能需要设置项目的路径, 以下任何命令才能正常工作.</paragraph>
            <paragraph>在运行编辑器时，这可以通过将项目的 <literal>project.godot</literal> 文件路径作为第一个参数来完成, 如下所示:</paragraph>
            <literal_block force="False" language="shell" linenos="False" xml:space="preserve">godot path_to_your_project/project.godot [other] [commands] [and] [args]</literal_block>
            <paragraph>对于所有的指令，这可以通过使用 <literal>--path</literal> 参数来完成:</paragraph>
            <literal_block force="False" language="shell" linenos="False" xml:space="preserve">godot --path path_to_your_project [other] [commands] [and] [args]</literal_block>
            <paragraph>例如, 用于导出游戏的完整命令(如下所述)可能如下所示:</paragraph>
            <literal_block force="False" language="shell" linenos="False" xml:space="preserve">godot --headless --path path_to_your_project --export-release my_export_preset_name game.exe</literal_block>
            <paragraph>当从你的项目都子目录启动时，使用 <literal>--upwards</literal> 参数使 Godot 可以通过递归搜索父目录来自动地找到 <literal>project.godot</literal> 文件。</paragraph>
            <paragraph>举个例子，当你的工作目录在相同的路径下时，运行一个嵌套在子目录中场景（如下所述）的命令可能看起来像这样：</paragraph>
            <literal_block force="False" language="shell" linenos="False" xml:space="preserve">godot --upwards nested_scene.tscn</literal_block>
            <comment xml:space="preserve"></comment>
        </section>
        <section ids="creating-a-project" names="creating\ a\ project 创建一个项目">
            <title>创建一个项目</title>
            <paragraph>要通过命令行创建项目，可以将 shell 导航至所需位置并创建 <literal>project.godot</literal> 文件。</paragraph>
            <literal_block force="False" language="shell" linenos="False" xml:space="preserve">mkdir newgame
cd newgame
touch project.godot</literal_block>
            <paragraph>现在可以使用Godot打开该项目.</paragraph>
        </section>
        <section ids="running-the-editor" names="running\ the\ editor 运行编辑器">
            <title>运行编辑器</title>
            <paragraph>通过使用 <literal>-e</literal> 参数启动 Godot 来运行编辑器。必须在项目目录内，或按照前文所述的方法设置项目路径，才能完成此操作，否则该命令将被忽略并显示项目管理器。</paragraph>
            <literal_block force="False" language="shell" linenos="False" xml:space="preserve">godot -e</literal_block>
            <paragraph>在传入 <literal>project.godot</literal> 文件的完整路径时，参数 <literal>-e</literal> 可以被省略。</paragraph>
            <paragraph>如果已经创建并保存了场景, 则可以稍后以该场景作为参数运行相同的代码来对其进行编辑.</paragraph>
            <literal_block force="False" language="shell" linenos="False" xml:space="preserve">godot -e scene.tscn</literal_block>
        </section>
        <section ids="erasing-a-scene" names="erasing\ a\ scene 删除一个场景">
            <title>删除一个场景</title>
            <paragraph>Godot对你的文件系统非常友好，不会创建额外的元数据文件。你可以使用 <literal>rm</literal> 来删除场景文件，但是在这之前需要确定该场景被引用的情况，否则再打开该项目时会抛出错误。</paragraph>
            <literal_block force="False" language="shell" linenos="False" xml:space="preserve">rm scene.tscn</literal_block>
        </section>
        <section ids="running-the-game" names="running\ the\ game 运行游戏">
            <title>运行游戏</title>
            <paragraph>要运行游戏，只需按前述方法在项目目录中或带项目路径执行 Godot 即可。</paragraph>
            <literal_block force="False" language="shell" linenos="False" xml:space="preserve">godot</literal_block>
            <paragraph>请注意，传入 <literal>project.godot</literal> 文件将总是运行编辑器，而不会运行游戏。</paragraph>
            <paragraph>当需要测试特定场景时, 将该场景传递给命令行.</paragraph>
            <literal_block force="False" language="shell" linenos="False" xml:space="preserve">godot scene.tscn</literal_block>
        </section>
        <section ids="debugging" names="debugging 调试">
            <title>调试</title>
            <paragraph>捕获命令行中的错误可能是一项艰巨的任务，因为它们滚动得很快。为此，使用 <literal>-d</literal> 来启动命令行调试器。它适用于运行游戏或单个场景。</paragraph>
            <literal_block force="False" language="shell" linenos="False" xml:space="preserve">godot -d</literal_block>
            <literal_block force="False" language="shell" linenos="False" xml:space="preserve">godot -d scene.tscn</literal_block>
            <target refid="doc-command-line-tutorial-exporting"></target>
        </section>
        <section ids="exporting doc-command-line-tutorial-exporting" names="exporting 导出 doc_command_line_tutorial_exporting">
            <title>导出</title>
            <paragraph>也支持从命令行导出项目。这对持续集成设置特别有用。</paragraph>
            <note>
                <paragraph>在没有 GPU 访问权限的平台上（如持续集成），必须使用 <literal>--headless</literal> 命令行参数。在有 GPU 访问权限的平台上， <literal>--headless</literal> 可阻止在导出项目时生成窗口。</paragraph>
            </note>
            <literal_block force="False" language="shell" linenos="False" xml:space="preserve"># `godot` must be a Godot editor binary, not an export template.
# Also, export templates must be installed for the editor
# (or a valid custom export template must be defined in the export preset).
godot --headless --export-release "Linux/X11" /var/builds/project
godot --headless --export-release Android /var/builds/project.apk</literal_block>
            <paragraph>预设名称必须与项目的 <literal>export_presets.cfg</literal> 文件中定义的导出预设名称一致. 如果预设名称包含空格或特殊字符(如 "Windows Desktop"), 必须用引号引起来.</paragraph>
            <paragraph>要导出游戏的调试版本，请使用 <literal>--export-debug</literal> 开关，而不是 <literal>--export-release</literal>。它们的参数和用法是相同的。</paragraph>
            <paragraph>要仅导出 PCK 文件，请使用“--export-pack”选项，后跟预设名称和输出路径以及文件扩展名，而不是“--export-release”或“--export” -调试``。 输出路径扩展名决定包的格式：PCK 或ZIP。</paragraph>
            <warning>
                <paragraph>当指定相对路径作为“--export-release”、“--export-debug”或“--export-pack”的路径时，该路径将相对于包含“ <title_reference>project.godot`</title_reference> 文件， 而，不，是，相对于当前工作目录。</paragraph>
            </warning>
        </section>
        <section ids="running-a-script" names="running\ a\ script 运行脚本">
            <title>运行脚本</title>
            <paragraph>可以从命令行运行 <literal>.gd</literal> 脚本。此功能在大型项目中特别有用，例如，用于资产的批量转换或自定义导入/导出。</paragraph>
            <paragraph>该脚本必须继承自 <literal>SceneTree</literal> 或 <literal>MainLoop</literal>。</paragraph>
            <paragraph>下面的 <literal>sayhello.gd</literal> 是一个简单的用法示例：</paragraph>
            <literal_block force="False" highlight_args="{}" language="python" linenos="False" xml:space="preserve">#!/usr/bin/env -S godot -s
extends SceneTree

func _init():
    print("Hello!")
    quit()</literal_block>
            <paragraph>以及如何运行它：</paragraph>
            <literal_block force="False" language="shell" linenos="False" xml:space="preserve"># Prints "Hello!" to standard output.
godot -s sayhello.gd</literal_block>
            <paragraph>如果路径中不存在 <literal>project.godot</literal>，则假定当前路径为当前工作目录（除非指定了 <literal>--path</literal>）。</paragraph>
            <paragraph>以上 <literal>sayhello.gd</literal> 的第一行通常被称为 <emphasis>shebang</emphasis>。如果 Godot 二进制文件在你的 <literal>PATH</literal> 中，名为 <literal>godot</literal>，则它允许你在现代 Linux 发行版以及 macOS 中按以下方式运行脚本：</paragraph>
            <literal_block force="False" language="shell" linenos="False" xml:space="preserve"># Mark script as executable.
chmod +x sayhello.gd
# Prints "Hello!" to standard output.
./sayhello.gd</literal_block>
            <paragraph>如果上述方法在你当前版本的 Linux 或 macOS 中不起作用，你可以随时让 shebang 直接从它所在的位置运行 Godot：</paragraph>
            <literal_block force="False" language="shell" linenos="False" xml:space="preserve">#!/usr/bin/godot -s</literal_block>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="翻译状态" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

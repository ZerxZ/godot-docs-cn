<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/tutorials/3d/visibility_ranges.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <target refid="doc-visibility-ranges"></target>
    <section ids="visibility-ranges-hlod doc-visibility-ranges" names="visibility\ ranges\ (hlod) 可见范围（hlod） doc_visibility_ranges">
        <title>可见范围（HLOD）</title>
        <paragraph>与 <reference internal="True" refuri="mesh_lod#doc-mesh-lod"><inline classes="std std-ref">网格的细节级别（LOD）</inline></reference> 和 <reference internal="True" refuri="occlusion_culling#doc-occlusion-culling"><inline classes="std std-ref">遮挡剔除</inline></reference> 一起，可见范围是提高大型复杂 3D 场景性能的另一个工具。</paragraph>
        <paragraph>你会在这个页面中学习到：</paragraph>
        <bullet_list bullet="-">
            <list_item>
                <paragraph>可见范围可以做什么以及它们在哪些场景中有用。</paragraph>
            </list_item>
            <list_item>
                <paragraph>如何在 Godot 中设置可见范围（手动 LOD）。</paragraph>
            </list_item>
            <list_item>
                <paragraph>如何调整可见范围以获得最佳性能及质量。</paragraph>
            </list_item>
        </bullet_list>
        <seealso>
            <paragraph>如果你只需要网格在距离上变得不那么详细，但并没有手动创建 LOD 网格，请考虑依赖自动 <reference internal="True" refuri="mesh_lod#doc-mesh-lod"><inline classes="std std-ref">网格的细节级别（LOD）</inline></reference> 。</paragraph>
            <paragraph>请注意，即使在同一网格上，依然可以同时使用自动网格 LOD 和可见范围。</paragraph>
        </seealso>
        <section ids="how-it-works" names="how\ it\ works 它的运作方式">
            <title>它的运作方式</title>
            <paragraph>可见范围可与继承自 GeometryInstance3D 的任何节点一起使用。这意味着它们不仅可以与 MeshInstance3D 和 MultiMeshInstance3D 一起使用以实现艺术家控制的 <abbreviation explanation="Hierarchical Level of Detail，层次化细节层次">HLOD</abbreviation>，还可以与 GPUParticles3D、CPUParticles3D、Label3D、Sprite3D、AnimatedSprite3D 和 CSGShape3D 一起使用。</paragraph>
            <paragraph>由于可见范围是在每个节点的基础上配置的，因此可以使用不同的节点类型作为 <abbreviation explanation="Level of Detail、细节层次">LOD</abbreviation> 系统的一部分。例如，可以在近距离时显示代表一棵树的 MeshInstance3D，并在远处将其替换为 Sprite3D 顶替物，以提高性能。</paragraph>
            <paragraph><abbreviation explanation="Hierarchical Level of Detail，层次化细节层次">HLOD</abbreviation> 相对于传统 <abbreviation explanation="Level of Detail, 细节层次">LOD</abbreviation> 系统的优势在于其层次性质。单个较大的网格可以替换多个较小的网格，因此可以减少远处的绘制调用数量，但可以在近距离时保留剔除机会。例如，可以设置一组房屋，在近距离时它们使用单独的 MeshInstance3D 节点（每个房屋一个），但会变成表现一组不太详细的房屋的单个 MeshInstance3D（或使用 MultiMeshInstance3D）。</paragraph>
            <paragraph>最后，当相机太近或太远时，可见范围也可用于使某些对象完全淡入淡出。这可以用于游戏玩法目的，也可以用来减少视觉混乱。例如，当 Label3D 节点离玩家太远而不可读或与玩家相关时，可以使用可见范围对其进行淡出。</paragraph>
        </section>
        <section ids="setting-up-visibility-range" names="setting\ up\ visibility\ range 设置可见范围">
            <title>设置可见范围</title>
            <paragraph>这是配置基本 LOD 系统的快速入门指南。遵循本指南，该 LOD 系统将在近距离时显示 SphereMesh，在相机足够远时显示 BoxMesh。还可以通过 <strong>Begin Margin</strong> 和 <strong>End Margin</strong> 属性配置较小的滞后边距（hysteresis margin）。当相机在 LOD 过渡的“边缘”移动时，这可以防止 LOD 来回快速出现和消失。</paragraph>
            <paragraph>选择 MeshInstance3D 节点后，可以在 GeometryInstance3D 检查器的 <strong>Visibility Range</strong> （可见范围） 部分中找到可见范围属性。</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>添加一个 Node3D 节点，用于将两个 MeshInstance3D 节点分组到一起。</paragraph>
                </list_item>
                <list_item>
                    <paragraph>添加第一个 MeshInstance3D 节点作为 Node3D 的子节点。将新的 SphereMesh 分配给其 Mesh 属性。</paragraph>
                </list_item>
                <list_item>
                    <paragraph>将第一个 MeshInstance3D 的可见范围 <strong>End</strong> 设置为 <literal>10.0</literal> ，将 <strong>End Margin</strong> 设置为 <literal>1.0</literal> 。</paragraph>
                </list_item>
                <list_item>
                    <paragraph>添加第二个 MeshInstance3D 节点作为 Node3D 的子节点。将新的 BoxMesh 分配给其 Mesh 属性。</paragraph>
                </list_item>
                <list_item>
                    <paragraph>将第二个 MeshInstance3D 的可见范围 <strong>Begin</strong> 设置为 <literal>10.0</literal> ，将 <strong>Begin Margin</strong> 设置为 <literal>1.0</literal> 。</paragraph>
                </list_item>
                <list_item>
                    <paragraph>将相机移开并返回到物体。注意当相机移开时，对象如何从球体（即 SphereMesh）过渡到盒子（即 BoxMesh）。</paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section ids="visibility-range-properties" names="visibility\ range\ properties 可见范围属性">
            <title>可见范围属性</title>
            <paragraph>在继承自 GeometryInstance3D 的任何节点的检查器中，你都可以在 GeometryInstance3D 的 <strong>Visibility Range</strong> 部分中调整以下属性：</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><strong>Begin（开始）：</strong> 当相机比该值（以 3D 单位）更接近实例的 <emphasis>原点</emphasis> 时，实例将被隐藏。</paragraph>
                </list_item>
                <list_item>
                    <paragraph><strong>Begin Margin（开始边距）：</strong> 用于特写过渡的滞后（hysteresis）或 Alpha 淡入淡出过渡距离（以 3D 单位表示）。此属性的行为取决于 <strong>Fade Mode</strong> （淡入淡出模式）。</paragraph>
                </list_item>
                <list_item>
                    <paragraph><strong>End（结束）：</strong> 当相机距离实例的 <emphasis>原点</emphasis> 远超过此值（以 3D 单位表示）时，实例将被隐藏。</paragraph>
                </list_item>
                <list_item>
                    <paragraph><strong>End Margin（结束边距）：</strong> 用于远距离过渡的滞后或 alpha 淡入淡出过渡距离（以 3D 单位表示）。此属性的行为取决于 <strong>Fade Mode</strong> （淡入淡出模式）。</paragraph>
                </list_item>
                <list_item>
                    <paragraph><strong>Fade Mode（淡入淡出模式）：</strong> 控制如何执行 LOD 级别之间的过渡。详情请参阅下文。</paragraph>
                </list_item>
            </bullet_list>
            <target refid="doc-visibility-ranges-fade-mode"></target>
            <section ids="fade-mode doc-visibility-ranges-fade-mode" names="fade\ mode 淡入淡出模式 doc_visibility_ranges_fade_mode">
                <title>淡入淡出模式</title>
                <note>
                    <paragraph>仅当 <strong>Visibility Range &gt; Begin Margin</strong> 或 <strong>Visibility Range &gt; End Margin</strong> 大于 <literal>0.0</literal> 时，所选的淡入淡出模式才会产生可见的影响。</paragraph>
                </note>
                <paragraph>在检查器的 <strong>Visibility Range</strong> 部分中，有 3 种淡入淡出模式可供选择：</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph><strong>Disabled:</strong> Uses hysteresis to switch between LOD levels instantly. This
                            prevents situations where LOD levels are switched back and forth quickly when
                            the player moves forward and then backward at the LOD transition point. The
                            hysteresis distance is determined by <strong>Visibility Range &gt; Begin Margin</strong> and
                            <strong>Visibility Range &gt; End Margin</strong>. This mode provides the best performance as
                            it doesn't force rendering to become transparent during the fade transition.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><strong>Self（自身）：</strong> 使用 Alpha 混合在 LOD 级别之间平滑地淡入淡出。当达到其自身可见范围的极限时，节点将自行淡出。淡入淡出过渡距离由 <strong>Visibility Range &gt; Begin Margin</strong> 和 <strong>Visibility Range &gt; End Margin</strong> 确定。此模式在淡入淡出过渡期间，强制对对象进行透明渲染，因此会对性能产生一定影响。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><strong>Dependencies：</strong> （依赖项）使用 Alpha 混合在 LOD 级别之间平滑淡入淡出。当达到其自身可见范围的限制时，节点将淡入其依赖项。淡入淡出过渡距离由 <strong>Visibility Range &gt; Begin Margin</strong> 和 <strong>Visibility Range &gt; End Margin</strong> 确定。此模式在淡入淡出的过渡期间，强制对对象进行透明渲染，因此会对性能产生影响。此模式适用于使用 <reference internal="True" refid="doc-visibility-ranges-visibility-parent"><inline classes="std std-ref">可见性父级</inline></reference> 的分层 LOD 系统。如果可见性范围用于执行非分层 LOD，则它的作用与 <strong>Self</strong> 相同。</paragraph>
                    </list_item>
                </bullet_list>
                <target refid="doc-visibility-ranges-visibility-parent"></target>
            </section>
            <section ids="visibility-parent doc-visibility-ranges-visibility-parent" names="visibility\ parent 可见性父级 doc_visibility_ranges_visibility_parent">
                <title>可见性父级</title>
                <paragraph><strong>Visibility Parent</strong>（可见性父级）属性让设置 <abbreviation explanation="Hierarchical Level of Detail">HLOD</abbreviation> 变得更加容易。如果给定其当前可见范围属性，其父节点可见，则它允许自动隐藏子节点。</paragraph>
                <note>
                    <paragraph><strong>Visibility Parent</strong> 的目标 <emphasis>必须</emphasis> 继承自 <reference internal="True" refuri="../../classes/class_geometryinstance3d#class-geometryinstance3d"><inline classes="std std-ref">GeometryInstance3D</inline></reference>。</paragraph>
                    <paragraph>尽管它的名称如此， <strong>Visibility Parent</strong> 属性 <emphasis>可以</emphasis> 指向的不是场景树中节点的父级的节点。然而，也不可能将 <strong>Visibility Parent</strong> 指向子节点，因为这会创建不支持的依赖循环。如果发生依赖循环，你将在“输出”面板中收到一条错误消息。</paragraph>
                </note>
                <paragraph>给定以下场景树（其中所有节点都继承自 GeometryInstance3D）：</paragraph>
                <literal_block force="False" language="gdscript" linenos="False" xml:space="preserve">┖╴BatchOfHouses
    ┠╴House1
    ┠╴House2
    ┠╴House3
    ┖╴House4</literal_block>
                <paragraph>在此示例中， <emphasis>BatchOfHouses</emphasis> 是一个大型网格，设计目标是用于在远处查看时展示所有的子节点。 <emphasis>House1</emphasis> 到 <emphasis>House4</emphasis> 是代表各个房屋的较小 MeshInstance3D。为了在本示例中配置 HLOD，我们只需要配置两条：</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>将 <strong>Visibility Range Begin</strong> 设置为大于 <literal>0.0</literal> 的数字，以便 <emphasis>BatchOfHouses</emphasis> 仅在距相机足够远时出现。而低于这个距离，我们则希望显示 <emphasis>House1</emphasis> 到 <emphasis>House4</emphasis> 的较小的网格。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>把 <emphasis>House1</emphasis> 到 <emphasis>House4</emphasis> 上的 <strong>Visibility Parent</strong> 属性分配给 <emphasis>BatchOfHouses</emphasis> 。</paragraph>
                    </list_item>
                </bullet_list>
                <paragraph>这个设置可以让进一步调整变得更加容易，因为你再不需要调整 <emphasis>BatchOfHouses</emphasis> 的 <strong>Visibility Range Begin</strong> ，和从 <emphasis>House1</emphasis> 到 <emphasis>House4</emphasis> 的 <strong>Visibility Range End</strong> 。</paragraph>
                <paragraph>淡入淡出模式由 <strong>Visibility Parent</strong> 属性自动处理，因此只有在父节点完全淡出时，子节点才会隐藏。这样做是为了尽量减少可视弹入。根据你的 <abbreviation explanation="Hierarchical Level of Detail">HLOD</abbreviation> 设置，可能需要尝试 <strong>Self</strong> 和 <strong>Dependencies</strong> <reference internal="True" refid="doc-visibility-ranges-fade-mode"><inline classes="std std-ref">淡入淡出模式</inline></reference>。</paragraph>
                <note>
                    <paragraph>通过 <strong>Visible</strong> 属性隐藏的节点，本质上是从可见性依赖树中删除的，因此依赖实例不会考虑隐藏节点或其先祖节点。</paragraph>
                    <paragraph>实际上这意味着，如果通过将 <strong>Visibility Parent</strong> 节点的 <strong>Visible</strong> 属性设置为 <literal>false</literal> 来隐藏其目标，则该节点将不会根据可见性父级中指定的 <strong>Visibility Range Begin</strong> 值进行隐藏。</paragraph>
                </note>
            </section>
        </section>
        <section ids="configuration-tips" names="configuration\ tips 配置建议">
            <title>配置建议</title>
            <section ids="use-simpler-materials-at-a-distance-to-improve-performance" names="use\ simpler\ materials\ at\ a\ distance\ to\ improve\ performance 在距离较远时使用更简单的材质以提高性能">
                <title>在距离较远时使用更简单的材质以提高性能</title>
                <paragraph>想要进一步提高性能的话，一种方法是对远处的 LOD 网格使用更简单的材质。虽然使用 LOD 网格会减少需要渲染的顶点数量，但材质的每像素着色负载保持不变。然而，在复杂的 3D 场景中，每像素着色负载通常是 GPU 的瓶颈。减少 GPU 着色负载的其中一种方法，就是在不会产生太大视觉差异时使用更简单的材质。</paragraph>
                <paragraph>这样做时应仔细衡量性能增益，因为增加场景中 <emphasis>独特</emphasis> 材质的数量本身就会产生性能成本。尽管如此，对远处的 LOD 网格使用更简单的材质仍然可以带来净性能增益，因为这样做所需的每像素计算更少。</paragraph>
                <paragraph>例如，在远处的 LOD 网格使用的材质上，可以禁用性能成本昂贵的材质功能，如：</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>法线贴图（尤其是在移动平台上）</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Rim（边缘）</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Clearcoat（清漆）</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Anisotropy（各向异性）</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>高度</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Subsurface Scattering（次表面散射）</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>背光照明</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Refraction(折射)</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>邻近淡出</paragraph>
                    </list_item>
                </bullet_list>
            </section>
            <section ids="use-dithering-for-lod-transitions" names="use\ dithering\ for\ lod\ transitions 为\ lod\ 过渡使用抖动">
                <title>为 LOD 过渡使用抖动</title>
                <paragraph>Godot 目前仅支持可见范围内基于alpha值的淡入淡出，但你可以以为不同 LOD 等级使用不同的材质来使用颜色抖动。</paragraph>
                <paragraph>在进行LOD过渡时，相比使用 Alpha 混合，颜色抖动有两个优点：</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>抖动透明的渲染速度比 Alpha 混合更快，性能更高。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>在LOD转换期间不会由于 <reference internal="True" refuri="3d_rendering_limitations#doc-3d-rendering-limitations-transparency-sorting"><inline classes="std std-ref">透明度排序问题</inline></reference> 而发生视觉故障。</paragraph>
                    </list_item>
                </bullet_list>
                <paragraph>颜色抖动的缺点是LOD淡入淡出过渡时会出现噪点。但在使用较大的视口分辨率或者启用时间抗锯齿（TAA）时可能不会很明显。</paragraph>
                <paragraph>另外，由于 BaseMaterial3D 的距离淡入淡出只支持近距离淡出 <emphasis>或者</emphasis> 远距离淡入淡出，该设置最好只使用两个LOD作为设定的一部分。</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>确保两个 MeshInstance3D 节点上的 <strong>Begin Margin</strong> 和 <strong>End Margin</strong> 属性都设置为 <literal>0.0</literal> ，因为此处不需要滞后或者 alpha 淡入淡出。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>在两个 MeshInstance3D 节点上，在<emphasis>减少</emphasis> <strong>Begin</strong>所需的淡入淡出过渡距离的同时，<emphasis>增加</emphasis> <strong>End</strong> 相同的距离是想要看见抖动过渡所必需的。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>打开近距离显示的 MeshInstance3D 的材质编辑面板，将 <strong>距离淡入淡出（Distance fade) ** 模式设置为 **物体抖动</strong>。将 <emphasis>Min Distance</emphasis> 属性设置为与可见范围 <strong>End</strong> 相同的值，将 <strong>最大距离</strong> 设置为相同的值 <emphasis>减去</emphasis> 淡入淡出过渡距离。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>在远距离显示的 MeshInstance3D 的属性面板里编辑材质，将 <strong>距离淡入淡出（Distance fade) ** 模式设置为 **物体抖动</strong>。将 <strong>Min Distance</strong> 属性设置为与可见范围 <strong>Begin</strong> 相同的值，将 <strong>Max Distance</strong> 设置为相同的值 <emphasis>加上</emphasis> 淡入淡出过渡距离。</paragraph>
                    </list_item>
                </bullet_list>
                <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="翻译状态" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
            </section>
        </section>
    </section>
</document>

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/tutorials/3d/environment_and_post_processing.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <target refid="doc-environment-and-post-processing"></target>
    <section ids="environment-and-post-processing doc-environment-and-post-processing" names="environment\ and\ post-processing 环境和后期处理 doc_environment_and_post_processing">
        <title>环境和后期处理</title>
        <paragraph>Godot 4 提供了重新设计的环境资源（Environment resource），以及一个全新的后期处理（post-processing）系统，其具有许多开箱即用的效果。</paragraph>
        <note>
            <paragraph>从 Godot 4 开始，环境的 <emphasis>性能/质量</emphasis> 设置是在项目设置中定义的，而不是在环境资源中定义的。 这使得全局调整变得更加容易，因为你不再需要单独调整环境资源，来适应各种硬件配置。</paragraph>
            <paragraph>请注意，大多数环境的性能/质量设置仅在项目设置中启用 <strong>高级</strong> 开关后才可见。</paragraph>
        </note>
        <section ids="environment" names="environment 环境">
            <title>环境</title>
            <paragraph><reference internal="True" refuri="../../classes/class_environment#class-environment"><inline classes="std std-ref">Environment</inline></reference> 资源存储控制 2D 和 3D 渲染环境所需的所有信息。 其中包括天空、环境照明、色调映射、效果和调整。 它本身不执行任何操作，但你可以通过在以下位置之一（按优先级顺序）使用来启用它：</paragraph>
            <section ids="camera3d-node-high-priority" names="camera3d\ node\ (high\ priority) camera3d\ 节点（高优先级）">
                <title>Camera3D 节点（高优先级）</title>
                <paragraph>可以为 Camera3D 节点设置 Environment。优先于其他所有设置。</paragraph>
                <image candidates="{'*': 'tutorials/3d/img/environment_camera.webp'}" uri="tutorials/3d/img/environment_camera.webp"></image>
                <paragraph>这在想要覆盖现有环境时非常有用，但通常来说使用以下的选项更好。</paragraph>
            </section>
            <section ids="worldenvironment-node-medium-priority-recommended" names="worldenvironment\ node\ (medium\ priority,\ recommended) worldenvironment\ 节点（中优先级，推荐）">
                <title>WorldEnvironment 节点（中优先级，推荐）</title>
                <paragraph>WorldEnvironment节点可以添加到任何场景, 但每个活动场景树只能存在一个. 添加多个将导致警告.</paragraph>
                <image candidates="{'*': 'tutorials/3d/img/environment_world.webp'}" uri="tutorials/3d/img/environment_world.webp"></image>
                <paragraph>添加的任何 Environment 都具有比默认 Environment 更高的优先级（后述）。这意味着它可以针对各个场景分别进行覆盖，这使它非常有用。</paragraph>
            </section>
            <section ids="preview-environment-and-sun-low-priority" names="preview\ environment\ and\ sun\ (low\ priority) 预览环境和太阳（低优先级）">
                <title>预览环境和太阳（低优先级）</title>
                <note>
                    <paragraph>从 Godot 4 开始，预览环境和太阳的系统替代了 Godot 3 项目中使用的 <literal>default_env.tres</literal> 文件。</paragraph>
                </note>
                <paragraph>如果当前场景中不存在 WorldEnvironment 节点或 DirectionalLight3D 节点，编辑器会改为显示预览环境和太阳。可以使用 3D 编辑器顶部的按钮禁用：</paragraph>
                <image candidates="{'*': 'tutorials/3d/img/environment_preview_sun_sky_toggle.webp'}" uri="tutorials/3d/img/environment_preview_sun_sky_toggle.webp"></image>
                <paragraph>点击右侧的垂直排列的三个点就会显示一个对话框，能够用来自定义预览环境的外观：</paragraph>
                <image candidates="{'*': 'tutorials/3d/img/environment_preview_sun_sky_dialog.webp'}" uri="tutorials/3d/img/environment_preview_sun_sky_dialog.webp"></image>
                <paragraph><strong>预览太阳和天空只在编辑器中可见，运行项目时不可见。</strong>使用对话框底部的按钮就可以将预览太阳和天空作为节点加入到场景中。</paragraph>
                <tip>
                    <paragraph>在预览环境编辑器中，点击<strong>将太阳添加到场景</strong>或<strong>将环境添加到场景</strong>时按住 <literal classes="kbd">Shift</literal>，就会将预览太阳和预览环境一同添加到当前场景中（就像单独点击了这两个按钮一样）。可以使用这个方法加速项目的设置和原型。</paragraph>
                </tip>
            </section>
        </section>
        <section ids="camera-attributes" names="camera\ attributes 相机属性">
            <title>相机属性</title>
            <note>
                <paragraph>在 Godot 4 中，曝光和景深信息从环境资源中分离到单独的 CameraAttributes 资源中。 这样可以更轻松地独立于其他环境设置来调整这些属性。</paragraph>
            </note>
            <paragraph><reference internal="True" refuri="../../classes/class_cameraattributes#class-cameraattributes"><inline classes="std std-ref">CameraAttributes</inline></reference> 资源存储曝光和景深信息。 它还允许根据场景亮度自动调整曝光。</paragraph>
            <paragraph>有两种 CameraAttribute 资源可用：</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><strong>实用相机属性：</strong> 使用任意单位公开功能，这对于大多数游戏用例来说更容易推理。</paragraph>
                </list_item>
                <list_item>
                    <paragraph><strong>CameraAttributesPhysical：</strong> 使用现实世界单位曝光特征，类似于数码相机。 例如，视野是使用以毫米为单位的焦距，而不是以度为单位的值来设置的。 当物理精度很重要时推荐使用，例如要求照片级真实感渲染。</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>两种 CameraAttribute 资源类型都允许你使用相同的功能，但它们的配置不同。 如果你不知道选择哪一个，请使用 <strong>CameraAttributesPractical</strong> 。</paragraph>
            <note>
                <paragraph>在 Camera3D 节点上使用 <reference internal="True" refuri="../../classes/class_cameraattributesphysical#class-cameraattributesphysical"><inline classes="std std-ref">CameraAttributesPhysical</inline></reference> 将锁定该 Camera3D 中的 FOV 和长宽调整，因为视野是在 CameraAttributesPhysical 资源中调整的。 如果在 WorldEnvironment 中使用，CameraAttributesPhysical 将不会覆盖场景中的任何 Camera3D。</paragraph>
            </note>
            <paragraph>CameraAttributes 资源可以添加到 Camera3D 或 WorldEnvironment 节点上。 在当前相机设置了 CameraAttributes 时，它将 <emphasis>覆盖</emphasis> WorldEnvironment 中设置的CameraAttributes（如果有的话）。</paragraph>
            <paragraph>在大多数情况下，建议在 Camera3D 节点而不是 WorldEnvironment 上设置 CameraAttributes 资源。 与 WorldEnvironment 不同，将 CameraAttributes 资源分配给 Camera3D 节点会阻止景深显示在 3D 编辑器视口中，除非你正在预览相机。</paragraph>
        </section>
        <section ids="environment-options" names="environment\ options 环境可选项">
            <title>环境可选项</title>
            <paragraph>以下是所有环境选项的详细说明以及如何使用它们。</paragraph>
            <section ids="background" names="background 背景">
                <title>背景</title>
                <paragraph>“背景（Background） ”部分包含有关如何填充背景的设置（屏幕中未绘制对象的部分）。 背景不仅用于显示图像或颜色。默认情况下，它还会影响对象受环境光和反射光影响的方式。 这称为基于图像的照明 (IBL)。</paragraph>
                <paragraph>因此，背景天空可能会极大地影响场景的整体外观，即使天空在屏幕上永远不会直接可见。 调整场景中的光照时应考虑到这一点。</paragraph>
                <image candidates="{'*': 'tutorials/3d/img/environment_background1.webp'}" uri="tutorials/3d/img/environment_background1.webp"></image>
                <paragraph>有几种背景模式可供选择：</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph><strong>清晰颜色（Clear Color ）</strong> 使用项目设置中定义的默认清晰颜色。背景将是恒定的颜色。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><strong>自定义颜色（Custom Color）</strong> 与清晰颜色（Clear Color）类似，但具有自定义颜色值。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><strong>天空（Sky）</strong> 可允许你定义背景天空材质（见下文）。 默认情况下，场景中的对象将反射此天空材质并吸收其中的环境光。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><strong>画布（Canvas）</strong> 将 2D 场景显示为 3D 场景的背景。这可用于使环境效果在 2D 渲染中可见，例如 <reference internal="True" refid="doc-environment-and-post-processing-using-glow-in-2d"><inline classes="std std-ref">2D 中的辉光</inline></reference>。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><strong>保留（Keep）</strong>不会绘制任何天空，而是保留前一帧中存在的内容。 这提高了纯室内场景中的性能，但如果天空随时可见，则会产生“镜厅（hall of mirrors）”视觉故障。</paragraph>
                    </list_item>
                </bullet_list>
            </section>
            <section ids="sky-materials" names="sky\ materials 天空材质">
                <title>天空材质</title>
                <paragraph>使用 <strong>Sky</strong> 背景模式（或环境光/反射光模式设置为 <strong>Sky</strong> ）时，Sky 子资源可在环境资源中进行编辑。 编辑此子资源允许你在 Sky 中创建 SkyMaterial 资源。</paragraph>
                <paragraph>有 3 种内置天空材质可供选择：</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph><strong>PanoramaSkyMaterial：</strong> 使用 360 度全景天空图像（建议长宽比为 2:1）。 为了受益于高动态范围，全景图像必须采用 HDR 兼容格式，例如 <literal>.hdr</literal> 或 <literal>.exr</literal> ，而不是标准动态范围格式，例如 <literal>.png</literal> 或 <literal>.jpg</literal> 。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><strong>ProceduralSkyMaterial：</strong> 使用程序生成的天空，并可调整地面、太阳、天空和地平线的颜色。 这是编辑器预览中使用的天空类型。 太阳的位置是从场景中存在的前 4 个 DirectionalLight3D 节点自动得出的。 给定时间最多可以有 4 个太阳。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><strong>PhysicalSkyMaterial：</strong> 使用具有可调整散射参数的基于物理的程序天空。 太阳的位置自动从场景中存在的第一个 DirectionalLight3D 节点导出。 与 ProceduralSkyMaterial 相比，PhysicalSkyMaterial 的渲染成本稍高。 给定时间最多可以有 1 个太阳。</paragraph>
                    </list_item>
                </bullet_list>
                <paragraph>全景天空（Panorama sky）图像有时称为 HDRI（High Dynamic Range Images，高动态范围图像）。 你可以在 <reference name="Poly Haven" refuri="https://polyhaven.com/hdris">Poly Haven</reference> 上找到具有免费许可的 HDRI。</paragraph>
                <note>
                    <paragraph>具有非常明亮光点的 HDR PanoramaSkyMaterial 纹理（例如可以看到太阳的现实生活照片）可能会导致环境反射和镜面反射出现可见的闪光。 这是由于纹理的峰值曝光过高造成的。</paragraph>
                    <paragraph>要解决此问题，请在文件系统面板中选择全景纹理，转到导入面板，启用 <strong>HDR 限制曝光</strong> ，然后单击 <strong>重新导入</strong> 。</paragraph>
                </note>
                <paragraph>如果你需要自定义天空材质（例如，用于程序云），你可以创建自定义 <reference internal="True" refuri="../shaders/shader_reference/sky_shader#doc-sky-shader"><inline classes="std std-ref">天空着色器</inline></reference>。</paragraph>
            </section>
            <section ids="ambient-light" names="ambient\ light 环境光">
                <title>环境光</title>
                <paragraph>环境光（如此处定义）是一种以相同强度影响每个几何体的光。它是全局的并且独立于可能添加到场景中的灯光。环境光是基于图像的照明的两个组成部分之一。与反射光不同，环境光不会根据相机的位置和视角而变化。</paragraph>
                <paragraph>有几种类型的环境光可供选择：</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph><strong>Background：</strong> （背景）从背景中获取环境光，例如天空、自定义颜色或透明颜色（默认）。 环境光强度将根据天空图像的内容而变化，这可以产生更具视觉吸引力的环境照明。 必须将天空设置为背景才能使此模式可见。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><strong>Disabled：</strong> （禁用）不使用任何环境光。 对于纯室内场景很有用。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><strong>Color：</strong> （颜色）对环境光使用恒定颜色，忽略背景天空。 所有侧面的环境光强度都相同，这可能会导致场景的照明看起来更平坦。 对于漆黑阴影可能太暗的室内场景很有用，或者可以最大限度地提高低端设备的性能。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><strong>Sky：</strong> （天空）从指定的天空获取环境光，即使背景设置为 <strong>Sky</strong> 以外的模式。 如果背景模式已经是 <strong>Sky</strong> ，则此模式的行为与 <strong>Background</strong> 相同。</paragraph>
                    </list_item>
                </bullet_list>
                <image candidates="{'*': 'tutorials/3d/img/environment_ambient.webp'}" uri="tutorials/3d/img/environment_ambient.webp"></image>
                <paragraph>当环境光模式设置为 Sky 或 Background（并且背景设置为天空）时，可以使用 <strong>Sky Contribution</strong> （天空贡献度）属性在环境颜色和天空之间进行混合。默认情况下，该值设置为 <literal>1.0</literal> ，这意味着仅使用环境天空。除非 <strong>Sky Contribution</strong> 降低到 <literal>1.0</literal> 以下，否则环境颜色将被忽略。</paragraph>
                <paragraph>以下是不同环境光对场景的影响比较:</paragraph>
                <image candidates="{'*': 'tutorials/3d/img/environment_ambient2.webp'}" uri="tutorials/3d/img/environment_ambient2.webp"></image>
                <paragraph>最后有一个 <strong>Energy（能量）</strong> 设置，这是一个乘数，在使用HDR时非常有用。</paragraph>
                <paragraph>一般来说，只有简单的场景或大型外部场景才应该依赖于环境光。你也可以这样做来提高性能。环境光的渲染速度很快，但无法提供最佳的照明质量。最好使用 <reference internal="True" refuri="global_illumination/reflection_probes#doc-reflection-probes"><inline classes="std std-ref">ReflectionProbe</inline></reference>、<reference internal="True" refuri="global_illumination/using_voxel_gi#doc-using-voxel-gi"><inline classes="std std-ref">VoxelGI</inline></reference> 或 <reference internal="True" refuri="global_illumination/using_sdfgi#doc-using-sdfgi"><inline classes="std std-ref">SDFGI</inline></reference> 生成环境光，因为它们将更准确地模拟间接光的传播方式。下面是使用平面环境色和 VoxelGI 之间的质量比较：</paragraph>
                <image candidates="{'*': 'tutorials/3d/img/environment_ambient_comparison.webp'}" uri="tutorials/3d/img/environment_ambient_comparison.webp"></image>
                <paragraph>使用上述方法之一，将使用来自探针的环境照明，代替恒定的环境照明。</paragraph>
            </section>
            <section ids="reflected-light" names="reflected\ light 反射光">
                <title>反射光</title>
                <paragraph>反射光（也称为镜面光）是基于图像的照明的两个组成部分中的另一个。</paragraph>
                <paragraph>反射光可以设置为三种模式之一：</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph><strong>Background：</strong> （背景）从背景反射，例如天空、自定义颜色或透明颜色（默认）。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><strong>Disabled：</strong> （禁用）不反射环境中的任何光线。 适用于纯粹的室内场景，或最大限度地提高低端设备的性能。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><strong>Sky：</strong> （天空）从背景天空反射，即使背景设置为 <strong>Sky</strong> 以外的模式。 如果背景模式已经是 <strong>Sky</strong> ，则此模式的行为与 <strong>Background</strong> 相同。</paragraph>
                    </list_item>
                </bullet_list>
            </section>
            <section ids="fog" names="fog 雾">
                <title>雾</title>
                <note>
                    <paragraph>本节仅涉及非体积雾。 可以同时使用非体积雾和 <reference internal="True" refuri="volumetric_fog#doc-volumetric-fog"><inline classes="std std-ref">体积雾和雾体积</inline></reference>。</paragraph>
                </note>
                <paragraph>雾。就像在现实生活中一样，使远处的物体逐渐消失成均匀的颜色。Godot 中有两种雾：</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph><strong>深度雾:</strong> 这个基于距相机的距离来应用.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><strong>高度雾:</strong> 此高度应用于任何低于(或高于)某个高度的物体, 无论距离相机的距离如何.</paragraph>
                    </list_item>
                </bullet_list>
                <image candidates="{'*': 'tutorials/3d/img/environment_fog_depth_height.webp'}" uri="tutorials/3d/img/environment_fog_depth_height.webp"></image>
                <paragraph>这两种雾类型都可以调整它们的曲线, 使它们的过渡或多或少变得清晰.</paragraph>
                <paragraph>可以调整两个属性以使雾效果更有趣:</paragraph>
                <paragraph>第一个是 <strong>Sun Amount</strong>，它利用雾的太阳颜色属性。当朝向平行光（通常是太阳）时，雾的颜色将会改变，模拟穿过雾的阳光。</paragraph>
                <paragraph>第二个是 <strong>Transmit Enabled</strong>，可以模拟更逼真的透射率。实践中会使光线在雾中更加突出。</paragraph>
                <image candidates="{'*': 'tutorials/3d/img/environment_fog_transmission.webp'}" uri="tutorials/3d/img/environment_fog_transmission.webp"></image>
                <note>
                    <paragraph>雾会导致在视口中出现色带，尤其是在密度较高的情况下。请参阅 <reference internal="True" refuri="3d_rendering_limitations#doc-3d-rendering-limitations-color-banding"><inline classes="std std-ref">带状颜色</inline></reference>，了解如何减少条带。</paragraph>
                </note>
            </section>
            <section ids="volumetric-fog" names="volumetric\ fog 体积雾">
                <title>体积雾</title>
                <paragraph>体积雾为场景提供了逼真的雾效果，雾的颜色受到穿过雾的灯光的影响。</paragraph>
                <seealso>
                    <paragraph>有关设定体积雾的内容，请参看 <reference internal="True" refuri="volumetric_fog#doc-volumetric-fog"><inline classes="std std-ref">体积雾和雾体积</inline></reference>。</paragraph>
                </seealso>
            </section>
            <section ids="tonemap" names="tonemap 色调映射">
                <title>色调映射</title>
                <paragraph>色调映射从电影和游戏行业使用的标准曲线列表中，选择将应用于场景的色调映射曲线。除了 Linear （线性）之外，的色调映射运算子可使得亮部和暗部区域更加均匀，同时防止高亮区域受到裁剪。</paragraph>
                <paragraph>色调映射选项有：</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph><strong>Mode（模式）：</strong>色调映射所使用的模式。</paragraph>
                        <bullet_list bullet="-">
                            <list_item>
                                <paragraph><strong>Linear（线性）：</strong>默认的色调映射模式。这是最快也是最简单的色调映射运算子，但会导致高亮区域过曝，输出颜色出现可见的裁剪。</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><strong>Reinhardt：</strong>对渲染后像素的颜色按照这个公式执行变化：<literal>color = color / (1 + color)</literal>。可以防止裁剪高亮区域，但最终的图像可能会有些暗淡。</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><strong>Filmic：</strong>防止裁剪高亮区域，最终的图像通常比 Reinhardt 鲜艳。</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><strong>ACES：</strong>Academy Color Encoding System（学院色彩编码系统）色调映射器。ACES 比其他选项更耗性能一些，但对于高亮区域的处理方式更真实，越亮饱和度越低。ACES 输出的图像通常比 Reinhardt 和 Filmic 的对比度更高。想要让画面更具真实感时，推荐选用 ACES。该色调映射器在 Godot 3.x 中被叫做"ACES Fitted"。</paragraph>
                            </list_item>
                        </bullet_list>
                    </list_item>
                    <list_item>
                        <paragraph><strong>Exposure（曝光）：</strong>色调映射曝光，模拟长时间获取的光照量（默认：<literal>1.0</literal>）。值越高，整体更亮。修改色调映射运算子或白点后，如果场景看上去太暗，请尝试将这个值略微调高。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><strong>White（白点）：</strong>光照映射白点，模拟白色在整个尺度中所处的位置（默认：<literal>1.0</literal>）。为了让光照更真实，推荐使用 <literal>6.0</literal> 到 <literal>8.0</literal> 之间的值。值越高，高光区域更少过曝，但会让场景整体看起来更暗。</paragraph>
                    </list_item>
                </bullet_list>
            </section>
        </section>
        <section ids="mid-and-post-processing-effects" names="mid-\ and\ post-processing\ effects 中后期处理效果">
            <title>中后期处理效果</title>
            <paragraph>环境资源支持许多流行的中间和后期处理效果。</paragraph>
            <note>
                <paragraph>屏幕空间效果，例如 <abbreviation explanation="Screen-Space Reflections, 屏幕空间反射">SSR</abbreviation>、<abbreviation explanation="Screen-Space Ambient Occlusion, 屏幕空间环境光遮挡">SSAO</abbreviation>、<abbreviation explanation="Screen-Space Indirect Lighting, 屏幕空间间接照明">SSIL</abbreviation>和辉光不会对位于相机视图之外的，或被其他不透明几何体遮挡的几何体进行操作。 调整设置时请考虑这一点，以避免在游戏过程中发生分散注意力的变化。</paragraph>
            </note>
            <section ids="screen-space-reflections-ssr" names="screen-space\ reflections\ (ssr) 屏幕空间反射(ssr)">
                <title>屏幕空间反射(SSR)</title>
                <paragraph><emphasis>此功能仅在使用 Forward+ 后端时可用，移动或兼容性后端中不可用。</emphasis></paragraph>
                <paragraph>虽然 Godot 支持多种反射数据源，例如 <reference internal="True" refuri="global_illumination/reflection_probes#doc-reflection-probes"><inline classes="std std-ref">反射探针</inline></reference>，但它们可能无法为所有情况提供足够的细节。屏幕空间反射最有意义的场景是物体彼此接触时（地板上的物体、桌子上的物体、漂浮在水面上等）。</paragraph>
                <image candidates="{'*': 'tutorials/3d/img/environment_ssr.webp'}" uri="tutorials/3d/img/environment_ssr.webp"></image>
                <paragraph>除了提供更多细节之外，屏幕空间反射还可以实时工作（而其他类型的反射通常是预先计算的）。这可用于使角色、汽车等在移动时反射到周围的表面上。</paragraph>
                <paragraph>屏幕空间反射可以与其他反射源同时使用，以便在可能的情况下从详细反射中受益，同时在无法使用屏幕空间反射时进行回退（例如，反射屏幕外对象）。</paragraph>
                <paragraph>一些用户控制的参数可用于更好地调整技术:</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph><strong>最大步数</strong> 确定反射的长度. 这个数字越大, 计算成本就越高.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><strong>淡入</strong> 允许调整淡入曲线, 这有助于使接触区域更柔和.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><strong>淡出</strong> 允许调整淡出曲线, 因此步长限制会轻微淡出.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><strong>深度公差(Depth Tolerance)：</strong> 可用于允许屏幕空间光线穿过对象后面。 光线将把每个对象视为具有此深度，以确定它是否可以从该对象后面穿过。 较高的值将使屏幕空间反射表现出更少的“分裂”，但代价是某些对象会创建物理上不正确的反射。</paragraph>
                    </list_item>
                </bullet_list>
                <paragraph>请记住，屏幕空间反射仅适用于反射不透明几何体。透明材质无法反射，因为它们不会写入深度缓冲。同样也适用于使用 <literal>SCREEN_TEXTURE</literal> 或 <literal>DEPTH_TEXTURE</literal> 的着色器。</paragraph>
            </section>
            <section ids="screen-space-ambient-occlusion-ssao" names="screen-space\ ambient\ occlusion\ (ssao) 屏幕空间环境遮挡(ssao)">
                <title>屏幕空间环境遮挡(SSAO)</title>
                <paragraph><emphasis>此功能仅在使用 Forward+ 后端时可用，移动或兼容性后端中不可用。</emphasis></paragraph>
                <paragraph>正如在 <strong>环境</strong> 部分提到的， 光节点的光线无法到达的区域会被环境光照亮(要么是因为它在半径之外, 要么是阴影)。Godot可以使用GIProbe，ReflectionProbe，Sky或恒定的环境色来模拟这种情况。但问题是，之前提出的所有方法都更多地作用于较大的尺度(大区域)，而不是较小的几何体层面。</paragraph>
                <paragraph>恒定环境色和Sky在任何地方都是一样的, 而GI和反射探针的局部细节较多, 但不足以模拟光线无法填充到中空或凹面特征内部的情况.</paragraph>
                <paragraph>这可以用屏幕空间环境遮挡来模拟. 如下图所示, 它的目的是确保凹陷区域更暗, 模拟光线进入的较窄路径:</paragraph>
                <image candidates="{'*': 'tutorials/3d/img/environment_ssao.webp'}" uri="tutorials/3d/img/environment_ssao.webp"></image>
                <paragraph>启用此效果、打开灯却无法欣赏到它是一个常见的错误。这是因为 <abbreviation explanation="Screen-Space Ambient Occlusion">SSAO</abbreviation> 仅作用于<emphasis>环境光</emphasis>。而不是直接光。</paragraph>
                <paragraph>这就是为什么在上图中，直射光下效果不太明显的原因（左侧）。如果你想强制 SSAO（屏幕空间环境光遮蔽） 也在直射光下工作，请使用 <strong>Light Affect</strong>（光线影响）参数（尽管并这不好，但有些设计师喜欢它的外观）。</paragraph>
                <paragraph>当与 VoxelGI 等真正的间接光源结合使用时，<abbreviation explanation="Screen-Space Ambient Occlusion">SSAO</abbreviation> 看起来最佳：</paragraph>
                <image candidates="{'*': 'tutorials/3d/img/environment_ssao2.webp'}" uri="tutorials/3d/img/environment_ssao2.webp"></image>
                <paragraph>可以使用以下几个参数调整 <abbreviation explanation="Screen-Space Ambient Occlusion">SSAO</abbreviation>:</paragraph>
                <image candidates="{'*': 'tutorials/3d/img/environment_ssao_parameters.webp'}" uri="tutorials/3d/img/environment_ssao_parameters.webp"></image>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph><strong>Radius：</strong>半径，计算屏幕空间环境光遮挡时对象可以相互遮挡的距离。 较高的值将导致更远距离的遮挡，但会牺牲性能和质量。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><strong>Intensity：</strong>主屏幕空间环境光遮挡强度。充当屏幕空间环境光遮挡效果的乘数。 值越高，遮挡越暗。 由于 <abbreviation explanation="Screen-Space Ambient Occlusion，屏幕空间环境光遮蔽">SSAO</abbreviation> 是一种屏幕空间效果，因此建议对此值保持保守。<abbreviation explanation="Screen-Space Ambient Occlusion,，屏幕空间环境光遮蔽">SSAO</abbreviation>太强可能会在游戏过程中分散注意力。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><strong>Power：</strong>力度，遮挡的分布。值越高，遮挡越暗，类似于 <strong>Intensity</strong>，但衰减更剧烈。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><strong>Detail：</strong>细节，设置屏幕空间环境光遮挡效果的附加细节级别的强度。 高值会使细节通道更加突出，但可能会导致最终图像出现锯齿。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><strong>水平线(Horizon)：</strong> 考虑表面上的给定点是否被遮挡或未表示为映射到 0.0-1.0 范围内的地平线的角度的阈值。 值为 1.0 表示无遮挡。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><strong>锐利度(Sharpness)：</strong> 允许屏幕空间环境光遮挡效果在对象边缘模糊的量。 设置太高会导致对象边缘出现锯齿。 设置太低会使对象边缘显得模糊。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><strong>光效(Light Affect)：</strong> 直射光下的屏幕空间环境光遮挡强度。 在现实生活中，环境光遮挡仅适用于间接光，这意味着在直射光下无法看到其效果。 高于 0 的值将使 :abbr:` SSAO (Screen-Space Ambient Occlusion, 屏幕空间环境光遮挡)`效果在直射光下可见。 高于 <literal>0.0</literal> 的值在物理上并不准确，但一些艺术家更喜欢这种效果。</paragraph>
                    </list_item>
                </bullet_list>
                <target refid="doc-environment-and-post-processing-ssil"></target>
            </section>
            <section ids="screen-space-indirect-lighting-ssil doc-environment-and-post-processing-ssil" names="screen-space\ indirect\ lighting\ (ssil) 屏幕空间间接光照（ssil） doc_environment_and_post_processing_ssil">
                <title>屏幕空间间接光照（SSIL）</title>
                <paragraph><emphasis>此功能仅在使用 Forward+ 后端时可用，移动或兼容性后端中不可用。</emphasis></paragraph>
                <paragraph><abbreviation explanation="Screen-Space Indirect Lighting, 屏幕空间间接照明">SSIL</abbreviation> 为其他全局照明技术无法覆盖的小细节或动态几何体提供间接照明。 这适用于反射漫反射照明，也适用于自发光材料。 当单独启用 <abbreviation explanation="Screen-Space Indirect Lighting, 屏幕空间间接照明">SSIL</abbreviation> 时，效果可能不会像预期那样明显。</paragraph>
                <paragraph>相反，<abbreviation explanation="Screen-Space Indirect Lighting, 屏幕空间间接照明">SSIL</abbreviation> 旨在用作其他全局照明技术（例如 VoxelGI、SDFGI 和 LightmapGI）的“补充”。<abbreviation explanation="Screen-Space Indirect Lighting, 屏幕空间间接照明">SSIL</abbreviation> 还提供微妙的环境光遮挡效果，与 SSAO 类似，但细节较少。</paragraph>
                <paragraph>此功能仅提供间接光照，并不是完整的全局光照解决方案，与其他 3D 引擎所提供的屏幕空间全局光照（SSGI）是不同的。<abbreviation explanation="Screen-Space Indirect Lighting，屏幕空间间接光照">SSIL</abbreviation> 可以与 <abbreviation explanation="Screen-Space Reflections，屏幕空间反射">SSR</abbreviation> 和/或 <abbreviation explanation="Screen-Space Ambient Occlusion，屏幕空间环境光遮蔽">SSAO</abbreviation> 组合使用，实现更高的画质（有额外性能开销）。</paragraph>
                <paragraph>可以使用几个参数调整 <abbreviation explanation="Screen-Space Indirect Lighting, 屏幕空间间接照明">SSIL</abbreviation>:</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph><strong>半径(Radius)：</strong> 使用屏幕空间间接照明效果时，反射照明可以行进的距离。 较大的值将导致场景中的光线进一步反弹，但可能会导致采样不足的伪像，看起来像光源周围的长尖峰。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><strong>强度(Intensity)：</strong> 屏幕空间间接照明效果的亮度乘数。 值越高，光线越亮。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><strong>清晰度(Sharpness)：</strong> 允许屏幕空间间接照明效果在对象边缘模糊的量。 设置太高会导致对象边缘出现锯齿。 设置太低会使对象边缘显得模糊。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><strong>法线拒绝(Normal Rejection)：</strong> 计算屏幕空间间接照明时使用的法线拒绝量。 法线拒绝使用给定样本点的法线来拒绝背向当前像素的样本。 当仅照亮物体的一侧时，为了避免漏光，必须进行正常抑制。 但是，如果需要漏光，例如当场景主要包含从相机无法看到的面部发出光线的发射对象时，可以禁用正常拒绝。</paragraph>
                    </list_item>
                </bullet_list>
                <image candidates="{'*': 'tutorials/3d/img/environment_ssil.webp'}" uri="tutorials/3d/img/environment_ssil.webp"></image>
            </section>
            <section ids="signed-distance-field-global-illumination-sdfgi" names="signed\ distance\ field\ global\ illumination\ (sdfgi) 有符号距离场全局照明（sdfgi）">
                <title>有符号距离场全局照明（SDFGI）</title>
                <paragraph><emphasis>此功能仅在使用 Forward+ 后端时可用，移动或兼容性后端中不可用。</emphasis></paragraph>
                <paragraph>带符号距离场全局照明（SDFGI）是一种实时全局照明的形式。 它不是屏幕空间效果，这意味着它可以为屏幕外元素提供全局照明（与 <abbreviation explanation="Screen-Space Indirect Lighting，屏幕空间间接照明">SSIL</abbreviation> 不同）。</paragraph>
                <seealso>
                    <paragraph>有关设置此全局照明技术的说明，请参阅 <reference internal="True" refuri="global_illumination/using_sdfgi#doc-using-sdfgi"><inline classes="std std-ref">带符号距离场全局光照（SDFGI）</inline></reference>。</paragraph>
                </seealso>
                <image candidates="{'*': 'tutorials/3d/img/environment_sdfgi.webp'}" uri="tutorials/3d/img/environment_sdfgi.webp"></image>
                <target refid="doc-environment-and-post-processing-glow"></target>
            </section>
            <section ids="glow doc-environment-and-post-processing-glow" names="glow 辉光 doc_environment_and_post_processing_glow">
                <title>辉光</title>
                <paragraph><emphasis>此功能仅在使用 Forward+ 和移动后端时可用，在兼容后端中不可用。</emphasis></paragraph>
                <paragraph>在摄影和胶片中，当光量超过介质支持的最大值（无论是模拟还是数字）时，它通常会向外渗出到图像的较暗区域。在 Godot 中使用 <strong>辉光</strong> 模拟这种效果。</paragraph>
                <image candidates="{'*': 'tutorials/3d/img/environment_glow1.webp'}" uri="tutorials/3d/img/environment_glow1.webp"></image>
                <paragraph>默认情况下，即使启用了效果，它也会变弱或不可见。实际显示它需要发生的两个条件之一：</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <enumerated_list enumtype="arabic" prefix="" suffix=")">
                            <list_item>
                                <paragraph>像素中的光线超过 <strong>HDR阈值</strong> (其中0是所有光线都超过该阈值,1.0是光线超过色调映射器 <strong>白</strong> 值). 通常情况下, 这个值应该在1.0, 但它可以调低, 以允许更多的光线渗入. 还有一个额外的参数, <strong>HDR Scale</strong> , 允许对超过阈值的光线进行缩放(使其更亮或更暗).</paragraph>
                            </list_item>
                        </enumerated_list>
                    </list_item>
                </bullet_list>
                <image candidates="{'*': 'tutorials/3d/img/environment_glow_threshold.webp'}" uri="tutorials/3d/img/environment_glow_threshold.webp"></image>
                <bullet_list bullet="-">
                    <list_item>
                        <enumerated_list enumtype="arabic" prefix="" start="2" suffix=")">
                            <list_item>
                                <paragraph><strong>泛光</strong> 属性的值设置大于 <literal>0</literal> 。随着它的增加，它会以更高的数量将整个屏幕发送到辉光处理器。</paragraph>
                            </list_item>
                        </enumerated_list>
                    </list_item>
                </bullet_list>
                <image candidates="{'*': 'tutorials/3d/img/environment_glow_bloom.webp'}" uri="tutorials/3d/img/environment_glow_bloom.webp"></image>
                <paragraph>两者都会导致光从较亮的区域开始逸出。</paragraph>
                <paragraph>一旦看到辉光，就可以通过一些额外的参数来控制它：</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph><strong>Intensity</strong> （强度）是效果的整体比例，可以将其增强或减弱（ <literal>0.0</literal> 可以将其删除）。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><strong>Strength</strong> （强度）是指高斯滤波器内核的处理强度。数值越大，滤波器越饱和并向外扩展。一般来说，不需要改变这个值，因为可以通过 <strong>Levels</strong> 更有效地调整大小。</paragraph>
                    </list_item>
                </bullet_list>
                <paragraph>效果的<strong>混合模式</strong>也可以改变：</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph><strong>Additive</strong> （添加）是最强的一种，因为它只在图像上添加辉光效果，不涉及混合。一般来说，它太强了，不能使用，但在低强度的 <strong>泛光</strong> 下可能看起来很好，会产生一种梦幻般的效果。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><strong>Screen</strong> 确保辉光永远不会比自己更亮，它作为一个整体效果非常好。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><strong>Softlight</strong> 是默认的，也是最弱的一种，只在物体周围产生细微的颜色扰动。这种模式在黑暗场景中效果最好。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><strong>Replace</strong> （替换）可以用来 <reference internal="True" refid="doc-environment-and-post-processing-using-glow-to-blur-the-screen"><inline classes="std std-ref">模糊整个屏幕</inline></reference> 或调试效果。它只显示辉光的效果，没有下面的图片。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><strong>Mix</strong> （混合）将发光效果与主图像混合。 这可以用于更好的艺术效果控制。 混合因子由出现在混合模式上方的 <strong>Mix</strong> 属性控制（仅当混合模式设置为 Mix 时）。 除非增加 <strong>泛光</strong> ，否则高混合因子值将使图像变暗。</paragraph>
                    </list_item>
                </bullet_list>
                <paragraph>Godot 提供了<strong>等级</strong>，用于改变辉光效果的大小和形状。较小的级别是在物体周围出现的较强的辉光，而大的级别是覆盖整个屏幕的朦胧辉光：</paragraph>
                <image candidates="{'*': 'tutorials/3d/img/environment_glow_layers.webp'}" uri="tutorials/3d/img/environment_glow_layers.webp"></image>
                <paragraph>然而，这个系统的真正优势在于结合水平来创造更有趣的辉光模式：</paragraph>
                <image candidates="{'*': 'tutorials/3d/img/environment_glow_layers2.webp'}" uri="tutorials/3d/img/environment_glow_layers2.webp"></image>
                <paragraph>最后，可以使用 <emphasis>辉光贴图</emphasis> 来控制辉光效果，这是一种纹理，用于确定屏幕每个部分的辉光亮度。 该纹理可以选择着色，以将辉光效果着色为辉光贴图的颜色。 纹理会拉伸以适合视口，因此建议使用与视口最常见的纵横比（例如 16:9）相匹配的纵横比，以避免可见的失真。</paragraph>
                <paragraph>辉光贴图纹理有 2 个主要案例：</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>使用污垢图案纹理创建“镜头污垢”（lens dirt）效果。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>使用渐变纹理使屏幕特定部分的辉光减弱。</paragraph>
                    </list_item>
                </bullet_list>
                <image candidates="{'*': 'tutorials/3d/img/environment_glow_map.webp'}" uri="tutorials/3d/img/environment_glow_map.webp"></image>
                <target refid="doc-environment-and-post-processing-using-glow-in-2d"></target>
            </section>
            <section ids="using-glow-in-2d doc-environment-and-post-processing-using-glow-in-2d" names="using\ glow\ in\ 2d 在\ 2d\ 中使用辉光 doc_environment_and_post_processing_using_glow_in_2d">
                <title>在 2D 中使用辉光</title>
                <paragraph>在 2D 中使用辉光有两种方法：</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>从 Godot 4.2 开始，你可以在使用 Forward+ 和移动渲染方法时，启用 HDR 进行 2D 渲染。这会产生一定的性能损耗，但也会带来更大的动态范围。HDR 还可以让你通过使用各自的 <strong>Modulate</strong> （调制） 或 <strong>Self Modulate</strong> （自调制） 属性，来控制哪些对象产生辉光（在颜色选择器中使用 RAW 模式）。启用 HDR 还可以减少 2D 渲染输出中的条带。</paragraph>
                        <bullet_list bullet="-">
                            <list_item>
                                <paragraph>要在 2D 中启用 HDR，请打开项目设置，启用 <strong>渲染 &gt; 视口 &gt; HDR 2D</strong> ，然后重新启动编辑器。</paragraph>
                            </list_item>
                        </bullet_list>
                    </list_item>
                    <list_item>
                        <paragraph>如果你想最大限度地提高性能，可以禁用 HDR 进行 2D 渲染。但是这会减少你物体辉光的控制。</paragraph>
                        <bullet_list bullet="-">
                            <list_item>
                                <paragraph>启用辉光，将环境背景模式设置为 <strong>Canvas</strong> ，然后降低 <strong>Glow</strong> 中的 <strong>HDR Threshold</strong> （HDR 阈值），以便不是过亮的像素仍然会发出辉光。为了防止 UI 元素产生辉光，请将它们设为 <reference internal="True" refuri="../../classes/class_canvaslayer#class-canvaslayer"><inline classes="std std-ref">CanvasLayer</inline></reference> 节点的子节点。你可以使用环境资源的 <strong>Background &gt; Canvas Max Layer</strong> 属性来控制哪些层受辉光影响。</paragraph>
                            </list_item>
                        </bullet_list>
                    </list_item>
                </bullet_list>
                <figure align="center" ids="id1">
                    <image alt="在 2D 场景中使用辉光的示例" candidates="{'*': 'tutorials/3d/img/environment_and_post_processing_glow_in_2d.webp'}" uri="tutorials/3d/img/environment_and_post_processing_glow_in_2d.webp"></image>
                    <caption>在 2D 场景中使用辉光的示例。 已启用 HDR 2D，而硬币和子弹的 <strong>Modulate</strong> 属性使用颜色选择器中的 RAW 模式增加到过亮的值。</caption>
                </figure>
                <warning>
                    <paragraph>如果启用了 <strong>Rendering &gt; Viewport &gt; HDR 2D</strong> 项目设置，2D 渲染器将在线性颜色空间中渲染，因此 <literal>source_color</literal> 也必须用于在 <literal>canvas_item</literal> 中用作颜色输入的统一采样器着色器。如果不这样做，纹理就会显得很淡。</paragraph>
                    <paragraph>如果禁用了 2D HDR， <literal>source_color</literal> 将在 <literal>canvas_item</literal> 着色器中保持正常工作，因此，建议你的工作与之相关时使用它。</paragraph>
                </warning>
                <target refid="doc-environment-and-post-processing-using-glow-to-blur-the-screen"></target>
            </section>
            <section ids="using-glow-to-blur-the-screen doc-environment-and-post-processing-using-glow-to-blur-the-screen" names="using\ glow\ to\ blur\ the\ screen 使用辉光来使屏幕模糊 doc_environment_and_post_processing_using_glow_to_blur_the_screen">
                <title>使用辉光来使屏幕模糊</title>
                <paragraph>辉光可用于模糊整个视口，对于打开菜单时的背景模糊来说这个功能就很有用。除非你将环境的背景模式设置为 <strong>Canvas</strong> ，否则只有 3D 渲染会受到影响。为了防止 UI 元素在使用 Canvas 背景模式时变得模糊，请将它们设为 <reference internal="True" refuri="../../classes/class_canvaslayer#class-canvaslayer"><inline classes="std std-ref">CanvasLayer</inline></reference> 节点的子节点。你可以使用 Environment 资源的 <strong>Background &gt; Canvas Max Layer</strong> 属性来控制哪些层受此模糊效果影响。</paragraph>
                <paragraph>要使用辉光光作为一种模糊效果解决方案：</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>启用 <strong>归一化</strong> 并根据你的需要调整辉光等级。增加更高等级的索引将导致图像更模糊。建议将单个辉光等级设置为 <literal>1.0</literal> ，并将所有其他辉光等级保留为 <literal>0.0</literal> ，不过这不是必需设置。请注意，最终外观将根据视口分辨率而有所不同。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>将 <strong>Intensity</strong> 设置为 <literal>1.0</literal> ，并将 <strong>Bloom</strong> 设置为 <literal>1.0</literal> 。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>将 Blend Mode （混合模式）设置为 <strong>Replaced</strong> ，并将 <strong>HDR Luminance Cap</strong> （HDR 亮度上限）设置为 <literal>1.0</literal> 。</paragraph>
                    </list_item>
                </bullet_list>
                <figure align="center" ids="id2">
                    <image alt="使用辉光来模糊菜单背景中的 2D 渲染的示例" candidates="{'*': 'tutorials/3d/img/environment_and_post_processing_glow_blur.webp'}" uri="tutorials/3d/img/environment_and_post_processing_glow_blur.webp"></image>
                    <caption>使用辉光来模糊菜单背景中的 2D 渲染的示例</caption>
                </figure>
            </section>
            <section ids="adjustments" names="adjustments 调整">
                <title>调整</title>
                <paragraph>在处理结束时,Godot提供了进行一些标准图像调整的可能性.</paragraph>
                <image candidates="{'*': 'tutorials/3d/img/environment_adjustments.webp'}" uri="tutorials/3d/img/environment_adjustments.webp"></image>
                <paragraph><strong>基本 BCS 调整</strong></paragraph>
                <paragraph>第一项调整是能够更改典型的 <strong>Brightness</strong> （亮度） 、 <strong>Contrast</strong> （对比度） 和 <strong>Saturation</strong> （饱和度）属性：</paragraph>
                <image candidates="{'*': 'tutorials/3d/img/environment_adjustments_bcs.webp'}" uri="tutorials/3d/img/environment_adjustments_bcs.webp"></image>
                <paragraph><strong>使用一维渐变进行颜色校正</strong></paragraph>
                <paragraph>第二项调整是通过提供颜色校正梯度。 这可以通过将 GradientTexture1D 资源分配给 <strong>Color Correction</strong> （颜色较准）属性，或通过加载包含水平渐变的纹理来完成。 渐变的最左边部分代表源图像中的黑色，而渐变的最右边部分代表源图像中的白色。</paragraph>
                <paragraph>如下所示的线性黑色渐变将不起作用：</paragraph>
                <image candidates="{'*': 'tutorials/3d/img/environment_adjustments_default_gradient.webp'}" uri="tutorials/3d/img/environment_adjustments_default_gradient.webp"></image>
                <paragraph>但是创建自定义的会允许将每个通道映射到不同的颜色:</paragraph>
                <image candidates="{'*': 'tutorials/3d/img/environment_adjustments_custom_gradient.webp'}" uri="tutorials/3d/img/environment_adjustments_custom_gradient.webp"></image>
                <paragraph><strong>使用 3D LUT 进行颜色校正</strong></paragraph>
                <paragraph>3D 查找纹理 (LUT) 也可用于色彩校正。 这是一种特殊的纹理，用于单独修改每个颜色通道（红色、绿色、蓝色）。 该图像可以是任何分辨率，但由于颜色校正是低频数据，出于性能原因，建议坚持使用低分辨率。 LUT 纹理的分辨率通常为 17×17×17、33×33×33、51×51×51 或 65×65×65（奇数尺寸允许更好的插值）。</paragraph>
                <paragraph>为此，查找纹理的导入模式必须在导入坞中设置为Texture3D（而不是作为常规Texture2D导入）：</paragraph>
                <image candidates="{'*': 'tutorials/3d/img/environment_adjustments_3d_lut_import.webp'}" uri="tutorials/3d/img/environment_adjustments_3d_lut_import.webp"></image>
                <paragraph>确保同时配置要导入的水平和垂直切片的数量。 如果不这样做，LUT 纹理在使用时将不会正确影响视口。 辉光可以通过在文件系统面板中双击 3D 纹理来预览如何导入 3D 纹理，然后转到检查器以翻转纹理的图层。</paragraph>
                <paragraph>你可以使用这个中性 33×33×33 LUT 模板作为基础（右键单击并选择 <strong>另存为...(Save as...)</strong> ）：</paragraph>
                <image candidates="{'*': 'tutorials/3d/img/environment_adjustments_3d_lut_template.webp'}" uri="tutorials/3d/img/environment_adjustments_3d_lut_template.webp"></image>
                <paragraph>使用上述 LUT 模板，将其导入模式更改为 <strong>Texture3D</strong> 后，在导入面板中将其 <strong>Horizontal</strong> 切片数量设置为 <literal>33</literal> ，然后单击 <strong>重新导入</strong> 。 如果将此 LUT 加载到 <strong>颜色校正</strong> 属性中，你现在不会看到任何明显的差异，因为该纹理被设计为中性起点。</paragraph>
                <paragraph>可以在图像编辑器中修改此 LUT 模板，以为图像提供不同的氛围。 常见的工作流程是将 LUT 图像放置在项目 3D 视口的屏幕截图旁边，然后使用图像编辑器同时修改 LUT 图像和屏幕截图。 然后可以保存 LUT 并将其应用到游戏引擎，以实时执行相同的色彩校正。</paragraph>
                <paragraph>例如，在图像编辑器中修改 LUT 模板以使其呈现“棕褐色”外观，结果如下图所示：</paragraph>
                <image candidates="{'*': 'tutorials/3d/img/environment_adjustments_3d_lut_comparison.webp'}" uri="tutorials/3d/img/environment_adjustments_3d_lut_comparison.webp"></image>
                <note>
                    <paragraph>调整和色彩校正在色调映射 <emphasis>之后</emphasis> 应用。 这意味着上面定义的色调映射属性在启用调整时仍然有效。</paragraph>
                </note>
            </section>
        </section>
        <section ids="camera-attribute-options" names="camera\ attribute\ options 相机属性选项">
            <title>相机属性选项</title>
            <section ids="depth-of-field-far-blur" names="depth\ of\ field\ /\ far\ blur 景深/远模糊">
                <title>景深/远模糊</title>
                <paragraph>此效果可模拟高端相机的焦距。它模糊了给定范围后面的物体。它有一个 <strong>距离</strong> ， <strong>过渡</strong> 区域（世界单位）：</paragraph>
                <image candidates="{'*': 'tutorials/3d/img/environment_dof_far.webp'}" uri="tutorials/3d/img/environment_dof_far.webp"></image>
                <paragraph><strong>Amount</strong> 参数控制模糊量。对于较大的模糊，可能需要在高级项目设置中调整景深质量以避免伪影。</paragraph>
            </section>
            <section ids="depth-of-field-near-blur" names="depth\ of\ field\ /\ near\ blur 景深/近模糊">
                <title>景深/近模糊</title>
                <paragraph>此效果可模拟相机的焦距。它使靠近相机的物体模糊（在远处模糊的相反方向上作用）。它具有 <strong>Distance</strong>（距离）以及 <strong>Transition</strong>（过渡）区域（使用世界单位）：</paragraph>
                <image candidates="{'*': 'tutorials/3d/img/environment_dof_near.webp'}" uri="tutorials/3d/img/environment_dof_near.webp"></image>
                <paragraph>** Amount ** 参数控制模糊量. 对于较大的模糊, 可能需要调整 <strong>质量</strong> 以避免伪影.</paragraph>
                <paragraph>通常使用两种模糊将观众的注意力集中在给定对象上。</paragraph>
                <image candidates="{'*': 'tutorials/3d/img/environment_mixed_blur.webp'}" uri="tutorials/3d/img/environment_mixed_blur.webp"></image>
                <note>
                    <paragraph>当使用 CameraAttributesPhysical 而不是 CameraAttributesPractical 时，景深是根据相机属性的焦距、焦距和光圈自动计算的。</paragraph>
                </note>
            </section>
            <section ids="exposure" names="exposure 曝光">
                <title>曝光</title>
                <paragraph>这会成倍增加相机可见的整体场景亮度。 值越高，场景视觉上越亮。</paragraph>
            </section>
            <section ids="auto-exposure" names="auto\ exposure 自动曝光">
                <title>自动曝光</title>
                <paragraph><emphasis>此功能仅在使用 Forward+ 后端时可用，移动或兼容性后端中不可用。</emphasis></paragraph>
                <paragraph>尽管在大多数情况下，光照和纹理都受到艺术家的严格控制，但 Godot 支持通过自动曝光机制实现基本的高动态范围。通常是在将室内区域与低光区域和明亮的室外区域相结合时，使用该功能来增加真实感。自动曝光会模拟相机（或眼睛），努力适应明暗位置及其不同的光量。</paragraph>
                <note>
                    <paragraph>自动曝光需要每帧评估场景的亮度，性能成本适中。 因此，如果自动曝光对场景影响不大，建议禁用它。</paragraph>
                </note>
                <image candidates="{'*': 'tutorials/3d/img/environment_hdr_autoexp.webp'}" uri="tutorials/3d/img/environment_hdr_autoexp.webp"></image>
                <paragraph>使用自动曝光的最简单方法是确保室外灯光（或其他强光）的能量超过 1.0。这是通过调整它们的 <strong>Energy</strong> 乘数（对灯光本身）来实现的。为了使其保持一致，<strong>Sky</strong> 通常也需要使用能量乘数，以配合平行光。通常情况下，数值在 3.0 到 6.0 之间，就足以模拟室内室外条件。</paragraph>
                <paragraph>通过将自动曝光与 <reference internal="True" refid="doc-environment-and-post-processing-glow"><inline classes="std std-ref">辉光</inline></reference> 后处理相结合（更多内容如下），超过色调映射 <strong>White</strong> 的像素将会逸出至辉光缓冲区，从而在摄影中创造典型的泛光效果。</paragraph>
                <image candidates="{'*': 'tutorials/3d/img/environment_hdr_bloom.webp'}" uri="tutorials/3d/img/environment_hdr_bloom.webp"></image>
                <paragraph>"自动曝光" 部分中的用户可控值具有合理的默认值, 但你仍然可以调整它们:</paragraph>
                <image candidates="{'*': 'tutorials/3d/img/environment_hdr.webp'}" uri="tutorials/3d/img/environment_hdr.webp"></image>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph><strong>Scale：</strong> （比例）用于缩放照明的值。较高的值会产生较亮的图像，较低的值会产生较暗的图像。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><strong>Min Sensitivity / Min Exposure Value：</strong> （最小灵敏度/最小曝光值）自动曝光旨在调整的最小亮度（使用 CameraAttributesPractical 时在 ISO 中，或者使用 CameraAttributesPhysical 时在 EV100 中）。亮度是屏幕所有像素的光的平均值。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><strong>Max Sensitivity / Max Exposure Value：</strong> （最大灵敏度/最大曝光值）自动曝光旨在调整的最大亮度（使用 CameraAttributesPractical 时在 ISO 中，或使用 CameraAttributesPhysical 时在 EV100 中）。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><strong>Speed：</strong> （速度）亮度自行校正的速度。值越高，亮度校正的速度越快。较高的值可能更适合快节奏的游戏，但在某些情况下可能会分散注意力。</paragraph>
                    </list_item>
                </bullet_list>
                <paragraph>使用 CameraAttributesPractical 时，使用 ISO 中定义的 <emphasis>灵敏度</emphasis> 而不是 EV100 中的曝光值来设置曝光。 典型的 ISO 值在 50 到 3200 之间，值越高，最终曝光越高。 现实生活中，白天摄影一般使用100到800之间的 ISO 值。</paragraph>
                <seealso>
                    <paragraph>如果你希望使用现实世界的单位来配置相机的曝光、视野和景深，请参阅 <reference internal="True" refuri="physical_light_and_camera_units#doc-physical-light-and-camera-units"><inline classes="std std-ref">物理灯光和相机单位</inline></reference>。</paragraph>
                </seealso>
                <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="翻译状态" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
            </section>
        </section>
    </section>
</document>

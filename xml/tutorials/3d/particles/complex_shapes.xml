<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/tutorials/3d/particles/complex_shapes.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <target refid="doc-3d-particles-complex-shapes"></target>
    <section ids="complex-emission-shapes doc-3d-particles-complex-shapes" names="complex\ emission\ shapes 复杂发射形状 doc_3d_particles_complex_shapes">
        <title>复杂发射形状</title>
        <figure>
            <image alt="复杂发射形状" candidates="{'*': 'tutorials/3d/particles/img/particle_complex_emission.webp'}" uri="tutorials/3d/particles/img/particle_complex_emission.webp"></image>
        </figure>
        <paragraph>如果仅根据处理材质 <reference internal="True" refuri="process_material_properties#doc-process-material-properties-shapes"><inline classes="std std-ref">process material</inline></reference> 中的某种简单形状发射粒子是不够的，Godot 提供了一种根据任意复杂形状发射粒子的方法。这些形状由场景中的网格生成，并作为纹理存储在粒子处理材质中。这是一种用途非常广泛的工作流程，用户可以将粒子系统用于传统用法之外的用途，如树叶或复杂的全息效果。</paragraph>
        <note>
            <paragraph>从网格创建发射点时，只能选择一个节点作为发射源。如果你希望粒子从多个形状中发射，你必须创建多个粒子系统，或者在外部数字内容创作（DCC）软件中将网格合并为一个。</paragraph>
        </note>
        <figure align="right" ids="id1">
            <image alt="创建发射点" candidates="{'*': 'tutorials/3d/particles/img/particle_create_emission_points.webp'}" uri="tutorials/3d/particles/img/particle_create_emission_points.webp"></image>
            <caption>创建粒子发射点...</caption>
        </figure>
        <figure align="right" ids="id2">
            <image alt="选择发射粒子的网格" candidates="{'*': 'tutorials/3d/particles/img/particle_select_emission_mesh.webp'}" uri="tutorials/3d/particles/img/particle_select_emission_mesh.webp"></image>
            <caption>...来源自一个网格实例</caption>
        </figure>
        <figure align="right" ids="id3">
            <image alt="设置发射密度" candidates="{'*': 'tutorials/3d/particles/img/particle_emission_density.webp'}" uri="tutorials/3d/particles/img/particle_emission_density.webp"></image>
            <caption>更多的点 = 更高的粒子密度</caption>
        </figure>
        <paragraph>要使用这一功能，首先要在当前场景中创建一个粒子系统。添加一个用于无限生成粒子发射点的网格实例。选择粒子系统后，导航到视口菜单并选择 GPU粒子3D*GPUParticles3D* 选项。从中选择 <literal>从节点创建发射点 / Create Emission Points From Node</literal>。</paragraph>
        <paragraph>此时会弹出一个对话窗口，要求你选择一个节点作为发射源。选择场景中的一个网格实例并确认选择。下一个对话窗口将处理点的数量以及如何生成这些点。</paragraph>
        <paragraph>发射点 <problematic ids="id2" refid="id1">``</problematic>Emission Points``控制将要生成的点的总数。粒子将从这些点中产生，因此在这里输入的内容取决于源网格的大小（需要覆盖的面积）和所需的粒子密度。</paragraph>
        <paragraph>发射源 <literal>Emission Source``提供 3 种不同的点生成方式。如果你只想在网格表面分布发射点，请选择 表面点``Surface Point</literal>。如果你还想生成表面法线信息，并使粒子沿法线指向的方向移动，请选择表面点 + 法线（定向）``Surface Points + Normal (Directed)``。最后一个选项体积``Volume``会在网格内的任何地方创建发射点，而不仅仅是网格表面。</paragraph>
        <paragraph>发射点存储在粒子系统的本地坐标系中，因此你可以移动粒子节点，发射点也会跟着移动。当你想在多个不同的地方使用同一个粒子系统时，这可能会很有用。另一方面，当你移动粒子系统或源网格时，可能需要重新生成发射点。</paragraph>
        <section ids="emission-shape-textures" names="emission\ shape\ textures 发射形状纹理">
            <title>发射形状纹理</title>
            <figure align="right" ids="id4">
                <image alt="发射纹理" candidates="{'*': 'tutorials/3d/particles/img/particle_emission_textures.webp'}" uri="tutorials/3d/particles/img/particle_emission_textures.webp"></image>
                <caption>可用的发射形状纹理</caption>
            </figure>
            <paragraph>复杂粒子发射形状的所有数据都存储在一组纹理中。具体数量取决于所使用的发射形状类型。如果将粒子处理材质的发射形状 <literal>Emission Shape``组中的形状 ``Shape``属性设置为点 ``Points</literal>，就可以访问点纹理 <literal>Point Texture``和颜色纹理``Color Texture``这两个纹理属性。如果将其设置为定向点``Directed Points</literal>，就可以访问第三个属性法线纹理``Normal Texture``属性。</paragraph>
            <paragraph>点纹理``Point Texture``属性涵盖了上一步可能生成的所有发射点。每个粒子生成时都会随机选择一个点。如果存在法线纹理``Normal Texture`` 属性，它会在点位置提供一个方向向量。如果还设置了颜色纹理``Color Texture`` 属性，它会在点位置进行采样，调和处理材质上设置的其他颜色，为粒子提供颜色。</paragraph>
            <paragraph>你还可以通过调用点计数``Point Count`` 属性，在创建发射形状后随时更改发射点的数量。这包括在游戏运行时动态更改点数量。</paragraph>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="翻译状态" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

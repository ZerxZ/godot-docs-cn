<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/tutorials/3d/particles/index.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <target refid="doc-3d-particles"></target>
    <section ids="particle-systems-3d doc-3d-particles" names="particle\ systems\ (3d) 粒子系统（3d） doc_3d_particles">
        <title>粒子系统（3D）</title>
        <paragraph>本教程的本节介绍了(3D) GPU 加速的粒子系统。这里讨论的大部分内容同样适用于 CPU 粒子。</paragraph>
        <section ids="introduction" names="introduction 前言">
            <title>前言</title>
            <paragraph>你可以使用粒子系统来模拟复杂的物理效果，如火焰、火花、烟雾、魔法效果等等。它们非常适用于创建动态而有机的行为，并为你的场景增加"生命"。</paragraph>
            <paragraph>这个想法是，以固定的间隔发射具有固定的寿命的“粒子”。在其生命周期中，每个粒子都具有相同的基本行为。让每个粒子变得不同并提供整体更加 "有机" 外观的是你可以添加到大多数参数和行为中的“随机性”。</paragraph>
            <paragraph>在Godot中，你创建的每个粒子系统由两个主要部分组成：粒子和发射器。</paragraph>
            <section ids="particles" names="particles">
                <title>Particles</title>
                <paragraph>粒子是粒子系统中可见的部分。当粒子系统处于活动状态时，它就是你在屏幕上看到的东西：微小的尘埃、火焰的火苗、魔法效果的发光球体。在一个单独的系统中，你可以拥有从几百个到成千上万个粒子。你可以随机设置粒子的大小、速度和运动方向，并在其生命周期内改变其颜色。当你想到一堆火时，可以将所有从中飞出的小火星视为独立的粒子。</paragraph>
            </section>
            <section ids="emitters" names="emitters 发射器">
                <title>发射器</title>
                <paragraph>发射器产生粒子。发射器通常是不可见的，但它们可以有一个形状。该形状控制粒子的生成位置和方式，例如它们是否应该像尘土一样填满房间，还是像喷泉一样从一个点射出。回到火的例子，发射器就相当于火焰中心的炽热，产生了烟尘和火焰。</paragraph>
            </section>
            <section ids="node-overview" names="node\ overview 节点总览">
                <title>节点总览</title>
                <figure align="right" ids="id1">
                    <image alt="在分组中的节点列表" candidates="{'*': 'tutorials/3d/particles/img/particle_nodes.webp'}" uri="tutorials/3d/particles/img/particle_nodes.webp"></image>
                    <caption>在Godot中可用的所有三维粒子节点</caption>
                </figure>
                <paragraph>在 Godot 中有两种类型的三维粒子系统：在 GPU 上进行处理的 <reference internal="True" refuri="../../../classes/class_gpuparticles3d#class-gpuparticles3d"><inline classes="std std-ref">GPUParticles3D</inline></reference>，以及在 CPU 上进行处理的 <reference internal="True" refuri="../../../classes/class_cpuparticles3d#class-cpuparticles3d"><inline classes="std std-ref">CPUParticles3D</inline></reference>。</paragraph>
                <paragraph>CPU 粒子系统相对于 GPU 粒子系统来说不够灵活，但它们适用于更广泛的硬件，并可为旧设备和手机提供更好的支持。由于它们在 CPU 上进行处理，因此性能上不如 GPU 粒子系统，并且无法渲染出尽可能多的单个粒子。此外，CPU 粒子系统目前不具备 GPU 粒子控制的所有可用选项。</paragraph>
                <paragraph>GPU粒子系统在GPU上运行，并且可以在现代硬件上渲染成十几万个粒子。你可以为其编写自定义粒子着色器，使其非常灵活。还可以通过使用吸引子节点和碰撞节点，使它们与环境进行交互。</paragraph>
                <paragraph>有三种粒子吸引器节点：<reference internal="True" refuri="../../../classes/class_gpuparticlesattractorbox3d#class-gpuparticlesattractorbox3d"><inline classes="std std-ref">GPUParticlesAttractorBox3D</inline></reference>、<reference internal="True" refuri="../../../classes/class_gpuparticlesattractorsphere3d#class-gpuparticlesattractorsphere3d"><inline classes="std std-ref">GPUParticlesAttractorSphere3D</inline></reference> 和 <reference internal="True" refuri="../../../classes/class_gpuparticlesattractorvectorfield3d#class-gpuparticlesattractorvectorfield3d"><inline classes="std std-ref">GPUParticlesAttractorVectorField3D</inline></reference>。吸引器节点对其作用范围内的所有粒子施加力，并根据该力的方向使它们靠近或远离。</paragraph>
                <paragraph>有几种粒子碰撞节点。<reference internal="True" refuri="../../../classes/class_gpuparticlescollisionbox3d#class-gpuparticlescollisionbox3d"><inline classes="std std-ref">GPUParticlesCollisionBox3D</inline></reference> 和 <reference internal="True" refuri="../../../classes/class_gpuparticlescollisionsphere3d#class-gpuparticlescollisionsphere3d"><inline classes="std std-ref">GPUParticlesCollisionSphere3D</inline></reference> 是较简单的节点。你可以使用它们来创建基本形状，如盒子、地板或墙壁，以便粒子与其碰撞。另外两个节点提供了更复杂的碰撞行为。当你希望室内场景与粒子发生碰撞，无需手动创建所有单独的盒子和球体碰撞器时，<reference internal="True" refuri="../../../classes/class_gpuparticlescollisionsdf3d#class-gpuparticlescollisionsdf3d"><inline classes="std std-ref">GPUParticlesCollisionSDF3D</inline></reference> 非常有用。如果你希望粒子与大型室外场景发生碰撞，可以使用 <reference internal="True" refuri="../../../classes/class_gpuparticlescollisionheightfield3d#class-gpuparticlescollisionheightfield3d"><inline classes="std std-ref">GPUParticlesCollisionHeightField3D</inline></reference> 节点。它会创建一个包含世界和其中对象的高度图，并将其用于大规模粒子碰撞。</paragraph>
            </section>
        </section>
        <section ids="basic-usage" names="basic\ usage 基本用法">
            <title>基本用法</title>
            <compound classes="toctree-wrapper" ids="toc-particles-basic" names="toc-particles-basic">
                <compact_paragraph toctree="True"><bullet_list><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="creating_a_3d_particle_system">创建 3D 粒子系统</reference></compact_paragraph></list_item><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="properties">3D 粒子系统属性</reference></compact_paragraph></list_item><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="process_material_properties">处理材质属性</reference></compact_paragraph></list_item><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="#particle-flags" internal="True" refuri="process_material_properties#particle-flags">粒子标志</reference></compact_paragraph></list_item><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="#spawn" internal="True" refuri="process_material_properties#spawn">生成</reference></compact_paragraph></list_item><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="#accelerations" internal="True" refuri="process_material_properties#accelerations">加速度</reference></compact_paragraph></list_item><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="#display" internal="True" refuri="process_material_properties#display">显示</reference></compact_paragraph></list_item><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="#collision" internal="True" refuri="process_material_properties#collision">Collision</reference></compact_paragraph></list_item><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="#sub-emitter" internal="True" refuri="process_material_properties#sub-emitter">Sub-emitter</reference></compact_paragraph></list_item></bullet_list></compact_paragraph>
            </compound>
        </section>
        <section ids="advanced-topics" names="advanced\ topics 高级专题">
            <title>高级专题</title>
            <compound classes="toctree-wrapper" ids="toc-particles-advanced" names="toc-particles-advanced">
                <compact_paragraph toctree="True"><bullet_list><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="subemitters">Particle sub-emitters</reference></compact_paragraph></list_item><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="trails">3D 粒子尾迹</reference></compact_paragraph></list_item><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="turbulence">Particle turbulence</reference></compact_paragraph></list_item><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="attractors">3D 粒子吸引子</reference></compact_paragraph></list_item><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="collision">3D粒子碰撞</reference></compact_paragraph></list_item><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="complex_shapes">复杂发射形状</reference></compact_paragraph></list_item></bullet_list></compact_paragraph>
            </compound>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="翻译状态" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

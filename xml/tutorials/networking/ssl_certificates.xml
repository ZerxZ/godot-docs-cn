<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/tutorials/networking/ssl_certificates.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <target refid="doc-ssl-certificates"></target>
    <section ids="ssl-certificates doc-ssl-certificates" names="ssl\ certificates ssl\ 证书 doc_ssl_certificates">
        <title>SSL 证书</title>
        <section ids="introduction" names="introduction 前言">
            <title>前言</title>
            <paragraph>It is often desired to use SSL connections for communications to avoid
                "man in the middle" attacks. Godot has a connection wrapper,
                <reference internal="True" refuri="../../classes/class_streampeertls#class-streampeertls"><inline classes="std std-ref">StreamPeerTLS</inline></reference>,
                which can take a regular connection and add security around it. The
                <reference internal="True" refuri="../../classes/class_httpclient#class-httpclient"><inline classes="std std-ref">HTTPClient</inline></reference>
                class also supports HTTPS by using this same wrapper.</paragraph>
            <paragraph>Godot包括了来自Mozilla的SSL证书, 但你可以在项目设置中用.crt文件提供你自己的:</paragraph>
            <image candidates="{'*': 'tutorials/networking/img/ssl_certs.png'}" uri="tutorials/networking/img/ssl_certs.png"></image>
            <paragraph>该文件应包含任意数量的 <reference name="PEM 格式的公共证书" refuri="https://en.wikipedia.org/wiki/Privacy-enhanced_Electronic_Mail">PEM 格式的公共证书</reference> .</paragraph>
            <paragraph>当然, 请记住将.crt添加为过滤器, 以便导出器在导出项目时识别这一点.</paragraph>
            <image candidates="{'*': 'tutorials/networking/img/add_crt.png'}" uri="tutorials/networking/img/add_crt.png"></image>
            <paragraph>获取证书有两种方法:</paragraph>
        </section>
        <section ids="approach-1-self-signed-cert" names="approach\ 1:\ self\ signed\ cert 方法\ 1：自签名证书">
            <title>方法 1：自签名证书</title>
            <paragraph>第一种方法最简单: 生成一个私钥和公钥对, 并将公钥(PEM格式)添加到.crt文件中. 私钥应该放到你的服务器上.</paragraph>
            <paragraph>OpenSSL有 <reference name="一些文档" refuri="https://raw.githubusercontent.com/openssl/openssl/master/doc/HOWTO/keys.txt">一些文档</reference> 谈到这些. 这种方法也 <strong>不需要域名验证</strong> 也不要求你花费现金从CA购买证书.</paragraph>
        </section>
        <section ids="approach-2-ca-cert" names="approach\ 2:\ ca\ cert 方法\ 2：ca\ 证书">
            <title>方法 2：CA 证书</title>
            <paragraph>第二种方法是借助 Verisign、Geotrust 等证书颁发机构（CA）。这是一个更加繁琐的过程，但它更加“正式”并且可以确保你的身份被清晰地表示。</paragraph>
            <paragraph>除非你与大公司或企业合作, 或需要连接到别人的服务器(即通过HTTPS连接到谷歌或其他REST API供应商), 否则这种方法就不那么有用.</paragraph>
            <paragraph>此外, 当使用CA颁发的证书时, <strong>你必须启用域名验证</strong> , 以确保你要连接的域名是你想连接的域名, 否则一个CA颁发的证书将会成功用到任意数量的网站中.</paragraph>
            <paragraph>如果你使用的是Linux, 则可以使用系统提供的证书文件, 通常位于:</paragraph>
            <literal_block force="False" highlight_args="{}" language="none" linenos="False" xml:space="preserve">/etc/ssl/certs/ca-certificates.crt</literal_block>
            <paragraph>此文件允许HTTPS连接到几乎任何网站(即Google,Microsoft等).</paragraph>
            <paragraph>或者, 如果要连接到特定网站, 请选择任何更加具体的证书.</paragraph>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="翻译状态" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

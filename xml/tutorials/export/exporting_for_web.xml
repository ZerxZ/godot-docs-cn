<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/tutorials/export/exporting_for_web.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <target refid="doc-exporting-for-web"></target>
    <section ids="exporting-for-the-web doc-exporting-for-web" names="exporting\ for\ the\ web 为\ web\ 导出 doc_exporting_for_web">
        <title>为 Web 导出</title>
        <seealso>
            <paragraph>这个页面描述的是如何将 Godot 项目导出到 HTML。如果你想要找的是从源码编译编辑器或导出模板二进制文件，请阅读 <reference internal="True" refuri="../../contributing/development/compiling/compiling_for_web#doc-compiling-for-web"><inline classes="std std-ref">为 Web 平台编译</inline></reference>。</paragraph>
        </seealso>
        <paragraph>HTML5 export allows publishing games made in Godot Engine to the browser.
            This requires support for <reference name="WebAssembly" refuri="https://webassembly.org/">WebAssembly</reference>, <reference name="WebGL" refuri="https://www.khronos.org/webgl/">WebGL</reference> and
            <reference name="SharedArrayBuffer" refuri="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer">SharedArrayBuffer</reference><target ids="sharedarraybuffer" names="sharedarraybuffer" refuri="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer"></target>
            in the user's browser.</paragraph>
        <attention>
            <paragraph>使用Godot 4以C#编写的项目目前无法导出到Web。若要在Web平台上使用C#，请改用Godot 3。</paragraph>
        </attention>
        <tip>
            <paragraph>Use the browser-integrated developer console, usually opened
                with <literal classes="kbd">F12</literal> (<literal classes="kbd">Cmd + Option + I</literal> on macOS), to view
                <strong>debug information</strong> like JavaScript, engine, and WebGL errors.</paragraph>
        </tip>
        <attention>
            <paragraph>由于SharedArrayBuffer和WebGL 2.0的上游错误，Godot 4的HTML5导出目前无法在macOS和iOS上运作。我们建议改用macOS &lt;doc_exporting_for_macos&gt;`和iOS &lt;doc_exporting_for_ios&gt;`本机导出功能，因为它也会带来更好的性能。</paragraph>
            <paragraph>一般来说，Godot 3的HTML5导出与各种浏览器更兼容，特别是在使用GLES2算绘后端（只需要WebGL 1.0）时。</paragraph>
        </attention>
        <section ids="webgl-version" names="webgl\ version webgl\ 版本">
            <title>WebGL 版本</title>
            <paragraph>Godot 4.0及更高版本只能针对WebGL 2.0（使用兼容性算绘方法）。目前还没有稳定的方法在网路上运作Vulkan应用程序。</paragraph>
            <paragraph>有关支持WebGL 2.0的浏览器版本列表，请参阅「我可以使用WebGL 2.0 &lt;<reference refuri="https://caniuse.com/webgl2">https://caniuse.com/webgl2</reference>&gt;」。请注意，Safari在WebGL 2.0支持方面存在一些其他浏览器不具备的问题，因此我们建议尽可能使用基于Chromium的浏览器或Firefox。</paragraph>
            <target refid="doc-javascript-export-options"></target>
        </section>
        <section ids="export-options doc-javascript-export-options" names="export\ options 导出选项 doc_javascript_export_options">
            <title>导出选项</title>
            <paragraph>如果可以使用可运行的Web导出模板, 则编辑器中的 <emphasis>停止场景</emphasis> 和 <emphasis>播放编辑的场景</emphasis> 按钮之间会出现一个按钮, 可以在默认浏览器中快速打开游戏进行测试.</paragraph>
            <paragraph>If your project uses GDExtension <strong>Extension Support</strong> needs to be enabled.</paragraph>
            <paragraph>If you plan to use <reference internal="True" refuri="../assets_pipeline/importing_images#doc-importing-images"><inline classes="std std-ref">VRAM compression</inline></reference> make sure that
                <strong>Vram Texture Compression</strong> is enabled for the targeted platforms (enabling
                both <strong>For Desktop</strong> and <strong>For Mobile</strong> will result in a bigger, but more
                compatible export).</paragraph>
            <paragraph>如果给出了 <strong>自定义HTML Shell</strong> 文件的路径, 则将使用它来代替默认的HTML页面. 请参阅 <reference internal="True" refuri="../platform/web/customizing_html5_shell#doc-customizing-html5-shell"><inline classes="std std-ref">导出自定义 HTML 页面</inline></reference>.</paragraph>
            <paragraph><strong>Head Include</strong> 被附加到生成的HTML页面的 <literal>&lt;head&gt;</literal> 元素中. 例如, 这允许加载webfonts和第三方JavaScript APIs, 包括CSS或运行JavaScript代码.</paragraph>
            <important>
                <paragraph>每个项目必须生成他们自己的HTML文件。在导出时，几个文本占位符会在生成的HTML文件中被替换，专门用于给定的导出选项。任何对该HTML文件的直接修改都会在以后的导出中丢失。要自定义生成的文件，请使用** 自定义HTML shell**选 项。</paragraph>
            </important>
        </section>
        <section ids="limitations" names="limitations 限制">
            <title>限制</title>
            <paragraph>出于安全和隐私的原因, 许多在本机平台上轻松工作的功能在Web平台上更加复杂. 以下列出了将Godot游戏移植到Web时应注意的限制.</paragraph>
            <target refid="doc-javascript-secure-contexts"></target>
            <important ids="doc-javascript-secure-contexts" names="doc_javascript_secure_contexts">
                <paragraph>浏览器供应商正在使越来越多的功能只在 <reference name="安全上下文" refuri="https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts">安全上下文</reference><target ids="id1" names="安全上下文" refuri="https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts"></target> 中可用，这意味着这些功能只有在通过安全的HTTPS连接提供网页时才可用（localhost通常不受这种要求影响）。</paragraph>
            </important>
            <section ids="using-cookies-for-data-persistence" names="using\ cookies\ for\ data\ persistence 使用\ cookie\ 进行数据持久化">
                <title>使用 cookie 进行数据持久化</title>
                <paragraph>如果需要持久化 <literal>user://</literal> 文件系统, 用户必须 <strong>允许cookie</strong> (特别是IndexedDB). 当玩 <literal>iframe</literal> 中呈现的游戏时, 还必须启用 <strong>第三方</strong> cookie. 隐身/隐私浏览模式也会防止持久性.</paragraph>
                <paragraph>方法 <literal>OS.is_userfs_persistent()</literal> 可用于检查 <literal>user://</literal> 文件系统是否持久, 但在某些情况下会误报.</paragraph>
            </section>
            <section ids="background-processing" names="background\ processing 后台处理">
                <title>后台处理</title>
                <paragraph>这个标签页不再是用户浏览器的活动标签页时，项目就会被浏览器暂停。也就是说不会运行 <literal>_process()</literal>、<literal>_physics_process()</literal> 等函数，除非用户重新激活了这个标签页（切换到这个标签页）。如果用户在标签页外停留了过长的时间，就可能造成网络游戏的掉线。</paragraph>
                <paragraph>这一限制不适用于丢失焦点的浏览器<emphasis>窗口</emphasis>。因此，对于用户而言，变通方法是让项目运行在一个单独的<emphasis>窗口</emphasis>中，而不是标签页。</paragraph>
            </section>
            <section ids="full-screen-and-mouse-capture" names="full\ screen\ and\ mouse\ capture 全屏和鼠标捕获">
                <title>全屏和鼠标捕获</title>
                <paragraph>浏览器不允许任意 <strong>进入全屏</strong> . ** 捕获光标** 也是如此. 相反, 这些操作必须作为对JavaScript输入事件的响应而发生. 在Godot中, 这意味着从按下的输入事件, 例如 <literal>_input</literal> 或 <literal>_unhandled_input</literal>, 回调中进入全屏. 查询 <reference internal="True" refuri="../../classes/class_input#class-input"><inline classes="std std-ref">Input</inline></reference> 单例是不够的, 相关的输入事件当前必须是活动的.</paragraph>
                <paragraph>出于同样的原因, 除非从有效的输入事件处理程序中启动引擎, 否则全屏项目设置将不起作用. 这需要 <reference internal="True" refuri="../platform/web/customizing_html5_shell#doc-customizing-html5-shell"><inline classes="std std-ref">定制HTML 页面</inline></reference>.</paragraph>
            </section>
            <section ids="audio" names="audio 音频">
                <title>音频</title>
                <paragraph>一些浏览器限制网站上的音频自动播放。绕过这一限制的最简单方法是请求玩家点击、点击或按下一个键/按钮以启用音频，例如在游戏开始时显示启动屏幕时。</paragraph>
                <seealso>
                    <paragraph>Google提供了有关其 <reference name="网络音频自动播放政策" refuri="https://sites.google.com/a/chromium.org/dev/audio-video/autoplay">网络音频自动播放政策</reference> 的其他信息.</paragraph>
                    <paragraph>苹果Safari团队还发布了关于“macOS自动播放政策更改”的更多信息&lt;<reference refuri="https://webkit.org/blog/7734/auto-play-policy-changes-for-macos/">https://webkit.org/blog/7734/auto-play-policy-changes-for-macos/</reference>&gt;`__.</paragraph>
                </seealso>
                <warning>
                    <paragraph>访问麦克风需要<reference internal="True" refid="doc-javascript-secure-contexts"><inline classes="std std-ref">安全上下文</inline></reference>。</paragraph>
                </warning>
            </section>
            <section ids="networking" names="networking 网络">
                <title>网络</title>
                <paragraph>由于缺乏浏览器的支持，低级别的网络没有实现。</paragraph>
                <paragraph>目前，只有 <reference internal="True" refuri="../networking/http_client_class#doc-http-client-class"><inline classes="std std-ref">HTTP client</inline></reference>, <reference internal="True" refuri="../networking/http_request_class#doc-http-request-class"><inline classes="std std-ref">HTTP requests</inline></reference>, <reference internal="True" refuri="../networking/websocket#doc-websocket"><inline classes="std std-ref">WebSocket (client)</inline></reference> 和 <reference internal="True" refuri="../networking/webrtc#doc-webrtc"><inline classes="std std-ref">WebRTC</inline></reference> 被支持。</paragraph>
                <paragraph>HTTP类在HTML5平台上也有若干限制:</paragraph>
                <block_quote>
                    <bullet_list bullet="-">
                        <list_item>
                            <paragraph>无法访问或更改 <literal>StreamPeer</literal></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><literal>Threaded/Blocking</literal> 模式不可用</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>每帧不能进行多次, 因此循环中的轮询将冻结</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>没有分块响应</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>无法禁用主机验证</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>遵循 <reference name="同源政策" refuri="https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy">同源政策</reference></paragraph>
                        </list_item>
                    </bullet_list>
                </block_quote>
            </section>
            <section ids="clipboard" names="clipboard 剪贴板">
                <title>剪贴板</title>
                <paragraph>在引擎和操作系统之间同步剪贴板需要浏览器 <reference name="剪贴板 API" refuri="https://developer.mozilla.org/en-US/docs/Web/API/Clipboard_API">剪贴板 API</reference> ，此外，由于该 API 的异步性，从 GDScript 访问时可能不可靠。</paragraph>
                <warning>
                    <paragraph>需要<reference internal="True" refid="doc-javascript-secure-contexts"><inline classes="std std-ref">安全上下文</inline></reference>。</paragraph>
                </warning>
            </section>
            <section ids="gamepads" names="gamepads 游戏手柄">
                <title>游戏手柄</title>
                <paragraph>按下游戏手柄上面的任一按钮之后，这个游戏手柄才能被检测到。根据浏览器、操作系统、游戏手柄三者的组合不同，游戏手柄的映射可能有误，可惜由于隐私方面的考虑， <reference name="游戏手柄 API" refuri="https://developer.mozilla.org/en-US/docs/Web/API/Gamepad_API/Using_the_Gamepad_API">游戏手柄 API</reference> 并没有提供可靠的方法来检测游戏手柄的信息，因而无法根据模型、供应商、操作系统来进行重新映射。</paragraph>
                <warning>
                    <paragraph>需要<reference internal="True" refid="doc-javascript-secure-contexts"><inline classes="std std-ref">安全上下文</inline></reference>。</paragraph>
                </warning>
            </section>
            <section ids="boot-splash-is-not-displayed" names="boot\ splash\ is\ not\ displayed 启动画面不显示">
                <title>启动画面不显示</title>
                <paragraph>默认的 HTML 页面在加载时不显示启动画面。然而，该图像会被导出为 PNG 文件，因此可以通过 <reference internal="True" refuri="../platform/web/customizing_html5_shell#doc-customizing-html5-shell"><inline classes="std std-ref">自定义 HTML 页面</inline></reference> 来显示。</paragraph>
                <target refid="doc-exporting-for-web-serving-the-files"></target>
            </section>
        </section>
        <section ids="serving-the-files doc-exporting-for-web-serving-the-files" names="serving\ the\ files 提供文件 doc_exporting_for_web_serving_the_files">
            <title>提供文件</title>
            <paragraph>导出为Web生成多个要从Web服务器提供的文件, 包括用于演示的默认HTML页面. 可以使用自定义HTML文件, 请参阅 <reference internal="True" refuri="../platform/web/customizing_html5_shell#doc-customizing-html5-shell"><inline classes="std std-ref">导出自定义 HTML 页面</inline></reference> .</paragraph>
            <warning>
                <paragraph>为了确保低音频延迟和在web导出中使用：ref:<problematic ids="id3" refid="id2">`class_Thread`的能力，Godot 4 web导出始终使用`SharedArray Buffer&lt;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer&gt;`__</problematic>. 这需要一个：ref:<title_reference>secure context&lt;doc_javascript_secure_contexts&gt;</title_reference>，同时还需要在提供文件时设置以下CORS头：</paragraph>
                <literal_block force="False" language="gdscript" linenos="False" xml:space="preserve">Cross-Origin-Opener-Policy: same-origin
Cross-Origin-Embedder-Policy: require-corp</literal_block>
                <paragraph>如果 Web 服务器不是你的，或者你无法添加响应报头，请使用 <reference name="coi-serviceworker" refuri="https://github.com/gzuidhof/coi-serviceworker">coi-serviceworker</reference> 作为变通方案。</paragraph>
                <paragraph>客户端收不到必要的响应报头，<strong>项目就不会运行</strong>。</paragraph>
            </warning>
            <paragraph>生成的 <literal>.html</literal> 文件可以在 Apache 服务器中用作 <literal>DirectoryIndex</literal>，文件名可以随便修改，比如可以改成 <literal>index.html</literal>。默认情况下不会用到这个名称。</paragraph>
            <paragraph>The HTML page draws the game at maximum size within the browser window.
                This way, it can be inserted into an <literal>&lt;iframe&gt;</literal> with the game's size, as is
                common on most web game hosting sites.</paragraph>
            <paragraph>其他导出的文件在 <literal>.html</literal> 文件旁边, 按原样提供, 名称不变. <literal>.wasm</literal> 文件是实现引擎的二进制WebAssembly模块. <literal>.pck</literal> 文件是包含你的游戏的Godot主包. <literal>.js</literal> 文件包含启动代码, <literal>.html</literal> 文件使用它来访问引擎. <literal>.png</literal> 文件包含启动画面图像. 默认HTML页面中未使用它, 但 <reference internal="True" refuri="../platform/web/customizing_html5_shell#doc-customizing-html5-shell"><inline classes="std std-ref">自定义HTML 页面</inline></reference> 中包含了它.</paragraph>
            <paragraph><literal>.pck</literal> 文件是二进制文件, 通常与MIME类型 <literal_emphasis classes="mimetype">application/octet-stream</literal_emphasis> 一起分发. <literal>.wasm</literal> 文件以 <literal_emphasis classes="mimetype">application/wasm</literal_emphasis> 分发.</paragraph>
            <warning>
                <paragraph>分发WebAssembly模块(<literal>.wasm</literal>)时, 使用一个 <literal_emphasis classes="mimetype">application/wasm</literal_emphasis> 以外的MIME类型, 可能会阻止某些启动优化.</paragraph>
            </warning>
            <paragraph>建议使用服务器端压缩来分发文件，特别是 <literal>.pck</literal> 和 <literal>.wasm</literal> 文件，因为这种文件通常很大。WebAssembly 模块的压缩做得特别好，使用 gzip 压缩最多能够缩小到原始大小的四分之一左右。如果 Web 服务器支持的话，请考虑使用 Brotli 预压缩，能够进一步节省文件大小。</paragraph>
            <paragraph><strong>提供即时压缩的主机:</strong> GitHub Pages (gzip)</paragraph>
            <paragraph><strong>不提供即时压缩的主机:</strong> itch.io, GitLab 页面 ( <reference name="支持手动gzip预压缩" refuri="https://webd97.de/post/gitlab-pages-compression/">支持手动gzip预压缩</reference> )</paragraph>
            <tip>
                <paragraph>Godot 的仓库中包含了一个<reference name="用来运行本地 Web 服务器的 Python 脚本" refuri="https://raw.githubusercontent.com/godotengine/godot/master/platform/web/serve.py">用来运行本地 Web 服务器的 Python 脚本</reference>。这个脚本原本是用于测试 Web 编辑器的，但也可以用来测试导出后的项目。</paragraph>
                <paragraph>将链接中的文件保存为 <literal>serve.py</literal> 文件，将这个文件移动到包含导出后项目的 <literal>index.html</literal> 的文件夹中，然后在该文件夹中打开命令提示符，执行以下命令：</paragraph>
                <literal_block force="False" language="gdscript" linenos="False" xml:space="preserve"># You may need to replace `python` with `python3` on some platforms.
python serve.py --root .</literal_block>
                <paragraph>在Windows上，你可以按住Shift并右键单击Windows资源管理器中的空白区域，然后选择**在此处开启PowerShell视窗**，在目前文件夹中开启命令提示字元。</paragraph>
                <paragraph>这将提供目前文件夹的内容并自动开启预设的Web浏览器。</paragraph>
                <paragraph>请注意，对于生产用例，不应使用此基于Python的Web服务器。相反，你应该使用已建立的Web服务器，例如Apache或nginx。</paragraph>
            </tip>
        </section>
        <section ids="interacting-with-the-browser-and-javascript" names="interacting\ with\ the\ browser\ and\ javascript">
            <title>Interacting with the browser and JavaScript</title>
            <paragraph>See the <reference internal="True" refuri="../platform/web/javascript_bridge#doc-web-javascript-bridge"><inline classes="std std-ref">dedicated page</inline></reference> on how to interact with JavaScript and access some unique Web browser features.</paragraph>
        </section>
        <section ids="environment-variables" names="environment\ variables 环境变量">
            <title>环境变量</title>
            <paragraph>你可以使用以下环境变量在编辑器外部设置导出选项。在导出过程中，这些值会覆盖你在导出菜单中设置的值。</paragraph>
            <table ids="id1">
                <title>HTML5 导出环境变量</title>
                <tgroup cols="2">
                    <colspec colwidth="50"></colspec>
                    <colspec colwidth="50"></colspec>
                    <thead>
                        <row>
                            <entry>
                                <paragraph>导出选项</paragraph>
                            </entry>
                            <entry>
                                <paragraph>环境变量</paragraph>
                            </entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph>加密 / 密钥</paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>GODOT_SCRIPT_ENCRYPTION_KEY</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="翻译状态" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

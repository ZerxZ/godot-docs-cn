<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/tutorials/export/exporting_for_ios.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <target refid="doc-exporting-for-ios"></target>
    <section ids="exporting-for-ios doc-exporting-for-ios" names="exporting\ for\ ios 为\ ios\ 导出 doc_exporting_for_ios">
        <title>为 iOS 导出</title>
        <seealso>
            <paragraph>这个页面描述的是如何将 Godot 项目导出到 iOS。如果你想要找的是从源码编译编辑器或导出模板二进制文件，请阅读 <reference internal="True" refuri="../../contributing/development/compiling/compiling_for_ios#doc-compiling-for-ios"><inline classes="std std-ref">为 iOS 平台编译</inline></reference>。</paragraph>
        </seealso>
        <paragraph>这些是在Xcode中加载Godot项目的步骤. 这允许你构建和部署到iOS设备, 为App Store构建一个发行版本, 并执行你通常可以使用Xcode执行的所有其他操作.</paragraph>
        <attention>
            <paragraph>Projects written in C# can be exported to iOS as of Godot 4.2, but support
                is experimental and <reference internal="True" refuri="../scripting/c_sharp/index#doc-c-sharp-platforms"><inline classes="std std-ref">some limitations apply</inline></reference>.</paragraph>
        </attention>
        <section ids="requirements" names="requirements 需求">
            <title>需求</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>你必须从运行安装了 Xcode 的 mac OS的计算机中为 iOS 导出。</paragraph>
                </list_item>
                <list_item>
                    <paragraph>下载 Godot 导出模板。请使用 Godot 菜单：编辑器 &gt; 管理导出模板</paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section ids="export-a-godot-project-to-xcode" names="export\ a\ godot\ project\ to\ xcode 将\ godot\ 项目导出到\ xcode">
            <title>将 Godot 项目导出到 Xcode</title>
            <paragraph>在 Godot 编辑器中，从<strong>项目</strong>菜单打开<strong>导出</strong>窗口。导出窗口打开后，点击<strong>添加..</strong> 并选择 <strong>iOS</strong>。</paragraph>
            <paragraph><strong>应用</strong>分类中的 <strong>App Store 团队 ID</strong> 和（捆绑包）<strong>标识符</strong>选项都是必填的。留空时导出器会报错。</paragraph>
            <note>
                <line_block>
                    <line>If you encounter an error during export similar to</line>
                    <line><literal>JSON text did not start with array or object and option to allow fragments not set</literal></line>
                    <line>then it might be due to a malformated <strong>App Store Team ID</strong>!</line>
                    <line>The exporter expects a (10 characters long) code like <literal>ABCDE12XYZ</literal> and not, e.g., your name as Xcode likes to display in the <emphasis>Signing &amp; Capabilities</emphasis> tab.</line>
                    <line>You can find the code over at <reference name="developer.apple.com" refuri="https://developer.apple.com/account/resources/certificates/list">developer.apple.com</reference><target ids="developer-apple-com" names="developer.apple.com" refuri="https://developer.apple.com/account/resources/certificates/list"></target> next to your name in the top right corner.</line>
                </line_block>
            </note>
            <paragraph>点击<strong>导出项目</strong>后，仍有两个重要选项：</paragraph>
            <block_quote>
                <bullet_list bullet="*">
                    <list_item>
                        <paragraph><strong>路径</strong>是一个空文件夹，它将包含导出的 Xcode 项目文件。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><strong>文件</strong>将是 Xcode 项目的名称和几个项目特定的文件和目录。</paragraph>
                    </list_item>
                </bullet_list>
            </block_quote>
            <image candidates="{'*': 'tutorials/export/img/ios_export_file.png'}" uri="tutorials/export/img/ios_export_file.png"></image>
            <note>
                <paragraph>本教程使用 <strong>exported_xcode_project_name</strong> , 但你将使用你的项目的名称. 当你在以下步骤中看到 <strong>exported_xcode_project_name</strong> 时, 请将其替换为你使用的名称.</paragraph>
            </note>
            <note>
                <paragraph>选择 <strong>exported_xcode_project_name</strong> 时, 避免使用空格, 因为这可能会导致XCode项目文件错误.</paragraph>
            </note>
            <paragraph>导出完成后, 输出文件夹应如下所示:</paragraph>
            <image candidates="{'*': 'tutorials/export/img/ios_export_output.png'}" uri="tutorials/export/img/ios_export_output.png"></image>
            <paragraph>打开 <strong>exported_xcode_project_name.xcodeproj</strong> 可让你像任何其他iOS应用程序一样构建和部署.</paragraph>
        </section>
        <section ids="active-development-considerations" names="active\ development\ considerations 积极的发展考虑">
            <title>积极的发展考虑</title>
            <paragraph>上面的方法创建了一个可以为发布而构建的导出项目, 但每次在Godot中进行更改时, 都必须重新导出.</paragraph>
            <paragraph>在开发过程中, 你可以通过将Godot项目文件直接链接到你的应用程序, 来加快此过程.</paragraph>
            <paragraph>在以下示例中:</paragraph>
            <block_quote>
                <bullet_list bullet="*">
                    <list_item>
                        <paragraph><strong>exported_xcode_project_name</strong> 是导出的iOS应用程序的名称(如上所示).</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><strong>godot_project_to_export</strong> 是Godot项目的名称.</paragraph>
                    </list_item>
                </bullet_list>
            </block_quote>
            <note>
                <paragraph><strong>godot_project_to_export</strong> 和 <strong>exported_xcode_project_name</strong> 必须不一样, 以免Xcode出现签名问题.</paragraph>
            </note>
            <section ids="steps-to-link-a-godot-project-folder-to-xcode" names="steps\ to\ link\ a\ godot\ project\ folder\ to\ xcode 将\ godot\ 项目文件夹链接到\ xcode\ 的步骤">
                <title>将 Godot 项目文件夹链接到 Xcode 的步骤</title>
                <enumerated_list enumtype="arabic" prefix="" suffix=".">
                    <list_item>
                        <paragraph>从一个导出的iOS项目开始(按照上述步骤).</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>在Finder中, 将Godot项目文件夹拖到Xcode文件浏览器中.</paragraph>
                    </list_item>
                </enumerated_list>
                <image candidates="{'*': 'tutorials/export/img/ios_export_add_dir.png'}" uri="tutorials/export/img/ios_export_add_dir.png"></image>
                <paragraph>3. In the dialog, make sure <strong>Create folder references</strong> is selected. This means
                    you will be able to continue to edit your Godot project in its current location.</paragraph>
                <image candidates="{'*': 'tutorials/export/img/ios_export_file_ref.png'}" uri="tutorials/export/img/ios_export_file_ref.png"></image>
                <enumerated_list enumtype="arabic" prefix="" start="4" suffix=".">
                    <list_item>
                        <paragraph>请参阅Xcode文件浏览器中的 <strong>godot_project_to_export</strong> 文件夹.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>从Xcode项目中删除 <strong>exported_xcode_project_name.pck</strong> .</paragraph>
                    </list_item>
                </enumerated_list>
                <image candidates="{'*': 'tutorials/export/img/ios_export_delete_pck.png'}" uri="tutorials/export/img/ios_export_delete_pck.png"></image>
                <paragraph>6. Open <strong>exported_xcode_project_name-Info.plist</strong> and add a string property named
                    <strong>godot_path</strong> (this is the real key name) with a value <strong>godot_project_to_export</strong>
                    (this is the name of your project)</paragraph>
                <image candidates="{'*': 'tutorials/export/img/ios_export_set_path.png'}" uri="tutorials/export/img/ios_export_set_path.png"></image>
                <paragraph>就这样！你现在可以在Godot编辑器中编辑项目；并在想要在设备上运行时, 在Xcode中构建它.</paragraph>
            </section>
        </section>
        <section ids="plugins-for-ios" names="plugins\ for\ ios ios\ 的插件">
            <title>iOS 的插件</title>
            <paragraph>在 Godot 中可以使用特殊的 iOS 插件。请查看 <reference internal="True" refuri="../platform/ios/plugins_for_ios#doc-plugins-for-ios"><inline classes="std std-ref">iOS 的插件</inline></reference> 页面。</paragraph>
        </section>
        <section ids="environment-variables" names="environment\ variables 环境变量">
            <title>环境变量</title>
            <paragraph>你可以使用以下环境变量在编辑器外部设置导出选项。在导出过程中，这些值会覆盖你在导出菜单中设置的值。</paragraph>
            <table ids="id1">
                <title>iOS 导出环境变量</title>
                <tgroup cols="2">
                    <colspec colwidth="50"></colspec>
                    <colspec colwidth="50"></colspec>
                    <thead>
                        <row>
                            <entry>
                                <paragraph>导出选项</paragraph>
                            </entry>
                            <entry>
                                <paragraph>环境变量</paragraph>
                            </entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph>加密 / 密钥</paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>GODOT_SCRIPT_ENCRYPTION_KEY</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>Options / Application / Provisioning Profile UUID Debug</paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>GODOT_IOS_PROVISIONING_PROFILE_UUID_DEBUG</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>Options / Application / Provisioning Profile UUID Release</paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>GODOT_IOS_PROVISIONING_PROFILE_UUID_RELEASE</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section ids="troubleshooting" names="troubleshooting 故障排除">
            <title>故障排除</title>
            <section ids="xcode-select-points-at-wrong-sdk-location" names="xcode-select\ points\ at\ wrong\ sdk\ location">
                <title>xcode-select points at wrong SDK location</title>
                <paragraph>xcode-select is a tool that comes with Xcode and among other things points at iOS SDKs on your Mac.
                    If you have Xcode installed, opened it, agreed to the license agreement, and installed the command line tools,
                    xcode-select should point at the right location for the iPhone SDK.
                    If it somehow doesn't, Godot will fail exporting to iOS with an error that may look like this:</paragraph>
                <literal_block force="False" language="gdscript" linenos="False" xml:space="preserve">MSB3073: The command ""clang" &lt;LOTS OF PATHS AND COMMAND LINE ARGUMENTS HERE&gt;
"/Library/Developer/CommandLineTools/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk"" exited with code 1.</literal_block>
                <paragraph>In this case, Godot is trying to find the <literal>Platforms</literal> folder containing the iPhone SDK inside the
                    <literal>/Library/Developer/CommandLineTools/</literal> folder, but the <literal>Platforms</literal> folder with the iPhone SDK is
                    actually located under <literal>/Applications/Xcode.app/Contents/Developer</literal>. To verify this, you can open
                    up Terminal and run the following command to see what xcode-select points at:</paragraph>
                <literal_block force="False" language="gdscript" linenos="False" xml:space="preserve">xcode-select -p</literal_block>
                <paragraph>To fix xcode-select pointing at a wrong location, enter this command in Terminal:</paragraph>
                <literal_block force="False" language="gdscript" linenos="False" xml:space="preserve">sudo xcode-select -switch /Applications/Xcode.app</literal_block>
                <paragraph>After running this command, Godot should be able to successfully export to iOS.</paragraph>
                <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="翻译状态" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
            </section>
        </section>
    </section>
</document>

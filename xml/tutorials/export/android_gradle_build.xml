<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/tutorials/export/android_gradle_build.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <target refid="doc-android-gradle-build"></target>
    <section ids="gradle-builds-for-android doc-android-gradle-build" names="gradle\ builds\ for\ android android\ 的\ gradle\ 构建 doc_android_gradle_build">
        <title>Android 的 Gradle 构建</title>
        <paragraph>Godot 提供了使用 gradle 构建系统进行构建的选项。使用 gradle 构建时，不会使用 Godot 自带的已经构建好的模板，而是会在你的项目文件夹中安装一个 Android Java 项目。这样每次导出项目时，Godot 都会构建这个项目，用它作为导出模板。</paragraph>
        <paragraph>需要使用这种方法的原因可能有：</paragraph>
        <bullet_list bullet="*">
            <list_item>
                <paragraph>在构建项目前进行修改。</paragraph>
            </list_item>
            <list_item>
                <paragraph>添加需要与项目一同构建的外部 SDK。</paragraph>
            </list_item>
        </bullet_list>
        <paragraph>Gradle 构建的配置过程相当简单。但首先你需要按照<reference internal="True" refuri="exporting_for_android#doc-exporting-for-android"><inline classes="std std-ref">导出到 Android</inline></reference> 中的步骤进行操作，做到<strong>在 Godot 中进行设置</strong>为止。做完这些后，请按照下面的步骤进行操作。</paragraph>
        <section ids="set-up-the-gradle-build-environment" names="set\ up\ the\ gradle\ build\ environment 设置\ gradle\ 构建环境">
            <title>设置 gradle 构建环境</title>
            <paragraph>前往“项目”菜单，安装 <emphasis>Gradle 构建</emphasis>模板：</paragraph>
            <image candidates="{'*': 'tutorials/export/img/gradle_build_install_template.webp'}" uri="tutorials/export/img/gradle_build_install_template.webp"></image>
            <paragraph>请确保已下载导出模板。如果尚未下载，则这个菜单会帮你下载。</paragraph>
            <paragraph><literal>res://android/build</literal> 下会生成一个基于 Gradle 的 Android 项目。你不需要编辑里面的文件，除非真的有修改这个项目的需求。</paragraph>
        </section>
        <section ids="enabling-the-gradle-build-and-exporting" names="enabling\ the\ gradle\ build\ and\ exporting 启用\ gradle\ 构建和导出">
            <title>启用 gradle 构建和导出</title>
            <paragraph>在<strong>项目 &gt; 导出</strong>对话框中设置 Android 项目时，需要启用 <strong>Gradle 构建</strong>：</paragraph>
            <image candidates="{'*': 'tutorials/export/img/gradle_build_enable.webp'}" uri="tutorials/export/img/gradle_build_enable.webp"></image>
            <paragraph>从现在开始，尝试导出项目或一键部署就会调用 <reference name="Gradle" refuri="https://gradle.org/">Gradle</reference> 构建系统来生成新的模板（每次都会出现这个窗口）：</paragraph>
            <image candidates="{'*': 'tutorials/export/img/gradle_build_gradle.webp'}" uri="tutorials/export/img/gradle_build_gradle.webp"></image>
            <paragraph>后续步骤中会自动使用生成的模板，不需要进一步的配置。</paragraph>
            <note>
                <paragraph>使用基于 gradle 的 Android 构建系统时，如果放置资产的文件夹以下划线开头，就不会包含在生成的 APK 里。这个规则不适用于<emphasis>文件名</emphasis>以下划线开头的资源。</paragraph>
                <paragraph>例如，<strong>不会</strong>包含名为 <literal>_example/image.png</literal> 的资产，但是会包含 <literal>_image.png</literal>。</paragraph>
            </note>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="翻译状态" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

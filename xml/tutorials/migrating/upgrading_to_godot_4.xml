<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/tutorials/migrating/upgrading_to_godot_4.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <target refid="doc-upgrading-to-godot-4"></target>
    <section ids="upgrading-from-godot-3-to-godot-4 doc-upgrading-to-godot-4" names="upgrading\ from\ godot\ 3\ to\ godot\ 4 从\ godot\ 3\ 升级到\ godot\ 4 doc_upgrading_to_godot_4">
        <title>从 Godot 3 升级到 Godot 4</title>
        <section ids="should-i-upgrade-to-godot-4" names="should\ i\ upgrade\ to\ godot\ 4? 我应该升级到\ godot4\ 吗？">
            <title>我应该升级到 Godot4 吗？</title>
            <paragraph>在升级之前，有必要考虑一下升级会给你的项目带来的优缺点。</paragraph>
            <section ids="advantages-of-upgrading" names="advantages\ of\ upgrading 升级的优点">
                <title>升级的优点</title>
                <paragraph>除了 <reference name="4.0 中提供的新功能" refuri="https://github.com/godotengine/godot/blob/master/CHANGELOG.md">4.0 中提供的新功能</reference>之外，升级还有如下优点：</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>许多问题已经在4.0进行了修复，但是由于各种各样的原因（例如不同的图形API以及向后兼容性等），这些问题无法在3.x版本中修复。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>4.x 版本将享受更长的<reference internal="True" refuri="../../about/release_policy#doc-release-policy"><inline classes="std std-ref">支持周期</inline></reference>。Godot 3.x 也将在 4.0 发布之后支持一段时间，但最终将会放弃支持。</paragraph>
                    </list_item>
                </bullet_list>
                <paragraph>记录 Godot 4.0 中新功能的文档页面列表见 <reference internal="True" refuri="../../about/docs_changelog#doc-docs-changelog"><inline classes="std std-ref">文档变更日志</inline></reference>。</paragraph>
            </section>
            <section ids="disadvantages-of-upgrading" names="disadvantages\ of\ upgrading 升级的缺点">
                <title>升级的缺点</title>
                <paragraph>如果你<emphasis>不需要</emphasis> Godot 4.0 中的功能，留在 Godot 3.x 中可能有如下原因：</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph><reference name="Godot 3.x 是身经百战了，而 Godot 4 还太年轻。" refuri="https://godotengine.org/article/release-management-4-0-and-beyond">Godot 3.x 是身经百战了，而 Godot 4 还太年轻。</reference></paragraph>
                        <bullet_list bullet="-">
                            <list_item>
                                <paragraph>Godot 4.0 应该会有一些工作流和性能问题，在 Godot 3.x 中则没有对应的问题。这些问题会在后续的 Godot 4.x 版本中陆续解决。</paragraph>
                            </list_item>
                        </bullet_list>
                    </list_item>
                    <list_item>
                        <paragraph>Godot 4 的第三方教程比 Godot 3.x 要少。如果你是游戏引擎小白，使用 Godot 3.x 的体验会丝滑很多。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Godot 4 的基准硬件需求要稍高一些（例如内存占用），无论是编辑器还是导出后的项目。这些都是实现核心优化所必须的。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>由于 Godot 4 比 Godot 3 包含更多的功能，Godot 4 导出的项目二进制文件相比更大。这个问题可以通过<reference internal="True" refuri="../../contributing/development/compiling/optimizing_for_size#doc-optimizing-for-size"><inline classes="std std-ref">针对大小优化构建</inline></reference>来缓解，但是启用模块相同的前提下，4.0 构建的大小仍然会比 3.x 构建要大。<reference internal="True" refuri="../export/exporting_for_web#doc-exporting-for-web"><inline classes="std std-ref">为 Web 导出</inline></reference>时可能会造成一些问题，因为二进制文件的大小对引擎初始化的速度有直接影响（不考虑下载速度）。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Godot 4 不支持且不会提供对 GLES2 渲染器的支持。（使用新的 OpenGL 后台，Godot依然支持 GLES3 渲染器，这意味着不支持Vulkan的设备依旧可以运行Godot 4。）</paragraph>
                        <bullet_list bullet="-">
                            <list_item>
                                <paragraph>如果你的目标是像 Intel Sandy Bridge（第二代）集成图形一样<strong>极其</strong>老旧的硬件，升级后将阻止项目在此类硬件上运行。<reference name="软件 OpenGL 实现" refuri="https://github.com/pal1000/mesa-dist-win">软件 OpenGL 实现</reference>可以用来绕过这个限制，但对于游戏来说太慢了。</paragraph>
                            </list_item>
                        </bullet_list>
                    </list_item>
                </bullet_list>
            </section>
            <section ids="caveats-of-upgrading" names="caveats\ of\ upgrading 升级的注意事项">
                <title>升级的注意事项</title>
                <paragraph><strong>由于 Godot 4 在许多方面都是完全重写的，一些功能在这个过程中不幸地丢失了。</strong>其中一些功能可能会在未来的 Godot 版本中恢复：</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>Bullet 物理引擎被移除以支持 GodotPhysics。这只会影响使用默认物理引擎（即 Bullet）且没有手动更改为 GodotPhysics 的3D项目。没有在核心中重新添加 Bullet 物理引擎的计划，但由于 GDExtension，可以为其创建第三方附加组件。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>2D 渲染不再执行 HDR，这意味着调制中的 “过亮” 不会产生效果。我们计划在未来某个时候进行修复。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>虽然使用 Forward Plus 或 Forward Mobile 后端时，渲染仍然会以 3D HDR 形式进行，但视口无法再返回 HDR 数据。 计划在未来某个时候恢复这一功能。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Mono 被替换为 .Net 6。这意味着现在不支持导出 C# 项目到 Android，iOS 和 HTML5。导出 C# 项目到桌面平台依然是支持的，并且从 4.2 开始，实验性支持导出到移动平台。随着上游支持的改进，将 C# 项目导出到更多平台的支持将在未来的 4.x 版本中恢复。</paragraph>
                    </list_item>
                </bullet_list>
                <paragraph>你可以通过在 GitHub 上搜索 `issues 标记为“regression”而不是“bug” &lt;<reference refuri="https://github.com/godotengine/godot/issues?q=is%3Aissue+is%3Aopen">https://github.com/godotengine/godot/issues?q=is%3Aissue+is%3Aopen</reference> +label%3Aregression+-label%3Abug&gt;`_来找到更完整的功能回归列表。</paragraph>
            </section>
        </section>
        <section ids="preparing-before-the-upgrade-optional" names="preparing\ before\ the\ upgrade\ (optional) 升级前的准备（可选）">
            <title>升级前的准备（可选）</title>
            <paragraph>如果你想在未来升级到 Godot 4，可以考虑在你的项目中使用 <reference internal="True" refuri="../../classes/class_tweener#class-tweener"><inline classes="std std-ref">Tweener</inline></reference> 和 <reference internal="True" refuri="../../classes/class_time#class-time"><inline classes="std std-ref">Time</inline></reference> 单例。这些类在 Godot 3.5 及更高版本中都已可用。</paragraph>
            <paragraph>如此，你便不用再依赖已弃用的 Tween node 和 OS time 函数，这两个函数在 Godot 4.0 中都被删除了。</paragraph>
            <paragraph>使用 <literal>.gdshader</literal> 后缀来替换 <literal>.shader</literal> 后缀是一个很好的点子。Godot 3.x 支持这两种后缀，但 Godot 4.0 仅支持 <literal>.gdshader</literal> 这一种。</paragraph>
        </section>
        <section ids="running-the-project-upgrade-tool" names="running\ the\ project\ upgrade\ tool 运行项目升级工具">
            <title>运行项目升级工具</title>
            <warning>
                <paragraph>升级前，<strong>请对你的项目进行完整备份</strong>！项目升级工具<emphasis>不会</emphasis>对升级的项目进行备份。</paragraph>
                <paragraph>你可以使用版本控制备份项目，也可以将项目文件夹复制到其他位置。</paragraph>
            </warning>
            <section ids="using-the-project-manager" names="using\ the\ project\ manager 使用项目管理器">
                <title>使用项目管理器</title>
                <paragraph>使用项目升级工具：</paragraph>
                <enumerated_list enumtype="arabic" prefix="" suffix=".">
                    <list_item>
                        <paragraph>打开 Godot 4 项目管理器。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>使用<strong>导入</strong>按钮导入 Godot 3.x 项目，或者使用<strong>扫描</strong>按钮在文件夹中查找项目。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>双击导入的项目（或者选中项目后选择<strong>编辑</strong>）。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>你将看到一个带有两个选项的对话框：<strong>仅转换 project.godot</strong>和<strong>转换整个项目</strong>。在确保你的项目已经备份之后（见上面的警告），请选择<strong>转换整个项目</strong>。<strong>仅转换 project.godot</strong> 选项<emphasis>只应该</emphasis>用于高级用例，处理转换工具失败的情况。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>等待项目转换完成。由许多场景组成的大项目将花费更多的时间。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>当项目管理器界面再次可用时，双击项目 (或选中项目，然后选择 <strong>编辑</strong>) 在编辑器中打开。</paragraph>
                    </list_item>
                </enumerated_list>
                <paragraph>如果某些项目文件过大或过长会遇到转换问题，你可以使用命令行来升级项目（参见下面的内容）。你还可以重设转换器的大小限制。</paragraph>
            </section>
            <section ids="using-the-command-line" names="using\ the\ command\ line 使用命令行">
                <title>使用命令行</title>
                <paragraph>要从 <reference internal="True" refuri="../editor/command_line_tutorial#doc-command-line-tutorial"><inline classes="std std-ref">命令行</inline></reference> 使用升级工具，建议通过使用如下参数运行 Godot 编辑器二进制文件来验证项目转换：</paragraph>
                <literal_block force="False" language="gdscript" linenos="False" xml:space="preserve"># [&lt;max_file_kb&gt;] [&lt;max_line_size&gt;] are optional arguments.
# Remove them if you aren't changing their values.
path/to/godot.binary --path /path/to/project/folder --validate-conversion-3to4 [&lt;max_file_kb&gt;] [&lt;max_line_size&gt;]</literal_block>
                <paragraph>如果计划升级列表无误，在 Godot 编辑器二进制文件上运行以下命令来升级项目文件：</paragraph>
                <literal_block force="False" language="gdscript" linenos="False" xml:space="preserve"># [&lt;max_file_kb&gt;] [&lt;max_line_size&gt;] are optional arguments.
# Remove them if you aren't changing their values.
path/to/godot.binary --path /path/to/project/folder --convert-3to4 [&lt;max_file_kb&gt;] [&lt;max_line_size&gt;]</literal_block>
                <paragraph><literal>[&lt;max_file_kb&gt;]</literal> 和 <literal>[&lt;max_line_size&gt;]</literal> 是<emphasis>可选</emphasis>参数，用于指定要转换的文件的最大大小（单位分别为 KB 和行）。默认限制分别为 4MB 和十万行。如果文件达到上述任何一个限制，则项目转换器将不会对其进行升级。这对于防止大量资源占用会降低升级速度来说非常有用。</paragraph>
                <paragraph>如果你仍然希望通过项目升级工具转换大文件，请在运行项目升级工具时增加大小限制。例如，运行带有这些参数的 Godot 编辑器二进制文件会使这两个限制都增加10倍：</paragraph>
                <literal_block force="False" language="gdscript" linenos="False" xml:space="preserve">path/to/godot.binary --path /path/to/project/folder --convert-3to4 40000 1000000</literal_block>
                <note>
                    <paragraph>只有Godot 3.x的项目可以使用 Godot 4 编辑器中的项目转换工具升级。</paragraph>
                    <paragraph>建议在使用项目升级工具之前检查你的项目是否为最新的 3.x 稳定版。</paragraph>
                </note>
            </section>
        </section>
        <section ids="fixing-the-project-after-running-the-project-upgrade-tool" names="fixing\ the\ project\ after\ running\ the\ project\ upgrade\ tool 运行项目升级工具后修复项目">
            <title>运行项目升级工具后修复项目</title>
            <paragraph>项目升级完成之后，你可能会注意到某些东西看起来不太正常。脚本还可能包含各种错误（在大项目中可能有几百个）。这是因为项目升级工具无法满足所有情况。故升级后的很大一部分问题仍然需要手动解决。</paragraph>
            <section ids="automatically-renamed-nodes-and-resources" names="automatically\ renamed\ nodes\ and\ resources 自动重命名节点和资源">
                <title>自动重命名节点和资源</title>
                <paragraph>以下列表是 Godot 4.0 为了一致性或清晰性而简单重命名的节点。项目升级工具会在你的脚本中自动重命名它们。</paragraph>
                <paragraph>在 3D 节点中有一些重命名值得注意，它们中与 2D 功能相似的节点全部以 <literal>3D</literal> 为后缀。例如 <literal>Area</literal> 现在为 <literal>Area3D</literal> 。</paragraph>
                <paragraph>为了方便搜索，此表列出了所有已更名并自动转换的节点和资源，不包括仅在旧名称后添 <literal>3D</literal> 后缀的节点和资源：</paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="41"></colspec>
                        <colspec colwidth="43"></colspec>
                        <thead>
                            <row>
                                <entry>
                                    <paragraph>旧名称（Godot 3.x）</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>新名称（Godot 4）</paragraph>
                                </entry>
                            </row>
                        </thead>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph>AnimatedSprite</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>AnimatedSprite2D</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>ARVRCamera</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>XRCamera3D</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>ARVRController</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>XRController3D</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>ARVRAnchor</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>XRAnchor3D</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>ARVRInterface</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>XRInterface</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>ARVROrigin</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>XROrigin3D</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>ARVRPositionalTracker</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>XRPositionalTracker</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>ARVRServer</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>XRServer</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>CubeMesh</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>BoxMesh</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>EditorSpatialGizmo</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>EditorNode3DGizmo</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>EditorSpatialGizmoPlugin</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>EditorNode3DGizmoPlugin</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>GIProbe</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>VoxelGI</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>GIProbeData</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>VoxelGIData</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>GradientTexture</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>GradientTexture1D</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>KinematicBody</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>CharacterBody3D</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>KinematicBody2D</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>CharacterBody2D</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>Light2D</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>PointLight2D</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>LineShape2D</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>WorldBoundaryShape2D</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>Listener</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>AudioListener3D</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>NavigationMeshInstance</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>NavigationRegion3D</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>NavigationPolygonInstance</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>NavigationRegion2D</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>Navigation2DServer</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>NavigationServer2D</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>PanoramaSky</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Sky</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>Particles</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>GPUParticles3D</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>Particles2D</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>GPUParticles2D</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>ParticlesMaterial</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>ParticleProcessMaterial</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>Physics2DDirectBodyState</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>PhysicsDirectBodyState2D</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>Physics2DDirectSpaceState</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>PhysicsDirectSpaceState2D</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>Physics2DServer</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>PhysicsServer2D</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>Physics2DShapeQueryParameters</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>PhysicsShapeQueryParameters2D</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>Physics2DTestMotionResult</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>PhysicsTestMotionResult2D</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>PlaneShape</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>WorldBoundaryShape3D</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>Position2D</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Marker2D</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>Position3D</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Marker3D</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>ProceduralSky</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Sky</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>RayShape</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>SeparationRayShape3D</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>RayShape2D</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>SeparationRayShape2D</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>ShortCut</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Shortcut</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>Spatial</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Node3D</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>SpatialGizmo</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Node3DGizmo</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>SpatialMaterial</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>StandardMaterial3D</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>Sprite</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Sprite2D</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>StreamTexture</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>CompressedTexture2D</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>TextureProgress</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>TextureProgressBar</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>VideoPlayer</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>VideoStreamPlayer</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>ViewportContainer</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>SubViewportContainer</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>Viewport</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>SubViewport</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>VisibilityEnabler</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>VisibleOnScreenEnabler3D</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>VisibilityNotifier</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>VisibleOnScreenNotifier3D</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>VisibilityNotifier2D</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>VisibleOnScreenNotifier2D</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>VisibilityNotifier3D</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>VisibleOnScreenNotifier3D</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>VisualServer</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>RenderingServer</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>VisualShaderNodeScalarConstant</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>VisualShaderNodeFloatConstant</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>VisualShaderNodeScalarFunc</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>VisualShaderNodeFloatFunc</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>VisualShaderNodeScalarOp</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>VisualShaderNodeFloatOp</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>VisualShaderNodeScalarClamp</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>VisualShaderNodeClamp</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>VisualShaderNodeVectorClamp</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>VisualShaderNodeClamp</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>VisualShaderNodeScalarInterp</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>VisualShaderNodeMix</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>VisualShaderNodeVectorInterp</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>VisualShaderNodeMix</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>VisualShaderNodeVectorScalarMix</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>VisualShaderNodeMix</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>VisualShaderNodeScalarSmoothStep</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>VisualShaderNodeSmoothStep</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>VisualShaderNodeVectorSmoothStep</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>VisualShaderNodeSmoothStep</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>VisualShaderNodeVectorScalarSmoothStep</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>VisualShaderNodeSmoothStep</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>VisualShaderNodeVectorScalarStep</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>VisualShaderNodeStep</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>VisualShaderNodeScalarSwitch</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>VisualShaderNodeSwitch</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>VisualShaderNodeScalarTransformMult</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>VisualShaderNodeTransformOp</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>VisualShaderNodeScalarDerivativeFunc</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>VisualShaderNodeDerivativeFunc</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>VisualShaderNodeVectorDerivativeFunc</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>VisualShaderNodeDerivativeFunc</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>VisualShaderNodeBooleanUniform</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>VisualShaderNodeBooleanParameter</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>VisualShaderNodeColorUniform</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>VisualShaderNodeColorParameter</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>VisualShaderNodeScalarUniform</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>VisualShaderNodeFloatParameter</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>VisualShaderNodeCubeMapUniform</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>VisualShaderNodeCubeMapParameter</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>VisualShaderNodeTextureUniform</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>VisualShaderNodeTexture2DParameter</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>VisualShaderNodeTextureUniformTriplanar</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>VisualShaderNodeTextureParameterTriplanar</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>VisualShaderNodeTransformUniform</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>VisualShaderNodeTransformParameter</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>VisualShaderNodeVec3Uniform</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>VisualShaderNodeVec3Parameter</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>VisualShaderNodeUniform</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>VisualShaderNodeParameter</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>VisualShaderNodeUniformRef</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>VisualShaderNodeParameterRef</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <target refid="doc-upgrading-to-godot-4-manual-rename"></target>
            </section>
            <section ids="manually-renaming-methods-properties-signals-and-constants doc-upgrading-to-godot-4-manual-rename" names="manually\ renaming\ methods,\ properties,\ signals\ and\ constants 手动重命名的方法、属性、信号、枚举和常量 doc_upgrading_to_godot_4_manual_rename">
                <title>手动重命名的方法、属性、信号、枚举和常量</title>
                <paragraph>由于项目升级工具的工作方式，并非所有 <abbreviation explanation="Application Programming Interface，应用程序编程接口">API</abbreviation> 的重命名都可以自动执行。 以下列表包含了必须使用脚本编辑器手动执行的所有重命名项目。</paragraph>
                <paragraph>如果你在下面的列表中找不到节点或资源，请参考上表查找其新名称。</paragraph>
                <tip>
                    <paragraph>你可以在脚本编辑器打开时按 <literal classes="kbd">Ctrl + Shift + R</literal> 使用 <strong>在文件中替换</strong> 对话框来加快替换速度。 但是需要小心，“在文件中替换”对话框不提供任何撤消替换的方法。 使用版本控制定期提交升级工作。 如果你要比编辑器的“在文件中替换”对话框更灵活的工具，也可以使用 <reference name="sd" refuri="https://github.com/chmln/sd">sd</reference>等命令行工具。</paragraph>
                    <paragraph>如果使用 C#，请记住在项目中使用 PascalCase 表示法（即帕斯卡命名法）搜索过时的 API 使用情况（并使用 PascalCase 表示法执行替换）。</paragraph>
                </tip>
                <paragraph><strong>方法</strong></paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>文件和目录类已被 <reference internal="True" refuri="../../classes/class_fileaccess#class-fileaccess"><inline classes="std std-ref">FileAccess</inline></reference> 与 <reference internal="True" refuri="../../classes/class_diraccess#class-diraccess"><inline classes="std std-ref">DirAccess</inline></reference> 取代，它们拥有完全不同的 API。现在有几种方法是静态的，这意味着你可以不创建对象而直接使用 FileAccess 或 DirAccess 的方法。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" refuri="../../classes/class_os#class-os"><inline classes="std std-ref">OS</inline></reference> 单例中与屏幕和窗口相关的方法（例如 <literal>OS.get_screen_size()</literal>）已被移至 <reference internal="True" refuri="../../classes/class_displayserver#class-displayserver"><inline classes="std std-ref">DisplayServer</inline></reference> 单例。方法命名也改为使用 <literal>DisplayServer.&lt;object&gt;_&lt;get/set&gt;_property()</literal> 的形式。例如，<literal>OS.get_screen_size()</literal> 变成了 <literal>DisplayServer.screen_get_size()</literal>。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>时间和日期方法已从 <reference internal="True" refuri="../../classes/class_os#class-os"><inline classes="std std-ref">OS</inline></reference> 单例移动至 <reference internal="True" refuri="../../classes/class_time#class-time"><inline classes="std std-ref">Time</inline></reference> 单例。（ 在Godot 3.5 以及其后的版本中依旧如此。）</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>你可能需要将一些 <literal>instance()</literal> 调用替换为 <literal>instantiate()</literal> 。转换器 <emphasis>应该</emphasis> 会自动处理这个，但这依赖于可能无法在全部情况下正常工作的自定义代码。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>AcceptDialog的 <literal>set_autowrap()</literal> 现在是 <literal>set_autowrap_mode()</literal>。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>AnimationNode的 <literal>process()</literal> 现在是 <literal>_process()</literal>（注意前面的下划线，表示虚方法）。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>AStar2D和AStar3D的 <literal>get_points()</literal> 现在改为 <literal>get_points_id()</literal>。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>BaseButton的 <literal>set_event()</literal> 现在改为 <literal>set_shortcut()</literal>。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Camera2D的 <literal>get_v_offset()</literal> 现在改为 <literal>get_drag_vertical_offset()</literal>。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Camera2D的 <literal>set_v_offset()</literal> 现在改为 <literal>set_drag_vertical_offset()</literal>。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>CanvasItem的 <literal>update()</literal> 现在改为 <literal>queue_redraw()</literal>。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Control的 <literal>set_tooltip()</literal> 现在是 <literal>set_tooltip_text()</literal>。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>EditorNode3DGizmoPlugin的 <literal>create_gizmo()</literal> 现在改为 <literal>_create_gizmo()</literal>（注意前面的下划线，表示虚方法）。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>ENetMultiplayerPeer的 <literal>get_peer_port()</literal> 现在是 <literal>get_peer()</literal>。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>FileDialog的 <literal>get_mode()</literal> 现在是 <literal>get_file_mode()</literal>。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>FileDialog的 <literal>set_mode()</literal> 现在改为 <literal>set_file_mode()</literal>。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>GraphNode的 <literal>get_offset()</literal> 现在改为 <literal>get_position_offset()</literal>。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>GridMap的 <literal>world_to_map()</literal> 现在改为 <literal>local_to_map()</literal>。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>GridMap 的 <literal>map_to_world()</literal> 方法现在叫 <literal>map_to_local()</literal>。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Image的 <literal>get_rect()</literal> 方法现在为 <literal>get_region()</literal>。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>ItemList 的 <literal>get_v_scroll()</literal> 方法现在为 <literal>get_v_scroll_bar()</literal>。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>MultiPlayerAPI 的 <literal>get_network_connected_peers()</literal> 现在改为 <literal>get_peers()</literal>。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>MultiPlayerAPI 的 <literal>get_network_peer()</literal> 现在改为 <literal>get_peer()</literal>。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>MultiPlayerAPI 的 <literal>get_network_unique_id()</literal> 现在改为 <literal>get_unique_id()</literal>。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>MultiPlayerAPI 的 <literal>has_network_peer()</literal> 现在是 <literal>has_multiplayer_peer()</literal>。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>PacketPeerUDP 的 <literal>is_listening()</literal> 现在是 <literal>is_bound()</literal>。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>PacketPeerUDP 的 <literal>listen()</literal> 现在是 <literal>bind()</literal>。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>ParticleProcessMaterial 的 <literal>set_flag()</literal> 现在是 <literal>set_particle_flag()</literal>。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>ResourceFormatLoader 的 <literal>get_dependencies()</literal> 现在是 <literal>_get_dependencies()</literal>（注意前面的下划线表示虚方法）。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>SceneTree 中的 <literal>change_scene()</literal> 现改为 <literal>change_scene_to_file()</literal>。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Shortcut 中的 <literal>is_valid()</literal> 现改为 <literal>has_valid_event()</literal>。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>TileMap 中的 <literal>world_to_map()</literal> 现改为 <literal>local_to_map()</literal> 。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>TileMap 中的 <literal>map_to_world()</literal> 现改为 <literal>map_to_local()</literal> 。</paragraph>
                    </list_item>
                </bullet_list>
                <paragraph><strong>属性</strong></paragraph>
                <note>
                    <paragraph>如果此处列出了属性，则要在项目中使用，必须手动重命名其关联的 getter 和 setter 方法。例如， PathFollow2D 和 PathFollow3D 的 <literal>set_offset()</literal> 和 <literal>get_offset()</literal> 必须分别重命名为 <literal>set_progress()</literal> 和 <literal>get_progress()</literal> 。</paragraph>
                </note>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>Control 中的 <literal>margin</literal> 现改为 <literal>offset</literal>。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Label 中的 <literal>percent_visible</literal> 现改为 <literal>visible_ratio</literal>。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>MultiPlayerAPI 中的 <literal>refuse_new_network_connections</literal> 现改为 <literal>refuse_new_connections</literal>。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>PathFollow2D 和 PathFollow3D 中的 <literal>offset</literal> 现改为 <literal>progress</literal>。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>TextureProgressBar 中的 <literal>percent_visible</literal> 现改为 <literal>show_percentage</literal>。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>CSG 节点和 VoxelGI 上的 <literal>extents</literal> 属性必须被替换成 <literal>size</literal>，并且将设置的值减半（因为它们不再是半个范围了）。这也同样影响它的 setter/getter 方法， <literal>set_extents()</literal> 和 <literal>get_extents()</literal>。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>Engine.editor_hint</literal> 属性被移除以支持 <literal>Engine.is_editor_hint()</literal> <emphasis>方法</emphasis> 。这是由于它是只读的，而 Godot 中属性不可用于只读的值。</paragraph>
                    </list_item>
                </bullet_list>
                <paragraph><strong>枚举</strong></paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>CPUParticles2D 中的 <literal>FLAG_MAX</literal> 现在为 <literal>PARTICLE_FLAG_MAX</literal> 。</paragraph>
                    </list_item>
                </bullet_list>
                <paragraph><strong>信号</strong></paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>FileSystemDock中的 <literal>instantiate</literal> 现在为 <literal>instance</literal> 。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>CanvasItem 中的 <literal>hide</literal> 现在是 <literal>hidden</literal> 。 这个重命名不会影响 <literal>hide()</literal> 方法，只是信号的重命名。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Tween 中的 <literal>tween_all_completed</literal> 现在为 <literal>loop_finished</literal> 。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>EditorSettings 中的 <literal>changed</literal> 现在为 <literal>settings_changed</literal> 。</paragraph>
                    </list_item>
                </bullet_list>
                <paragraph><strong>常量</strong></paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>Color 中的所有属性现在均为大写并由下划线来分割。例如， <literal>Color.palegreen</literal> 现在为 <literal>Color.PALE_GREEN</literal> 。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Mainloop的 <literal>Notification_</literal> 常量被复制到 <literal>Node</literal> ，这意味着你可以在引用它们时移除 <literal>Mainloop.</literal> 前缀。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>MainLoop 中的 <literal>NOTIFICATION_WM_QUIT_REQUEST</literal> 现在为 <literal>NOTIFICATION_WM_CLOSE_REQUEST</literal> 。</paragraph>
                    </list_item>
                </bullet_list>
            </section>
            <section ids="checking-project-settings" names="checking\ project\ settings 检查项目设置">
                <title>检查项目设置</title>
                <paragraph>数个项目设置已被重命名，其中一些项目以不兼容的方式（例如阴影滤波质量 shadow filter quality ）改变了枚举。这意味着你可能需要再次设置一些项目设置的值。确保在项目设置对话框中启用了 <strong>高级</strong> 切换选项，以便你可以看到所有项目设置。</paragraph>
            </section>
            <section ids="checking-environment-settings" names="checking\ environment\ settings 检查环境设置">
                <title>检查环境设置</title>
                <paragraph>图形质量设置已从环境属性转移到项目设置。这样做是为了使运行时质量调整更加容易，而无需访问当前活动的环境资源再去修改其属性。</paragraph>
                <paragraph>因此，你必须在项目设置中配置环境质量设置，因为旧的环境质量设置并不会自动转换为项目设置。</paragraph>
                <paragraph>在 Godot 3.x 中，如果你在图形设置菜单中更改了环境属性，则必须更改相关的代码来调用 <reference internal="True" refuri="../../classes/class_renderingserver#class-renderingserver"><inline classes="std std-ref">RenderingServer</inline></reference> 中能影响环境效果质量的方法。只有每个环境效果的“基本”切换及其视觉旋钮保留在环境资源中。</paragraph>
            </section>
            <section ids="updating-shaders" names="updating\ shaders 更新着色器">
                <title>更新着色器</title>
                <paragraph>因为着色器语言有一些更改所以无法使用升级工具进行转换。</paragraph>
                <paragraph>不在支持后缀为 <literal>.shader</literal> 的文件，你需要把后缀为 <literal>.shader</literal> 的文件重命名为 <literal>.gdshader</literal> 并且在 场景/资源 设置中重新引用。</paragraph>
                <paragraph>在着色器中你需要重命名以下字符：</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>纹理过滤和重复模式现在在单独的 uniform 上设置，而不是在纹理文件本身。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>hint_albedo</literal> 现在是 <literal>source_color</literal>。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" refuri="../shaders/shader_reference/spatial_shader#doc-spatial-shader"><inline classes="std std-ref">内置矩阵变量已重命名。</inline></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>粒子着色器不再使用 <literal>vertex()</literal> 处理器函数。使用 <literal>start()</literal> 和 <literal>process()</literal> 来代替它。</paragraph>
                    </list_item>
                </bullet_list>
                <paragraph>详见 <reference internal="True" refuri="../shaders/shader_reference/shading_language#doc-shading-language"><inline classes="std std-ref">着色语言</inline></reference>。</paragraph>
            </section>
            <section ids="updating-scripts-to-take-backwards-incompatible-changes-into-account" names="updating\ scripts\ to\ take\ backwards-incompatible\ changes\ into\ account 更新脚本时将向后不兼容的更改考虑在内">
                <title>更新脚本时将向后不兼容的更改考虑在内</title>
                <paragraph>Godot 3.x 和 4 之间的一些变化并没有重新命名，但由于默认行为的不同，它们仍然会破坏向后兼容性。</paragraph>
                <paragraph>最显著的例子如下：</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph><literal>_ready()</literal> 和 <literal>_process()</literal> 等生命周期函数不再隐式调用同名的父类函数。相反，你必须在子类中的生命周期函数的顶部使用 <literal>super()</literal> 以调用父类中的这些生命周期函数。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" refuri="../../classes/class_string#class-string"><inline classes="std std-ref">String</inline></reference> 和 <reference internal="True" refuri="../../classes/class_stringname#class-stringname"><inline classes="std std-ref">StringName</inline></reference> 现在都暴露给了GDScript，这使优化成为可能，因为 StringName 是专门为“常量”字符串设计的，这些字符串创建一次后可能会重复使用多次。String 与 StringName 类型严格来说并不等同，这意味着 <literal>is_same("example", &amp;"example")</literal> 会返回 <literal>false</literal>。虽然在大多数情况下它们可以互换（<literal>"example" == &amp;"example"</literal> 返回 <literal>true</literal>），但是有时候你可能需要使用 <literal>&amp;"example"</literal> 来替换 <literal>"example"</literal>。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" refuri="../scripting/gdscript/gdscript_basics#doc-gdscript-basics-setters-getters"><inline classes="std std-ref">GDScript 的 setter 和 getter 语法</inline></reference> 已经发生了变化，但是转换工具仅对其进行了部分转换，在大多数情况下，需要手动更改才能使 setter 和 getter 重新工作。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" refuri="../scripting/gdscript/gdscript_basics#doc-gdscript-signals"><inline classes="std std-ref">GDScript 信号连接语法</inline></reference>已经做了改动。转换工具将使用 Godot 4 中仍然存在的基于字符串的语法，但建议改用链接页面中描述的基于 <reference internal="True" refuri="../../classes/class_signal#class-signal"><inline classes="std std-ref">Signal</inline></reference> 的语法。通过这种方式，就不会在信号连接中涉及字符串，从而避免了只能在运行时发现的信号名称错误问题。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>作为 <reference internal="True" refuri="../plugins/running_code_in_the_editor#doc-running-code-in-the-editor"><inline classes="std std-ref">tool scripts</inline></reference> 的内置脚本不会将 <literal>tool</literal> 关键字转换为 <literal>@tool</literal> 注解。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Tween 节点已经被移除，取而代之的是在 Godot 3.5 及更高的版本中可用的 Tweeners。详情参见 <problematic ids="id2" refid="id1">`原始拉取要求&lt;https://github.com/godotengine/godot/pull/41794&gt;`__</problematic>。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>randomize()</literal> 现在会在项目加载时自动调用，因此使用全局 RandomNumberGenerate 实例进行确定性随机化需要在脚本的 <literal>_ready()</literal> 函数中手动设置种子。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>call_group()</literal> 、 <literal>set_group()</literal> 和 <literal>notify_group()</literal> 现在默认为立即调用。如果在包含大量节点的组中调用代价高昂的函数可能会导致卡顿。要像以前一样使用延迟调用，请将 <literal>call_group(...)</literal> 替换为 <literal>call_group_flags(SceneTree.GROUP_CALL_DEFERRED, ...)</literal> （并分别对 <literal>set_group()</literal> 和 <literal>notify_group()</literal> 也进行类似的替换）。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>现在编辑器中的 <literal>rotation</literal> 属性取代了旧有的 <literal>rotation_degrees</literal> 属性，在检查器面板中，它会自动显示为度。这可能会破坏动画，因为转换工具无法自动处理转换。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" refuri="../../classes/class_aabb#class-aabb"><inline classes="std std-ref">AABB</inline></reference> 的函数 <literal>has_no_surface()</literal> 被反转并重命名为了 <literal>has_surface()</literal> 。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" refuri="../../classes/class_aabb#class-aabb"><inline classes="std std-ref">AABB</inline></reference> 及 <reference internal="True" refuri="../../classes/class_rect2#class-rect2"><inline classes="std std-ref">Rect2</inline></reference> 的 函数 <literal>has_no_area()</literal> 被反转并重命名为了 <literal>has_area()</literal> 。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" refuri="../../classes/class_animatedtexture#class-animatedtexture"><inline classes="std std-ref">AnimatedTexture</inline></reference> 的 <literal>fps</literal> 属性被 <literal>speed_scale</literal> 属性取代，其作用与 AnimationPlayer 的 <literal>playback_speed</literal> 属性相同。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" refuri="../../classes/class_animatedsprite2d#class-animatedsprite2d"><inline classes="std std-ref">AnimatedSprite2D</inline></reference> 和 <reference internal="True" refuri="../../classes/class_animatedsprite3d#class-animatedsprite3d"><inline classes="std std-ref">AnimatedSprite3D</inline></reference> 现在允许设置负的 <literal>speed_scale</literal> 值。如果你过去的工作依赖于 <literal>speed_scale</literal> 属性在内部被限位为 <literal>0.0</literal> ， 现在这可能会破坏动画。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" refuri="../../classes/class_animatedsprite2d#class-animatedsprite2d"><inline classes="std std-ref">AnimatedSprite2D</inline></reference> 和 <reference internal="True" refuri="../../classes/class_animatedsprite3d#class-animatedsprite3d"><inline classes="std std-ref">AnimatedSprite3D</inline></reference> 的 <literal>playing</literal> 属性现在已经被移除。请使用 <literal>play()</literal>/<literal>stop()</literal> 方法来代替或者通过 SpriteFrames 底部面板配置 <literal>autoplay</literal> 动画（但不能同时使用这两种方法）。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" refuri="../../classes/class_array#class-array"><inline classes="std std-ref">Array</inline></reference> 的 <literal>slice()</literal> 第二个参数（ <literal>end</literal> ）现在是 <emphasis>不包含的</emphasis> ，而非包含的。例如，这意味着 <literal>[1, 2, 3].slice(0, 1)</literal> 现在返回 <literal>[1]</literal> 而不是 <literal>[1, 2]</literal> 。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" refuri="../../classes/class_basebutton#class-basebutton"><inline classes="std std-ref">BaseButton</inline></reference> 的信号现在是 <literal>button_up</literal> 和 <literal>button_down</literal> 。 <literal>pressed</literal> 属性也改为了 <literal>button_pressed</literal> 。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" refuri="../../classes/class_camera2d#class-camera2d"><inline classes="std std-ref">Camera2D</inline></reference> 的属性 <literal>rotating</literal> 现在被 <literal>ignore_rotation</literal> 所取代，而后者的行为是相反的。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Camera2D 的 <literal>zoom</literal> 属性被反转：现在该属性的值越大，缩放越大，而并非之前的缩放越小。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" refuri="../../classes/class_node#class-node"><inline classes="std std-ref">Node</inline></reference> 的 <literal>remove_and_skip()</literal> 方法现在已经被移除，如果你需要在脚本中重新实现该方法，可以使用 <problematic ids="id3" refid="id1">`旧的C++ 实现&lt;https://github.com/godotengine/godot/blob/7936b3cc4c657e4b273b376068f095e1e0e4d82a/scene/main/node.cpp#L1910-L1945&gt;`__</problematic> 作为参考。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>OS.get_system_time_secs()</literal> 现在应该改写为 <literal>Time.get_time_dict_from_system()["second"]</literal> 。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" refuri="../../classes/class_resourcesaver#class-resourcesaver"><inline classes="std std-ref">ResourceSaver</inline></reference> 的 <literal>save()</literal> 方法的参数现在交换了位置（ <literal>resource: Resource, path: String</literal> ）。这也适用于 <reference internal="True" refuri="../../classes/class_resourceformatsaver#class-resourceformatsaver"><inline classes="std std-ref">ResourceFormatSaver</inline></reference> 的 <literal>_save()</literal> 方法。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" refuri="../../classes/class_streampeertcp#class-streampeertcp"><inline classes="std std-ref">StreamPeerTCP</inline></reference> 必须依靠其中的 <literal>poll()</literal> 来更新状态，而不能依赖于 <literal>get_status()</literal> 自动轮询：<reference name="GH-59582" refuri="https://github.com/godotengine/godot/pull/59582">GH-59582</reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" refuri="../../classes/class_string#class-string"><inline classes="std std-ref">String</inline></reference> 的 <literal>right()</literal> 方法 <reference name="改变了行为" refuri="https://github.com/godotengine/godot/pull/36180">改变了行为</reference>：它现在返回字符串右边的字符数，而不是从给定位置开始返回字符串右边的字符数。如果需要旧的功能，可以使用 <literal>substr()</literal> 来代替。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>根据 <reference name="GH-59582" refuri="https://github.com/godotengine/godot/pull/59582">GH-59582</reference>，StreamPeerTCP 和 PacketPeerUDP 当中的 <literal>is_connected_to_host()</literal> 现已被删除。可在 StreamPeerTCP 当中使用 <literal>get_status()</literal> 来代替，在 <reference internal="True" refuri="../../classes/class_packetpeerudp#class-packetpeerudp"><inline classes="std std-ref">PacketPeerUDP</inline></reference> 则可以使用 <literal>is_socket_connected()</literal>。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>在 <literal>_get_property_list()</literal> 中，<literal>or_lesser</literal> 这个属性提示字符串被更改为了 <literal>or_less</literal>。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>在 <literal>_get_property_list()</literal> 中，<literal>noslider</literal> 这个属性提示字符串被改成了 <literal>no_slider</literal>。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>VisualShaderNodeVec4Parameter 现在使用 <reference internal="True" refuri="../../classes/class_vector4#class-vector4"><inline classes="std std-ref">Vector4</inline></reference> 作为参数，而不再使用 <reference internal="True" refuri="../../classes/class_quaternion#class-quaternion"><inline classes="std std-ref">Quaternion</inline></reference>。</paragraph>
                    </list_item>
                </bullet_list>
                <paragraph><strong>已移除或已替换的节点/资源</strong></paragraph>
                <paragraph>这将列出所有需要被另一个不同配置的节点替换掉的那些节点。由于项目转换器不支持更新现存设置，因此必须从头开始设置：</paragraph>
                <table>
                    <tgroup cols="3">
                        <colspec colwidth="21"></colspec>
                        <colspec colwidth="23"></colspec>
                        <colspec colwidth="76"></colspec>
                        <thead>
                            <row>
                                <entry>
                                    <paragraph>移除节点</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>最接近的等价物</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>注释</paragraph>
                                </entry>
                            </row>
                        </thead>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph>AnimationTreePlayer</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>AnimationTree</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>AnimationTreePlayer 从 Godot 3.1 起废弃。</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>BakedLightmap</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>LightmapGI</paragraph>
                                </entry>
                                <entry morerows="1">
                                    <paragraph>见 <reference internal="True" refuri="../3d/global_illumination/using_lightmap_gi#doc-using-lightmap-gi"><inline classes="std std-ref">使用光照贴图全局照明</inline></reference>。</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>BakedLightmapData</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>LightmapGIData</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>BitmapFont</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>FontFile</paragraph>
                                </entry>
                                <entry morerows="2">
                                    <paragraph>见 <reference internal="True" refuri="../ui/gui_using_fonts#doc-gui-using-fonts"><inline classes="std std-ref">使用字体</inline></reference>。</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>DynamicFont</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>FontFile</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>DynamicFontData</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>FontFile</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>Navigation2D</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Node2D</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>由<reference internal="True" refuri="../navigation/navigation_introduction_2d#doc-navigation-overview-2d"><inline classes="std std-ref">其他 2D 导航节点</inline></reference>代替。</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>Navigation3D</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Node3D</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>由<reference internal="True" refuri="../navigation/navigation_introduction_3d#doc-navigation-overview-3d"><inline classes="std std-ref">其他 3D 导航节点</inline></reference>代替。</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>OpenSimplexNoise</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>FastNoiseLite</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>参数不同，额外提供了蜂窝等不同类型的噪声。不支持 4D 噪声，因为 FastNoiseLite 库中没有提供。</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>ToolButton</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Button</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>ToolButton 是默认启用 <strong>Flat</strong> 属性的 Button。</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>YSort</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Node2D 或 Control</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>4.0 中的 CanvasItem 新增了 <strong>Y Sort Enabled</strong> 属性。</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>ProximityGroup</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Node3D</paragraph>
                                </entry>
                                <entry>
                                    <paragraph><reference internal="True" refuri="../../classes/class_visibleonscreennotifier3d#class-visibleonscreennotifier3d"><inline classes="std std-ref">VisibleOnScreenNotifier3D</inline></reference> 可以作为替代品。</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>Portal</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Node3D</paragraph>
                                </entry>
                                <entry morerows="3">
                                    <paragraph>入口与房间遮挡剔除换成了光栅<reference internal="True" refuri="../3d/occlusion_culling#doc-occlusion-culling"><inline classes="std std-ref">遮挡剔除</inline></reference>（OccluderInstance3D 节点），设置流程不同。</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>Room</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Node3D</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>RoomManager</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Node3D</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>RoomGroup</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Node3D</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>Occluder</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Node3D</paragraph>
                                </entry>
                                <entry morerows="1">
                                    <paragraph>几何体遮挡剔除换成了光栅<reference internal="True" refuri="../3d/occlusion_culling#doc-occlusion-culling"><inline classes="std std-ref">遮挡剔除</inline></reference>（OccluderInstance3D 节点），设置流程不同。</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>OccluderShapeSphere</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>资源</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <paragraph>如果加载一个旧版本项目，项目中的节点将自动替换为其 <emphasis>最近似值</emphasis>（即使没有使用项目升级工具）。</paragraph>
                <paragraph><strong>改变线程</strong></paragraph>
                <paragraph><reference internal="True" refuri="../performance/using_multiple_threads#doc-using-multiple-threads"><inline classes="std std-ref">Threading</inline></reference> 的API在 4.0 当中发生了变化。例如：Godot 3.x 中的以下代码片段必须修改后才能在 4.0 当中运行：</paragraph>
                <literal_block force="False" language="gdscript" linenos="False" xml:space="preserve"># 3.x
var start_success = new_thread.start(self, "__threaded_background_loader",
    [resource_path, thread_num]
)

# 4.0
var start_success = new_thread.start(__threaded_background_loader.bind(resource_path, thread_num))</literal_block>
                <paragraph><literal>Thread.is_active()</literal> 已经不再使用，应该使用 <literal>Thread.is_alive()</literal> 来代替它。</paragraph>
                <seealso>
                    <paragraph>有关 Godot 3.x 和 4 之间的完整变化列表，请参见 <reference name="更新日志" refuri="https://github.com/godotengine/godot/blob/master/CHANGELOG.md">更新日志</reference>。</paragraph>
                </seealso>
            </section>
            <section ids="arraymesh-resource-compatibility-breakage" names="arraymesh\ resource\ compatibility\ breakage arraymesh\ 资源不兼容问题">
                <title>ArrayMesh 资源不兼容问题</title>
                <paragraph>如果在旧版本项目中你已经将 ArrayMesh 资源保存为了 <literal>.res</literal> 或者 <literal>.tres</literal> 文件，由于 4.0 中使用的格式与 3.x 中使用的格式不兼容，那么你需要再次导入源网格文件并将其保存为 ArrayMesh 资源。</paragraph>
            </section>
        </section>
        <section ids="list-of-automatically-renamed-methods-properties-signals-and-constants" names="list\ of\ automatically\ renamed\ methods,\ properties,\ signals\ and\ constants 自动重命名方法、属性、信号、常量列表">
            <title>自动重命名方法、属性、信号、常量列表</title>
            <paragraph><reference name="editor/renames_map_3_to_4.cpp" refuri="https://github.com/godotengine/godot/blob/master/editor/renames_map_3_to_4.cpp">editor/renames_map_3_to_4.cpp</reference> 源文件列出了项目升级工具执行的所有自动重命名。注释掉的行指的是 <reference internal="True" refid="doc-upgrading-to-godot-4-manual-rename"><inline classes="std std-ref">不能自动执行的</inline></reference> API重命名。</paragraph>
        </section>
        <section ids="porting-editor-settings" names="porting\ editor\ settings 移植编辑器设置">
            <title>移植编辑器设置</title>
            <paragraph>Godot 3.x 和 4.0 使用不同的编辑器设置文件。这意味着它们的设置可以相互独立更改。</paragraph>
            <paragraph>如果你希望将 Godot 3.x 的设置移植到 Godot 4 ，请打开 <reference internal="True" refuri="../io/data_paths#doc-data-paths-editor-data-paths"><inline classes="std std-ref">编辑器设置文件夹</inline></reference>，并在 Godot 4 编辑器关闭时复制 <literal>editor_settings-3.tres</literal> 到 <literal>editor_settings-4.tres</literal>。</paragraph>
            <note>
                <paragraph>自 Godot 3.x 版本以来，许多设置的名称和类别都发生了变化。名称或类别发生变化的编辑器设置不会延续到 Godot 4.0，你必须重新设置它们的值。</paragraph>
            </note>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="翻译状态" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/tutorials/performance/index.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <target refid="doc-performance"></target>
    <section ids="performance doc-performance" names="performance 性能 doc_performance">
        <title>性能</title>
        <section ids="introduction" names="introduction 前言">
            <title>前言</title>
            <paragraph>Godot follows a balanced performance philosophy. In the performance world,
                there are always tradeoffs, which consist of trading speed for usability
                and flexibility. Some practical examples of this are:</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>有效地渲染大量的物体是很容易的, 但是当必须渲染一个大的场景时, 效率就会变得很低. 为了解决这个问题, 必须在渲染时加入可见性计算. 这使得渲染的效率降低, 但同时, 被渲染的对象也减少了. 因此, 整体的渲染效率得到了提高.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>为每个需要渲染的对象配置每个材质的属性也很慢. 为了解决这个问题, 物体被按材质分类以减少成本. 同时, 排序也是有成本的.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>在3D物理中, 也有类似的情况发生. 处理大量物理对象的最佳算法(如SAP)在插入/移除对象和射线传输方面都很慢. 允许更快的插入和移除以及射线传输的算法, 将无法处理那么多的活动对象.</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>而这样的例子还有很多!游戏引擎在本质上努力成为通用的. 平衡的算法总是受到青睐, 而不是那些在某些情况下可能很快而在另一些情况下很慢的算法, 或者那些快但更难使用的算法.</paragraph>
            <paragraph>Godot在这方面也不例外. 虽然它被设计成可以为不同的算法交换后端, 但默认的后端将平衡和灵活性置于性能之上.</paragraph>
            <paragraph>明确了这一点后, 本教程部分的目的是解释如何从Godot中获得最大的性能. 虽然这些教程可以按任何顺序阅读, 但最好从 <reference internal="True" refuri="general_optimization#doc-general-optimization"><inline classes="std std-ref">通用优化提示</inline></reference> 开始.</paragraph>
        </section>
        <section ids="common" names="common 常规">
            <title>常规</title>
            <compound classes="toctree-wrapper" ids="toc-learn-features-general-optimization" names="toc-learn-features-general-optimization">
                <compact_paragraph toctree="True"><bullet_list><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="general_optimization">通用优化提示</reference></compact_paragraph></list_item><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="using_servers">利用服务器进行优化</reference></compact_paragraph></list_item></bullet_list></compact_paragraph>
            </compound>
        </section>
        <section ids="cpu" names="cpu">
            <title>CPU</title>
            <compound classes="toctree-wrapper" ids="toc-learn-features-cpu-optimization" names="toc-learn-features-cpu-optimization">
                <compact_paragraph toctree="True"><bullet_list><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="cpu_optimization">CPU 优化</reference></compact_paragraph></list_item></bullet_list></compact_paragraph>
            </compound>
        </section>
        <section ids="gpu" names="gpu">
            <title>GPU</title>
            <compound classes="toctree-wrapper" ids="toc-learn-features-gpu-optimization" names="toc-learn-features-gpu-optimization">
                <compact_paragraph toctree="True"><bullet_list><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="gpu_optimization">GPU 优化</reference></compact_paragraph></list_item><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="using_multimesh">使用 MultiMesh 优化</reference></compact_paragraph></list_item></bullet_list></compact_paragraph>
            </compound>
        </section>
        <section ids="d" names="3d">
            <title>3D</title>
            <compound classes="toctree-wrapper" ids="toc-learn-features-3d-optimization" names="toc-learn-features-3d-optimization">
                <compact_paragraph toctree="True"><bullet_list><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="optimizing_3d_performance">优化 3D 性能</reference></compact_paragraph></list_item><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="vertex_animation/index">对数以千计的对象动画化</reference></compact_paragraph></list_item></bullet_list></compact_paragraph>
            </compound>
        </section>
        <section ids="threads" names="threads 线程">
            <title>线程</title>
            <compound classes="toctree-wrapper" ids="toc-learn-features-threads" names="toc-learn-features-threads">
                <compact_paragraph toctree="True"><bullet_list><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="using_multiple_threads">使用多线程</reference></compact_paragraph></list_item><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="thread_safe_apis">线程安全的 API</reference></compact_paragraph></list_item></bullet_list></compact_paragraph>
            </compound>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="翻译状态" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

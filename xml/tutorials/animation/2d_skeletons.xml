<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/tutorials/animation/2d_skeletons.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <target refid="doc-2d-skeletons"></target>
    <section ids="d-skeletons doc-2d-skeletons" names="2d\ skeletons 2d\ 骨架 doc_2d_skeletons">
        <title>2D 骨架</title>
        <section ids="introduction" names="introduction 前言">
            <title>前言</title>
            <paragraph>在 3D 工作中，骨骼变形是角色和生物的常见功能，大多数 3D 建模应用程序都支持这种功能。而对于 2D，由于这种功能并不常用，因此很难找到针对这种功能的主流软件。</paragraph>
            <paragraph>你可以在 Spine、Dragonbones 等第三方软件中创建动画。不过，Godot 从 3.1 版本开始就已经内置了这个功能。</paragraph>
            <paragraph>为什么要在 Godot 中直接处理骨骼动画？答案是这样做有很多好处：</paragraph>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph>能更好地与引擎集成, 从而减少使用外部工具导入和编辑的麻烦.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>能够控制粒子系统, 着色器, 声音, 调用脚本, 颜色, 透明度等动画.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Godot内置的骨骼系统非常高效, 并且是为性能而设计的.</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>接下来的教程将讲解 2D 骨架变形。</paragraph>
        </section>
        <section ids="setup" names="setup 场景布置">
            <title>场景布置</title>
            <seealso>
                <paragraph>在开始之前, 我们建议你先浏览一下 <reference internal="True" refuri="cutout_animation#doc-cutout-animation"><inline classes="std std-ref">剪纸动画</inline></reference> 教程, 以便对Godot中的动画制作有一个大致的了解.</paragraph>
            </seealso>
            <paragraph>在本教程中, 我们将使用单张图片来构建我们的角色. 从这里下载 <download_reference filename="411d24b75fb71e4ae65083a28435826d/gBot_pieces.png" refdoc="tutorials/animation/2d_skeletons" refdomain="" refexplicit="True" reftarget="img/gBot_pieces.png" reftype="download" refwarn="False"><literal classes="xref download">gBot_pieces.png</literal></download_reference> 或保存下图.</paragraph>
            <image candidates="{'*': 'tutorials/animation/img/gBot_pieces.png'}" uri="tutorials/animation/img/gBot_pieces.png"></image>
            <paragraph>并且建议下载最终的角色图片 <download_reference filename="7c9bde383c09d42382be303c12eb4b10/gBot_complete.png" refdoc="tutorials/animation/2d_skeletons" refdomain="" refexplicit="True" reftarget="img/gBot_complete.png" reftype="download" refwarn="False"><literal classes="xref download">gBot_complete.png</literal></download_reference> 将不同部分放在一起，以便进行参考。</paragraph>
            <image candidates="{'*': 'tutorials/animation/img/gBot_complete.png'}" uri="tutorials/animation/img/gBot_complete.png"></image>
        </section>
        <section ids="creating-the-polygons" names="creating\ the\ polygons 创建多边形">
            <title>创建多边形</title>
            <paragraph>为你的模型创建一个新场景（如果它是一个动画角色，你可能需要使用 <literal>KinematicBody2D</literal>）。为便于使用，创建一个空的 2D 节点作为多边形的根节点。</paragraph>
            <paragraph>从 <literal>Polygon2D</literal> 节点开始。现在不需要把它放在场景何处，所以简单创建如下：</paragraph>
            <image candidates="{'*': 'tutorials/animation/img/skel2d1.png'}" uri="tutorials/animation/img/skel2d1.png"></image>
            <paragraph>为你之前下载的角色部件选择并指定纹理：</paragraph>
            <image candidates="{'*': 'tutorials/animation/img/skel2d2.png'}" uri="tutorials/animation/img/skel2d2.png"></image>
            <paragraph>不建议直接绘制多边形。请打开该多边形的“UV”对话框：</paragraph>
            <image candidates="{'*': 'tutorials/animation/img/skel2d3.png'}" uri="tutorials/animation/img/skel2d3.png"></image>
            <paragraph>转到 <emphasis>点</emphasis> 模式, 选择铅笔, 在需要的区域绘制一个多边形:</paragraph>
            <image candidates="{'*': 'tutorials/animation/img/skel2d4.png'}" uri="tutorials/animation/img/skel2d4.png"></image>
            <paragraph>复制多边形节点, 并给它一个合适的名字. 然后, 再次进入 "UV" 对话框, 在新的所需设计中用另一个多边形替换旧的多边形.</paragraph>
            <paragraph>当复制节点且下一块具有相似形状时, 可以编辑上一个多边形, 而不是绘制新多边形.</paragraph>
            <paragraph>移动多边形后，请记住通过在多边形2D UV编辑器中选择 <strong>编辑-&gt;多边形-&gt;UV</strong> 来更新UV。</paragraph>
            <image candidates="{'*': 'tutorials/animation/img/skel2d5.png'}" uri="tutorials/animation/img/skel2d5.png"></image>
            <paragraph>继续这样做, 直到你映射所有的部件.</paragraph>
            <image candidates="{'*': 'tutorials/animation/img/skel2d6.png'}" uri="tutorials/animation/img/skel2d6.png"></image>
            <paragraph>你会注意到, 节点的部分与它们在原始纹理中的布局是一样的. 这是因为默认情况下, 当你绘制一个多边形时,UV和点是一样的.</paragraph>
            <paragraph>重新排列部件, 建立角色. 这个过程应该很快. 没必要改变轴心, 因此, 不必费心确保每个部件的旋转轴心都正确；你可以暂时不用理会它们.</paragraph>
            <image candidates="{'*': 'tutorials/animation/img/skel2d7.png'}" uri="tutorials/animation/img/skel2d7.png"></image>
            <paragraph>啊, 这些作品的视觉顺序还不正确, 因为有些覆盖到错误的部分. 重新排列节点的顺序来解决这个问题:</paragraph>
            <image candidates="{'*': 'tutorials/animation/img/skel2d8.png'}" uri="tutorials/animation/img/skel2d8.png"></image>
            <paragraph>恭喜你完成本节教程!它肯定比剪纸动画教程简单得多.</paragraph>
        </section>
        <section ids="creating-the-skeleton" names="creating\ the\ skeleton 创建骨架">
            <title>创建骨架</title>
            <paragraph>创建一个 <literal>Skeleton2D</literal> 节点作为根节点的子项。我们将其作为骨架的基础：</paragraph>
            <image candidates="{'*': 'tutorials/animation/img/skel2d9.png'}" uri="tutorials/animation/img/skel2d9.png"></image>
            <paragraph>创建一个 <literal>Bone2D</literal> 节点作为骨架的子项。把它放在臀部（通常从这里开始建立骨架）。骨骼会指向右边，但是现在你可以忽略这个。</paragraph>
            <image candidates="{'*': 'tutorials/animation/img/skel2d10.png'}" uri="tutorials/animation/img/skel2d10.png"></image>
            <paragraph>在层级结构中继续创建骨骼并依次命名它们.</paragraph>
            <image candidates="{'*': 'tutorials/animation/img/skel2d11.png'}" uri="tutorials/animation/img/skel2d11.png"></image>
            <paragraph>在这根链条的末端，会有一个<emphasis>下巴</emphasis>节点。它很短小，也指向右边。这根单根骨正常情况下没有子骨骼。<emphasis>提示</emphasis>单根骨的长度属性可以通过检查器来改变：</paragraph>
            <image candidates="{'*': 'tutorials/animation/img/skel2d12.png'}" uri="tutorials/animation/img/skel2d12.png"></image>
            <paragraph>在这种情况下, 我们不需要旋转骨头, 巧合的是, 精灵中的下巴指向右边, 但万一需要, 可以随意旋转. 同样, 这只是对尖端骨骼的真正需要, 因为带有子节点通常不需要长度或特定的旋转.</paragraph>
            <paragraph>继续构建整个骨架：</paragraph>
            <image candidates="{'*': 'tutorials/animation/img/skel2d13.png'}" uri="tutorials/animation/img/skel2d13.png"></image>
            <paragraph>你会注意到，所有骨骼节点旁都有一个烦人的警告，提示你缺少放松姿势。这意味着是时候设置一个了。转到<emphasis>骨架</emphasis>节点并创建一个放松姿势。这个姿势是默认的，你可以随时回来修改（对于制作动画来说非常方便）：</paragraph>
            <image candidates="{'*': 'tutorials/animation/img/skel2d14.png'}" uri="tutorials/animation/img/skel2d14.png"></image>
            <paragraph>警告消失了。如果你修改骨架（添加/移除骨骼）你需要重新设置放松姿势。</paragraph>
        </section>
        <section ids="deforming-the-polygons" names="deforming\ the\ polygons 多边形的变形">
            <title>多边形的变形</title>
            <paragraph>选择之前创建的多边形，并将骨架节点分配给它们的 <literal>Skeleton</literal> 属性。这将确保它们最终能被变形。</paragraph>
            <image candidates="{'*': 'tutorials/animation/img/skel2d15.png'}" uri="tutorials/animation/img/skel2d15.png"></image>
            <paragraph>单击上面突出显示的属性并选择骨架节点：</paragraph>
            <image candidates="{'*': 'tutorials/animation/img/skel2d16.png'}" uri="tutorials/animation/img/skel2d16.png"></image>
            <paragraph>再次打开多边形的 UV 编辑器，进入 <emphasis>Bones</emphasis> 部分。</paragraph>
            <image candidates="{'*': 'tutorials/animation/img/skel2d17.png'}" uri="tutorials/animation/img/skel2d17.png"></image>
            <paragraph>现在你还不能绘制权重。为此，你首先需要将骨架中的骨骼列表与多边形同步。此步骤仅需手动执行一次（除非你通过添加/删除/重命名骨骼来修改骨架）。它确保你的绑定信息保存在多边形中，即使骨架节点意外丢失或被修改。按“同步骨骼到多边形”按钮来同步列表。</paragraph>
            <image candidates="{'*': 'tutorials/animation/img/skel2d18.png'}" uri="tutorials/animation/img/skel2d18.png"></image>
            <paragraph>骨骼列表将自动显示。默认情况下，你的多边形没有被分配任何权重信息。选择你想要分配权重的骨骼，并在它们上面绘制：</paragraph>
            <image candidates="{'*': 'tutorials/animation/img/skel2d19.png'}" uri="tutorials/animation/img/skel2d19.png"></image>
            <paragraph>白色点完全受到权重影响，而黑色点完全不受影响。如果在多根骨骼上，绘制了相同的白色点，那么权重的影响将平均分配在这些骨骼之间。（所以通常不需要过多使用中间色调，除非你想仔细打磨弯曲效果）。</paragraph>
            <image candidates="{'*': 'tutorials/animation/img/skel2d20.gif'}" uri="tutorials/animation/img/skel2d20.gif"></image>
            <paragraph>绘制完权重后，制作骨骼的动画（不是多边形的动画！）会具有修改和弯曲多边形的预期效果。因为你只需用这种方法驱动骨骼，工作就变得容易得多！</paragraph>
            <paragraph>但这并不完美。尝试调调骨骼的动画，弯曲的多边形往往会产生意想不到的结果：</paragraph>
            <image candidates="{'*': 'tutorials/animation/img/skel2d21.gif'}" uri="tutorials/animation/img/skel2d21.gif"></image>
            <paragraph>这是因为Godot在绘制多边形时, 产生了内部三角形来连接这些点. 它们并不总是按你所期望的方式弯曲. 如果要解决这个问题, 你需要在几何图形中设置提示, 以明确希望它如何变形.</paragraph>
        </section>
        <section ids="internal-vertices" names="internal\ vertices 内部顶点">
            <title>内部顶点</title>
            <paragraph>再次打开每根骨骼的 UV 菜单，进入 <emphasis>Points</emphasis> 部分。在你期望几何体弯曲的地方添加一些内部顶点：</paragraph>
            <image candidates="{'*': 'tutorials/animation/img/skel2d22.png'}" uri="tutorials/animation/img/skel2d22.png"></image>
            <paragraph>现在转到 <emphasis>多边形</emphasis> 部分, 重新绘制细节更丰富的多边形. 这样, 当多边形弯曲时, 你需要确保它们变形的可能性最小, 慢慢尝试找出正确的设置.</paragraph>
            <image candidates="{'*': 'tutorials/animation/img/skel2d23.png'}" uri="tutorials/animation/img/skel2d23.png"></image>
            <paragraph>一旦你开始绘制, 原来的多边形会消失, 你可以自由创建自己的多边形:</paragraph>
            <image candidates="{'*': 'tutorials/animation/img/skel2d24.png'}" uri="tutorials/animation/img/skel2d24.png"></image>
            <paragraph>通常这个数量的细节没有问题, 尽管你想更精细地控制三角形. 请多多尝试, 直到获得你满意的结果.</paragraph>
            <paragraph><strong>注意:</strong> 不要忘记你新添加的内部顶点也需要绘制权重!再次转到 <emphasis>骨骼</emphasis> 部分, 将它们分配到正确的骨骼.</paragraph>
            <paragraph>一旦你设定好了, 你会得到更好的结果:</paragraph>
            <image candidates="{'*': 'tutorials/animation/img/skel2d25.gif'}" uri="tutorials/animation/img/skel2d25.gif"></image>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="翻译状态" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/tutorials/i18n/pseudolocalization.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <target refid="doc-pseudolocalization"></target>
    <section ids="pseudolocalization doc-pseudolocalization" names="pseudolocalization 伪本地化 doc_pseudolocalization">
        <title>伪本地化</title>
        <section ids="introduction" names="introduction 前言">
            <title>前言</title>
            <paragraph>When creating a game, the process of localization usually starts when development
                has finished. This means that translations aren't available during development
                for testing whether the project is internationalized properly.</paragraph>
            <paragraph>Godot offers pseudolocalization as a way to test how robust the project is
                when it comes to locale changes. Pseudolocalization simulates changes that
                might take place during localization. This way, any issues regarding
                internationalization can be recognized early on during development.</paragraph>
            <seealso>
                <paragraph>You can see how pseudolocalization works in action using the
                    <reference name="Pseudolocalizaton demo project" refuri="https://github.com/godotengine/godot-demo-projects/tree/master/gui/pseudolocalization">Pseudolocalizaton demo project</reference>.</paragraph>
            </seealso>
        </section>
        <section ids="enabling-and-configuring-pseudolocalization" names="enabling\ and\ configuring\ pseudolocalization 伪本地化的启用和配置">
            <title>伪本地化的启用和配置</title>
            <paragraph>Enabling pseudolocalization and the configurations related to it is as simple as
                toggling a checkbox in the project settings. These settings can be found in
                <strong>Project → Project Settings → General → Internationalization → Pseudolocalization</strong>
                after enabling the <strong>Advanced</strong> toggle in the project settings dialog:</paragraph>
            <image candidates="{'*': 'tutorials/i18n/img/pseudolocalization_settings.webp'}" uri="tutorials/i18n/img/pseudolocalization_settings.webp"></image>
            <paragraph>Pseudolocalization can also be <reference internal="True" refid="doc-pseudolocalization-runtime"><inline classes="std std-ref">toggled at runtime from a script</inline></reference>.</paragraph>
        </section>
        <section ids="pseudolocalization-configurations" names="pseudolocalization\ configurations 伪本地化配置">
            <title>伪本地化配置</title>
            <paragraph>Pseudolocalization in Godot can be set up according to the specific use case of the
                project. Here are the pseudolocalization properties that can be configured through
                project settings:</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><literal>replace_with_accents</literal>：将字符串中的所有字母替换为其重音变体。 启用此设定后，<emphasis>"The quick brown fox jumped over the lazy dog"</emphasis> 会被转换为 <emphasis>"Ŧh̀é q́üíćḱ ḅŕôŵή f́ôx́ ǰüm̀ṕéd́ ôṽéŕ ŧh̀é łáźý d́ôǵ"</emphasis>。 这可用于发现没有重音的未翻译字符串，对于检查项目使用的字体是否缺少字形也很有用。</paragraph>
                </list_item>
                <list_item>
                    <paragraph><literal>double_vowels</literal>: Doubles all the vowels in the string. It is a good approximation
                        to simulate expansion of text during localization.
                        This can be used to check for text that would overflow its container
                        (such as buttons).</paragraph>
                </list_item>
                <list_item>
                    <paragraph><literal>fake_bidi</literal>: Fake bidirectional text (simulates right-to-left text). This is useful to
                        simulate right-to-left writing systems to check for potential layout issues that would occur in languages using right-to-left scripts.</paragraph>
                </list_item>
                <list_item>
                    <paragraph><literal>override</literal>: Replaces all the characters in the string with an asterisk (<literal>*</literal>). This is useful for
                        quickly finding text that isn't being localized.</paragraph>
                </list_item>
                <list_item>
                    <paragraph><literal>expansion_ratio</literal>: Can be used in cases where doubling the vowels isn't a sufficient
                        approximation. This setting pads the string with underscores (<literal>_</literal>) and expands it by the given ratio.
                        An expansion ratio of <literal>0.3</literal> is sufficient for most practical cases; it will increase
                        the length of the string by 30%.</paragraph>
                </list_item>
                <list_item>
                    <paragraph><literal>prefix</literal> and <literal>suffix</literal>: These properties can be used to specify a prefix and suffix to wrap
                        the text in.</paragraph>
                </list_item>
                <list_item>
                    <paragraph><literal>skip_placeholders</literal>: Skips placeholders for string formatting like <literal>%s</literal> and <literal>%f</literal>.
                        This is useful to identify places where more arguments are required for the formatted
                        string to display correctly.</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>All of these properties can be toggled as needed according to the project's use case.</paragraph>
            <target refid="doc-pseudolocalization-runtime"></target>
        </section>
        <section ids="configuring-pseudolocalization-at-runtime doc-pseudolocalization-runtime" names="configuring\ pseudolocalization\ at\ runtime 运行时配置伪本地化 doc_pseudolocalization_runtime">
            <title>运行时配置伪本地化</title>
            <paragraph>Pseudolocalization can be toggled at runtime using the
                <reference internal="True" refuri="../../classes/class_translationserver#class-translationserver-property-pseudolocalization-enabled"><inline classes="std std-ref">pseudolocalization_enabled</inline></reference> property
                in TranslationServer.
                However, if runtime configuration of pseudolocalization properties is required,
                they can be directly configured using
                <reference internal="True" refuri="../../classes/class_projectsettings#class-projectsettings-method-set-setting"><inline classes="std std-ref">ProjectSettings.set_setting(property, value)</inline></reference>
                and then calling
                <reference internal="True" refuri="../../classes/class_translationserver#class-translationserver-method-reload-pseudolocalization"><inline classes="std std-ref">TranslationServer.reload_pseudolocalization()</inline></reference>
                which reparses the pseudolocalization properties and reloads the pseudolocalization.
                The following code snippet shall turn on <literal>replace_with_accents</literal> and <literal>double_vowels</literal> properties
                and then call <literal>reload_pseudolocalization()</literal> for the changes to get reflected:</paragraph>
            <literal_block force="False" language="gdscript" linenos="False" xml:space="preserve">ProjectSettings.set_setting("internationalization/pseudolocalization/replace_with_accents", true)
ProjectSettings.set_setting("internationalization/pseudolocalization/double_vowels", true)
TranslationServer.reload_pseudolocalization()</literal_block>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="翻译状态" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

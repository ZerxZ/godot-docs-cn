<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/tutorials/xr/deploying_to_android.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <target refid="doc-deploying-to-android"></target>
    <section ids="deploying-to-android doc-deploying-to-android" names="deploying\ to\ android 部署到\ android doc_deploying_to_android">
        <title>部署到 Android</title>
        <section ids="setup" names="setup 场景布置">
            <title>场景布置</title>
            <paragraph>多数独立头显运行在 Android 上，并且 OpenXR 支持正在逐步推广到这些平台。</paragraph>
            <paragraph>在遵循此处的 OpenXR 特定说明之前，你需要首先设置你的系统以导出到 Android 平台，包括：</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>安装 OpenJDK 17</paragraph>
                </list_item>
                <list_item>
                    <paragraph>安装 Android Studio</paragraph>
                </list_item>
                <list_item>
                    <paragraph>创建 debug.keystore</paragraph>
                </list_item>
                <list_item>
                    <paragraph>在 Godot 中配置 Android SDK 和 debug.keystore 的位置</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>详情请参见 <reference internal="True" refuri="../export/exporting_for_android#doc-exporting-for-android"><inline classes="std std-ref">为 Android 导出</inline></reference> ，完成所需配置后再返回此处。</paragraph>
        </section>
        <section ids="gradle-android-build" names="gradle\ android\ build gradle\ android\ 构建">
            <title>Gradle Android 构建</title>
            <note>
                <paragraph>最初，官方对 Android 平台的支持并未添加到 OpenXR 规范中，这导致各大供应商都创建了自定义加载器以在其头戴设备上实现 OpenXR。尽管从长远角度来看，所有供应商都终将转移到官方的 OpenXR 加载器；但就当下来说，这些加载器需要添加到你的项目中。</paragraph>
            </note>
            <paragraph>为了将特定供应商的 OpenXR 加载器包含到你的项目中，你需要先设置一个 Gradle Android 构建。</paragraph>
            <paragraph>在<strong>项目</strong>菜单中选择<strong>安装 Android 构建模板...</strong>：</paragraph>
            <image candidates="{'*': 'tutorials/xr/img/android_gradle_build.webp'}" uri="tutorials/xr/img/android_gradle_build.webp"></image>
            <paragraph>这将在你的项目中创建一个名为 <strong>android</strong> 的文件夹，包含在 Android 上运行所需的所有运行时文件。现在你可以自定义这个安装，Godot 不会在编辑器中显示这个文件夹，但你可以通过文件浏览器找到它。</paragraph>
            <paragraph>你可以在这里阅读更多关于 Gradle 构建的信息：<reference internal="True" refuri="../export/android_gradle_build#doc-android-gradle-build"><inline classes="std std-ref">Android 的 Gradle 构建</inline></reference>。</paragraph>
        </section>
        <section ids="installing-the-vendors-plugin" names="installing\ the\ vendors\ plugin">
            <title>Installing the vendors plugin</title>
            <warning>
                <paragraph>在 Godot 4.2 中，Android 插件的结构进行了重构，加载器插件被重命名为供应商插件——因为它现在不仅仅包括加载器了。如果你安装旧版本加载器插件，需要将其从 <title_reference>android/plugins</title_reference> 文件夹中删除。</paragraph>
            </warning>
            <paragraph>The vendors plugin can be downloaded from the asset library, search for "OpenXR vendors" and install the plugin:</paragraph>
            <image candidates="{'*': 'tutorials/xr/img/openxr_loader_asset_lib.webp'}" uri="tutorials/xr/img/openxr_loader_asset_lib.webp"></image>
            <paragraph>You will find the installed files inside the <strong>addons</strong> folder.</paragraph>
            <paragraph>Alternatively you can manually install the vendors plugin by downloading the v2.x version of the plugin <reference name="from the release page here" refuri="https://github.com/GodotVR/godot_openxr_vendors/releases">from the release page here</reference>.</paragraph>
            <paragraph>你需要将压缩文件中的 <title_reference>assets/addons/godotopenxrvendors</title_reference> 文件夹复制到你的项目的 <title_reference>addons</title_reference> 文件夹中。</paragraph>
            <paragraph>你可以在 <reference name="这里" refuri="https://github.com/GodotVR/godot_openxr_vendors">这里</reference> 找到 vendors 插件的主仓库。</paragraph>
        </section>
        <section ids="enabling-the-vendors-plugin" names="enabling\ the\ vendors\ plugin">
            <title>Enabling the vendors plugin</title>
            <paragraph>在导出设置可访问之前，需要启用供应商插件。打开 <strong>Project</strong> 并选择 <strong>Project Settings...</strong> 。转到 <strong>Plugins</strong> 选项卡。启用 <strong>GodotOpenXRVendors</strong> 插件。</paragraph>
            <image candidates="{'*': 'tutorials/xr/img/xr_enable_vendors_plugin.webp'}" uri="tutorials/xr/img/xr_enable_vendors_plugin.webp"></image>
            <note>
                <paragraph>This is no longer required from vendors plugin 2.0.3 onwards as it now uses GDExtension.
                    The plugin will not be shown in this list.
                    You can verify it is installed correctly by checking if the export presets contain
                    the entries described below.</paragraph>
            </note>
        </section>
        <section ids="creating-the-export-presets" names="creating\ the\ export\ presets 创建导出预设">
            <title>创建导出预设</title>
            <paragraph>不同的设备有不同的加载器，因此你需要为每个设备分别准备导出预设。</paragraph>
            <paragraph>打开 <strong>Project</strong> 并选择 <strong>Export...</strong> 。点击 <strong>Add...</strong> 并选择 <strong>Android</strong> 。接下来，将导出预设的名称更改为你正在设置的设备的名称，比如 <strong>Meta Quest</strong> 。启用 <strong>Use Gradle Build</strong> 。如果你想使用一键部署（如下所述），记得启用 <strong>Runnable</strong> 。</paragraph>
            <paragraph>If the vendors plugins were installed correctly you should find entries for the different headsets, select the entry for meta:</paragraph>
            <image candidates="{'*': 'tutorials/xr/img/android_meta_quest.webp'}" uri="tutorials/xr/img/android_meta_quest.webp"></image>
            <paragraph>同时将 <strong>XR Mode</strong> 改为 <strong>OpenXR</strong> 。</paragraph>
            <paragraph>滚动到列表底部，你会发现额外的 XR 功能部分，目前只有 <strong>Meta XR Features</strong> 可用。此处的手部追踪和透视设置目前仅适用于 Meta Quest，如果你希望使用这些功能，需要选择适当的设置。</paragraph>
            <image candidates="{'*': 'tutorials/xr/img/xr_export_features.webp'}" uri="tutorials/xr/img/xr_export_features.webp"></image>
            <paragraph>现在，你可以为其他设备重复相同的过程。</paragraph>
            <note>
                <paragraph>Meta Quest、Pico 和 Lynx R1 头戴设备各有独立的加载器。</paragraph>
                <paragraph>除了以上三个，第四个选项是官方 Khronos 加载器 —— 目前，这个加载器已经在 Magic Leap 2 和独立的 HTC 头戴设备上进行了测试，在可预见的未来里，会有越来越多的头显设备会适配该加载器。</paragraph>
            </note>
            <warning>
                <paragraph>虽然 Vulkan 渲染器针对移动设备进行了优化，但目前我们仍在解决适配问题。就现在而言，强烈建议开发者在针对基于 Android 的 XR 设备时使用兼容性渲染器（OpenGL）。</paragraph>
            </warning>
        </section>
        <section ids="running-on-your-device-from-the-godot-editor" names="running\ on\ your\ device\ from\ the\ godot\ editor 通过\ godot\ 编辑器在设备上运行">
            <title>通过 Godot 编辑器在设备上运行</title>
            <paragraph>If you've setup your export settings as described above, and your headset is connected to your computer and correctly recognized, you can launch it directly from the Godot editor using <reference internal="True" refuri="../export/one-click_deploy#doc-one-click-deploy"><inline classes="std std-ref">一键部署</inline></reference>:</paragraph>
            <image candidates="{'*': 'tutorials/xr/img/android_one_click_deploy.webp'}" uri="tutorials/xr/img/android_one_click_deploy.webp"></image>
            <paragraph>正确识别某些平台上的某些设备，可能需要执行额外步骤，请务必查阅你头戴设备供应商的开发者文档。</paragraph>
            <paragraph>例如，对于 Meta Quest 2，你需要在头戴设备上启用开发者模式，并且如果你在 Windows 上开发，还需安装特定 ADB 驱动程序。更多详细信息，请参阅`官方 Meta Quest 开发者文档 &lt;<reference refuri="https://developer.oculus.com/documentation/native/android/mobile-device-setup/">https://developer.oculus.com/documentation/native/android/mobile-device-setup/</reference>&gt;`_。</paragraph>
            <paragraph>如果你在一键部署方面遇到了问题，可参考 <reference internal="True" refuri="../export/one-click_deploy#doc-one-click-deploy-troubleshooting"><inline classes="std std-ref">Troubleshooting section</inline></reference>。</paragraph>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="翻译状态" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

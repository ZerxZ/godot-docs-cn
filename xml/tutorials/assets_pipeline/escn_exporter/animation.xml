<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/tutorials/assets_pipeline/escn_exporter/animation.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <section ids="animation" names="animation 动画">
        <title>动画</title>
        <definition_list>
            <definition_list_item>
                <term>支持的动画：</term>
                <definition>
                    <bullet_list bullet="-">
                        <list_item>
                            <paragraph>所有类型对象的变换动画</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>姿势骨骼的变换动画</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>形状键动画</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>灯光动画</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph>摄像机动画</paragraph>
                        </list_item>
                    </bullet_list>
                </definition>
            </definition_list_item>
        </definition_list>
        <section ids="multiple-actions-for-single-object" names="multiple\ actions\ for\ single\ object 单个对象的多个动作">
            <title>单个对象的多个动作</title>
            <paragraph>在大多数游戏中，一个对象会有几个动画来切换。这个插件支持将多个动作同时导出到单个 AnimationPlayer 中，使切换动作变得很容易。</paragraph>
            <paragraph>此工作流程使用 Blender 的 nla_track。以下是如何使用此功能的简要指南：</paragraph>
            <paragraph><strong>1. 暂存活动动作</strong></paragraph>
            <paragraph>新创建的动作始终是绑定到对象的活动动作. 有几种方法可以在NLA轨道上放置活动动作, 一种当然是在 <literal>NLA编辑器</literal> 中</paragraph>
            <image candidates="{'*': 'tutorials/assets_pipeline/escn_exporter/img/nla_editor.jpg'}" uri="tutorials/assets_pipeline/escn_exporter/img/nla_editor.jpg"></image>
            <image candidates="{'*': 'tutorials/assets_pipeline/escn_exporter/img/nla_pushdown.jpg'}" uri="tutorials/assets_pipeline/escn_exporter/img/nla_pushdown.jpg"></image>
            <paragraph>或者可以将动作暂存在 <literal>动画摄影表</literal> 中</paragraph>
            <image candidates="{'*': 'tutorials/assets_pipeline/escn_exporter/img/dope_sheet.jpg'}" uri="tutorials/assets_pipeline/escn_exporter/img/dope_sheet.jpg"></image>
            <image candidates="{'*': 'tutorials/assets_pipeline/escn_exporter/img/stash_action.jpg'}" uri="tutorials/assets_pipeline/escn_exporter/img/stash_action.jpg"></image>
            <paragraph><strong>2. 检查NLA轨道的静默状态</strong></paragraph>
            <paragraph>NLA 轨道可以为``静默``或``取消静默``，导出工具会将所有 <problematic ids="id2" refid="id1">``</problematic>静默``的 NLA 轨道导出为一个单独的动作，但会混合所有``取消静默``的 NLA 轨道到输出的每个动作（包括活动动作）中。</paragraph>
            <image candidates="{'*': 'tutorials/assets_pipeline/escn_exporter/img/nla_strip.jpg'}" uri="tutorials/assets_pipeline/escn_exporter/img/nla_strip.jpg"></image>
            <paragraph><strong>3. 导出场景</strong></paragraph>
            <paragraph>确保开启 <literal>导出暂存动作</literal> 选项.</paragraph>
            <image candidates="{'*': 'tutorials/assets_pipeline/escn_exporter/img/stash_action_option.jpg'}" uri="tutorials/assets_pipeline/escn_exporter/img/stash_action_option.jpg"></image>
            <paragraph>所有暂存的动作，以及活动动作，都将导出到一个 AnimationPlayer 中。</paragraph>
            <image candidates="{'*': 'tutorials/assets_pipeline/escn_exporter/img/in_godot.jpg'}" uri="tutorials/assets_pipeline/escn_exporter/img/in_godot.jpg"></image>
        </section>
        <section ids="constraints" names="constraints 约束">
            <title>约束</title>
            <paragraph>有时使用对象约束构建复杂动画, 通常的示例是反向运动学. 插件会自动检查对象是否有某些约束；如果有, 则所有约束都被烘焙到对象具有的每个动作中, 然后导出.</paragraph>
        </section>
        <section ids="animation-mode" names="animation\ mode 动画模式">
            <title>动画模式</title>
            <paragraph>Godot and Blender have different structure to store animation data.
                In Godot animation data is stored in an AnimationPlayer node, instead
                of in each animated node. In order to fix this inconsistency and still
                make the animation play versatile, this add-on has three animation exporting
                modes.</paragraph>
            <paragraph><strong>"动画作为动作" 模式</strong></paragraph>
            <paragraph>将所有动画视为对象动作，因此在导出的场景中，每个对象都有自己的 AnimationPlayer 来存储其动作。</paragraph>
            <paragraph><strong>"场景动画" 模式</strong></paragraph>
            <paragraph>如果你希望动画生成与在 Blender 的时间轴上播放相同的结果，这就是你想要的。在此模式下，场景中的所有动画都只放置在场景根中的一个 AnimationPlayer 中。</paragraph>
            <paragraph><strong>"动画作为压缩动作" 模式</strong></paragraph>
            <paragraph>这种模式与“动画即动作”模式的行为非常相似，但它可以生成较少的 AnimationPlayer；父子关系的对象将共享他们的 AnimationPlayer。当你有多个装备，并且每个 Skeleton 和 Mesh 都有动作时，这种模式就很有用；那么一个装备就只有一个 AnimationPlayer。</paragraph>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="翻译状态" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

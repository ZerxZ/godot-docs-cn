<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/tutorials/assets_pipeline/retargeting_3d_skeletons.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <target refid="doc-retargeting-3d-skeletons"></target>
    <section ids="retargeting-3d-skeletons doc-retargeting-3d-skeletons" names="retargeting\ 3d\ skeletons 3d\ 骨架重定向 doc_retargeting_3d_skeletons">
        <title>3D 骨架重定向</title>
        <section ids="to-share-animations-among-multiple-skeletons" names="to\ share\ animations\ among\ multiple\ skeletons 在多个骨架之间共享动画">
            <title>在多个骨架之间共享动画</title>
            <paragraph>Godot 具有 Position/Rotation/Scale 3D 轨道（本文称为“Transform”轨道），其中包含用于骨架骨骼动画的节点路径。这意味着你不能仅通过使用相同的骨骼名称在多个骨架之间共享动画。</paragraph>
            <paragraph>Godot 允许每个骨骼之间存在父子关系，并可以具有旋转、缩放和位置属性，这意味着即使共享相同名称的骨骼也可以具有不同的 Transform 值。</paragraph>
            <paragraph>骨骼将默认姿势所需的变换值存储为 Bone Rest（骨骼放松）。如果骨骼姿势等于 Bone Rest，则表示骨架处于默认姿势。</paragraph>
            <note>
                <paragraph>Godot 3.x 和 Godot 4.0+ 具有不同的骨骼姿势行为。在 Godot 3.x 中，骨骼姿势是相对于 Bone Rest 而言的，但在 Godot 4.0+ 中，骨骼姿势包括 Bone Rest。具体请参阅这篇 <reference name="文章" refuri="https://godotengine.org/article/animation-data-redesign-40">文章</reference> 。</paragraph>
            </note>
            <paragraph>骨骼模型具有不同的 Bone Rest，具体取决于导出的环境。例如，Blender 输出的 glTF 模型的骨骼将“编辑骨骼方向”作为 Bone Rest 旋转。然而，一些骨骼模型没有任何 Bone Rest 旋转，比如 Maya 输出的 glTF 模型。</paragraph>
            <paragraph>要在 Godot 中共享动画，需要匹配 Bone Rest 和骨骼名称，以在某些情况下删除不需要的轨道。在 Godot 4.0+ 中，可以使用场景导入器来实现。</paragraph>
        </section>
        <section ids="options-for-retargeting" names="options\ for\ retargeting 重定向选项">
            <title>重定向选项</title>
            <section ids="bone-map" names="bone\ map 骨骼映射">
                <title>骨骼映射</title>
                <paragraph>当在高级场景导入菜单中选择 Skeleton3D 节点时，右侧将出现一个菜单，其中包含“重定向”部分。重定向部分中有一个属性 <literal>bone_map</literal> 。</paragraph>
                <image candidates="{'*': 'tutorials/assets_pipeline/img/retargeting1.webp'}" uri="tutorials/assets_pipeline/img/retargeting1.webp"></image>
                <paragraph>选择 Skeleton 节点后，首先设置一个新的 <reference internal="True" refuri="../../classes/class_bonemap#class-bonemap"><inline classes="std std-ref">BoneMap</inline></reference> 和 <reference internal="True" refuri="../../classes/class_skeletonprofile#class-skeletonprofile"><inline classes="std std-ref">SkeletonProfile</inline></reference>。 Godot 有一个用于人形模型的预设，名为 <reference internal="True" refuri="../../classes/class_skeletonprofilehumanoid#class-skeletonprofilehumanoid"><inline classes="std std-ref">SkeletonProfileHumanoid</inline></reference>。本教程假设你使用的就是 <reference internal="True" refuri="../../classes/class_skeletonprofilehumanoid#class-skeletonprofilehumanoid"><inline classes="std std-ref">SkeletonProfileHumanoid</inline></reference>。</paragraph>
                <note>
                    <paragraph>如果你需要一只野兽或者其他生物的模型的配置文件，可以从 SkeletonEditor 导出一个 <reference internal="True" refuri="../../classes/class_skeletonprofile#class-skeletonprofile"><inline classes="std std-ref">SkeletonProfile</inline></reference>，其中包含从 Skeleton 转换出的一些信息。</paragraph>
                </note>
                <paragraph>使用 <reference internal="True" refuri="../../classes/class_skeletonprofilehumanoid#class-skeletonprofilehumanoid"><inline classes="std std-ref">SkeletonProfileHumanoid</inline></reference> 时，将在设置 <reference internal="True" refuri="../../classes/class_skeletonprofile#class-skeletonprofile"><inline classes="std std-ref">SkeletonProfile</inline></reference> 时执行自动映射。如果自动映射的效果不佳，你也可以手动映射骨骼。</paragraph>
                <image candidates="{'*': 'tutorials/assets_pipeline/img/retargeting2.webp'}" uri="tutorials/assets_pipeline/img/retargeting2.webp"></image>
                <paragraph>任何缺失、重复或不正确的父子关系映射，都将由洋红色/红色按钮指示（取决于编辑器设置）。它不会阻止导入过程，但会警告动画可能无法正确共享。</paragraph>
                <note>
                    <paragraph>自动映射使用骨骼名称进行模式匹配。所以建议骨骼都使用常见的英文名称。</paragraph>
                </note>
                <paragraph>设置 <literal>bone_map</literal> 后，以下部分中提供了多个选项。</paragraph>
                <image candidates="{'*': 'tutorials/assets_pipeline/img/retargeting3.webp'}" uri="tutorials/assets_pipeline/img/retargeting3.webp"></image>
            </section>
            <section ids="remove-tracks" names="remove\ tracks 移除轨道">
                <title>移除轨道</title>
                <paragraph>当你要将资源导入为要共享的 <reference internal="True" refuri="../../classes/class_animationlibrary#class-animationlibrary"><inline classes="std std-ref">AnimationLibrary</inline></reference> 时，建议启用这些选项。然而，如果将资源导入为场景，则在某些情况下应禁用这些选项。例如，如果导入带有动画配件的角色，这些选项可能会导致配件没有动画。</paragraph>
                <section ids="except-bone-transform" names="except\ bone\ transform 额外的变换矩阵">
                    <title>额外的变换矩阵</title>
                    <paragraph>从动画中删除除骨骼变换轨道之外的所有轨道。</paragraph>
                </section>
                <section ids="unimportant-positions" names="unimportant\ positions 非重要位置">
                    <title>非重要位置</title>
                    <paragraph>从动画中删除除了在 <reference internal="True" refuri="../../classes/class_skeletonprofile#class-skeletonprofile"><inline classes="std std-ref">SkeletonProfile</inline></reference> 中定义过的 <literal>root_bone</literal> 和 <literal>scale_base_bone</literal> 以外的 Position 轨道。在 <reference internal="True" refuri="../../classes/class_skeletonprofilehumanoid#class-skeletonprofilehumanoid"><inline classes="std std-ref">SkeletonProfileHumanoid</inline></reference> 中，这意味着要删除除 <literal>Root</literal> 和 <literal>Hips</literal> 之外的 Position 轨道。自 Godot 4.0+ 起，动画在变换值中包含 Bone Rest。如果禁用此选项，动画可能会意外地改变身体形状。</paragraph>
                </section>
                <section ids="unmapped-bones" names="unmapped\ bones 未映射骨骼">
                    <title>未映射骨骼</title>
                    <paragraph>从动画中删除未映射的骨骼变换轨道。</paragraph>
                </section>
            </section>
            <section ids="bone-renamer" names="bone\ renamer 骨骼命名器">
                <title>骨骼命名器</title>
                <section ids="rename-bones" names="rename\ bones 重命名骨骼">
                    <title>重命名骨骼</title>
                    <paragraph>重命名映射的骨骼。</paragraph>
                </section>
                <section ids="unique-node" names="unique\ node 唯一节点">
                    <title>唯一节点</title>
                    <paragraph>使 Skeleton 成为一个唯一的节点，其名称在 <literal>skeleton_name</literal> 中指定。这会使得动画轨道路径能够独立于场景层次结构而统一。</paragraph>
                </section>
            </section>
            <section ids="rest-fixer" names="rest\ fixer 放松修复器">
                <title>放松修复器</title>
                <paragraph><reference internal="True" refuri="../../classes/class_skeletonprofilehumanoid#class-skeletonprofilehumanoid"><inline classes="std std-ref">SkeletonProfileHumanoid</inline></reference> 中定义参考姿势有以下规则：</paragraph>
                <bullet_list bullet="*">
                    <list_item>
                        <paragraph>人形物体呈 T 形姿势</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>人形物体在右手 Y-UP 坐标系中朝向 +Z</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>人形物体不应该有一个Transform作为节点</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>将 +Y 轴从父关节指向子关节</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>+X 旋转使关节像肌肉收缩一样弯曲</paragraph>
                    </list_item>
                </bullet_list>
                <paragraph>这些规则是混合动画和反向动力学（IK）的便捷定义。如果你的模型与此定义不符，你需要用这些选项来进行修正。</paragraph>
                <section ids="apply-node-transform" names="apply\ node\ transform 应用节点变换">
                    <title>应用节点变换</title>
                    <paragraph>如果没有正确导出资产进行共享，导入的骨骼可能会将Transform作为节点。例如，从 Blender 导出的但没有执行 "应用变换"的glTF就是这样的情况。看起来模型与定义相符，但内部Tranforms与定义不同。此选项可通过在导入时应用变换来修复此类模型。</paragraph>
                    <note>
                        <paragraph>如果导入的场景包含骷髅以外的其他对象，该选项可能会产生负面影响。</paragraph>
                    </note>
                </section>
                <section ids="normalize-position-tracks" names="normalize\ position\ tracks 归一化位置轨道">
                    <title>归一化位置轨道</title>
                    <paragraph>位置轨道主要用于模型的移动，但在不同高度的模型之间共享移动动画可能会由于步长的差异而导致滑倒现象。该选项会根据 <literal>scale_base_bone</literal> 高度标准化位置轨道。 <literal>scale_base_bone</literal> 高度作为 <literal>motion_scale</literal> 存储在骨骼中，并且标准化的位置轨道值在播放时将乘以该值。如果禁用此选项，则位置轨道不会被标准化，骨架的 <literal>motion_scale</literal> 始终以 <literal>1.0</literal> 的形式导入。</paragraph>
                    <paragraph>对于 <reference internal="True" refuri="../../classes/class_skeletonprofilehumanoid#class-skeletonprofilehumanoid"><inline classes="std std-ref">SkeletonProfileHumanoid</inline></reference>，<literal>scale_base_bone</literal> 是“臀部”，因此臀部的高度用作 <literal>motion_scale</literal>。</paragraph>
                </section>
                <section ids="overwrite-axis" names="overwrite\ axis 覆盖轴">
                    <title>覆盖轴</title>
                    <paragraph>通过覆盖模型的 Bone Rest 来统一模型的 Bone Rest，以匹配 <reference internal="True" refuri="../../classes/class_skeletonprofile#class-skeletonprofile"><inline classes="std std-ref">SkeletonProfile</inline></reference> 中定义的参考姿势。</paragraph>
                    <note>
                        <paragraph>该选项是 Godot 4.0+ 中共享动画的最重要的选项，但请注意， <strong>如果外部设置的原始 Bone Rest 很重要</strong> ，则此选项可能会产生可怕的结果。如果你想在保留原始 Bone Rest 的情况下共享动画，请考虑使用 <reference name="实时重定向模块" refuri="https://github.com/TokageItLab/realtime_retarget">实时重定向模块</reference> 。</paragraph>
                    </note>
                </section>
                <section ids="fix-silhouette" names="fix\ silhouette 修复剪影">
                    <title>修复剪影</title>
                    <paragraph>尝试让模型的剪影与 <reference internal="True" refuri="../../classes/class_skeletonprofile#class-skeletonprofile"><inline classes="std std-ref">SkeletonProfile</inline></reference> 中定义的参考姿势相匹配，例如 T-Pose。该功能无法修复差异太大的剪影，并且可能不适用于修复骨骼滚动。</paragraph>
                    <paragraph>使用 <reference internal="True" refuri="../../classes/class_skeletonprofilehumanoid#class-skeletonprofilehumanoid"><inline classes="std std-ref">SkeletonProfileHumanoid</inline></reference> 时，不需要为 T-Pose 模型启用此选项，但应为 A-Pose 模型启用。然而，在这种情况下，根据模型的脚跟高度，固定脚的结果有可能会很糟糕，因此，可能需要添加你并不希望在 <literal>filter</literal> 数组中固定的 <reference internal="True" refuri="../../classes/class_skeletonprofile#class-skeletonprofile"><inline classes="std std-ref">SkeletonProfile</inline></reference> 骨骼名称，如下例所示。</paragraph>
                    <image candidates="{'*': 'tutorials/assets_pipeline/img/retargeting4.webp'}" uri="tutorials/assets_pipeline/img/retargeting4.webp"></image>
                    <paragraph>此外，对于膝盖或脚弯曲的模型，可能需要调整 <literal>scale_base_bone</literal> 高度。为此可以使用 <literal>base_height_ adjustment</literal> 选项。</paragraph>
                    <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="翻译状态" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
                </section>
            </section>
        </section>
    </section>
</document>

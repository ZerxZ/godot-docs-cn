<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/tutorials/assets_pipeline/import_process.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <target refid="doc-import-process"></target>
    <section ids="import-process doc-import-process" names="import\ process 导入流程 doc_import_process">
        <title>导入流程</title>
        <section ids="importing-assets-in-godot" names="importing\ assets\ in\ godot 在\ godot\ 中导入资产">
            <title>在 Godot 中导入资产</title>
            <paragraph>要在 Godot 中导入资产，请将资产（图像文件、场景、音频文件、字体等）直接放置在项目文件夹中。有两种方法可以实现：</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><strong>任何文件类型：</strong>使用操作系统的文件管理器手动复制文件。</paragraph>
                </list_item>
                <list_item>
                    <paragraph><strong>Godot 能够导入的文件类型：</strong>将文件从操作系统的文件管理器拖放至编辑器的“文件系统”面板。只适用于<emphasis>资源</emphasis>文件类型（即 Godot 能够导入的文件类型）。</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>Godot 内部会自动导入这些文件，将导入后的资源存放在隐藏的 <literal>res://.godot/imported/</literal> 文件夹中。</paragraph>
            <paragraph>这样一来，在代码中尝试访问导入后的资产就需要使用<reference internal="True" refuri="../../classes/class_resourceloader#class-resourceloader"><inline classes="std std-ref">资源加载器</inline></reference>，因为会自动考虑内部文件的存储位置。如果用 <reference internal="True" refuri="../../classes/class_fileaccess#class-fileaccess"><inline classes="std std-ref">FileAccess</inline></reference> 尝试访问导入后的资产，虽然在编辑器中是可行的，但是<strong>在导出后的项目中会失败</strong>。</paragraph>
            <paragraph>然而<reference internal="True" refuri="../../classes/class_resourceloader#class-resourceloader"><inline classes="std std-ref">资源加载器</inline></reference>无法访问未经导入的文件，只有 <reference internal="True" refuri="../../classes/class_fileaccess#class-fileaccess"><inline classes="std std-ref">FileAccess</inline></reference> 类可以。</paragraph>
        </section>
        <section ids="changing-import-parameters" names="changing\ import\ parameters 更改导入参数">
            <title>更改导入参数</title>
            <note>
                <paragraph><emphasis>非原生</emphasis> Godot 资源类型才有导入参数。也就是说，Godot 自己的场景和资源文件格式（<literal>.tscn</literal>、<literal>.scn</literal>、<literal>.tres</literal>、<literal>.res</literal>）在“导入”面板中没有选项可用。</paragraph>
            </note>
            <paragraph>要在 Godot 中更改资产的导入参数，请在“文件系统”面板中选中相关的资源：</paragraph>
            <image candidates="{'*': 'tutorials/assets_pipeline/img/import_process_example.webp'}" uri="tutorials/assets_pipeline/img/import_process_example.webp"></image>
            <paragraph>参数调整完毕后，请单击<strong>重新导入</strong>。小心：如果在单击<strong>重新导入</strong>之前在“文件系统”面板中选中其他文件，那么你做出的更改就会被丢弃。单击<strong>重新导入</strong>之后，选中的参数只会对该资产生效，后续重新导入时也会生效。</paragraph>
            <paragraph>同时更改多个资产的导入参数也是可能的. 只需在资源停靠面板中一起选择所有这些资产, 当重新导入时, 所暴露的参数将应用于它们.</paragraph>
        </section>
        <section ids="reimporting-multiple-assets" names="reimporting\ multiple\ assets 重新导入多个资产">
            <title>重新导入多个资产</title>
            <paragraph>在进行项目时，你可能会发现有数个资产都需要修改同一个参数的情况，例如启用 mipmap，但你只想改动特定的参数。为此，请在文件系统中选择你要重新导入的资产。现在导入选项卡的每个导入参数的左边都会出现一个复选框。</paragraph>
            <image candidates="{'*': 'tutorials/assets_pipeline/img/reimport_multiple.png'}" uri="tutorials/assets_pipeline/img/reimport_multiple.png"></image>
            <paragraph>勾选导入资产中你想更改的参数，然后照常修改参数。最后点击“重新导入”按钮。这样就重新导入了只有选定部分参数被修改过的资产。</paragraph>
        </section>
        <section ids="automatic-reimport" names="automatic\ reimport 自动重新导入">
            <title>自动重新导入</title>
            <paragraph>当源资产的 MD5 校验发生变化时,Godot 将执行自动重新导入, 应用为该特定资产配置的预设.</paragraph>
        </section>
        <section ids="files-generated" names="files\ generated 生成的文件">
            <title>生成的文件</title>
            <paragraph>导入时会在源文件的旁边生成额外的 <literal>&lt;资产&gt;.import</literal> 文件，包含的是导入配置。</paragraph>
            <paragraph><strong>请务必将这些文件提交进版本控制系统</strong>，因为这些文件包含了重要的元数据。</paragraph>
            <literal_block force="False" language="gdscript" linenos="False" xml:space="preserve">$ ls
example.png
example.png.import
project.godot</literal_block>
            <paragraph>此外，额外的资产会被放在隐藏的 <literal>res://.godot/imported/</literal> 文件夹中：</paragraph>
            <literal_block force="False" language="gdscript" linenos="False" xml:space="preserve">$ ls .godot/imported
example.png-218a8f2b3041327d8a5756f3a245f83b.ctex
example.png-218a8f2b3041327d8a5756f3a245f83b.md5</literal_block>
            <paragraph>如果此文件夹中的任何文件（或整个文件夹）被删除，则会自动重新导入资产。因此，不建议将 <literal>.godot/</literal> 文件夹提交给版本控制系统。提交这个文件夹虽然能够缩短在另一台计算机上检出后重新导入的时间，但是需要相当多的空间和带宽。</paragraph>
            <paragraph>在项目创建时生成的默认版本控制元数据将自动忽略 <literal>.godot/</literal> 文件夹。</paragraph>
        </section>
        <section ids="changing-import-resource-type" names="changing\ import\ resource\ type 更改导入资源类型">
            <title>更改导入资源类型</title>
            <paragraph>一些源资产可以作为不同类型的资源被导入。为此，选择所需资源的相关类型，然后点击 <strong>重新导入</strong> 即可：</paragraph>
            <image candidates="{'*': 'tutorials/assets_pipeline/img/import_process_changing_import_type.webp'}" uri="tutorials/assets_pipeline/img/import_process_changing_import_type.webp"></image>
        </section>
        <section ids="changing-default-import-parameters" names="changing\ default\ import\ parameters 更改默认导入参数">
            <title>更改默认导入参数</title>
            <paragraph>不同类型的游戏可能需要不同的默认值。通过使用 <strong>预设...</strong> 菜单可以将导入选项更改为预定义的选项集。除了某些提供预设的资产类型外，还可以保存和清除默认设置：</paragraph>
            <image candidates="{'*': 'tutorials/assets_pipeline/img/import_process_change_preset.webp'}" uri="tutorials/assets_pipeline/img/import_process_change_preset.webp"></image>
            <paragraph>可以使用“项目设置”对话框的 <strong>默认导入设置</strong> 选项卡，在项目范围内更改给定资源类型的默认导入参数：</paragraph>
            <image candidates="{'*': 'tutorials/assets_pipeline/img/import_process_import_defaults.webp'}" uri="tutorials/assets_pipeline/img/import_process_import_defaults.webp"></image>
        </section>
        <section ids="further-reading" names="further\ reading 扩展阅读">
            <title>扩展阅读</title>
            <paragraph>这个工作流程需要一些时间来适应，但它会强制使用更正确的方式来处理资源。</paragraph>
            <paragraph>可以导入的资产类型有很多。如果想要了解用法，请继续阅读：</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference internal="True" refuri="importing_images#doc-importing-images"><inline classes="std std-ref">导入图像</inline></reference></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="importing_audio_samples#doc-importing-audio-samples"><inline classes="std std-ref">导入音频采样</inline></reference></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="importing_3d_scenes/index#doc-importing-3d-scenes"><inline classes="std std-ref">导入 3D 场景</inline></reference></paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="importing_translations#doc-importing-translations"><inline classes="std std-ref">导入翻译</inline></reference></paragraph>
                </list_item>
            </bullet_list>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="翻译状态" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

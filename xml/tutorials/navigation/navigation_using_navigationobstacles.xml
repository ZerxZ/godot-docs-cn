<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/tutorials/navigation/navigation_using_navigationobstacles.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <target refid="doc-navigation-using-navigationobstacles"></target>
    <section ids="using-navigationobstacles doc-navigation-using-navigationobstacles" names="using\ navigationobstacles 使用\ navigationobstacle doc_navigation_using_navigationobstacles">
        <title>使用 NavigationObstacle</title>
        <paragraph>2D 和 3D 版本的 NavigationObstacle 节点分别为 <reference internal="True" refuri="../../classes/class_navigationobstacle2d#class-navigationobstacle2d"><inline classes="std std-ref">NavigationObstacle2D</inline></reference> 和 <reference internal="True" refuri="../../classes/class_navigationobstacle3d#class-navigationobstacle3d"><inline classes="std std-ref">NavigationObstacle3D</inline></reference> 。</paragraph>
        <paragraph>Navigation obstacles are dual purpose in that they can affect both the navigation mesh baking, and the agent avoidance.</paragraph>
        <bullet_list bullet="-">
            <list_item>
                <paragraph>With <literal>affect_navigation_mesh</literal> enabled the obstacle will affect navigation mesh when baked.</paragraph>
            </list_item>
            <list_item>
                <paragraph>With <literal>avoidance_enabled</literal> the obstacle will affect avoidance agents.</paragraph>
            </list_item>
        </bullet_list>
        <tip>
            <paragraph>Avoidance is enabled by default. If the obstacle is not used for avoidance disable <literal>enabled_avoidance</literal> to save performance.</paragraph>
        </tip>
        <section ids="obstacles-and-navigation-mesh" names="obstacles\ and\ navigation\ mesh">
            <title>Obstacles and navigation mesh</title>
            <figure align="center" ids="id1">
                <image alt="Navigation obstacles affecting navigation mesh baking" candidates="{'*': 'tutorials/navigation/img/nav_mesh_obstacles.webp'}" uri="tutorials/navigation/img/nav_mesh_obstacles.webp"></image>
                <caption>Navigation obstacles affecting navigation mesh baking.</caption>
            </figure>
            <paragraph>For navigation mesh baking obstacles can be used to discard parts of all other source geometry inside the obstacle shape.</paragraph>
            <paragraph>This can be used to stop navigation meshes being baked in unwanted places,
                e.g. inside "solid" geometry like thick walls or on top of other geometry that should not be included for gameplay like roofs.</paragraph>
            <figure align="center" ids="id2">
                <image alt="Navigation obstacles discard of unwanted navigation mesh" candidates="{'*': 'tutorials/navigation/img/nav_mesh_obstacles_discard.webp'}" uri="tutorials/navigation/img/nav_mesh_obstacles_discard.webp"></image>
                <caption>Navigation obstacles discard of unwanted navigation mesh.</caption>
            </figure>
            <paragraph>An obstacle does not add geometry in the baking process, it only removes geometry.
                It does so by nullifying all the (voxel) cells with rasterized source geometry that are within the obstacle shape.
                As such its effect and shape detail is limited to the cell resolution used by the baking process.</paragraph>
            <paragraph>For more details on the navigation mesh baking see <reference internal="True" refuri="navigation_using_navigationmeshes#doc-navigation-using-navigationmeshes"><inline classes="std std-ref">使用导航网格</inline></reference>.</paragraph>
            <image candidates="{'*': 'tutorials/navigation/img/nav_mesh_obstacles_properties.webp'}" uri="tutorials/navigation/img/nav_mesh_obstacles_properties.webp"></image>
            <paragraph>The property <literal>affect_navigation_mesh</literal> makes the obstacle contribute to the navigation mesh baking.
                It will be parsed or unparsed like all other node objects in a navigation mesh baking process.</paragraph>
            <paragraph>The <literal>carve_navigation_mesh</literal> property makes the shape unaffected by offsets of the baking,
                e.g. the offset added by the navigation mesh <literal>agent_radius</literal>.
                It will basically act as a stencil and cut into the already offset navigation mesh surface.
                It will still be affected by further postprocessing of the baking process like edge simplification.</paragraph>
            <paragraph>The obstacle shape and placement is defined with the <literal>height</literal> and <literal>vertices</literal> properties, and the <literal>global_position</literal> of the obstacle.
                The y-axis value of any Vector3 used for the vertices is ignored as the obstacle is projected on a flat horizontal plane.</paragraph>
            <paragraph>When baking navigation meshes in scripts obstacles can be added procedurally as a projected obstruction.
                Obstacles are not involved in the source geometry parsing so adding them just before baking is enough.</paragraph>
            <container classes="sphinx-tabs" type="tab-element">
                <div aria-label="Tabbed content" role="tablist">
                    <button aria-controls="panel-0-MkQgR0RTY3JpcHQ=" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-0-MkQgR0RTY3JpcHQ=" name="MkQgR0RTY3JpcHQ=" role="tab" tabindex="0">2D GDScript</button>
                    <button aria-controls="panel-0-M0QgR0RTY3JpcHQ=" aria-selected="false" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-0-M0QgR0RTY3JpcHQ=" name="M0QgR0RTY3JpcHQ=" role="tab" tabindex="-1">3D GDScript</button>
                </div>
                <div aria-labelledby="tab-0-MkQgR0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-0-MkQgR0RTY3JpcHQ=" name="MkQgR0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve">var obstacle_outline = PackedVector2Array([
    Vector2(-50, -50),
    Vector2(50, -50),
    Vector2(50, 50),
    Vector2(-50, 50)
])

var navigation_mesh = NavigationPolygon.new()
var source_geometry = NavigationMeshSourceGeometryData2D.new()

NavigationServer2D.parse_source_geometry_data(navigation_mesh, source_geometry, $MyTestRootNode)

var obstacle_carve: bool = true

source_geometry.add_projected_obstruction(obstacle_outline, obstacle_carve)

NavigationServer2D.bake_from_source_geometry_data(navigation_mesh, source_geometry)</literal_block>
                </div>
                <div aria-labelledby="tab-0-M0QgR0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" hidden="true" ids="panel-0-M0QgR0RTY3JpcHQ=" name="M0QgR0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve">var obstacle_outline = PackedVector3Array([
    Vector3(-5, 0, -5),
    Vector3(5, 0, -5),
    Vector3(5, 0, 5),
    Vector3(-5, 0, 5)
])

var navigation_mesh = NavigationMesh.new()
var source_geometry = NavigationMeshSourceGeometryData3D.new()

NavigationServer3D.parse_source_geometry_data(navigation_mesh, source_geometry, $MyTestRootNode)

var obstacle_elevation: float = $MyTestObstacleNode.global_position.y
var obstacle_height: float = 50.0
var obstacle_carve: bool = true

source_geometry.add_projected_obstruction(obstacle_outline, obstacle_elevation, obstacle_height, obstacle_carve)

NavigationServer3D.bake_from_source_geometry_data(navigation_mesh, source_geometry)</literal_block>
                </div>
            </container>
        </section>
        <section ids="obstacles-and-agent-avoidance" names="obstacles\ and\ agent\ avoidance">
            <title>Obstacles and agent avoidance</title>
            <paragraph>For avoidance navigation obstacles can be used either as static or dynamic obstacles to affect avoidance controlled agents.</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>当静态使用时，导览障碍会限制多边形定义区域外部或内部的回避控制代理。</paragraph>
                </list_item>
                <list_item>
                    <paragraph>当动态使用时，导览障碍会推开其周围半径范围内的回避控制代理。</paragraph>
                </list_item>
            </bullet_list>
            <section ids="static-avoidance-obstacles" names="static\ avoidance\ obstacles">
                <title>Static avoidance obstacles</title>
                <paragraph>An avoidance obstacle is considered static when its <literal>vertices</literal> property is populated with an outline array of positions to form a polygon.</paragraph>
                <figure align="center" ids="id3">
                    <image alt="Static obstacle drawn in the editor to block or contain navigation agents" candidates="{'*': 'tutorials/navigation/img/nav_static_obstacle_build.gif'}" uri="tutorials/navigation/img/nav_static_obstacle_build.gif"></image>
                    <caption>Static obstacle drawn in the editor to block or contain navigation agents.</caption>
                </figure>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>静态障碍物起着硬性作用——使代理无法跨越边界而回避，例如类似于物理碰撞，但用于回避。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>静态障碍物用一组轮廓 <literal>vertices</literal> （位置）定义其边界，在3D的情况下，用额外的 <literal>height</literal> 属性定义其边界。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>静态障碍物仅适用于使用2D回避模式的代理。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>如果代理人被推出或吸入，静态障碍物透过顶点的缠绕顺序来定义。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>Static obstacles can not change their position. They can only be warped to a new position and rebuilt from scratch.
                            Static obstacles as a result are ill-suited for usages where the position is changed every frame, as the constant rebuild has a high performance cost.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>代理无法预测扭曲到另一个位置的静态障碍物。如果静态障碍物扭曲到代理顶部，这就会产生代理被卡住的风险。</paragraph>
                    </list_item>
                </bullet_list>
                <paragraph>当在3D中使用2D回避时，Vector3顶点的y轴将被忽略。相反，障碍物的全局y轴位置用作海拔高度。代理将忽略3D中低于或高于其的静态障碍物。这是由障碍物和代理的全局y轴位置自动确定为海拔高度以及它们各自的高度属性。</paragraph>
            </section>
            <section ids="dynamic-avoidance-obstacles" names="dynamic\ avoidance\ obstacles">
                <title>Dynamic avoidance obstacles</title>
                <paragraph>An avoidance obstacle is considered dynamic when its <literal>radius</literal> property is greater than zero.</paragraph>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>对于启用了避障的代理而言，动态障碍物就是一个“请离我远点”的对象，类似于它们自己躲避其他代理的行为。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>动态障碍物使用 <literal>radius</literal> 半径来定义边界，2D 中是圆形，3D 中是球形。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>动态障碍物每一帧都可以改变位置，不会有额外的性能开销。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>动态障碍物设置速度后，其他代理就能够预测移动。</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>动态障碍物不适合用来将代理限制在拥挤、狭窄的空间中。</paragraph>
                    </list_item>
                </bullet_list>
                <paragraph>While both static and dynamic properties can be active at the same time on the same obstacle this is not recommended for performance.
                    Ideally when an obstacle is moving the static vertices are removed and instead the radius activated.
                    When the obstacle reaches the new final position it should gradually enlarge its radius to push all other agents away.
                    With enough created safe space around the obstacle it should add the static vertices again and remove the radius.
                    This helps avoid getting agents stuck in the suddenly appearing static obstacle when the rebuilt static boundary is finished.</paragraph>
                <paragraph>和代理类似，障碍物也能够使用 <literal>avoidance_layers</literal> 位掩码。自身的避障掩码中与之存在匹配位的代理都会躲避这个障碍物。</paragraph>
            </section>
        </section>
        <section ids="procedural-obstacles" names="procedural\ obstacles">
            <title>Procedural obstacles</title>
            <paragraph>New obstacles can be created in a script without a Node by using the NavigationServer directly.</paragraph>
            <paragraph>使用脚本创建的障碍物至少需要有一个 <literal>map</literal> 和一个 <literal>position</literal>。动态障碍物还需要 <literal>radius</literal>。静态障碍物还需要 <literal>vertices</literal> 属性。</paragraph>
            <container classes="sphinx-tabs" type="tab-element">
                <div aria-label="Tabbed content" role="tablist">
                    <button aria-controls="panel-1-MkQgR0RTY3JpcHQ=" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-1-MkQgR0RTY3JpcHQ=" name="MkQgR0RTY3JpcHQ=" role="tab" tabindex="0">2D GDScript</button>
                    <button aria-controls="panel-1-M0QgR0RTY3JpcHQ=" aria-selected="false" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-1-M0QgR0RTY3JpcHQ=" name="M0QgR0RTY3JpcHQ=" role="tab" tabindex="-1">3D GDScript</button>
                </div>
                <div aria-labelledby="tab-1-MkQgR0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-1-MkQgR0RTY3JpcHQ=" name="MkQgR0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve"># create a new "obstacle" and place it on the default navigation map.
var new_obstacle_rid: RID = NavigationServer2D.obstacle_create()
var default_map_rid: RID = get_world_2d().get_navigation_map()

NavigationServer2D.obstacle_set_map(new_obstacle_rid, default_map_rid)
NavigationServer2D.obstacle_set_position(new_obstacle_rid, global_position)

# Use obstacle dynamic by increasing radius above zero.
NavigationServer2D.obstacle_set_radius(new_obstacle_rid, 5.0)

# Use obstacle static by adding a square that pushes agents out.
var outline = PackedVector2Array([Vector2(-100, -100), Vector2(100, -100), Vector2(100, 100), Vector2(-100, 100)])
NavigationServer2D.obstacle_set_vertices(new_obstacle_rid, outline)

# Enable the obstacle.
NavigationServer2D.obstacle_set_avoidance_enabled(new_obstacle_rid, true)</literal_block>
                </div>
                <div aria-labelledby="tab-1-M0QgR0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" hidden="true" ids="panel-1-M0QgR0RTY3JpcHQ=" name="M0QgR0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve"># Create a new "obstacle" and place it on the default navigation map.
var new_obstacle_rid: RID = NavigationServer3D.obstacle_create()
var default_map_rid: RID = get_world_3d().get_navigation_map()

NavigationServer3D.obstacle_set_map(new_obstacle_rid, default_map_rid)
NavigationServer3D.obstacle_set_position(new_obstacle_rid, global_position)

# Use obstacle dynamic by increasing radius above zero.
NavigationServer3D.obstacle_set_radius(new_obstacle_rid, 0.5)

# Use obstacle static by adding a square that pushes agents out.
var outline = PackedVector3Array([Vector3(-5, 0, -5), Vector3(5, 0, -5), Vector3(5, 0, 5), Vector3(-5, 0, 5)])
NavigationServer3D.obstacle_set_vertices(new_obstacle_rid, outline)
# Set the obstacle height on the y-axis.
NavigationServer3D.obstacle_set_height(new_obstacle_rid, 1.0)

# Enable the obstacle.
NavigationServer3D.obstacle_set_avoidance_enabled(new_obstacle_rid, true)</literal_block>
                </div>
            </container>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="翻译状态" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/tutorials/navigation/navigation_using_navigationobstacles.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <target refid="doc-navigation-using-navigationobstacles"></target>
    <section ids="using-navigationobstacles doc-navigation-using-navigationobstacles" names="using\ navigationobstacles 使用\ navigationobstacle doc_navigation_using_navigationobstacles">
        <title>使用 NavigationObstacle</title>
        <paragraph>NavigationObstacle 即导航障碍物，可以用作静态或动态障碍物，影响由避障系统控制的代理。</paragraph>
        <bullet_list bullet="-">
            <list_item>
                <paragraph>When used statically NavigationObstacles constrain avoidance controlled agents outside or inside a polygon defined area.</paragraph>
            </list_item>
            <list_item>
                <paragraph>When used dynamically NavigationObstacles push away avoidance controlled agents in a radius around them.</paragraph>
            </list_item>
        </bullet_list>
        <paragraph>2D 和 3D 版本的 NavigationObstacle 节点分别为 <reference internal="True" refuri="../../classes/class_navigationobstacle2d#class-navigationobstacle2d"><inline classes="std std-ref">NavigationObstacle2D</inline></reference> 和 <reference internal="True" refuri="../../classes/class_navigationobstacle3d#class-navigationobstacle3d"><inline classes="std std-ref">NavigationObstacle3D</inline></reference>。</paragraph>
        <note>
            <paragraph>NavigationObstacles do not change or influence the pathfinding in any way.
                NavigationObstacles only affect the avoidance velocities of agents controlled by avoidance.</paragraph>
        </note>
        <section ids="static-obstacles" names="static\ obstacles 静态障碍物">
            <title>静态障碍物</title>
            <paragraph>A NavigationObstacle is considered static when its <literal>vertices</literal> property is populated with an outline array of positions to form a polygon.</paragraph>
            <image candidates="{'*': 'tutorials/navigation/img/nav_static_obstacle_build.gif'}" uri="tutorials/navigation/img/nav_static_obstacle_build.gif"></image>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>Static obstacles act as hard do-not-cross boundaries for avoidance using agents, e.g. similar to physics collision but for avoidance.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Static obstacles define their boundaries with an array of outline <literal>vertices</literal> (positions), and in case of 3D with an additional <literal>height</literal> property.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Static obstacles only work for agents that use the 2D avoidance mode.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Static obstacles define through winding order of the vertices if agents are pushed out or sucked in.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Static obstacles can not change their position. They can only be warped to a new position and rebuild from scratch. Static obstacles as a result are ill-suited for usages where the position is changed every frame as the constant rebuild has a high performance cost.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Static obstacles that are warped to another position can not be predicted by agents. This creates the risk of getting agents stuck should a static obstacle be warped on top of agents.</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>When the 2D avoidance is used in 3D the y-axis of Vector3 vertices is ignored. Instead, the global y-axis position of the obstacle is used as the elevation level. Agents will ignore static obstacles in 3D that are below or above them. This is automatically determined by global y-axis position of both obstacle and agent as the elevation level as well as their respective height properties.</paragraph>
        </section>
        <section ids="dynamic-obstacles" names="dynamic\ obstacles 动态障碍物">
            <title>动态障碍物</title>
            <paragraph>NavigationObstacle 的 <literal>radius</literal> 属性大于零时就会被认为是动态障碍物。</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>对于启用了避障的代理而言，动态障碍物就是一个“请离我远点”的对象，类似于它们自己躲避其他代理的行为。</paragraph>
                </list_item>
                <list_item>
                    <paragraph>动态障碍物使用 <literal>radius</literal> 半径来定义边界，2D 中是圆形，3D 中是球形。</paragraph>
                </list_item>
                <list_item>
                    <paragraph>动态障碍物每一帧都可以改变位置，不会有额外的性能开销。</paragraph>
                </list_item>
                <list_item>
                    <paragraph>动态障碍物设置速度后，其他代理就能够预测移动。</paragraph>
                </list_item>
                <list_item>
                    <paragraph>动态障碍物不适合用来将代理限制在拥挤、狭窄的空间中。</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>虽然障碍物可以同时激活静态和动态属性，但是出于性能的考虑不建议这么做。理想情况下，障碍物移动时，应该把静态顶点移除、激活半径。障碍物到达目的地后，应该逐步增大半径，将其他代理推开。在障碍物的周围创造出足够大的安全区域后，就应该把静态顶点添加回来、移除半径。这样就能够避免重建静态边界后，代理因为静态障碍物的突然出现而被卡住。</paragraph>
            <paragraph>和代理类似，障碍物也能够使用 <literal>avoidance_layers</literal> 位掩码。自身的避障掩码中与之存在匹配位的代理都会躲避这个障碍物。</paragraph>
        </section>
        <section ids="procedural-obstacles" names="procedural\ obstacles">
            <title>Procedural obstacles</title>
            <paragraph>可以不借助节点，直接在 NavigationServer 上新建障碍物。</paragraph>
            <paragraph>使用脚本创建的障碍物至少需要有一个 <literal>map</literal> 和一个 <literal>position</literal>。动态障碍物还需要 <literal>radius</literal>。静态障碍物还需要 <literal>vertices</literal> 属性。</paragraph>
            <container classes="sphinx-tabs" type="tab-element">
                <div aria-label="Tabbed content" role="tablist">
                    <button aria-controls="panel-0-R0RTY3JpcHQ=" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-0-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tab" tabindex="0">GDScript</button>
                </div>
                <div aria-labelledby="tab-0-R0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-0-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve"># For 2D

# create a new "obstacle" and place it on the default navigation map.
var new_obstacle_rid: RID = NavigationServer2D.obstacle_create()
var default_2d_map_rid: RID = get_world_2d().get_navigation_map()

NavigationServer2D.obstacle_set_map(new_obstacle_rid, default_2d_map_rid)
NavigationServer2D.obstacle_set_position(new_obstacle_rid, global_position)

# Use obstacle dynamic by increasing radius above zero.
NavigationServer2D.obstacle_set_radius(new_obstacle_rid, 5.0)

# Use obstacle static by adding a square that pushes agents out.
var outline = PackedVector2Array([Vector2(-100, -100), Vector2(100, -100), Vector2(100, 100), Vector2(-100, 100)])
NavigationServer2D.obstacle_set_vertices(new_obstacle_rid, outline)

# Enable the obstacle.
NavigationServer2D.obstacle_set_avoidance_enabled(new_obstacle_rid, true)</literal_block>
                </div>
            </container>
            <container classes="sphinx-tabs" type="tab-element">
                <div aria-label="Tabbed content" role="tablist">
                    <button aria-controls="panel-1-R0RTY3JpcHQ=" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-1-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tab" tabindex="0">GDScript</button>
                </div>
                <div aria-labelledby="tab-1-R0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-1-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve"># For 3D

# Create a new "obstacle" and place it on the default navigation map.
var new_obstacle_rid: RID = NavigationServer3D.obstacle_create()
var default_3d_map_rid: RID = get_world_3d().get_navigation_map()

NavigationServer3D.obstacle_set_map(new_obstacle_rid, default_3d_map_rid)
NavigationServer3D.obstacle_set_position(new_obstacle_rid, global_position)

# Use obstacle dynamic by increasing radius above zero.
NavigationServer3D.obstacle_set_radius(new_obstacle_rid, 0.5)

# Use obstacle static by adding a square that pushes agents out.
var outline = PackedVector3Array([Vector3(-5, 0, -5), Vector3(5, 0, -5), Vector3(5, 0, 5), Vector3(-5, 0, 5)])
NavigationServer3D.obstacle_set_vertices(new_obstacle_rid, outline)
# Set the obstacle height on the y-axis.
NavigationServer3D.obstacle_set_height(new_obstacle_rid, 1.0)

# Enable the obstacle.
NavigationServer3D.obstacle_set_avoidance_enabled(new_obstacle_rid, true)</literal_block>
                </div>
            </container>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="翻译状态" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

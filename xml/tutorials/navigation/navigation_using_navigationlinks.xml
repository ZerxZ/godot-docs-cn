<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/tutorials/navigation/navigation_using_navigationlinks.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <target refid="doc-navigation-using-navigationlinks"></target>
    <section ids="using-navigationlinks doc-navigation-using-navigationlinks" names="using\ navigationlinks 使用\ navigationlink doc_navigation_using_navigationlinks">
        <title>使用 NavigationLink</title>
        <image candidates="{'*': 'tutorials/navigation/img/nav_navmesh_links.png'}" uri="tutorials/navigation/img/nav_navmesh_links.png"></image>
        <paragraph>NavigationLink 即导航链接，可以将相隔任意距离的导航网格多边形连接起来参与寻路，多边形来自 <reference internal="True" refuri="../../classes/class_navigationregion2d#class-navigationregion2d"><inline classes="std std-ref">NavigationRegion2D</inline></reference> 和 <reference internal="True" refuri="../../classes/class_navigationregion3d#class-navigationregion3d"><inline classes="std std-ref">NavigationRegion3D</inline></reference>。</paragraph>
        <paragraph>NavigationLink 也可以用来实现寻路过程中需要与游戏中的对象交互才能使用的捷径，例如梯子、跳板、传送门等。</paragraph>
        <paragraph>2D和 3D版本的 NavigationJumplinks 节点分別可用作 <inline classes="xref std std-ref">NavigationLink2D</inline>。</paragraph>
        <paragraph>Different NavigationRegions can connect their navigation meshes without the need for a NavigationLink
            as long as they have overlapping edges or edges that are within navigation map <literal>edge_connection_margin</literal>.
            As soon as the distance becomes too large, building valid connections becomes a problem - a problem that NavigationLinks can solve.</paragraph>
        <paragraph>请参阅 :ref:<problematic ids="id2" refid="id1">`</problematic>doc_navigation_using_navigationregions`以了解有关导航区域使用的更多信息。请参阅 :ref:<problematic ids="id4" refid="id3">`</problematic>doc_navigation_connecting_navmesh`以了解有关如何连接导航网格的更多信息。</paragraph>
        <image candidates="{'*': 'tutorials/navigation/img/nav_link_properties.png'}" uri="tutorials/navigation/img/nav_link_properties.png"></image>
        <paragraph>NavigationLinks与NavigationRegions共享许多属性，例如 <literal>navigation_layers</literal> 。与使用导览网格资源新增更多本地可走访区域的NavigationRegions相比，NavigationLink在任意距离的两个位置之间新增单一联机。</paragraph>
        <paragraph>NavigationLinks 有一个 <literal>start_position</literal> 和 <literal>end_position</literal> ，当启用 <literal>bidirectional</literal> 时，可以双向导航。当放置导航链接时，它会连接搜索半径内最靠近其 <literal>start_position</literal> (<literal>起始位置</literal>)和 <literal>end_position</literal> （ <literal>结束位置</literal> ）的导航网格多边形，以进行寻路。</paragraph>
        <paragraph>多边形搜索半径可以在ProjectSettings的 <literal>navigation/2d_or_3d/default_link_connection_radius</literal> 下全局配置，也可以使用 <literal>NavigationServer.map_set_link_connection_radius()</literal> 函数为每个导航 <strong>map</strong> 单独设置。</paragraph>
        <paragraph>“start_position” 和 “end_position” 在编辑器中都有调试标记。位置的可见半径显示多边形搜索半径。将比较内部的所有导航网格多边形，并为边连接拾取最近的多边形。如果在搜索半径内未找到有效的多边形，则导航链接将被禁用。</paragraph>
        <image candidates="{'*': 'tutorials/navigation/img/nav_link_debug_visuals.png'}" uri="tutorials/navigation/img/nav_link_debug_visuals.png"></image>
        <paragraph>可以在 <literal>debug/shapes/navigation</literal> 下的编辑器中更改链接调试视觉效果 <reference internal="True" refuri="../../classes/class_projectsettings#class-projectsettings"><inline classes="std std-ref">ProjectSettings</inline></reference> 。调试的可见性也可以在编辑器3D视口小工具菜单中进行控制。</paragraph>
        <paragraph>A navigation link does not provide any specialized movement through the link. Instead, when
            an agent reaches the position of a link, game code needs to react (e.g. through area triggers)
            and provide means for the agent to move through the link to end up at the links other position
            (e.g. through teleport or animation). Without that an agent will attempt to move itself along
            the path of the link. You could end up with an agent walking over a bottomless pit instead of
            waiting for a moving platform, or walking through a teleporter and proceeding through a wall.</paragraph>
        <section ids="navigation-link-script-templates" names="navigation\ link\ script\ templates 导航链接脚本模板">
            <title>导航链接脚本模板</title>
            <paragraph>以下代码使用 NavigationServer 新建导航链接。</paragraph>
            <container classes="sphinx-tabs" type="tab-element">
                <div aria-label="Tabbed content" role="tablist">
                    <button aria-controls="panel-0-MkQgR0RTY3JpcHQ=" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-0-MkQgR0RTY3JpcHQ=" name="MkQgR0RTY3JpcHQ=" role="tab" tabindex="0">2D GDScript</button>
                    <button aria-controls="panel-0-M0QgR0RTY3JpcHQ=" aria-selected="false" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-0-M0QgR0RTY3JpcHQ=" name="M0QgR0RTY3JpcHQ=" role="tab" tabindex="-1">3D GDScript</button>
                </div>
                <div aria-labelledby="tab-0-MkQgR0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-0-MkQgR0RTY3JpcHQ=" name="MkQgR0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve">extends Node2D

var link_rid: RID
var link_start_position: Vector2
var link_end_position: Vector2

func _ready() -&gt; void:
    link_rid = NavigationServer2D.link_create()

    var link_owner_id: int = get_instance_id()
    var link_enter_cost: float = 1.0
    var link_travel_cost: float = 1.0
    var link_navigation_layers: int = 1
    var link_bidirectional: bool = true

    NavigationServer2D.link_set_owner_id(link_rid, link_owner_id)
    NavigationServer2D.link_set_enter_cost(link_rid, link_enter_cost)
    NavigationServer2D.link_set_travel_cost(link_rid, link_travel_cost)
    NavigationServer2D.link_set_navigation_layers(link_rid, link_navigation_layers)
    NavigationServer2D.link_set_bidirectional(link_rid, link_bidirectional)

    # Enable the link and set it to the default navigation map.
    NavigationServer2D.link_set_enabled(link_rid, true)
    NavigationServer2D.link_set_map(link_rid, get_world_2d().get_navigation_map())

    # Move the 2 link positions to their intended global positions.
    NavigationServer2D.link_set_start_position(link_rid, link_start_position)
    NavigationServer2D.link_set_end_position(link_rid, link_end_position)</literal_block>
                </div>
                <div aria-labelledby="tab-0-M0QgR0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" hidden="true" ids="panel-0-M0QgR0RTY3JpcHQ=" name="M0QgR0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve">extends Node3D

var link_rid: RID
var link_start_position: Vector3
var link_end_position: Vector3

func _ready() -&gt; void:
    link_rid = NavigationServer3D.link_create()

    var link_owner_id: int = get_instance_id()
    var link_enter_cost: float = 1.0
    var link_travel_cost: float = 1.0
    var link_navigation_layers: int = 1
    var link_bidirectional: bool = true

    NavigationServer3D.link_set_owner_id(link_rid, link_owner_id)
    NavigationServer3D.link_set_enter_cost(link_rid, link_enter_cost)
    NavigationServer3D.link_set_travel_cost(link_rid, link_travel_cost)
    NavigationServer3D.link_set_navigation_layers(link_rid, link_navigation_layers)
    NavigationServer3D.link_set_bidirectional(link_rid, link_bidirectional)

    # Enable the link and set it to the default navigation map.
    NavigationServer3D.link_set_enabled(link_rid, true)
    NavigationServer3D.link_set_map(link_rid, get_world_3d().get_navigation_map())

    # Move the 2 link positions to their intended global positions.
    NavigationServer3D.link_set_start_position(link_rid, link_start_position)
    NavigationServer3D.link_set_end_position(link_rid, link_end_position)</literal_block>
                </div>
            </container>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="翻译状态" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

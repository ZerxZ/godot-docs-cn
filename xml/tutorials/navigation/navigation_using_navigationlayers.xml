<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/tutorials/navigation/navigation_using_navigationlayers.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <target refid="doc-navigation-advanced-using-navigationlayers"></target>
    <section ids="using-navigationlayers doc-navigation-advanced-using-navigationlayers" names="using\ navigationlayers 使用\ navigationlayer doc_navigation_advanced_using_navigationlayers">
        <title>使用 NavigationLayer</title>
        <paragraph>NavigationLayers are an optional feature to further control which navigation meshes are considered in a path query.
            They work similar to how physics layers control collision between collision objects or how visual layers control what is rendered to the Viewport.</paragraph>
        <paragraph>NavigationLayers可以在 <strong>ProjectSettings</strong> 中与物理层或视觉层相同地命名。</paragraph>
        <image candidates="{'*': 'tutorials/navigation/img/navigationlayers_naming.png'}" uri="tutorials/navigation/img/navigationlayers_naming.png"></image>
        <paragraph>如果一个区域没有一个与路径查询的 <literal>navigation_layers</literal> 参数兼容的导览层，则在寻路时将跳过该区域的导览网格。有关查询导览服务器路径的更多信息，请参阅 <reference internal="True" refuri="navigation_using_navigationpaths#doc-navigation-using-navigationpaths"><inline classes="std std-ref">使用 NavigationPath</inline></reference> 。</paragraph>
        <paragraph>NavigationLayers是用作 <strong>bitmask</strong> 的单个 <literal>int</literal> 值。许多与导航相关的节点都具有 <literal>set_navigation_layer_value()</literal> 和 <literal>get_navigation_layer_value()</literal> 函数，可以直接设置和获取层数，而不需要更复杂的逐位操作。</paragraph>
        <paragraph>在脚本中，以下辅助函数可用于处理 <literal>navigation_layers</literal> 位掩码。</paragraph>
        <container classes="sphinx-tabs" type="tab-element">
            <div aria-label="Tabbed content" role="tablist">
                <button aria-controls="panel-0-MkQgR0RTY3JpcHQ=" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-0-MkQgR0RTY3JpcHQ=" name="MkQgR0RTY3JpcHQ=" role="tab" tabindex="0">2D GDScript</button>
                <button aria-controls="panel-0-M0QgR0RTY3JpcHQ=" aria-selected="false" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-0-M0QgR0RTY3JpcHQ=" name="M0QgR0RTY3JpcHQ=" role="tab" tabindex="-1">3D GDScript</button>
            </div>
            <div aria-labelledby="tab-0-MkQgR0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-0-MkQgR0RTY3JpcHQ=" name="MkQgR0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve">func change_layers():
    var region: NavigationRegion2D = get_node("NavigationRegion2D")
    # enables 4-th layer for this region
    region.navigation_layers = enable_bitmask_inx(region.navigation_layers, 4)
    # disables 1-rst layer for this region
    region.navigation_layers = disable_bitmask_inx(region.navigation_layers, 1)

    var agent: NavigationAgent2D = get_node("NavigationAgent2D")
    # make future path queries of this agent ignore regions with 4-th layer
    agent.navigation_layers = disable_bitmask_inx(agent.navigation_layers, 4)

    var path_query_navigation_layers: int = 0
    path_query_navigation_layers = enable_bitmask_inx(path_query_navigation_layers, 2)
    # get a path that only considers 2-nd layer regions
    var path: PoolVector2Array = NavigationServer2D.map_get_path(
        map,
        start_position,
        target_position,
        true,
        path_query_navigation_layers
        )

static func is_bitmask_inx_enabled(_bitmask: int, _index: int) -&gt; bool:
    return _bitmask &amp; (1 &lt;&lt; _index) != 0

static func enable_bitmask_inx(_bitmask: int, _index: int) -&gt; int:
    return _bitmask | (1 &lt;&lt; _index)

static func disable_bitmask_inx(_bitmask: int, _index: int) -&gt; int:
    return _bitmask &amp; ~(1 &lt;&lt; _index)</literal_block>
            </div>
            <div aria-labelledby="tab-0-M0QgR0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" hidden="true" ids="panel-0-M0QgR0RTY3JpcHQ=" name="M0QgR0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve">func change_layers():
    var region: NavigationRegion3D = get_node("NavigationRegion3D")
    # enables 4-th layer for this region
    region.navigation_layers = enable_bitmask_inx(region.navigation_layers, 4)
    # disables 1-rst layer for this region
    region.navigation_layers = disable_bitmask_inx(region.navigation_layers, 1)

    var agent: NavigationAgent3D = get_node("NavigationAgent3D")
    # make future path queries of this agent ignore regions with 4-th layer
    agent.navigation_layers = disable_bitmask_inx(agent.navigation_layers, 4)

    var path_query_navigation_layers: int = 0
    path_query_navigation_layers = enable_bitmask_inx(path_query_navigation_layers, 2)
    # get a path that only considers 2-nd layer regions
    var path: PoolVector3Array = NavigationServer3D.map_get_path(
        map,
        start_position,
        target_position,
        true,
        path_query_navigation_layers
        )

static func is_bitmask_inx_enabled(_bitmask: int, _index: int) -&gt; bool:
    return _bitmask &amp; (1 &lt;&lt; _index) != 0

static func enable_bitmask_inx(_bitmask: int, _index: int) -&gt; int:
    return _bitmask | (1 &lt;&lt; _index)

static func disable_bitmask_inx(_bitmask: int, _index: int) -&gt; int:
    return _bitmask &amp; ~(1 &lt;&lt; _index)</literal_block>
            </div>
        </container>
        <paragraph>更改路径查询的导览层是 enabling / disabling (启用/停用)整个导览区域的一种性能友善的替代方案。与区域变更相比，具有不同导览层的导览路径查询不会触发导览服务器上的大规模更新。</paragraph>
        <paragraph>Changing the navigation layers of NavigationAgent nodes will have an immediate
            effect on the next path query. Changing the navigation layers of
            regions will have an effect after the next NavigationServer sync.</paragraph>
        <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="翻译状态" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
    </section>
</document>

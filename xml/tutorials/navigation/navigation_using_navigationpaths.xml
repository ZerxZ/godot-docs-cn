<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/tutorials/navigation/navigation_using_navigationpaths.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <target refid="doc-navigation-using-navigationpaths"></target>
    <section ids="using-navigationpaths doc-navigation-using-navigationpaths" names="using\ navigationpaths 使用\ navigationpath doc_navigation_using_navigationpaths">
        <title>使用 NavigationPath</title>
        <section ids="obtaining-a-navigationpath" names="obtaining\ a\ navigationpath 获取\ navigationpath">
            <title>获取 NavigationPath</title>
            <paragraph>导航路径可以直接从NavigationServer查询，并且不需要任何其他节点或对象，只要导航地图具有可使用的导航网格即可。</paragraph>
            <paragraph>要获取 2D 路径，请使用 <literal>NavigationServer2D.map_get_path(地图, 起点, 终点, 优化, 导航层)</literal>。</paragraph>
            <paragraph>要获取 3D 路径，请使用 <literal>NavigationServer3D.map_get_path(地图, 起点, 终点, 优化, 导航层)</literal>。</paragraph>
            <paragraph>有关需要额外设定的更多可自定义导览路径查询，请参阅 <reference internal="True" refuri="navigation_using_navigationpathqueryobjects#doc-navigation-using-navigationpathqueryobjects"><inline classes="std std-ref">使用 NavigationPathQueryObject</inline></reference>。</paragraph>
            <paragraph>查询所需的参数之一是导航地图的RID。每个游戏世界都有一个自动创建的默认导航地图。默认导航地图可以使用 <literal>get_world_2d().get_navigation_map()</literal> 从任何Node2D继承节点检索，也可以使用 <literal>get_world_3d().get_navigation_map()</literal> 从任意Node3D继承节点检索。第二和第三参数是起始位置和目标位置，作为2D的Vector2或3D的Vector3。</paragraph>
            <paragraph>If the <literal>optimized</literal> parameter is <literal>true</literal>, path positions will be shortened along polygon
                corners with an additional funnel algorithm pass. This works well for free movement
                on navigation meshes with unequally sized polygons as the path will hug around corners
                along the polygon corridor found by the A* algorithm. With small cells the A* algorithm
                creates a very narrow funnel corridor that can create ugly corner paths when used with grids.</paragraph>
            <paragraph>如果 <literal>optimized</literal> 参数为 <literal>false</literal> ，则路径位置将放置在每个多边形边缘的中心。这适用于具有相同大小多边形的导航网格上的纯网格移动，因为路径将穿过网格单元的中心。在网格之外，由于多边形通常用一条长边覆盖大的开放区域，这可能会产生不必要的长迂回路径。</paragraph>
            <container classes="sphinx-tabs" type="tab-element">
                <div aria-label="Tabbed content" role="tablist">
                    <button aria-controls="panel-0-MkQgR0RTY3JpcHQ=" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-0-MkQgR0RTY3JpcHQ=" name="MkQgR0RTY3JpcHQ=" role="tab" tabindex="0">2D GDScript</button>
                    <button aria-controls="panel-0-M0QgR0RTY3JpcHQ=" aria-selected="false" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-0-M0QgR0RTY3JpcHQ=" name="M0QgR0RTY3JpcHQ=" role="tab" tabindex="-1">3D GDScript</button>
                </div>
                <div aria-labelledby="tab-0-MkQgR0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-0-MkQgR0RTY3JpcHQ=" name="MkQgR0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve">extends Node2D

# Basic query for a navigation path using the default navigation map.

func get_navigation_path(p_start_position: Vector2, p_target_position: Vector2) -&gt; PackedVector2Array:
    if not is_inside_tree():
        return PackedVector2Array()

    var default_map_rid: RID = get_world_2d().get_navigation_map()
    var path: PackedVector2Array = NavigationServer2D.map_get_path(
        default_map_rid,
        p_start_position,
        p_target_position,
        true
    )
    return path</literal_block>
                </div>
                <div aria-labelledby="tab-0-M0QgR0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" hidden="true" ids="panel-0-M0QgR0RTY3JpcHQ=" name="M0QgR0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve">extends Node3D

# Basic query for a navigation path using the default navigation map.

func get_navigation_path(p_start_position: Vector3, p_target_position: Vector3) -&gt; PackedVector3Array:
    if not is_inside_tree():
        return PackedVector3Array()

    var default_map_rid: RID = get_world_3d().get_navigation_map()
    var path: PackedVector3Array = NavigationServer3D.map_get_path(
        default_map_rid,
        p_start_position,
        p_target_position,
        true
    )
    return path</literal_block>
                </div>
            </container>
            <paragraph>NavigationServer返回的 <literal>path</literal> 将是2D的 <literal>PackedVector2Array</literal> 或3D的 <literal>PackedVector3Array</literal> 。这些只是一个经过内存优化的矢量位置 <literal>Array</literal> 。阵列内的所有位置矢量都保证位于NavigationPolygon或NavigationMesh内。如果路径数组不是空的，则其导航网格位置最靠近第一个索引 <literal>path[0]</literal> 位置处的起始位置。离目标位置最近的可用导航网格位置是最后一个索引 <literal>path[path.size()-1]</literal> 位置。之间的所有索引都是参与者在不离开导航网格的情况下到达目标所应遵循的路径点。</paragraph>
            <note>
                <paragraph>如果目标位置位于未合并或连接的不同导览网格上，则导览路径将通往起始位置导览网格上最接近的可能位置。</paragraph>
            </note>
            <paragraph>以下脚本透过使用 <literal>set_movement_target()</literal> 设定目标位置，使用预设导览地图沿着导览路径移动Node3D继承节点。</paragraph>
            <container classes="sphinx-tabs" type="tab-element">
                <div aria-label="Tabbed content" role="tablist">
                    <button aria-controls="panel-1-R0RTY3JpcHQ=" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-1-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tab" tabindex="0">GDScript</button>
                </div>
                <div aria-labelledby="tab-1-R0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-1-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve">@onready var default_3d_map_rid: RID = get_world_3d().get_navigation_map()

var movement_speed: float = 4.0
var movement_delta: float
var path_point_margin: float = 0.5

var current_path_index: int = 0
var current_path_point: Vector3
var current_path: PackedVector3Array

func set_movement_target(target_position: Vector3):

    var start_position: Vector3 = global_transform.origin

    current_path = NavigationServer3D.map_get_path(
        default_3d_map_rid,
        start_position,
        target_position,
        true
    )

    if not current_path.is_empty():
        current_path_index = 0
        current_path_point = current_path[0]

func _physics_process(delta):

    if current_path.is_empty():
        return

    movement_delta = movement_speed * delta

    if global_transform.origin.distance_to(current_path_point) &lt;= path_point_margin:
        current_path_index += 1
        if current_path_index &gt;= current_path.size():
            current_path = []
            current_path_index = 0
            current_path_point = global_transform.origin
            return

    current_path_point = current_path[current_path_index]

    var new_velocity: Vector3 = global_transform.origin.direction_to(current_path_point) * movement_delta

    global_transform.origin = global_transform.origin.move_toward(global_transform.origin + new_velocity, movement_delta)</literal_block>
                </div>
            </container>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="翻译状态" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/tutorials/shaders/converting_glsl_to_godot_shaders.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <target refid="doc-converting-glsl-to-godot-shaders"></target>
    <section ids="converting-glsl-to-godot-shaders doc-converting-glsl-to-godot-shaders" names="converting\ glsl\ to\ godot\ shaders 将\ glsl\ 转换为\ godot\ 着色器 doc_converting_glsl_to_godot_shaders">
        <title>将 GLSL 转换为 Godot 着色器</title>
        <paragraph>本文档解释了Godot的着色语言和GLSL之间的区别, 并提供了有关如何将着色器从其他来源(如Shadertoy和The Book of Shaders)迁移到Godot着色器的实用建议.</paragraph>
        <paragraph>关于Godot的着色语言的详细信息, 请参考 <reference internal="True" refuri="shader_reference/shading_language#doc-shading-language"><inline classes="std std-ref">Shading Language</inline></reference> .</paragraph>
        <section ids="glsl" names="glsl">
            <title>GLSL</title>
            <paragraph>Godot使用基于GLSL的着色语言, 增加了一些生活质量特征. 因此,GLSL中提供的大多数功能都可以使用Godot的着色语言.</paragraph>
            <section ids="shader-programs" names="shader\ programs 着色器程序">
                <title>着色器程序</title>
                <paragraph>在GLSL中, 每个着色器使用一个单独的程序. 你有一个用于顶点着色器的程序和一个用于片段着色器的程序. 在Godot中, 你有一个包含 <literal>vertex</literal> 和/或 <literal>fragment</literal> 函数的单一着色器. 如果你只选择写一个,Godot会提供另一个.</paragraph>
                <paragraph>Godot允许通过在一个文件中定义片段和顶点着色器来共享uniform的变量和函数. 在GLSL中, 顶点和片段程序不能共享变量, 除非是使用varyings的时候.</paragraph>
            </section>
            <section ids="vertex-attributes" names="vertex\ attributes 顶点属性">
                <title>顶点属性</title>
                <paragraph>In GLSL, you can pass in per-vertex information using attributes and have the
                    flexibility to pass in as much or as little as you want. In Godot, you have a
                    set number of input attributes, including <literal>VERTEX</literal> (position), <literal>COLOR</literal>,
                    <literal>UV</literal>, <literal>UV2</literal>, <literal>NORMAL</literal>. Each shaders' page in the shader reference section
                    of the documentation comes with a complete list of its vertex attributes.</paragraph>
            </section>
            <section ids="gl-position" names="gl_position">
                <title>gl_Position</title>
                <paragraph><literal>gl_Position</literal> 接收在顶点着色器中指定的顶点的最终坐标. 它是由用户在裁剪空间中指定的. 通常, 在GLSL中, 模型空间的顶点位置是通过一个名为 <literal>position</literal> 的顶点属性来传递的, 你可以手动处理从模型空间到裁剪空间的转换.</paragraph>
                <paragraph>在Godot中, <literal>VERTEX</literal> 指定了 <literal>vertex</literal> 函数开始时在模型空间的顶点位置. 在用户定义的 <literal>vertex</literal> 函数运行后,Godot也会处理最终转换到裁剪空间的过程. 如果你想跳过从模型空间到视图空间的转换, 你可以将 <literal>render_mode</literal> 设置为 <literal>skip_vertex_transform</literal> . 如果你想跳过所有的转换, 将 <literal>render_mode</literal> 设置为 <literal>skip_vertex_transform</literal> 并将 <literal>PROJECTION_MATRIX</literal> 设置为 <literal>mat4(1.0)</literal> , 以便使从视图空间到裁剪空间的最终转换失效.</paragraph>
            </section>
            <section ids="varyings" names="varyings varying">
                <title>Varying</title>
                <paragraph>varyings是一种变量, 可以从顶点着色器传递到片段着色器. 在现代GLSL(3.0及以上版本)中, 变量是通过 <literal>in</literal> 和 <literal>out</literal> 关键字来定义的. 一个从顶点着色器出来的变量在顶点着色器中用 <literal>out</literal> 定义, 在片段着色器中用 <literal>in</literal> 定义.</paragraph>
            </section>
            <section dupnames="main" ids="main" names="主要">
                <title>主要</title>
                <paragraph>在GLSL中, 每个着色器程序看起来都像是一个独立的C风格程序. 因此, 主要入口点是 <literal>main</literal> . 如果要复制顶点着色器, 请将 <literal>main</literal> 重命名为 <literal>vertex</literal> , 如果要复制片段着色器, 请将 <literal>main</literal> 重命名为 <literal>fragment</literal> .</paragraph>
            </section>
            <section ids="macros" names="macros 宏">
                <title>宏</title>
                <paragraph>The <reference internal="True" refuri="shader_reference/shader_preprocessor#doc-shader-preprocessor"><inline classes="std std-ref">Godot shader preprocessor</inline></reference> supports the following macros:</paragraph>
                <bullet_list bullet="*">
                    <list_item>
                        <paragraph><literal>#define</literal> / <literal>#undef</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>#if</literal>, <literal>#elif</literal>, <literal>#else</literal>, <literal>#endif</literal>, <literal>defined()</literal>, <literal>#ifdef</literal>, <literal>#ifndef</literal></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>#include</literal> (only <literal>.gdshaderinc</literal> files and with a maximum depth of 25)</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal>#pragma disable_preprocessor</literal>, which disables preprocessing for the rest of the file</paragraph>
                    </list_item>
                </bullet_list>
            </section>
            <section dupnames="variables" ids="variables" names="变量">
                <title>变量</title>
                <paragraph>GLSL 有许多内置的硬编码变量。这些变量不是 uniform，因此它们不能从主程序中编辑。</paragraph>
                <table>
                    <tgroup cols="4">
                        <colspec colwidth="21"></colspec>
                        <colspec colwidth="9"></colspec>
                        <colspec colwidth="24"></colspec>
                        <colspec colwidth="53"></colspec>
                        <thead>
                            <row>
                                <entry>
                                    <paragraph>变量</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>类型</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>等价物</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>描述</paragraph>
                                </entry>
                            </row>
                        </thead>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph>gl_FragColor</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>out vec4</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>COLOR</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>每个像素的输出颜色.</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>gl_FragCoord</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>vec4</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>FRAGCOORD</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>用于全屏四边形. 对于较小的四边形, 使用UV.</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>gl_Position</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>vec4</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>VERTEX</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>顶点的位置, 从顶点着色器输出.</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>gl_PointSize</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>浮点数</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>POINT_SIZE</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Point原语的大小.</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>gl_PointCoord</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>vec2</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>POINT_COORD</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>绘制Point基元时在点上的位置.</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>gl_FrontFacing</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>bool</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>FRONT_FACING</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>如果原始的正面, 则为真.</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <target refid="glsl-coordinates"></target>
            </section>
            <section dupnames="coordinates" ids="coordinates glsl-coordinates" names="坐标 glsl_coordinates">
                <title>坐标</title>
                <paragraph>GLSL中的 <literal>gl_FragCoord</literal> 和Godot着色语言中的 <literal>FRAGCOORD</literal> 使用相同的坐标系. 如果在Godot中使用UV, 则y坐标将颠倒翻转.</paragraph>
            </section>
            <section ids="precision" names="precision 精度">
                <title>精度</title>
                <paragraph>在GLSL中，你可以用 <literal>precision</literal> 关键字在着色器的顶部定义一个给定类型的精度（float 或 int）。在 Godot 中，你可以在定义变量时将精度限定词 <literal>lowp</literal>、<literal>mediump</literal>、<literal>highp</literal> 放在类型前，根据需要设置单个变量的精度。更多信息请参见<reference internal="True" refuri="shader_reference/shading_language#doc-shading-language"><inline classes="std std-ref">着色器语言</inline></reference>参考。</paragraph>
            </section>
        </section>
        <section dupnames="shadertoy" ids="shadertoy">
            <title>Shadertoy</title>
            <paragraph><reference name="Shadertoy" refuri="https://www.shadertoy.com/results?query=&amp;sort=popular&amp;from=10&amp;num=4">Shadertoy</reference><target ids="shadertoy" names="shadertoy" refuri="https://www.shadertoy.com/results?query=&amp;sort=popular&amp;from=10&amp;num=4"></target> 是一个网站, 它使编写片段着色器和创建 <reference name="纯正的魔法" refuri="https://www.shadertoy.com/view/4tjGRh">纯正的魔法</reference><target ids="id1" names="纯正的魔法" refuri="https://www.shadertoy.com/view/4tjGRh"></target> 变得容易.</paragraph>
            <paragraph>Shadertoy 并没有让用户完全控制着色器。它处理所有的输入和 uniform，只让用户编写片段着色器。</paragraph>
            <section dupnames="types" ids="types" names="类型">
                <title>类型</title>
                <paragraph>Shadertoy使用的是webgl规范, 所以它运行的GLSL版本略有不同. 然而, 它仍然有常规的类型, 包括常量和宏.</paragraph>
            </section>
            <section ids="mainimage" names="mainimage">
                <title>mainImage</title>
                <paragraph>Shadertoy着色器的主要入口点是 <literal>mainImage</literal> 函数. <literal>mainImage</literal> 有两个参数, <literal>fragColor</literal> 和 <literal>fragCoord</literal>, 分别对应Godot中的 <literal>COLOR</literal> 和 <literal>FRAGCOORD</literal> . 这些参数在Godot中是自动处理的, 所以你不需要自己把它们作为参数. 移植到Godot时, <literal>mainImage</literal> 函数中的任何内容都应复制到 <literal>fragment</literal> 函数中.</paragraph>
            </section>
            <section dupnames="variables" ids="id2" names="变量">
                <title>变量</title>
                <paragraph>为了让编写片段着色器变得简单明了,Shadertoy为你处理了从主程序传递到片段着色器中的许多有用信息. 其中有一些在Godot中没有对应的信息, 因为Godot选择不在默认情况下提供这些信息. 这没关系, 因为Godot让你有能力制作自己的 uniform。对于那些等价物被列为 "Provide with Uniform" 的变量, 用户有责任自己创建该uniform . 该描述给了读者一个提示, 告诉他们可以传入什么作为替代物.</paragraph>
                <table>
                    <tgroup cols="4">
                        <colspec colwidth="21"></colspec>
                        <colspec colwidth="9"></colspec>
                        <colspec colwidth="24"></colspec>
                        <colspec colwidth="53"></colspec>
                        <thead>
                            <row>
                                <entry>
                                    <paragraph>变量</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>类型</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>等价物</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>描述</paragraph>
                                </entry>
                            </row>
                        </thead>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph>fragColor</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>out vec4</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>COLOR</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>每个像素的输出颜色.</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>fragCoord</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>vec2</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>FRAGCOORD.xy</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>用于全屏四边形. 对于较小的四边形, 使用UV.</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>iResolution</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>vec3</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>1.0 / SCREEN_PIXEL_SIZE</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>也可以手动传递.</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>iTime</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>浮点数</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>TIME</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>着色器启动后的时间.</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>iTimeDelta</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>浮点数</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>提供Uniform</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>渲染前一帧的时间.</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>iFrame</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>浮点数</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>提供Uniform</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>帧号.</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>iChannelTime[4]</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>浮点数</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>提供Uniform</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>自该特定纹理开始的时间。</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>iMouse</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>vec4</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>提供Uniform</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>鼠标在像素坐标中的位置.</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>iDate</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>vec4</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>提供Uniform</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>当前日期, 以秒为单位表示.</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>iChannelResolution[4]</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>vec3</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>1.0 / TEXTURE_PIXEL_SIZE</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>特殊纹理的分辨率.</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>iChanneli</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Sampler2D</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>TEXTURE</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Godot只提供一个内置；用户可以制作更多.</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
            </section>
            <section dupnames="coordinates" ids="id3" names="坐标">
                <title>坐标</title>
                <paragraph><literal>fragCoord</literal> 的行为与 <literal>gl_FragCoord</literal> 相同 <reference internal="True" refid="glsl-coordinates"><inline classes="std std-ref">GLSL</inline></reference> 和Godot中的 <literal>FRAGCOORD</literal> .</paragraph>
            </section>
        </section>
        <section dupnames="the\ book\ of\ shaders" ids="the-book-of-shaders" names="着色之书">
            <title>着色之书</title>
            <paragraph>与 Shadertoy 类似，<reference name="The Book of Shaders" refuri="https://thebookofshaders.com">The Book of Shaders</reference><target ids="the-book-of-shaders" names="the\ book\ of\ shaders" refuri="https://thebookofshaders.com"></target> 提供了在网络浏览器中访问片段着色器的机会，用户可以与之互动，但只限于编写片段着色器代码，其中有一组传入的 uniform 列表，不能添加额外的 uniform。</paragraph>
            <paragraph>有关将着色器移植到各种框架的进一步帮助,The Book of Shaders在各种框架中运行着色器时提供了一个 <reference name="page" refuri="https://thebookofshaders.com/04">page</reference><target ids="page" names="page" refuri="https://thebookofshaders.com/04"></target> .</paragraph>
            <section dupnames="types" ids="id5" names="类型">
                <title>类型</title>
                <paragraph>The Book of Shaders使用webgl规范, 因此它运行的GLSL略有不同. 但是, 它仍然具有常规类型, 包括常量和宏.</paragraph>
            </section>
            <section dupnames="main" ids="id6" names="主要">
                <title>主要</title>
                <paragraph>Book of Shaders片段着色器的入口点是 <literal>main</literal> , 就像在GLSL中一样. 使用着色器 <literal>main</literal> 函数编写的所有内容都应该复制到Godot的 <literal>fragment</literal> 函数中.</paragraph>
            </section>
            <section dupnames="variables" ids="id7" names="变量">
                <title>变量</title>
                <paragraph>着色书比Shadertoy更接近普通GLSL. 它也比Shadertoy实施更少的制服.</paragraph>
                <table>
                    <tgroup cols="4">
                        <colspec colwidth="21"></colspec>
                        <colspec colwidth="9"></colspec>
                        <colspec colwidth="24"></colspec>
                        <colspec colwidth="53"></colspec>
                        <thead>
                            <row>
                                <entry>
                                    <paragraph>变量</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>类型</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>等价物</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>描述</paragraph>
                                </entry>
                            </row>
                        </thead>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph>gl_FragColor</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>out vec4</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>COLOR</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>每个像素的输出颜色.</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>gl_FragCoord</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>vec4</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>FRAGCOORD</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>用于全屏四边形. 对于较小的四边形, 使用UV.</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>u_resolution</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>vec2</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>1.0 / SCREEN_PIXEL_SIZE</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>也可以手动传递.</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>u_time</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>浮点数</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>TIME</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>着色器启动后的时间.</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>u_mouse</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>vec2</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>提供Uniform</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>鼠标在像素坐标中的位置.</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
            </section>
            <section dupnames="coordinates" ids="id8" names="坐标">
                <title>坐标</title>
                <paragraph>Shaders使用相同的坐标系 <reference internal="True" refid="glsl-coordinates"><inline classes="std std-ref">GLSL</inline></reference>.</paragraph>
                <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="翻译状态" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
            </section>
        </section>
    </section>
</document>

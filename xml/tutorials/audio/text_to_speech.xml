<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/tutorials/audio/text_to_speech.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <target refid="doc-text-to-speech"></target>
    <section ids="text-to-speech doc-text-to-speech" names="text\ to\ speech 文本转语音 doc_text_to_speech">
        <title>文本转语音</title>
        <section ids="basic-usage" names="basic\ usage 基本用法">
            <title>基本用法</title>
            <paragraph>在能够使用文本转语音进行基本操作前，需要执行一次以下步骤：</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>Enable TTS in the Godot editor for your project</paragraph>
                </list_item>
                <list_item>
                    <paragraph>向系统查询可用语音列表</paragraph>
                </list_item>
                <list_item>
                    <paragraph>存储你想要使用的语音 ID</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>By default, the Godot project-level setting for text-to-speech is disabled, to avoid unnecessary overhead. To enable it:</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>前往 <strong>项目 &gt; 项目设置</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph>Make sure the <strong>Advanced Settings</strong> toggle is enabled</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Click on <strong>Audio &gt; General</strong></paragraph>
                </list_item>
                <list_item>
                    <paragraph>Ensure the <strong>Text to Speech</strong> option is checked</paragraph>
                </list_item>
                <list_item>
                    <paragraph>如果出现提示，请重新启动 Godot。</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>Text-to-speech uses a specific voice. Depending on the user's system, they might have multiple voices installed. Once you have the voice ID, you can use it to speak some text:</paragraph>
            <container classes="sphinx-tabs" type="tab-element">
                <div aria-label="Tabbed content" role="tablist">
                    <button aria-controls="panel-0-R0RTY3JpcHQ=" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-0-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tab" tabindex="0">GDScript</button>
                    <button aria-controls="panel-0-QyM=" aria-selected="false" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-0-QyM=" name="QyM=" role="tab" tabindex="-1">C#</button>
                </div>
                <div aria-labelledby="tab-0-R0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-0-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve"># One-time steps.
# Pick a voice. Here, we arbitrarily pick the first English voice.
var voices = DisplayServer.tts_get_voices_for_language("en")
var voice_id = voices[0]

# Say "Hello, world!".
DisplayServer.tts_speak("Hello, world!", voice_id)

# Say a longer sentence, and then interrupt it.
# Note that this method is asynchronous: execution proceeds to the next line immediately,
# before the voice finishes speaking.
var long_message = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur"
DisplayServer.tts_speak(long_message, voice_id)

# Immediately stop the current text mid-sentence and say goodbye instead.
DisplayServer.tts_stop()
DisplayServer.tts_speak("Goodbye!", voice_id)</literal_block>
                </div>
                <div aria-labelledby="tab-0-QyM=" classes="sphinx-tabs-panel code-tab group-tab" hidden="true" ids="panel-0-QyM=" name="QyM=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="csharp" linenos="False" xml:space="preserve">// One-time steps.
// Pick a voice. Here, we arbitrarily pick the first English voice.
string[] voices = DisplayServer.TtsGetVoicesForLanguage("en");
string voiceId = voices[0];

// Say "Hello, world!".
DisplayServer.TtsSpeak("Hello, world!", voiceId);

// Say a longer sentence, and then interrupt it.
// Note that this method is asynchronous: execution proceeds to the next line immediately,
// before the voice finishes speaking.
string longMessage = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur";
DisplayServer.TtsSpeak(longMessage, voiceId);

// Immediately stop the current text mid-sentence and say goodbye instead.
DisplayServer.TtsStop();
DisplayServer.TtsSpeak("Goodbye!", voiceId);</literal_block>
                </div>
            </container>
        </section>
        <section ids="requirements-for-functionality" names="requirements\ for\ functionality 功能要求">
            <title>功能要求</title>
            <paragraph>Godot 包含了文本转语音功能，可以在 <reference internal="True" refuri="../../classes/class_displayserver#class-displayserver"><inline classes="std std-ref">DisplayServer 类</inline></reference>中找到。</paragraph>
            <paragraph>Godot 的文本转语音功能依赖于系统库。Windows 和 macOS 上默认安装了这些库，但并不是所有 Linux 发行版都有安装。如果这些库不存在，那么文本转语音功能就无法正常工作，此时 <literal>tts_get_voices()</literal> 返回的列表为空，表示没有可用的语音。</paragraph>
            <paragraph>Both Godot users on Linux and end-users on Linux running Godot games need to ensure that their system includes the system libraries for text-to-speech to work. Please consult the table below or your own distribution's documentation to determine what libraries you need to install.</paragraph>
            <section ids="distro-specific-one-liners" names="distro-specific\ one-liners 针对各个发行版的单行命令">
                <title>针对各个发行版的单行命令</title>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="18"></colspec>
                        <colspec colwidth="107"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><strong>Arch Linux</strong></paragraph>
                                </entry>
                                <entry>
                                    <literal_block force="False" language="gdscript" linenos="False" xml:space="preserve">pacman -S speech-dispatcher festival espeakup</literal_block>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
            </section>
        </section>
        <section ids="troubleshooting" names="troubleshooting 故障排除">
            <title>故障排除</title>
            <paragraph>If you get the error <title_reference>Invalid get index '0' (on base: 'PackedStringArray').</title_reference> for the line <title_reference>var voice_id = voices[0]</title_reference>, check if there are any items in <title_reference>voices</title_reference>. If not:</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>All users: make sure you enabled <strong>Text to Speech</strong> in project settings</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Linux users: ensure you installed the system-specific libraries for text to speech</paragraph>
                </list_item>
            </bullet_list>
        </section>
        <section ids="best-practices" names="best\ practices 最佳实践">
            <title>最佳实践</title>
            <paragraph>就盲人玩家的理想游玩体验而言，文本转语音的最佳实践是将输出发送到玩家的屏幕阅读器。这样可以保留用户设定的语言、语速、音调等选择，还可以实现一些高级功能，例如允许玩家在文本中快进和快退。目前，Godot 还没有提供这种级别的集成。</paragraph>
            <paragraph>考虑到 Godot 文本转语音 API 目前的状态，最佳实践包括：</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>开发游戏时启用文本转语音，确保读音正确</paragraph>
                </list_item>
                <list_item>
                    <paragraph>允许玩家控制使用哪种语音，对选择进行存储/持久化，能够在后续游玩时使用</paragraph>
                </list_item>
                <list_item>
                    <paragraph>允许玩家控制发言的速率，对选择进行存储/持久化，能够在后续游玩时使用</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>这样盲人玩家不使用屏幕阅读器也能够达到最灵活舒适的状态，不会让人感到沮丧或者被歧视。</paragraph>
        </section>
        <section ids="caveats-and-other-information" names="caveats\ and\ other\ information 注意事项和其他信息">
            <title>注意事项和其他信息</title>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>调用 <title_reference>tts_speak</title_reference> 和 <title_reference>tts_stop</title_reference> 时会有延迟。实际延迟的时间会根据操作系统和机器的配置而有所不同。在 Android 和 Web 平台尤为明显，因为部分语音基于 Web 服务，播放的实际时间取决于服务器负载、网络延迟等因素。</paragraph>
                </list_item>
                <list_item>
                    <paragraph>非英语文本需要安装并使用正确语音后才能正常工作。在 Windows 上，可以按照<reference name="这篇文章" refuri="https://www.ghacks.net/2018/08/11/unlock-all-windows-10-tts-voices-system-wide-to-get-more-of-them/">这篇文章</reference>的内容来启用额外语言的语音。</paragraph>
                </list_item>
                <list_item>
                    <paragraph>元音变音等非 ASCII 字符的正确发音需要选择正确的语音。</paragraph>
                </list_item>
                <list_item>
                    <paragraph>盲人玩家使用的屏幕阅读器有很多种，包括 JAWS、NVDA、VoiceOver、Narrator 等。</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Windows 文本转语音 API 的性能通常比其他系统中对应的 API 要好（例如 <literal>tts_stop</literal> 后跟 <literal>tts_speak</literal> 能够立即朗读新消息）。</paragraph>
                </list_item>
            </bullet_list>
            <target ids="this-article" names="this\ article" refuri="https://www.ghacks.net/2018/08/11/unlock-all-windows-10-tts-voices-system-wide-to-get-more-of-them/"></target>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="翻译状态" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/tutorials/platform/web/html5_shell_classref.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <target refid="doc-html5-shell-classref"></target>
    <section ids="html5-shell-class-reference doc-html5-shell-classref" names="html5\ shell\ class\ reference html5\ shell\ 类参考 doc_html5_shell_classref">
        <title>HTML5 shell 类参考</title>
        <paragraph>为 Web 导出的项目向 JavaScript 环境暴露了 <reference internal="True" refid="Engine" reftitle="Engine"><literal classes="xref js js-class">Engine()</literal></reference> 类，从而可以更好地控制引擎的启动过程。</paragraph>
        <paragraph>这个API是以异步的方式建立的, 需要对 <reference name="Promises" refuri="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Using_promises">Promises</reference> 的基本理解.</paragraph>
        <section ids="engine" names="engine 引擎">
            <title>引擎</title>
            <paragraph><literal>Engine</literal> 类提供了在Web上加载和启动导出项目的方法. 对于默认的导出设置, 这已经是导出的HTML页面的一部分. 要了解 <literal>Engine</literal> 类的实际使用, 请参见 <reference internal="True" refuri="customizing_html5_shell#doc-customizing-html5-shell"><inline classes="std std-ref">自定义Web导出的HTML 页面</inline></reference> .</paragraph>
            <section ids="static-methods" names="static\ methods 静态方法">
                <title>静态方法</title>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="9"></colspec>
                        <colspec colwidth="95"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph>Promise</paragraph>
                                </entry>
                                <entry>
                                    <paragraph><reference internal="True" refid="Engine.load" reftitle="Engine.load"><literal classes="xref js js-attr">load</literal></reference> <strong>(</strong> string basePath <strong>)</strong></paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>void</paragraph>
                                </entry>
                                <entry>
                                    <paragraph><reference internal="True" refid="Engine.unload" reftitle="Engine.unload"><literal classes="xref js js-attr">unload</literal></reference> <strong>(</strong> <strong>)</strong></paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>boolean</paragraph>
                                </entry>
                                <entry>
                                    <paragraph><reference internal="True" refid="Engine.isWebGLAvailable" reftitle="Engine.isWebGLAvailable"><literal classes="xref js js-attr">isWebGLAvailable</literal></reference> <strong>(</strong> <emphasis>[ number majorVersion=1 ]</emphasis> <strong>)</strong></paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
            </section>
            <section ids="instance-methods" names="instance\ methods 实例方法">
                <title>实例方法</title>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="9"></colspec>
                        <colspec colwidth="111"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph>Promise</paragraph>
                                </entry>
                                <entry>
                                    <paragraph><reference internal="True" refid="Engine.prototype.init" reftitle="Engine.prototype.init"><literal classes="xref js js-attr">init</literal></reference> <strong>(</strong> <emphasis>[ string basePath ]</emphasis> <strong>)</strong></paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>Promise</paragraph>
                                </entry>
                                <entry>
                                    <paragraph><reference internal="True" refid="Engine.prototype.preloadFile" reftitle="Engine.prototype.preloadFile"><literal classes="xref js js-attr">preloadFile</literal></reference> <strong>(</strong> string|ArrayBuffer file <emphasis>[, string path ]</emphasis> <strong>)</strong></paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>Promise</paragraph>
                                </entry>
                                <entry>
                                    <paragraph><reference internal="True" refid="Engine.prototype.start" reftitle="Engine.prototype.start"><literal classes="xref js js-attr">start</literal></reference> <strong>(</strong> EngineConfig override <strong>)</strong></paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>Promise</paragraph>
                                </entry>
                                <entry>
                                    <paragraph><reference internal="True" refid="Engine.prototype.startGame" reftitle="Engine.prototype.startGame"><literal classes="xref js js-attr">startGame</literal></reference> <strong>(</strong> EngineConfig override <strong>)</strong></paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>void</paragraph>
                                </entry>
                                <entry>
                                    <paragraph><reference internal="True" refid="Engine.prototype.copyToFS" reftitle="Engine.prototype.copyToFS"><literal classes="xref js js-attr">copyToFS</literal></reference> <strong>(</strong> string path, ArrayBuffer buffer <strong>)</strong></paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>void</paragraph>
                                </entry>
                                <entry>
                                    <paragraph><reference internal="True" refid="Engine.prototype.requestQuit" reftitle="Engine.prototype.requestQuit"><literal classes="xref js js-attr">requestQuit</literal></reference> <strong>(</strong> <strong>)</strong></paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <index entries="['single',\ 'Engine()\ (类)',\ 'Engine',\ '',\ None]"></index>
                <desc classes="js class" desctype="class" domain="js" noindex="False" objtype="class">
                    <desc_signature classes="sig sig-object js sig sig-object" fullname="Engine" ids="Engine" module="True" object="True"><desc_annotation xml:space="preserve"><desc_sig_keyword classes="k k">class</desc_sig_keyword><desc_sig_space classes="w w">  </desc_sig_space></desc_annotation><desc_name classes="sig-name descname sig-name descname" xml:space="preserve"><desc_sig_name classes="n n">Engine</desc_sig_name></desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n n">initConfig</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>用给定的配置创建一个新的引擎实例.</paragraph>
                        <field_list>
                            <field>
                                <field_name>参数</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong>initConfig</literal_strong> (<inline><reference internal="True" refid="EngineConfig" reftitle="EngineConfig"><literal classes="xref js js-func">EngineConfig()</literal></reference></inline>) -- 此实例的初始配置.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                        <paragraph><strong>静态方法</strong></paragraph>
                        <index entries="['single',\ 'Engine.load()\ (Engine\ 方法)',\ 'Engine.load',\ '',\ None]"></index>
                        <desc classes="js function" desctype="function" domain="js" noindex="False" objtype="function">
                            <desc_signature classes="sig sig-object js sig sig-object" fullname="Engine.load" ids="Engine.load" module="True" object="Engine"><desc_addname classes="sig-prename descclassname sig-prename descclassname" xml:space="preserve"><desc_sig_name classes="n n">Engine</desc_sig_name><desc_sig_punctuation classes="p p">.</desc_sig_punctuation></desc_addname><desc_name classes="sig-name descname sig-name descname" xml:space="preserve"><desc_sig_name classes="n n">load</desc_sig_name></desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n n">basePath</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>从指定的基本路径加载引擎.</paragraph>
                                <field_list>
                                    <field>
                                        <field_name>参数</field_name>
                                        <field_body>
                                            <bullet_list>
                                                <list_item>
                                                    <paragraph><literal_strong>basePath</literal_strong> (<inline><literal classes="xref js js-func">string()</literal></inline>) -- 引擎加载的底层路径.</paragraph>
                                                </list_item>
                                            </bullet_list>
                                        </field_body>
                                    </field>
                                    <field>
                                        <field_name>返回</field_name>
                                        <field_body>
                                            <paragraph>一个一旦加载引擎就会解析的Promise.</paragraph>
                                        </field_body>
                                    </field>
                                    <field>
                                        <field_name>返回类型</field_name>
                                        <field_body>
                                            <paragraph>Promise</paragraph>
                                        </field_body>
                                    </field>
                                </field_list>
                            </desc_content>
                        </desc>
                        <index entries="['single',\ 'Engine.unload()\ (Engine\ 方法)',\ 'Engine.unload',\ '',\ None]"></index>
                        <desc classes="js function" desctype="function" domain="js" noindex="False" objtype="function">
                            <desc_signature classes="sig sig-object js sig sig-object" fullname="Engine.unload" ids="Engine.unload" module="True" object="Engine"><desc_addname classes="sig-prename descclassname sig-prename descclassname" xml:space="preserve"><desc_sig_name classes="n n">Engine</desc_sig_name><desc_sig_punctuation classes="p p">.</desc_sig_punctuation></desc_addname><desc_name classes="sig-name descname sig-name descname" xml:space="preserve"><desc_sig_name classes="n n">unload</desc_sig_name></desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>卸载引擎以释放内存.</paragraph>
                                <paragraph>该方法可以被配置为自动调用。请参阅 <reference internal="True" refid="unloadAfterInit" reftitle="unloadAfterInit"><literal classes="xref js js-attr">unloadAfterInit</literal></reference>。</paragraph>
                            </desc_content>
                        </desc>
                        <index entries="['single',\ 'Engine.isWebGLAvailable()\ (Engine\ 方法)',\ 'Engine.isWebGLAvailable',\ '',\ None]"></index>
                        <desc classes="js function" desctype="function" domain="js" noindex="False" objtype="function">
                            <desc_signature classes="sig sig-object js sig sig-object" fullname="Engine.isWebGLAvailable" ids="Engine.isWebGLAvailable" module="True" object="Engine"><desc_addname classes="sig-prename descclassname sig-prename descclassname" xml:space="preserve"><desc_sig_name classes="n n">Engine</desc_sig_name><desc_sig_punctuation classes="p p">.</desc_sig_punctuation></desc_addname><desc_name classes="sig-name descname sig-name descname" xml:space="preserve"><desc_sig_name classes="n n">isWebGLAvailable</desc_sig_name></desc_name><desc_parameterlist xml:space="preserve"><desc_optional xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n n">majorVersion=1</desc_sig_name></desc_parameter></desc_optional></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>检查 WebGL 是否可用.(可选)指定要检查的特定 WebGL 版本.</paragraph>
                                <field_list>
                                    <field>
                                        <field_name>参数</field_name>
                                        <field_body>
                                            <bullet_list>
                                                <list_item>
                                                    <paragraph><literal_strong>majorVersion</literal_strong> (<inline><literal classes="xref js js-func">number()</literal></inline>) -- 要检查的主要WebGL版本.</paragraph>
                                                </list_item>
                                            </bullet_list>
                                        </field_body>
                                    </field>
                                    <field>
                                        <field_name>返回</field_name>
                                        <field_body>
                                            <paragraph>如果给定的WebGL的主要版本是可用的.</paragraph>
                                        </field_body>
                                    </field>
                                    <field>
                                        <field_name>返回类型</field_name>
                                        <field_body>
                                            <paragraph>boolean</paragraph>
                                        </field_body>
                                    </field>
                                </field_list>
                            </desc_content>
                        </desc>
                        <paragraph><strong>实例方法</strong></paragraph>
                        <index entries="['single',\ 'Engine.prototype.init()\ (Engine.prototype\ 方法)',\ 'Engine.prototype.init',\ '',\ None]"></index>
                        <desc classes="js function" desctype="function" domain="js" noindex="False" objtype="function">
                            <desc_signature classes="sig sig-object js sig sig-object" fullname="Engine.prototype.init" ids="Engine.prototype.init" module="True" object="Engine.prototype"><desc_addname classes="sig-prename descclassname sig-prename descclassname" xml:space="preserve"><desc_sig_name classes="n n">Engine</desc_sig_name><desc_sig_punctuation classes="p p">.</desc_sig_punctuation><desc_sig_name classes="n n">prototype</desc_sig_name><desc_sig_punctuation classes="p p">.</desc_sig_punctuation></desc_addname><desc_name classes="sig-name descname sig-name descname" xml:space="preserve"><desc_sig_name classes="n n">init</desc_sig_name></desc_name><desc_parameterlist xml:space="preserve"><desc_optional xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n n">basePath</desc_sig_name></desc_parameter></desc_optional></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>初始化引擎实例. 如果引擎还没有被加载, 可以选择将基本路径传递给引擎来加载它. 参见 <reference internal="True" refid="Engine.load" reftitle="Engine.load"><literal classes="xref js js-meth">Engine.load()</literal></reference> .</paragraph>
                                <field_list>
                                    <field>
                                        <field_name>参数</field_name>
                                        <field_body>
                                            <bullet_list>
                                                <list_item>
                                                    <paragraph><literal_strong>basePath</literal_strong> (<inline><literal classes="xref js js-func">string()</literal></inline>) -- 引擎加载的底层路径.</paragraph>
                                                </list_item>
                                            </bullet_list>
                                        </field_body>
                                    </field>
                                    <field>
                                        <field_name>返回</field_name>
                                        <field_body>
                                            <paragraph>一旦引擎被加载和初始化, 一个 <literal>Promise</literal> 就会被解析.</paragraph>
                                        </field_body>
                                    </field>
                                    <field>
                                        <field_name>返回类型</field_name>
                                        <field_body>
                                            <paragraph>Promise</paragraph>
                                        </field_body>
                                    </field>
                                </field_list>
                            </desc_content>
                        </desc>
                        <index entries="['single',\ 'Engine.prototype.preloadFile()\ (Engine.prototype\ 方法)',\ 'Engine.prototype.preloadFile',\ '',\ None]"></index>
                        <desc classes="js function" desctype="function" domain="js" noindex="False" objtype="function">
                            <desc_signature classes="sig sig-object js sig sig-object" fullname="Engine.prototype.preloadFile" ids="Engine.prototype.preloadFile" module="True" object="Engine.prototype"><desc_addname classes="sig-prename descclassname sig-prename descclassname" xml:space="preserve"><desc_sig_name classes="n n">Engine</desc_sig_name><desc_sig_punctuation classes="p p">.</desc_sig_punctuation><desc_sig_name classes="n n">prototype</desc_sig_name><desc_sig_punctuation classes="p p">.</desc_sig_punctuation></desc_addname><desc_name classes="sig-name descname sig-name descname" xml:space="preserve"><desc_sig_name classes="n n">preloadFile</desc_sig_name></desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n n">file</desc_sig_name></desc_parameter><desc_optional xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n n">path</desc_sig_name></desc_parameter></desc_optional></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>加载一个文件, 这样一旦运行, 它就可以在实例的文件系统中使用. 必须在启动实例 <strong>之前</strong> 调用.</paragraph>
                                <paragraph>如果没有提供, <literal>path</literal> 是从加载文件的URL中导出的.</paragraph>
                                <field_list>
                                    <field>
                                        <field_name>参数</field_name>
                                        <field_body>
                                            <bullet_list>
                                                <list_item>
                                                    <paragraph><literal_strong>file</literal_strong> (<inline><literal classes="xref js js-func">string|ArrayBuffer()</literal></inline>) -- 要预装的文件, 如果是一个 <literal>string</literal> , 文件将从该路径加载. 如果是一个  <literal>ArrayBuffer</literal> 或一个视图, 该缓冲区将被用作文件的内容.</paragraph>
                                                </list_item>
                                                <list_item>
                                                    <paragraph><literal_strong>path</literal_strong> (<inline><literal classes="xref js js-func">string()</literal></inline>) -- 用于访问文件的路径. 如果 <literal>file</literal> 不是一个字符串, 则为必需的.</paragraph>
                                                </list_item>
                                            </bullet_list>
                                        </field_body>
                                    </field>
                                    <field>
                                        <field_name>返回</field_name>
                                        <field_body>
                                            <paragraph>一个一旦文件被加载就会解析的Promise.</paragraph>
                                        </field_body>
                                    </field>
                                    <field>
                                        <field_name>返回类型</field_name>
                                        <field_body>
                                            <paragraph>Promise</paragraph>
                                        </field_body>
                                    </field>
                                </field_list>
                            </desc_content>
                        </desc>
                        <index entries="['single',\ 'Engine.prototype.start()\ (Engine.prototype\ 方法)',\ 'Engine.prototype.start',\ '',\ None]"></index>
                        <desc classes="js function" desctype="function" domain="js" noindex="False" objtype="function">
                            <desc_signature classes="sig sig-object js sig sig-object" fullname="Engine.prototype.start" ids="Engine.prototype.start" module="True" object="Engine.prototype"><desc_addname classes="sig-prename descclassname sig-prename descclassname" xml:space="preserve"><desc_sig_name classes="n n">Engine</desc_sig_name><desc_sig_punctuation classes="p p">.</desc_sig_punctuation><desc_sig_name classes="n n">prototype</desc_sig_name><desc_sig_punctuation classes="p p">.</desc_sig_punctuation></desc_addname><desc_name classes="sig-name descname sig-name descname" xml:space="preserve"><desc_sig_name classes="n n">start</desc_sig_name></desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n n">override</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>使用给定的覆盖配置(如果有的话)启动引擎实例. <reference internal="True" refid="Engine.prototype.startGame" reftitle="Engine.prototype.startGame"><literal classes="xref js js-meth">startGame</literal></reference> 可以在典型情况下代替使用.</paragraph>
                                <paragraph>如果实例没有被初始化, 它将初始化它. 对于手动初始化, 请参阅 <reference internal="True" refid="Engine.prototype.init" reftitle="Engine.prototype.init"><literal classes="xref js js-meth">init</literal></reference> . 引擎必须事先加载.</paragraph>
                                <paragraph>如果在页面上找不到画布, 或者没有在配置中指定, 则失败.</paragraph>
                                <field_list>
                                    <field>
                                        <field_name>参数</field_name>
                                        <field_body>
                                            <bullet_list>
                                                <list_item>
                                                    <paragraph><literal_strong>override</literal_strong> (<inline><reference internal="True" refid="EngineConfig" reftitle="EngineConfig"><literal classes="xref js js-func">EngineConfig()</literal></reference></inline>) -- 一个可选的配置重写.</paragraph>
                                                </list_item>
                                            </bullet_list>
                                        </field_body>
                                    </field>
                                    <field>
                                        <field_name>返回</field_name>
                                        <field_body>
                                            <paragraph>引擎启动后解析的Promise.</paragraph>
                                        </field_body>
                                    </field>
                                    <field>
                                        <field_name>返回类型</field_name>
                                        <field_body>
                                            <paragraph>Promise</paragraph>
                                        </field_body>
                                    </field>
                                </field_list>
                            </desc_content>
                        </desc>
                        <index entries="['single',\ 'Engine.prototype.startGame()\ (Engine.prototype\ 方法)',\ 'Engine.prototype.startGame',\ '',\ None]"></index>
                        <desc classes="js function" desctype="function" domain="js" noindex="False" objtype="function">
                            <desc_signature classes="sig sig-object js sig sig-object" fullname="Engine.prototype.startGame" ids="Engine.prototype.startGame" module="True" object="Engine.prototype"><desc_addname classes="sig-prename descclassname sig-prename descclassname" xml:space="preserve"><desc_sig_name classes="n n">Engine</desc_sig_name><desc_sig_punctuation classes="p p">.</desc_sig_punctuation><desc_sig_name classes="n n">prototype</desc_sig_name><desc_sig_punctuation classes="p p">.</desc_sig_punctuation></desc_addname><desc_name classes="sig-name descname sig-name descname" xml:space="preserve"><desc_sig_name classes="n n">startGame</desc_sig_name></desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n n">override</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>使用给定的配置覆盖(如果有的话)启动游戏实例.</paragraph>
                                <paragraph>如果实例没有被初始化, 将初始化它. 对于手动初始化, 见 <reference internal="True" refid="Engine.prototype.init" reftitle="Engine.prototype.init"><literal classes="xref js js-meth">init</literal></reference> .</paragraph>
                                <paragraph>如果未加载引擎, 则将加载引擎, 并预加载主pck.</paragraph>
                                <paragraph>该方法将初始配置(或重写)时同时设置 <reference internal="True" refid="executable" reftitle="executable"><literal classes="xref js js-attr">executable</literal></reference> 和 <reference internal="True" refid="mainPack" reftitle="mainPack"><literal classes="xref js js-attr">mainPack</literal></reference> 属性(通常由编辑器在导出过程中完成).</paragraph>
                                <field_list>
                                    <field>
                                        <field_name>参数</field_name>
                                        <field_body>
                                            <bullet_list>
                                                <list_item>
                                                    <paragraph><literal_strong>override</literal_strong> (<inline><reference internal="True" refid="EngineConfig" reftitle="EngineConfig"><literal classes="xref js js-func">EngineConfig()</literal></reference></inline>) -- 一个可选的配置重写.</paragraph>
                                                </list_item>
                                            </bullet_list>
                                        </field_body>
                                    </field>
                                    <field>
                                        <field_name>返回</field_name>
                                        <field_body>
                                            <paragraph>一旦游戏开始就会解析Promise.</paragraph>
                                        </field_body>
                                    </field>
                                    <field>
                                        <field_name>返回类型</field_name>
                                        <field_body>
                                            <paragraph>Promise</paragraph>
                                        </field_body>
                                    </field>
                                </field_list>
                            </desc_content>
                        </desc>
                        <index entries="['single',\ 'Engine.prototype.copyToFS()\ (Engine.prototype\ 方法)',\ 'Engine.prototype.copyToFS',\ '',\ None]"></index>
                        <desc classes="js function" desctype="function" domain="js" noindex="False" objtype="function">
                            <desc_signature classes="sig sig-object js sig sig-object" fullname="Engine.prototype.copyToFS" ids="Engine.prototype.copyToFS" module="True" object="Engine.prototype"><desc_addname classes="sig-prename descclassname sig-prename descclassname" xml:space="preserve"><desc_sig_name classes="n n">Engine</desc_sig_name><desc_sig_punctuation classes="p p">.</desc_sig_punctuation><desc_sig_name classes="n n">prototype</desc_sig_name><desc_sig_punctuation classes="p p">.</desc_sig_punctuation></desc_addname><desc_name classes="sig-name descname sig-name descname" xml:space="preserve"><desc_sig_name classes="n n">copyToFS</desc_sig_name></desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n n">path</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n n">buffer</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>在指定的 <literal>path</literal> 上创建一个文件, 在实例的文件系统中将通过该文件创建为 <literal>buffer</literal> .</paragraph>
                                <field_list>
                                    <field>
                                        <field_name>参数</field_name>
                                        <field_body>
                                            <bullet_list>
                                                <list_item>
                                                    <paragraph><literal_strong>path</literal_strong> (<inline><literal classes="xref js js-func">string()</literal></inline>) -- 将创建文件的位置.</paragraph>
                                                </list_item>
                                                <list_item>
                                                    <paragraph><literal_strong>buffer</literal_strong> (<inline><literal classes="xref js js-func">ArrayBuffer()</literal></inline>) -- 文件的内容。</paragraph>
                                                </list_item>
                                            </bullet_list>
                                        </field_body>
                                    </field>
                                </field_list>
                            </desc_content>
                        </desc>
                        <index entries="['single',\ 'Engine.prototype.requestQuit()\ (Engine.prototype\ 方法)',\ 'Engine.prototype.requestQuit',\ '',\ None]"></index>
                        <desc classes="js function" desctype="function" domain="js" noindex="False" objtype="function">
                            <desc_signature classes="sig sig-object js sig sig-object" fullname="Engine.prototype.requestQuit" ids="Engine.prototype.requestQuit" module="True" object="Engine.prototype"><desc_addname classes="sig-prename descclassname sig-prename descclassname" xml:space="preserve"><desc_sig_name classes="n n">Engine</desc_sig_name><desc_sig_punctuation classes="p p">.</desc_sig_punctuation><desc_sig_name classes="n n">prototype</desc_sig_name><desc_sig_punctuation classes="p p">.</desc_sig_punctuation></desc_addname><desc_name classes="sig-name descname sig-name descname" xml:space="preserve"><desc_sig_name classes="n n">requestQuit</desc_sig_name></desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>请求退出当前实例。</paragraph>
                                <paragraph>这就类似用户在窗口管理器中按下关闭按钮, 如果引擎已经崩溃, 或者卡在循环中, 就不会有任何效果.</paragraph>
                            </desc_content>
                        </desc>
                    </desc_content>
                </desc>
            </section>
        </section>
        <section ids="engine-configuration" names="engine\ configuration 引擎配置">
            <title>引擎配置</title>
            <paragraph>用于根据 Godot 导出选项配置引擎实例的对象, 如果需要, 可重写自定义 HTML 模板中的对象.</paragraph>
            <section ids="properties" names="properties 属性">
                <title>属性</title>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="19"></colspec>
                        <colspec colwidth="31"></colspec>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph>类型</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>名称</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>boolean</paragraph>
                                </entry>
                                <entry>
                                    <paragraph><reference internal="True" refid="unloadAfterInit" reftitle="unloadAfterInit"><literal classes="xref js js-attr">unloadAfterInit</literal></reference></paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>HTMLCanvasElement</paragraph>
                                </entry>
                                <entry>
                                    <paragraph><reference internal="True" refid="canvas" reftitle="canvas"><literal classes="xref js js-attr">canvas</literal></reference></paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>字符串</paragraph>
                                </entry>
                                <entry>
                                    <paragraph><reference internal="True" refid="executable" reftitle="executable"><literal classes="xref js js-attr">executable</literal></reference></paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>字符串</paragraph>
                                </entry>
                                <entry>
                                    <paragraph><reference internal="True" refid="mainPack" reftitle="mainPack"><literal classes="xref js js-attr">mainPack</literal></reference></paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>字符串</paragraph>
                                </entry>
                                <entry>
                                    <paragraph><reference internal="True" refid="locale" reftitle="locale"><literal classes="xref js js-attr">locale</literal></reference></paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>数字</paragraph>
                                </entry>
                                <entry>
                                    <paragraph><reference internal="True" refid="canvasResizePolicy" reftitle="canvasResizePolicy"><literal classes="xref js js-attr">canvasResizePolicy</literal></reference></paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>Array.&lt;string&gt;</paragraph>
                                </entry>
                                <entry>
                                    <paragraph><reference internal="True" refid="args" reftitle="args"><literal classes="xref js js-attr">args</literal></reference></paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>函数</paragraph>
                                </entry>
                                <entry>
                                    <paragraph><reference internal="True" refid="onExecute" reftitle="onExecute"><literal classes="xref js js-attr">onExecute</literal></reference></paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>函数</paragraph>
                                </entry>
                                <entry>
                                    <paragraph><reference internal="True" refid="onExit" reftitle="onExit"><literal classes="xref js js-attr">onExit</literal></reference></paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>函数</paragraph>
                                </entry>
                                <entry>
                                    <paragraph><reference internal="True" refid="onProgress" reftitle="onProgress"><literal classes="xref js js-attr">onProgress</literal></reference></paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>函数</paragraph>
                                </entry>
                                <entry>
                                    <paragraph><reference internal="True" refid="onPrint" reftitle="onPrint"><literal classes="xref js js-attr">onPrint</literal></reference></paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>函数</paragraph>
                                </entry>
                                <entry>
                                    <paragraph><reference internal="True" refid="onPrintError" reftitle="onPrintError"><literal classes="xref js js-attr">onPrintError</literal></reference></paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <index entries="['single',\ 'EngineConfig\ (None\ 属性)',\ 'EngineConfig',\ '',\ None]"></index>
                <desc classes="js attribute" desctype="attribute" domain="js" noindex="False" objtype="attribute">
                    <desc_signature classes="sig sig-object js sig sig-object" fullname="EngineConfig" ids="EngineConfig" module="True" object="True"><desc_name classes="sig-name descname sig-name descname" xml:space="preserve"><desc_sig_name classes="n n">EngineConfig</desc_sig_name></desc_name></desc_signature>
                    <desc_content>
                        <paragraph>引擎配置对象. 这只是一个类型, 像创建一个普通对象一样创建它, 例如:</paragraph>
                        <paragraph><literal>const MyConfig = { executable: 'godot', unloadAfterInit: false }</literal></paragraph>
                        <paragraph><strong>属性说明</strong></paragraph>
                        <index entries="['single',\ 'unloadAfterInit\ (None\ 属性)',\ 'unloadAfterInit',\ '',\ None]"></index>
                        <desc classes="js attribute" desctype="attribute" domain="js" noindex="False" objtype="attribute">
                            <desc_signature classes="sig sig-object js sig sig-object" fullname="unloadAfterInit" ids="unloadAfterInit" module="True" object="True"><desc_name classes="sig-name descname sig-name descname" xml:space="preserve"><desc_sig_name classes="n n">unloadAfterInit</desc_sig_name></desc_name></desc_signature>
                            <desc_content>
                                <paragraph>在实例被初始化后, 是否自动卸载引擎.</paragraph>
                                <field_list>
                                    <field>
                                        <field_name>类型</field_name>
                                        <field_body>
                                            <paragraph>boolean</paragraph>
                                        </field_body>
                                    </field>
                                    <field>
                                        <field_name>值</field_name>
                                        <field_body>
                                            <paragraph><literal>true</literal></paragraph>
                                        </field_body>
                                    </field>
                                </field_list>
                            </desc_content>
                        </desc>
                        <index entries="['single',\ 'canvas\ (None\ 属性)',\ 'canvas',\ '',\ None]"></index>
                        <desc classes="js attribute" desctype="attribute" domain="js" noindex="False" objtype="attribute">
                            <desc_signature classes="sig sig-object js sig sig-object" fullname="canvas" ids="canvas" module="True" object="True"><desc_name classes="sig-name descname sig-name descname" xml:space="preserve"><desc_sig_name classes="n n">canvas</desc_sig_name></desc_name></desc_signature>
                            <desc_content>
                                <paragraph>要使用的 HTML DOM Canvas 对象。</paragraph>
                                <paragraph>默认情况下, 如果没有指定任何元素, 将使用文档中的第一个画布元素.</paragraph>
                                <field_list>
                                    <field>
                                        <field_name>类型</field_name>
                                        <field_body>
                                            <paragraph>HTMLCanvasElement</paragraph>
                                        </field_body>
                                    </field>
                                    <field>
                                        <field_name>值</field_name>
                                        <field_body>
                                            <paragraph><literal>null</literal></paragraph>
                                        </field_body>
                                    </field>
                                </field_list>
                            </desc_content>
                        </desc>
                        <index entries="['single',\ 'executable\ (None\ 属性)',\ 'executable',\ '',\ None]"></index>
                        <desc classes="js attribute" desctype="attribute" domain="js" noindex="False" objtype="attribute">
                            <desc_signature classes="sig sig-object js sig sig-object" fullname="executable" ids="executable" module="True" object="True"><desc_name classes="sig-name descname sig-name descname" xml:space="preserve"><desc_sig_name classes="n n">executable</desc_sig_name></desc_name></desc_signature>
                            <desc_content>
                                <paragraph>WASM 文件的名称，不含扩展名。（由 Godot 编辑器的导出过程设置）。</paragraph>
                                <field_list>
                                    <field>
                                        <field_name>类型</field_name>
                                        <field_body>
                                            <paragraph>字符串</paragraph>
                                        </field_body>
                                    </field>
                                    <field>
                                        <field_name>值</field_name>
                                        <field_body>
                                            <paragraph><literal>""</literal></paragraph>
                                        </field_body>
                                    </field>
                                </field_list>
                            </desc_content>
                        </desc>
                        <index entries="['single',\ 'mainPack\ (None\ 属性)',\ 'mainPack',\ '',\ None]"></index>
                        <desc classes="js attribute" desctype="attribute" domain="js" noindex="False" objtype="attribute">
                            <desc_signature classes="sig sig-object js sig sig-object" fullname="mainPack" ids="mainPack" module="True" object="True"><desc_name classes="sig-name descname sig-name descname" xml:space="preserve"><desc_sig_name classes="n n">mainPack</desc_sig_name></desc_name></desc_signature>
                            <desc_content>
                                <paragraph>要加载的游戏pck的更换名称. 否则使用可执行文件名.</paragraph>
                                <field_list>
                                    <field>
                                        <field_name>类型</field_name>
                                        <field_body>
                                            <paragraph>字符串</paragraph>
                                        </field_body>
                                    </field>
                                    <field>
                                        <field_name>值</field_name>
                                        <field_body>
                                            <paragraph><literal>null</literal></paragraph>
                                        </field_body>
                                    </field>
                                </field_list>
                            </desc_content>
                        </desc>
                        <index entries="['single',\ 'locale\ (None\ 属性)',\ 'locale',\ '',\ None]"></index>
                        <desc classes="js attribute" desctype="attribute" domain="js" noindex="False" objtype="attribute">
                            <desc_signature classes="sig sig-object js sig sig-object" fullname="locale" ids="locale" module="True" object="True"><desc_name classes="sig-name descname sig-name descname" xml:space="preserve"><desc_sig_name classes="n n">locale</desc_sig_name></desc_name></desc_signature>
                            <desc_content>
                                <paragraph>指定语言代码，为游戏选择合适的本地化。</paragraph>
                                <paragraph>如果没有指定，将使用浏览器的区域设置。请参阅完整的<reference internal="True" refuri="../../i18n/locales#doc-locales"><inline classes="std std-ref">支持的区域设置</inline></reference>列表。</paragraph>
                                <field_list>
                                    <field>
                                        <field_name>类型</field_name>
                                        <field_body>
                                            <paragraph>字符串</paragraph>
                                        </field_body>
                                    </field>
                                    <field>
                                        <field_name>值</field_name>
                                        <field_body>
                                            <paragraph><literal>null</literal></paragraph>
                                        </field_body>
                                    </field>
                                </field_list>
                            </desc_content>
                        </desc>
                        <index entries="['single',\ 'canvasResizePolicy\ (None\ 属性)',\ 'canvasResizePolicy',\ '',\ None]"></index>
                        <desc classes="js attribute" desctype="attribute" domain="js" noindex="False" objtype="attribute">
                            <desc_signature classes="sig sig-object js sig sig-object" fullname="canvasResizePolicy" ids="canvasResizePolicy" module="True" object="True"><desc_name classes="sig-name descname sig-name descname" xml:space="preserve"><desc_sig_name classes="n n">canvasResizePolicy</desc_sig_name></desc_name></desc_signature>
                            <desc_content>
                                <paragraph>画布大小调整策略决定了 Godot 应该如何调整画布的大小.</paragraph>
                                <paragraph><literal>0</literal> 意味着 Godot 不做任何大小调整。如果你想通过模板中的 javascript 代码来控制画布的大小，这将很有用。</paragraph>
                                <paragraph><literal>1</literal> 意味着 Godot 在启动时，以及通过引擎功能改变窗口大小时，会调整画布的大小。</paragraph>
                                <paragraph><literal>2</literal> 意味着 Godot 将调整画布的大小以匹配整个浏览器窗口。</paragraph>
                                <field_list>
                                    <field>
                                        <field_name>类型</field_name>
                                        <field_body>
                                            <paragraph>数字</paragraph>
                                        </field_body>
                                    </field>
                                    <field>
                                        <field_name>值</field_name>
                                        <field_body>
                                            <paragraph><literal>2</literal></paragraph>
                                        </field_body>
                                    </field>
                                </field_list>
                            </desc_content>
                        </desc>
                        <index entries="['single',\ 'args\ (None\ 属性)',\ 'args',\ '',\ None]"></index>
                        <desc classes="js attribute" desctype="attribute" domain="js" noindex="False" objtype="attribute">
                            <desc_signature classes="sig sig-object js sig sig-object" fullname="args" ids="args" module="True" object="True"><desc_name classes="sig-name descname sig-name descname" xml:space="preserve"><desc_sig_name classes="n n">args</desc_sig_name></desc_name></desc_signature>
                            <desc_content>
                                <paragraph>启动时作为命令行参数传递的参数。</paragraph>
                                <paragraph>请参阅<reference internal="True" refuri="../../editor/command_line_tutorial#doc-command-line-tutorial"><inline classes="std std-ref">命令行教程</inline></reference>。</paragraph>
                                <paragraph><strong>注意</strong>：<reference internal="True" refid="Engine.prototype.startGame" reftitle="Engine.prototype.startGame"><literal classes="xref js js-meth">startGame</literal></reference> 将始终添加 <literal>--main-pack</literal> 参数。</paragraph>
                                <field_list>
                                    <field>
                                        <field_name>类型</field_name>
                                        <field_body>
                                            <paragraph>Array.&lt;string&gt;</paragraph>
                                        </field_body>
                                    </field>
                                    <field>
                                        <field_name>值</field_name>
                                        <field_body>
                                            <paragraph><literal>[]</literal></paragraph>
                                        </field_body>
                                    </field>
                                </field_list>
                            </desc_content>
                        </desc>
                        <index entries="['single',\ 'onExecute()\ (內置函数)',\ 'onExecute',\ '',\ None]"></index>
                        <desc classes="js function" desctype="function" domain="js" noindex="False" objtype="function">
                            <desc_signature classes="sig sig-object js sig sig-object" fullname="onExecute" ids="onExecute" module="True" object="True"><desc_name classes="sig-name descname sig-name descname" xml:space="preserve"><desc_sig_name classes="n n">onExecute</desc_sig_name></desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n n">path</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n n">args</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>用于处理 Godot 的 <literal>OS.execute</literal> 调用的回调函数。</paragraph>
                                <paragraph>This is for example used in the Web Editor template to switch between Project Manager and editor, and for running the game.</paragraph>
                                <field_list>
                                    <field>
                                        <field_name>参数</field_name>
                                        <field_body>
                                            <bullet_list>
                                                <list_item>
                                                    <paragraph><literal_strong>path</literal_strong> (<inline><literal classes="xref js js-func">string()</literal></inline>) -- Godot想要执行的路径.</paragraph>
                                                </list_item>
                                                <list_item>
                                                    <paragraph><literal_strong>args</literal_strong> (<inline><literal classes="xref js js-func">Array.</literal></inline>) -- 要执行的 "command" 的参数.</paragraph>
                                                </list_item>
                                            </bullet_list>
                                        </field_body>
                                    </field>
                                </field_list>
                            </desc_content>
                        </desc>
                        <index entries="['single',\ 'onExit()\ (內置函数)',\ 'onExit',\ '',\ None]"></index>
                        <desc classes="js function" desctype="function" domain="js" noindex="False" objtype="function">
                            <desc_signature classes="sig sig-object js sig sig-object" fullname="onExit" ids="onExit" module="True" object="True"><desc_name classes="sig-name descname sig-name descname" xml:space="preserve"><desc_sig_name classes="n n">onExit</desc_sig_name></desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n n">status_code</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>当Godot实例退出时, 用于通知的回调函数.</paragraph>
                                <paragraph><strong>注意</strong>：如果引擎崩溃或无响应，该函数不会被调用。</paragraph>
                                <field_list>
                                    <field>
                                        <field_name>参数</field_name>
                                        <field_body>
                                            <bullet_list>
                                                <list_item>
                                                    <paragraph><literal_strong>status_code</literal_strong> (<inline><literal classes="xref js js-func">number()</literal></inline>) -- Godot 退出时返回的状态码。</paragraph>
                                                </list_item>
                                            </bullet_list>
                                        </field_body>
                                    </field>
                                </field_list>
                            </desc_content>
                        </desc>
                        <index entries="['single',\ 'onProgress()\ (內置函数)',\ 'onProgress',\ '',\ None]"></index>
                        <desc classes="js function" desctype="function" domain="js" noindex="False" objtype="function">
                            <desc_signature classes="sig sig-object js sig sig-object" fullname="onProgress" ids="onProgress" module="True" object="True"><desc_name classes="sig-name descname sig-name descname" xml:space="preserve"><desc_sig_name classes="n n">onProgress</desc_sig_name></desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n n">current</desc_sig_name></desc_parameter><desc_parameter xml:space="preserve"><desc_sig_name classes="n n">total</desc_sig_name></desc_parameter></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>回调函数，用于显示下载进度。</paragraph>
                                <paragraph>该函数在下载文件时每帧被调用一次, 所以没有必要使用 <literal>requestAnimationFrame()</literal> .</paragraph>
                                <paragraph>如果回调函数接收到的字节总数为0, 这意味着无法计算. 可能的原因包括:</paragraph>
                                <bullet_list bullet="-">
                                    <list_item>
                                        <paragraph>文件随服务器端分块压缩一起提供</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph>文件在Chromium上通过服务器端压缩提供</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph>并非所有文件下载都已开始(通常在没有多线程的服务器上)</paragraph>
                                    </list_item>
                                </bullet_list>
                                <field_list>
                                    <field>
                                        <field_name>参数</field_name>
                                        <field_body>
                                            <bullet_list>
                                                <list_item>
                                                    <paragraph><literal_strong>current</literal_strong> (<inline><literal classes="xref js js-func">number()</literal></inline>) -- 到目前为止, 已下载的字节数.</paragraph>
                                                </list_item>
                                                <list_item>
                                                    <paragraph><literal_strong>total</literal_strong> (<inline><literal classes="xref js js-func">number()</literal></inline>) -- 要下载的总字节数.</paragraph>
                                                </list_item>
                                            </bullet_list>
                                        </field_body>
                                    </field>
                                </field_list>
                            </desc_content>
                        </desc>
                        <index entries="['single',\ 'onPrint()\ (內置函数)',\ 'onPrint',\ '',\ None]"></index>
                        <desc classes="js function" desctype="function" domain="js" noindex="False" objtype="function">
                            <desc_signature classes="sig sig-object js sig sig-object" fullname="onPrint" ids="onPrint" module="True" object="True"><desc_name classes="sig-name descname sig-name descname" xml:space="preserve"><desc_sig_name classes="n n">onPrint</desc_sig_name></desc_name><desc_parameterlist xml:space="preserve"><desc_optional xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n n">...var_args</desc_sig_name></desc_parameter></desc_optional></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>用于处理标准输出流的回调函数. 这个方法通常应该只在调试页面使用.</paragraph>
                                <paragraph>默认情况下，使用的是 <literal>console.log()</literal>。</paragraph>
                                <field_list>
                                    <field>
                                        <field_name>参数</field_name>
                                        <field_body>
                                            <bullet_list>
                                                <list_item>
                                                    <paragraph><literal_strong>var_args</literal_strong> (<inline><literal classes="xref js js-func">*()</literal></inline>) -- 将要输出的可变数量的参数.</paragraph>
                                                </list_item>
                                            </bullet_list>
                                        </field_body>
                                    </field>
                                </field_list>
                            </desc_content>
                        </desc>
                        <index entries="['single',\ 'onPrintError()\ (內置函数)',\ 'onPrintError',\ '',\ None]"></index>
                        <desc classes="js function" desctype="function" domain="js" noindex="False" objtype="function">
                            <desc_signature classes="sig sig-object js sig sig-object" fullname="onPrintError" ids="onPrintError" module="True" object="True"><desc_name classes="sig-name descname sig-name descname" xml:space="preserve"><desc_sig_name classes="n n">onPrintError</desc_sig_name></desc_name><desc_parameterlist xml:space="preserve"><desc_optional xml:space="preserve"><desc_parameter xml:space="preserve"><desc_sig_name classes="n n">...var_args</desc_sig_name></desc_parameter></desc_optional></desc_parameterlist></desc_signature>
                            <desc_content>
                                <paragraph>用于处理标准错误流的回调函数. 这个方法通常应该只在调试页面使用.</paragraph>
                                <paragraph>默认情况下，使用的是 <literal>console.error()</literal>。</paragraph>
                                <field_list>
                                    <field>
                                        <field_name>参数</field_name>
                                        <field_body>
                                            <bullet_list>
                                                <list_item>
                                                    <paragraph><literal_strong>var_args</literal_strong> (<inline><literal classes="xref js js-func">*()</literal></inline>) -- 将要输出的可变数量的参数.</paragraph>
                                                </list_item>
                                            </bullet_list>
                                        </field_body>
                                    </field>
                                </field_list>
                            </desc_content>
                        </desc>
                    </desc_content>
                </desc>
                <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="翻译状态" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
            </section>
        </section>
    </section>
</document>

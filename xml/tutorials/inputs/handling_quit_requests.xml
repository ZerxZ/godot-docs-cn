<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/tutorials/inputs/handling_quit_requests.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <target refid="doc-handling-quit-requests"></target>
    <section ids="handling-quit-requests doc-handling-quit-requests" names="handling\ quit\ requests 处理退出请求 doc_handling_quit_requests">
        <title>处理退出请求</title>
        <section ids="quitting" names="quitting 退出">
            <title>退出</title>
            <paragraph>Most platforms have the option to request the application to quit. On
                desktops, this is usually done with the "x" icon on the window title bar.
                On mobile devices, the app can quit at any time while it is suspended
                to the background.</paragraph>
        </section>
        <section ids="handling-the-notification" names="handling\ the\ notification 处理通知">
            <title>处理通知</title>
            <paragraph>在桌面及 Web 平台上, <reference internal="True" refuri="../../classes/class_node#class-node"><inline classes="std std-ref">Node</inline></reference> 会在窗口管理器发出退出请求时接受到 <literal>MainLoop.NOTIFICATION_WM_QUIT_REQUEST</literal> 通知.</paragraph>
            <paragraph>处理通知的方法如下(在任何节点上):</paragraph>
            <container classes="sphinx-tabs" type="tab-element">
                <div aria-label="Tabbed content" role="tablist">
                    <button aria-controls="panel-0-R0RTY3JpcHQ=" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-0-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tab" tabindex="0">GDScript</button>
                    <button aria-controls="panel-0-QyM=" aria-selected="false" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-0-QyM=" name="QyM=" role="tab" tabindex="-1">C#</button>
                </div>
                <div aria-labelledby="tab-0-R0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-0-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve">func _notification(what):
    if what == NOTIFICATION_WM_CLOSE_REQUEST:
        get_tree().quit() # default behavior</literal_block>
                </div>
                <div aria-labelledby="tab-0-QyM=" classes="sphinx-tabs-panel code-tab group-tab" hidden="true" ids="panel-0-QyM=" name="QyM=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="csharp" linenos="False" xml:space="preserve">public override void _Notification(int what)
{
    if (what == NotificationWMCloseRequest)
        GetTree().Quit(); // default behavior
}</literal_block>
                </div>
            </container>
            <paragraph>It is important to note that by default, Godot apps have the built-in
                behavior to quit when quit is requested from the window manager. This
                can be changed, so that the user can take care of the complete quitting
                procedure:</paragraph>
            <container classes="sphinx-tabs" type="tab-element">
                <div aria-label="Tabbed content" role="tablist">
                    <button aria-controls="panel-1-R0RTY3JpcHQ=" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-1-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tab" tabindex="0">GDScript</button>
                    <button aria-controls="panel-1-QyM=" aria-selected="false" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-1-QyM=" name="QyM=" role="tab" tabindex="-1">C#</button>
                </div>
                <div aria-labelledby="tab-1-R0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-1-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve">get_tree().set_auto_accept_quit(false)</literal_block>
                </div>
                <div aria-labelledby="tab-1-QyM=" classes="sphinx-tabs-panel code-tab group-tab" hidden="true" ids="panel-1-QyM=" name="QyM=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="csharp" linenos="False" xml:space="preserve">GetTree().AutoAcceptQuit = false;</literal_block>
                </div>
            </container>
        </section>
        <section ids="on-mobile-devices" names="on\ mobile\ devices">
            <title>On mobile devices</title>
            <paragraph>There is no direct equivalent to <literal>NOTIFICATION_WM_CLOSE_REQUEST</literal> on mobile
                platforms. Due to the nature of mobile operating systems, the only place
                that you can run code prior to quitting is when the app is being suspended to
                the background. On both Android and iOS, the app can be killed while suspended
                at any time by either the user or the OS. A way to plan ahead for this
                possibility is to utilize <literal>NOTIFICATION_APPLICATION_PAUSED</literal> in order to
                perform any needed actions as the app is being suspended.</paragraph>
            <paragraph>On Android, pressing the Back button will exit the application if
                <strong>Application &gt; Config &gt; Quit</strong> On Go Back is checked in the Project Settings
                (which is the default). This will fire <literal>NOTIFICATION_WM_GO_BACK_REQUEST</literal>.</paragraph>
        </section>
        <section ids="sending-your-own-quit-notification" names="sending\ your\ own\ quit\ notification 发送你自己的退出通知">
            <title>发送你自己的退出通知</title>
            <paragraph>虽然可以通过调用 <reference internal="True" refuri="../../classes/class_scenetree#class-scenetree-method-quit"><inline classes="std std-ref">SceneTree.quit</inline></reference> 来强制关闭应用程序，但这样做不会向节点及场景树发送 <literal>NOTIFICATION_WM_CLOSE_REQUEST</literal>。通过调用 <reference internal="True" refuri="../../classes/class_scenetree#class-scenetree-method-quit"><inline classes="std std-ref">SceneTree.quit</inline></reference> 来退出程序会导致自定义动作无法完成（比如保存、确认退出或调试），即使你试图延后执行强制退出的那行代码。</paragraph>
            <paragraph>作为替代，如果你想通知节点以及场景树应用程序即将终止，你应当自己发送对应的通知：</paragraph>
            <container classes="sphinx-tabs" type="tab-element">
                <div aria-label="Tabbed content" role="tablist">
                    <button aria-controls="panel-2-R0RTY3JpcHQ=" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-2-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tab" tabindex="0">GDScript</button>
                    <button aria-controls="panel-2-QyM=" aria-selected="false" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-2-QyM=" name="QyM=" role="tab" tabindex="-1">C#</button>
                </div>
                <div aria-labelledby="tab-2-R0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-2-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve">get_tree().root.propagate_notification(NOTIFICATION_WM_CLOSE_REQUEST)</literal_block>
                </div>
                <div aria-labelledby="tab-2-QyM=" classes="sphinx-tabs-panel code-tab group-tab" hidden="true" ids="panel-2-QyM=" name="QyM=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="csharp" linenos="False" xml:space="preserve">GetTree().Root.PropagateNotification((int)NotificationWMCloseRequest);</literal_block>
                </div>
            </container>
            <paragraph>如此做将会通知所有的节点应用程序即将终止，但是不会关闭应用程序本身 <emphasis>（与3.X版本不同）</emphasis> 。如果需要达到之前的效果，则应当在发送通知后调用 <reference internal="True" refuri="../../classes/class_scenetree#class-scenetree-method-quit"><inline classes="std std-ref">SceneTree.quit</inline></reference> 。</paragraph>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="翻译状态" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

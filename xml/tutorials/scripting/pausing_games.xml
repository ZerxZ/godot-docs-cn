<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/tutorials/scripting/pausing_games.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <target refid="doc-pausing-games"></target>
    <section ids="pausing-games-and-process-mode doc-pausing-games" names="pausing\ games\ and\ process\ mode 暂停游戏与处理模式 doc_pausing_games">
        <title>暂停游戏与处理模式</title>
        <section ids="introduction" names="introduction 前言">
            <title>前言</title>
            <paragraph>在大多数游戏中，或多或少都会希望能够中断游戏去干些别的，例如休息一下或者修改选项。要非常细致地控制哪些可以暂停（哪些不可以）实现起来非常麻烦，所以 Godot 提供了一个简单的暂停框架。</paragraph>
        </section>
        <section ids="how-pausing-works" names="how\ pausing\ works 如何暂停工作">
            <title>如何暂停工作</title>
            <paragraph>要将游戏暂停，就必须设置暂停状态。将 <reference internal="True" refuri="../../classes/class_scenetree#class-scenetree-property-paused"><inline classes="std std-ref">SceneTree.paused</inline></reference> 属性赋值为 <literal>true</literal> 即可：</paragraph>
            <container classes="sphinx-tabs" type="tab-element">
                <div aria-label="Tabbed content" role="tablist">
                    <button aria-controls="panel-0-R0RTY3JpcHQ=" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-0-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tab" tabindex="0">GDScript</button>
                    <button aria-controls="panel-0-QyM=" aria-selected="false" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-0-QyM=" name="QyM=" role="tab" tabindex="-1">C#</button>
                </div>
                <div aria-labelledby="tab-0-R0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-0-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve">get_tree().paused = true</literal_block>
                </div>
                <div aria-labelledby="tab-0-QyM=" classes="sphinx-tabs-panel code-tab group-tab" hidden="true" ids="panel-0-QyM=" name="QyM=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="csharp" linenos="False" xml:space="preserve">GetTree().Paused = true;</literal_block>
                </div>
            </container>
            <paragraph>这样做会导致两件事。首先，所有节点的 2D 和 3D 物理都会停止。其次，根据处理模式的不同，某些节点的行为会停止或者开始。</paragraph>
            <note>
                <paragraph>游戏暂停时，可以通过 <literal>set_active</literal> 方法激活物理服务器。</paragraph>
            </note>
        </section>
        <section ids="process-modes" names="process\ modes 处理模式">
            <title>处理模式</title>
            <paragraph>Each node in Godot has a "Process Mode" that defines when it processes. It can
                be found and changed under a node's <reference internal="True" refuri="../../classes/class_node#class-node"><inline classes="std std-ref">Node</inline></reference> properties in the inspector.</paragraph>
            <image candidates="{'*': 'tutorials/scripting/img/pausemode.webp'}" uri="tutorials/scripting/img/pausemode.webp"></image>
            <paragraph>你也可以通过代码来修改该属性：</paragraph>
            <container classes="sphinx-tabs" type="tab-element">
                <div aria-label="Tabbed content" role="tablist">
                    <button aria-controls="panel-1-R0RTY3JpcHQ=" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-1-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tab" tabindex="0">GDScript</button>
                    <button aria-controls="panel-1-QyM=" aria-selected="false" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-1-QyM=" name="QyM=" role="tab" tabindex="-1">C#</button>
                </div>
                <div aria-labelledby="tab-1-R0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-1-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve">func _ready():
    process_mode = Node.PROCESS_MODE_PAUSABLE</literal_block>
                </div>
                <div aria-labelledby="tab-1-QyM=" classes="sphinx-tabs-panel code-tab group-tab" hidden="true" ids="panel-1-QyM=" name="QyM=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="csharp" linenos="False" xml:space="preserve">public override void _Ready()
{
    ProcessMode = Node.ProcessModeEnum.Pausable;
}</literal_block>
                </div>
            </container>
            <paragraph>各个模式对节点的要求是这样的：</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><strong>Inherit（继承）</strong> ：处理与否取决于父、祖父等等节点中第一个具有非 Inherit 状态的节点。</paragraph>
                </list_item>
                <list_item>
                    <paragraph><strong>Pausable</strong>: Process the node (and its children in Inherit
                        mode) only when the game is not paused.</paragraph>
                </list_item>
                <list_item>
                    <paragraph><strong>WhenPaused</strong>: Process the node (and its children in Inherit
                        mode) <emphasis>only</emphasis> when the game is paused.</paragraph>
                </list_item>
                <list_item>
                    <paragraph><strong>Always</strong>: Process the node (and its children in Inherit
                        mode) no matter what. Paused or not, this node will process.</paragraph>
                </list_item>
                <list_item>
                    <paragraph><strong>Disabled</strong>: The node (and its children in Inherit
                        mode) will not process at all.</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>默认情况下，所有节点的这个属性都是“Inherit”状态。如果父节点也是“Inherit”，那么就会去检查祖父节点，以此类推。如果祖宗们都没有更改过状态，那么就会使用 SceneTree 的暂停状态。也就是说，在游戏暂停时默认所有节点都会被暂停下来。节点停止处理时会发生不少事情。</paragraph>
            <paragraph>The <literal>_process</literal>, <literal>_physics_process</literal>, <literal>_input</literal>, and <literal>_input_event</literal> functions
                will not be called. However signals still work and cause their connected function to
                run, even if that function's script is attached to a node that is not currently being processed.</paragraph>
            <paragraph>动画节点会暂停它们的当前动画，音频节点会暂停它们的当前音频流，粒子也会暂停。游戏不再暂停时，它们都会自动继续运行。</paragraph>
            <paragraph>请注意有一点非常重要，即便游戏暂停时节点仍在进行处理，但物理默认是<strong>无法</strong>正常工作的。如前文所述，这是因为物理服务器会被关闭。游戏暂停时，可以通过 <literal>set_active</literal> 方法激活物理服务器。</paragraph>
        </section>
        <section ids="pause-menu-example" names="pause\ menu\ example 暂停菜单示例">
            <title>暂停菜单示例</title>
            <paragraph>Start by creating a button that will be used to pause the game.</paragraph>
            <paragraph>Create a menu containing a close button, set the <strong>Process Mode</strong> of the menu's root node
                to <strong>When Paused</strong>, then hide the menu. Since the process mode is set to <strong>When Paused</strong>
                on the root node, all its children and grandchildren will inherit that process mode.
                This way, all the nodes in the menu will start processing when the game is paused.</paragraph>
            <paragraph>Attach a script to the menu's root node, connect the pause button created earlier to a new method in
                the script, and inside that method pause the game and show the pause menu.</paragraph>
            <container classes="sphinx-tabs" type="tab-element">
                <div aria-label="Tabbed content" role="tablist">
                    <button aria-controls="panel-2-R0RTY3JpcHQ=" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-2-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tab" tabindex="0">GDScript</button>
                    <button aria-controls="panel-2-QyM=" aria-selected="false" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-2-QyM=" name="QyM=" role="tab" tabindex="-1">C#</button>
                </div>
                <div aria-labelledby="tab-2-R0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-2-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve">func _on_pause_button_pressed():
    get_tree().paused = true
    show()</literal_block>
                </div>
                <div aria-labelledby="tab-2-QyM=" classes="sphinx-tabs-panel code-tab group-tab" hidden="true" ids="panel-2-QyM=" name="QyM=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="csharp" linenos="False" xml:space="preserve">private void OnPauseButtonPressed()
{
    GetTree().Paused = true;
    Show();
}</literal_block>
                </div>
            </container>
            <paragraph>Finally, connect the menu's close button to a new method in the script. Inside that method,
                unpause the game and hide the pause menu.</paragraph>
            <container classes="sphinx-tabs" type="tab-element">
                <div aria-label="Tabbed content" role="tablist">
                    <button aria-controls="panel-3-R0RTY3JpcHQ=" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-3-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tab" tabindex="0">GDScript</button>
                    <button aria-controls="panel-3-QyM=" aria-selected="false" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-3-QyM=" name="QyM=" role="tab" tabindex="-1">C#</button>
                </div>
                <div aria-labelledby="tab-3-R0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-3-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve">func _on_close_button_pressed():
    hide()
    get_tree().paused = false</literal_block>
                </div>
                <div aria-labelledby="tab-3-QyM=" classes="sphinx-tabs-panel code-tab group-tab" hidden="true" ids="panel-3-QyM=" name="QyM=" role="tabpanel" tabindex="0">
                    <literal_block force="False" highlight_args="{}" language="csharp" linenos="False" xml:space="preserve">private void OnCloseButtonPressed()
{
    Hide();
    GetTree().Paused = false;
}</literal_block>
                </div>
            </container>
            <paragraph>You should now have a working pause menu.</paragraph>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="翻译状态" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

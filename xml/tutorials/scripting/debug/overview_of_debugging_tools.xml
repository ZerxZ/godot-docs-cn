<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/tutorials/scripting/debug/overview_of_debugging_tools.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <target refid="doc-overview-of-debugging-tools"></target>
    <section ids="overview-of-debugging-tools doc-overview-of-debugging-tools" names="overview\ of\ debugging\ tools 调试工具概述 doc_overview_of_debugging_tools">
        <title>调试工具概述</title>
        <paragraph>本指南将概述引擎中可用的调试工具.</paragraph>
        <paragraph>Godot自带强大的调试器和剖析器, 可以追踪bug, 在运行时检查你的游戏, 监控重要指标, 并测量性能. 它还提供了在运行游戏中可视化碰撞框和导航多边形的选项.</paragraph>
        <paragraph>最后, 你可以选择调试在远程设备上运行的游戏, 并在游戏运行时重新加载对你的场景或代码的修改.</paragraph>
        <section ids="debugger-panel" names="debugger\ panel 调试器面板">
            <title>调试器面板</title>
            <paragraph>Godot 的许多调试工具都是“调试器”面板的一部分，你可以在 <reference internal="True" refuri="debugger_panel#doc-debugger-panel"><inline classes="std std-ref">调试器面板</inline></reference> 中找到相关信息。</paragraph>
        </section>
        <section ids="debug-menu-options" names="debug\ menu\ options 调试菜单选项">
            <title>调试菜单选项</title>
            <paragraph>在编辑器中运行游戏时, 有几个常见的调试选项可以切换为开或关, 以帮助你调试游戏.</paragraph>
            <paragraph>你可以在编辑器菜单<strong>调试</strong>中找到这些选项。</paragraph>
            <image candidates="{'*': 'tutorials/scripting/debug/img/overview_debug.webp'}" uri="tutorials/scripting/debug/img/overview_debug.webp"></image>
            <paragraph>下面是这些选项的说明：</paragraph>
            <section ids="deploy-with-remote-debug" names="deploy\ with\ remote\ debug 使用远程调试部署">
                <title>使用远程调试部署</title>
                <paragraph>When this option is enabled, using one-click deploy will make the executable
                    attempt to connect to this computer's IP so the running project can be debugged.
                    This option is intended to be used for remote debugging (typically with a mobile
                    device).
                    You don't need to enable it to use the GDScript debugger locally.</paragraph>
            </section>
            <section ids="small-deploy-with-network-filesystem" names="small\ deploy\ with\ network\ filesystem 使用网络文件系统进行小型部署">
                <title>使用网络文件系统进行小型部署</title>
                <paragraph>这个选项加快了在远程设备上进行大足迹游戏的测试.</paragraph>
                <paragraph>When <strong>Small Deploy with Network Filesystem</strong> is on, instead of exporting the
                    full game, deploying the game builds a minimal executable. The editor then
                    provides files from the project over the network.</paragraph>
                <paragraph>另外，在 Android 系统上，游戏采用 USB 线部署，加快部署速度。</paragraph>
            </section>
            <section ids="visible-collision-shapes" names="visible\ collision\ shapes 显示碰撞区域">
                <title>显示碰撞区域</title>
                <paragraph>When this option is enabled, collision shapes and raycast nodes (for 2D and 3D)
                    will be visible in the running project.</paragraph>
            </section>
            <section ids="visible-paths" names="visible\ paths 显示路径">
                <title>显示路径</title>
                <paragraph>启用该选项时，路径节点的曲线资源将在项目运行时可见。</paragraph>
            </section>
            <section ids="visible-navigation" names="visible\ navigation 显示导航">
                <title>显示导航</title>
                <paragraph>启用该选项时，导航网格和多边形将在项目运行时可见。</paragraph>
            </section>
            <section ids="visible-avoidance" names="visible\ avoidance 显示避障">
                <title>显示避障</title>
                <paragraph>启用该选项时，避障对象的形状、半径、速度都将在项目运行时可见。</paragraph>
            </section>
            <section ids="debug-canvasitem-redraws" names="debug\ canvasitem\ redraws 调试\ canvasitem\ 重绘">
                <title>调试 CanvasItem 重绘</title>
                <paragraph>启用该选项时，2D 对象的重绘请求将在项目运行时可见（短暂的闪光）。可用于低处理器模式下的故障排除。</paragraph>
            </section>
            <section ids="synchronize-scene-changes" names="synchronize\ scene\ changes 同步场景修改">
                <title>同步场景修改</title>
                <paragraph>启用该选项时，在编辑器中对场景的任何修改都会被应用于正在运行的项目中。当使用于远程设备时，启用网络文件系统能提高编辑效率。</paragraph>
            </section>
            <section ids="synchronize-script-changes" names="synchronize\ script\ changes 同步脚本修改">
                <title>同步脚本修改</title>
                <paragraph>启用该选项时，任何保存的脚本都会被正在运行的项目重新加载。当使用于远程设备时，启用网络文件系统能提高编辑效率。</paragraph>
            </section>
            <section ids="keep-debug-server-open" names="keep\ debug\ server\ open 调试服务器保持开放">
                <title>调试服务器保持开放</title>
                <paragraph>启用该选项时，编辑器的调试服务器将保持开放，监听在编辑器本身之外开始的新会话。</paragraph>
            </section>
            <section ids="customize-run-instances" names="customize\ run\ instances... 自定义运行实例...">
                <title>自定义运行实例...</title>
                <paragraph>This opens a dialog allowing you to tell Godot to run multiple instances of the
                    game at once, and to specify the command line arguments for each instance. This
                    is especially useful when building and debugging multiplayer games.</paragraph>
                <image candidates="{'*': 'tutorials/scripting/debug/img/customize_run_instances.webp'}" uri="tutorials/scripting/debug/img/customize_run_instances.webp"></image>
                <section ids="enable-multiple-instances" names="enable\ multiple\ instances 启用多实例">
                    <title>启用多实例</title>
                    <paragraph>When this option is enabled, the editor will run multiple instances of the
                        project at once when you Run Project.</paragraph>
                    <paragraph>Below this checkbox is a selector to pick how many instances to run.</paragraph>
                    <paragraph>Checking the box and setting this to only 1 is the same as not checking this box
                        at all.</paragraph>
                </section>
                <section ids="main-run-args" names="main\ run\ args 主要运行参数">
                    <title>主要运行参数</title>
                    <paragraph>These are the arguments that will be passed to <strong>every</strong> instance of the project
                        when you Run Project, unless you select "Enabled" under "Override Main Run Args"
                        for a specific instance.</paragraph>
                    <paragraph>Note that these arguments are space-separated.</paragraph>
                    <tip>
                        <paragraph>These arguments can be accessed in your script by using
                            <reference internal="True" refuri="../../../classes/class_os#class-os-method-get-cmdline-args"><inline classes="std std-ref">get_cmdline_args</inline></reference>.</paragraph>
                    </tip>
                    <warning>
                        <paragraph>Even if you uncheck "Enable Multiple Instances" these arguments will be
                            passed when you Run Project.</paragraph>
                    </warning>
                </section>
                <section ids="main-feature-tags" names="main\ feature\ tags 主要特性标签">
                    <title>主要特性标签</title>
                    <paragraph>These are the feature tags that will be passed to <strong>every</strong> instance of the
                        project when you Run Project, unless you select "Enabled" under "Override Main
                        Tags" for a specific instance.</paragraph>
                </section>
                <section ids="override-main-run-args" names="override\ main\ run\ args 覆盖主要运行参数">
                    <title>覆盖主要运行参数</title>
                    <paragraph>When this is enabled, the arguments in the "Main Run Args" field will <strong>not be
                            passed</strong> to this specific instance of the project when you Run Project.</paragraph>
                </section>
                <section ids="launch-arguments" names="launch\ arguments">
                    <title>Launch Arguments</title>
                    <paragraph>These are the arguments that will be passed to this specific instance of the
                        project when you Run Project. They will be <strong>combined with</strong> the "Main Run Args"
                        unless you select "Enabled" under "Override Main Run Args".</paragraph>
                </section>
                <section ids="override-main-tags" names="override\ main\ tags">
                    <title>Override Main Tags</title>
                    <paragraph>When this is enabled, the tags in the "Main Feature Tags" field will <strong>not be
                            passed</strong> to this specific instance of the project when you Run Project.</paragraph>
                </section>
                <section ids="feature-tags" names="feature\ tags">
                    <title>Feature Tags</title>
                    <paragraph>These are the feature tags that will be passed to this specific instance of the
                        project when you Run Project. They will be <strong>combined with</strong> the "Main Feature
                        Tags" unless you select "Enabled" under "Override Main Tags".</paragraph>
                    <warning>
                        <paragraph>If you want to pass "User" arguments, that can be accessed with
                            <reference internal="True" refuri="../../../classes/class_os#class-os-method-get-cmdline-user-args"><inline classes="std std-ref">get_cmdline_user_args</inline></reference> then you
                            must prefix them with two dashes <strong>and a space</strong> like <title_reference>-- one two three</title_reference>.</paragraph>
                        <paragraph>Be aware that these dashes will apply to arguments added later in the
                            "Launch Arguments" on a per instance basis, which can cause some confusion
                            when combining the <title_reference>Main Run Args</title_reference> and <title_reference>Launch Arguments</title_reference>.</paragraph>
                        <paragraph>If you place <title_reference>-- one two three</title_reference> in the "Main Run Args" and <title_reference>-- four five
                                six</title_reference> in the "Launch Arguments" then the final command line arguments will be
                            <title_reference>one two three -- four five six</title_reference>. This is because the <title_reference>--</title_reference> is repeated in
                            the "Launch Arguments".</paragraph>
                    </warning>
                    <target refid="doc-debugger-tools-and-options"></target>
                </section>
            </section>
        </section>
        <section ids="script-editor-debug-tools-and-options doc-debugger-tools-and-options" names="script\ editor\ debug\ tools\ and\ options 脚本编辑器调试工具和选项 doc_debugger_tools_and_options">
            <title>脚本编辑器调试工具和选项</title>
            <paragraph>脚本编辑器有自己的一套调试工具，用于断点和两个选项。断点工具也可以在调试器的<strong>调试器</strong>选项卡中找到。</paragraph>
            <tip>
                <paragraph>You can create a breakpoint by clicking the gutter in the left of the script
                    editor (on the left of the line numbers). When hovering this gutter, you
                    will see a transparent red dot appearing, which turns into an opaque red dot
                    after the breakpoint is placed by clicking. Click the red dot again to
                    remove the breakpoint. Breakpoints created this way persist across editor
                    restarts, even if the script wasn't saved when exiting the editor.</paragraph>
                <paragraph>You can also use the <literal>breakpoint</literal> keyword in GDScript to create a
                    breakpoint that is stored in the script itself. Unlike breakpoints created by
                    clicking in the gutter, this keyword-based breakpoint is persistent across
                    different machines when using version control.</paragraph>
            </tip>
            <image candidates="{'*': 'tutorials/scripting/debug/img/overview_script_editor.webp'}" uri="tutorials/scripting/debug/img/overview_script_editor.webp"></image>
            <paragraph><strong>断点</strong> 按钮会像断点一样导致脚本的中断. <strong>继续</strong> 使游戏在断点处暂停后继续. <strong>Step Over</strong> 进入下一行代码, 如果可能的话, <strong>Step Into</strong> 进入一个函数. 否则, 它与 <strong>Step Over</strong> 做同样的事情.</paragraph>
            <paragraph>The <strong>Debug with External Editor</strong> option lets you debug your game with an external editor.
                This option is also accessible in <strong>Editor Settings &gt; Debugger</strong>.</paragraph>
            <paragraph>When the debugger breaks on a breakpoint, a green triangle arrow is visible in
                the script editor's gutter. This arrow indicates the line of code the debugger
                broke on.</paragraph>
        </section>
        <section ids="debug-project-settings" names="debug\ project\ settings 调试项目设置">
            <title>调试项目设置</title>
            <paragraph>在项目设置中有一个 <strong>Debug</strong>（调试）类别，包含三个子类别，可以控制不同的东西。</paragraph>
            <section ids="settings" names="settings settings（设置）">
                <title>Settings（设置）</title>
                <paragraph>这些都是一些常规的设置，比如将当前的 FPS 打印到<strong>输出</strong>面板，剖析时的最大函数量等。</paragraph>
            </section>
            <section ids="gdscript" names="gdscript">
                <title>GDScript</title>
                <paragraph>这些设置允许你切换特定的GDScript警告, 比如未使用的变量. 你也可以完全关闭警告.</paragraph>
            </section>
            <section ids="shapes" names="shapes shapes（形状）">
                <title>Shapes（形状）</title>
                <paragraph>Shapes中你可以调整形状的颜色, 这些形状只出现在调试的目的, 如碰撞和导航形状.</paragraph>
            </section>
        </section>
        <section ids="remote-in-scene-dock" names="remote\ in\ scene\ dock 遥控场景面板">
            <title>遥控场景面板</title>
            <paragraph>当在编辑器中运行游戏时，<strong>场景</strong>面板顶部会出现两个选项，即<strong>远程</strong>和<strong>本地</strong>。当使用<strong>远程</strong>时，你可以检查或改变运行项目中的节点参数。</paragraph>
            <image candidates="{'*': 'tutorials/scripting/debug/img/overview_remote.webp'}" uri="tutorials/scripting/debug/img/overview_remote.webp"></image>
            <note>
                <paragraph>一些与调试有关的编辑器设置可以在 <strong>Editor Settings</strong> 内找到, 在 <strong>Network &gt; Debug</strong> and <strong>Debugger</strong> 部分.</paragraph>
            </note>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="翻译状态" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/tutorials/scripting/groups.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <target refid="doc-groups"></target>
    <section ids="groups doc-groups" names="groups 分组 doc_groups">
        <title>分组</title>
        <paragraph>Godot 中的分组与其他软件中的标签类似。你可以将节点加入若干个分组之中，然后在代码中通过 SceneTree 来：</paragraph>
        <bullet_list bullet="-">
            <list_item>
                <paragraph>获取某个分组中的节点列表。</paragraph>
            </list_item>
            <list_item>
                <paragraph>对分组中的所有节点调用方法。</paragraph>
            </list_item>
            <list_item>
                <paragraph>向分组中的所有节点发送通知。</paragraph>
            </list_item>
        </bullet_list>
        <paragraph>这个功能可以用来组织大型场景、解耦代码。</paragraph>
        <section ids="managing-groups" names="managing\ groups 管理分组">
            <title>管理分组</title>
            <paragraph>将节点添加到一个新的分组名称中即可创建分组，同样，将所有节点移出某个给定的分组即可移除分组。</paragraph>
            <paragraph>为分组添加/移除节点有两种方法：</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>During design, by using the Node dock in the editor, or the Global Groups in project settings.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>运行模式下，调用 <reference internal="True" refuri="../../classes/class_node#class-node-method-add-to-group"><inline classes="std std-ref">Node.add_to_group()</inline></reference> 或 <reference internal="True" refuri="../../classes/class_node#class-node-method-remove-from-group"><inline classes="std std-ref">Node.remove_from_group()</inline></reference>方法。</paragraph>
                </list_item>
            </bullet_list>
            <section ids="using-the-node-dock" names="using\ the\ node\ dock 使用节点面板">
                <title>使用节点面板</title>
                <paragraph>You can create new groups using the Groups tab in the Node dock.</paragraph>
                <image candidates="{'*': 'tutorials/scripting/img/groups_node_tab.webp'}" uri="tutorials/scripting/img/groups_node_tab.webp"></image>
                <paragraph>Select one or more nodes in the Scene dock then click the add button with the + symbol.</paragraph>
                <image candidates="{'*': 'tutorials/scripting/img/groups_add_new_group_button.webp'}" uri="tutorials/scripting/img/groups_add_new_group_button.webp"></image>
                <paragraph>You should now see the Create New Group modal appear. Write the group name in the field.</paragraph>
                <paragraph>You can optionally mark the option "Global", which will make the group visible project-wide,
                    and able to be reused in any project scene. This will also allow you to give it a description.</paragraph>
                <paragraph>When done, press Ok to create it.</paragraph>
                <image candidates="{'*': 'tutorials/scripting/img/groups_add_new_group_modal.webp'}" uri="tutorials/scripting/img/groups_add_new_group_modal.webp"></image>
                <paragraph>You should see the new groups appear in the Groups tab under Scene Groups if the Global option was
                    unmarked, or under Global Groups if that option was marked.</paragraph>
                <paragraph>Selected Node(s) from the Scene dock can be added into groups by marking the checkbox on the left side
                    of the groups in the Groups dock. The node(s) you had selected when creating a new group will be automatically checked.</paragraph>
                <image candidates="{'*': 'tutorials/scripting/img/groups_node_tab_with_created_groups.webp'}" uri="tutorials/scripting/img/groups_node_tab_with_created_groups.webp"></image>
                <paragraph>All groups present in the project that were marked as Global, created from any scene, will be visible under Global Groups.</paragraph>
                <paragraph>Any other group derived from nodes in the current scene will appear under Scene Groups.</paragraph>
                <warning>
                    <paragraph>The same underlying logic is used for both Global and Scene groups.
                        Groups with the same name are considered one and the same. This feature is purely organizational.</paragraph>
                </warning>
                <image candidates="{'*': 'tutorials/scripting/img/groups_node_tab_with_multiple_types_of_groups.webp'}" uri="tutorials/scripting/img/groups_node_tab_with_multiple_types_of_groups.webp"></image>
                <paragraph>You can manage Global Groups in the Global Groups dock, inside Project Settings. There, you will be able to add new
                    global groups, or change existing groups' names and descriptions.</paragraph>
                <image candidates="{'*': 'tutorials/scripting/img/groups_global_groups_settings.webp'}" uri="tutorials/scripting/img/groups_global_groups_settings.webp"></image>
            </section>
            <section ids="using-code" names="using\ code 使用代码">
                <title>使用代码</title>
                <paragraph>你也可以通过脚本来管理分组。以下代码会在脚本所附加的节点进入场景树时，将其加入 <literal>guards</literal>（守卫）分组。</paragraph>
                <container classes="sphinx-tabs" type="tab-element">
                    <div aria-label="Tabbed content" role="tablist">
                        <button aria-controls="panel-0-R0RTY3JpcHQ=" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-0-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tab" tabindex="0">GDScript</button>
                        <button aria-controls="panel-0-QyM=" aria-selected="false" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-0-QyM=" name="QyM=" role="tab" tabindex="-1">C#</button>
                    </div>
                    <div aria-labelledby="tab-0-R0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-0-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                        <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve">func _ready():
    add_to_group("guards")</literal_block>
                    </div>
                    <div aria-labelledby="tab-0-QyM=" classes="sphinx-tabs-panel code-tab group-tab" hidden="true" ids="panel-0-QyM=" name="QyM=" role="tabpanel" tabindex="0">
                        <literal_block force="False" highlight_args="{}" language="csharp" linenos="False" xml:space="preserve">public override void _Ready()
{
    base._Ready();

    AddToGroup("guards");
}</literal_block>
                    </div>
                </container>
                <paragraph>想象一下你正在制作一个潜入类游戏，敌人发现玩家后，希望所有守卫和机器人都进入警觉状态。</paragraph>
                <paragraph>下面的例子中，我们使用 <literal>SceneTree.call_group()</literal> 来通知所有敌人：玩家被发现了。</paragraph>
                <container classes="sphinx-tabs" type="tab-element">
                    <div aria-label="Tabbed content" role="tablist">
                        <button aria-controls="panel-1-R0RTY3JpcHQ=" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-1-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tab" tabindex="0">GDScript</button>
                        <button aria-controls="panel-1-QyM=" aria-selected="false" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-1-QyM=" name="QyM=" role="tab" tabindex="-1">C#</button>
                    </div>
                    <div aria-labelledby="tab-1-R0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-1-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                        <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve">func _on_player_spotted():
    get_tree().call_group("guards", "enter_alert_mode")</literal_block>
                    </div>
                    <div aria-labelledby="tab-1-QyM=" classes="sphinx-tabs-panel code-tab group-tab" hidden="true" ids="panel-1-QyM=" name="QyM=" role="tabpanel" tabindex="0">
                        <literal_block force="False" highlight_args="{}" language="csharp" linenos="False" xml:space="preserve">public void _OnPlayerDiscovered()
{
    GetTree().CallGroup("guards", "enter_alert_mode");
}</literal_block>
                    </div>
                </container>
                <paragraph>以上代码会对 <literal>gurads</literal> 分组中的所有成员节点调用 <literal>enter_alter_mode</literal> 函数。</paragraph>
                <paragraph>要获取由 <literal>guards</literal> 分组中的所有节点所构成的数组，请调用 <reference internal="True" refuri="../../classes/class_scenetree#class-scenetree-method-get-nodes-in-group"><inline classes="std std-ref">SceneTree.get_nodes_in_group()</inline></reference>：</paragraph>
                <container classes="sphinx-tabs" type="tab-element">
                    <div aria-label="Tabbed content" role="tablist">
                        <button aria-controls="panel-2-R0RTY3JpcHQ=" aria-selected="true" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-2-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tab" tabindex="0">GDScript</button>
                        <button aria-controls="panel-2-QyM=" aria-selected="false" classes="sphinx-tabs-tab code-tab group-tab" ids="tab-2-QyM=" name="QyM=" role="tab" tabindex="-1">C#</button>
                    </div>
                    <div aria-labelledby="tab-2-R0RTY3JpcHQ=" classes="sphinx-tabs-panel code-tab group-tab" ids="panel-2-R0RTY3JpcHQ=" name="R0RTY3JpcHQ=" role="tabpanel" tabindex="0">
                        <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve">var guards = get_tree().get_nodes_in_group("guards")</literal_block>
                    </div>
                    <div aria-labelledby="tab-2-QyM=" classes="sphinx-tabs-panel code-tab group-tab" hidden="true" ids="panel-2-QyM=" name="QyM=" role="tabpanel" tabindex="0">
                        <literal_block force="False" highlight_args="{}" language="csharp" linenos="False" xml:space="preserve">var guards = GetTree().GetNodesInGroup("guards");</literal_block>
                    </div>
                </container>
                <paragraph><reference internal="True" refuri="../../classes/class_scenetree#class-scenetree"><inline classes="std std-ref">SceneTree</inline></reference> 类提供了许多有用的方法，例如与场景、场景节点层次结构及节点编组交互，还可以使你可以轻松切换场景或重新加载场景、退出游戏或暂停和恢复运行游戏。不仅如此，该类还提供了一些有用的信号。</paragraph>
                <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="翻译状态" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
            </section>
        </section>
    </section>
</document>

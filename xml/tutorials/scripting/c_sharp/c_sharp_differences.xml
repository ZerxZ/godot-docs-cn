<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/tutorials/scripting/c_sharp/c_sharp_differences.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <target refid="doc-c-sharp-differences"></target>
    <section ids="c-api-differences-to-gdscript doc-c-sharp-differences" names="c#\ api\ differences\ to\ gdscript c#\ api\ 与\ gdscript\ 的差异 doc_c_sharp_differences">
        <title>C# API 与 GDScript 的差异</title>
        <paragraph>这是C#和GDScript之间API差异的(不完整)列表.</paragraph>
        <section ids="general-differences" names="general\ differences 一般差异">
            <title>一般差异</title>
            <paragraph>如 <reference internal="True" refuri="c_sharp_basics#doc-c-sharp"><inline classes="std std-ref">C# 基础</inline></reference> 中所述,C#通常使用 <literal>PascalCase</literal> 而不是GDScript和C++中使用的 <literal>snake_case</literal>.</paragraph>
        </section>
        <section ids="global-scope" names="global\ scope 全局作用域">
            <title>全局作用域</title>
            <paragraph>全局函数和某些常量必须移动到类中, 因为C#不允许在命名空间中声明它们. 大多数全局常量都被移动到它们自己的枚举中.</paragraph>
            <section ids="constants" names="constants 常量">
                <title>常量</title>
                <paragraph>在 C# 中，只有基本类型可以是常量。例如，<literal>TAU</literal> 常量被替换为 <literal>Mathf.Tau</literal> 常量，但是 <literal>Vector2.RIGHT</literal> 常量被替换为 <literal>Vector2.Right</literal> 只读属性。这与常量的行为类似，但不能用于一些上下文中，如 <literal>switch</literal> 语句。</paragraph>
                <paragraph>全局枚举常量被移动到它们自己的枚举中。例如， <literal>ERR_*</literal> 常量被移动到 <literal>Error</literal> 枚举中。</paragraph>
                <paragraph>特殊情况:</paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="23"></colspec>
                        <colspec colwidth="59"></colspec>
                        <thead>
                            <row>
                                <entry>
                                    <paragraph>GDScript</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>C#</paragraph>
                                </entry>
                            </row>
                        </thead>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>TYPE_*</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph><literal>Variant.Type</literal> 枚举</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph><literal>OP_*</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph><literal>Variant.Operator</literal> 枚举</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
            </section>
            <section ids="math-functions" names="math\ functions 数学函数">
                <title>数学函数</title>
                <paragraph>如 <literal>abs</literal>, <literal>acos</literal> , <literal>asin</literal> , <literal>atan</literal> 和 <literal>atan2</literal> 这样的全局数学函数位于 <literal>Mathf</literal> 下, 名为 <literal>Abs</literal> , <literal>Acos</literal>, <literal>Asin</literal> , <literal>Atan</literal> 和 <literal>Atan2</literal>. 常数 <literal>PI</literal> 可以通过 <literal>Mathf.Pi</literal> 获得.</paragraph>
                <paragraph>C# 也提供了静态 <reference name="System.Math" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.math">System.Math</reference> 和 <reference name="System.MathF" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.mathf">System.MathF</reference> 类，其中可能包含其他有用的数学操作。</paragraph>
                <target ids="system-math" names="system.math" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.math"></target>
                <target ids="system-mathf" names="system.mathf" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.mathf"></target>
            </section>
            <section ids="random-functions" names="random\ functions 随机函数">
                <title>随机函数</title>
                <paragraph>如 <literal>rand_range</literal> 和 <literal>rand_seed</literal> 等全局随机函数位于 <literal>GD</literal> 下. 例如 <literal>GD.RandRange</literal> 以及 <literal>GD.RandSeed</literal>.</paragraph>
                <paragraph>请考虑使用 <reference name="System.Random" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.random">System.Random</reference> ，如果你需要加密强度的随机性，使用 <reference name="System.Security.Cryptography.RandomNumberGenerator" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.security.cryptography.randomnumbergenerator">System.Security.Cryptography.RandomNumberGenerator</reference> 。</paragraph>
                <target ids="system-random" names="system.random" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.random"></target>
                <target ids="system-security-cryptography-randomnumbergenerator" names="system.security.cryptography.randomnumbergenerator" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.security.cryptography.randomnumbergenerator"></target>
            </section>
            <section ids="other-functions" names="other\ functions 其他函数">
                <title>其他函数</title>
                <paragraph>许多其他全局函数，如 <literal>print</literal> 和 <literal>var_to_str</literal> ，位于 <literal>GD</literal> 下。例如： <literal>GD.Print</literal> 和 <literal>GD.VarToStr</literal> 。</paragraph>
                <paragraph>例外情况:</paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="28"></colspec>
                        <colspec colwidth="55"></colspec>
                        <thead>
                            <row>
                                <entry>
                                    <paragraph>GDScript</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>C#</paragraph>
                                </entry>
                            </row>
                        </thead>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph><literal>weakref(obj)</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph><literal>GodotObject.WeakRef(obj)</literal></paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph><literal>instance_from_id(id)</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph><literal>GodotObject.InstanceFromId(id)</literal></paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph><literal>is_instance_id_valid(id)</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph><literal>GodotObject.IsInstanceIdValid(id)</literal></paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph><literal>is_instance_valid(obj)</literal></paragraph>
                                </entry>
                                <entry>
                                    <paragraph><literal>GodotObject.IsInstanceValid(obj)</literal></paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
            </section>
            <section ids="tips" names="tips 提示">
                <title>提示</title>
                <paragraph>有时候, 使用 <literal>using static</literal> 指令是很有用的. 该指令允许在不指定类名的情况下, 访问类的成员和嵌套类型.</paragraph>
                <paragraph>示例：</paragraph>
                <literal_block force="False" highlight_args="{}" language="csharp" linenos="False" xml:space="preserve">using static Godot.GD;

public class Test
{
    static Test()
    {
        Print("Hello"); // Instead of GD.Print("Hello");
    }
}</literal_block>
            </section>
            <section ids="full-list-of-equivalences" names="full\ list\ of\ equivalences 完整的等效列表">
                <title>完整的等效列表</title>
                <paragraph>Godot 全局作用域函数及其在 C# 中的等效函数列表：</paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="31"></colspec>
                        <colspec colwidth="62"></colspec>
                        <thead>
                            <row>
                                <entry>
                                    <paragraph>GDScript</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>C#</paragraph>
                                </entry>
                            </row>
                        </thead>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph>abs</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.Abs</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>absf</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.Abs</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>absi</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.Abs</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>acos</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.Acos</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>acosh</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.Acosh</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>angle_difference</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.AngleDifference</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>asin</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.Asin</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>asinh</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.Asinh</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>atan</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.Atan</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>atan2</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.Atan2</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>atanh</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.Atanh</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>bezier_derivative</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.BezierDerivative</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>bezier_interpolate</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.BezierInterpolate</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>bytes_to_var</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>GD.BytesToVar</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>bytes_to_var_with_objects</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>GD.BytesToVarWithObjects</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>ceil</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.Ceil</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>ceilf</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.Ceil</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>ceili</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.CeilToInt</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>clamp</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.Clamp</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>clampf</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.Clamp</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>clampi</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.Clamp</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>cos</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.Cos</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>cosh</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.Cosh</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>cubic_interpolate</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.CubicInterpolate</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>cubic_interpolate_angle</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.CubicInterpolateAngle</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>cubic_interpolate_angle_in_time</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.CubicInterpolateInTime</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>cubic_interpolate_in_time</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.CubicInterpolateAngleInTime</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>db_to_linear</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.DbToLinear</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>deg_to_rad</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.DegToRad</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>ease</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.Ease</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>error_string</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Error.ToString</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>exp</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.Exp</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>floor</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.Floor</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>floorf</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.Floor</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>floori</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.FloorToInt</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>fmod</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>operator %</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>fposmod</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.PosMod</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>hash</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>GD.Hash</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>instance_from_id</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>GodotObject.InstanceFromId</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>inverse_lerp</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.InverseLerp</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>is_equal_approx</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.IsEqualApprox</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>is_finite</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.IsFinite 或 <reference name="float.IsFinite" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.single.isfinite">float.IsFinite</reference> 或 <reference name="double.IsFinite" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.double.isfinite">double.IsFinite</reference></paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>is_inf</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.IsInf 或 <reference name="float.IsInfinity" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.single.isinfinity">float.IsInfinity</reference> 或 <reference name="double.IsInfinity" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.double.isinfinity">double.IsInfinity</reference></paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>is_instance_id_valid</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>GodotObject.IsInstanceIdValid</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>is_instance_valid</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>GodotObject.IsInstanceValid</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>is_nan</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.IsNaN 或 <reference name="float.IsNaN" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.single.isnan">float.IsNaN</reference> 或 <reference name="double.IsNaN" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.double.isnan">double.IsNaN</reference></paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>is_same</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>operator == 或 <reference name="object.ReferenceEquals" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.object.referenceequals">object.ReferenceEquals</reference></paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>is_zero_approx</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.IsZeroApprox</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>lerp</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.Lerp</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>lerp_angle</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.LerpAngle</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>lerpf</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.Lerp</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>linear_to_db</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.LinearToDb</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>log</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.Log</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>max</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.Max</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>maxf</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.Max</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>maxi</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.Max</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>min</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.Min</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>minf</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.Min</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>mini</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.Min</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>move_toward</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.MoveToward</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>nearest_po2</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.NearestPo2</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>pingpong</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.PingPong</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>posmod</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.PosMod</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>pow</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.Pow</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>print</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>GD.Print</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>print_rich</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>GD.PrintRich</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>print_verbose</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>使用 OS.IsStdoutVerbose 和 GD.Print</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>printerr</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>GD.PrintErr</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>printraw</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>GD.PrintRaw</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>prints</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>GD.PrintS</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>printt</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>GD.PrintT</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>push_error</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>GD.PushError</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>push_warning</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>GD.PushWarning</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>rad_to_deg</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.RadToDeg</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>rand_from_seed</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>GD.RandFromSeed</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>randf</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>GD.Randf</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>randf_range</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>GD.RandRange</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>randfn</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>GD.Randfn</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>randi</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>GD.Randi</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>randi_range</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>GD.RandRange</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>randomize</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>GD.Randomize</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>remap</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.Remap</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>rid_allocate_id</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>N/A</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>rid_from_int64</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>N/A</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>rotate_toward</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.RotateToward</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>round</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.Round</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>roundf</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.Round</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>roundi</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.RoundToInt</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>seed</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>GD.Seed</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>sign</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.Sign</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>signf</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.Sign</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>signi</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.Sign</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>sin</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.Sin</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>sinh</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.Sinh</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>smoothstep</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.SmoothStep</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>snapped</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.Snapped</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>snappedf</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.Snapped</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>snappedi</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.Snapped</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>sqrt</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.Sqrt</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>step_decimals</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.StepDecimals</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>str</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>使用 <reference name="$ string interpolation" refuri="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/tokens/interpolated">$ string interpolation</reference></paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>str_to_var</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>GD.StrToVar</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>tan</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.Tan</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>tanh</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.Tanh</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>type_convert</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Variant.As&lt;T&gt; or GD.Convert</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>type_string</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Variant.Type.ToString</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>typeof</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Variant.VariantType</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>var_to_bytes</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>GD.VarToBytes</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>var_to_bytes_with_objects</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>GD.VarToBytesWithObjects</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>var_to_str</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>GD.VarToStr</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>weakref</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>GodotObject.WeakRef</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>wrap</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.Wrap</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>wrapf</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.Wrap</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>wrapi</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>Mathf.Wrap</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <target ids="string-interpolation" names="$\ string\ interpolation" refuri="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/tokens/interpolated"></target>
                <target ids="double-isfinite" names="double.isfinite" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.double.isfinite"></target>
                <target ids="double-isinfinity" names="double.isinfinity" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.double.isinfinity"></target>
                <target ids="double-isnan" names="double.isnan" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.double.isnan"></target>
                <target ids="float-isfinite" names="float.isfinite" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.single.isfinite"></target>
                <target ids="float-isinfinity" names="float.isinfinity" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.single.isinfinity"></target>
                <target ids="float-isnan" names="float.isnan" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.single.isnan"></target>
                <target ids="object-referenceequals" names="object.referenceequals" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.object.referenceequals"></target>
                <paragraph>GDScript 实用函数与它们在 C# 中的等效函数列表：</paragraph>
                <table>
                    <tgroup cols="2">
                        <colspec colwidth="23"></colspec>
                        <colspec colwidth="62"></colspec>
                        <thead>
                            <row>
                                <entry>
                                    <paragraph>GDScript</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>C#</paragraph>
                                </entry>
                            </row>
                        </thead>
                        <tbody>
                            <row>
                                <entry>
                                    <paragraph>assert</paragraph>
                                </entry>
                                <entry>
                                    <paragraph><reference name="System.Diagnostics.Debug.Assert" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.diagnostics.debug.assert">System.Diagnostics.Debug.Assert</reference></paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>char</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>使用显式转换： <literal>(char)65</literal></paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>convert</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>GD.Convert</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>dict_to_inst</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>N/A</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>get_stack</paragraph>
                                </entry>
                                <entry>
                                    <paragraph><reference name="System.Environment.StackTrace" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.environment.stacktrace">System.Environment.StackTrace</reference></paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>inst_to_dict</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>N/A</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>len</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>N/A</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>load</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>GD.Load</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>preload</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>N/A</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>print_debug</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>N/A</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>print_stack</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>GD.Print(<reference name="System.Environment.StackTrace" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.environment.stacktrace">System.Environment.StackTrace</reference>)</paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>range</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>GD.Range 或 <reference name="System.Linq.Enumerable.Range" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.linq.enumerable.range">System.Linq.Enumerable.Range</reference></paragraph>
                                </entry>
                            </row>
                            <row>
                                <entry>
                                    <paragraph>type_exists</paragraph>
                                </entry>
                                <entry>
                                    <paragraph>ClassDB.ClassExists(type)</paragraph>
                                </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
                <target ids="system-diagnostics-debug-assert" names="system.diagnostics.debug.assert" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.diagnostics.debug.assert"></target>
                <target ids="system-environment-stacktrace" names="system.environment.stacktrace" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.environment.stacktrace"></target>
                <target ids="system-linq-enumerable-range" names="system.linq.enumerable.range" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.linq.enumerable.range"></target>
                <paragraph><literal>preload</literal> 在 GDScript 中可用，在 C# 中不可用。请使用 <literal>GD.Load</literal> 或 <literal>ResourceLoader.Load</literal> 替代。</paragraph>
            </section>
        </section>
        <section ids="export-annotation" names="@export\ annotation @export\ 注解">
            <title><literal>@export</literal> 注解</title>
            <paragraph>使用 <literal>[Export]</literal> 特性替代 GDScript 的 <literal>@export</literal> 注解。该特性还可以接受 <reference internal="True" refuri="../../../classes/class_@globalscope#enum-globalscope-propertyhint"><inline classes="std std-ref">PropertyHint</inline></reference> 和 <literal>hintString</literal> 参数。默认值可以通过赋值来设置。</paragraph>
            <paragraph>示例：</paragraph>
            <literal_block force="False" highlight_args="{}" language="csharp" linenos="False" xml:space="preserve">using Godot;

public partial class MyNode : Node
{
    [Export]
    private NodePath _nodePath;

    [Export]
    private string _name = "default";

    [Export(PropertyHint.Range, "0,100000,1000,or_greater")]
    private int _income;

    [Export(PropertyHint.File, "*.png,*.jpg")]
    private string _icon;
}</literal_block>
            <paragraph>另见：<reference internal="True" refuri="c_sharp_exports#doc-c-sharp-exports"><inline classes="std std-ref">C# 导出属性</inline></reference>。</paragraph>
        </section>
        <section ids="signal-keyword" names="signal\ keyword signal\ 关键字">
            <title><literal>signal</literal> 关键字</title>
            <paragraph>使用 <literal>[Signal]</literal> 特性声明信号，而不是使用 GDScript 中的 <literal>signal</literal> 关键字。这个特性应该用在一个 <title_reference>delegate</title_reference> 上，该 <title_reference>delegate</title_reference> 的名称将用于定义信号。这个 <title_reference>delegate</title_reference> 必须带有 <literal>EventHandler</literal> 后缀，一个 <title_reference>event</title_reference> 将在同名的类中生成，但不包含后缀，使用该事件的名称与 <literal>EmitSignal</literal> 配合使用。</paragraph>
            <literal_block force="False" highlight_args="{}" language="csharp" linenos="False" xml:space="preserve">[Signal]
delegate void MySignalEventHandler(string willSendAString);</literal_block>
            <paragraph>另见: <reference internal="True" refuri="c_sharp_signals#doc-c-sharp-signals"><inline classes="std std-ref">C# 信号</inline></reference> .</paragraph>
        </section>
        <section ids="onready-annotation" names="@onready\ annotation @onready\ 注解">
            <title><title_reference>@onready</title_reference> 注解</title>
            <paragraph>GDScript 有一种能力，可以使用 <title_reference>@onready</title_reference> （参见： <reference internal="True" refuri="../gdscript/gdscript_basics#doc-gdscript-onready-annotation"><inline classes="std std-ref">@onready 注解</inline></reference> ）延迟成员变量的初始化，直到调用 ready 函数。例如：</paragraph>
            <literal_block force="False" highlight_args="{}" language="gdscript" linenos="False" xml:space="preserve">@onready var my_label = get_node("MyLabel")</literal_block>
            <paragraph>然而 C# 没有这个能力。为了达到同样的效果，你需要这样做。</paragraph>
            <literal_block force="False" highlight_args="{}" language="csharp" linenos="False" xml:space="preserve">private Label _myLabel;

public override void _Ready()
{
    _myLabel = GetNode&lt;Label&gt;("MyLabel");
}</literal_block>
        </section>
        <section ids="singletons" names="singletons 单例">
            <title>单例</title>
            <paragraph>单例可以作为静态类使用, 而不是使用单例模式. 这是为了使代码不像使用 <literal>Instance</literal> 属性那样冗长.</paragraph>
            <paragraph>示例：</paragraph>
            <literal_block force="False" highlight_args="{}" language="csharp" linenos="False" xml:space="preserve">Input.IsActionPressed("ui_down")</literal_block>
            <paragraph>但是，在极少数情况下，这还不够。例如，你可能希望访问基类 <literal>GodotObject</literal> 中的成员，比如 <literal>Connect</literal> 。对于此类情况，我们提供了一个名为 <literal>Singleton</literal> 的静态属性，该属性返回单例实例。这个实例的类型是 <literal>GodotObject</literal> 。</paragraph>
            <paragraph>示例：</paragraph>
            <literal_block force="False" highlight_args="{}" language="csharp" linenos="False" xml:space="preserve">Input.Singleton.JoyConnectionChanged += Input_JoyConnectionChanged;</literal_block>
        </section>
        <section ids="string" names="string 字符串">
            <title>字符串</title>
            <paragraph>使用 <literal>System.String</literal> （ <literal>string</literal> ）。大多数 Godot 的 String 方法都有与之等价的 <literal>System.String</literal> 方法，或者作为扩展方法由 <literal>StringExtensions</literal> 类提供。</paragraph>
            <paragraph>示例：</paragraph>
            <literal_block force="False" highlight_args="{}" language="csharp" linenos="False" xml:space="preserve">string text = "Get up!";
string[] bigrams = text.Bigrams(); // ["Ge", "et", "t ", " u", "up", "p!"]</literal_block>
            <paragraph>.NET 中的字符串是不可变的，因此所有操作字符串的方法不会修改原始字符串，而是返回一个经过修改的新字符串。为了避免创建多个字符串分配，考虑使用 <reference name="StringBuilder" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.text.stringbuilder">StringBuilder</reference> 。</paragraph>
            <paragraph>Godot 的 String 方法及其在 C# 中的等效方法列表：</paragraph>
            <table>
                <tgroup cols="2">
                    <colspec colwidth="23"></colspec>
                    <colspec colwidth="124"></colspec>
                    <thead>
                        <row>
                            <entry>
                                <paragraph>GDScript</paragraph>
                            </entry>
                            <entry>
                                <paragraph>C#</paragraph>
                            </entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph>begins_with</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference name="string.StartsWith" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.startswith">string.StartsWith</reference></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>bigrams</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.Bigrams</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>bin_to_int</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.BinToInt</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>c_escape</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.CEscape</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>c_unescape</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.CUnescape</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>capitalize</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.Capitalize</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>casecmp_to</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.CasecmpTo 或 StringExtensions.CompareTo （考虑使用 <reference name="string.Equals" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.equals">string.Equals</reference> 或 <reference name="string.Compare" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.compare">string.Compare</reference> ）</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>chr</paragraph>
                            </entry>
                            <entry>
                                <paragraph>N/A</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>contains</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference name="string.Contains" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.contains">string.Contains</reference></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>count</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.Count （考虑使用 <reference name="RegEx" refuri="https://learn.microsoft.com/en-us/dotnet/standard/base-types/regular-expressions">RegEx</reference> ）</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>countn</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.CountN（考虑使用 <reference name="RegEx" refuri="https://learn.microsoft.com/en-us/dotnet/standard/base-types/regular-expressions">RegEx</reference> ）</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>dedent</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.Dedent</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>ends_with</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference name="string.EndsWith" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.endswith">string.EndsWith</reference></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>erase</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference name="string.Remove" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.remove">string.Remove</reference> （考虑使用 <reference name="StringBuilder" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.text.stringbuilder">StringBuilder</reference> 来操作字符串）</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>find</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.Find（考虑使用 <reference name="string.IndexOf" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.indexof">string.IndexOf</reference> 或 <reference name="string.IndexOfAny" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.indexofany">string.IndexOfAny</reference> ）</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>findn</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.FindN（考虑使用 <reference name="string.IndexOf" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.indexof">string.IndexOf</reference> 或 <reference name="string.IndexOfAny" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.indexofany">string.IndexOfAny</reference> ）</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>format</paragraph>
                            </entry>
                            <entry>
                                <paragraph>使用 <reference name="$ string interpolation" refuri="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/tokens/interpolated">$ string interpolation</reference></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>get_base_dir</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.GetBaseDir</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>get_basename</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.GetBaseName</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>get_extension</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.GetExtension</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>get_file</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.GetFile</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>get_slice</paragraph>
                            </entry>
                            <entry>
                                <paragraph>N/A</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>get_slice_count</paragraph>
                            </entry>
                            <entry>
                                <paragraph>N/A</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>get_slicec</paragraph>
                            </entry>
                            <entry>
                                <paragraph>N/A</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>hash</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.Hash（除非你需要保证与 GDScript 中相同的行为，否则考虑使用 <reference name="object.GetHashCode" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.object.gethashcode">object.GetHashCode</reference> ）</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>hex_decode</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.HexDecode（考虑使用 <reference name="System.Convert.FromHexString" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.convert.fromhexstring">System.Convert.FromHexString</reference> ）</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>hex_to_int</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.HexToInt（考虑使用 <reference name="int.Parse" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.int32.parse">int.Parse</reference> 或 <reference name="long.Parse" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.int64.parse">long.Parse</reference> ，并使用 <reference name="System.Globalization.NumberStyles.HexNumber" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.globalization.numberstyles#system-globalization-numberstyles-hexnumber">System.Globalization.NumberStyles.HexNumber</reference> ）</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>humanize_size</paragraph>
                            </entry>
                            <entry>
                                <paragraph>N/A</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>indent</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.Indent</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>insert</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference name="string.Insert" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.insert">string.Insert</reference>（考虑使用 <reference name="StringBuilder" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.text.stringbuilder">StringBuilder</reference> 来操作字符串）</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>is_absolute_path</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.IsAbsolutePath</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>is_empty</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference name="string.IsNullOrEmpty" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.isnullorempty">string.IsNullOrEmpty</reference> 或 <reference name="string.IsNullOrWhiteSpace" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.isnullorwhitespace">string.IsNullOrWhiteSpace</reference></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>is_relative_path</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.IsRelativePath</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>is_subsequence_of</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.IsSubsequenceOf</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>is_subsequence_ofn</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.IsSubsequenceOfN</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>is_valid_filename</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.IsValidFileName</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>is_valid_float</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.IsValidFloat（请考虑使用 <reference name="float.TryParse" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.single.tryparse">float.TryParse</reference> 或 <reference name="double.TryParse" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.double.tryparse">double.TryParse</reference>）</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>is_valid_hex_number</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.IsValidHexNumber</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>is_valid_html_color</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.IsValidHtmlColor</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>is_valid_identifier</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.IsValidIdentifier</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>is_valid_int</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.IsValidInt（请考虑使用 <reference name="int.TryParse" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.int32.tryparse">int.TryParse</reference> 或 <reference name="long.TryParse" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.int64.tryparse">long.TryParse</reference>）</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>is_valid_ip_address</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.IsValidIPAddress</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>join</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference name="string.Join" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.join">string.Join</reference></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>json_escape</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.JSONEscape</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>left</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.Left（请考虑使用 <reference name="string.Substring" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.substring">string.Substring</reference> 或 <reference name="string.AsSpan" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.memoryextensions.asspan">string.AsSpan</reference>）</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>length</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference name="string.Length" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.length">string.Length</reference></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>lpad</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference name="string.PadLeft" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.padleft">string.PadLeft</reference></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>lstrip</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference name="string.TrimStart" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.trimstart">string.TrimStart</reference></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>match</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.Match（请考虑使用 <reference name="RegEx" refuri="https://learn.microsoft.com/en-us/dotnet/standard/base-types/regular-expressions">RegEx</reference>）</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>matchn</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.MatchN（请考虑使用 <reference name="RegEx" refuri="https://learn.microsoft.com/en-us/dotnet/standard/base-types/regular-expressions">RegEx</reference>）</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>md5_buffer</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.Md5Buffer（请考虑使用 <reference name="System.Security.Cryptography.MD5.HashData" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.security.cryptography.md5.hashdata">System.Security.Cryptography.MD5.HashData</reference>）</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>md5_text</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.Md5Text（请考虑使用 <reference name="System.Security.Cryptography.MD5.HashData" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.security.cryptography.md5.hashdata">System.Security.Cryptography.MD5.HashData</reference> 和 StringExtensions.HexEncode）</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>naturalnocasecmp_to</paragraph>
                            </entry>
                            <entry>
                                <paragraph>N/A（请考虑使用 <reference name="string.Equals" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.equals">string.Equals</reference> 或 <reference name="string.Compare" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.compare">string.Compare</reference>）</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>nocasecmp_to</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.NocasecmpTo 或 StringExtensions.CompareTo（请考虑使用 <reference name="string.Equals" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.equals">string.Equals</reference> 或 <reference name="string.Compare" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.compare">string.Compare</reference>）</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>num</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference name="float.ToString" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.single.tostring">float.ToString</reference> 或 <reference name="double.ToString" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.double.tostring">double.ToString</reference></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>num_int64</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference name="int.ToString" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.int32.tostring">int.ToString</reference> 或 <reference name="long.ToString" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.int64.tostring">long.ToString</reference></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>num_scientific</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference name="float.ToString" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.single.tostring">float.ToString</reference> 或 <reference name="double.ToString" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.double.tostring">double.ToString</reference></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>num_uint64</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference name="uint.ToString" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.uint32.tostring">uint.ToString</reference> 或 <reference name="ulong.ToString" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.uint64.tostring">ulong.ToString</reference></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>pad_decimals</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.PadDecimals</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>pad_zeros</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.PadZeros</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>path_join</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.PathJoin</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>repeat</paragraph>
                            </entry>
                            <entry>
                                <paragraph>请使用 <reference name="string constructor" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.-ctor">string constructor</reference> 或 <reference name="StringBuilder" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.text.stringbuilder">StringBuilder</reference></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>replace</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference name="string.Replace" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.replace">string.Replace</reference> 或 <reference name="RegEx" refuri="https://learn.microsoft.com/en-us/dotnet/standard/base-types/regular-expressions">RegEx</reference></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>replacen</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.ReplaceN（请考虑使用 <reference name="string.Replace" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.replace">string.Replace</reference> 或 <reference name="RegEx" refuri="https://learn.microsoft.com/en-us/dotnet/standard/base-types/regular-expressions">RegEx</reference>）</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>reverse</paragraph>
                            </entry>
                            <entry>
                                <paragraph>N/A</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>rfind</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.RFind（请考虑使用 <reference name="string.LastIndexOf" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.lastindexof">string.LastIndexOf</reference> 或 <reference name="string.LastIndexOfAny" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.lastindexofany">string.LastIndexOfAny</reference>）</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>rfindn</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.RFindN（请考虑使用 <reference name="string.LastIndexOf" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.lastindexof">string.LastIndexOf</reference> 或 <reference name="string.LastIndexOfAny" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.lastindexofany">string.LastIndexOfAny</reference>）</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>right</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.Right（请考虑使用 <reference name="string.Substring" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.substring">string.Substring</reference> 或 <reference name="string.AsSpan" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.memoryextensions.asspan">string.AsSpan</reference>）</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>rpad</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference name="string.PadRight" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.padright">string.PadRight</reference></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>rsplit</paragraph>
                            </entry>
                            <entry>
                                <paragraph>N/A</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>rstrip</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference name="string.TrimEnd" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.trimend">string.TrimEnd</reference></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>sha1_buffer</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.Sha1Buffer（请考虑使用 <reference name="System.Security.Cryptography.SHA1.HashData" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.security.cryptography.sha1.hashdata">System.Security.Cryptography.SHA1.HashData</reference>）</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>sha1_text</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.Sha1Text（请考虑使用 <reference name="System.Security.Cryptography.SHA1.HashData" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.security.cryptography.sha1.hashdata">System.Security.Cryptography.SHA1.HashData</reference> 和 StringExtensions.HexEncode）</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>sha256_buffer</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.Sha256Buffer（请考虑使用 <reference name="System.Security.Cryptography.SHA256.HashData" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.security.cryptography.sha256.hashdata">System.Security.Cryptography.SHA256.HashData</reference>）</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>sha256_text</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.Sha256Text（请考虑使用 <reference name="System.Security.Cryptography.SHA256.HashData" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.security.cryptography.sha256.hashdata">System.Security.Cryptography.SHA256.HashData</reference> 和 StringExtensions.HexEncode）</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>similarity</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.Similarity</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>simplify_path</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.SimplifyPath</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>split</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.Split（请考虑使用 <reference name="string.Split" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.split">string.Split</reference>）</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>split_floats</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.SplitFloat</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>strip_edges</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.StripEdges（请考虑使用 <reference name="string.Trim" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.trim">string.Trim</reference>、<reference name="string.TrimStart" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.trimstart">string.TrimStart</reference>、<reference name="string.TrimEnd" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.trimend">string.TrimEnd</reference>）</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>strip_escapes</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.StripEscapes</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>substr</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.Substr（请考虑使用 <reference name="string.Substring" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.substring">string.Substring</reference> 或 <reference name="string.AsSpan" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.memoryextensions.asspan">string.AsSpan</reference>）</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>to_ascii_buffer</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.ToAsciiBuffer（请考虑使用 <reference name="System.Text.Encoding.ASCII.GetBytes" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.text.asciiencoding.getbytes">System.Text.Encoding.ASCII.GetBytes</reference>）</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>to_camel_case</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.ToCamelCase</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>to_float</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.ToFloat（请考虑使用 <reference name="float.TryParse" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.single.tryparse">float.TryParse</reference> 或 <reference name="double.TryParse" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.double.tryparse">double.TryParse</reference>）</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>to_int</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.ToInt（请考虑使用 <reference name="int.TryParse" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.int32.tryparse">int.TryParse</reference> 或 <reference name="long.TryParse" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.int64.tryparse">long.TryParse</reference>）</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>to_lower</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference name="string.ToLower" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.tolower">string.ToLower</reference></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>to_pascal_case</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.ToPascalCase</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>to_snake_case</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.ToSnakeCase</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>to_upper</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference name="string.ToUpper" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.toupper">string.ToUpper</reference></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>to_utf16_buffer</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.ToUtf16Buffer（请考虑使用 <reference name="System.Text.Encoding.UTF16.GetBytes" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.text.unicodeencoding.getbytes">System.Text.Encoding.UTF16.GetBytes</reference>）</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>to_utf32_buffer</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.ToUtf32Buffer（请考虑使用 <reference name="System.Text.Encoding.UTF32.GetBytes" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.text.utf32encoding.getbytes">System.Text.Encoding.UTF32.GetBytes</reference>）</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>to_utf8_buffer</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.ToUtf8Buffer（请考虑使用 <reference name="System.Text.Encoding.UTF8.GetBytes" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.text.utf8encoding.getbytes">System.Text.Encoding.UTF8.GetBytes</reference>）</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>to_wchar_buffer</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.ToUtf16Buffer in Windows and StringExtensions.ToUtf32Buffer in other platforms</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>trim_prefix</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.TrimPrefix</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>trim_suffix</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.TrimSuffix</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>unicode_at</paragraph>
                            </entry>
                            <entry>
                                <paragraph><reference name="string[int]" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.chars">string[int]</reference> 索引器</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>uri_decode</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.URIDecode（请考虑使用 <reference name="System.Uri.UnescapeDataString" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.uri.unescapedatastring">System.Uri.UnescapeDataString</reference> ）</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>uri_encode</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.URIEncode（请考虑使用 <reference name="System.Uri.EscapeDataString" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.uri.escapedatastring">System.Uri.EscapeDataString</reference> ）</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>validate_node_name</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.ValidateNodeName</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>xml_escape</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.XMLEscape</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>xml_unescape</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.XMLUnescape</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
            <paragraph>Godot PackedByteArray 的创建字符串方法，以及在 C# 中的等效方法列表：</paragraph>
            <table>
                <tgroup cols="2">
                    <colspec colwidth="25"></colspec>
                    <colspec colwidth="92"></colspec>
                    <thead>
                        <row>
                            <entry>
                                <paragraph>GDScript</paragraph>
                            </entry>
                            <entry>
                                <paragraph>C#</paragraph>
                            </entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph>get_string_from_ascii</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.GetStringFromAscii（请考虑使用 <reference name="System.Text.Encoding.ASCII.GetString" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.text.asciiencoding.getstring">System.Text.Encoding.ASCII.GetString</reference> ）</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>get_string_from_utf16</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.GetStringFromUtf16（请考虑使用 <reference name="System.Text.Encoding.UTF16.GetString" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.text.unicodeencoding.getstring">System.Text.Encoding.UTF16.GetString</reference> ）</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>get_string_from_utf32</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.GetStringFromUtf32（请考虑使用 <reference name="System.Text.Encoding.UTF32.GetString" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.text.utf32encoding.getstring">System.Text.Encoding.UTF32.GetString</reference> ）</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>get_string_from_utf8</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.GetStringFromUtf8（请考虑使用 <reference name="System.Text.Encoding.UTF8.GetString" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.text.utf8encoding.getstring">System.Text.Encoding.UTF8.GetString</reference> ）</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>hex_encode</paragraph>
                            </entry>
                            <entry>
                                <paragraph>StringExtensions.HexEncode（请考虑使用 <reference name="System.Convert.ToHexString" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.convert.tohexstring">System.Convert.ToHexString</reference> ）</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph>.NET 在 <reference name="System.IO.Path" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.io.path">System.IO.Path</reference> 类下包含许多路径实用方法，用于处理非 Godot 路径（以 <literal>res://</literal> 或 <literal>user://</literal> 开头的路径）</paragraph>
                </list_item>
            </bullet_list>
            <target dupnames="$\ string\ interpolation" ids="id1" refuri="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/tokens/interpolated"></target>
            <target ids="double-tostring" names="double.tostring" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.double.tostring"></target>
            <target ids="double-tryparse" names="double.tryparse" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.double.tryparse"></target>
            <target ids="float-tostring" names="float.tostring" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.single.tostring"></target>
            <target ids="float-tryparse" names="float.tryparse" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.single.tryparse"></target>
            <target ids="int-parse" names="int.parse" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.int32.parse"></target>
            <target ids="int-tostring" names="int.tostring" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.int32.tostring"></target>
            <target ids="int-tryparse" names="int.tryparse" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.int32.tryparse"></target>
            <target ids="long-parse" names="long.parse" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.int64.parse"></target>
            <target ids="long-tostring" names="long.tostring" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.int64.tostring"></target>
            <target ids="long-tryparse" names="long.tryparse" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.int64.tryparse"></target>
            <target ids="uint-tostring" names="uint.tostring" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.uint32.tostring"></target>
            <target ids="ulong-tostring" names="ulong.tostring" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.uint64.tostring"></target>
            <target ids="object-gethashcode" names="object.gethashcode" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.object.gethashcode"></target>
            <target ids="regex" names="regex" refuri="https://learn.microsoft.com/en-us/dotnet/standard/base-types/regular-expressions"></target>
            <target ids="string-constructor" names="string\ constructor" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.-ctor"></target>
            <target ids="string-int" names="string[int]" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.chars"></target>
            <target ids="string-asspan" names="string.asspan" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.memoryextensions.asspan"></target>
            <target ids="string-compare" names="string.compare" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.compare"></target>
            <target ids="string-contains" names="string.contains" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.contains"></target>
            <target ids="string-endswith" names="string.endswith" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.endswith"></target>
            <target ids="string-equals" names="string.equals" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.equals"></target>
            <target ids="string-indexof" names="string.indexof" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.indexof"></target>
            <target ids="string-indexofany" names="string.indexofany" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.indexofany"></target>
            <target ids="string-insert" names="string.insert" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.insert"></target>
            <target ids="string-isnullorempty" names="string.isnullorempty" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.isnullorempty"></target>
            <target ids="string-isnullorwhitespace" names="string.isnullorwhitespace" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.isnullorwhitespace"></target>
            <target ids="string-join" names="string.join" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.join"></target>
            <target ids="string-lastindexof" names="string.lastindexof" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.lastindexof"></target>
            <target ids="string-lastindexofany" names="string.lastindexofany" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.lastindexofany"></target>
            <target ids="string-length" names="string.length" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.length"></target>
            <target ids="string-padleft" names="string.padleft" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.padleft"></target>
            <target ids="string-padright" names="string.padright" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.padright"></target>
            <target ids="string-remove" names="string.remove" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.remove"></target>
            <target ids="string-replace" names="string.replace" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.replace"></target>
            <target ids="string-split" names="string.split" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.split"></target>
            <target ids="string-startswith" names="string.startswith" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.startswith"></target>
            <target ids="string-substring" names="string.substring" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.substring"></target>
            <target ids="string-trim" names="string.trim" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.trim"></target>
            <target ids="string-trimend" names="string.trimend" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.trimend"></target>
            <target ids="string-trimstart" names="string.trimstart" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.trimstart"></target>
            <target ids="string-tolower" names="string.tolower" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.tolower"></target>
            <target ids="string-toupper" names="string.toupper" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.string.toupper"></target>
            <target ids="stringbuilder" names="stringbuilder" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.text.stringbuilder"></target>
            <target ids="system-convert-fromhexstring" names="system.convert.fromhexstring" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.convert.fromhexstring"></target>
            <target ids="system-convert-tohexstring" names="system.convert.tohexstring" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.convert.tohexstring"></target>
            <target ids="system-globalization-numberstyles-hexnumber" names="system.globalization.numberstyles.hexnumber" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.globalization.numberstyles#system-globalization-numberstyles-hexnumber"></target>
            <target ids="system-io-path" names="system.io.path" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.io.path"></target>
            <target ids="system-security-cryptography-md5-hashdata" names="system.security.cryptography.md5.hashdata" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.security.cryptography.md5.hashdata"></target>
            <target ids="system-security-cryptography-sha1-hashdata" names="system.security.cryptography.sha1.hashdata" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.security.cryptography.sha1.hashdata"></target>
            <target ids="system-security-cryptography-sha256-hashdata" names="system.security.cryptography.sha256.hashdata" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.security.cryptography.sha256.hashdata"></target>
            <target ids="system-text-encoding-ascii-getbytes" names="system.text.encoding.ascii.getbytes" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.text.asciiencoding.getbytes"></target>
            <target ids="system-text-encoding-ascii-getstring" names="system.text.encoding.ascii.getstring" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.text.asciiencoding.getstring"></target>
            <target ids="system-text-encoding-utf16-getbytes" names="system.text.encoding.utf16.getbytes" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.text.unicodeencoding.getbytes"></target>
            <target ids="system-text-encoding-utf16-getstring" names="system.text.encoding.utf16.getstring" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.text.unicodeencoding.getstring"></target>
            <target ids="system-text-encoding-utf32-getbytes" names="system.text.encoding.utf32.getbytes" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.text.utf32encoding.getbytes"></target>
            <target ids="system-text-encoding-utf32-getstring" names="system.text.encoding.utf32.getstring" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.text.utf32encoding.getstring"></target>
            <target ids="system-text-encoding-utf8-getbytes" names="system.text.encoding.utf8.getbytes" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.text.utf8encoding.getbytes"></target>
            <target ids="system-text-encoding-utf8-getstring" names="system.text.encoding.utf8.getstring" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.text.utf8encoding.getstring"></target>
            <target ids="system-uri-escapedatastring" names="system.uri.escapedatastring" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.uri.escapedatastring"></target>
            <target ids="system-uri-unescapedatastring" names="system.uri.unescapedatastring" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.uri.unescapedatastring"></target>
        </section>
        <section ids="nodepath" names="nodepath 节点路径">
            <title>节点路径</title>
            <paragraph>以下方法已转换为具有不同名称的属性：</paragraph>
            <table>
                <tgroup cols="2">
                    <colspec colwidth="20"></colspec>
                    <colspec colwidth="62"></colspec>
                    <thead>
                        <row>
                            <entry>
                                <paragraph>GDScript</paragraph>
                            </entry>
                            <entry>
                                <paragraph>C#</paragraph>
                            </entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><literal>is_empty()</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>IsEmpty</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section ids="signal" names="signal 信号">
            <title>信号</title>
            <paragraph>下列方法已转换为属性, 其各自名称已被更改:</paragraph>
            <table>
                <tgroup cols="2">
                    <colspec colwidth="20"></colspec>
                    <colspec colwidth="62"></colspec>
                    <thead>
                        <row>
                            <entry>
                                <paragraph>GDScript</paragraph>
                            </entry>
                            <entry>
                                <paragraph>C#</paragraph>
                            </entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><literal>get_name()</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Name</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>get_object()</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Owner</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
            <paragraph><literal>Signal</literal> 类型实现了可等待模式，这意味着它可以与 <literal>await</literal> 关键字一起使用。请参阅： <reference internal="True" refid="doc-c-sharp-differences-await"><inline classes="std std-ref">await 关键字</inline></reference> 。</paragraph>
            <paragraph>在 C# 中使用 Godot 信号的推荐方式不是使用 <literal>Signal</literal> 类型，而是使用生成的 C# 事件。请参阅： <reference internal="True" refuri="c_sharp_signals#doc-c-sharp-signals"><inline classes="std std-ref">C# 信号</inline></reference> 。</paragraph>
        </section>
        <section ids="callable" names="callable">
            <title>Callable</title>
            <paragraph>下列方法已转换为属性, 其各自名称已被更改:</paragraph>
            <table>
                <tgroup cols="2">
                    <colspec colwidth="20"></colspec>
                    <colspec colwidth="62"></colspec>
                    <thead>
                        <row>
                            <entry>
                                <paragraph>GDScript</paragraph>
                            </entry>
                            <entry>
                                <paragraph>C#</paragraph>
                            </entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><literal>get_object()</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Target</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>get_method()</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Method</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
            <paragraph>当前 C# 支持 <literal>Callable</literal> 如果满足以下条件之一：</paragraph>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph><literal>Callable</literal> 是使用 C# 的 <literal>Callable</literal> 类型创建的。</paragraph>
                </list_item>
                <list_item>
                    <paragraph><literal>Callable</literal> 是引擎的 <literal>可调用体</literal> 的原始版本。不支持自定义的 <literal>Callable</literal> 。当以下任一条件成立时，一个 <literal>Callable</literal> 就是自定义的：</paragraph>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph><literal>Callable</literal> 有绑定信息（用 <literal>bind</literal>/<literal>unbind</literal> 创建的 <literal>Callable</literal> 是不支持的）。</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><literal>Callable</literal> 是通过 GDExtension API 从其他语言创建的。</paragraph>
                        </list_item>
                    </bullet_list>
                </list_item>
            </bullet_list>
            <paragraph>一些方法，如 <literal>bind</literal> 和 <literal>unbind</literal> ，没有实现，请使用 lambda 表达式代替：</paragraph>
            <literal_block force="False" highlight_args="{}" language="csharp" linenos="False" xml:space="preserve">string name = "John Doe";
Callable callable = Callable.From(() =&gt; SayHello(name));

void SayHello(string name)
{
    GD.Print($"Hello {name}");
}</literal_block>
            <paragraph>lambda 表达式捕获了 <literal>name</literal> 变量，所以它可以绑定到 <literal>SayHello</literal> 方法。</paragraph>
        </section>
        <section ids="rid" names="rid">
            <title>RID</title>
            <paragraph>这种类型在 C# 中被命名为 <literal>Rid</literal> ，以遵循 .NET 的命名惯例。</paragraph>
            <paragraph>下列方法已转换为属性, 其各自名称已被更改:</paragraph>
            <table>
                <tgroup cols="2">
                    <colspec colwidth="20"></colspec>
                    <colspec colwidth="62"></colspec>
                    <thead>
                        <row>
                            <entry>
                                <paragraph>GDScript</paragraph>
                            </entry>
                            <entry>
                                <paragraph>C#</paragraph>
                            </entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><literal>get_id()</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Id</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>is_valid()</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>IsValid</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section ids="basis" names="basis">
            <title>Basis</title>
            <paragraph>结构体在 C# 中不能有无参数构造函数。因此 <literal>new Basis()</literal> 会将所有原始成员初始化为其默认值。使用 <literal>Basis.Identity</literal> 作为 GDScript 和 C++ 中的 <literal>Basis()</literal> 的等价物。</paragraph>
            <paragraph>以下方法已转换为具有不同名称的属性：</paragraph>
            <table>
                <tgroup cols="2">
                    <colspec colwidth="20"></colspec>
                    <colspec colwidth="62"></colspec>
                    <thead>
                        <row>
                            <entry>
                                <paragraph>GDScript</paragraph>
                            </entry>
                            <entry>
                                <paragraph>C#</paragraph>
                            </entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><literal>get_scale()</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Scale</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section ids="transform2d" names="transform2d">
            <title>Transform2D</title>
            <paragraph>结构在C#中不能有无参数构造函数, 因此 <literal>new Transform2D()</literal> 将所有原始成员初始化为其默认值. 请使用 <literal>Transform2D.Identity</literal>, 相当于GDScript和C++中的 <literal>Transform2D()</literal> .</paragraph>
            <paragraph>下列方法已转换为属性, 其各自名称已被更改:</paragraph>
            <table>
                <tgroup cols="2">
                    <colspec colwidth="20"></colspec>
                    <colspec colwidth="62"></colspec>
                    <thead>
                        <row>
                            <entry>
                                <paragraph>GDScript</paragraph>
                            </entry>
                            <entry>
                                <paragraph>C#</paragraph>
                            </entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><literal>get_rotation()</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Rotation</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>get_scale()</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Scale</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>get_skew()</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Skew</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section ids="transform3d" names="transform3d">
            <title>Transform3D</title>
            <paragraph>结构在 C# 中不能有无参构造函数。因此 <literal>new Transform3D()</literal> 会将所有原始成员初始化为其默认值。请使用 <literal>Transform3D.Identity</literal> 来代替 GDScript 和 C++ 中的 <literal>Transform3D()</literal> 。</paragraph>
            <paragraph>下列方法已转换为属性, 其各自名称已被更改:</paragraph>
            <table>
                <tgroup cols="2">
                    <colspec colwidth="20"></colspec>
                    <colspec colwidth="62"></colspec>
                    <thead>
                        <row>
                            <entry>
                                <paragraph>GDScript</paragraph>
                            </entry>
                            <entry>
                                <paragraph>C#</paragraph>
                            </entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><literal>get_rotation()</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Rotation</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>get_scale()</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Scale</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section ids="rect2" names="rect2">
            <title>Rect2</title>
            <paragraph>以下字段已转换为名称 <emphasis>稍有</emphasis> 不同的属性:</paragraph>
            <table>
                <tgroup cols="2">
                    <colspec colwidth="16"></colspec>
                    <colspec colwidth="66"></colspec>
                    <thead>
                        <row>
                            <entry>
                                <paragraph>GDScript</paragraph>
                            </entry>
                            <entry>
                                <paragraph>C#</paragraph>
                            </entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><literal>end</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>End</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
            <paragraph>以下方法已转换为具有不同名称的属性：</paragraph>
            <table>
                <tgroup cols="2">
                    <colspec colwidth="16"></colspec>
                    <colspec colwidth="66"></colspec>
                    <thead>
                        <row>
                            <entry>
                                <paragraph>GDScript</paragraph>
                            </entry>
                            <entry>
                                <paragraph>C#</paragraph>
                            </entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><literal>get_area()</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Area</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section ids="rect2i" names="rect2i">
            <title>Rect2i</title>
            <paragraph>这种类型在 C# 中被命名为 <literal>Rect2I</literal> ，以遵循 .NET 的命名惯例。</paragraph>
            <paragraph>以下字段已转换为名称 <emphasis>稍有</emphasis> 不同的属性:</paragraph>
            <table>
                <tgroup cols="2">
                    <colspec colwidth="16"></colspec>
                    <colspec colwidth="66"></colspec>
                    <thead>
                        <row>
                            <entry>
                                <paragraph>GDScript</paragraph>
                            </entry>
                            <entry>
                                <paragraph>C#</paragraph>
                            </entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><literal>end</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>End</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
            <paragraph>以下方法已转换为具有不同名称的属性：</paragraph>
            <table>
                <tgroup cols="2">
                    <colspec colwidth="16"></colspec>
                    <colspec colwidth="66"></colspec>
                    <thead>
                        <row>
                            <entry>
                                <paragraph>GDScript</paragraph>
                            </entry>
                            <entry>
                                <paragraph>C#</paragraph>
                            </entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><literal>get_area()</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Area</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section ids="aabb" names="aabb">
            <title>AABB</title>
            <paragraph>这种类型在 C# 中被命名为 <literal>Aabb</literal> ，以遵循 .NET 的命名惯例。</paragraph>
            <paragraph>以下方法已转换为具有不同名称的属性：</paragraph>
            <table>
                <tgroup cols="2">
                    <colspec colwidth="16"></colspec>
                    <colspec colwidth="66"></colspec>
                    <thead>
                        <row>
                            <entry>
                                <paragraph>GDScript</paragraph>
                            </entry>
                            <entry>
                                <paragraph>C#</paragraph>
                            </entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><literal>get_volume()</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Volume</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section ids="quaternion" names="quaternion">
            <title>Quaternion</title>
            <paragraph>结构在 C# 中不能有无参构造函数。因此 <literal>new Quaternion()</literal> 会将所有原始成员初始化为其默认值。请使用 <literal>Quaternion.Identity</literal> 来代替 GDScript 和 C++ 中的 <literal>Quaternion()</literal> 。</paragraph>
        </section>
        <section ids="projection" names="projection">
            <title>Projection</title>
            <paragraph>结构在 C# 中不能有无参构造函数。因此 <literal>new Projection()</literal> 会将所有原始成员初始化为其默认值。请使用 <literal>Projection.Identity</literal> 来代替 GDScript 和 C++ 中的 <literal>Projection()</literal> 。</paragraph>
        </section>
        <section ids="color" names="color">
            <title>Color</title>
            <paragraph>结构在 C# 中不能有无参构造函数。因此 <literal>new Color()</literal> 会将所有原始成员初始化为其默认值（这表示透明黑色）。请使用 <literal>Color.Black</literal> 来代替 GDScript 和 C++ 中的 <literal>Color()</literal> 。</paragraph>
            <paragraph>全局的 <literal>Color8</literal> 方法可以用字节来构造一个 Color 类型，它是 Color 类型的一个静态方法。</paragraph>
            <paragraph>Color 常量可以在 <literal>Colors</literal> 静态类中以只读属性的形式获取。</paragraph>
            <paragraph>以下方法已转换为具有不同名称的属性：</paragraph>
            <table>
                <tgroup cols="2">
                    <colspec colwidth="20"></colspec>
                    <colspec colwidth="62"></colspec>
                    <thead>
                        <row>
                            <entry>
                                <paragraph>GDScript</paragraph>
                            </entry>
                            <entry>
                                <paragraph>C#</paragraph>
                            </entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><literal>get_luminance()</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Luminance</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
            <paragraph>以下方法已转换为具有不同名称的方法：</paragraph>
            <table>
                <tgroup cols="2">
                    <colspec colwidth="20"></colspec>
                    <colspec colwidth="62"></colspec>
                    <thead>
                        <row>
                            <entry>
                                <paragraph>GDScript</paragraph>
                            </entry>
                            <entry>
                                <paragraph>C#</paragraph>
                            </entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><literal>html(String)</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>FromHtml(ReadOnlySpan&lt;char&gt;)</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
            <paragraph>以下方法改为使用构造函数：</paragraph>
            <table>
                <tgroup cols="2">
                    <colspec colwidth="20"></colspec>
                    <colspec colwidth="62"></colspec>
                    <thead>
                        <row>
                            <entry>
                                <paragraph>GDScript</paragraph>
                            </entry>
                            <entry>
                                <paragraph>C#</paragraph>
                            </entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph><literal>hex(int)</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Color(uint)</literal></paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph><literal>hex64(int)</literal></paragraph>
                            </entry>
                            <entry>
                                <paragraph><literal>Color(ulong)</literal></paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section ids="array" names="array 数组">
            <title>数组</title>
            <paragraph>与紧缩数组等价的是 <literal>System.Array</literal>。</paragraph>
            <paragraph>另见 <reference internal="True" refuri="c_sharp_collections#doc-c-sharp-collections-packedarray"><inline classes="std std-ref">C# 中的紧缩数组</inline></reference>。</paragraph>
            <paragraph>使用 <literal>Godot.Collections.Array</literal> 来表示无类型的 <literal>Variant</literal> 数组。 <literal>Godot.Collections.Array&lt;T&gt;</literal> 是对 <literal>Godot.Collections.Array</literal> 的类型安全封装。</paragraph>
            <paragraph>另见： <reference internal="True" refuri="c_sharp_collections#doc-c-sharp-collections-array"><inline classes="std std-ref">C# 中的数组</inline></reference> 。</paragraph>
        </section>
        <section ids="dictionary" names="dictionary 字典">
            <title>字典</title>
            <paragraph>Use <literal>Godot.Collections.Dictionary</literal> for an untyped <literal>Variant</literal> dictionary.
                <literal>Godot.Collections.Dictionary&lt;TKey, TValue&gt;</literal> is a type-safe wrapper around <literal>Godot.Collections.Dictionary</literal>.</paragraph>
            <paragraph>另见： <reference internal="True" refuri="c_sharp_collections#doc-c-sharp-collections-dictionary"><inline classes="std std-ref">C# 中的字典</inline></reference> 。</paragraph>
        </section>
        <section ids="variant" names="variant">
            <title><literal>Variant</literal></title>
            <paragraph><literal>Godot.Variant</literal> 用于表示 Godot 的原生 <reference internal="True" refuri="../../../classes/class_variant#class-variant"><inline classes="std std-ref">Variant</inline></reference> 类型。任何与 Variant 兼容的类型都可以与之相互转换。</paragraph>
            <paragraph>另见： <reference internal="True" refuri="c_sharp_variant#doc-c-sharp-variant"><inline classes="std std-ref">C# Variant</inline></reference> 。</paragraph>
        </section>
        <section ids="communicating-with-other-scripting-languages" names="communicating\ with\ other\ scripting\ languages 与其他脚本语言通信">
            <title>与其他脚本语言通信</title>
            <paragraph>在 <reference internal="True" refuri="../cross_language_scripting#doc-cross-language-scripting"><inline classes="std std-ref">跨语言脚本</inline></reference> 中有详细解释。</paragraph>
            <target refid="doc-c-sharp-differences-await"></target>
        </section>
        <section dupnames="await\ keyword" ids="await-keyword doc-c-sharp-differences-await" names="await\ 关键字 doc_c_sharp_differences_await">
            <title><literal>await</literal> 关键字</title>
            <paragraph>类似于 GDScript 的 <literal>await</literal> 关键字，可以通过 C# 的 <reference name="await 关键字" refuri="https://docs.microsoft.com/en-US/dotnet/csharp/language-reference/keywords/await">await 关键字</reference><target ids="await" names="await\ 关键字" refuri="https://docs.microsoft.com/en-US/dotnet/csharp/language-reference/keywords/await"></target> 来实现。</paragraph>
            <paragraph>C# 中的 <literal>await</literal> 关键字可以用于任何可等待的表达式。它通常用于类型为 <reference name="Task" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.threading.tasks.task">Task</reference> 、<reference name="Task&lt;TResult&gt;" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.threading.tasks.task-1">Task&lt;TResult&gt;</reference> 、<reference name="ValueTask" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.threading.tasks.valuetask">ValueTask</reference> 或 <reference name="ValueTask&lt;TResult&gt;" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.threading.tasks.valuetask-1">ValueTask&lt;TResult&gt;</reference> 的操作数。</paragraph>
            <paragraph>表达式 <literal>t</literal> 如果满足以下条件之一，则可等待：</paragraph>
            <bullet_list bullet="*">
                <list_item>
                    <paragraph><literal>t</literal> 的编译时类型为 <literal>dynamic</literal> 。</paragraph>
                </list_item>
                <list_item>
                    <paragraph><literal>t</literal> 有一个可访问的名为 <literal>GetAwaiter</literal> 的实例方法或扩展方法，没有参数和类型参数，返回类型为 <literal>A</literal> ，并且满足以下所有条件：</paragraph>
                    <bullet_list bullet="*">
                        <list_item>
                            <paragraph><literal>A</literal> 实现了接口 <literal>System.Runtime.CompilerServices.INotifyCompletion</literal> 。</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><literal>A</literal> 有一个可访问、可读的实例属性 <literal>IsCompleted</literal> ，类型为 <literal>bool</literal> 。</paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><literal>A</literal> 有一个可访问的实例方法 <literal>GetResult</literal> ，没有参数和类型参数。</paragraph>
                        </list_item>
                    </bullet_list>
                </list_item>
            </bullet_list>
            <target ids="task" names="task" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.threading.tasks.task"></target>
            <target ids="task-tresult" names="task&lt;tresult&gt;" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.threading.tasks.task-1"></target>
            <target ids="valuetask" names="valuetask" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.threading.tasks.valuetask"></target>
            <target ids="valuetask-tresult" names="valuetask&lt;tresult&gt;" refuri="https://learn.microsoft.com/en-us/dotnet/api/system.threading.tasks.valuetask-1"></target>
            <paragraph>可以用 <literal>await</literal> 关键字和 <literal>GodotObject.ToSignal</literal> 实现 GDScript 中等待信号的等效操作。</paragraph>
            <paragraph>示例：</paragraph>
            <literal_block force="False" highlight_args="{}" language="csharp" linenos="False" xml:space="preserve">public async Task SomeFunction()
{
    await ToSignal(timer, Timer.SignalName.Timeout);
    GD.Print("After timeout");
}</literal_block>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="翻译状态" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

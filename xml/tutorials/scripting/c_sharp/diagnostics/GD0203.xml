<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/tutorials/scripting/c_sharp/diagnostics/GD0203.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <section ids="gd0203-the-delegate-signature-of-the-signal-must-return-void" names="gd0203:\ the\ delegate\ signature\ of\ the\ signal\ must\ return\ void">
        <title>GD0203: The delegate signature of the signal must return void</title>
        <table>
            <tgroup cols="2">
                <colspec colwidth="36"></colspec>
                <colspec colwidth="55"></colspec>
                <thead>
                    <row>
                        <entry>
                        </entry>
                        <entry>
                        </entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>
                            <paragraph><strong>规则 ID</strong></paragraph>
                        </entry>
                        <entry>
                            <paragraph>GD0203</paragraph>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <paragraph><strong>类别</strong></paragraph>
                        </entry>
                        <entry>
                            <paragraph>用法</paragraph>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <paragraph><strong>修复是中断修复还是非中断修复</strong></paragraph>
                        </entry>
                        <entry>
                            <paragraph>Breaking - If the return type is changed</paragraph>
                            <paragraph>Non-breaking - If the <literal>[Signal]</literal> attribute is removed</paragraph>
                        </entry>
                    </row>
                    <row>
                        <entry>
                            <paragraph><strong>默认启用</strong></paragraph>
                        </entry>
                        <entry>
                            <paragraph>是</paragraph>
                        </entry>
                    </row>
                </tbody>
            </tgroup>
        </table>
        <section ids="cause" names="cause 原因">
            <title>原因</title>
            <paragraph>A delegate annotated with the <literal>[Signal]</literal> attribute has a return type when
                <literal>void</literal> was expected.</paragraph>
        </section>
        <section ids="rule-description" names="rule\ description 规则说明">
            <title>规则说明</title>
            <paragraph>Every signal must return <literal>void</literal>. There can be multiple callbacks registered
                for each signal, if signal callbacks could return something it wouldn't be
                possible to determine which of the returned values to use.</paragraph>
            <literal_block force="False" highlight_args="{}" language="csharp" linenos="False" xml:space="preserve">// This signal delegate is invalid because it doesn't return void.
public int InvalidSignalEventHandler();

// This signal delegate is valid because it returns void.
public void ValidSignalEventHandler();</literal_block>
            <paragraph>Take a look at the <reference internal="True" refuri="../c_sharp_signals#doc-c-sharp-signals"><inline classes="std std-ref">C# signals</inline></reference> documentation for more
                information about how to declare and use signals.</paragraph>
        </section>
        <section ids="how-to-fix-violations" names="how\ to\ fix\ violations 如何解决冲突">
            <title>如何解决冲突</title>
            <paragraph>To fix a violation of this rule, change the delegate to return <literal>void</literal> or
                remove the <literal>[Signal]</literal> attribute from the delegate. Note that removing the
                attribute will mean the signal is not registered.</paragraph>
            <tip>
                <paragraph>If the signal doesn't need to interact with Godot, consider using
                    <reference name="C# events" refuri="https://learn.microsoft.com/en-us/dotnet/csharp/programming-guide/events/">C# events</reference><target ids="c-events" names="c#\ events" refuri="https://learn.microsoft.com/en-us/dotnet/csharp/programming-guide/events/"></target>
                    directly. Pure C# events allow you to use any C# type for its parameters.</paragraph>
            </tip>
        </section>
        <section ids="when-to-suppress-warnings" names="when\ to\ suppress\ warnings 何时禁止显示警告">
            <title>何时禁止显示警告</title>
            <paragraph>Do not suppress a warning from this rule. Signal delegates that return something
                will result in unexpected runtime errors.</paragraph>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="翻译状态" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

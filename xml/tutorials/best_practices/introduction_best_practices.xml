<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/tutorials/best_practices/introduction_best_practices.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <target refid="doc-introduction-best-practices"></target>
    <section ids="introduction doc-introduction-best-practices" names="introduction 前言 doc_introduction_best_practices">
        <title>前言</title>
        <paragraph>本系列是最佳实践的合集，可让你在使用 Godot 时更加高效。</paragraph>
        <paragraph>在 Godot 中，你在项目代码结构和拆分场景方面有很大的自由度。不同的做法有不同的优缺点，如果使用引擎的时间不够长，是很难进行权衡的。</paragraph>
        <paragraph>构造代码和解决特定编程问题的方法总是有很多的，这里不可能涵盖所有内容。</paragraph>
        <paragraph>这就是为什么每篇文章都是从某个现实世界的问题开始的。我们会将每个问题分解为基本问题、提出解决方案、分析每种选择的利弊，并强调针对当前问题的最佳解决方案。</paragraph>
        <paragraph>你应该从 <reference internal="True" refuri="what_are_godot_classes#doc-what-are-godot-classes"><inline classes="std std-ref">在 Godot 中应用面向对象原则</inline></reference> 开始阅读。里面解释了 Godot 的节点和场景与其他面向对象的编程语言中的类和对象的关联，可以帮助你理解本系列的其他内容。</paragraph>
        <note>
            <paragraph>Godot 中的最佳实践依赖于面向对象的设计原则。我们使用的是<reference name="单一职责" refuri="https://en.wikipedia.org/wiki/Single_responsibility_principle">单一职责</reference><target ids="id1" names="单一职责" refuri="https://en.wikipedia.org/wiki/Single_responsibility_principle"></target>原则和<reference name="封装" refuri="https://en.wikipedia.org/wiki/Encapsulation_(computer_programming)">封装</reference><target ids="id2" names="封装" refuri="https://en.wikipedia.org/wiki/Encapsulation_(computer_programming)"></target>等工具。</paragraph>
        </note>
        <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="翻译状态" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
    </section>
</document>

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/tutorials/physics/large_world_coordinates.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <target refid="doc-large-world-coordinates"></target>
    <section ids="large-world-coordinates doc-large-world-coordinates" names="large\ world\ coordinates 大世界坐标 doc_large_world_coordinates">
        <title>大世界坐标</title>
        <note>
            <paragraph>大世界坐标主要用于 3D 项目；2D 项目很少会用到。此外，启用大世界坐标后，2D 渲染目前无法从精度的增加中获益，但 3D 渲染可以。</paragraph>
        </note>
        <section ids="why-use-large-world-coordinates" names="why\ use\ large\ world\ coordinates? 为什么要使用大世界坐标？">
            <title>为什么要使用大世界坐标？</title>
            <paragraph>在 Godot 中，物理仿真和渲染都依赖于<emphasis>浮点数</emphasis>。然而，计算机中浮点数的<strong>精度和范围是有限的</strong>，可能在太空、星球尺度的仿真游戏等拥有庞大世界的游戏中产生问题。</paragraph>
            <paragraph>浮点数的精度在 <literal>0.0</literal> 附近是最高的。随着取值离 <literal>0.0</literal> 越来越远，精度就会变得越来越低。每次浮点数的<emphasis>指数</emphasis>变大时，精度就会降低，也就是浮点数取值越过 2 的幂（2、4、8、16……）的时候。此时浮点数的最小步长就会<emphasis>增大</emphasis>，精度因此变低。</paragraph>
            <paragraph>在实践中，这意味着玩家远离世界原点（2D 游戏的 <literal>Vector2(0, 0)</literal> 和 3D 游戏的 <literal>Vector3(0, 0, 0)</literal>），精度就会下降。</paragraph>
            <paragraph>精度的丢失可能会导致远离世界原点的对象看上去在“抖动”，因为模型的位置会吸附到最接近的浮点数能够表示的值。这种情况下，如果玩家远离世界原点，还可能导致物理方面的问题。</paragraph>
            <paragraph>范围决定的是所能够存储的最小和最大值。如果玩家尝试移出这个范围就会直接失败。但是实际情况下，在能够受到范围影响之前几乎都会遇到浮点数精度问题。</paragraph>
            <paragraph>范围和精度（两个指数间隔的最小步长）取决于浮点数的类型。单精度浮点数的<emphasis>理论</emphasis>范围支持存储极高的值，单精度很低。实践中，无法表示所有整数值的浮点数类型并不是很有用。极值附近的精度会变得非常低，低到连两个<emphasis>整数</emphasis>值也无法区分。</paragraph>
            <paragraph>以下是浮点数能够表示整数值的范围：</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><strong>单精度浮点数范围（表示所有整数）：</strong>-16,777,216 和 16,777,216 之间</paragraph>
                </list_item>
                <list_item>
                    <paragraph><strong>Double-precision float range (represent all integers):</strong> Between -9 quadrillion and 9 quadrillion</paragraph>
                </list_item>
            </bullet_list>
            <table>
                <tgroup cols="4">
                    <colspec colwidth="22"></colspec>
                    <colspec colwidth="23"></colspec>
                    <colspec colwidth="23"></colspec>
                    <colspec colwidth="77"></colspec>
                    <tbody>
                        <row>
                            <entry>
                                <paragraph>范围</paragraph>
                            </entry>
                            <entry>
                                <paragraph>单精度步长</paragraph>
                            </entry>
                            <entry>
                                <paragraph>双精度步长</paragraph>
                            </entry>
                            <entry>
                                <paragraph>注释</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>[1; 2]</paragraph>
                            </entry>
                            <entry>
                                <paragraph>~0.0000001</paragraph>
                            </entry>
                            <entry>
                                <paragraph>~1e-15</paragraph>
                            </entry>
                            <entry>
                                <paragraph>0.0 附近精度会变大（本表省略）。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>[2; 4]</paragraph>
                            </entry>
                            <entry>
                                <paragraph>~0.0000002</paragraph>
                            </entry>
                            <entry>
                                <paragraph>~1e-15</paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>[4; 8]</paragraph>
                            </entry>
                            <entry>
                                <paragraph>~0.0000005</paragraph>
                            </entry>
                            <entry>
                                <paragraph>~1e-15</paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>[8; 16]</paragraph>
                            </entry>
                            <entry>
                                <paragraph>~0.000001</paragraph>
                            </entry>
                            <entry>
                                <paragraph>~1e-14</paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>[16; 32]</paragraph>
                            </entry>
                            <entry>
                                <paragraph>~0.000002</paragraph>
                            </entry>
                            <entry>
                                <paragraph>~1e-14</paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>[32; 64]</paragraph>
                            </entry>
                            <entry>
                                <paragraph>~0.000004</paragraph>
                            </entry>
                            <entry>
                                <paragraph>~1e-14</paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>[64; 128]</paragraph>
                            </entry>
                            <entry>
                                <paragraph>~0.000008</paragraph>
                            </entry>
                            <entry>
                                <paragraph>~1e-13</paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>[128; 256]</paragraph>
                            </entry>
                            <entry>
                                <paragraph>~0.000015</paragraph>
                            </entry>
                            <entry>
                                <paragraph>~1e-13</paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>[256; 512]</paragraph>
                            </entry>
                            <entry>
                                <paragraph>~0.00003</paragraph>
                            </entry>
                            <entry>
                                <paragraph>~1e-13</paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>[512; 1024]</paragraph>
                            </entry>
                            <entry>
                                <paragraph>~0.00006</paragraph>
                            </entry>
                            <entry>
                                <paragraph>~1e-12</paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>[1024; 2048]</paragraph>
                            </entry>
                            <entry>
                                <paragraph>~0.0001</paragraph>
                            </entry>
                            <entry>
                                <paragraph>~1e-12</paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>[2048; 4096]</paragraph>
                            </entry>
                            <entry>
                                <paragraph>~0.0002</paragraph>
                            </entry>
                            <entry>
                                <paragraph>~1e-12</paragraph>
                            </entry>
                            <entry>
                                <paragraph>第一人称 3D 游戏的最大<emphasis>推荐</emphasis>单精度范围，不会有渲染和物理方面的问题。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>[4096; 8192]</paragraph>
                            </entry>
                            <entry>
                                <paragraph>~0.0005</paragraph>
                            </entry>
                            <entry>
                                <paragraph>~1e-12</paragraph>
                            </entry>
                            <entry>
                                <paragraph>第三人称 3D 游戏的最大<emphasis>推荐</emphasis>单精度范围，不会有渲染和物理方面的问题。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>[8192; 16384]</paragraph>
                            </entry>
                            <entry>
                                <paragraph>~0.001</paragraph>
                            </entry>
                            <entry>
                                <paragraph>~1e-12</paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>[16384; 32768]</paragraph>
                            </entry>
                            <entry>
                                <paragraph>~0.0019</paragraph>
                            </entry>
                            <entry>
                                <paragraph>~1e-11</paragraph>
                            </entry>
                            <entry>
                                <paragraph>俯视角 3D 游戏的最大<emphasis>推荐</emphasis>单精度范围，不会有渲染和物理方面的问题。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>[32768; 65536]</paragraph>
                            </entry>
                            <entry>
                                <paragraph>~0.0039</paragraph>
                            </entry>
                            <entry>
                                <paragraph>~1e-11</paragraph>
                            </entry>
                            <entry>
                                <paragraph>所有 3D 游戏的最大<emphasis>推荐</emphasis>单精度范围。双精度（大世界坐标）通常会超过这个点。</paragraph>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>[65536; 131072]</paragraph>
                            </entry>
                            <entry>
                                <paragraph>~0.0078</paragraph>
                            </entry>
                            <entry>
                                <paragraph>~1e-11</paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>[131072; 262144]</paragraph>
                            </entry>
                            <entry>
                                <paragraph>~0.0156</paragraph>
                            </entry>
                            <entry>
                                <paragraph>~1e-10</paragraph>
                            </entry>
                            <entry>
                            </entry>
                        </row>
                        <row>
                            <entry>
                                <paragraph>&gt; 262144</paragraph>
                            </entry>
                            <entry>
                                <paragraph>&gt; ~0.0313</paragraph>
                            </entry>
                            <entry>
                                <paragraph>~1e-10（0.0000000001）</paragraph>
                            </entry>
                            <entry>
                                <paragraph>超过这个值之后，双精度仍然比单精度要精确地多。</paragraph>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
            <paragraph>使用单精度浮点数时，可以超过建议的范围，但此时就会更多可见的渲染问题，物理问题也会变得更常见（例如玩家在某些方向上无法直线移动）。</paragraph>
            <seealso>
                <paragraph>详见 <reference name="Demystifying Floating Point Precision" refuri="https://blog.demofox.org/2017/11/21/">Demystifying Floating Point Precision</reference> 一文。</paragraph>
            </seealso>
        </section>
        <section ids="how-large-world-coordinates-work" names="how\ large\ world\ coordinates\ work 大世界坐标的工作原理">
            <title>大世界坐标的工作原理</title>
            <paragraph>大世界坐标（也叫<strong>双精度物理</strong>）能够增加引擎中所有浮点数计算的精度级别。</paragraph>
            <paragraph>By default, <reference internal="True" refuri="../../classes/class_float#class-float"><inline classes="std std-ref">float</inline></reference> is 64-bit in GDScript, but <reference internal="True" refuri="../../classes/class_vector2#class-vector2"><inline classes="std std-ref">Vector2</inline></reference>,
                <reference internal="True" refuri="../../classes/class_vector3#class-vector3"><inline classes="std std-ref">Vector3</inline></reference> and <reference internal="True" refuri="../../classes/class_vector4#class-vector4"><inline classes="std std-ref">Vector4</inline></reference> are 32-bit. This means that the
                precision of vector types is much more limited. To resolve this, we can increase
                the number of bits used to represent a floating-point number in a Vector type.
                This results in an <emphasis>exponential</emphasis> increase in precision, which means the final
                value is not just twice as precise, but potentially thousands of times more
                precise at high values. The maximum value that can be represented is also
                greatly increased by going from a single-precision float to a double-precision
                float.</paragraph>
            <paragraph>To avoid model snapping issues when far away from the world origin, Godot's 3D
                rendering engine will increase its precision for rendering operations when large
                world coordinates are enabled. The shaders do not use double-precision floats
                for performance reasons, but an <reference name="alternative solution" refuri="https://github.com/godotengine/godot/pull/66178">alternative solution</reference>
                is used to emulate double precision for rendering using single-precision floats.</paragraph>
            <note>
                <paragraph>Enabling large world coordinates comes with a performance and memory usage
                    penalty, especially on 32-bit CPUs. Only enable large world coordinates if
                    you actually need them.</paragraph>
                <paragraph>This feature is tailored towards mid-range/high-end desktop platforms. Large
                    world coordinates may not perform well on low-end mobile devices, unless you
                    take steps to reduce CPU usage with other means (such as decreasing the
                    number of physics ticks per second).</paragraph>
                <paragraph>On low-end platforms, an <emphasis>origin shifting</emphasis> approach can be used instead to
                    allow for large worlds without using double-precision physics and rendering.
                    Origin shifting works with single-precision floats, but it introduces more
                    complexity to game logic, especially in multiplayer games. Therefore, origin
                    shifting is not detailed on this page.</paragraph>
            </note>
        </section>
        <section ids="who-are-large-world-coordinates-for" names="who\ are\ large\ world\ coordinates\ for? 大世界坐标的目标群体是谁？">
            <title>大世界坐标的目标群体是谁？</title>
            <paragraph>Large world coordinates are typically required for 3D space or planetary-scale
                simulation games. This extends to games that require supporting <emphasis>very</emphasis> fast
                movement speeds, but also very slow <emphasis>and</emphasis> precise movements at times.</paragraph>
            <paragraph>On the other hand, it's important to only use large world coordinates when
                actually required (for performance reasons). Large world coordinates are usually
                <strong>not</strong> required for:</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>2D games, as precision issues are usually less noticeable.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Games with small-scale or medium-scale worlds.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Games with large worlds, but split into different levels with loading
                        sequences in between. You can center each level portion around the world
                        origin to avoid precision issues without a performance penalty.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>Open world games with a <emphasis>playable on-foot area</emphasis> not exceeding 8192×8192 meters
                        (centered around the world origin). As shown in the above table, the level of
                        precision remains acceptable within that range, even for a first-person game.</paragraph>
                </list_item>
            </bullet_list>
            <paragraph><strong>If in doubt</strong>, you probably don't need to use large world coordinates in your
                project. For reference, most modern AAA open world titles don't use a large
                world coordinates system and still rely on single-precision floats for both
                rendering and physics.</paragraph>
        </section>
        <section ids="enabling-large-world-coordinates" names="enabling\ large\ world\ coordinates 启用大世界坐标">
            <title>启用大世界坐标</title>
            <paragraph>This process requires recompiling the editor and all export template binaries
                you intend to use. If you only intend to export your project in release mode,
                you can skip the compilation of debug export templates. In any case, you'll need
                to compile an editor build so you can test your large precision world without
                having to export the project every time.</paragraph>
            <paragraph>See the <reference internal="True" refuri="../../contributing/development/compiling/index#toc-devel-compiling"><inline classes="std std-ref">Compiling</inline></reference> section for compiling
                instructions for each target platform. You will need to add the <literal>precision=double</literal>
                SCons option when compiling the editor and export templates.</paragraph>
            <paragraph>The resulting binaries will be named with a <literal>.double</literal> suffix to distinguish
                them from single-precision binaries (which lack any precision suffix). You can
                then specify the binaries as custom export templates in your project's export
                presets in the Export dialog.</paragraph>
        </section>
        <section ids="compatibility-between-single-precision-and-double-precision-builds" names="compatibility\ between\ single-precision\ and\ double-precision\ builds 单双精度构建之间的的兼容性">
            <title>单双精度构建之间的的兼容性</title>
            <paragraph>When saving a <emphasis>binary</emphasis> resource using the <reference internal="True" refuri="../../classes/class_resourcesaver#class-resourcesaver"><inline classes="std std-ref">ResourceSaver</inline></reference> singleton,
                a special flag is stored in the file if the resource was saved using a build
                that uses double-precision numbers. As a result, all binary resources will
                change on disk when you switch to a double-precision build and save over them.</paragraph>
            <paragraph>Both single-precision and double-precision builds support using the
                <reference internal="True" refuri="../../classes/class_resourceloader#class-resourceloader"><inline classes="std std-ref">ResourceLoader</inline></reference> singleton on resources that use this special flag.
                This means single-precision builds can load resources saved using
                double-precision builds and vice versa. Text-based resources don't store a
                double-precision flag, as they don't require such a flag for correct reading.</paragraph>
            <section ids="known-incompatibilities" names="known\ incompatibilities 已知的不兼容">
                <title>已知的不兼容</title>
                <bullet_list bullet="-">
                    <list_item>
                        <paragraph>In a networked multiplayer game, the server and all clients should be using
                            the same build type to ensure precision remains consistent across clients.
                            Using different build types <emphasis>may</emphasis> work, but various issues can occur.</paragraph>
                    </list_item>
                    <list_item>
                        <paragraph>The GDExtension API changes in an incompatible way in double-precision builds.
                            This means extensions <strong>must</strong> be rebuilt to work with double-precision
                            builds. On the extension developer's end, the <literal>REAL_T_IS_DOUBLE</literal> define is
                            enabled when building a GDExtension with <literal>precision=double</literal>.
                            <literal>real_t</literal> can be used as an alias for <literal>float</literal> in single-precision builds,
                            and <literal>double</literal> in double-precision builds.</paragraph>
                    </list_item>
                </bullet_list>
            </section>
        </section>
        <section ids="limitations" names="limitations 限制">
            <title>限制</title>
            <paragraph>Since 3D rendering shaders don't actually use double-precision floats, there are
                some limitations when it comes to 3D rendering precision:</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>Shaders using the <literal>skip_vertex_transform</literal> or <literal>world_vertex_coords</literal> don't
                        benefit from increased precision.</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refuri="../3d/standard_material_3d#doc-standard-material-3d-triplanar-mapping"><inline classes="std std-ref">Triplanar mapping</inline></reference> doesn't
                        benefit from increased precision. Materials using triplanar mapping will exhibit
                        visible jittering when far away from the world origin.</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>2D rendering currently doesn't benefit from increased precision when large world
                coordinates are enabled. This can cause visible model snapping to occur when
                far away from the world origin (starting from a few million pixels at typical
                zoom levels). 2D physics calculations will still benefit from increased
                precision though.</paragraph>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="翻译状态" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

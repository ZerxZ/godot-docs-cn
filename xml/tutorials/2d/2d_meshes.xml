<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.17.1 -->
<document source="/home/runner/work/godot-docs-cn/godot-docs-cn/godot-docs/docs/tutorials/2d/2d_meshes.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/">
    <target refid="doc-2d-meshes"></target>
    <section ids="d-meshes doc-2d-meshes" names="2d\ meshes 2d\ 网格 doc_2d_meshes">
        <title>2D 网格</title>
        <section ids="introduction" names="introduction 前言">
            <title>前言</title>
            <paragraph>在 3D 中，网格用于显示世界。在 2D 中它们不常见，因为图片使用得更频繁。Godot 的 2D 部分是一个纯 2D 引擎，因此它不能直接显示 3D 网格（尽管它可以通过 <literal>Viewport</literal> 和 <literal>ViewportTexture</literal> 来实现）。</paragraph>
            <seealso>
                <paragraph>如果你对在二维视口上显示三维网格感兴趣, 请参见 <reference internal="True" refuri="../shaders/using_viewport_as_texture#doc-viewport-as-texture"><inline classes="std std-ref">使用 Viewport 作为纹理</inline></reference> 教程.</paragraph>
            </seealso>
            <paragraph>2D 网格是包含二维几何（Z 轴可以省略或忽略）而不是三维几何的网格。你可以尝试使用代码中的 <literal>SurfaceTool</literal> 创建它们，并在 <literal>MeshInstance2D</literal> 节点中显示它们。</paragraph>
            <paragraph>目前，在编辑器中生成 2D 网格的唯一方法是导入 OBJ 文件作为网格，或者从 Sprite2D 转换而来。</paragraph>
        </section>
        <section ids="optimizing-pixels-drawn" names="optimizing\ pixels\ drawn 优化绘制的像素">
            <title>优化绘制的像素</title>
            <paragraph>在某些情况下, 这个工作流程对于优化二维绘图比较有用. 当绘制具有透明度的大型图像时,Godot将把整个四方形(quad)绘制到屏幕上. 大片的透明区域还是会被绘制.</paragraph>
            <paragraph>如果绘制非常大的图像时（大概屏幕大小），或者将多个有大透明区域的图像叠加在一起（例如使用 <literal>ParallaxBackground</literal> 时），这会影响性能，尤其是在移动设备上。</paragraph>
            <paragraph>转换成网格能确保只绘制不透明部分, 其余部分被忽略.</paragraph>
        </section>
        <section ids="converting-sprite2ds-to-2d-meshes" names="converting\ sprite2ds\ to\ 2d\ meshes 将\ sprite2d\ 转换为\ 2d\ 网格">
            <title>将 Sprite2D 转换为 2D 网格</title>
            <paragraph>你可以通过把 <literal>Sprite2D</literal> 转换为 <literal>MeshInstance2D</literal> 的方法来利用这种优化。从边缘有大量透明的图片开始，就像这棵树：</paragraph>
            <image candidates="{'*': 'tutorials/2d/img/mesh2d1.png'}" uri="tutorials/2d/img/mesh2d1.png"></image>
            <paragraph>把它放到一个 <literal>Sprite2D</literal> 中，从菜单选择“转换为 2D 网格”：</paragraph>
            <image candidates="{'*': 'tutorials/2d/img/mesh2d2.png'}" uri="tutorials/2d/img/mesh2d2.png"></image>
            <paragraph>会出现一个对话框, 显示将要创建的二维网格预览:</paragraph>
            <image candidates="{'*': 'tutorials/2d/img/mesh2d3.png'}" uri="tutorials/2d/img/mesh2d3.png"></image>
            <paragraph>很多情况下, 默认值已经足够好, 但是你可以根据需要改变growth(增长)和simplication(简化):</paragraph>
            <image candidates="{'*': 'tutorials/2d/img/mesh2d4.png'}" uri="tutorials/2d/img/mesh2d4.png"></image>
            <paragraph>最后，按下 <literal>转换 2D 网格</literal> 按钮，你的 Sprite2D 将被替换：</paragraph>
            <image candidates="{'*': 'tutorials/2d/img/mesh2d5.png'}" uri="tutorials/2d/img/mesh2d5.png"></image>
            <substitution_definition names="weblate_widget"><reference refuri="https://hosted.weblate.org/engage/godot-engine/zh_CN/?utm_source=widget"><image alt="翻译状态" candidates="{'?': 'https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png'}" height="66" uri="https://hosted.weblate.org/widgets/godot-engine/zh_CN/godot-docs/287x66-white.png" width="287"></image></reference></substitution_definition>
        </section>
    </section>
</document>

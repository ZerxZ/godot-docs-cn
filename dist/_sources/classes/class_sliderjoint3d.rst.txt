:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/SliderJoint3D.xml.

.. _class_SliderJoint3D:

SliderJoint3D
=============

**继承：** :ref:`Joint3D<class_Joint3D>` **<** :ref:`Node3D<class_Node3D>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

一种物理关节，能够将 3D 物理体的移动限制在相对于另一个物理体的某个轴上。

.. rst-class:: classref-introduction-group

描述
----

一种物理关节，能够将 3D 物理体的移动限制在相对于另一个物理体的某个轴上。例如物体 A 是代表活塞基底的 :ref:`StaticBody3D<class_StaticBody3D>`\ ，而物体 B 是代表活塞头的 :ref:`RigidBody3D<class_RigidBody3D>`\ ，能够上下移动。

.. rst-class:: classref-reftable-group

属性
----

.. table::
   :widths: auto

   +---------------------------+----------------------------------------------------------------------------------------------+----------+
   | :ref:`float<class_float>` | :ref:`angular_limit/damping<class_SliderJoint3D_property_angular_limit/damping>`             | ``0.0``  |
   +---------------------------+----------------------------------------------------------------------------------------------+----------+
   | :ref:`float<class_float>` | :ref:`angular_limit/lower_angle<class_SliderJoint3D_property_angular_limit/lower_angle>`     | ``0.0``  |
   +---------------------------+----------------------------------------------------------------------------------------------+----------+
   | :ref:`float<class_float>` | :ref:`angular_limit/restitution<class_SliderJoint3D_property_angular_limit/restitution>`     | ``0.7``  |
   +---------------------------+----------------------------------------------------------------------------------------------+----------+
   | :ref:`float<class_float>` | :ref:`angular_limit/softness<class_SliderJoint3D_property_angular_limit/softness>`           | ``1.0``  |
   +---------------------------+----------------------------------------------------------------------------------------------+----------+
   | :ref:`float<class_float>` | :ref:`angular_limit/upper_angle<class_SliderJoint3D_property_angular_limit/upper_angle>`     | ``0.0``  |
   +---------------------------+----------------------------------------------------------------------------------------------+----------+
   | :ref:`float<class_float>` | :ref:`angular_motion/damping<class_SliderJoint3D_property_angular_motion/damping>`           | ``1.0``  |
   +---------------------------+----------------------------------------------------------------------------------------------+----------+
   | :ref:`float<class_float>` | :ref:`angular_motion/restitution<class_SliderJoint3D_property_angular_motion/restitution>`   | ``0.7``  |
   +---------------------------+----------------------------------------------------------------------------------------------+----------+
   | :ref:`float<class_float>` | :ref:`angular_motion/softness<class_SliderJoint3D_property_angular_motion/softness>`         | ``1.0``  |
   +---------------------------+----------------------------------------------------------------------------------------------+----------+
   | :ref:`float<class_float>` | :ref:`angular_ortho/damping<class_SliderJoint3D_property_angular_ortho/damping>`             | ``1.0``  |
   +---------------------------+----------------------------------------------------------------------------------------------+----------+
   | :ref:`float<class_float>` | :ref:`angular_ortho/restitution<class_SliderJoint3D_property_angular_ortho/restitution>`     | ``0.7``  |
   +---------------------------+----------------------------------------------------------------------------------------------+----------+
   | :ref:`float<class_float>` | :ref:`angular_ortho/softness<class_SliderJoint3D_property_angular_ortho/softness>`           | ``1.0``  |
   +---------------------------+----------------------------------------------------------------------------------------------+----------+
   | :ref:`float<class_float>` | :ref:`linear_limit/damping<class_SliderJoint3D_property_linear_limit/damping>`               | ``1.0``  |
   +---------------------------+----------------------------------------------------------------------------------------------+----------+
   | :ref:`float<class_float>` | :ref:`linear_limit/lower_distance<class_SliderJoint3D_property_linear_limit/lower_distance>` | ``-1.0`` |
   +---------------------------+----------------------------------------------------------------------------------------------+----------+
   | :ref:`float<class_float>` | :ref:`linear_limit/restitution<class_SliderJoint3D_property_linear_limit/restitution>`       | ``0.7``  |
   +---------------------------+----------------------------------------------------------------------------------------------+----------+
   | :ref:`float<class_float>` | :ref:`linear_limit/softness<class_SliderJoint3D_property_linear_limit/softness>`             | ``1.0``  |
   +---------------------------+----------------------------------------------------------------------------------------------+----------+
   | :ref:`float<class_float>` | :ref:`linear_limit/upper_distance<class_SliderJoint3D_property_linear_limit/upper_distance>` | ``1.0``  |
   +---------------------------+----------------------------------------------------------------------------------------------+----------+
   | :ref:`float<class_float>` | :ref:`linear_motion/damping<class_SliderJoint3D_property_linear_motion/damping>`             | ``0.0``  |
   +---------------------------+----------------------------------------------------------------------------------------------+----------+
   | :ref:`float<class_float>` | :ref:`linear_motion/restitution<class_SliderJoint3D_property_linear_motion/restitution>`     | ``0.7``  |
   +---------------------------+----------------------------------------------------------------------------------------------+----------+
   | :ref:`float<class_float>` | :ref:`linear_motion/softness<class_SliderJoint3D_property_linear_motion/softness>`           | ``1.0``  |
   +---------------------------+----------------------------------------------------------------------------------------------+----------+
   | :ref:`float<class_float>` | :ref:`linear_ortho/damping<class_SliderJoint3D_property_linear_ortho/damping>`               | ``1.0``  |
   +---------------------------+----------------------------------------------------------------------------------------------+----------+
   | :ref:`float<class_float>` | :ref:`linear_ortho/restitution<class_SliderJoint3D_property_linear_ortho/restitution>`       | ``0.7``  |
   +---------------------------+----------------------------------------------------------------------------------------------+----------+
   | :ref:`float<class_float>` | :ref:`linear_ortho/softness<class_SliderJoint3D_property_linear_ortho/softness>`             | ``1.0``  |
   +---------------------------+----------------------------------------------------------------------------------------------+----------+

.. rst-class:: classref-reftable-group

方法
----

.. table::
   :widths: auto

   +---------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`float<class_float>` | :ref:`get_param<class_SliderJoint3D_method_get_param>` **(** :ref:`Param<enum_SliderJoint3D_Param>` param **)** |const|                          |
   +---------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                      | :ref:`set_param<class_SliderJoint3D_method_set_param>` **(** :ref:`Param<enum_SliderJoint3D_Param>` param, :ref:`float<class_float>` value **)** |
   +---------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

枚举
----

.. _enum_SliderJoint3D_Param:

.. rst-class:: classref-enumeration

enum **Param**:

.. _class_SliderJoint3D_constant_PARAM_LINEAR_LIMIT_UPPER:

.. rst-class:: classref-enumeration-constant

:ref:`Param<enum_SliderJoint3D_Param>` **PARAM_LINEAR_LIMIT_UPPER** = ``0``

阻尼发生前轴心点之间在 X 轴上的最大差异。

.. _class_SliderJoint3D_constant_PARAM_LINEAR_LIMIT_LOWER:

.. rst-class:: classref-enumeration-constant

:ref:`Param<enum_SliderJoint3D_Param>` **PARAM_LINEAR_LIMIT_LOWER** = ``1``

阻尼发生前轴心点之间在 X 轴上的最小差异。

.. _class_SliderJoint3D_constant_PARAM_LINEAR_LIMIT_SOFTNESS:

.. rst-class:: classref-enumeration-constant

:ref:`Param<enum_SliderJoint3D_Param>` **PARAM_LINEAR_LIMIT_SOFTNESS** = ``2``

一旦超过极限，应用于滑块轴上移动的系数。越低，运动越慢。

.. _class_SliderJoint3D_constant_PARAM_LINEAR_LIMIT_RESTITUTION:

.. rst-class:: classref-enumeration-constant

:ref:`Param<enum_SliderJoint3D_Param>` **PARAM_LINEAR_LIMIT_RESTITUTION** = ``3``

超出限制后的补偿。数值越低，损失的速度能量越多。

.. _class_SliderJoint3D_constant_PARAM_LINEAR_LIMIT_DAMPING:

.. rst-class:: classref-enumeration-constant

:ref:`Param<enum_SliderJoint3D_Param>` **PARAM_LINEAR_LIMIT_DAMPING** = ``4``

一旦超过滑块的极限，阻尼的数量。

.. _class_SliderJoint3D_constant_PARAM_LINEAR_MOTION_SOFTNESS:

.. rst-class:: classref-enumeration-constant

:ref:`Param<enum_SliderJoint3D_Param>` **PARAM_LINEAR_MOTION_SOFTNESS** = ``5``

只要滑块在限制范围内，就应用于滑块轴上移动的系数。越低，运动越慢。

.. _class_SliderJoint3D_constant_PARAM_LINEAR_MOTION_RESTITUTION:

.. rst-class:: classref-enumeration-constant

:ref:`Param<enum_SliderJoint3D_Param>` **PARAM_LINEAR_MOTION_RESTITUTION** = ``6``

滑块限制内的恢复量。

.. _class_SliderJoint3D_constant_PARAM_LINEAR_MOTION_DAMPING:

.. rst-class:: classref-enumeration-constant

:ref:`Param<enum_SliderJoint3D_Param>` **PARAM_LINEAR_MOTION_DAMPING** = ``7``

滑块内部的阻尼量受到限制。

.. _class_SliderJoint3D_constant_PARAM_LINEAR_ORTHOGONAL_SOFTNESS:

.. rst-class:: classref-enumeration-constant

:ref:`Param<enum_SliderJoint3D_Param>` **PARAM_LINEAR_ORTHOGONAL_SOFTNESS** = ``8``

应用于在垂直于滑块的轴上移动的系数。

.. _class_SliderJoint3D_constant_PARAM_LINEAR_ORTHOGONAL_RESTITUTION:

.. rst-class:: classref-enumeration-constant

:ref:`Param<enum_SliderJoint3D_Param>` **PARAM_LINEAR_ORTHOGONAL_RESTITUTION** = ``9``

当移动穿过垂直于滑块的轴时的恢复量。

.. _class_SliderJoint3D_constant_PARAM_LINEAR_ORTHOGONAL_DAMPING:

.. rst-class:: classref-enumeration-constant

:ref:`Param<enum_SliderJoint3D_Param>` **PARAM_LINEAR_ORTHOGONAL_DAMPING** = ``10``

当移动穿过垂直于滑块的轴时的阻尼量。

.. _class_SliderJoint3D_constant_PARAM_ANGULAR_LIMIT_UPPER:

.. rst-class:: classref-enumeration-constant

:ref:`Param<enum_SliderJoint3D_Param>` **PARAM_ANGULAR_LIMIT_UPPER** = ``11``

滑块旋转的上限。

.. _class_SliderJoint3D_constant_PARAM_ANGULAR_LIMIT_LOWER:

.. rst-class:: classref-enumeration-constant

:ref:`Param<enum_SliderJoint3D_Param>` **PARAM_ANGULAR_LIMIT_LOWER** = ``12``

滑块旋转的下限。

.. _class_SliderJoint3D_constant_PARAM_ANGULAR_LIMIT_SOFTNESS:

.. rst-class:: classref-enumeration-constant

:ref:`Param<enum_SliderJoint3D_Param>` **PARAM_ANGULAR_LIMIT_SOFTNESS** = ``13``

一旦超过极限，应用于所有旋转的系数。

.. _class_SliderJoint3D_constant_PARAM_ANGULAR_LIMIT_RESTITUTION:

.. rst-class:: classref-enumeration-constant

:ref:`Param<enum_SliderJoint3D_Param>` **PARAM_ANGULAR_LIMIT_RESTITUTION** = ``14``

超过限制时旋转的恢复量。

.. _class_SliderJoint3D_constant_PARAM_ANGULAR_LIMIT_DAMPING:

.. rst-class:: classref-enumeration-constant

:ref:`Param<enum_SliderJoint3D_Param>` **PARAM_ANGULAR_LIMIT_DAMPING** = ``15``

超过极限时旋转的阻尼量。

.. _class_SliderJoint3D_constant_PARAM_ANGULAR_MOTION_SOFTNESS:

.. rst-class:: classref-enumeration-constant

:ref:`Param<enum_SliderJoint3D_Param>` **PARAM_ANGULAR_MOTION_SOFTNESS** = ``16``

应用于所有受限旋转的系数。

.. _class_SliderJoint3D_constant_PARAM_ANGULAR_MOTION_RESTITUTION:

.. rst-class:: classref-enumeration-constant

:ref:`Param<enum_SliderJoint3D_Param>` **PARAM_ANGULAR_MOTION_RESTITUTION** = ``17``

极限内旋转的恢复量。

.. _class_SliderJoint3D_constant_PARAM_ANGULAR_MOTION_DAMPING:

.. rst-class:: classref-enumeration-constant

:ref:`Param<enum_SliderJoint3D_Param>` **PARAM_ANGULAR_MOTION_DAMPING** = ``18``

极限内旋转的阻尼量。

.. _class_SliderJoint3D_constant_PARAM_ANGULAR_ORTHOGONAL_SOFTNESS:

.. rst-class:: classref-enumeration-constant

:ref:`Param<enum_SliderJoint3D_Param>` **PARAM_ANGULAR_ORTHOGONAL_SOFTNESS** = ``19``

应用于与滑动条正交的轴的所有旋转的系数。

.. _class_SliderJoint3D_constant_PARAM_ANGULAR_ORTHOGONAL_RESTITUTION:

.. rst-class:: classref-enumeration-constant

:ref:`Param<enum_SliderJoint3D_Param>` **PARAM_ANGULAR_ORTHOGONAL_RESTITUTION** = ``20``

垂直于滑块的轴上的旋转恢复量。

.. _class_SliderJoint3D_constant_PARAM_ANGULAR_ORTHOGONAL_DAMPING:

.. rst-class:: classref-enumeration-constant

:ref:`Param<enum_SliderJoint3D_Param>` **PARAM_ANGULAR_ORTHOGONAL_DAMPING** = ``21``

垂直于滑块的轴上的旋转阻尼量。

.. _class_SliderJoint3D_constant_PARAM_MAX:

.. rst-class:: classref-enumeration-constant

:ref:`Param<enum_SliderJoint3D_Param>` **PARAM_MAX** = ``22``

代表 :ref:`Param<enum_SliderJoint3D_Param>` 枚举的大小。

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

属性说明
--------

.. _class_SliderJoint3D_property_angular_limit/damping:

.. rst-class:: classref-property

:ref:`float<class_float>` **angular_limit/damping** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_param** **(** :ref:`Param<enum_SliderJoint3D_Param>` param, :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_param** **(** :ref:`Param<enum_SliderJoint3D_Param>` param **)** |const|

超过限制时旋转的阻尼量。

较低的阻尼值允许由主体 A 发起的旋转以较慢的速度传播到主体 B。

.. rst-class:: classref-item-separator

----

.. _class_SliderJoint3D_property_angular_limit/lower_angle:

.. rst-class:: classref-property

:ref:`float<class_float>` **angular_limit/lower_angle** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_param** **(** :ref:`Param<enum_SliderJoint3D_Param>` param, :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_param** **(** :ref:`Param<enum_SliderJoint3D_Param>` param **)** |const|

滑块旋转的下限。

.. rst-class:: classref-item-separator

----

.. _class_SliderJoint3D_property_angular_limit/restitution:

.. rst-class:: classref-property

:ref:`float<class_float>` **angular_limit/restitution** = ``0.7``

.. rst-class:: classref-property-setget

- void **set_param** **(** :ref:`Param<enum_SliderJoint3D_Param>` param, :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_param** **(** :ref:`Param<enum_SliderJoint3D_Param>` param **)** |const|

当超过极限时，旋转的恢复量。

不影响阻尼。

.. rst-class:: classref-item-separator

----

.. _class_SliderJoint3D_property_angular_limit/softness:

.. rst-class:: classref-property

:ref:`float<class_float>` **angular_limit/softness** = ``1.0``

.. rst-class:: classref-property-setget

- void **set_param** **(** :ref:`Param<enum_SliderJoint3D_Param>` param, :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_param** **(** :ref:`Param<enum_SliderJoint3D_Param>` param **)** |const|

应用于所有旋转超过限制后的系数。

在 0 和 1 之间时使所有旋转变慢。

.. rst-class:: classref-item-separator

----

.. _class_SliderJoint3D_property_angular_limit/upper_angle:

.. rst-class:: classref-property

:ref:`float<class_float>` **angular_limit/upper_angle** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_param** **(** :ref:`Param<enum_SliderJoint3D_Param>` param, :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_param** **(** :ref:`Param<enum_SliderJoint3D_Param>` param **)** |const|

滑块旋转的上限。

.. rst-class:: classref-item-separator

----

.. _class_SliderJoint3D_property_angular_motion/damping:

.. rst-class:: classref-property

:ref:`float<class_float>` **angular_motion/damping** = ``1.0``

.. rst-class:: classref-property-setget

- void **set_param** **(** :ref:`Param<enum_SliderJoint3D_Param>` param, :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_param** **(** :ref:`Param<enum_SliderJoint3D_Param>` param **)** |const|

极限内旋转的阻尼量。

.. rst-class:: classref-item-separator

----

.. _class_SliderJoint3D_property_angular_motion/restitution:

.. rst-class:: classref-property

:ref:`float<class_float>` **angular_motion/restitution** = ``0.7``

.. rst-class:: classref-property-setget

- void **set_param** **(** :ref:`Param<enum_SliderJoint3D_Param>` param, :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_param** **(** :ref:`Param<enum_SliderJoint3D_Param>` param **)** |const|

极限内旋转的恢复量。

.. rst-class:: classref-item-separator

----

.. _class_SliderJoint3D_property_angular_motion/softness:

.. rst-class:: classref-property

:ref:`float<class_float>` **angular_motion/softness** = ``1.0``

.. rst-class:: classref-property-setget

- void **set_param** **(** :ref:`Param<enum_SliderJoint3D_Param>` param, :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_param** **(** :ref:`Param<enum_SliderJoint3D_Param>` param **)** |const|

应用于所有受限旋转的系数。

.. rst-class:: classref-item-separator

----

.. _class_SliderJoint3D_property_angular_ortho/damping:

.. rst-class:: classref-property

:ref:`float<class_float>` **angular_ortho/damping** = ``1.0``

.. rst-class:: classref-property-setget

- void **set_param** **(** :ref:`Param<enum_SliderJoint3D_Param>` param, :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_param** **(** :ref:`Param<enum_SliderJoint3D_Param>` param **)** |const|

垂直于滑块的轴上的旋转阻尼量。

.. rst-class:: classref-item-separator

----

.. _class_SliderJoint3D_property_angular_ortho/restitution:

.. rst-class:: classref-property

:ref:`float<class_float>` **angular_ortho/restitution** = ``0.7``

.. rst-class:: classref-property-setget

- void **set_param** **(** :ref:`Param<enum_SliderJoint3D_Param>` param, :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_param** **(** :ref:`Param<enum_SliderJoint3D_Param>` param **)** |const|

垂直于滑块的轴上的旋转恢复量。

.. rst-class:: classref-item-separator

----

.. _class_SliderJoint3D_property_angular_ortho/softness:

.. rst-class:: classref-property

:ref:`float<class_float>` **angular_ortho/softness** = ``1.0``

.. rst-class:: classref-property-setget

- void **set_param** **(** :ref:`Param<enum_SliderJoint3D_Param>` param, :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_param** **(** :ref:`Param<enum_SliderJoint3D_Param>` param **)** |const|

应用于与滑动条正交的轴的所有旋转的系数。

.. rst-class:: classref-item-separator

----

.. _class_SliderJoint3D_property_linear_limit/damping:

.. rst-class:: classref-property

:ref:`float<class_float>` **linear_limit/damping** = ``1.0``

.. rst-class:: classref-property-setget

- void **set_param** **(** :ref:`Param<enum_SliderJoint3D_Param>` param, :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_param** **(** :ref:`Param<enum_SliderJoint3D_Param>` param **)** |const|

一旦超过 :ref:`linear_limit/lower_distance<class_SliderJoint3D_property_linear_limit/lower_distance>` 和 :ref:`linear_limit/upper_distance<class_SliderJoint3D_property_linear_limit/upper_distance>` 所定义的极限，就会产生的阻尼量。

.. rst-class:: classref-item-separator

----

.. _class_SliderJoint3D_property_linear_limit/lower_distance:

.. rst-class:: classref-property

:ref:`float<class_float>` **linear_limit/lower_distance** = ``-1.0``

.. rst-class:: classref-property-setget

- void **set_param** **(** :ref:`Param<enum_SliderJoint3D_Param>` param, :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_param** **(** :ref:`Param<enum_SliderJoint3D_Param>` param **)** |const|

阻尼发生前轴心点之间在 X 轴上的最小差异。

.. rst-class:: classref-item-separator

----

.. _class_SliderJoint3D_property_linear_limit/restitution:

.. rst-class:: classref-property

:ref:`float<class_float>` **linear_limit/restitution** = ``0.7``

.. rst-class:: classref-property-setget

- void **set_param** **(** :ref:`Param<enum_SliderJoint3D_Param>` param, :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_param** **(** :ref:`Param<enum_SliderJoint3D_Param>` param **)** |const|

超出限制后的补偿。数值越低，损失的速度能量越多。

.. rst-class:: classref-item-separator

----

.. _class_SliderJoint3D_property_linear_limit/softness:

.. rst-class:: classref-property

:ref:`float<class_float>` **linear_limit/softness** = ``1.0``

.. rst-class:: classref-property-setget

- void **set_param** **(** :ref:`Param<enum_SliderJoint3D_Param>` param, :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_param** **(** :ref:`Param<enum_SliderJoint3D_Param>` param **)** |const|

一旦超过极限，应用于滑块轴上移动的系数。越低，运动越慢。

.. rst-class:: classref-item-separator

----

.. _class_SliderJoint3D_property_linear_limit/upper_distance:

.. rst-class:: classref-property

:ref:`float<class_float>` **linear_limit/upper_distance** = ``1.0``

.. rst-class:: classref-property-setget

- void **set_param** **(** :ref:`Param<enum_SliderJoint3D_Param>` param, :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_param** **(** :ref:`Param<enum_SliderJoint3D_Param>` param **)** |const|

阻尼发生前轴心点之间在 X 轴上的最大差异。

.. rst-class:: classref-item-separator

----

.. _class_SliderJoint3D_property_linear_motion/damping:

.. rst-class:: classref-property

:ref:`float<class_float>` **linear_motion/damping** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_param** **(** :ref:`Param<enum_SliderJoint3D_Param>` param, :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_param** **(** :ref:`Param<enum_SliderJoint3D_Param>` param **)** |const|

滑块内部的阻尼量受到限制。

.. rst-class:: classref-item-separator

----

.. _class_SliderJoint3D_property_linear_motion/restitution:

.. rst-class:: classref-property

:ref:`float<class_float>` **linear_motion/restitution** = ``0.7``

.. rst-class:: classref-property-setget

- void **set_param** **(** :ref:`Param<enum_SliderJoint3D_Param>` param, :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_param** **(** :ref:`Param<enum_SliderJoint3D_Param>` param **)** |const|

滑块限制内的恢复量。

.. rst-class:: classref-item-separator

----

.. _class_SliderJoint3D_property_linear_motion/softness:

.. rst-class:: classref-property

:ref:`float<class_float>` **linear_motion/softness** = ``1.0``

.. rst-class:: classref-property-setget

- void **set_param** **(** :ref:`Param<enum_SliderJoint3D_Param>` param, :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_param** **(** :ref:`Param<enum_SliderJoint3D_Param>` param **)** |const|

只要滑块在限制范围内，就应用于滑块轴上移动的系数。越低，运动越慢。

.. rst-class:: classref-item-separator

----

.. _class_SliderJoint3D_property_linear_ortho/damping:

.. rst-class:: classref-property

:ref:`float<class_float>` **linear_ortho/damping** = ``1.0``

.. rst-class:: classref-property-setget

- void **set_param** **(** :ref:`Param<enum_SliderJoint3D_Param>` param, :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_param** **(** :ref:`Param<enum_SliderJoint3D_Param>` param **)** |const|

当移动穿过垂直于滑块的轴时的阻尼量。

.. rst-class:: classref-item-separator

----

.. _class_SliderJoint3D_property_linear_ortho/restitution:

.. rst-class:: classref-property

:ref:`float<class_float>` **linear_ortho/restitution** = ``0.7``

.. rst-class:: classref-property-setget

- void **set_param** **(** :ref:`Param<enum_SliderJoint3D_Param>` param, :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_param** **(** :ref:`Param<enum_SliderJoint3D_Param>` param **)** |const|

当移动穿过垂直于滑块的轴时的恢复量。

.. rst-class:: classref-item-separator

----

.. _class_SliderJoint3D_property_linear_ortho/softness:

.. rst-class:: classref-property

:ref:`float<class_float>` **linear_ortho/softness** = ``1.0``

.. rst-class:: classref-property-setget

- void **set_param** **(** :ref:`Param<enum_SliderJoint3D_Param>` param, :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_param** **(** :ref:`Param<enum_SliderJoint3D_Param>` param **)** |const|

应用于在垂直于滑块的轴上移动的系数。

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

方法说明
--------

.. _class_SliderJoint3D_method_get_param:

.. rst-class:: classref-method

:ref:`float<class_float>` **get_param** **(** :ref:`Param<enum_SliderJoint3D_Param>` param **)** |const|

.. container:: contribute

	目前没有这个方法的描述。请帮我们\ :ref:`贡献一个 <doc_updating_the_class_reference>`\ ！

.. rst-class:: classref-item-separator

----

.. _class_SliderJoint3D_method_set_param:

.. rst-class:: classref-method

void **set_param** **(** :ref:`Param<enum_SliderJoint3D_Param>` param, :ref:`float<class_float>` value **)**

.. container:: contribute

	目前没有这个方法的描述。请帮我们\ :ref:`贡献一个 <doc_updating_the_class_reference>`\ ！

.. |virtual| replace:: :abbr:`virtual (本方法通常需要用户覆盖才能生效。)`
.. |const| replace:: :abbr:`const (本方法没有副作用。不会修改该实例的任何成员变量。)`
.. |vararg| replace:: :abbr:`vararg (本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。)`
.. |constructor| replace:: :abbr:`constructor (本方法用于构造某个类型。)`
.. |static| replace:: :abbr:`static (调用本方法无需实例，所以可以直接使用类名调用。)`
.. |operator| replace:: :abbr:`operator (本方法描述的是使用本类型作为左操作数的有效操作符。)`
.. |bitfield| replace:: :abbr:`BitField (这个值是由下列标志构成的位掩码整数。)`

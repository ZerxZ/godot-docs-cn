:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/4.2/modules/openxr/doc_classes/OpenXRAPIExtension.xml.

.. _class_OpenXRAPIExtension:

OpenXRAPIExtension
==================

**继承：** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`

为 GDExtension 提供 OpenXR API。

.. rst-class:: classref-introduction-group

描述
----

**OpenXRAPIExtension** 使 OpenXR 可用于 GDExtension。它通过 :ref:`get_instance_proc_addr<class_OpenXRAPIExtension_method_get_instance_proc_addr>` 方法向 GDExtension 提供 OpenXR API，并通过 :ref:`get_instance<class_OpenXRAPIExtension_method_get_instance>` 提供 OpenXR 实例。

它还提供了用于查询 OpenXR 初始化状态的方法，以及便于通过 GDExtension 使用 API 的辅助方法。

.. rst-class:: classref-introduction-group

教程
----

- `XrResult 文档 <https://registry.khronos.org/OpenXR/specs/1.0/man/html/XrResult.html>`__

- `XrInstance 文档 <https://registry.khronos.org/OpenXR/specs/1.0/man/html/XrInstance.html>`__

- `XrSpace 文档 <https://registry.khronos.org/OpenXR/specs/1.0/man/html/XrSpace.html>`__

- `XrSession 文档 <https://registry.khronos.org/OpenXR/specs/1.0/man/html/XrSession.html>`__

- `XrSystemId 文档 <https://registry.khronos.org/OpenXR/specs/1.0/man/html/XrSystemId.html>`__

- `xrBeginSession 文档 <https://registry.khronos.org/OpenXR/specs/1.0/man/html/xrBeginSession.html>`__

- `XrPosef 文档 <https://registry.khronos.org/OpenXR/specs/1.0/man/html/XrPosef.html>`__

.. rst-class:: classref-reftable-group

方法
----

.. table::
   :widths: auto

   +---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`               | :ref:`can_render<class_OpenXRAPIExtension_method_can_render>` **(** **)**                                                                                                |
   +---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`String<class_String>`           | :ref:`get_error_string<class_OpenXRAPIExtension_method_get_error_string>` **(** :ref:`int<class_int>` result **)**                                                       |
   +---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`                 | :ref:`get_instance<class_OpenXRAPIExtension_method_get_instance>` **(** **)**                                                                                            |
   +---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`                 | :ref:`get_instance_proc_addr<class_OpenXRAPIExtension_method_get_instance_proc_addr>` **(** :ref:`String<class_String>` name **)**                                       |
   +---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`                 | :ref:`get_next_frame_time<class_OpenXRAPIExtension_method_get_next_frame_time>` **(** **)**                                                                              |
   +---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`                 | :ref:`get_play_space<class_OpenXRAPIExtension_method_get_play_space>` **(** **)**                                                                                        |
   +---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`                 | :ref:`get_session<class_OpenXRAPIExtension_method_get_session>` **(** **)**                                                                                              |
   +---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`String<class_String>`           | :ref:`get_swapchain_format_name<class_OpenXRAPIExtension_method_get_swapchain_format_name>` **(** :ref:`int<class_int>` swapchain_format **)**                           |
   +---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`                 | :ref:`get_system_id<class_OpenXRAPIExtension_method_get_system_id>` **(** **)**                                                                                          |
   +---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`               | :ref:`is_initialized<class_OpenXRAPIExtension_method_is_initialized>` **(** **)**                                                                                        |
   +---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`               | :ref:`is_running<class_OpenXRAPIExtension_method_is_running>` **(** **)**                                                                                                |
   +---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`               | :ref:`openxr_is_enabled<class_OpenXRAPIExtension_method_openxr_is_enabled>` **(** :ref:`bool<class_bool>` check_run_in_editor **)** |static|                             |
   +---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Transform3D<class_Transform3D>` | :ref:`transform_from_pose<class_OpenXRAPIExtension_method_transform_from_pose>` **(** const void* pose **)**                                                             |
   +---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`               | :ref:`xr_result<class_OpenXRAPIExtension_method_xr_result>` **(** :ref:`int<class_int>` result, :ref:`String<class_String>` format, :ref:`Array<class_Array>` args **)** |
   +---------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

方法说明
--------

.. _class_OpenXRAPIExtension_method_can_render:

.. rst-class:: classref-method

:ref:`bool<class_bool>` **can_render** **(** **)**

如果 OpenXR 已为使用 XR 视口进行渲染而初始化，则返回 ``true``\ 。

.. rst-class:: classref-item-separator

----

.. _class_OpenXRAPIExtension_method_get_error_string:

.. rst-class:: classref-method

:ref:`String<class_String>` **get_error_string** **(** :ref:`int<class_int>` result **)**

返回给定 `XrResult <https://registry.khronos.org/OpenXR/specs/1.0/man/html/XrResult.html>`__ 对应的错误字符串。

.. rst-class:: classref-item-separator

----

.. _class_OpenXRAPIExtension_method_get_instance:

.. rst-class:: classref-method

:ref:`int<class_int>` **get_instance** **(** **)**

返回 OpenXR API 初始化过程中创建的 `XrInstance <https://registry.khronos.org/OpenXR/specs/1.0/man/html/XrInstance.html>`__\ 。

.. rst-class:: classref-item-separator

----

.. _class_OpenXRAPIExtension_method_get_instance_proc_addr:

.. rst-class:: classref-method

:ref:`int<class_int>` **get_instance_proc_addr** **(** :ref:`String<class_String>` name **)**

返回具有指定名称的 OpenXR 函数的函数指针，转换为整数。如果给定名称的函数不存在，该方法返回 ``0``\ 。

\ **注意：**\ ``openxr/util.h`` 包含用于获取 OpenXR 函数的实用宏，例如， ``GDEXTENSION_INIT_XR_FUNC_V(xrCreateAction)``\ 。

.. rst-class:: classref-item-separator

----

.. _class_OpenXRAPIExtension_method_get_next_frame_time:

.. rst-class:: classref-method

:ref:`int<class_int>` **get_next_frame_time** **(** **)**

返回下一帧的时间。

.. rst-class:: classref-item-separator

----

.. _class_OpenXRAPIExtension_method_get_play_space:

.. rst-class:: classref-method

:ref:`int<class_int>` **get_play_space** **(** **)**

返回播放空间，它是一个被转换为整数的 `XrSpace <https://registry.khronos.org/OpenXR/specs/1.0/man/html/XrSpace.html>`__\ 。

.. rst-class:: classref-item-separator

----

.. _class_OpenXRAPIExtension_method_get_session:

.. rst-class:: classref-method

:ref:`int<class_int>` **get_session** **(** **)**

返回该 OpenXR 会话，它是一个被转换为整数的 `XrSession <https://registry.khronos.org/OpenXR/specs/1.0/man/html/XrSession.html>`__\ 。

.. rst-class:: classref-item-separator

----

.. _class_OpenXRAPIExtension_method_get_swapchain_format_name:

.. rst-class:: classref-method

:ref:`String<class_String>` **get_swapchain_format_name** **(** :ref:`int<class_int>` swapchain_format **)**

返回指定交换链格式的名称。

.. rst-class:: classref-item-separator

----

.. _class_OpenXRAPIExtension_method_get_system_id:

.. rst-class:: classref-method

:ref:`int<class_int>` **get_system_id** **(** **)**

返回系统的 id，它是一个被转换为整数的 `XrSystemId <https://registry.khronos.org/OpenXR/specs/1.0/man/html/XrSystemId.html>`__\ 。

.. rst-class:: classref-item-separator

----

.. _class_OpenXRAPIExtension_method_is_initialized:

.. rst-class:: classref-method

:ref:`bool<class_bool>` **is_initialized** **(** **)**

如果 OpenXR 已初始化，则返回 ``true``\ 。

.. rst-class:: classref-item-separator

----

.. _class_OpenXRAPIExtension_method_is_running:

.. rst-class:: classref-method

:ref:`bool<class_bool>` **is_running** **(** **)**

如果 OpenXR 正在运行，则返回 ``true``\ （\ `xrBeginSession <https://registry.khronos.org/OpenXR/specs/1.0/man/html/xrBeginSession.html>`__ 已被成功调用并且交换链已被创建）。

.. rst-class:: classref-item-separator

----

.. _class_OpenXRAPIExtension_method_openxr_is_enabled:

.. rst-class:: classref-method

:ref:`bool<class_bool>` **openxr_is_enabled** **(** :ref:`bool<class_bool>` check_run_in_editor **)** |static|

如果启用 OpenXR，则返回 ``true``\ 。

.. rst-class:: classref-item-separator

----

.. _class_OpenXRAPIExtension_method_transform_from_pose:

.. rst-class:: classref-method

:ref:`Transform3D<class_Transform3D>` **transform_from_pose** **(** const void* pose **)**

从 `XrPosef <https://registry.khronos.org/OpenXR/specs/1.0/man/html/XrPosef.html>`__ 创建一个 :ref:`Transform3D<class_Transform3D>` 。

.. rst-class:: classref-item-separator

----

.. _class_OpenXRAPIExtension_method_xr_result:

.. rst-class:: classref-method

:ref:`bool<class_bool>` **xr_result** **(** :ref:`int<class_int>` result, :ref:`String<class_String>` format, :ref:`Array<class_Array>` args **)**

如果提供的 `XrResult <https://registry.khronos.org/OpenXR/specs/1.0/man/html/XrResult.html>`__\ （转换为整数）是成功的，则返回 ``true``\ 。否则返回 ``false`` 并打印被转换为字符串的 `XrResult <https://registry.khronos.org/OpenXR/specs/1.0/man/html/XrResult.html>`__ ，以及指定的附加信息。

.. |virtual| replace:: :abbr:`virtual (本方法通常需要用户覆盖才能生效。)`
.. |const| replace:: :abbr:`const (本方法没有副作用。不会修改该实例的任何成员变量。)`
.. |vararg| replace:: :abbr:`vararg (本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。)`
.. |constructor| replace:: :abbr:`constructor (本方法用于构造某个类型。)`
.. |static| replace:: :abbr:`static (调用本方法无需实例，所以可以直接使用类名调用。)`
.. |operator| replace:: :abbr:`operator (本方法描述的是使用本类型作为左操作数的有效操作符。)`
.. |bitfield| replace:: :abbr:`BitField (这个值是由下列标志构成的位掩码整数。)`

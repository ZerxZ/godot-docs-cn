:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/CompressedCubemapArray.xml.

.. _class_CompressedCubemapArray:

CompressedCubemapArray
======================

**继承：** :ref:`CompressedTextureLayered<class_CompressedTextureLayered>` **<** :ref:`TextureLayered<class_TextureLayered>` **<** :ref:`Texture<class_Texture>` **<** :ref:`Resource<class_Resource>` **<** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`

一个可选压缩的 :ref:`CubemapArray<class_CubemapArray>` 。

.. rst-class:: classref-introduction-group

描述
----

一种从 ``.ccubearray`` 文件加载的立方体贴图数组。这种文件格式是 Godot 内部使用的；它是通过导入系统导入其他图像格式创建的。\ **CompressedCubemapArray** 可以使用 4 种压缩方法中的一种：

- 无损（WebP 或 PNG，在 GPU 上不压缩）

- 有损（WebP，在 GPU 上不压缩）

- VRAM 压缩（在 GPU 上压缩）

- VRAM 未压缩（在 GPU 上不压缩）

- Basis Universal（在 GPU 上压缩。与 VRAM 压缩相比，文件更小，但压缩速度更慢、质量更低）

只有 **VRAM 压缩**\ 实际上减少了 GPU 上的内存使用。\ **无损**\ 和\ **有损**\ 压缩方法将减少磁盘上所需的存储空间，但它们不会减少 GPU 上的内存使用，因为纹理未经压缩地被发送到 GPU。

使用 **VRAM 压缩**\ 还可以缩短加载时间，因为与使用无损或有损压缩的纹理相比，VRAM 压缩的纹理加载速度更快。VRAM 压缩会表现出明显的伪影，并且它旨在用于 3D 渲染，而不是 2D。

有关立方体贴图数组的一般说明，请参阅 :ref:`CubemapArray<class_CubemapArray>`\ 。

.. |virtual| replace:: :abbr:`virtual (本方法通常需要用户覆盖才能生效。)`
.. |const| replace:: :abbr:`const (本方法没有副作用。不会修改该实例的任何成员变量。)`
.. |vararg| replace:: :abbr:`vararg (本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。)`
.. |constructor| replace:: :abbr:`constructor (本方法用于构造某个类型。)`
.. |static| replace:: :abbr:`static (调用本方法无需实例，所以可以直接使用类名调用。)`
.. |operator| replace:: :abbr:`operator (本方法描述的是使用本类型作为左操作数的有效操作符。)`
.. |bitfield| replace:: :abbr:`BitField (这个值是由下列标志构成的位掩码整数。)`

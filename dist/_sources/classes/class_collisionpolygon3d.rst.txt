:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/CollisionPolygon3D.xml.

.. _class_CollisionPolygon3D:

CollisionPolygon3D
==================

**继承：** :ref:`Node3D<class_Node3D>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

向 :ref:`CollisionObject3D<class_CollisionObject3D>` 父级提供加厚多边形形状（角柱体）的节点。

.. rst-class:: classref-introduction-group

描述
----

向 :ref:`CollisionObject3D<class_CollisionObject3D>` 父级提供加厚多边形形状（角柱体）的节点，能够为这个形状提供编辑的方法。该多边形可以是凹多边形，也可以是凸多边形。能够为 :ref:`Area3D<class_Area3D>` 提供检测形状，也能够将 :ref:`PhysicsBody3D<class_PhysicsBody3D>` 变为实体。

\ **警告：**\ 非均匀缩放的 :ref:`CollisionShape3D<class_CollisionShape3D>` 应该无法按预期工作。请确保它在所有轴上的缩放是一致的，可以用对形状资源的调整来代替非均匀缩放。

.. rst-class:: classref-reftable-group

属性
----

.. table::
   :widths: auto

   +-----------------------------------------------------+-------------------------------------------------------------+--------------------------+
   | :ref:`float<class_float>`                           | :ref:`depth<class_CollisionPolygon3D_property_depth>`       | ``1.0``                  |
   +-----------------------------------------------------+-------------------------------------------------------------+--------------------------+
   | :ref:`bool<class_bool>`                             | :ref:`disabled<class_CollisionPolygon3D_property_disabled>` | ``false``                |
   +-----------------------------------------------------+-------------------------------------------------------------+--------------------------+
   | :ref:`float<class_float>`                           | :ref:`margin<class_CollisionPolygon3D_property_margin>`     | ``0.04``                 |
   +-----------------------------------------------------+-------------------------------------------------------------+--------------------------+
   | :ref:`PackedVector2Array<class_PackedVector2Array>` | :ref:`polygon<class_CollisionPolygon3D_property_polygon>`   | ``PackedVector2Array()`` |
   +-----------------------------------------------------+-------------------------------------------------------------+--------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

属性说明
--------

.. _class_CollisionPolygon3D_property_depth:

.. rst-class:: classref-property

:ref:`float<class_float>` **depth** = ``1.0``

.. rst-class:: classref-property-setget

- void **set_depth** **(** :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_depth** **(** **)**

产生的碰撞沿着与 2D 多边形垂直的任意方向深入的长度。

.. rst-class:: classref-item-separator

----

.. _class_CollisionPolygon3D_property_disabled:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **disabled** = ``false``

.. rst-class:: classref-property-setget

- void **set_disabled** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **is_disabled** **(** **)**

如果为 ``true``\ ，将不会产生碰撞。

.. rst-class:: classref-item-separator

----

.. _class_CollisionPolygon3D_property_margin:

.. rst-class:: classref-property

:ref:`float<class_float>` **margin** = ``0.04``

.. rst-class:: classref-property-setget

- void **set_margin** **(** :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_margin** **(** **)**

生成的 :ref:`Shape3D<class_Shape3D>` 的碰撞边距。详情见 :ref:`Shape3D.margin<class_Shape3D_property_margin>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_CollisionPolygon3D_property_polygon:

.. rst-class:: classref-property

:ref:`PackedVector2Array<class_PackedVector2Array>` **polygon** = ``PackedVector2Array()``

.. rst-class:: classref-property-setget

- void **set_polygon** **(** :ref:`PackedVector2Array<class_PackedVector2Array>` value **)**
- :ref:`PackedVector2Array<class_PackedVector2Array>` **get_polygon** **(** **)**

顶点数组，定义局部 XY 平面上的 2D 多边形。

\ **注意：**\ 返回值为原始值的副本。修改返回值大小或属性的方法不会影响原始的多边形。要修改该多边形的属性，请先将其赋值给临时变量，修改完成后再重新赋值给该类属性。

.. |virtual| replace:: :abbr:`virtual (本方法通常需要用户覆盖才能生效。)`
.. |const| replace:: :abbr:`const (本方法没有副作用。不会修改该实例的任何成员变量。)`
.. |vararg| replace:: :abbr:`vararg (本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。)`
.. |constructor| replace:: :abbr:`constructor (本方法用于构造某个类型。)`
.. |static| replace:: :abbr:`static (调用本方法无需实例，所以可以直接使用类名调用。)`
.. |operator| replace:: :abbr:`operator (本方法描述的是使用本类型作为左操作数的有效操作符。)`
.. |bitfield| replace:: :abbr:`BitField (这个值是由下列标志构成的位掩码整数。)`

:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/doc/classes/PhysicsServer3D.xml.

.. _class_PhysicsServer3D:

PhysicsServer3D
===============

**继承：** :ref:`Object<class_Object>`

**派生：** :ref:`PhysicsServer3DExtension<class_PhysicsServer3DExtension>`

用于访问低阶 3D 物理的服务器接口。

.. rst-class:: classref-introduction-group

描述
----

PhysicsServer3D 是负责所有 3D 物理的服务器。它可以直接创建和操作所有物理对象：

- *Space（空间）*\ 是用于物理仿真的自包含世界。它包含实体、区域和关节。可以对其状态进行查询，获取碰撞和相交信息，并且可以修改部分仿真参数。

- *Shape（形状）*\ 是球形、盒形、圆柱形、多边形等几何形状。加入到实体/区域中就可以用来进行碰撞检测，还可以带有相对于实体/区域原点的额外变换。实体/区域中可以添加多个（变换后的）形状，并且可以使用不同的局部变换将单个形状多次添加到实体/区域中。

- *Body（实体）*\ 是物理对象，可以处于静态、运动学或刚性模式。可以对其状态进行查询和更新（例如位置、速度等）。可以设置力的集成回调，自定义实体的物理特性。

- *Area（区域）*\ 是空间中的区块，可用于检测进入和离开它的实体和区域。可以设置实体的监视回调，报告进入/离开的实体形状，同样可以设置区域的监视回调。通过设置区域参数，可以在区域内覆盖重力和阻尼。

- *Joint（关节）*\ 是两个实体之间或一个实体相对于某个点的约束。可以调整关节偏置和弹簧关节的放松长度等参数。

\ **PhysicsServer3D** 中的物理对象可以独立创建和操作；不必将它们绑定到场景树中的节点。

\ **注意：**\ 所有 3D 物理节点都在内部使用这个物理服务器。将物理节点添加到场景树，就会导致在物理服务器中创建相应的物理对象。刚体节点会注册回调，该回调会（在每次物理更新时）使用物理服务器中相应实体对象的变换更新该节点的变换。区域节点会注册回调，用来通知区域节点与物理服务器中相应区域对象的重叠。射线投射节点会查询物理服务器中相关空间的直接状态。

.. rst-class:: classref-reftable-group

方法
----

.. table::
   :widths: auto

   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`area_add_shape<class_PhysicsServer3D_method_area_add_shape>`\ (\ area\: :ref:`RID<class_RID>`, shape\: :ref:`RID<class_RID>`, transform\: :ref:`Transform3D<class_Transform3D>` = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0), disabled\: :ref:`bool<class_bool>` = false\ )              |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`area_attach_object_instance_id<class_PhysicsServer3D_method_area_attach_object_instance_id>`\ (\ area\: :ref:`RID<class_RID>`, id\: :ref:`int<class_int>`\ )                                                                                                                                  |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`area_clear_shapes<class_PhysicsServer3D_method_area_clear_shapes>`\ (\ area\: :ref:`RID<class_RID>`\ )                                                                                                                                                                                        |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`RID<class_RID>`                                             | :ref:`area_create<class_PhysicsServer3D_method_area_create>`\ (\ )                                                                                                                                                                                                                                  |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`                                             | :ref:`area_get_collision_layer<class_PhysicsServer3D_method_area_get_collision_layer>`\ (\ area\: :ref:`RID<class_RID>`\ ) |const|                                                                                                                                                                  |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`                                             | :ref:`area_get_collision_mask<class_PhysicsServer3D_method_area_get_collision_mask>`\ (\ area\: :ref:`RID<class_RID>`\ ) |const|                                                                                                                                                                    |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`                                             | :ref:`area_get_object_instance_id<class_PhysicsServer3D_method_area_get_object_instance_id>`\ (\ area\: :ref:`RID<class_RID>`\ ) |const|                                                                                                                                                            |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Variant<class_Variant>`                                     | :ref:`area_get_param<class_PhysicsServer3D_method_area_get_param>`\ (\ area\: :ref:`RID<class_RID>`, param\: :ref:`AreaParameter<enum_PhysicsServer3D_AreaParameter>`\ ) |const|                                                                                                                    |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`RID<class_RID>`                                             | :ref:`area_get_shape<class_PhysicsServer3D_method_area_get_shape>`\ (\ area\: :ref:`RID<class_RID>`, shape_idx\: :ref:`int<class_int>`\ ) |const|                                                                                                                                                   |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`                                             | :ref:`area_get_shape_count<class_PhysicsServer3D_method_area_get_shape_count>`\ (\ area\: :ref:`RID<class_RID>`\ ) |const|                                                                                                                                                                          |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Transform3D<class_Transform3D>`                             | :ref:`area_get_shape_transform<class_PhysicsServer3D_method_area_get_shape_transform>`\ (\ area\: :ref:`RID<class_RID>`, shape_idx\: :ref:`int<class_int>`\ ) |const|                                                                                                                               |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`RID<class_RID>`                                             | :ref:`area_get_space<class_PhysicsServer3D_method_area_get_space>`\ (\ area\: :ref:`RID<class_RID>`\ ) |const|                                                                                                                                                                                      |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Transform3D<class_Transform3D>`                             | :ref:`area_get_transform<class_PhysicsServer3D_method_area_get_transform>`\ (\ area\: :ref:`RID<class_RID>`\ ) |const|                                                                                                                                                                              |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`area_remove_shape<class_PhysicsServer3D_method_area_remove_shape>`\ (\ area\: :ref:`RID<class_RID>`, shape_idx\: :ref:`int<class_int>`\ )                                                                                                                                                     |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`area_set_area_monitor_callback<class_PhysicsServer3D_method_area_set_area_monitor_callback>`\ (\ area\: :ref:`RID<class_RID>`, callback\: :ref:`Callable<class_Callable>`\ )                                                                                                                  |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`area_set_collision_layer<class_PhysicsServer3D_method_area_set_collision_layer>`\ (\ area\: :ref:`RID<class_RID>`, layer\: :ref:`int<class_int>`\ )                                                                                                                                           |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`area_set_collision_mask<class_PhysicsServer3D_method_area_set_collision_mask>`\ (\ area\: :ref:`RID<class_RID>`, mask\: :ref:`int<class_int>`\ )                                                                                                                                              |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`area_set_monitor_callback<class_PhysicsServer3D_method_area_set_monitor_callback>`\ (\ area\: :ref:`RID<class_RID>`, callback\: :ref:`Callable<class_Callable>`\ )                                                                                                                            |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`area_set_monitorable<class_PhysicsServer3D_method_area_set_monitorable>`\ (\ area\: :ref:`RID<class_RID>`, monitorable\: :ref:`bool<class_bool>`\ )                                                                                                                                           |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`area_set_param<class_PhysicsServer3D_method_area_set_param>`\ (\ area\: :ref:`RID<class_RID>`, param\: :ref:`AreaParameter<enum_PhysicsServer3D_AreaParameter>`, value\: :ref:`Variant<class_Variant>`\ )                                                                                     |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`area_set_ray_pickable<class_PhysicsServer3D_method_area_set_ray_pickable>`\ (\ area\: :ref:`RID<class_RID>`, enable\: :ref:`bool<class_bool>`\ )                                                                                                                                              |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`area_set_shape<class_PhysicsServer3D_method_area_set_shape>`\ (\ area\: :ref:`RID<class_RID>`, shape_idx\: :ref:`int<class_int>`, shape\: :ref:`RID<class_RID>`\ )                                                                                                                            |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`area_set_shape_disabled<class_PhysicsServer3D_method_area_set_shape_disabled>`\ (\ area\: :ref:`RID<class_RID>`, shape_idx\: :ref:`int<class_int>`, disabled\: :ref:`bool<class_bool>`\ )                                                                                                     |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`area_set_shape_transform<class_PhysicsServer3D_method_area_set_shape_transform>`\ (\ area\: :ref:`RID<class_RID>`, shape_idx\: :ref:`int<class_int>`, transform\: :ref:`Transform3D<class_Transform3D>`\ )                                                                                    |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`area_set_space<class_PhysicsServer3D_method_area_set_space>`\ (\ area\: :ref:`RID<class_RID>`, space\: :ref:`RID<class_RID>`\ )                                                                                                                                                               |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`area_set_transform<class_PhysicsServer3D_method_area_set_transform>`\ (\ area\: :ref:`RID<class_RID>`, transform\: :ref:`Transform3D<class_Transform3D>`\ )                                                                                                                                   |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`body_add_collision_exception<class_PhysicsServer3D_method_body_add_collision_exception>`\ (\ body\: :ref:`RID<class_RID>`, excepted_body\: :ref:`RID<class_RID>`\ )                                                                                                                           |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`body_add_constant_central_force<class_PhysicsServer3D_method_body_add_constant_central_force>`\ (\ body\: :ref:`RID<class_RID>`, force\: :ref:`Vector3<class_Vector3>`\ )                                                                                                                     |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`body_add_constant_force<class_PhysicsServer3D_method_body_add_constant_force>`\ (\ body\: :ref:`RID<class_RID>`, force\: :ref:`Vector3<class_Vector3>`, position\: :ref:`Vector3<class_Vector3>` = Vector3(0, 0, 0)\ )                                                                        |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`body_add_constant_torque<class_PhysicsServer3D_method_body_add_constant_torque>`\ (\ body\: :ref:`RID<class_RID>`, torque\: :ref:`Vector3<class_Vector3>`\ )                                                                                                                                  |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`body_add_shape<class_PhysicsServer3D_method_body_add_shape>`\ (\ body\: :ref:`RID<class_RID>`, shape\: :ref:`RID<class_RID>`, transform\: :ref:`Transform3D<class_Transform3D>` = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0), disabled\: :ref:`bool<class_bool>` = false\ )              |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`body_apply_central_force<class_PhysicsServer3D_method_body_apply_central_force>`\ (\ body\: :ref:`RID<class_RID>`, force\: :ref:`Vector3<class_Vector3>`\ )                                                                                                                                   |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`body_apply_central_impulse<class_PhysicsServer3D_method_body_apply_central_impulse>`\ (\ body\: :ref:`RID<class_RID>`, impulse\: :ref:`Vector3<class_Vector3>`\ )                                                                                                                             |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`body_apply_force<class_PhysicsServer3D_method_body_apply_force>`\ (\ body\: :ref:`RID<class_RID>`, force\: :ref:`Vector3<class_Vector3>`, position\: :ref:`Vector3<class_Vector3>` = Vector3(0, 0, 0)\ )                                                                                      |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`body_apply_impulse<class_PhysicsServer3D_method_body_apply_impulse>`\ (\ body\: :ref:`RID<class_RID>`, impulse\: :ref:`Vector3<class_Vector3>`, position\: :ref:`Vector3<class_Vector3>` = Vector3(0, 0, 0)\ )                                                                                |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`body_apply_torque<class_PhysicsServer3D_method_body_apply_torque>`\ (\ body\: :ref:`RID<class_RID>`, torque\: :ref:`Vector3<class_Vector3>`\ )                                                                                                                                                |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`body_apply_torque_impulse<class_PhysicsServer3D_method_body_apply_torque_impulse>`\ (\ body\: :ref:`RID<class_RID>`, impulse\: :ref:`Vector3<class_Vector3>`\ )                                                                                                                               |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`body_attach_object_instance_id<class_PhysicsServer3D_method_body_attach_object_instance_id>`\ (\ body\: :ref:`RID<class_RID>`, id\: :ref:`int<class_int>`\ )                                                                                                                                  |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`body_clear_shapes<class_PhysicsServer3D_method_body_clear_shapes>`\ (\ body\: :ref:`RID<class_RID>`\ )                                                                                                                                                                                        |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`RID<class_RID>`                                             | :ref:`body_create<class_PhysicsServer3D_method_body_create>`\ (\ )                                                                                                                                                                                                                                  |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`                                             | :ref:`body_get_collision_layer<class_PhysicsServer3D_method_body_get_collision_layer>`\ (\ body\: :ref:`RID<class_RID>`\ ) |const|                                                                                                                                                                  |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`                                             | :ref:`body_get_collision_mask<class_PhysicsServer3D_method_body_get_collision_mask>`\ (\ body\: :ref:`RID<class_RID>`\ ) |const|                                                                                                                                                                    |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`float<class_float>`                                         | :ref:`body_get_collision_priority<class_PhysicsServer3D_method_body_get_collision_priority>`\ (\ body\: :ref:`RID<class_RID>`\ ) |const|                                                                                                                                                            |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3<class_Vector3>`                                     | :ref:`body_get_constant_force<class_PhysicsServer3D_method_body_get_constant_force>`\ (\ body\: :ref:`RID<class_RID>`\ ) |const|                                                                                                                                                                    |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3<class_Vector3>`                                     | :ref:`body_get_constant_torque<class_PhysicsServer3D_method_body_get_constant_torque>`\ (\ body\: :ref:`RID<class_RID>`\ ) |const|                                                                                                                                                                  |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`PhysicsDirectBodyState3D<class_PhysicsDirectBodyState3D>`   | :ref:`body_get_direct_state<class_PhysicsServer3D_method_body_get_direct_state>`\ (\ body\: :ref:`RID<class_RID>`\ )                                                                                                                                                                                |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`                                             | :ref:`body_get_max_contacts_reported<class_PhysicsServer3D_method_body_get_max_contacts_reported>`\ (\ body\: :ref:`RID<class_RID>`\ ) |const|                                                                                                                                                      |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`BodyMode<enum_PhysicsServer3D_BodyMode>`                    | :ref:`body_get_mode<class_PhysicsServer3D_method_body_get_mode>`\ (\ body\: :ref:`RID<class_RID>`\ ) |const|                                                                                                                                                                                        |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`                                             | :ref:`body_get_object_instance_id<class_PhysicsServer3D_method_body_get_object_instance_id>`\ (\ body\: :ref:`RID<class_RID>`\ ) |const|                                                                                                                                                            |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Variant<class_Variant>`                                     | :ref:`body_get_param<class_PhysicsServer3D_method_body_get_param>`\ (\ body\: :ref:`RID<class_RID>`, param\: :ref:`BodyParameter<enum_PhysicsServer3D_BodyParameter>`\ ) |const|                                                                                                                    |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`RID<class_RID>`                                             | :ref:`body_get_shape<class_PhysicsServer3D_method_body_get_shape>`\ (\ body\: :ref:`RID<class_RID>`, shape_idx\: :ref:`int<class_int>`\ ) |const|                                                                                                                                                   |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`                                             | :ref:`body_get_shape_count<class_PhysicsServer3D_method_body_get_shape_count>`\ (\ body\: :ref:`RID<class_RID>`\ ) |const|                                                                                                                                                                          |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Transform3D<class_Transform3D>`                             | :ref:`body_get_shape_transform<class_PhysicsServer3D_method_body_get_shape_transform>`\ (\ body\: :ref:`RID<class_RID>`, shape_idx\: :ref:`int<class_int>`\ ) |const|                                                                                                                               |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`RID<class_RID>`                                             | :ref:`body_get_space<class_PhysicsServer3D_method_body_get_space>`\ (\ body\: :ref:`RID<class_RID>`\ ) |const|                                                                                                                                                                                      |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Variant<class_Variant>`                                     | :ref:`body_get_state<class_PhysicsServer3D_method_body_get_state>`\ (\ body\: :ref:`RID<class_RID>`, state\: :ref:`BodyState<enum_PhysicsServer3D_BodyState>`\ ) |const|                                                                                                                            |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`                                           | :ref:`body_is_axis_locked<class_PhysicsServer3D_method_body_is_axis_locked>`\ (\ body\: :ref:`RID<class_RID>`, axis\: :ref:`BodyAxis<enum_PhysicsServer3D_BodyAxis>`\ ) |const|                                                                                                                     |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`                                           | :ref:`body_is_continuous_collision_detection_enabled<class_PhysicsServer3D_method_body_is_continuous_collision_detection_enabled>`\ (\ body\: :ref:`RID<class_RID>`\ ) |const|                                                                                                                      |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`                                           | :ref:`body_is_omitting_force_integration<class_PhysicsServer3D_method_body_is_omitting_force_integration>`\ (\ body\: :ref:`RID<class_RID>`\ ) |const|                                                                                                                                              |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`body_remove_collision_exception<class_PhysicsServer3D_method_body_remove_collision_exception>`\ (\ body\: :ref:`RID<class_RID>`, excepted_body\: :ref:`RID<class_RID>`\ )                                                                                                                     |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`body_remove_shape<class_PhysicsServer3D_method_body_remove_shape>`\ (\ body\: :ref:`RID<class_RID>`, shape_idx\: :ref:`int<class_int>`\ )                                                                                                                                                     |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`body_reset_mass_properties<class_PhysicsServer3D_method_body_reset_mass_properties>`\ (\ body\: :ref:`RID<class_RID>`\ )                                                                                                                                                                      |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`body_set_axis_lock<class_PhysicsServer3D_method_body_set_axis_lock>`\ (\ body\: :ref:`RID<class_RID>`, axis\: :ref:`BodyAxis<enum_PhysicsServer3D_BodyAxis>`, lock\: :ref:`bool<class_bool>`\ )                                                                                               |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`body_set_axis_velocity<class_PhysicsServer3D_method_body_set_axis_velocity>`\ (\ body\: :ref:`RID<class_RID>`, axis_velocity\: :ref:`Vector3<class_Vector3>`\ )                                                                                                                               |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`body_set_collision_layer<class_PhysicsServer3D_method_body_set_collision_layer>`\ (\ body\: :ref:`RID<class_RID>`, layer\: :ref:`int<class_int>`\ )                                                                                                                                           |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`body_set_collision_mask<class_PhysicsServer3D_method_body_set_collision_mask>`\ (\ body\: :ref:`RID<class_RID>`, mask\: :ref:`int<class_int>`\ )                                                                                                                                              |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`body_set_collision_priority<class_PhysicsServer3D_method_body_set_collision_priority>`\ (\ body\: :ref:`RID<class_RID>`, priority\: :ref:`float<class_float>`\ )                                                                                                                              |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`body_set_constant_force<class_PhysicsServer3D_method_body_set_constant_force>`\ (\ body\: :ref:`RID<class_RID>`, force\: :ref:`Vector3<class_Vector3>`\ )                                                                                                                                     |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`body_set_constant_torque<class_PhysicsServer3D_method_body_set_constant_torque>`\ (\ body\: :ref:`RID<class_RID>`, torque\: :ref:`Vector3<class_Vector3>`\ )                                                                                                                                  |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`body_set_enable_continuous_collision_detection<class_PhysicsServer3D_method_body_set_enable_continuous_collision_detection>`\ (\ body\: :ref:`RID<class_RID>`, enable\: :ref:`bool<class_bool>`\ )                                                                                            |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`body_set_force_integration_callback<class_PhysicsServer3D_method_body_set_force_integration_callback>`\ (\ body\: :ref:`RID<class_RID>`, callable\: :ref:`Callable<class_Callable>`, userdata\: :ref:`Variant<class_Variant>` = null\ )                                                       |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`body_set_max_contacts_reported<class_PhysicsServer3D_method_body_set_max_contacts_reported>`\ (\ body\: :ref:`RID<class_RID>`, amount\: :ref:`int<class_int>`\ )                                                                                                                              |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`body_set_mode<class_PhysicsServer3D_method_body_set_mode>`\ (\ body\: :ref:`RID<class_RID>`, mode\: :ref:`BodyMode<enum_PhysicsServer3D_BodyMode>`\ )                                                                                                                                         |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`body_set_omit_force_integration<class_PhysicsServer3D_method_body_set_omit_force_integration>`\ (\ body\: :ref:`RID<class_RID>`, enable\: :ref:`bool<class_bool>`\ )                                                                                                                          |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`body_set_param<class_PhysicsServer3D_method_body_set_param>`\ (\ body\: :ref:`RID<class_RID>`, param\: :ref:`BodyParameter<enum_PhysicsServer3D_BodyParameter>`, value\: :ref:`Variant<class_Variant>`\ )                                                                                     |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`body_set_ray_pickable<class_PhysicsServer3D_method_body_set_ray_pickable>`\ (\ body\: :ref:`RID<class_RID>`, enable\: :ref:`bool<class_bool>`\ )                                                                                                                                              |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`body_set_shape<class_PhysicsServer3D_method_body_set_shape>`\ (\ body\: :ref:`RID<class_RID>`, shape_idx\: :ref:`int<class_int>`, shape\: :ref:`RID<class_RID>`\ )                                                                                                                            |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`body_set_shape_disabled<class_PhysicsServer3D_method_body_set_shape_disabled>`\ (\ body\: :ref:`RID<class_RID>`, shape_idx\: :ref:`int<class_int>`, disabled\: :ref:`bool<class_bool>`\ )                                                                                                     |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`body_set_shape_transform<class_PhysicsServer3D_method_body_set_shape_transform>`\ (\ body\: :ref:`RID<class_RID>`, shape_idx\: :ref:`int<class_int>`, transform\: :ref:`Transform3D<class_Transform3D>`\ )                                                                                    |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`body_set_space<class_PhysicsServer3D_method_body_set_space>`\ (\ body\: :ref:`RID<class_RID>`, space\: :ref:`RID<class_RID>`\ )                                                                                                                                                               |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`body_set_state<class_PhysicsServer3D_method_body_set_state>`\ (\ body\: :ref:`RID<class_RID>`, state\: :ref:`BodyState<enum_PhysicsServer3D_BodyState>`, value\: :ref:`Variant<class_Variant>`\ )                                                                                             |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`                                           | :ref:`body_test_motion<class_PhysicsServer3D_method_body_test_motion>`\ (\ body\: :ref:`RID<class_RID>`, parameters\: :ref:`PhysicsTestMotionParameters3D<class_PhysicsTestMotionParameters3D>`, result\: :ref:`PhysicsTestMotionResult3D<class_PhysicsTestMotionResult3D>` = null\ )               |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`RID<class_RID>`                                             | :ref:`box_shape_create<class_PhysicsServer3D_method_box_shape_create>`\ (\ )                                                                                                                                                                                                                        |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`RID<class_RID>`                                             | :ref:`capsule_shape_create<class_PhysicsServer3D_method_capsule_shape_create>`\ (\ )                                                                                                                                                                                                                |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`RID<class_RID>`                                             | :ref:`concave_polygon_shape_create<class_PhysicsServer3D_method_concave_polygon_shape_create>`\ (\ )                                                                                                                                                                                                |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`float<class_float>`                                         | :ref:`cone_twist_joint_get_param<class_PhysicsServer3D_method_cone_twist_joint_get_param>`\ (\ joint\: :ref:`RID<class_RID>`, param\: :ref:`ConeTwistJointParam<enum_PhysicsServer3D_ConeTwistJointParam>`\ ) |const|                                                                               |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`cone_twist_joint_set_param<class_PhysicsServer3D_method_cone_twist_joint_set_param>`\ (\ joint\: :ref:`RID<class_RID>`, param\: :ref:`ConeTwistJointParam<enum_PhysicsServer3D_ConeTwistJointParam>`, value\: :ref:`float<class_float>`\ )                                                    |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`RID<class_RID>`                                             | :ref:`convex_polygon_shape_create<class_PhysicsServer3D_method_convex_polygon_shape_create>`\ (\ )                                                                                                                                                                                                  |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`RID<class_RID>`                                             | :ref:`custom_shape_create<class_PhysicsServer3D_method_custom_shape_create>`\ (\ )                                                                                                                                                                                                                  |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`RID<class_RID>`                                             | :ref:`cylinder_shape_create<class_PhysicsServer3D_method_cylinder_shape_create>`\ (\ )                                                                                                                                                                                                              |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`free_rid<class_PhysicsServer3D_method_free_rid>`\ (\ rid\: :ref:`RID<class_RID>`\ )                                                                                                                                                                                                           |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`                                           | :ref:`generic_6dof_joint_get_flag<class_PhysicsServer3D_method_generic_6dof_joint_get_flag>`\ (\ joint\: :ref:`RID<class_RID>`, axis\: Vector3.Axis, flag\: :ref:`G6DOFJointAxisFlag<enum_PhysicsServer3D_G6DOFJointAxisFlag>`\ ) |const|                                                           |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`float<class_float>`                                         | :ref:`generic_6dof_joint_get_param<class_PhysicsServer3D_method_generic_6dof_joint_get_param>`\ (\ joint\: :ref:`RID<class_RID>`, axis\: Vector3.Axis, param\: :ref:`G6DOFJointAxisParam<enum_PhysicsServer3D_G6DOFJointAxisParam>`\ ) |const|                                                      |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`generic_6dof_joint_set_flag<class_PhysicsServer3D_method_generic_6dof_joint_set_flag>`\ (\ joint\: :ref:`RID<class_RID>`, axis\: Vector3.Axis, flag\: :ref:`G6DOFJointAxisFlag<enum_PhysicsServer3D_G6DOFJointAxisFlag>`, enable\: :ref:`bool<class_bool>`\ )                                 |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`generic_6dof_joint_set_param<class_PhysicsServer3D_method_generic_6dof_joint_set_param>`\ (\ joint\: :ref:`RID<class_RID>`, axis\: Vector3.Axis, param\: :ref:`G6DOFJointAxisParam<enum_PhysicsServer3D_G6DOFJointAxisParam>`, value\: :ref:`float<class_float>`\ )                           |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`                                             | :ref:`get_process_info<class_PhysicsServer3D_method_get_process_info>`\ (\ process_info\: :ref:`ProcessInfo<enum_PhysicsServer3D_ProcessInfo>`\ )                                                                                                                                                   |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`RID<class_RID>`                                             | :ref:`heightmap_shape_create<class_PhysicsServer3D_method_heightmap_shape_create>`\ (\ )                                                                                                                                                                                                            |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`                                           | :ref:`hinge_joint_get_flag<class_PhysicsServer3D_method_hinge_joint_get_flag>`\ (\ joint\: :ref:`RID<class_RID>`, flag\: :ref:`HingeJointFlag<enum_PhysicsServer3D_HingeJointFlag>`\ ) |const|                                                                                                      |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`float<class_float>`                                         | :ref:`hinge_joint_get_param<class_PhysicsServer3D_method_hinge_joint_get_param>`\ (\ joint\: :ref:`RID<class_RID>`, param\: :ref:`HingeJointParam<enum_PhysicsServer3D_HingeJointParam>`\ ) |const|                                                                                                 |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`hinge_joint_set_flag<class_PhysicsServer3D_method_hinge_joint_set_flag>`\ (\ joint\: :ref:`RID<class_RID>`, flag\: :ref:`HingeJointFlag<enum_PhysicsServer3D_HingeJointFlag>`, enabled\: :ref:`bool<class_bool>`\ )                                                                           |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`hinge_joint_set_param<class_PhysicsServer3D_method_hinge_joint_set_param>`\ (\ joint\: :ref:`RID<class_RID>`, param\: :ref:`HingeJointParam<enum_PhysicsServer3D_HingeJointParam>`, value\: :ref:`float<class_float>`\ )                                                                      |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`joint_clear<class_PhysicsServer3D_method_joint_clear>`\ (\ joint\: :ref:`RID<class_RID>`\ )                                                                                                                                                                                                   |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`RID<class_RID>`                                             | :ref:`joint_create<class_PhysicsServer3D_method_joint_create>`\ (\ )                                                                                                                                                                                                                                |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`joint_disable_collisions_between_bodies<class_PhysicsServer3D_method_joint_disable_collisions_between_bodies>`\ (\ joint\: :ref:`RID<class_RID>`, disable\: :ref:`bool<class_bool>`\ )                                                                                                        |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`                                             | :ref:`joint_get_solver_priority<class_PhysicsServer3D_method_joint_get_solver_priority>`\ (\ joint\: :ref:`RID<class_RID>`\ ) |const|                                                                                                                                                               |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`JointType<enum_PhysicsServer3D_JointType>`                  | :ref:`joint_get_type<class_PhysicsServer3D_method_joint_get_type>`\ (\ joint\: :ref:`RID<class_RID>`\ ) |const|                                                                                                                                                                                     |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`                                           | :ref:`joint_is_disabled_collisions_between_bodies<class_PhysicsServer3D_method_joint_is_disabled_collisions_between_bodies>`\ (\ joint\: :ref:`RID<class_RID>`\ ) |const|                                                                                                                           |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`joint_make_cone_twist<class_PhysicsServer3D_method_joint_make_cone_twist>`\ (\ joint\: :ref:`RID<class_RID>`, body_A\: :ref:`RID<class_RID>`, local_ref_A\: :ref:`Transform3D<class_Transform3D>`, body_B\: :ref:`RID<class_RID>`, local_ref_B\: :ref:`Transform3D<class_Transform3D>`\ )     |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`joint_make_generic_6dof<class_PhysicsServer3D_method_joint_make_generic_6dof>`\ (\ joint\: :ref:`RID<class_RID>`, body_A\: :ref:`RID<class_RID>`, local_ref_A\: :ref:`Transform3D<class_Transform3D>`, body_B\: :ref:`RID<class_RID>`, local_ref_B\: :ref:`Transform3D<class_Transform3D>`\ ) |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`joint_make_hinge<class_PhysicsServer3D_method_joint_make_hinge>`\ (\ joint\: :ref:`RID<class_RID>`, body_A\: :ref:`RID<class_RID>`, hinge_A\: :ref:`Transform3D<class_Transform3D>`, body_B\: :ref:`RID<class_RID>`, hinge_B\: :ref:`Transform3D<class_Transform3D>`\ )                       |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`joint_make_pin<class_PhysicsServer3D_method_joint_make_pin>`\ (\ joint\: :ref:`RID<class_RID>`, body_A\: :ref:`RID<class_RID>`, local_A\: :ref:`Vector3<class_Vector3>`, body_B\: :ref:`RID<class_RID>`, local_B\: :ref:`Vector3<class_Vector3>`\ )                                           |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`joint_make_slider<class_PhysicsServer3D_method_joint_make_slider>`\ (\ joint\: :ref:`RID<class_RID>`, body_A\: :ref:`RID<class_RID>`, local_ref_A\: :ref:`Transform3D<class_Transform3D>`, body_B\: :ref:`RID<class_RID>`, local_ref_B\: :ref:`Transform3D<class_Transform3D>`\ )             |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`joint_set_solver_priority<class_PhysicsServer3D_method_joint_set_solver_priority>`\ (\ joint\: :ref:`RID<class_RID>`, priority\: :ref:`int<class_int>`\ )                                                                                                                                     |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3<class_Vector3>`                                     | :ref:`pin_joint_get_local_a<class_PhysicsServer3D_method_pin_joint_get_local_a>`\ (\ joint\: :ref:`RID<class_RID>`\ ) |const|                                                                                                                                                                       |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3<class_Vector3>`                                     | :ref:`pin_joint_get_local_b<class_PhysicsServer3D_method_pin_joint_get_local_b>`\ (\ joint\: :ref:`RID<class_RID>`\ ) |const|                                                                                                                                                                       |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`float<class_float>`                                         | :ref:`pin_joint_get_param<class_PhysicsServer3D_method_pin_joint_get_param>`\ (\ joint\: :ref:`RID<class_RID>`, param\: :ref:`PinJointParam<enum_PhysicsServer3D_PinJointParam>`\ ) |const|                                                                                                         |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`pin_joint_set_local_a<class_PhysicsServer3D_method_pin_joint_set_local_a>`\ (\ joint\: :ref:`RID<class_RID>`, local_A\: :ref:`Vector3<class_Vector3>`\ )                                                                                                                                      |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`pin_joint_set_local_b<class_PhysicsServer3D_method_pin_joint_set_local_b>`\ (\ joint\: :ref:`RID<class_RID>`, local_B\: :ref:`Vector3<class_Vector3>`\ )                                                                                                                                      |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`pin_joint_set_param<class_PhysicsServer3D_method_pin_joint_set_param>`\ (\ joint\: :ref:`RID<class_RID>`, param\: :ref:`PinJointParam<enum_PhysicsServer3D_PinJointParam>`, value\: :ref:`float<class_float>`\ )                                                                              |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`RID<class_RID>`                                             | :ref:`separation_ray_shape_create<class_PhysicsServer3D_method_separation_ray_shape_create>`\ (\ )                                                                                                                                                                                                  |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`set_active<class_PhysicsServer3D_method_set_active>`\ (\ active\: :ref:`bool<class_bool>`\ )                                                                                                                                                                                                  |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Variant<class_Variant>`                                     | :ref:`shape_get_data<class_PhysicsServer3D_method_shape_get_data>`\ (\ shape\: :ref:`RID<class_RID>`\ ) |const|                                                                                                                                                                                     |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`float<class_float>`                                         | :ref:`shape_get_margin<class_PhysicsServer3D_method_shape_get_margin>`\ (\ shape\: :ref:`RID<class_RID>`\ ) |const|                                                                                                                                                                                 |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`ShapeType<enum_PhysicsServer3D_ShapeType>`                  | :ref:`shape_get_type<class_PhysicsServer3D_method_shape_get_type>`\ (\ shape\: :ref:`RID<class_RID>`\ ) |const|                                                                                                                                                                                     |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`shape_set_data<class_PhysicsServer3D_method_shape_set_data>`\ (\ shape\: :ref:`RID<class_RID>`, data\: :ref:`Variant<class_Variant>`\ )                                                                                                                                                       |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`shape_set_margin<class_PhysicsServer3D_method_shape_set_margin>`\ (\ shape\: :ref:`RID<class_RID>`, margin\: :ref:`float<class_float>`\ )                                                                                                                                                     |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`float<class_float>`                                         | :ref:`slider_joint_get_param<class_PhysicsServer3D_method_slider_joint_get_param>`\ (\ joint\: :ref:`RID<class_RID>`, param\: :ref:`SliderJointParam<enum_PhysicsServer3D_SliderJointParam>`\ ) |const|                                                                                             |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`slider_joint_set_param<class_PhysicsServer3D_method_slider_joint_set_param>`\ (\ joint\: :ref:`RID<class_RID>`, param\: :ref:`SliderJointParam<enum_PhysicsServer3D_SliderJointParam>`, value\: :ref:`float<class_float>`\ )                                                                  |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`soft_body_add_collision_exception<class_PhysicsServer3D_method_soft_body_add_collision_exception>`\ (\ body\: :ref:`RID<class_RID>`, body_b\: :ref:`RID<class_RID>`\ )                                                                                                                        |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`RID<class_RID>`                                             | :ref:`soft_body_create<class_PhysicsServer3D_method_soft_body_create>`\ (\ )                                                                                                                                                                                                                        |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`AABB<class_AABB>`                                           | :ref:`soft_body_get_bounds<class_PhysicsServer3D_method_soft_body_get_bounds>`\ (\ body\: :ref:`RID<class_RID>`\ ) |const|                                                                                                                                                                          |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`                                             | :ref:`soft_body_get_collision_layer<class_PhysicsServer3D_method_soft_body_get_collision_layer>`\ (\ body\: :ref:`RID<class_RID>`\ ) |const|                                                                                                                                                        |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`                                             | :ref:`soft_body_get_collision_mask<class_PhysicsServer3D_method_soft_body_get_collision_mask>`\ (\ body\: :ref:`RID<class_RID>`\ ) |const|                                                                                                                                                          |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`float<class_float>`                                         | :ref:`soft_body_get_damping_coefficient<class_PhysicsServer3D_method_soft_body_get_damping_coefficient>`\ (\ body\: :ref:`RID<class_RID>`\ ) |const|                                                                                                                                                |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`float<class_float>`                                         | :ref:`soft_body_get_drag_coefficient<class_PhysicsServer3D_method_soft_body_get_drag_coefficient>`\ (\ body\: :ref:`RID<class_RID>`\ ) |const|                                                                                                                                                      |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`float<class_float>`                                         | :ref:`soft_body_get_linear_stiffness<class_PhysicsServer3D_method_soft_body_get_linear_stiffness>`\ (\ body\: :ref:`RID<class_RID>`\ ) |const|                                                                                                                                                      |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3<class_Vector3>`                                     | :ref:`soft_body_get_point_global_position<class_PhysicsServer3D_method_soft_body_get_point_global_position>`\ (\ body\: :ref:`RID<class_RID>`, point_index\: :ref:`int<class_int>`\ ) |const|                                                                                                       |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`float<class_float>`                                         | :ref:`soft_body_get_pressure_coefficient<class_PhysicsServer3D_method_soft_body_get_pressure_coefficient>`\ (\ body\: :ref:`RID<class_RID>`\ ) |const|                                                                                                                                              |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`                                             | :ref:`soft_body_get_simulation_precision<class_PhysicsServer3D_method_soft_body_get_simulation_precision>`\ (\ body\: :ref:`RID<class_RID>`\ ) |const|                                                                                                                                              |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`RID<class_RID>`                                             | :ref:`soft_body_get_space<class_PhysicsServer3D_method_soft_body_get_space>`\ (\ body\: :ref:`RID<class_RID>`\ ) |const|                                                                                                                                                                            |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Variant<class_Variant>`                                     | :ref:`soft_body_get_state<class_PhysicsServer3D_method_soft_body_get_state>`\ (\ body\: :ref:`RID<class_RID>`, state\: :ref:`BodyState<enum_PhysicsServer3D_BodyState>`\ ) |const|                                                                                                                  |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`float<class_float>`                                         | :ref:`soft_body_get_total_mass<class_PhysicsServer3D_method_soft_body_get_total_mass>`\ (\ body\: :ref:`RID<class_RID>`\ ) |const|                                                                                                                                                                  |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`                                           | :ref:`soft_body_is_point_pinned<class_PhysicsServer3D_method_soft_body_is_point_pinned>`\ (\ body\: :ref:`RID<class_RID>`, point_index\: :ref:`int<class_int>`\ ) |const|                                                                                                                           |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`soft_body_move_point<class_PhysicsServer3D_method_soft_body_move_point>`\ (\ body\: :ref:`RID<class_RID>`, point_index\: :ref:`int<class_int>`, global_position\: :ref:`Vector3<class_Vector3>`\ )                                                                                            |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`soft_body_pin_point<class_PhysicsServer3D_method_soft_body_pin_point>`\ (\ body\: :ref:`RID<class_RID>`, point_index\: :ref:`int<class_int>`, pin\: :ref:`bool<class_bool>`\ )                                                                                                                |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`soft_body_remove_all_pinned_points<class_PhysicsServer3D_method_soft_body_remove_all_pinned_points>`\ (\ body\: :ref:`RID<class_RID>`\ )                                                                                                                                                      |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`soft_body_remove_collision_exception<class_PhysicsServer3D_method_soft_body_remove_collision_exception>`\ (\ body\: :ref:`RID<class_RID>`, body_b\: :ref:`RID<class_RID>`\ )                                                                                                                  |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`soft_body_set_collision_layer<class_PhysicsServer3D_method_soft_body_set_collision_layer>`\ (\ body\: :ref:`RID<class_RID>`, layer\: :ref:`int<class_int>`\ )                                                                                                                                 |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`soft_body_set_collision_mask<class_PhysicsServer3D_method_soft_body_set_collision_mask>`\ (\ body\: :ref:`RID<class_RID>`, mask\: :ref:`int<class_int>`\ )                                                                                                                                    |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`soft_body_set_damping_coefficient<class_PhysicsServer3D_method_soft_body_set_damping_coefficient>`\ (\ body\: :ref:`RID<class_RID>`, damping_coefficient\: :ref:`float<class_float>`\ )                                                                                                       |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`soft_body_set_drag_coefficient<class_PhysicsServer3D_method_soft_body_set_drag_coefficient>`\ (\ body\: :ref:`RID<class_RID>`, drag_coefficient\: :ref:`float<class_float>`\ )                                                                                                                |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`soft_body_set_linear_stiffness<class_PhysicsServer3D_method_soft_body_set_linear_stiffness>`\ (\ body\: :ref:`RID<class_RID>`, stiffness\: :ref:`float<class_float>`\ )                                                                                                                       |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`soft_body_set_mesh<class_PhysicsServer3D_method_soft_body_set_mesh>`\ (\ body\: :ref:`RID<class_RID>`, mesh\: :ref:`RID<class_RID>`\ )                                                                                                                                                        |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`soft_body_set_pressure_coefficient<class_PhysicsServer3D_method_soft_body_set_pressure_coefficient>`\ (\ body\: :ref:`RID<class_RID>`, pressure_coefficient\: :ref:`float<class_float>`\ )                                                                                                    |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`soft_body_set_ray_pickable<class_PhysicsServer3D_method_soft_body_set_ray_pickable>`\ (\ body\: :ref:`RID<class_RID>`, enable\: :ref:`bool<class_bool>`\ )                                                                                                                                    |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`soft_body_set_simulation_precision<class_PhysicsServer3D_method_soft_body_set_simulation_precision>`\ (\ body\: :ref:`RID<class_RID>`, simulation_precision\: :ref:`int<class_int>`\ )                                                                                                        |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`soft_body_set_space<class_PhysicsServer3D_method_soft_body_set_space>`\ (\ body\: :ref:`RID<class_RID>`, space\: :ref:`RID<class_RID>`\ )                                                                                                                                                     |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`soft_body_set_state<class_PhysicsServer3D_method_soft_body_set_state>`\ (\ body\: :ref:`RID<class_RID>`, state\: :ref:`BodyState<enum_PhysicsServer3D_BodyState>`, variant\: :ref:`Variant<class_Variant>`\ )                                                                                 |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`soft_body_set_total_mass<class_PhysicsServer3D_method_soft_body_set_total_mass>`\ (\ body\: :ref:`RID<class_RID>`, total_mass\: :ref:`float<class_float>`\ )                                                                                                                                  |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`soft_body_set_transform<class_PhysicsServer3D_method_soft_body_set_transform>`\ (\ body\: :ref:`RID<class_RID>`, transform\: :ref:`Transform3D<class_Transform3D>`\ )                                                                                                                         |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`soft_body_update_rendering_server<class_PhysicsServer3D_method_soft_body_update_rendering_server>`\ (\ body\: :ref:`RID<class_RID>`, rendering_server_handler\: :ref:`PhysicsServer3DRenderingServerHandler<class_PhysicsServer3DRenderingServerHandler>`\ )                                  |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`RID<class_RID>`                                             | :ref:`space_create<class_PhysicsServer3D_method_space_create>`\ (\ )                                                                                                                                                                                                                                |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`PhysicsDirectSpaceState3D<class_PhysicsDirectSpaceState3D>` | :ref:`space_get_direct_state<class_PhysicsServer3D_method_space_get_direct_state>`\ (\ space\: :ref:`RID<class_RID>`\ )                                                                                                                                                                             |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`float<class_float>`                                         | :ref:`space_get_param<class_PhysicsServer3D_method_space_get_param>`\ (\ space\: :ref:`RID<class_RID>`, param\: :ref:`SpaceParameter<enum_PhysicsServer3D_SpaceParameter>`\ ) |const|                                                                                                               |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`                                           | :ref:`space_is_active<class_PhysicsServer3D_method_space_is_active>`\ (\ space\: :ref:`RID<class_RID>`\ ) |const|                                                                                                                                                                                   |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`space_set_active<class_PhysicsServer3D_method_space_set_active>`\ (\ space\: :ref:`RID<class_RID>`, active\: :ref:`bool<class_bool>`\ )                                                                                                                                                       |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                                            | :ref:`space_set_param<class_PhysicsServer3D_method_space_set_param>`\ (\ space\: :ref:`RID<class_RID>`, param\: :ref:`SpaceParameter<enum_PhysicsServer3D_SpaceParameter>`, value\: :ref:`float<class_float>`\ )                                                                                    |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`RID<class_RID>`                                             | :ref:`sphere_shape_create<class_PhysicsServer3D_method_sphere_shape_create>`\ (\ )                                                                                                                                                                                                                  |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`RID<class_RID>`                                             | :ref:`world_boundary_shape_create<class_PhysicsServer3D_method_world_boundary_shape_create>`\ (\ )                                                                                                                                                                                                  |
   +-------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

枚举
----

.. _enum_PhysicsServer3D_JointType:

.. rst-class:: classref-enumeration

enum **JointType**: :ref:`🔗<enum_PhysicsServer3D_JointType>`

.. _class_PhysicsServer3D_constant_JOINT_TYPE_PIN:

.. rst-class:: classref-enumeration-constant

:ref:`JointType<enum_PhysicsServer3D_JointType>` **JOINT_TYPE_PIN** = ``0``

该 :ref:`Joint3D<class_Joint3D>` 为 :ref:`PinJoint3D<class_PinJoint3D>`\ 。

.. _class_PhysicsServer3D_constant_JOINT_TYPE_HINGE:

.. rst-class:: classref-enumeration-constant

:ref:`JointType<enum_PhysicsServer3D_JointType>` **JOINT_TYPE_HINGE** = ``1``

该 :ref:`Joint3D<class_Joint3D>` 为 :ref:`HingeJoint3D<class_HingeJoint3D>`\ 。

.. _class_PhysicsServer3D_constant_JOINT_TYPE_SLIDER:

.. rst-class:: classref-enumeration-constant

:ref:`JointType<enum_PhysicsServer3D_JointType>` **JOINT_TYPE_SLIDER** = ``2``

该 :ref:`Joint3D<class_Joint3D>` 为 :ref:`SliderJoint3D<class_SliderJoint3D>`\ 。

.. _class_PhysicsServer3D_constant_JOINT_TYPE_CONE_TWIST:

.. rst-class:: classref-enumeration-constant

:ref:`JointType<enum_PhysicsServer3D_JointType>` **JOINT_TYPE_CONE_TWIST** = ``3``

该 :ref:`Joint3D<class_Joint3D>` 为 :ref:`ConeTwistJoint3D<class_ConeTwistJoint3D>`\ 。

.. _class_PhysicsServer3D_constant_JOINT_TYPE_6DOF:

.. rst-class:: classref-enumeration-constant

:ref:`JointType<enum_PhysicsServer3D_JointType>` **JOINT_TYPE_6DOF** = ``4``

该 :ref:`Joint3D<class_Joint3D>` 为 :ref:`Generic6DOFJoint3D<class_Generic6DOFJoint3D>`\ 。

.. _class_PhysicsServer3D_constant_JOINT_TYPE_MAX:

.. rst-class:: classref-enumeration-constant

:ref:`JointType<enum_PhysicsServer3D_JointType>` **JOINT_TYPE_MAX** = ``5``

代表 :ref:`JointType<enum_PhysicsServer3D_JointType>` 枚举的大小。

.. rst-class:: classref-item-separator

----

.. _enum_PhysicsServer3D_PinJointParam:

.. rst-class:: classref-enumeration

enum **PinJointParam**: :ref:`🔗<enum_PhysicsServer3D_PinJointParam>`

.. _class_PhysicsServer3D_constant_PIN_JOINT_BIAS:

.. rst-class:: classref-enumeration-constant

:ref:`PinJointParam<enum_PhysicsServer3D_PinJointParam>` **PIN_JOINT_BIAS** = ``0``

固定对象试图保持彼此位置关系的力度。

越高越强。

.. _class_PhysicsServer3D_constant_PIN_JOINT_DAMPING:

.. rst-class:: classref-enumeration-constant

:ref:`PinJointParam<enum_PhysicsServer3D_PinJointParam>` **PIN_JOINT_DAMPING** = ``1``

被固定的物体试图保持彼此速度关系的力度。

越高越强。

.. _class_PhysicsServer3D_constant_PIN_JOINT_IMPULSE_CLAMP:

.. rst-class:: classref-enumeration-constant

:ref:`PinJointParam<enum_PhysicsServer3D_PinJointParam>` **PIN_JOINT_IMPULSE_CLAMP** = ``2``

如果高于 0，则此值是此 Joint3D 施加在其末端的冲量的最大值。

.. rst-class:: classref-item-separator

----

.. _enum_PhysicsServer3D_HingeJointParam:

.. rst-class:: classref-enumeration

enum **HingeJointParam**: :ref:`🔗<enum_PhysicsServer3D_HingeJointParam>`

.. _class_PhysicsServer3D_constant_HINGE_JOINT_BIAS:

.. rst-class:: classref-enumeration-constant

:ref:`HingeJointParam<enum_PhysicsServer3D_HingeJointParam>` **HINGE_JOINT_BIAS** = ``0``

两个物体向不同方向移动时被拉回到一起的速度。

.. _class_PhysicsServer3D_constant_HINGE_JOINT_LIMIT_UPPER:

.. rst-class:: classref-enumeration-constant

:ref:`HingeJointParam<enum_PhysicsServer3D_HingeJointParam>` **HINGE_JOINT_LIMIT_UPPER** = ``1``

铰链上的最大旋转。

.. _class_PhysicsServer3D_constant_HINGE_JOINT_LIMIT_LOWER:

.. rst-class:: classref-enumeration-constant

:ref:`HingeJointParam<enum_PhysicsServer3D_HingeJointParam>` **HINGE_JOINT_LIMIT_LOWER** = ``2``

铰链上的最小旋转。

.. _class_PhysicsServer3D_constant_HINGE_JOINT_LIMIT_BIAS:

.. rst-class:: classref-enumeration-constant

:ref:`HingeJointParam<enum_PhysicsServer3D_HingeJointParam>` **HINGE_JOINT_LIMIT_BIAS** = ``3``

垂直于铰链的轴线上的旋转得到纠正的速度。

.. _class_PhysicsServer3D_constant_HINGE_JOINT_LIMIT_SOFTNESS:

.. rst-class:: classref-enumeration-constant

:ref:`HingeJointParam<enum_PhysicsServer3D_HingeJointParam>` **HINGE_JOINT_LIMIT_SOFTNESS** = ``4``

.. container:: contribute

	目前没有这个枚举的描述。请帮我们\ :ref:`贡献一个 <doc_updating_the_class_reference>`\ ！



.. _class_PhysicsServer3D_constant_HINGE_JOINT_LIMIT_RELAXATION:

.. rst-class:: classref-enumeration-constant

:ref:`HingeJointParam<enum_PhysicsServer3D_HingeJointParam>` **HINGE_JOINT_LIMIT_RELAXATION** = ``5``

该值越低，旋转速度越慢。

.. _class_PhysicsServer3D_constant_HINGE_JOINT_MOTOR_TARGET_VELOCITY:

.. rst-class:: classref-enumeration-constant

:ref:`HingeJointParam<enum_PhysicsServer3D_HingeJointParam>` **HINGE_JOINT_MOTOR_TARGET_VELOCITY** = ``6``

目标马达的目标速度。

.. _class_PhysicsServer3D_constant_HINGE_JOINT_MOTOR_MAX_IMPULSE:

.. rst-class:: classref-enumeration-constant

:ref:`HingeJointParam<enum_PhysicsServer3D_HingeJointParam>` **HINGE_JOINT_MOTOR_MAX_IMPULSE** = ``7``

马达的最大加速度。

.. rst-class:: classref-item-separator

----

.. _enum_PhysicsServer3D_HingeJointFlag:

.. rst-class:: classref-enumeration

enum **HingeJointFlag**: :ref:`🔗<enum_PhysicsServer3D_HingeJointFlag>`

.. _class_PhysicsServer3D_constant_HINGE_JOINT_FLAG_USE_LIMIT:

.. rst-class:: classref-enumeration-constant

:ref:`HingeJointFlag<enum_PhysicsServer3D_HingeJointFlag>` **HINGE_JOINT_FLAG_USE_LIMIT** = ``0``

如果为 ``true``\ ，铰链具有最大和最小旋转。

.. _class_PhysicsServer3D_constant_HINGE_JOINT_FLAG_ENABLE_MOTOR:

.. rst-class:: classref-enumeration-constant

:ref:`HingeJointFlag<enum_PhysicsServer3D_HingeJointFlag>` **HINGE_JOINT_FLAG_ENABLE_MOTOR** = ``1``

如果为 ``true``\ ，则马达将转动铰链。

.. rst-class:: classref-item-separator

----

.. _enum_PhysicsServer3D_SliderJointParam:

.. rst-class:: classref-enumeration

enum **SliderJointParam**: :ref:`🔗<enum_PhysicsServer3D_SliderJointParam>`

.. _class_PhysicsServer3D_constant_SLIDER_JOINT_LINEAR_LIMIT_UPPER:

.. rst-class:: classref-enumeration-constant

:ref:`SliderJointParam<enum_PhysicsServer3D_SliderJointParam>` **SLIDER_JOINT_LINEAR_LIMIT_UPPER** = ``0``

阻尼发生前轴心点之间在 X 轴上的最大差异。

.. _class_PhysicsServer3D_constant_SLIDER_JOINT_LINEAR_LIMIT_LOWER:

.. rst-class:: classref-enumeration-constant

:ref:`SliderJointParam<enum_PhysicsServer3D_SliderJointParam>` **SLIDER_JOINT_LINEAR_LIMIT_LOWER** = ``1``

阻尼发生前轴心点之间在 X 轴上的最小差异。

.. _class_PhysicsServer3D_constant_SLIDER_JOINT_LINEAR_LIMIT_SOFTNESS:

.. rst-class:: classref-enumeration-constant

:ref:`SliderJointParam<enum_PhysicsServer3D_SliderJointParam>` **SLIDER_JOINT_LINEAR_LIMIT_SOFTNESS** = ``2``

一旦超过极限，应用于滑块轴上移动的系数。越低，运动越慢。

.. _class_PhysicsServer3D_constant_SLIDER_JOINT_LINEAR_LIMIT_RESTITUTION:

.. rst-class:: classref-enumeration-constant

:ref:`SliderJointParam<enum_PhysicsServer3D_SliderJointParam>` **SLIDER_JOINT_LINEAR_LIMIT_RESTITUTION** = ``3``

超出限制后的补偿。数值越低，损失的速度能量越多。

.. _class_PhysicsServer3D_constant_SLIDER_JOINT_LINEAR_LIMIT_DAMPING:

.. rst-class:: classref-enumeration-constant

:ref:`SliderJointParam<enum_PhysicsServer3D_SliderJointParam>` **SLIDER_JOINT_LINEAR_LIMIT_DAMPING** = ``4``

一旦超过滑块的极限，阻尼的数量。

.. _class_PhysicsServer3D_constant_SLIDER_JOINT_LINEAR_MOTION_SOFTNESS:

.. rst-class:: classref-enumeration-constant

:ref:`SliderJointParam<enum_PhysicsServer3D_SliderJointParam>` **SLIDER_JOINT_LINEAR_MOTION_SOFTNESS** = ``5``

只要滑块在限制范围内，就应用于滑块轴上移动的系数。越低，运动越慢。

.. _class_PhysicsServer3D_constant_SLIDER_JOINT_LINEAR_MOTION_RESTITUTION:

.. rst-class:: classref-enumeration-constant

:ref:`SliderJointParam<enum_PhysicsServer3D_SliderJointParam>` **SLIDER_JOINT_LINEAR_MOTION_RESTITUTION** = ``6``

滑块限制内的恢复量。

.. _class_PhysicsServer3D_constant_SLIDER_JOINT_LINEAR_MOTION_DAMPING:

.. rst-class:: classref-enumeration-constant

:ref:`SliderJointParam<enum_PhysicsServer3D_SliderJointParam>` **SLIDER_JOINT_LINEAR_MOTION_DAMPING** = ``7``

滑块内部的阻尼量受到限制。

.. _class_PhysicsServer3D_constant_SLIDER_JOINT_LINEAR_ORTHOGONAL_SOFTNESS:

.. rst-class:: classref-enumeration-constant

:ref:`SliderJointParam<enum_PhysicsServer3D_SliderJointParam>` **SLIDER_JOINT_LINEAR_ORTHOGONAL_SOFTNESS** = ``8``

应用于在垂直于滑块的轴上移动的系数。

.. _class_PhysicsServer3D_constant_SLIDER_JOINT_LINEAR_ORTHOGONAL_RESTITUTION:

.. rst-class:: classref-enumeration-constant

:ref:`SliderJointParam<enum_PhysicsServer3D_SliderJointParam>` **SLIDER_JOINT_LINEAR_ORTHOGONAL_RESTITUTION** = ``9``

当移动穿过垂直于滑块的轴时的恢复量。

.. _class_PhysicsServer3D_constant_SLIDER_JOINT_LINEAR_ORTHOGONAL_DAMPING:

.. rst-class:: classref-enumeration-constant

:ref:`SliderJointParam<enum_PhysicsServer3D_SliderJointParam>` **SLIDER_JOINT_LINEAR_ORTHOGONAL_DAMPING** = ``10``

当移动穿过垂直于滑块的轴时的阻尼量。

.. _class_PhysicsServer3D_constant_SLIDER_JOINT_ANGULAR_LIMIT_UPPER:

.. rst-class:: classref-enumeration-constant

:ref:`SliderJointParam<enum_PhysicsServer3D_SliderJointParam>` **SLIDER_JOINT_ANGULAR_LIMIT_UPPER** = ``11``

滑块旋转的上限。

.. _class_PhysicsServer3D_constant_SLIDER_JOINT_ANGULAR_LIMIT_LOWER:

.. rst-class:: classref-enumeration-constant

:ref:`SliderJointParam<enum_PhysicsServer3D_SliderJointParam>` **SLIDER_JOINT_ANGULAR_LIMIT_LOWER** = ``12``

滑块旋转的下限。

.. _class_PhysicsServer3D_constant_SLIDER_JOINT_ANGULAR_LIMIT_SOFTNESS:

.. rst-class:: classref-enumeration-constant

:ref:`SliderJointParam<enum_PhysicsServer3D_SliderJointParam>` **SLIDER_JOINT_ANGULAR_LIMIT_SOFTNESS** = ``13``

一旦超过极限，应用于所有旋转的系数。

.. _class_PhysicsServer3D_constant_SLIDER_JOINT_ANGULAR_LIMIT_RESTITUTION:

.. rst-class:: classref-enumeration-constant

:ref:`SliderJointParam<enum_PhysicsServer3D_SliderJointParam>` **SLIDER_JOINT_ANGULAR_LIMIT_RESTITUTION** = ``14``

超过限制时旋转的恢复量。

.. _class_PhysicsServer3D_constant_SLIDER_JOINT_ANGULAR_LIMIT_DAMPING:

.. rst-class:: classref-enumeration-constant

:ref:`SliderJointParam<enum_PhysicsServer3D_SliderJointParam>` **SLIDER_JOINT_ANGULAR_LIMIT_DAMPING** = ``15``

超过极限时旋转的阻尼量。

.. _class_PhysicsServer3D_constant_SLIDER_JOINT_ANGULAR_MOTION_SOFTNESS:

.. rst-class:: classref-enumeration-constant

:ref:`SliderJointParam<enum_PhysicsServer3D_SliderJointParam>` **SLIDER_JOINT_ANGULAR_MOTION_SOFTNESS** = ``16``

应用于所有极限旋转的因子。

.. _class_PhysicsServer3D_constant_SLIDER_JOINT_ANGULAR_MOTION_RESTITUTION:

.. rst-class:: classref-enumeration-constant

:ref:`SliderJointParam<enum_PhysicsServer3D_SliderJointParam>` **SLIDER_JOINT_ANGULAR_MOTION_RESTITUTION** = ``17``

极限内旋转的恢复量。

.. _class_PhysicsServer3D_constant_SLIDER_JOINT_ANGULAR_MOTION_DAMPING:

.. rst-class:: classref-enumeration-constant

:ref:`SliderJointParam<enum_PhysicsServer3D_SliderJointParam>` **SLIDER_JOINT_ANGULAR_MOTION_DAMPING** = ``18``

极限内旋转的阻尼量。

.. _class_PhysicsServer3D_constant_SLIDER_JOINT_ANGULAR_ORTHOGONAL_SOFTNESS:

.. rst-class:: classref-enumeration-constant

:ref:`SliderJointParam<enum_PhysicsServer3D_SliderJointParam>` **SLIDER_JOINT_ANGULAR_ORTHOGONAL_SOFTNESS** = ``19``

应用于垂直于滑块的轴上的所有旋转的因子。

.. _class_PhysicsServer3D_constant_SLIDER_JOINT_ANGULAR_ORTHOGONAL_RESTITUTION:

.. rst-class:: classref-enumeration-constant

:ref:`SliderJointParam<enum_PhysicsServer3D_SliderJointParam>` **SLIDER_JOINT_ANGULAR_ORTHOGONAL_RESTITUTION** = ``20``

垂直于滑块的轴上的旋转恢复量。

.. _class_PhysicsServer3D_constant_SLIDER_JOINT_ANGULAR_ORTHOGONAL_DAMPING:

.. rst-class:: classref-enumeration-constant

:ref:`SliderJointParam<enum_PhysicsServer3D_SliderJointParam>` **SLIDER_JOINT_ANGULAR_ORTHOGONAL_DAMPING** = ``21``

垂直于滑块的轴上的旋转阻尼量。

.. _class_PhysicsServer3D_constant_SLIDER_JOINT_MAX:

.. rst-class:: classref-enumeration-constant

:ref:`SliderJointParam<enum_PhysicsServer3D_SliderJointParam>` **SLIDER_JOINT_MAX** = ``22``

代表 :ref:`SliderJointParam<enum_PhysicsServer3D_SliderJointParam>` 枚举的大小。

.. rst-class:: classref-item-separator

----

.. _enum_PhysicsServer3D_ConeTwistJointParam:

.. rst-class:: classref-enumeration

enum **ConeTwistJointParam**: :ref:`🔗<enum_PhysicsServer3D_ConeTwistJointParam>`

.. _class_PhysicsServer3D_constant_CONE_TWIST_JOINT_SWING_SPAN:

.. rst-class:: classref-enumeration-constant

:ref:`ConeTwistJointParam<enum_PhysicsServer3D_ConeTwistJointParam>` **CONE_TWIST_JOINT_SWING_SPAN** = ``0``

摆动是围绕垂直于扭转轴的轴线，从一边到另一边的旋转。

摆动跨度定义了沿摆动轴旋转多少不会得到校正。

可以被定义为 :ref:`ConeTwistJoint3D<class_ConeTwistJoint3D>` 中的松动。

如果低于 0.05，该行为将被锁定。

.. _class_PhysicsServer3D_constant_CONE_TWIST_JOINT_TWIST_SPAN:

.. rst-class:: classref-enumeration-constant

:ref:`ConeTwistJointParam<enum_PhysicsServer3D_ConeTwistJointParam>` **CONE_TWIST_JOINT_TWIST_SPAN** = ``1``

扭转是绕扭转轴的旋转，此值定义了关节可以扭转多远。

如果低于 0.05，则扭转被锁定。

.. _class_PhysicsServer3D_constant_CONE_TWIST_JOINT_BIAS:

.. rst-class:: classref-enumeration-constant

:ref:`ConeTwistJointParam<enum_PhysicsServer3D_ConeTwistJointParam>` **CONE_TWIST_JOINT_BIAS** = ``2``

摆动或扭转的速度。

越高，速度越快。

.. _class_PhysicsServer3D_constant_CONE_TWIST_JOINT_SOFTNESS:

.. rst-class:: classref-enumeration-constant

:ref:`ConeTwistJointParam<enum_PhysicsServer3D_ConeTwistJointParam>` **CONE_TWIST_JOINT_SOFTNESS** = ``3``

Joint3D 的扭曲弹性，如果太低，就需要更大的力才能扭曲关节。

.. _class_PhysicsServer3D_constant_CONE_TWIST_JOINT_RELAXATION:

.. rst-class:: classref-enumeration-constant

:ref:`ConeTwistJointParam<enum_PhysicsServer3D_ConeTwistJointParam>` **CONE_TWIST_JOINT_RELAXATION** = ``4``

定义两侧的摆动速度和扭转速度差异同步的速度。

.. rst-class:: classref-item-separator

----

.. _enum_PhysicsServer3D_G6DOFJointAxisParam:

.. rst-class:: classref-enumeration

enum **G6DOFJointAxisParam**: :ref:`🔗<enum_PhysicsServer3D_G6DOFJointAxisParam>`

.. _class_PhysicsServer3D_constant_G6DOF_JOINT_LINEAR_LOWER_LIMIT:

.. rst-class:: classref-enumeration-constant

:ref:`G6DOFJointAxisParam<enum_PhysicsServer3D_G6DOFJointAxisParam>` **G6DOF_JOINT_LINEAR_LOWER_LIMIT** = ``0``

轴心点的轴之间的最小差异。

.. _class_PhysicsServer3D_constant_G6DOF_JOINT_LINEAR_UPPER_LIMIT:

.. rst-class:: classref-enumeration-constant

:ref:`G6DOFJointAxisParam<enum_PhysicsServer3D_G6DOFJointAxisParam>` **G6DOF_JOINT_LINEAR_UPPER_LIMIT** = ``1``

轴心点的轴之间的最大差异。

.. _class_PhysicsServer3D_constant_G6DOF_JOINT_LINEAR_LIMIT_SOFTNESS:

.. rst-class:: classref-enumeration-constant

:ref:`G6DOFJointAxisParam<enum_PhysicsServer3D_G6DOFJointAxisParam>` **G6DOF_JOINT_LINEAR_LIMIT_SOFTNESS** = ``2``

应用于跨轴移动的因子。越低，运动越慢。

.. _class_PhysicsServer3D_constant_G6DOF_JOINT_LINEAR_RESTITUTION:

.. rst-class:: classref-enumeration-constant

:ref:`G6DOFJointAxisParam<enum_PhysicsServer3D_G6DOFJointAxisParam>` **G6DOF_JOINT_LINEAR_RESTITUTION** = ``3``

轴运动的恢复量。速度越低，能量损失越多。

.. _class_PhysicsServer3D_constant_G6DOF_JOINT_LINEAR_DAMPING:

.. rst-class:: classref-enumeration-constant

:ref:`G6DOFJointAxisParam<enum_PhysicsServer3D_G6DOFJointAxisParam>` **G6DOF_JOINT_LINEAR_DAMPING** = ``4``

发生在跨轴线性运动的阻尼量。

.. _class_PhysicsServer3D_constant_G6DOF_JOINT_LINEAR_MOTOR_TARGET_VELOCITY:

.. rst-class:: classref-enumeration-constant

:ref:`G6DOFJointAxisParam<enum_PhysicsServer3D_G6DOFJointAxisParam>` **G6DOF_JOINT_LINEAR_MOTOR_TARGET_VELOCITY** = ``5``

关节的线性马达试图达到的速度。

.. _class_PhysicsServer3D_constant_G6DOF_JOINT_LINEAR_MOTOR_FORCE_LIMIT:

.. rst-class:: classref-enumeration-constant

:ref:`G6DOFJointAxisParam<enum_PhysicsServer3D_G6DOFJointAxisParam>` **G6DOF_JOINT_LINEAR_MOTOR_FORCE_LIMIT** = ``6``

线性马达在试图达到目标速度时可以施加的最大力。

.. _class_PhysicsServer3D_constant_G6DOF_JOINT_LINEAR_SPRING_STIFFNESS:

.. rst-class:: classref-enumeration-constant

:ref:`G6DOFJointAxisParam<enum_PhysicsServer3D_G6DOFJointAxisParam>` **G6DOF_JOINT_LINEAR_SPRING_STIFFNESS** = ``7``

.. container:: contribute

	目前没有这个枚举的描述。请帮我们\ :ref:`贡献一个 <doc_updating_the_class_reference>`\ ！



.. _class_PhysicsServer3D_constant_G6DOF_JOINT_LINEAR_SPRING_DAMPING:

.. rst-class:: classref-enumeration-constant

:ref:`G6DOFJointAxisParam<enum_PhysicsServer3D_G6DOFJointAxisParam>` **G6DOF_JOINT_LINEAR_SPRING_DAMPING** = ``8``

.. container:: contribute

	目前没有这个枚举的描述。请帮我们\ :ref:`贡献一个 <doc_updating_the_class_reference>`\ ！



.. _class_PhysicsServer3D_constant_G6DOF_JOINT_LINEAR_SPRING_EQUILIBRIUM_POINT:

.. rst-class:: classref-enumeration-constant

:ref:`G6DOFJointAxisParam<enum_PhysicsServer3D_G6DOFJointAxisParam>` **G6DOF_JOINT_LINEAR_SPRING_EQUILIBRIUM_POINT** = ``9``

.. container:: contribute

	目前没有这个枚举的描述。请帮我们\ :ref:`贡献一个 <doc_updating_the_class_reference>`\ ！



.. _class_PhysicsServer3D_constant_G6DOF_JOINT_ANGULAR_LOWER_LIMIT:

.. rst-class:: classref-enumeration-constant

:ref:`G6DOFJointAxisParam<enum_PhysicsServer3D_G6DOFJointAxisParam>` **G6DOF_JOINT_ANGULAR_LOWER_LIMIT** = ``10``

负方向的最小旋转，以脱离和绕轴旋转。

.. _class_PhysicsServer3D_constant_G6DOF_JOINT_ANGULAR_UPPER_LIMIT:

.. rst-class:: classref-enumeration-constant

:ref:`G6DOFJointAxisParam<enum_PhysicsServer3D_G6DOFJointAxisParam>` **G6DOF_JOINT_ANGULAR_UPPER_LIMIT** = ``11``

正方向的最小旋转，以挣脱和绕轴旋转。

.. _class_PhysicsServer3D_constant_G6DOF_JOINT_ANGULAR_LIMIT_SOFTNESS:

.. rst-class:: classref-enumeration-constant

:ref:`G6DOFJointAxisParam<enum_PhysicsServer3D_G6DOFJointAxisParam>` **G6DOF_JOINT_ANGULAR_LIMIT_SOFTNESS** = ``12``

乘以所有轴旋转的因子。

.. _class_PhysicsServer3D_constant_G6DOF_JOINT_ANGULAR_DAMPING:

.. rst-class:: classref-enumeration-constant

:ref:`G6DOFJointAxisParam<enum_PhysicsServer3D_G6DOFJointAxisParam>` **G6DOF_JOINT_ANGULAR_DAMPING** = ``13``

跨该轴的旋转阻尼量。值越低，发生的阻尼就越多。

.. _class_PhysicsServer3D_constant_G6DOF_JOINT_ANGULAR_RESTITUTION:

.. rst-class:: classref-enumeration-constant

:ref:`G6DOFJointAxisParam<enum_PhysicsServer3D_G6DOFJointAxisParam>` **G6DOF_JOINT_ANGULAR_RESTITUTION** = ``14``

在各轴上的旋转恢复量。值越低，发生的恢复量越大。

.. _class_PhysicsServer3D_constant_G6DOF_JOINT_ANGULAR_FORCE_LIMIT:

.. rst-class:: classref-enumeration-constant

:ref:`G6DOFJointAxisParam<enum_PhysicsServer3D_G6DOFJointAxisParam>` **G6DOF_JOINT_ANGULAR_FORCE_LIMIT** = ``15``

围绕 Z 轴旋转时，可能发生的最大力。

.. _class_PhysicsServer3D_constant_G6DOF_JOINT_ANGULAR_ERP:

.. rst-class:: classref-enumeration-constant

:ref:`G6DOFJointAxisParam<enum_PhysicsServer3D_G6DOFJointAxisParam>` **G6DOF_JOINT_ANGULAR_ERP** = ``16``

当校正轴旋转中的极限交叉时，该误差容限因子定义了校正的减慢程度。越低越慢。

.. _class_PhysicsServer3D_constant_G6DOF_JOINT_ANGULAR_MOTOR_TARGET_VELOCITY:

.. rst-class:: classref-enumeration-constant

:ref:`G6DOFJointAxisParam<enum_PhysicsServer3D_G6DOFJointAxisParam>` **G6DOF_JOINT_ANGULAR_MOTOR_TARGET_VELOCITY** = ``17``

轴上电机的目标速度。

.. _class_PhysicsServer3D_constant_G6DOF_JOINT_ANGULAR_MOTOR_FORCE_LIMIT:

.. rst-class:: classref-enumeration-constant

:ref:`G6DOFJointAxisParam<enum_PhysicsServer3D_G6DOFJointAxisParam>` **G6DOF_JOINT_ANGULAR_MOTOR_FORCE_LIMIT** = ``18``

马达在轴上的最大加速度。

.. _class_PhysicsServer3D_constant_G6DOF_JOINT_ANGULAR_SPRING_STIFFNESS:

.. rst-class:: classref-enumeration-constant

:ref:`G6DOFJointAxisParam<enum_PhysicsServer3D_G6DOFJointAxisParam>` **G6DOF_JOINT_ANGULAR_SPRING_STIFFNESS** = ``19``

.. container:: contribute

	目前没有这个枚举的描述。请帮我们\ :ref:`贡献一个 <doc_updating_the_class_reference>`\ ！



.. _class_PhysicsServer3D_constant_G6DOF_JOINT_ANGULAR_SPRING_DAMPING:

.. rst-class:: classref-enumeration-constant

:ref:`G6DOFJointAxisParam<enum_PhysicsServer3D_G6DOFJointAxisParam>` **G6DOF_JOINT_ANGULAR_SPRING_DAMPING** = ``20``

.. container:: contribute

	目前没有这个枚举的描述。请帮我们\ :ref:`贡献一个 <doc_updating_the_class_reference>`\ ！



.. _class_PhysicsServer3D_constant_G6DOF_JOINT_ANGULAR_SPRING_EQUILIBRIUM_POINT:

.. rst-class:: classref-enumeration-constant

:ref:`G6DOFJointAxisParam<enum_PhysicsServer3D_G6DOFJointAxisParam>` **G6DOF_JOINT_ANGULAR_SPRING_EQUILIBRIUM_POINT** = ``21``

.. container:: contribute

	目前没有这个枚举的描述。请帮我们\ :ref:`贡献一个 <doc_updating_the_class_reference>`\ ！



.. _class_PhysicsServer3D_constant_G6DOF_JOINT_MAX:

.. rst-class:: classref-enumeration-constant

:ref:`G6DOFJointAxisParam<enum_PhysicsServer3D_G6DOFJointAxisParam>` **G6DOF_JOINT_MAX** = ``22``

代表 :ref:`G6DOFJointAxisParam<enum_PhysicsServer3D_G6DOFJointAxisParam>` 枚举的大小。

.. rst-class:: classref-item-separator

----

.. _enum_PhysicsServer3D_G6DOFJointAxisFlag:

.. rst-class:: classref-enumeration

enum **G6DOFJointAxisFlag**: :ref:`🔗<enum_PhysicsServer3D_G6DOFJointAxisFlag>`

.. _class_PhysicsServer3D_constant_G6DOF_JOINT_FLAG_ENABLE_LINEAR_LIMIT:

.. rst-class:: classref-enumeration-constant

:ref:`G6DOFJointAxisFlag<enum_PhysicsServer3D_G6DOFJointAxisFlag>` **G6DOF_JOINT_FLAG_ENABLE_LINEAR_LIMIT** = ``0``

设置时，可以在给定的范围内做线性运动。

.. _class_PhysicsServer3D_constant_G6DOF_JOINT_FLAG_ENABLE_ANGULAR_LIMIT:

.. rst-class:: classref-enumeration-constant

:ref:`G6DOFJointAxisFlag<enum_PhysicsServer3D_G6DOFJointAxisFlag>` **G6DOF_JOINT_FLAG_ENABLE_ANGULAR_LIMIT** = ``1``

设置时，可以做旋转运动。

.. _class_PhysicsServer3D_constant_G6DOF_JOINT_FLAG_ENABLE_ANGULAR_SPRING:

.. rst-class:: classref-enumeration-constant

:ref:`G6DOFJointAxisFlag<enum_PhysicsServer3D_G6DOFJointAxisFlag>` **G6DOF_JOINT_FLAG_ENABLE_ANGULAR_SPRING** = ``2``

.. container:: contribute

	目前没有这个枚举的描述。请帮我们\ :ref:`贡献一个 <doc_updating_the_class_reference>`\ ！



.. _class_PhysicsServer3D_constant_G6DOF_JOINT_FLAG_ENABLE_LINEAR_SPRING:

.. rst-class:: classref-enumeration-constant

:ref:`G6DOFJointAxisFlag<enum_PhysicsServer3D_G6DOFJointAxisFlag>` **G6DOF_JOINT_FLAG_ENABLE_LINEAR_SPRING** = ``3``

.. container:: contribute

	目前没有这个枚举的描述。请帮我们\ :ref:`贡献一个 <doc_updating_the_class_reference>`\ ！



.. _class_PhysicsServer3D_constant_G6DOF_JOINT_FLAG_ENABLE_MOTOR:

.. rst-class:: classref-enumeration-constant

:ref:`G6DOFJointAxisFlag<enum_PhysicsServer3D_G6DOFJointAxisFlag>` **G6DOF_JOINT_FLAG_ENABLE_MOTOR** = ``4``

设置时，存在跨这些轴的旋转马达。

.. _class_PhysicsServer3D_constant_G6DOF_JOINT_FLAG_ENABLE_LINEAR_MOTOR:

.. rst-class:: classref-enumeration-constant

:ref:`G6DOFJointAxisFlag<enum_PhysicsServer3D_G6DOFJointAxisFlag>` **G6DOF_JOINT_FLAG_ENABLE_LINEAR_MOTOR** = ``5``

设置时，存在跨这些轴的线性马达，以指定的速度为目标。

.. _class_PhysicsServer3D_constant_G6DOF_JOINT_FLAG_MAX:

.. rst-class:: classref-enumeration-constant

:ref:`G6DOFJointAxisFlag<enum_PhysicsServer3D_G6DOFJointAxisFlag>` **G6DOF_JOINT_FLAG_MAX** = ``6``

代表 :ref:`G6DOFJointAxisFlag<enum_PhysicsServer3D_G6DOFJointAxisFlag>` 枚举的大小。

.. rst-class:: classref-item-separator

----

.. _enum_PhysicsServer3D_ShapeType:

.. rst-class:: classref-enumeration

enum **ShapeType**: :ref:`🔗<enum_PhysicsServer3D_ShapeType>`

.. _class_PhysicsServer3D_constant_SHAPE_WORLD_BOUNDARY:

.. rst-class:: classref-enumeration-constant

:ref:`ShapeType<enum_PhysicsServer3D_ShapeType>` **SHAPE_WORLD_BOUNDARY** = ``0``

该 :ref:`Shape3D<class_Shape3D>` 为 :ref:`WorldBoundaryShape3D<class_WorldBoundaryShape3D>`\ 。

.. _class_PhysicsServer3D_constant_SHAPE_SEPARATION_RAY:

.. rst-class:: classref-enumeration-constant

:ref:`ShapeType<enum_PhysicsServer3D_ShapeType>` **SHAPE_SEPARATION_RAY** = ``1``

该 :ref:`Shape3D<class_Shape3D>` 为 :ref:`SeparationRayShape3D<class_SeparationRayShape3D>`\ 。

.. _class_PhysicsServer3D_constant_SHAPE_SPHERE:

.. rst-class:: classref-enumeration-constant

:ref:`ShapeType<enum_PhysicsServer3D_ShapeType>` **SHAPE_SPHERE** = ``2``

该 :ref:`Shape3D<class_Shape3D>` 为 :ref:`SphereShape3D<class_SphereShape3D>`\ 。

.. _class_PhysicsServer3D_constant_SHAPE_BOX:

.. rst-class:: classref-enumeration-constant

:ref:`ShapeType<enum_PhysicsServer3D_ShapeType>` **SHAPE_BOX** = ``3``

该 :ref:`Shape3D<class_Shape3D>` 为 :ref:`BoxShape3D<class_BoxShape3D>`\ 。

.. _class_PhysicsServer3D_constant_SHAPE_CAPSULE:

.. rst-class:: classref-enumeration-constant

:ref:`ShapeType<enum_PhysicsServer3D_ShapeType>` **SHAPE_CAPSULE** = ``4``

该 :ref:`Shape3D<class_Shape3D>` 为 :ref:`CapsuleShape3D<class_CapsuleShape3D>`\ 。

.. _class_PhysicsServer3D_constant_SHAPE_CYLINDER:

.. rst-class:: classref-enumeration-constant

:ref:`ShapeType<enum_PhysicsServer3D_ShapeType>` **SHAPE_CYLINDER** = ``5``

该 :ref:`Shape3D<class_Shape3D>` 为 :ref:`CylinderShape3D<class_CylinderShape3D>`\ 。

.. _class_PhysicsServer3D_constant_SHAPE_CONVEX_POLYGON:

.. rst-class:: classref-enumeration-constant

:ref:`ShapeType<enum_PhysicsServer3D_ShapeType>` **SHAPE_CONVEX_POLYGON** = ``6``

该 :ref:`Shape3D<class_Shape3D>` 为 :ref:`ConvexPolygonShape3D<class_ConvexPolygonShape3D>`\ 。

.. _class_PhysicsServer3D_constant_SHAPE_CONCAVE_POLYGON:

.. rst-class:: classref-enumeration-constant

:ref:`ShapeType<enum_PhysicsServer3D_ShapeType>` **SHAPE_CONCAVE_POLYGON** = ``7``

该 :ref:`Shape3D<class_Shape3D>` 为 :ref:`ConcavePolygonShape3D<class_ConcavePolygonShape3D>`\ 。

.. _class_PhysicsServer3D_constant_SHAPE_HEIGHTMAP:

.. rst-class:: classref-enumeration-constant

:ref:`ShapeType<enum_PhysicsServer3D_ShapeType>` **SHAPE_HEIGHTMAP** = ``8``

该 :ref:`Shape3D<class_Shape3D>` 为 :ref:`HeightMapShape3D<class_HeightMapShape3D>`\ 。

.. _class_PhysicsServer3D_constant_SHAPE_SOFT_BODY:

.. rst-class:: classref-enumeration-constant

:ref:`ShapeType<enum_PhysicsServer3D_ShapeType>` **SHAPE_SOFT_BODY** = ``9``

该 :ref:`Shape3D<class_Shape3D>` 是在柔体内部使用的。尝试创建这种形状会导致出错。

.. _class_PhysicsServer3D_constant_SHAPE_CUSTOM:

.. rst-class:: classref-enumeration-constant

:ref:`ShapeType<enum_PhysicsServer3D_ShapeType>` **SHAPE_CUSTOM** = ``10``

引擎内部会使用这个常量。任何试图创建这种形状的行为都会导致错误。

.. rst-class:: classref-item-separator

----

.. _enum_PhysicsServer3D_AreaParameter:

.. rst-class:: classref-enumeration

enum **AreaParameter**: :ref:`🔗<enum_PhysicsServer3D_AreaParameter>`

.. _class_PhysicsServer3D_constant_AREA_PARAM_GRAVITY_OVERRIDE_MODE:

.. rst-class:: classref-enumeration-constant

:ref:`AreaParameter<enum_PhysicsServer3D_AreaParameter>` **AREA_PARAM_GRAVITY_OVERRIDE_MODE** = ``0``

常量，用于在一个区域中设置/获取重力覆盖模式。有关可能的值，请参阅 :ref:`AreaSpaceOverrideMode<enum_PhysicsServer3D_AreaSpaceOverrideMode>`\ 。

.. _class_PhysicsServer3D_constant_AREA_PARAM_GRAVITY:

.. rst-class:: classref-enumeration-constant

:ref:`AreaParameter<enum_PhysicsServer3D_AreaParameter>` **AREA_PARAM_GRAVITY** = ``1``

常量，用于设置/获取区域中的重力强度。

.. _class_PhysicsServer3D_constant_AREA_PARAM_GRAVITY_VECTOR:

.. rst-class:: classref-enumeration-constant

:ref:`AreaParameter<enum_PhysicsServer3D_AreaParameter>` **AREA_PARAM_GRAVITY_VECTOR** = ``2``

常量，用于设置/获取区域中的重力向量/中心。

.. _class_PhysicsServer3D_constant_AREA_PARAM_GRAVITY_IS_POINT:

.. rst-class:: classref-enumeration-constant

:ref:`AreaParameter<enum_PhysicsServer3D_AreaParameter>` **AREA_PARAM_GRAVITY_IS_POINT** = ``3``

常量，用于设置/获取区域中的重力向量是方向，还是中心点。

.. _class_PhysicsServer3D_constant_AREA_PARAM_GRAVITY_POINT_UNIT_DISTANCE:

.. rst-class:: classref-enumeration-constant

:ref:`AreaParameter<enum_PhysicsServer3D_AreaParameter>` **AREA_PARAM_GRAVITY_POINT_UNIT_DISTANCE** = ``4``

常量，用于设置/获取重力强度等于 :ref:`AREA_PARAM_GRAVITY<class_PhysicsServer3D_constant_AREA_PARAM_GRAVITY>` 控制的重力的距离。例如，在半径为 100 米且表面重力为 4.0 m/s² 的行星上，将重力设置为 4.0，并将单位距离设置为 100.0。重力会根据平方反比定律衰减，因此在该示例中，重力在距中心 200 米处将为 1.0 m/s²（距离的两倍，重力的 1/4），在距中心 50 米处为 16.0 m/s²（距离的一半，重力的 4 倍），依此类推。

仅当单位距离为正数时，上述情况才成立。当该属性被设置为 0.0 时，无论距离如何，重力都将保持不变。

.. _class_PhysicsServer3D_constant_AREA_PARAM_LINEAR_DAMP_OVERRIDE_MODE:

.. rst-class:: classref-enumeration-constant

:ref:`AreaParameter<enum_PhysicsServer3D_AreaParameter>` **AREA_PARAM_LINEAR_DAMP_OVERRIDE_MODE** = ``5``

常量，用于在一个区域中设置/获取线性阻尼覆盖模式。有关可能的值，请参阅 :ref:`AreaSpaceOverrideMode<enum_PhysicsServer3D_AreaSpaceOverrideMode>`\ 。

.. _class_PhysicsServer3D_constant_AREA_PARAM_LINEAR_DAMP:

.. rst-class:: classref-enumeration-constant

:ref:`AreaParameter<enum_PhysicsServer3D_AreaParameter>` **AREA_PARAM_LINEAR_DAMP** = ``6``

常数，用于设置/获取区域的线性阻尼系数。

.. _class_PhysicsServer3D_constant_AREA_PARAM_ANGULAR_DAMP_OVERRIDE_MODE:

.. rst-class:: classref-enumeration-constant

:ref:`AreaParameter<enum_PhysicsServer3D_AreaParameter>` **AREA_PARAM_ANGULAR_DAMP_OVERRIDE_MODE** = ``7``

常量，用于在一个区域中设置/获取角度阻尼覆盖模式。有关可能的值，请参阅 :ref:`AreaSpaceOverrideMode<enum_PhysicsServer3D_AreaSpaceOverrideMode>`\ 。

.. _class_PhysicsServer3D_constant_AREA_PARAM_ANGULAR_DAMP:

.. rst-class:: classref-enumeration-constant

:ref:`AreaParameter<enum_PhysicsServer3D_AreaParameter>` **AREA_PARAM_ANGULAR_DAMP** = ``8``

常数，用于设置/获取区域的角度阻尼系数。

.. _class_PhysicsServer3D_constant_AREA_PARAM_PRIORITY:

.. rst-class:: classref-enumeration-constant

:ref:`AreaParameter<enum_PhysicsServer3D_AreaParameter>` **AREA_PARAM_PRIORITY** = ``9``

常量，用于设置/获取区域的优先级（处理顺序）。

.. _class_PhysicsServer3D_constant_AREA_PARAM_WIND_FORCE_MAGNITUDE:

.. rst-class:: classref-enumeration-constant

:ref:`AreaParameter<enum_PhysicsServer3D_AreaParameter>` **AREA_PARAM_WIND_FORCE_MAGNITUDE** = ``10``

常量，用于设置/获取特定于某个区域的风力大小。风力仅施加于 :ref:`SoftBody3D<class_SoftBody3D>` 节点。其他物理体目前不会受到风的影响。

.. _class_PhysicsServer3D_constant_AREA_PARAM_WIND_SOURCE:

.. rst-class:: classref-enumeration-constant

:ref:`AreaParameter<enum_PhysicsServer3D_AreaParameter>` **AREA_PARAM_WIND_SOURCE** = ``11``

常量，用于设置/获取 3D 向量，该向量指定区域特定的风吹来的原点。

.. _class_PhysicsServer3D_constant_AREA_PARAM_WIND_DIRECTION:

.. rst-class:: classref-enumeration-constant

:ref:`AreaParameter<enum_PhysicsServer3D_AreaParameter>` **AREA_PARAM_WIND_DIRECTION** = ``12``

常量，用于设置/获取 3D 向量，该向量指定区域特定的风吹的方向。

.. _class_PhysicsServer3D_constant_AREA_PARAM_WIND_ATTENUATION_FACTOR:

.. rst-class:: classref-enumeration-constant

:ref:`AreaParameter<enum_PhysicsServer3D_AreaParameter>` **AREA_PARAM_WIND_ATTENUATION_FACTOR** = ``13``

常量，用于设置/获取风力随距其原点的距离而减小的指数速率。

.. rst-class:: classref-item-separator

----

.. _enum_PhysicsServer3D_AreaSpaceOverrideMode:

.. rst-class:: classref-enumeration

enum **AreaSpaceOverrideMode**: :ref:`🔗<enum_PhysicsServer3D_AreaSpaceOverrideMode>`

.. _class_PhysicsServer3D_constant_AREA_SPACE_OVERRIDE_DISABLED:

.. rst-class:: classref-enumeration-constant

:ref:`AreaSpaceOverrideMode<enum_PhysicsServer3D_AreaSpaceOverrideMode>` **AREA_SPACE_OVERRIDE_DISABLED** = ``0``

该区域不影响重力/阻尼。这些区域的存在通常只是为了检测碰撞、以及物体是否进入或离开它们。

.. _class_PhysicsServer3D_constant_AREA_SPACE_OVERRIDE_COMBINE:

.. rst-class:: classref-enumeration-constant

:ref:`AreaSpaceOverrideMode<enum_PhysicsServer3D_AreaSpaceOverrideMode>` **AREA_SPACE_OVERRIDE_COMBINE** = ``1``

该区域将其重力/阻尼值加到目前已经计算出的结果上。这样一来，许多重叠的区域可以结合它们的物理运算来创建有趣的效果。

.. _class_PhysicsServer3D_constant_AREA_SPACE_OVERRIDE_COMBINE_REPLACE:

.. rst-class:: classref-enumeration-constant

:ref:`AreaSpaceOverrideMode<enum_PhysicsServer3D_AreaSpaceOverrideMode>` **AREA_SPACE_OVERRIDE_COMBINE_REPLACE** = ``2``

该区域将其重力/阻尼值加到目前已经计算出的结果上。然后停止考虑其余区域，甚至是默认区域。

.. _class_PhysicsServer3D_constant_AREA_SPACE_OVERRIDE_REPLACE:

.. rst-class:: classref-enumeration-constant

:ref:`AreaSpaceOverrideMode<enum_PhysicsServer3D_AreaSpaceOverrideMode>` **AREA_SPACE_OVERRIDE_REPLACE** = ``3``

该区域将替换所有重力/阻尼，甚至是默认值，并停止考虑其余区域。

.. _class_PhysicsServer3D_constant_AREA_SPACE_OVERRIDE_REPLACE_COMBINE:

.. rst-class:: classref-enumeration-constant

:ref:`AreaSpaceOverrideMode<enum_PhysicsServer3D_AreaSpaceOverrideMode>` **AREA_SPACE_OVERRIDE_REPLACE_COMBINE** = ``4``

该区域将替换目前已经计算出的任何重力/阻尼，但仍将继续计算其余区域，直到默认区域。

.. rst-class:: classref-item-separator

----

.. _enum_PhysicsServer3D_BodyMode:

.. rst-class:: classref-enumeration

enum **BodyMode**: :ref:`🔗<enum_PhysicsServer3D_BodyMode>`

.. _class_PhysicsServer3D_constant_BODY_MODE_STATIC:

.. rst-class:: classref-enumeration-constant

:ref:`BodyMode<enum_PhysicsServer3D_BodyMode>` **BODY_MODE_STATIC** = ``0``

常量，用于静态物体。在这种模式下，物体只能由用户代码移动，移动时不会与路径上的其他物体发生碰撞。

.. _class_PhysicsServer3D_constant_BODY_MODE_KINEMATIC:

.. rst-class:: classref-enumeration-constant

:ref:`BodyMode<enum_PhysicsServer3D_BodyMode>` **BODY_MODE_KINEMATIC** = ``1``

常量，用于运动学物体。在这种模式下，物体只能由用户代码移动，会与路径上的其他物体发生碰撞。

.. _class_PhysicsServer3D_constant_BODY_MODE_RIGID:

.. rst-class:: classref-enumeration-constant

:ref:`BodyMode<enum_PhysicsServer3D_BodyMode>` **BODY_MODE_RIGID** = ``2``

常量，用于刚体。在这种模式下，物体可以被其他物体推动，能够对其施加力。

.. _class_PhysicsServer3D_constant_BODY_MODE_RIGID_LINEAR:

.. rst-class:: classref-enumeration-constant

:ref:`BodyMode<enum_PhysicsServer3D_BodyMode>` **BODY_MODE_RIGID_LINEAR** = ``3``

常量，用于线性刚体。在这种模式下，物体不能旋转，只有线速度受外力影响。

.. rst-class:: classref-item-separator

----

.. _enum_PhysicsServer3D_BodyParameter:

.. rst-class:: classref-enumeration

enum **BodyParameter**: :ref:`🔗<enum_PhysicsServer3D_BodyParameter>`

.. _class_PhysicsServer3D_constant_BODY_PARAM_BOUNCE:

.. rst-class:: classref-enumeration-constant

:ref:`BodyParameter<enum_PhysicsServer3D_BodyParameter>` **BODY_PARAM_BOUNCE** = ``0``

常量，用于设置/获取物体的反弹系数。

.. _class_PhysicsServer3D_constant_BODY_PARAM_FRICTION:

.. rst-class:: classref-enumeration-constant

:ref:`BodyParameter<enum_PhysicsServer3D_BodyParameter>` **BODY_PARAM_FRICTION** = ``1``

常量，用于设置/获取物体的摩擦力。

.. _class_PhysicsServer3D_constant_BODY_PARAM_MASS:

.. rst-class:: classref-enumeration-constant

:ref:`BodyParameter<enum_PhysicsServer3D_BodyParameter>` **BODY_PARAM_MASS** = ``2``

常量，用于设置/获取物体的质量。

.. _class_PhysicsServer3D_constant_BODY_PARAM_INERTIA:

.. rst-class:: classref-enumeration-constant

:ref:`BodyParameter<enum_PhysicsServer3D_BodyParameter>` **BODY_PARAM_INERTIA** = ``3``

常量，用于设置/获取物体的惯性。

.. _class_PhysicsServer3D_constant_BODY_PARAM_CENTER_OF_MASS:

.. rst-class:: classref-enumeration-constant

:ref:`BodyParameter<enum_PhysicsServer3D_BodyParameter>` **BODY_PARAM_CENTER_OF_MASS** = ``4``

常量，用于设置/获取物体的质心位置，使用该物体的局部坐标系。

.. _class_PhysicsServer3D_constant_BODY_PARAM_GRAVITY_SCALE:

.. rst-class:: classref-enumeration-constant

:ref:`BodyParameter<enum_PhysicsServer3D_BodyParameter>` **BODY_PARAM_GRAVITY_SCALE** = ``5``

常量，用于设置/获取物体的重力倍数。

.. _class_PhysicsServer3D_constant_BODY_PARAM_LINEAR_DAMP_MODE:

.. rst-class:: classref-enumeration-constant

:ref:`BodyParameter<enum_PhysicsServer3D_BodyParameter>` **BODY_PARAM_LINEAR_DAMP_MODE** = ``6``

常量，用于设置/获取物体的线性阻尼模式。可能的值见 :ref:`BodyDampMode<enum_PhysicsServer3D_BodyDampMode>`\ 。

.. _class_PhysicsServer3D_constant_BODY_PARAM_ANGULAR_DAMP_MODE:

.. rst-class:: classref-enumeration-constant

:ref:`BodyParameter<enum_PhysicsServer3D_BodyParameter>` **BODY_PARAM_ANGULAR_DAMP_MODE** = ``7``

常量，用于设置/获取物体的角度阻尼模式。可能的值见 :ref:`BodyDampMode<enum_PhysicsServer3D_BodyDampMode>`\ 。

.. _class_PhysicsServer3D_constant_BODY_PARAM_LINEAR_DAMP:

.. rst-class:: classref-enumeration-constant

:ref:`BodyParameter<enum_PhysicsServer3D_BodyParameter>` **BODY_PARAM_LINEAR_DAMP** = ``8``

常数，用于设置/获取物体的线性阻尼系数。

.. _class_PhysicsServer3D_constant_BODY_PARAM_ANGULAR_DAMP:

.. rst-class:: classref-enumeration-constant

:ref:`BodyParameter<enum_PhysicsServer3D_BodyParameter>` **BODY_PARAM_ANGULAR_DAMP** = ``9``

常数，用于设置/获取物体的角度阻尼系数。

.. _class_PhysicsServer3D_constant_BODY_PARAM_MAX:

.. rst-class:: classref-enumeration-constant

:ref:`BodyParameter<enum_PhysicsServer3D_BodyParameter>` **BODY_PARAM_MAX** = ``10``

代表 :ref:`BodyParameter<enum_PhysicsServer3D_BodyParameter>` 枚举的大小。

.. rst-class:: classref-item-separator

----

.. _enum_PhysicsServer3D_BodyDampMode:

.. rst-class:: classref-enumeration

enum **BodyDampMode**: :ref:`🔗<enum_PhysicsServer3D_BodyDampMode>`

.. _class_PhysicsServer3D_constant_BODY_DAMP_MODE_COMBINE:

.. rst-class:: classref-enumeration-constant

:ref:`BodyDampMode<enum_PhysicsServer3D_BodyDampMode>` **BODY_DAMP_MODE_COMBINE** = ``0``

物体的阻尼值将被加到区域中所设置的值或默认值上。

.. _class_PhysicsServer3D_constant_BODY_DAMP_MODE_REPLACE:

.. rst-class:: classref-enumeration-constant

:ref:`BodyDampMode<enum_PhysicsServer3D_BodyDampMode>` **BODY_DAMP_MODE_REPLACE** = ``1``

物体的阻尼值会替换区域中所设置的值或默认值。

.. rst-class:: classref-item-separator

----

.. _enum_PhysicsServer3D_BodyState:

.. rst-class:: classref-enumeration

enum **BodyState**: :ref:`🔗<enum_PhysicsServer3D_BodyState>`

.. _class_PhysicsServer3D_constant_BODY_STATE_TRANSFORM:

.. rst-class:: classref-enumeration-constant

:ref:`BodyState<enum_PhysicsServer3D_BodyState>` **BODY_STATE_TRANSFORM** = ``0``

常量，用于设置/获取物体的当前变换矩阵。

.. _class_PhysicsServer3D_constant_BODY_STATE_LINEAR_VELOCITY:

.. rst-class:: classref-enumeration-constant

:ref:`BodyState<enum_PhysicsServer3D_BodyState>` **BODY_STATE_LINEAR_VELOCITY** = ``1``

常量，用于设置/获取物体的当前线速度。

.. _class_PhysicsServer3D_constant_BODY_STATE_ANGULAR_VELOCITY:

.. rst-class:: classref-enumeration-constant

:ref:`BodyState<enum_PhysicsServer3D_BodyState>` **BODY_STATE_ANGULAR_VELOCITY** = ``2``

常量，用于设置/获取物体的当前角速度。

.. _class_PhysicsServer3D_constant_BODY_STATE_SLEEPING:

.. rst-class:: classref-enumeration-constant

:ref:`BodyState<enum_PhysicsServer3D_BodyState>` **BODY_STATE_SLEEPING** = ``3``

常量，用于使物体沉睡/唤醒，或得到它是否在沉睡。

.. _class_PhysicsServer3D_constant_BODY_STATE_CAN_SLEEP:

.. rst-class:: classref-enumeration-constant

:ref:`BodyState<enum_PhysicsServer3D_BodyState>` **BODY_STATE_CAN_SLEEP** = ``4``

常量，用于设置/获取物体是否可以休眠。

.. rst-class:: classref-item-separator

----

.. _enum_PhysicsServer3D_AreaBodyStatus:

.. rst-class:: classref-enumeration

enum **AreaBodyStatus**: :ref:`🔗<enum_PhysicsServer3D_AreaBodyStatus>`

.. _class_PhysicsServer3D_constant_AREA_BODY_ADDED:

.. rst-class:: classref-enumeration-constant

:ref:`AreaBodyStatus<enum_PhysicsServer3D_AreaBodyStatus>` **AREA_BODY_ADDED** = ``0``

当对象进入区域的任一形状时，区域回调函数接收的第一个参数值。

.. _class_PhysicsServer3D_constant_AREA_BODY_REMOVED:

.. rst-class:: classref-enumeration-constant

:ref:`AreaBodyStatus<enum_PhysicsServer3D_AreaBodyStatus>` **AREA_BODY_REMOVED** = ``1``

当对象退出区域的任一形状时，区域回调函数接收的第一个参数值。

.. rst-class:: classref-item-separator

----

.. _enum_PhysicsServer3D_ProcessInfo:

.. rst-class:: classref-enumeration

enum **ProcessInfo**: :ref:`🔗<enum_PhysicsServer3D_ProcessInfo>`

.. _class_PhysicsServer3D_constant_INFO_ACTIVE_OBJECTS:

.. rst-class:: classref-enumeration-constant

:ref:`ProcessInfo<enum_PhysicsServer3D_ProcessInfo>` **INFO_ACTIVE_OBJECTS** = ``0``

常量，用以获取未休眠的对象的数量。

.. _class_PhysicsServer3D_constant_INFO_COLLISION_PAIRS:

.. rst-class:: classref-enumeration-constant

:ref:`ProcessInfo<enum_PhysicsServer3D_ProcessInfo>` **INFO_COLLISION_PAIRS** = ``1``

常量，用以获取可能的碰撞数。

.. _class_PhysicsServer3D_constant_INFO_ISLAND_COUNT:

.. rst-class:: classref-enumeration-constant

:ref:`ProcessInfo<enum_PhysicsServer3D_ProcessInfo>` **INFO_ISLAND_COUNT** = ``2``

常量，用以获取可能发生碰撞的空间区块数。

.. rst-class:: classref-item-separator

----

.. _enum_PhysicsServer3D_SpaceParameter:

.. rst-class:: classref-enumeration

enum **SpaceParameter**: :ref:`🔗<enum_PhysicsServer3D_SpaceParameter>`

.. _class_PhysicsServer3D_constant_SPACE_PARAM_CONTACT_RECYCLE_RADIUS:

.. rst-class:: classref-enumeration-constant

:ref:`SpaceParameter<enum_PhysicsServer3D_SpaceParameter>` **SPACE_PARAM_CONTACT_RECYCLE_RADIUS** = ``0``

常量，用于设置/获取一对物体在其碰撞状态被重新计算之前的最大移动距离。

.. _class_PhysicsServer3D_constant_SPACE_PARAM_CONTACT_MAX_SEPARATION:

.. rst-class:: classref-enumeration-constant

:ref:`SpaceParameter<enum_PhysicsServer3D_SpaceParameter>` **SPACE_PARAM_CONTACT_MAX_SEPARATION** = ``1``

常量，用于设置/获取两个形状间的最大距离，超过该距离后它们将被视为分离，接触将被弃置。

.. _class_PhysicsServer3D_constant_SPACE_PARAM_CONTACT_MAX_ALLOWED_PENETRATION:

.. rst-class:: classref-enumeration-constant

:ref:`SpaceParameter<enum_PhysicsServer3D_SpaceParameter>` **SPACE_PARAM_CONTACT_MAX_ALLOWED_PENETRATION** = ``2``

常量，用于设置/获取两个形状互相穿透的最大距离，超过该距离后将视为碰撞。

.. _class_PhysicsServer3D_constant_SPACE_PARAM_CONTACT_DEFAULT_BIAS:

.. rst-class:: classref-enumeration-constant

:ref:`SpaceParameter<enum_PhysicsServer3D_SpaceParameter>` **SPACE_PARAM_CONTACT_DEFAULT_BIAS** = ``3``

常量，用于设置/获取所有物理接触的默认求解器偏差。求解器偏差是控制两个对象在重叠后“反弹”的程度的一个系数，以避免由于数值不精确而使它们处于该状态。

.. _class_PhysicsServer3D_constant_SPACE_PARAM_BODY_LINEAR_VELOCITY_SLEEP_THRESHOLD:

.. rst-class:: classref-enumeration-constant

:ref:`SpaceParameter<enum_PhysicsServer3D_SpaceParameter>` **SPACE_PARAM_BODY_LINEAR_VELOCITY_SLEEP_THRESHOLD** = ``4``

常量，用于设置/获取活跃的阈值线速度。一个被标记为线性速度和角速度都可能不活跃的物体将在给定的时间后进入睡眠状态。

.. _class_PhysicsServer3D_constant_SPACE_PARAM_BODY_ANGULAR_VELOCITY_SLEEP_THRESHOLD:

.. rst-class:: classref-enumeration-constant

:ref:`SpaceParameter<enum_PhysicsServer3D_SpaceParameter>` **SPACE_PARAM_BODY_ANGULAR_VELOCITY_SLEEP_THRESHOLD** = ``5``

常量，用于设置/获取活动的阈值角速度。一个被标记为线性和角速度都可能不活跃的物体，在给定的时间后将会进入睡眠状态。

.. _class_PhysicsServer3D_constant_SPACE_PARAM_BODY_TIME_TO_SLEEP:

.. rst-class:: classref-enumeration-constant

:ref:`SpaceParameter<enum_PhysicsServer3D_SpaceParameter>` **SPACE_PARAM_BODY_TIME_TO_SLEEP** = ``6``

常量，用于设置/获得最大的活动时间。一个被标记为线速度和角速度都可能不活动的物体，在这个时间之后将被置入睡眠状态。

.. _class_PhysicsServer3D_constant_SPACE_PARAM_SOLVER_ITERATIONS:

.. rst-class:: classref-enumeration-constant

:ref:`SpaceParameter<enum_PhysicsServer3D_SpaceParameter>` **SPACE_PARAM_SOLVER_ITERATIONS** = ``7``

常量，用于设置/获取接触和约束的求解器迭代次数。迭代次数越多，碰撞和约束就越准确。然而，更多的迭代需要更多的 CPU 能力，这会降低性能。

.. rst-class:: classref-item-separator

----

.. _enum_PhysicsServer3D_BodyAxis:

.. rst-class:: classref-enumeration

enum **BodyAxis**: :ref:`🔗<enum_PhysicsServer3D_BodyAxis>`

.. _class_PhysicsServer3D_constant_BODY_AXIS_LINEAR_X:

.. rst-class:: classref-enumeration-constant

:ref:`BodyAxis<enum_PhysicsServer3D_BodyAxis>` **BODY_AXIS_LINEAR_X** = ``1``

.. container:: contribute

	目前没有这个枚举的描述。请帮我们\ :ref:`贡献一个 <doc_updating_the_class_reference>`\ ！



.. _class_PhysicsServer3D_constant_BODY_AXIS_LINEAR_Y:

.. rst-class:: classref-enumeration-constant

:ref:`BodyAxis<enum_PhysicsServer3D_BodyAxis>` **BODY_AXIS_LINEAR_Y** = ``2``

.. container:: contribute

	目前没有这个枚举的描述。请帮我们\ :ref:`贡献一个 <doc_updating_the_class_reference>`\ ！



.. _class_PhysicsServer3D_constant_BODY_AXIS_LINEAR_Z:

.. rst-class:: classref-enumeration-constant

:ref:`BodyAxis<enum_PhysicsServer3D_BodyAxis>` **BODY_AXIS_LINEAR_Z** = ``4``

.. container:: contribute

	目前没有这个枚举的描述。请帮我们\ :ref:`贡献一个 <doc_updating_the_class_reference>`\ ！



.. _class_PhysicsServer3D_constant_BODY_AXIS_ANGULAR_X:

.. rst-class:: classref-enumeration-constant

:ref:`BodyAxis<enum_PhysicsServer3D_BodyAxis>` **BODY_AXIS_ANGULAR_X** = ``8``

.. container:: contribute

	目前没有这个枚举的描述。请帮我们\ :ref:`贡献一个 <doc_updating_the_class_reference>`\ ！



.. _class_PhysicsServer3D_constant_BODY_AXIS_ANGULAR_Y:

.. rst-class:: classref-enumeration-constant

:ref:`BodyAxis<enum_PhysicsServer3D_BodyAxis>` **BODY_AXIS_ANGULAR_Y** = ``16``

.. container:: contribute

	目前没有这个枚举的描述。请帮我们\ :ref:`贡献一个 <doc_updating_the_class_reference>`\ ！



.. _class_PhysicsServer3D_constant_BODY_AXIS_ANGULAR_Z:

.. rst-class:: classref-enumeration-constant

:ref:`BodyAxis<enum_PhysicsServer3D_BodyAxis>` **BODY_AXIS_ANGULAR_Z** = ``32``

.. container:: contribute

	目前没有这个枚举的描述。请帮我们\ :ref:`贡献一个 <doc_updating_the_class_reference>`\ ！



.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

方法说明
--------

.. _class_PhysicsServer3D_method_area_add_shape:

.. rst-class:: classref-method

|void| **area_add_shape**\ (\ area\: :ref:`RID<class_RID>`, shape\: :ref:`RID<class_RID>`, transform\: :ref:`Transform3D<class_Transform3D>` = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0), disabled\: :ref:`bool<class_bool>` = false\ ) :ref:`🔗<class_PhysicsServer3D_method_area_add_shape>`

向区域添加一个形状，以及一个变换矩阵。形状通常通过它们的索引来引用，因此你应该跟踪哪个形状具有给定的索引。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_area_attach_object_instance_id:

.. rst-class:: classref-method

|void| **area_attach_object_instance_id**\ (\ area\: :ref:`RID<class_RID>`, id\: :ref:`int<class_int>`\ ) :ref:`🔗<class_PhysicsServer3D_method_area_attach_object_instance_id>`

将区域分配给\ :ref:`Object<class_Object>`\ 的子类，因此它可以存在于节点树中。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_area_clear_shapes:

.. rst-class:: classref-method

|void| **area_clear_shapes**\ (\ area\: :ref:`RID<class_RID>`\ ) :ref:`🔗<class_PhysicsServer3D_method_area_clear_shapes>`

从一个区域移除所有形状。它不会删除形状，因此它们可以稍后重新分配。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_area_create:

.. rst-class:: classref-method

:ref:`RID<class_RID>` **area_create**\ (\ ) :ref:`🔗<class_PhysicsServer3D_method_area_create>`

Creates a 3D area object in the physics server, and returns the :ref:`RID<class_RID>` that identifies it. The default settings for the created area include a collision layer and mask set to ``1``, and ``monitorable`` set to ``false``.

Use :ref:`area_add_shape<class_PhysicsServer3D_method_area_add_shape>` to add shapes to it, use :ref:`area_set_transform<class_PhysicsServer3D_method_area_set_transform>` to set its transform, and use :ref:`area_set_space<class_PhysicsServer3D_method_area_set_space>` to add the area to a space. If you want the area to be detectable use :ref:`area_set_monitorable<class_PhysicsServer3D_method_area_set_monitorable>`.

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_area_get_collision_layer:

.. rst-class:: classref-method

:ref:`int<class_int>` **area_get_collision_layer**\ (\ area\: :ref:`RID<class_RID>`\ ) |const| :ref:`🔗<class_PhysicsServer3D_method_area_get_collision_layer>`

返回该区域所属的物理层。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_area_get_collision_mask:

.. rst-class:: classref-method

:ref:`int<class_int>` **area_get_collision_mask**\ (\ area\: :ref:`RID<class_RID>`\ ) |const| :ref:`🔗<class_PhysicsServer3D_method_area_get_collision_mask>`

返回该区域能够接触的物理层。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_area_get_object_instance_id:

.. rst-class:: classref-method

:ref:`int<class_int>` **area_get_object_instance_id**\ (\ area\: :ref:`RID<class_RID>`\ ) |const| :ref:`🔗<class_PhysicsServer3D_method_area_get_object_instance_id>`

获取区域分配给的对象的实例 ID。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_area_get_param:

.. rst-class:: classref-method

:ref:`Variant<class_Variant>` **area_get_param**\ (\ area\: :ref:`RID<class_RID>`, param\: :ref:`AreaParameter<enum_PhysicsServer3D_AreaParameter>`\ ) |const| :ref:`🔗<class_PhysicsServer3D_method_area_get_param>`

返回区域参数值。可用参数列表位于 :ref:`AreaParameter<enum_PhysicsServer3D_AreaParameter>` 常量上。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_area_get_shape:

.. rst-class:: classref-method

:ref:`RID<class_RID>` **area_get_shape**\ (\ area\: :ref:`RID<class_RID>`, shape_idx\: :ref:`int<class_int>`\ ) |const| :ref:`🔗<class_PhysicsServer3D_method_area_get_shape>`

返回区域的第 n 个形状的 :ref:`RID<class_RID>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_area_get_shape_count:

.. rst-class:: classref-method

:ref:`int<class_int>` **area_get_shape_count**\ (\ area\: :ref:`RID<class_RID>`\ ) |const| :ref:`🔗<class_PhysicsServer3D_method_area_get_shape_count>`

返回分配给区域的形状数量。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_area_get_shape_transform:

.. rst-class:: classref-method

:ref:`Transform3D<class_Transform3D>` **area_get_shape_transform**\ (\ area\: :ref:`RID<class_RID>`, shape_idx\: :ref:`int<class_int>`\ ) |const| :ref:`🔗<class_PhysicsServer3D_method_area_get_shape_transform>`

返回区域内形状的变换矩阵。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_area_get_space:

.. rst-class:: classref-method

:ref:`RID<class_RID>` **area_get_space**\ (\ area\: :ref:`RID<class_RID>`\ ) |const| :ref:`🔗<class_PhysicsServer3D_method_area_get_space>`

返回分配给该区域的空间。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_area_get_transform:

.. rst-class:: classref-method

:ref:`Transform3D<class_Transform3D>` **area_get_transform**\ (\ area\: :ref:`RID<class_RID>`\ ) |const| :ref:`🔗<class_PhysicsServer3D_method_area_get_transform>`

返回区域的变换矩阵。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_area_remove_shape:

.. rst-class:: classref-method

|void| **area_remove_shape**\ (\ area\: :ref:`RID<class_RID>`, shape_idx\: :ref:`int<class_int>`\ ) :ref:`🔗<class_PhysicsServer3D_method_area_remove_shape>`

从区域中移除一个形状。它不会删除形状，因此可以稍后重新分配。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_area_set_area_monitor_callback:

.. rst-class:: classref-method

|void| **area_set_area_monitor_callback**\ (\ area\: :ref:`RID<class_RID>`, callback\: :ref:`Callable<class_Callable>`\ ) :ref:`🔗<class_PhysicsServer3D_method_area_set_area_monitor_callback>`

设置该区域的区域监视回调。当任何其他（形状）区域进入或退出（形状）给定区域时，将调用此回调，并且必须采用以下五个参数：

1. 一个整数 ``status``\ ：\ :ref:`AREA_BODY_ADDED<class_PhysicsServer3D_constant_AREA_BODY_ADDED>` 或 :ref:`AREA_BODY_REMOVED<class_PhysicsServer3D_constant_AREA_BODY_REMOVED>` 取决于其他区域的形状是进入还是退出该区域，

2. 一个 :ref:`RID<class_RID>` ``area_rid``\ ：进入或退出该区域的其他区域的 :ref:`RID<class_RID>`\ ，

3. 一个整数 ``instance_id``\ ：附加到其他区域的 ``ObjectID``\ ，

4. 一个整数 ``area_shape_idx``\ ：进入或退出该区域的其他区域的形状索引，

5. 一个整数 ``self_shape_idx``\ ：其他区域进入或退出的区域的形状索引。

通过计算（或跟踪）进入和退出的形状，可以确定一个区域（及其所有形状）是第一次进入还是最后一次退出。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_area_set_collision_layer:

.. rst-class:: classref-method

|void| **area_set_collision_layer**\ (\ area\: :ref:`RID<class_RID>`, layer\: :ref:`int<class_int>`\ ) :ref:`🔗<class_PhysicsServer3D_method_area_set_collision_layer>`

将区域分配给一个或多个物理层。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_area_set_collision_mask:

.. rst-class:: classref-method

|void| **area_set_collision_mask**\ (\ area\: :ref:`RID<class_RID>`, mask\: :ref:`int<class_int>`\ ) :ref:`🔗<class_PhysicsServer3D_method_area_set_collision_mask>`

设置区域将监控的物理层。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_area_set_monitor_callback:

.. rst-class:: classref-method

|void| **area_set_monitor_callback**\ (\ area\: :ref:`RID<class_RID>`, callback\: :ref:`Callable<class_Callable>`\ ) :ref:`🔗<class_PhysicsServer3D_method_area_set_monitor_callback>`

设置区域的实体监视器回调。当任何其他（形状的）实体进入或退出（形状的）给定区域时，将调用此回调，并且必须采用以下五个参数：

1. 一个整数 ``status``\ ：\ :ref:`AREA_BODY_ADDED<class_PhysicsServer3D_constant_AREA_BODY_ADDED>` 或 :ref:`AREA_BODY_REMOVED<class_PhysicsServer3D_constant_AREA_BODY_REMOVED>` 取决于其他实体形状是否进入或退出该区域，

2. 一个 :ref:`RID<class_RID>` ``body_rid``\ ：进入或离开该区域的实体的 :ref:`RID<class_RID>`\ ，

3. 一个整数 ``instance_id``\ ：附加到该实体上的 ``ObjectID``\ ，

4. 一个整数 ``body_shape_idx``\ ：进入或离开该区域的实体形状索引，

5. 一个整数 ``self_shape_idx``\ ：实体进入或离开的区域的形状索引。

通过计算（或跟踪）进入和退出的形状，可以确定一个实体（及其所有形状）是第一次进入还是最后一次退出。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_area_set_monitorable:

.. rst-class:: classref-method

|void| **area_set_monitorable**\ (\ area\: :ref:`RID<class_RID>`, monitorable\: :ref:`bool<class_bool>`\ ) :ref:`🔗<class_PhysicsServer3D_method_area_set_monitorable>`

.. container:: contribute

	目前没有这个方法的描述。请帮我们\ :ref:`贡献一个 <doc_updating_the_class_reference>`\ ！

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_area_set_param:

.. rst-class:: classref-method

|void| **area_set_param**\ (\ area\: :ref:`RID<class_RID>`, param\: :ref:`AreaParameter<enum_PhysicsServer3D_AreaParameter>`, value\: :ref:`Variant<class_Variant>`\ ) :ref:`🔗<class_PhysicsServer3D_method_area_set_param>`

设置面积参数的值。可用参数列表位于 :ref:`AreaParameter<enum_PhysicsServer3D_AreaParameter>` 常量上。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_area_set_ray_pickable:

.. rst-class:: classref-method

|void| **area_set_ray_pickable**\ (\ area\: :ref:`RID<class_RID>`, enable\: :ref:`bool<class_bool>`\ ) :ref:`🔗<class_PhysicsServer3D_method_area_set_ray_pickable>`

设置可使用光线拾取的对象。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_area_set_shape:

.. rst-class:: classref-method

|void| **area_set_shape**\ (\ area\: :ref:`RID<class_RID>`, shape_idx\: :ref:`int<class_int>`, shape\: :ref:`RID<class_RID>`\ ) :ref:`🔗<class_PhysicsServer3D_method_area_set_shape>`

用另一种形状代替一种形状。旧的形状由它的索引选择，新的形状由它的\ :ref:`RID<class_RID>`\ 选择。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_area_set_shape_disabled:

.. rst-class:: classref-method

|void| **area_set_shape_disabled**\ (\ area\: :ref:`RID<class_RID>`, shape_idx\: :ref:`int<class_int>`, disabled\: :ref:`bool<class_bool>`\ ) :ref:`🔗<class_PhysicsServer3D_method_area_set_shape_disabled>`

.. container:: contribute

	目前没有这个方法的描述。请帮我们\ :ref:`贡献一个 <doc_updating_the_class_reference>`\ ！

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_area_set_shape_transform:

.. rst-class:: classref-method

|void| **area_set_shape_transform**\ (\ area\: :ref:`RID<class_RID>`, shape_idx\: :ref:`int<class_int>`, transform\: :ref:`Transform3D<class_Transform3D>`\ ) :ref:`🔗<class_PhysicsServer3D_method_area_set_shape_transform>`

设置区域形状的变换矩阵。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_area_set_space:

.. rst-class:: classref-method

|void| **area_set_space**\ (\ area\: :ref:`RID<class_RID>`, space\: :ref:`RID<class_RID>`\ ) :ref:`🔗<class_PhysicsServer3D_method_area_set_space>`

为该区域指定一个空间。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_area_set_transform:

.. rst-class:: classref-method

|void| **area_set_transform**\ (\ area\: :ref:`RID<class_RID>`, transform\: :ref:`Transform3D<class_Transform3D>`\ ) :ref:`🔗<class_PhysicsServer3D_method_area_set_transform>`

设置区域的变换矩阵。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_body_add_collision_exception:

.. rst-class:: classref-method

|void| **body_add_collision_exception**\ (\ body\: :ref:`RID<class_RID>`, excepted_body\: :ref:`RID<class_RID>`\ ) :ref:`🔗<class_PhysicsServer3D_method_body_add_collision_exception>`

将一个物体添加到免于碰撞的物体列表中。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_body_add_constant_central_force:

.. rst-class:: classref-method

|void| **body_add_constant_central_force**\ (\ body\: :ref:`RID<class_RID>`, force\: :ref:`Vector3<class_Vector3>`\ ) :ref:`🔗<class_PhysicsServer3D_method_body_add_constant_central_force>`

在不影响旋转的情况下，添加一个恒定的方向力，该力会随着时间的推移而持续施加，直到使用 ``body_set_constant_force(body, Vector3(0, 0, 0))`` 清除。

这相当于在实体的质心处使用 :ref:`body_add_constant_force<class_PhysicsServer3D_method_body_add_constant_force>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_body_add_constant_force:

.. rst-class:: classref-method

|void| **body_add_constant_force**\ (\ body\: :ref:`RID<class_RID>`, force\: :ref:`Vector3<class_Vector3>`, position\: :ref:`Vector3<class_Vector3>` = Vector3(0, 0, 0)\ ) :ref:`🔗<class_PhysicsServer3D_method_body_add_constant_force>`

向实体添加一个恒定的定位力，持续施加，直到用 ``body_set_constant_force(body, Vector3(0, 0, 0))`` 清除。

\ ``position`` 是在全局坐标中距实体原点的偏移量。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_body_add_constant_torque:

.. rst-class:: classref-method

|void| **body_add_constant_torque**\ (\ body\: :ref:`RID<class_RID>`, torque\: :ref:`Vector3<class_Vector3>`\ ) :ref:`🔗<class_PhysicsServer3D_method_body_add_constant_torque>`

在不影响位置的情况下，添加一个恒定的旋转力，随着时间的推移而持续施加，直到使用 ``body_set_constant_torque(body, Vector3(0, 0, 0))`` 清除。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_body_add_shape:

.. rst-class:: classref-method

|void| **body_add_shape**\ (\ body\: :ref:`RID<class_RID>`, shape\: :ref:`RID<class_RID>`, transform\: :ref:`Transform3D<class_Transform3D>` = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0), disabled\: :ref:`bool<class_bool>` = false\ ) :ref:`🔗<class_PhysicsServer3D_method_body_add_shape>`

添加一个形状到物体，以及一个变换矩阵。形状通常通过它们的索引来引用，因此你应该跟踪哪个形状具有给定的索引。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_body_apply_central_force:

.. rst-class:: classref-method

|void| **body_apply_central_force**\ (\ body\: :ref:`RID<class_RID>`, force\: :ref:`Vector3<class_Vector3>`\ ) :ref:`🔗<class_PhysicsServer3D_method_body_apply_central_force>`

在不影响旋转的情况下，施加一个方向力。力是时间相关的，意味着每次物理更新都会施加。

这相当于在实体的质心处使用 :ref:`body_apply_force<class_PhysicsServer3D_method_body_apply_force>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_body_apply_central_impulse:

.. rst-class:: classref-method

|void| **body_apply_central_impulse**\ (\ body\: :ref:`RID<class_RID>`, impulse\: :ref:`Vector3<class_Vector3>`\ ) :ref:`🔗<class_PhysicsServer3D_method_body_apply_central_impulse>`

在不影响旋转的情况下，施加一个定向冲量。

冲动是时间无关的！每帧施加一个冲量将产生依赖于帧速率的力。出于这个原因，它应该只在模拟一次性影响时使用（否则使用“_force”函数）。

这相当于在实体的质心处使用 :ref:`body_apply_impulse<class_PhysicsServer3D_method_body_apply_impulse>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_body_apply_force:

.. rst-class:: classref-method

|void| **body_apply_force**\ (\ body\: :ref:`RID<class_RID>`, force\: :ref:`Vector3<class_Vector3>`, position\: :ref:`Vector3<class_Vector3>` = Vector3(0, 0, 0)\ ) :ref:`🔗<class_PhysicsServer3D_method_body_apply_force>`

对实体施加一个定位力。力是时间相关的，意味着每次物理更新都会被施加。

\ ``position`` 是在全局坐标中距实体原点的偏移量。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_body_apply_impulse:

.. rst-class:: classref-method

|void| **body_apply_impulse**\ (\ body\: :ref:`RID<class_RID>`, impulse\: :ref:`Vector3<class_Vector3>`, position\: :ref:`Vector3<class_Vector3>` = Vector3(0, 0, 0)\ ) :ref:`🔗<class_PhysicsServer3D_method_body_apply_impulse>`

向实体施加一个定位冲量。

冲量是时间无关的！每帧施加一个冲量将产生一个依赖于帧速率的力。出于这个原因，它应该只在模拟一次性影响时使用（否则使用“_force”函数）。

\ ``position`` 是在全局坐标中距实体原点的偏移量。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_body_apply_torque:

.. rst-class:: classref-method

|void| **body_apply_torque**\ (\ body\: :ref:`RID<class_RID>`, torque\: :ref:`Vector3<class_Vector3>`\ ) :ref:`🔗<class_PhysicsServer3D_method_body_apply_torque>`

在不影响位置的情况下，施加一个旋转力。力是时间相关的，这意味着每次物理更新都会施加。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_body_apply_torque_impulse:

.. rst-class:: classref-method

|void| **body_apply_torque_impulse**\ (\ body\: :ref:`RID<class_RID>`, impulse\: :ref:`Vector3<class_Vector3>`\ ) :ref:`🔗<class_PhysicsServer3D_method_body_apply_torque_impulse>`

在不影响位置的情况下，向实体施加一个旋转冲量。

冲量是时间无关的！每帧施加一个冲量将产生一个依赖于帧速率的力。出于这个原因，它应该只在模拟一次性影响时使用（否则使用“_force”函数）。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_body_attach_object_instance_id:

.. rst-class:: classref-method

|void| **body_attach_object_instance_id**\ (\ body\: :ref:`RID<class_RID>`, id\: :ref:`int<class_int>`\ ) :ref:`🔗<class_PhysicsServer3D_method_body_attach_object_instance_id>`

将区域分配给\ :ref:`Object<class_Object>`\ 的子类，因此它可以存在于节点树中。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_body_clear_shapes:

.. rst-class:: classref-method

|void| **body_clear_shapes**\ (\ body\: :ref:`RID<class_RID>`\ ) :ref:`🔗<class_PhysicsServer3D_method_body_clear_shapes>`

从物体上移除所有碰撞形状。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_body_create:

.. rst-class:: classref-method

:ref:`RID<class_RID>` **body_create**\ (\ ) :ref:`🔗<class_PhysicsServer3D_method_body_create>`

Creates a 3D body object in the physics server, and returns the :ref:`RID<class_RID>` that identifies it. The default settings for the created area include a collision layer and mask set to ``1``, and body mode set to :ref:`BODY_MODE_RIGID<class_PhysicsServer3D_constant_BODY_MODE_RIGID>`.

Use :ref:`body_add_shape<class_PhysicsServer3D_method_body_add_shape>` to add shapes to it, use :ref:`body_set_state<class_PhysicsServer3D_method_body_set_state>` to set its transform, and use :ref:`body_set_space<class_PhysicsServer3D_method_body_set_space>` to add the body to a space.

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_body_get_collision_layer:

.. rst-class:: classref-method

:ref:`int<class_int>` **body_get_collision_layer**\ (\ body\: :ref:`RID<class_RID>`\ ) |const| :ref:`🔗<class_PhysicsServer3D_method_body_get_collision_layer>`

返回物体所属的物理层或层。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_body_get_collision_mask:

.. rst-class:: classref-method

:ref:`int<class_int>` **body_get_collision_mask**\ (\ body\: :ref:`RID<class_RID>`\ ) |const| :ref:`🔗<class_PhysicsServer3D_method_body_get_collision_mask>`

返回物体可以碰撞的物理层或层。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_body_get_collision_priority:

.. rst-class:: classref-method

:ref:`float<class_float>` **body_get_collision_priority**\ (\ body\: :ref:`RID<class_RID>`\ ) |const| :ref:`🔗<class_PhysicsServer3D_method_body_get_collision_priority>`

返回该物体的碰撞优先级。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_body_get_constant_force:

.. rst-class:: classref-method

:ref:`Vector3<class_Vector3>` **body_get_constant_force**\ (\ body\: :ref:`RID<class_RID>`\ ) |const| :ref:`🔗<class_PhysicsServer3D_method_body_get_constant_force>`

返回在每次物理更新期间，该物体被施加的总的恒定位置的力。

参阅 :ref:`body_add_constant_force<class_PhysicsServer3D_method_body_add_constant_force>` 和 :ref:`body_add_constant_central_force<class_PhysicsServer3D_method_body_add_constant_central_force>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_body_get_constant_torque:

.. rst-class:: classref-method

:ref:`Vector3<class_Vector3>` **body_get_constant_torque**\ (\ body\: :ref:`RID<class_RID>`\ ) |const| :ref:`🔗<class_PhysicsServer3D_method_body_get_constant_torque>`

返回在每次物理更新期间，该物体被施加的总的恒定旋转的力。

参阅 :ref:`body_add_constant_torque<class_PhysicsServer3D_method_body_add_constant_torque>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_body_get_direct_state:

.. rst-class:: classref-method

:ref:`PhysicsDirectBodyState3D<class_PhysicsDirectBodyState3D>` **body_get_direct_state**\ (\ body\: :ref:`RID<class_RID>`\ ) :ref:`🔗<class_PhysicsServer3D_method_body_get_direct_state>`

返回该物体的 :ref:`PhysicsDirectBodyState3D<class_PhysicsDirectBodyState3D>`\ 。如果该物体已被销毁或从物理空间中移除，则返回 ``null``\ 。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_body_get_max_contacts_reported:

.. rst-class:: classref-method

:ref:`int<class_int>` **body_get_max_contacts_reported**\ (\ body\: :ref:`RID<class_RID>`\ ) |const| :ref:`🔗<class_PhysicsServer3D_method_body_get_max_contacts_reported>`

返回可报告的最大接触数。见 :ref:`body_set_max_contacts_reported<class_PhysicsServer3D_method_body_set_max_contacts_reported>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_body_get_mode:

.. rst-class:: classref-method

:ref:`BodyMode<enum_PhysicsServer3D_BodyMode>` **body_get_mode**\ (\ body\: :ref:`RID<class_RID>`\ ) |const| :ref:`🔗<class_PhysicsServer3D_method_body_get_mode>`

返回物体模式。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_body_get_object_instance_id:

.. rst-class:: classref-method

:ref:`int<class_int>` **body_get_object_instance_id**\ (\ body\: :ref:`RID<class_RID>`\ ) |const| :ref:`🔗<class_PhysicsServer3D_method_body_get_object_instance_id>`

获取区域分配给的对象的实例 ID。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_body_get_param:

.. rst-class:: classref-method

:ref:`Variant<class_Variant>` **body_get_param**\ (\ body\: :ref:`RID<class_RID>`, param\: :ref:`BodyParameter<enum_PhysicsServer3D_BodyParameter>`\ ) |const| :ref:`🔗<class_PhysicsServer3D_method_body_get_param>`

返回物体参数的值。可用参数列表位于 :ref:`BodyParameter<enum_PhysicsServer3D_BodyParameter>` 常量上。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_body_get_shape:

.. rst-class:: classref-method

:ref:`RID<class_RID>` **body_get_shape**\ (\ body\: :ref:`RID<class_RID>`, shape_idx\: :ref:`int<class_int>`\ ) |const| :ref:`🔗<class_PhysicsServer3D_method_body_get_shape>`

返回物体的第 n 个碰撞形状的 :ref:`RID<class_RID>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_body_get_shape_count:

.. rst-class:: classref-method

:ref:`int<class_int>` **body_get_shape_count**\ (\ body\: :ref:`RID<class_RID>`\ ) |const| :ref:`🔗<class_PhysicsServer3D_method_body_get_shape_count>`

返回分配给物体的碰撞形状数量。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_body_get_shape_transform:

.. rst-class:: classref-method

:ref:`Transform3D<class_Transform3D>` **body_get_shape_transform**\ (\ body\: :ref:`RID<class_RID>`, shape_idx\: :ref:`int<class_int>`\ ) |const| :ref:`🔗<class_PhysicsServer3D_method_body_get_shape_transform>`

返回物体碰撞形状的变换矩阵。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_body_get_space:

.. rst-class:: classref-method

:ref:`RID<class_RID>` **body_get_space**\ (\ body\: :ref:`RID<class_RID>`\ ) |const| :ref:`🔗<class_PhysicsServer3D_method_body_get_space>`

返回分配给物体的空间的 :ref:`RID<class_RID>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_body_get_state:

.. rst-class:: classref-method

:ref:`Variant<class_Variant>` **body_get_state**\ (\ body\: :ref:`RID<class_RID>`, state\: :ref:`BodyState<enum_PhysicsServer3D_BodyState>`\ ) |const| :ref:`🔗<class_PhysicsServer3D_method_body_get_state>`

返回物体的状态。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_body_is_axis_locked:

.. rst-class:: classref-method

:ref:`bool<class_bool>` **body_is_axis_locked**\ (\ body\: :ref:`RID<class_RID>`, axis\: :ref:`BodyAxis<enum_PhysicsServer3D_BodyAxis>`\ ) |const| :ref:`🔗<class_PhysicsServer3D_method_body_is_axis_locked>`

.. container:: contribute

	目前没有这个方法的描述。请帮我们\ :ref:`贡献一个 <doc_updating_the_class_reference>`\ ！

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_body_is_continuous_collision_detection_enabled:

.. rst-class:: classref-method

:ref:`bool<class_bool>` **body_is_continuous_collision_detection_enabled**\ (\ body\: :ref:`RID<class_RID>`\ ) |const| :ref:`🔗<class_PhysicsServer3D_method_body_is_continuous_collision_detection_enabled>`

如果为 ``true``\ ，则启用连续碰撞检测模式。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_body_is_omitting_force_integration:

.. rst-class:: classref-method

:ref:`bool<class_bool>` **body_is_omitting_force_integration**\ (\ body\: :ref:`RID<class_RID>`\ ) |const| :ref:`🔗<class_PhysicsServer3D_method_body_is_omitting_force_integration>`

Returns ``true`` if the body is omitting the standard force integration. See :ref:`body_set_omit_force_integration<class_PhysicsServer3D_method_body_set_omit_force_integration>`.

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_body_remove_collision_exception:

.. rst-class:: classref-method

|void| **body_remove_collision_exception**\ (\ body\: :ref:`RID<class_RID>`, excepted_body\: :ref:`RID<class_RID>`\ ) :ref:`🔗<class_PhysicsServer3D_method_body_remove_collision_exception>`

从免于碰撞的实体列表中删除实体。

连续碰撞检测尝试预测运动物体碰撞的位置，而不是在碰撞时移动物体并纠正其运动。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_body_remove_shape:

.. rst-class:: classref-method

|void| **body_remove_shape**\ (\ body\: :ref:`RID<class_RID>`, shape_idx\: :ref:`int<class_int>`\ ) :ref:`🔗<class_PhysicsServer3D_method_body_remove_shape>`

从物体上移除一个碰撞形状。碰撞形状不会被从内存中删除，所以它可以在之后被重复使用。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_body_reset_mass_properties:

.. rst-class:: classref-method

|void| **body_reset_mass_properties**\ (\ body\: :ref:`RID<class_RID>`\ ) :ref:`🔗<class_PhysicsServer3D_method_body_reset_mass_properties>`

根据形状恢复默认惯性和质心，以取消之前使用 :ref:`body_set_param<class_PhysicsServer3D_method_body_set_param>` 设置的任何自定义值。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_body_set_axis_lock:

.. rst-class:: classref-method

|void| **body_set_axis_lock**\ (\ body\: :ref:`RID<class_RID>`, axis\: :ref:`BodyAxis<enum_PhysicsServer3D_BodyAxis>`, lock\: :ref:`bool<class_bool>`\ ) :ref:`🔗<class_PhysicsServer3D_method_body_set_axis_lock>`

.. container:: contribute

	目前没有这个方法的描述。请帮我们\ :ref:`贡献一个 <doc_updating_the_class_reference>`\ ！

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_body_set_axis_velocity:

.. rst-class:: classref-method

|void| **body_set_axis_velocity**\ (\ body\: :ref:`RID<class_RID>`, axis_velocity\: :ref:`Vector3<class_Vector3>`\ ) :ref:`🔗<class_PhysicsServer3D_method_body_set_axis_velocity>`

设置轴速度。给定向量轴上的速度将被设置为给定向量长度。这对跳跃行为很有用。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_body_set_collision_layer:

.. rst-class:: classref-method

|void| **body_set_collision_layer**\ (\ body\: :ref:`RID<class_RID>`, layer\: :ref:`int<class_int>`\ ) :ref:`🔗<class_PhysicsServer3D_method_body_set_collision_layer>`

设置物体所属的物理层或层。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_body_set_collision_mask:

.. rst-class:: classref-method

|void| **body_set_collision_mask**\ (\ body\: :ref:`RID<class_RID>`, mask\: :ref:`int<class_int>`\ ) :ref:`🔗<class_PhysicsServer3D_method_body_set_collision_mask>`

设置物理层或身体可以碰撞的层。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_body_set_collision_priority:

.. rst-class:: classref-method

|void| **body_set_collision_priority**\ (\ body\: :ref:`RID<class_RID>`, priority\: :ref:`float<class_float>`\ ) :ref:`🔗<class_PhysicsServer3D_method_body_set_collision_priority>`

设置该物体的碰撞优先级。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_body_set_constant_force:

.. rst-class:: classref-method

|void| **body_set_constant_force**\ (\ body\: :ref:`RID<class_RID>`, force\: :ref:`Vector3<class_Vector3>`\ ) :ref:`🔗<class_PhysicsServer3D_method_body_set_constant_force>`

设置该物体在每次物理更新时应用的总恒定位置力。

见 :ref:`body_add_constant_force<class_PhysicsServer3D_method_body_add_constant_force>` 和 :ref:`body_add_constant_central_force<class_PhysicsServer3D_method_body_add_constant_central_force>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_body_set_constant_torque:

.. rst-class:: classref-method

|void| **body_set_constant_torque**\ (\ body\: :ref:`RID<class_RID>`, torque\: :ref:`Vector3<class_Vector3>`\ ) :ref:`🔗<class_PhysicsServer3D_method_body_set_constant_torque>`

设置该物体在每次物理更新时应用的总恒定旋转力。

见 :ref:`body_add_constant_torque<class_PhysicsServer3D_method_body_add_constant_torque>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_body_set_enable_continuous_collision_detection:

.. rst-class:: classref-method

|void| **body_set_enable_continuous_collision_detection**\ (\ body\: :ref:`RID<class_RID>`, enable\: :ref:`bool<class_bool>`\ ) :ref:`🔗<class_PhysicsServer3D_method_body_set_enable_continuous_collision_detection>`

如果为 ``true``\ ，则启用连续碰撞检测模式。

连续碰撞检测尝试预测运动物体碰撞的位置，而不是在碰撞时移动物体并纠正其运动。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_body_set_force_integration_callback:

.. rst-class:: classref-method

|void| **body_set_force_integration_callback**\ (\ body\: :ref:`RID<class_RID>`, callable\: :ref:`Callable<class_Callable>`, userdata\: :ref:`Variant<class_Variant>` = null\ ) :ref:`🔗<class_PhysicsServer3D_method_body_set_force_integration_callback>`

Sets the body's custom force integration callback function to ``callable``. Use an empty :ref:`Callable<class_Callable>` (``Callable()``) to clear the custom callback.

The function ``callable`` will be called every physics tick, before the standard force integration (see :ref:`body_set_omit_force_integration<class_PhysicsServer3D_method_body_set_omit_force_integration>`). It can be used for example to update the body's linear and angular velocity based on contact with other bodies.

If ``userdata`` is not ``null``, the function ``callable`` must take the following two parameters:

1. ``state``: a :ref:`PhysicsDirectBodyState3D<class_PhysicsDirectBodyState3D>`, used to retrieve and modify the body's state,

2. ``userdata``: a :ref:`Variant<class_Variant>`; its value will be the ``userdata`` passed into this method.

If ``userdata`` is ``null``, then ``callable`` must take only the ``state`` parameter.

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_body_set_max_contacts_reported:

.. rst-class:: classref-method

|void| **body_set_max_contacts_reported**\ (\ body\: :ref:`RID<class_RID>`, amount\: :ref:`int<class_int>`\ ) :ref:`🔗<class_PhysicsServer3D_method_body_set_max_contacts_reported>`

设置要报告的最大接触数。物体可以记录与其他物体的接触。将最大接触数设置为大于 0 的数字可以启用此功能。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_body_set_mode:

.. rst-class:: classref-method

|void| **body_set_mode**\ (\ body\: :ref:`RID<class_RID>`, mode\: :ref:`BodyMode<enum_PhysicsServer3D_BodyMode>`\ ) :ref:`🔗<class_PhysicsServer3D_method_body_set_mode>`

从 :ref:`BodyMode<enum_PhysicsServer3D_BodyMode>` 常量之一设置主体模式。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_body_set_omit_force_integration:

.. rst-class:: classref-method

|void| **body_set_omit_force_integration**\ (\ body\: :ref:`RID<class_RID>`, enable\: :ref:`bool<class_bool>`\ ) :ref:`🔗<class_PhysicsServer3D_method_body_set_omit_force_integration>`

设置物体是否省略标准力集成。如果 ``enable`` 为 ``true``\ ，则物体不会自动使用施加的力、力矩、阻尼来更新自身的线速度和角速度。在这种情况下可以使用 :ref:`body_set_force_integration_callback<class_PhysicsServer3D_method_body_set_force_integration_callback>` 来手动更新线速度和角速度。

设置 :ref:`RigidBody3D.custom_integrator<class_RigidBody3D_property_custom_integrator>` 属性时会调用该方法。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_body_set_param:

.. rst-class:: classref-method

|void| **body_set_param**\ (\ body\: :ref:`RID<class_RID>`, param\: :ref:`BodyParameter<enum_PhysicsServer3D_BodyParameter>`, value\: :ref:`Variant<class_Variant>`\ ) :ref:`🔗<class_PhysicsServer3D_method_body_set_param>`

设置物体参数。可用参数列表位于 :ref:`BodyParameter<enum_PhysicsServer3D_BodyParameter>` 常量上。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_body_set_ray_pickable:

.. rst-class:: classref-method

|void| **body_set_ray_pickable**\ (\ body\: :ref:`RID<class_RID>`, enable\: :ref:`bool<class_bool>`\ ) :ref:`🔗<class_PhysicsServer3D_method_body_set_ray_pickable>`

如果设置了 ``enable``\ ，则将该物体设置为可通过射线拾取。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_body_set_shape:

.. rst-class:: classref-method

|void| **body_set_shape**\ (\ body\: :ref:`RID<class_RID>`, shape_idx\: :ref:`int<class_int>`, shape\: :ref:`RID<class_RID>`\ ) :ref:`🔗<class_PhysicsServer3D_method_body_set_shape>`

用一个给定的物体形状代替另一个。旧的形状是通过其索引选择的，新的是通过其 :ref:`RID<class_RID>` 选择的。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_body_set_shape_disabled:

.. rst-class:: classref-method

|void| **body_set_shape_disabled**\ (\ body\: :ref:`RID<class_RID>`, shape_idx\: :ref:`int<class_int>`, disabled\: :ref:`bool<class_bool>`\ ) :ref:`🔗<class_PhysicsServer3D_method_body_set_shape_disabled>`

.. container:: contribute

	目前没有这个方法的描述。请帮我们\ :ref:`贡献一个 <doc_updating_the_class_reference>`\ ！

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_body_set_shape_transform:

.. rst-class:: classref-method

|void| **body_set_shape_transform**\ (\ body\: :ref:`RID<class_RID>`, shape_idx\: :ref:`int<class_int>`, transform\: :ref:`Transform3D<class_Transform3D>`\ ) :ref:`🔗<class_PhysicsServer3D_method_body_set_shape_transform>`

设置物体形状的变换矩阵。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_body_set_space:

.. rst-class:: classref-method

|void| **body_set_space**\ (\ body\: :ref:`RID<class_RID>`, space\: :ref:`RID<class_RID>`\ ) :ref:`🔗<class_PhysicsServer3D_method_body_set_space>`

给物体分配一个空间（见 :ref:`space_create<class_PhysicsServer3D_method_space_create>`\ ）。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_body_set_state:

.. rst-class:: classref-method

|void| **body_set_state**\ (\ body\: :ref:`RID<class_RID>`, state\: :ref:`BodyState<enum_PhysicsServer3D_BodyState>`, value\: :ref:`Variant<class_Variant>`\ ) :ref:`🔗<class_PhysicsServer3D_method_body_set_state>`

设置主体状态（见 :ref:`BodyState<enum_PhysicsServer3D_BodyState>` 常量）。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_body_test_motion:

.. rst-class:: classref-method

:ref:`bool<class_bool>` **body_test_motion**\ (\ body\: :ref:`RID<class_RID>`, parameters\: :ref:`PhysicsTestMotionParameters3D<class_PhysicsTestMotionParameters3D>`, result\: :ref:`PhysicsTestMotionResult3D<class_PhysicsTestMotionResult3D>` = null\ ) :ref:`🔗<class_PhysicsServer3D_method_body_test_motion>`

如果从空间中的给定点沿着运动向量移动会导致碰撞，则返回 ``true``\ 。传递 :ref:`PhysicsTestMotionParameters3D<class_PhysicsTestMotionParameters3D>` 可以设置运动参数。还可以传递 :ref:`PhysicsTestMotionResult3D<class_PhysicsTestMotionResult3D>`\ ，从而返回其他信息。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_box_shape_create:

.. rst-class:: classref-method

:ref:`RID<class_RID>` **box_shape_create**\ (\ ) :ref:`🔗<class_PhysicsServer3D_method_box_shape_create>`

.. container:: contribute

	目前没有这个方法的描述。请帮我们\ :ref:`贡献一个 <doc_updating_the_class_reference>`\ ！

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_capsule_shape_create:

.. rst-class:: classref-method

:ref:`RID<class_RID>` **capsule_shape_create**\ (\ ) :ref:`🔗<class_PhysicsServer3D_method_capsule_shape_create>`

.. container:: contribute

	目前没有这个方法的描述。请帮我们\ :ref:`贡献一个 <doc_updating_the_class_reference>`\ ！

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_concave_polygon_shape_create:

.. rst-class:: classref-method

:ref:`RID<class_RID>` **concave_polygon_shape_create**\ (\ ) :ref:`🔗<class_PhysicsServer3D_method_concave_polygon_shape_create>`

.. container:: contribute

	目前没有这个方法的描述。请帮我们\ :ref:`贡献一个 <doc_updating_the_class_reference>`\ ！

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_cone_twist_joint_get_param:

.. rst-class:: classref-method

:ref:`float<class_float>` **cone_twist_joint_get_param**\ (\ joint\: :ref:`RID<class_RID>`, param\: :ref:`ConeTwistJointParam<enum_PhysicsServer3D_ConeTwistJointParam>`\ ) |const| :ref:`🔗<class_PhysicsServer3D_method_cone_twist_joint_get_param>`

获取圆锥体扭曲关节参数（见 :ref:`ConeTwistJointParam<enum_PhysicsServer3D_ConeTwistJointParam>` 常量）。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_cone_twist_joint_set_param:

.. rst-class:: classref-method

|void| **cone_twist_joint_set_param**\ (\ joint\: :ref:`RID<class_RID>`, param\: :ref:`ConeTwistJointParam<enum_PhysicsServer3D_ConeTwistJointParam>`, value\: :ref:`float<class_float>`\ ) :ref:`🔗<class_PhysicsServer3D_method_cone_twist_joint_set_param>`

设置圆锥体扭曲关节参数（见 :ref:`ConeTwistJointParam<enum_PhysicsServer3D_ConeTwistJointParam>` 常量）。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_convex_polygon_shape_create:

.. rst-class:: classref-method

:ref:`RID<class_RID>` **convex_polygon_shape_create**\ (\ ) :ref:`🔗<class_PhysicsServer3D_method_convex_polygon_shape_create>`

.. container:: contribute

	目前没有这个方法的描述。请帮我们\ :ref:`贡献一个 <doc_updating_the_class_reference>`\ ！

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_custom_shape_create:

.. rst-class:: classref-method

:ref:`RID<class_RID>` **custom_shape_create**\ (\ ) :ref:`🔗<class_PhysicsServer3D_method_custom_shape_create>`

.. container:: contribute

	目前没有这个方法的描述。请帮我们\ :ref:`贡献一个 <doc_updating_the_class_reference>`\ ！

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_cylinder_shape_create:

.. rst-class:: classref-method

:ref:`RID<class_RID>` **cylinder_shape_create**\ (\ ) :ref:`🔗<class_PhysicsServer3D_method_cylinder_shape_create>`

.. container:: contribute

	目前没有这个方法的描述。请帮我们\ :ref:`贡献一个 <doc_updating_the_class_reference>`\ ！

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_free_rid:

.. rst-class:: classref-method

|void| **free_rid**\ (\ rid\: :ref:`RID<class_RID>`\ ) :ref:`🔗<class_PhysicsServer3D_method_free_rid>`

销毁由 PhysicsServer3D 创建的任何对象。如果传入的 :ref:`RID<class_RID>` 不是由 PhysicsServer3D 创建的对象，则会向控制台发送错误。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_generic_6dof_joint_get_flag:

.. rst-class:: classref-method

:ref:`bool<class_bool>` **generic_6dof_joint_get_flag**\ (\ joint\: :ref:`RID<class_RID>`, axis\: Vector3.Axis, flag\: :ref:`G6DOFJointAxisFlag<enum_PhysicsServer3D_G6DOFJointAxisFlag>`\ ) |const| :ref:`🔗<class_PhysicsServer3D_method_generic_6dof_joint_get_flag>`

返回通用 6DOF 关节的标志值。可用标志列表见 :ref:`G6DOFJointAxisFlag<enum_PhysicsServer3D_G6DOFJointAxisFlag>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_generic_6dof_joint_get_param:

.. rst-class:: classref-method

:ref:`float<class_float>` **generic_6dof_joint_get_param**\ (\ joint\: :ref:`RID<class_RID>`, axis\: Vector3.Axis, param\: :ref:`G6DOFJointAxisParam<enum_PhysicsServer3D_G6DOFJointAxisParam>`\ ) |const| :ref:`🔗<class_PhysicsServer3D_method_generic_6dof_joint_get_param>`

返回通用 6DOF 关节的参数值。可用参数列表见 :ref:`G6DOFJointAxisParam<enum_PhysicsServer3D_G6DOFJointAxisParam>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_generic_6dof_joint_set_flag:

.. rst-class:: classref-method

|void| **generic_6dof_joint_set_flag**\ (\ joint\: :ref:`RID<class_RID>`, axis\: Vector3.Axis, flag\: :ref:`G6DOFJointAxisFlag<enum_PhysicsServer3D_G6DOFJointAxisFlag>`, enable\: :ref:`bool<class_bool>`\ ) :ref:`🔗<class_PhysicsServer3D_method_generic_6dof_joint_set_flag>`

设置给定的通用 6DOF 关节标志值。可用标志列表见 :ref:`G6DOFJointAxisFlag<enum_PhysicsServer3D_G6DOFJointAxisFlag>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_generic_6dof_joint_set_param:

.. rst-class:: classref-method

|void| **generic_6dof_joint_set_param**\ (\ joint\: :ref:`RID<class_RID>`, axis\: Vector3.Axis, param\: :ref:`G6DOFJointAxisParam<enum_PhysicsServer3D_G6DOFJointAxisParam>`, value\: :ref:`float<class_float>`\ ) :ref:`🔗<class_PhysicsServer3D_method_generic_6dof_joint_set_param>`

设置给定的通用 6DOF 关节参数值。可用参数列表见 :ref:`G6DOFJointAxisParam<enum_PhysicsServer3D_G6DOFJointAxisParam>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_get_process_info:

.. rst-class:: classref-method

:ref:`int<class_int>` **get_process_info**\ (\ process_info\: :ref:`ProcessInfo<enum_PhysicsServer3D_ProcessInfo>`\ ) :ref:`🔗<class_PhysicsServer3D_method_get_process_info>`

返回有关 3D 物理引擎当前状态的信息。可用状态的列表见 :ref:`ProcessInfo<enum_PhysicsServer3D_ProcessInfo>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_heightmap_shape_create:

.. rst-class:: classref-method

:ref:`RID<class_RID>` **heightmap_shape_create**\ (\ ) :ref:`🔗<class_PhysicsServer3D_method_heightmap_shape_create>`

.. container:: contribute

	目前没有这个方法的描述。请帮我们\ :ref:`贡献一个 <doc_updating_the_class_reference>`\ ！

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_hinge_joint_get_flag:

.. rst-class:: classref-method

:ref:`bool<class_bool>` **hinge_joint_get_flag**\ (\ joint\: :ref:`RID<class_RID>`, flag\: :ref:`HingeJointFlag<enum_PhysicsServer3D_HingeJointFlag>`\ ) |const| :ref:`🔗<class_PhysicsServer3D_method_hinge_joint_get_flag>`

获取 hinge_joint 标志（见 :ref:`HingeJointFlag<enum_PhysicsServer3D_HingeJointFlag>` 常量）。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_hinge_joint_get_param:

.. rst-class:: classref-method

:ref:`float<class_float>` **hinge_joint_get_param**\ (\ joint\: :ref:`RID<class_RID>`, param\: :ref:`HingeJointParam<enum_PhysicsServer3D_HingeJointParam>`\ ) |const| :ref:`🔗<class_PhysicsServer3D_method_hinge_joint_get_param>`

获取 hinge_joint 参数（见 :ref:`HingeJointParam<enum_PhysicsServer3D_HingeJointParam>`\ ）。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_hinge_joint_set_flag:

.. rst-class:: classref-method

|void| **hinge_joint_set_flag**\ (\ joint\: :ref:`RID<class_RID>`, flag\: :ref:`HingeJointFlag<enum_PhysicsServer3D_HingeJointFlag>`, enabled\: :ref:`bool<class_bool>`\ ) :ref:`🔗<class_PhysicsServer3D_method_hinge_joint_set_flag>`

设置 hinge_joint 标志（见 :ref:`HingeJointFlag<enum_PhysicsServer3D_HingeJointFlag>` 常量）。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_hinge_joint_set_param:

.. rst-class:: classref-method

|void| **hinge_joint_set_param**\ (\ joint\: :ref:`RID<class_RID>`, param\: :ref:`HingeJointParam<enum_PhysicsServer3D_HingeJointParam>`, value\: :ref:`float<class_float>`\ ) :ref:`🔗<class_PhysicsServer3D_method_hinge_joint_set_param>`

设置 hinge_joint 参数（见 :ref:`HingeJointParam<enum_PhysicsServer3D_HingeJointParam>` 常量）。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_joint_clear:

.. rst-class:: classref-method

|void| **joint_clear**\ (\ joint\: :ref:`RID<class_RID>`\ ) :ref:`🔗<class_PhysicsServer3D_method_joint_clear>`

.. container:: contribute

	目前没有这个方法的描述。请帮我们\ :ref:`贡献一个 <doc_updating_the_class_reference>`\ ！

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_joint_create:

.. rst-class:: classref-method

:ref:`RID<class_RID>` **joint_create**\ (\ ) :ref:`🔗<class_PhysicsServer3D_method_joint_create>`

.. container:: contribute

	目前没有这个方法的描述。请帮我们\ :ref:`贡献一个 <doc_updating_the_class_reference>`\ ！

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_joint_disable_collisions_between_bodies:

.. rst-class:: classref-method

|void| **joint_disable_collisions_between_bodies**\ (\ joint\: :ref:`RID<class_RID>`, disable\: :ref:`bool<class_bool>`\ ) :ref:`🔗<class_PhysicsServer3D_method_joint_disable_collisions_between_bodies>`

设置附加至该 :ref:`Joint3D<class_Joint3D>` 的物体能否互相碰撞。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_joint_get_solver_priority:

.. rst-class:: classref-method

:ref:`int<class_int>` **joint_get_solver_priority**\ (\ joint\: :ref:`RID<class_RID>`\ ) |const| :ref:`🔗<class_PhysicsServer3D_method_joint_get_solver_priority>`

获取该 Joint3D 的优先级。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_joint_get_type:

.. rst-class:: classref-method

:ref:`JointType<enum_PhysicsServer3D_JointType>` **joint_get_type**\ (\ joint\: :ref:`RID<class_RID>`\ ) |const| :ref:`🔗<class_PhysicsServer3D_method_joint_get_type>`

返回该 Joint3D 的类型。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_joint_is_disabled_collisions_between_bodies:

.. rst-class:: classref-method

:ref:`bool<class_bool>` **joint_is_disabled_collisions_between_bodies**\ (\ joint\: :ref:`RID<class_RID>`\ ) |const| :ref:`🔗<class_PhysicsServer3D_method_joint_is_disabled_collisions_between_bodies>`

返回附加至该 :ref:`Joint3D<class_Joint3D>` 的物体能否互相碰撞。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_joint_make_cone_twist:

.. rst-class:: classref-method

|void| **joint_make_cone_twist**\ (\ joint\: :ref:`RID<class_RID>`, body_A\: :ref:`RID<class_RID>`, local_ref_A\: :ref:`Transform3D<class_Transform3D>`, body_B\: :ref:`RID<class_RID>`, local_ref_B\: :ref:`Transform3D<class_Transform3D>`\ ) :ref:`🔗<class_PhysicsServer3D_method_joint_make_cone_twist>`

.. container:: contribute

	目前没有这个方法的描述。请帮我们\ :ref:`贡献一个 <doc_updating_the_class_reference>`\ ！

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_joint_make_generic_6dof:

.. rst-class:: classref-method

|void| **joint_make_generic_6dof**\ (\ joint\: :ref:`RID<class_RID>`, body_A\: :ref:`RID<class_RID>`, local_ref_A\: :ref:`Transform3D<class_Transform3D>`, body_B\: :ref:`RID<class_RID>`, local_ref_B\: :ref:`Transform3D<class_Transform3D>`\ ) :ref:`🔗<class_PhysicsServer3D_method_joint_make_generic_6dof>`

将关节设置为通用六自由度（6DOF）关节。请使用 :ref:`generic_6dof_joint_set_flag<class_PhysicsServer3D_method_generic_6dof_joint_set_flag>` 和 :ref:`generic_6dof_joint_set_param<class_PhysicsServer3D_method_generic_6dof_joint_set_param>` 来设置关节的标志和参数。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_joint_make_hinge:

.. rst-class:: classref-method

|void| **joint_make_hinge**\ (\ joint\: :ref:`RID<class_RID>`, body_A\: :ref:`RID<class_RID>`, hinge_A\: :ref:`Transform3D<class_Transform3D>`, body_B\: :ref:`RID<class_RID>`, hinge_B\: :ref:`Transform3D<class_Transform3D>`\ ) :ref:`🔗<class_PhysicsServer3D_method_joint_make_hinge>`

.. container:: contribute

	目前没有这个方法的描述。请帮我们\ :ref:`贡献一个 <doc_updating_the_class_reference>`\ ！

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_joint_make_pin:

.. rst-class:: classref-method

|void| **joint_make_pin**\ (\ joint\: :ref:`RID<class_RID>`, body_A\: :ref:`RID<class_RID>`, local_A\: :ref:`Vector3<class_Vector3>`, body_B\: :ref:`RID<class_RID>`, local_B\: :ref:`Vector3<class_Vector3>`\ ) :ref:`🔗<class_PhysicsServer3D_method_joint_make_pin>`

.. container:: contribute

	目前没有这个方法的描述。请帮我们\ :ref:`贡献一个 <doc_updating_the_class_reference>`\ ！

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_joint_make_slider:

.. rst-class:: classref-method

|void| **joint_make_slider**\ (\ joint\: :ref:`RID<class_RID>`, body_A\: :ref:`RID<class_RID>`, local_ref_A\: :ref:`Transform3D<class_Transform3D>`, body_B\: :ref:`RID<class_RID>`, local_ref_B\: :ref:`Transform3D<class_Transform3D>`\ ) :ref:`🔗<class_PhysicsServer3D_method_joint_make_slider>`

.. container:: contribute

	目前没有这个方法的描述。请帮我们\ :ref:`贡献一个 <doc_updating_the_class_reference>`\ ！

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_joint_set_solver_priority:

.. rst-class:: classref-method

|void| **joint_set_solver_priority**\ (\ joint\: :ref:`RID<class_RID>`, priority\: :ref:`int<class_int>`\ ) :ref:`🔗<class_PhysicsServer3D_method_joint_set_solver_priority>`

设置该 Joint3D 的优先级。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_pin_joint_get_local_a:

.. rst-class:: classref-method

:ref:`Vector3<class_Vector3>` **pin_joint_get_local_a**\ (\ joint\: :ref:`RID<class_RID>`\ ) |const| :ref:`🔗<class_PhysicsServer3D_method_pin_joint_get_local_a>`

返回关节在关节物体 A 的局部空间中的位置。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_pin_joint_get_local_b:

.. rst-class:: classref-method

:ref:`Vector3<class_Vector3>` **pin_joint_get_local_b**\ (\ joint\: :ref:`RID<class_RID>`\ ) |const| :ref:`🔗<class_PhysicsServer3D_method_pin_joint_get_local_b>`

返回关节在关节物体 B 的局部空间中的位置。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_pin_joint_get_param:

.. rst-class:: classref-method

:ref:`float<class_float>` **pin_joint_get_param**\ (\ joint\: :ref:`RID<class_RID>`, param\: :ref:`PinJointParam<enum_PhysicsServer3D_PinJointParam>`\ ) |const| :ref:`🔗<class_PhysicsServer3D_method_pin_joint_get_param>`

获取 pin_joint 参数（见 :ref:`PinJointParam<enum_PhysicsServer3D_PinJointParam>` 常量）。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_pin_joint_set_local_a:

.. rst-class:: classref-method

|void| **pin_joint_set_local_a**\ (\ joint\: :ref:`RID<class_RID>`, local_A\: :ref:`Vector3<class_Vector3>`\ ) :ref:`🔗<class_PhysicsServer3D_method_pin_joint_set_local_a>`

设置关节在关节物体 A 的局部空间中的位置。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_pin_joint_set_local_b:

.. rst-class:: classref-method

|void| **pin_joint_set_local_b**\ (\ joint\: :ref:`RID<class_RID>`, local_B\: :ref:`Vector3<class_Vector3>`\ ) :ref:`🔗<class_PhysicsServer3D_method_pin_joint_set_local_b>`

设置关节在关节物体 B 的局部空间中的位置。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_pin_joint_set_param:

.. rst-class:: classref-method

|void| **pin_joint_set_param**\ (\ joint\: :ref:`RID<class_RID>`, param\: :ref:`PinJointParam<enum_PhysicsServer3D_PinJointParam>`, value\: :ref:`float<class_float>`\ ) :ref:`🔗<class_PhysicsServer3D_method_pin_joint_set_param>`

设置 pin_joint 参数（见 :ref:`PinJointParam<enum_PhysicsServer3D_PinJointParam>` 常量）。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_separation_ray_shape_create:

.. rst-class:: classref-method

:ref:`RID<class_RID>` **separation_ray_shape_create**\ (\ ) :ref:`🔗<class_PhysicsServer3D_method_separation_ray_shape_create>`

.. container:: contribute

	目前没有这个方法的描述。请帮我们\ :ref:`贡献一个 <doc_updating_the_class_reference>`\ ！

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_set_active:

.. rst-class:: classref-method

|void| **set_active**\ (\ active\: :ref:`bool<class_bool>`\ ) :ref:`🔗<class_PhysicsServer3D_method_set_active>`

激活或停用 3D 物理引擎。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_shape_get_data:

.. rst-class:: classref-method

:ref:`Variant<class_Variant>` **shape_get_data**\ (\ shape\: :ref:`RID<class_RID>`\ ) |const| :ref:`🔗<class_PhysicsServer3D_method_shape_get_data>`

返回形状数据。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_shape_get_margin:

.. rst-class:: classref-method

:ref:`float<class_float>` **shape_get_margin**\ (\ shape\: :ref:`RID<class_RID>`\ ) |const| :ref:`🔗<class_PhysicsServer3D_method_shape_get_margin>`

Returns the collision margin for the shape.

\ **Note:** This is not used in Godot Physics, so will always return ``0``.

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_shape_get_type:

.. rst-class:: classref-method

:ref:`ShapeType<enum_PhysicsServer3D_ShapeType>` **shape_get_type**\ (\ shape\: :ref:`RID<class_RID>`\ ) |const| :ref:`🔗<class_PhysicsServer3D_method_shape_get_type>`

返回形状的类型（见 :ref:`ShapeType<enum_PhysicsServer3D_ShapeType>` 常量）。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_shape_set_data:

.. rst-class:: classref-method

|void| **shape_set_data**\ (\ shape\: :ref:`RID<class_RID>`, data\: :ref:`Variant<class_Variant>`\ ) :ref:`🔗<class_PhysicsServer3D_method_shape_set_data>`

设置定义形状和大小的形状数据。要传递的数据取决于创建的形状的类型 :ref:`shape_get_type<class_PhysicsServer3D_method_shape_get_type>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_shape_set_margin:

.. rst-class:: classref-method

|void| **shape_set_margin**\ (\ shape\: :ref:`RID<class_RID>`, margin\: :ref:`float<class_float>`\ ) :ref:`🔗<class_PhysicsServer3D_method_shape_set_margin>`

Sets the collision margin for the shape.

\ **Note:** This is not used in Godot Physics.

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_slider_joint_get_param:

.. rst-class:: classref-method

:ref:`float<class_float>` **slider_joint_get_param**\ (\ joint\: :ref:`RID<class_RID>`, param\: :ref:`SliderJointParam<enum_PhysicsServer3D_SliderJointParam>`\ ) |const| :ref:`🔗<class_PhysicsServer3D_method_slider_joint_get_param>`

获取 slider_joint 参数（见 :ref:`SliderJointParam<enum_PhysicsServer3D_SliderJointParam>` 常量）。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_slider_joint_set_param:

.. rst-class:: classref-method

|void| **slider_joint_set_param**\ (\ joint\: :ref:`RID<class_RID>`, param\: :ref:`SliderJointParam<enum_PhysicsServer3D_SliderJointParam>`, value\: :ref:`float<class_float>`\ ) :ref:`🔗<class_PhysicsServer3D_method_slider_joint_set_param>`

获取 slider_joint 参数（见 :ref:`SliderJointParam<enum_PhysicsServer3D_SliderJointParam>` 常量）。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_soft_body_add_collision_exception:

.. rst-class:: classref-method

|void| **soft_body_add_collision_exception**\ (\ body\: :ref:`RID<class_RID>`, body_b\: :ref:`RID<class_RID>`\ ) :ref:`🔗<class_PhysicsServer3D_method_soft_body_add_collision_exception>`

将给定物体添加到免于碰撞的物体列表中。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_soft_body_create:

.. rst-class:: classref-method

:ref:`RID<class_RID>` **soft_body_create**\ (\ ) :ref:`🔗<class_PhysicsServer3D_method_soft_body_create>`

创建一个新的柔性物体并返回其内部 :ref:`RID<class_RID>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_soft_body_get_bounds:

.. rst-class:: classref-method

:ref:`AABB<class_AABB>` **soft_body_get_bounds**\ (\ body\: :ref:`RID<class_RID>`\ ) |const| :ref:`🔗<class_PhysicsServer3D_method_soft_body_get_bounds>`

返回给定柔性物体在全局坐标中的边界。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_soft_body_get_collision_layer:

.. rst-class:: classref-method

:ref:`int<class_int>` **soft_body_get_collision_layer**\ (\ body\: :ref:`RID<class_RID>`\ ) |const| :ref:`🔗<class_PhysicsServer3D_method_soft_body_get_collision_layer>`

返回给定柔性物体所属的物理层。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_soft_body_get_collision_mask:

.. rst-class:: classref-method

:ref:`int<class_int>` **soft_body_get_collision_mask**\ (\ body\: :ref:`RID<class_RID>`\ ) |const| :ref:`🔗<class_PhysicsServer3D_method_soft_body_get_collision_mask>`

返回给定柔性物体可以碰撞的物理层。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_soft_body_get_damping_coefficient:

.. rst-class:: classref-method

:ref:`float<class_float>` **soft_body_get_damping_coefficient**\ (\ body\: :ref:`RID<class_RID>`\ ) |const| :ref:`🔗<class_PhysicsServer3D_method_soft_body_get_damping_coefficient>`

返回给定柔性物体的阻尼系数。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_soft_body_get_drag_coefficient:

.. rst-class:: classref-method

:ref:`float<class_float>` **soft_body_get_drag_coefficient**\ (\ body\: :ref:`RID<class_RID>`\ ) |const| :ref:`🔗<class_PhysicsServer3D_method_soft_body_get_drag_coefficient>`

返回给定柔性物体的阻力系数。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_soft_body_get_linear_stiffness:

.. rst-class:: classref-method

:ref:`float<class_float>` **soft_body_get_linear_stiffness**\ (\ body\: :ref:`RID<class_RID>`\ ) |const| :ref:`🔗<class_PhysicsServer3D_method_soft_body_get_linear_stiffness>`

返回给定柔性物体的线性刚度。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_soft_body_get_point_global_position:

.. rst-class:: classref-method

:ref:`Vector3<class_Vector3>` **soft_body_get_point_global_position**\ (\ body\: :ref:`RID<class_RID>`, point_index\: :ref:`int<class_int>`\ ) |const| :ref:`🔗<class_PhysicsServer3D_method_soft_body_get_point_global_position>`

返回给定柔性物体点在全局坐标中的当前位置。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_soft_body_get_pressure_coefficient:

.. rst-class:: classref-method

:ref:`float<class_float>` **soft_body_get_pressure_coefficient**\ (\ body\: :ref:`RID<class_RID>`\ ) |const| :ref:`🔗<class_PhysicsServer3D_method_soft_body_get_pressure_coefficient>`

返回给定柔性物体的压力系数。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_soft_body_get_simulation_precision:

.. rst-class:: classref-method

:ref:`int<class_int>` **soft_body_get_simulation_precision**\ (\ body\: :ref:`RID<class_RID>`\ ) |const| :ref:`🔗<class_PhysicsServer3D_method_soft_body_get_simulation_precision>`

返回给定柔性物体的模拟精度。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_soft_body_get_space:

.. rst-class:: classref-method

:ref:`RID<class_RID>` **soft_body_get_space**\ (\ body\: :ref:`RID<class_RID>`\ ) |const| :ref:`🔗<class_PhysicsServer3D_method_soft_body_get_space>`

返回分配给给定柔性物体的空间的 :ref:`RID<class_RID>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_soft_body_get_state:

.. rst-class:: classref-method

:ref:`Variant<class_Variant>` **soft_body_get_state**\ (\ body\: :ref:`RID<class_RID>`, state\: :ref:`BodyState<enum_PhysicsServer3D_BodyState>`\ ) |const| :ref:`🔗<class_PhysicsServer3D_method_soft_body_get_state>`

返回给定的柔性物体状态（见 :ref:`BodyState<enum_PhysicsServer3D_BodyState>` 常量）。

\ **注意：**\ Godot 的默认物理实现不支持 :ref:`BODY_STATE_LINEAR_VELOCITY<class_PhysicsServer3D_constant_BODY_STATE_LINEAR_VELOCITY>`\ 、\ :ref:`BODY_STATE_ANGULAR_VELOCITY<class_PhysicsServer3D_constant_BODY_STATE_ANGULAR_VELOCITY>`\ 、\ :ref:`BODY_STATE_SLEEPING<class_PhysicsServer3D_constant_BODY_STATE_SLEEPING>` 或 :ref:`BODY_STATE_CAN_SLEEP<class_PhysicsServer3D_constant_BODY_STATE_CAN_SLEEP>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_soft_body_get_total_mass:

.. rst-class:: classref-method

:ref:`float<class_float>` **soft_body_get_total_mass**\ (\ body\: :ref:`RID<class_RID>`\ ) |const| :ref:`🔗<class_PhysicsServer3D_method_soft_body_get_total_mass>`

返回分配给给定柔性物体的总质量。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_soft_body_is_point_pinned:

.. rst-class:: classref-method

:ref:`bool<class_bool>` **soft_body_is_point_pinned**\ (\ body\: :ref:`RID<class_RID>`, point_index\: :ref:`int<class_int>`\ ) |const| :ref:`🔗<class_PhysicsServer3D_method_soft_body_is_point_pinned>`

返回给定的柔性物体点是否已固定。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_soft_body_move_point:

.. rst-class:: classref-method

|void| **soft_body_move_point**\ (\ body\: :ref:`RID<class_RID>`, point_index\: :ref:`int<class_int>`, global_position\: :ref:`Vector3<class_Vector3>`\ ) :ref:`🔗<class_PhysicsServer3D_method_soft_body_move_point>`

将给定的柔性物体点移动到全局坐标中的某个位置。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_soft_body_pin_point:

.. rst-class:: classref-method

|void| **soft_body_pin_point**\ (\ body\: :ref:`RID<class_RID>`, point_index\: :ref:`int<class_int>`, pin\: :ref:`bool<class_bool>`\ ) :ref:`🔗<class_PhysicsServer3D_method_soft_body_pin_point>`

根据 ``pin`` 的值固定或取消固定给定的柔性物体点。

\ **注意：**\ 固定一个点可以有效地使其成为运动学的，从而防止其受到力的影响，但你仍然可以使用 :ref:`soft_body_move_point<class_PhysicsServer3D_method_soft_body_move_point>` 移动它。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_soft_body_remove_all_pinned_points:

.. rst-class:: classref-method

|void| **soft_body_remove_all_pinned_points**\ (\ body\: :ref:`RID<class_RID>`\ ) :ref:`🔗<class_PhysicsServer3D_method_soft_body_remove_all_pinned_points>`

取消固定给定柔性物体的所有点。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_soft_body_remove_collision_exception:

.. rst-class:: classref-method

|void| **soft_body_remove_collision_exception**\ (\ body\: :ref:`RID<class_RID>`, body_b\: :ref:`RID<class_RID>`\ ) :ref:`🔗<class_PhysicsServer3D_method_soft_body_remove_collision_exception>`

从免于碰撞的物体列表中移除给定的物体。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_soft_body_set_collision_layer:

.. rst-class:: classref-method

|void| **soft_body_set_collision_layer**\ (\ body\: :ref:`RID<class_RID>`, layer\: :ref:`int<class_int>`\ ) :ref:`🔗<class_PhysicsServer3D_method_soft_body_set_collision_layer>`

设置给定柔性物体所属的物理层。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_soft_body_set_collision_mask:

.. rst-class:: classref-method

|void| **soft_body_set_collision_mask**\ (\ body\: :ref:`RID<class_RID>`, mask\: :ref:`int<class_int>`\ ) :ref:`🔗<class_PhysicsServer3D_method_soft_body_set_collision_mask>`

设置给定柔性物体可以碰撞的物理层。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_soft_body_set_damping_coefficient:

.. rst-class:: classref-method

|void| **soft_body_set_damping_coefficient**\ (\ body\: :ref:`RID<class_RID>`, damping_coefficient\: :ref:`float<class_float>`\ ) :ref:`🔗<class_PhysicsServer3D_method_soft_body_set_damping_coefficient>`

设置给定柔性物体的阻尼系数。当施加力时，较高的值会更明显地减慢物体的速度。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_soft_body_set_drag_coefficient:

.. rst-class:: classref-method

|void| **soft_body_set_drag_coefficient**\ (\ body\: :ref:`RID<class_RID>`, drag_coefficient\: :ref:`float<class_float>`\ ) :ref:`🔗<class_PhysicsServer3D_method_soft_body_set_drag_coefficient>`

设置给定柔性物体的阻力系数。较高的值会增加该物体的空气阻力。

\ **注意：**\ Godot 的默认物理实现当前未使用该值。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_soft_body_set_linear_stiffness:

.. rst-class:: classref-method

|void| **soft_body_set_linear_stiffness**\ (\ body\: :ref:`RID<class_RID>`, stiffness\: :ref:`float<class_float>`\ ) :ref:`🔗<class_PhysicsServer3D_method_soft_body_set_linear_stiffness>`

设置给定柔性物体的线性刚度。较高的值将导致物体更僵硬，而较低的值将增加物体的弯曲能力。该值可以介于 ``0.0`` 和 ``1.0`` （含）之间。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_soft_body_set_mesh:

.. rst-class:: classref-method

|void| **soft_body_set_mesh**\ (\ body\: :ref:`RID<class_RID>`, mesh\: :ref:`RID<class_RID>`\ ) :ref:`🔗<class_PhysicsServer3D_method_soft_body_set_mesh>`

设置给定柔性物体的网格。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_soft_body_set_pressure_coefficient:

.. rst-class:: classref-method

|void| **soft_body_set_pressure_coefficient**\ (\ body\: :ref:`RID<class_RID>`, pressure_coefficient\: :ref:`float<class_float>`\ ) :ref:`🔗<class_PhysicsServer3D_method_soft_body_set_pressure_coefficient>`

设置给定柔性物体的压力系数。模拟物体内部的压力积聚。较高的值会增加该效果的强度。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_soft_body_set_ray_pickable:

.. rst-class:: classref-method

|void| **soft_body_set_ray_pickable**\ (\ body\: :ref:`RID<class_RID>`, enable\: :ref:`bool<class_bool>`\ ) :ref:`🔗<class_PhysicsServer3D_method_soft_body_set_ray_pickable>`

设置在使用对象拾取时给定柔性物体是否可拾取。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_soft_body_set_simulation_precision:

.. rst-class:: classref-method

|void| **soft_body_set_simulation_precision**\ (\ body\: :ref:`RID<class_RID>`, simulation_precision\: :ref:`int<class_int>`\ ) :ref:`🔗<class_PhysicsServer3D_method_soft_body_set_simulation_precision>`

设置给定柔性物体的模拟精度。增加该值将改善模拟结果，但会影响性能。请小心使用。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_soft_body_set_space:

.. rst-class:: classref-method

|void| **soft_body_set_space**\ (\ body\: :ref:`RID<class_RID>`, space\: :ref:`RID<class_RID>`\ ) :ref:`🔗<class_PhysicsServer3D_method_soft_body_set_space>`

为给定的柔性物体分配一个空间（请参阅 :ref:`space_create<class_PhysicsServer3D_method_space_create>`\ ）。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_soft_body_set_state:

.. rst-class:: classref-method

|void| **soft_body_set_state**\ (\ body\: :ref:`RID<class_RID>`, state\: :ref:`BodyState<enum_PhysicsServer3D_BodyState>`, variant\: :ref:`Variant<class_Variant>`\ ) :ref:`🔗<class_PhysicsServer3D_method_soft_body_set_state>`

设置给定物体的给定物体状态（见 :ref:`BodyState<enum_PhysicsServer3D_BodyState>` 常量）。

\ **注意：**\ Godot 的默认物理实现不支持 :ref:`BODY_STATE_LINEAR_VELOCITY<class_PhysicsServer3D_constant_BODY_STATE_LINEAR_VELOCITY>`\ 、\ :ref:`BODY_STATE_ANGULAR_VELOCITY<class_PhysicsServer3D_constant_BODY_STATE_ANGULAR_VELOCITY>`\ 、\ :ref:`BODY_STATE_SLEEPING<class_PhysicsServer3D_constant_BODY_STATE_SLEEPING>` 或 :ref:`BODY_STATE_CAN_SLEEP<class_PhysicsServer3D_constant_BODY_STATE_CAN_SLEEP>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_soft_body_set_total_mass:

.. rst-class:: classref-method

|void| **soft_body_set_total_mass**\ (\ body\: :ref:`RID<class_RID>`, total_mass\: :ref:`float<class_float>`\ ) :ref:`🔗<class_PhysicsServer3D_method_soft_body_set_total_mass>`

设置给定柔性物体的总质量。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_soft_body_set_transform:

.. rst-class:: classref-method

|void| **soft_body_set_transform**\ (\ body\: :ref:`RID<class_RID>`, transform\: :ref:`Transform3D<class_Transform3D>`\ ) :ref:`🔗<class_PhysicsServer3D_method_soft_body_set_transform>`

设置给定柔性物体的全局变换。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_soft_body_update_rendering_server:

.. rst-class:: classref-method

|void| **soft_body_update_rendering_server**\ (\ body\: :ref:`RID<class_RID>`, rendering_server_handler\: :ref:`PhysicsServer3DRenderingServerHandler<class_PhysicsServer3DRenderingServerHandler>`\ ) :ref:`🔗<class_PhysicsServer3D_method_soft_body_update_rendering_server>`

请求物理服务器通过 ``rendering_server_handler`` 接口用给定柔性物体点的最新位置更新渲染服务器。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_space_create:

.. rst-class:: classref-method

:ref:`RID<class_RID>` **space_create**\ (\ ) :ref:`🔗<class_PhysicsServer3D_method_space_create>`

创建一个空间。空间是物理引擎的参数集合，可以分配给区域或主体。它可以通过 :ref:`area_set_space<class_PhysicsServer3D_method_area_set_space>` 分配给一个区域，或者通过 :ref:`body_set_space<class_PhysicsServer3D_method_body_set_space>` 分配给一个主体。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_space_get_direct_state:

.. rst-class:: classref-method

:ref:`PhysicsDirectSpaceState3D<class_PhysicsDirectSpaceState3D>` **space_get_direct_state**\ (\ space\: :ref:`RID<class_RID>`\ ) :ref:`🔗<class_PhysicsServer3D_method_space_get_direct_state>`

返回空间的状态，即 :ref:`PhysicsDirectSpaceState3D<class_PhysicsDirectSpaceState3D>`\ 。该对象可用于进行碰撞/相交的查询。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_space_get_param:

.. rst-class:: classref-method

:ref:`float<class_float>` **space_get_param**\ (\ space\: :ref:`RID<class_RID>`, param\: :ref:`SpaceParameter<enum_PhysicsServer3D_SpaceParameter>`\ ) |const| :ref:`🔗<class_PhysicsServer3D_method_space_get_param>`

返回空间参数的值。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_space_is_active:

.. rst-class:: classref-method

:ref:`bool<class_bool>` **space_is_active**\ (\ space\: :ref:`RID<class_RID>`\ ) |const| :ref:`🔗<class_PhysicsServer3D_method_space_is_active>`

返回该空间是否是活动的。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_space_set_active:

.. rst-class:: classref-method

|void| **space_set_active**\ (\ space\: :ref:`RID<class_RID>`, active\: :ref:`bool<class_bool>`\ ) :ref:`🔗<class_PhysicsServer3D_method_space_set_active>`

将空间标记为活动空间。它不会有效果，除非它被分配到一个区域或物体。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_space_set_param:

.. rst-class:: classref-method

|void| **space_set_param**\ (\ space\: :ref:`RID<class_RID>`, param\: :ref:`SpaceParameter<enum_PhysicsServer3D_SpaceParameter>`, value\: :ref:`float<class_float>`\ ) :ref:`🔗<class_PhysicsServer3D_method_space_set_param>`

设置空间参数的值。可用参数列表位于 :ref:`SpaceParameter<enum_PhysicsServer3D_SpaceParameter>` 常量上。

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_sphere_shape_create:

.. rst-class:: classref-method

:ref:`RID<class_RID>` **sphere_shape_create**\ (\ ) :ref:`🔗<class_PhysicsServer3D_method_sphere_shape_create>`

.. container:: contribute

	目前没有这个方法的描述。请帮我们\ :ref:`贡献一个 <doc_updating_the_class_reference>`\ ！

.. rst-class:: classref-item-separator

----

.. _class_PhysicsServer3D_method_world_boundary_shape_create:

.. rst-class:: classref-method

:ref:`RID<class_RID>` **world_boundary_shape_create**\ (\ ) :ref:`🔗<class_PhysicsServer3D_method_world_boundary_shape_create>`

.. container:: contribute

	目前没有这个方法的描述。请帮我们\ :ref:`贡献一个 <doc_updating_the_class_reference>`\ ！

.. |virtual| replace:: :abbr:`virtual (本方法通常需要用户覆盖才能生效。)`
.. |const| replace:: :abbr:`const (本方法没有副作用，不会修改该实例的任何成员变量。)`
.. |vararg| replace:: :abbr:`vararg (本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。)`
.. |constructor| replace:: :abbr:`constructor (本方法用于构造某个类型。)`
.. |static| replace:: :abbr:`static (调用本方法无需实例，可直接使用类名进行调用。)`
.. |operator| replace:: :abbr:`operator (本方法描述的是使用本类型作为左操作数的有效操作符。)`
.. |bitfield| replace:: :abbr:`BitField (这个值是由下列标志构成的位掩码整数。)`
.. |void| replace:: :abbr:`void (无返回值。)`

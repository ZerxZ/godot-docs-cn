:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/4.2/modules/gltf/doc_classes/GLTFPhysicsBody.xml.

.. _class_GLTFPhysicsBody:

GLTFPhysicsBody
===============

**继承：** :ref:`Resource<class_Resource>` **<** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`

代表 GLTF 物理体。

.. rst-class:: classref-introduction-group

描述
----

代表 ``OMI_physics_body`` GLTF 扩展中定义的物理体。这个类是 GLTF 数据与 Godot 节点的中介，并且经过了抽象，支持将来加入各种 GLTF 物理扩展。

.. rst-class:: classref-introduction-group

教程
----

- :doc:`运行时文件加载与保存 <../tutorials/io/runtime_file_loading_and_saving>`

- `OMI_physics_body GLTF 扩展 <https://github.com/omigroup/gltf-extensions/tree/main/extensions/2.0/OMI_physics_body>`__

.. rst-class:: classref-reftable-group

属性
----

.. table::
   :widths: auto

   +-------------------------------+--------------------------------------------------------------------------+--------------------------------------+
   | :ref:`Vector3<class_Vector3>` | :ref:`angular_velocity<class_GLTFPhysicsBody_property_angular_velocity>` | ``Vector3(0, 0, 0)``                 |
   +-------------------------------+--------------------------------------------------------------------------+--------------------------------------+
   | :ref:`String<class_String>`   | :ref:`body_type<class_GLTFPhysicsBody_property_body_type>`               | ``"static"``                         |
   +-------------------------------+--------------------------------------------------------------------------+--------------------------------------+
   | :ref:`Vector3<class_Vector3>` | :ref:`center_of_mass<class_GLTFPhysicsBody_property_center_of_mass>`     | ``Vector3(0, 0, 0)``                 |
   +-------------------------------+--------------------------------------------------------------------------+--------------------------------------+
   | :ref:`Basis<class_Basis>`     | :ref:`inertia_tensor<class_GLTFPhysicsBody_property_inertia_tensor>`     | ``Basis(0, 0, 0, 0, 0, 0, 0, 0, 0)`` |
   +-------------------------------+--------------------------------------------------------------------------+--------------------------------------+
   | :ref:`Vector3<class_Vector3>` | :ref:`linear_velocity<class_GLTFPhysicsBody_property_linear_velocity>`   | ``Vector3(0, 0, 0)``                 |
   +-------------------------------+--------------------------------------------------------------------------+--------------------------------------+
   | :ref:`float<class_float>`     | :ref:`mass<class_GLTFPhysicsBody_property_mass>`                         | ``1.0``                              |
   +-------------------------------+--------------------------------------------------------------------------+--------------------------------------+

.. rst-class:: classref-reftable-group

方法
----

.. table::
   :widths: auto

   +---------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`GLTFPhysicsBody<class_GLTFPhysicsBody>`     | :ref:`from_dictionary<class_GLTFPhysicsBody_method_from_dictionary>` **(** :ref:`Dictionary<class_Dictionary>` dictionary **)** |static|  |
   +---------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`GLTFPhysicsBody<class_GLTFPhysicsBody>`     | :ref:`from_node<class_GLTFPhysicsBody_method_from_node>` **(** :ref:`CollisionObject3D<class_CollisionObject3D>` body_node **)** |static| |
   +---------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Dictionary<class_Dictionary>`               | :ref:`to_dictionary<class_GLTFPhysicsBody_method_to_dictionary>` **(** **)** |const|                                                      |
   +---------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`CollisionObject3D<class_CollisionObject3D>` | :ref:`to_node<class_GLTFPhysicsBody_method_to_node>` **(** **)** |const|                                                                  |
   +---------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

属性说明
--------

.. _class_GLTFPhysicsBody_property_angular_velocity:

.. rst-class:: classref-property

:ref:`Vector3<class_Vector3>` **angular_velocity** = ``Vector3(0, 0, 0)``

.. rst-class:: classref-property-setget

- void **set_angular_velocity** **(** :ref:`Vector3<class_Vector3>` value **)**
- :ref:`Vector3<class_Vector3>` **get_angular_velocity** **(** **)**

该物理体的角速度，单位为弧度每秒。仅在物体类型为“rigid”或“vehicle”时使用。

.. rst-class:: classref-item-separator

----

.. _class_GLTFPhysicsBody_property_body_type:

.. rst-class:: classref-property

:ref:`String<class_String>` **body_type** = ``"static"``

.. rst-class:: classref-property-setget

- void **set_body_type** **(** :ref:`String<class_String>` value **)**
- :ref:`String<class_String>` **get_body_type** **(** **)**

该物体的类型。导入时，控制 Godot 应该生成何种类型的 :ref:`CollisionObject3D<class_CollisionObject3D>` 节点。有效值有“static”“kinematic”“character”“rigid”“vehicle”“trigger”。

.. rst-class:: classref-item-separator

----

.. _class_GLTFPhysicsBody_property_center_of_mass:

.. rst-class:: classref-property

:ref:`Vector3<class_Vector3>` **center_of_mass** = ``Vector3(0, 0, 0)``

.. rst-class:: classref-property-setget

- void **set_center_of_mass** **(** :ref:`Vector3<class_Vector3>` value **)**
- :ref:`Vector3<class_Vector3>` **get_center_of_mass** **(** **)**

该物体的质心，单位为米。使用相对于物体的局部空间。质心默认为物体的原点。

.. rst-class:: classref-item-separator

----

.. _class_GLTFPhysicsBody_property_inertia_tensor:

.. rst-class:: classref-property

:ref:`Basis<class_Basis>` **inertia_tensor** = ``Basis(0, 0, 0, 0, 0, 0, 0, 0, 0)``

.. rst-class:: classref-property-setget

- void **set_inertia_tensor** **(** :ref:`Basis<class_Basis>` value **)**
- :ref:`Basis<class_Basis>` **get_inertia_tensor** **(** **)**

该物理体的惯性张量，单位为千克平方米（kg⋅m²）。仅在物体类型为“rigid”或“vehicle”时使用。

转换为 Godot :ref:`RigidBody3D<class_RigidBody3D>` 节点时，如果该值为零，则会自动计算惯性。

.. rst-class:: classref-item-separator

----

.. _class_GLTFPhysicsBody_property_linear_velocity:

.. rst-class:: classref-property

:ref:`Vector3<class_Vector3>` **linear_velocity** = ``Vector3(0, 0, 0)``

.. rst-class:: classref-property-setget

- void **set_linear_velocity** **(** :ref:`Vector3<class_Vector3>` value **)**
- :ref:`Vector3<class_Vector3>` **get_linear_velocity** **(** **)**

该物理体的线速度，单位为米每秒。仅在物体类型为“rigid”或“vehicle”时使用。

.. rst-class:: classref-item-separator

----

.. _class_GLTFPhysicsBody_property_mass:

.. rst-class:: classref-property

:ref:`float<class_float>` **mass** = ``1.0``

.. rst-class:: classref-property-setget

- void **set_mass** **(** :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_mass** **(** **)**

该物理体的质量，单位为千克。仅在物体类型为“rigid”或“vehicle”时使用。

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

方法说明
--------

.. _class_GLTFPhysicsBody_method_from_dictionary:

.. rst-class:: classref-method

:ref:`GLTFPhysicsBody<class_GLTFPhysicsBody>` **from_dictionary** **(** :ref:`Dictionary<class_Dictionary>` dictionary **)** |static|

通过解析给定的 :ref:`Dictionary<class_Dictionary>` 新建 GLTFPhysicsBody 实例。

.. rst-class:: classref-item-separator

----

.. _class_GLTFPhysicsBody_method_from_node:

.. rst-class:: classref-method

:ref:`GLTFPhysicsBody<class_GLTFPhysicsBody>` **from_node** **(** :ref:`CollisionObject3D<class_CollisionObject3D>` body_node **)** |static|

从给定的 Godot :ref:`CollisionObject3D<class_CollisionObject3D>` 节点新建 GLTFPhysicsBody 实例。

.. rst-class:: classref-item-separator

----

.. _class_GLTFPhysicsBody_method_to_dictionary:

.. rst-class:: classref-method

:ref:`Dictionary<class_Dictionary>` **to_dictionary** **(** **)** |const|

将这个 GLTFPhysicsBody 实例序列化为 :ref:`Dictionary<class_Dictionary>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_GLTFPhysicsBody_method_to_node:

.. rst-class:: classref-method

:ref:`CollisionObject3D<class_CollisionObject3D>` **to_node** **(** **)** |const|

将这个 GLTFPhysicsBody 实例转换为 Godot :ref:`CollisionObject3D<class_CollisionObject3D>` 节点。

.. |virtual| replace:: :abbr:`virtual (本方法通常需要用户覆盖才能生效。)`
.. |const| replace:: :abbr:`const (本方法没有副作用。不会修改该实例的任何成员变量。)`
.. |vararg| replace:: :abbr:`vararg (本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。)`
.. |constructor| replace:: :abbr:`constructor (本方法用于构造某个类型。)`
.. |static| replace:: :abbr:`static (调用本方法无需实例，所以可以直接使用类名调用。)`
.. |operator| replace:: :abbr:`operator (本方法描述的是使用本类型作为左操作数的有效操作符。)`
.. |bitfield| replace:: :abbr:`BitField (这个值是由下列标志构成的位掩码整数。)`

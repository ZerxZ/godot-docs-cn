:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/ShapeCast2D.xml.

.. _class_ShapeCast2D:

ShapeCast2D
===========

**继承：** :ref:`Node2D<class_Node2D>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

2D 形状，会扫描空间中某个区域，用于检测 :ref:`CollisionObject2D<class_CollisionObject2D>`\ 。

.. rst-class:: classref-introduction-group

描述
----

形状投射会将其 :ref:`shape<class_ShapeCast2D_property_shape>` 沿着 :ref:`target_position<class_ShapeCast2D_property_target_position>` 确定的投射方向进行扫描，能够检测到碰撞对象。类似于 :ref:`RayCast2D<class_RayCast2D>`\ ，但是能够扫描空间中的一个区域，而不仅仅是一条直线。\ **ShapeCast2D** 能够检测到多个碰撞对象。可用于实现较宽的激光射线，或者将简单的形状吸附到地面。

要立即检测碰撞重叠，可以将 :ref:`target_position<class_ShapeCast2D_property_target_position>` 设置为 ``Vector2(0, 0)``\ ，并在同一个物理帧中调用 :ref:`force_shapecast_update<class_ShapeCast2D_method_force_shapecast_update>`\ 。这样就能够克服 :ref:`Area2D<class_Area2D>` 在进行连续区域检测时的局限性，因为它无法立即获取碰撞信息。

\ **注意：**\ 形状投射比射线投射的计算量更大。

.. rst-class:: classref-reftable-group

属性
----

.. table::
   :widths: auto

   +-------------------------------+----------------------------------------------------------------------------+--------------------+
   | :ref:`bool<class_bool>`       | :ref:`collide_with_areas<class_ShapeCast2D_property_collide_with_areas>`   | ``false``          |
   +-------------------------------+----------------------------------------------------------------------------+--------------------+
   | :ref:`bool<class_bool>`       | :ref:`collide_with_bodies<class_ShapeCast2D_property_collide_with_bodies>` | ``true``           |
   +-------------------------------+----------------------------------------------------------------------------+--------------------+
   | :ref:`int<class_int>`         | :ref:`collision_mask<class_ShapeCast2D_property_collision_mask>`           | ``1``              |
   +-------------------------------+----------------------------------------------------------------------------+--------------------+
   | :ref:`Array<class_Array>`     | :ref:`collision_result<class_ShapeCast2D_property_collision_result>`       | ``[]``             |
   +-------------------------------+----------------------------------------------------------------------------+--------------------+
   | :ref:`bool<class_bool>`       | :ref:`enabled<class_ShapeCast2D_property_enabled>`                         | ``true``           |
   +-------------------------------+----------------------------------------------------------------------------+--------------------+
   | :ref:`bool<class_bool>`       | :ref:`exclude_parent<class_ShapeCast2D_property_exclude_parent>`           | ``true``           |
   +-------------------------------+----------------------------------------------------------------------------+--------------------+
   | :ref:`float<class_float>`     | :ref:`margin<class_ShapeCast2D_property_margin>`                           | ``0.0``            |
   +-------------------------------+----------------------------------------------------------------------------+--------------------+
   | :ref:`int<class_int>`         | :ref:`max_results<class_ShapeCast2D_property_max_results>`                 | ``32``             |
   +-------------------------------+----------------------------------------------------------------------------+--------------------+
   | :ref:`Shape2D<class_Shape2D>` | :ref:`shape<class_ShapeCast2D_property_shape>`                             |                    |
   +-------------------------------+----------------------------------------------------------------------------+--------------------+
   | :ref:`Vector2<class_Vector2>` | :ref:`target_position<class_ShapeCast2D_property_target_position>`         | ``Vector2(0, 50)`` |
   +-------------------------------+----------------------------------------------------------------------------+--------------------+

.. rst-class:: classref-reftable-group

方法
----

.. table::
   :widths: auto

   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                          | :ref:`add_exception<class_ShapeCast2D_method_add_exception>` **(** :ref:`CollisionObject2D<class_CollisionObject2D>` node **)**                                  |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                          | :ref:`add_exception_rid<class_ShapeCast2D_method_add_exception_rid>` **(** :ref:`RID<class_RID>` rid **)**                                                       |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                          | :ref:`clear_exceptions<class_ShapeCast2D_method_clear_exceptions>` **(** **)**                                                                                   |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                          | :ref:`force_shapecast_update<class_ShapeCast2D_method_force_shapecast_update>` **(** **)**                                                                       |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`float<class_float>`     | :ref:`get_closest_collision_safe_fraction<class_ShapeCast2D_method_get_closest_collision_safe_fraction>` **(** **)** |const|                                     |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`float<class_float>`     | :ref:`get_closest_collision_unsafe_fraction<class_ShapeCast2D_method_get_closest_collision_unsafe_fraction>` **(** **)** |const|                                 |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Object<class_Object>`   | :ref:`get_collider<class_ShapeCast2D_method_get_collider>` **(** :ref:`int<class_int>` index **)** |const|                                                       |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`RID<class_RID>`         | :ref:`get_collider_rid<class_ShapeCast2D_method_get_collider_rid>` **(** :ref:`int<class_int>` index **)** |const|                                               |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`         | :ref:`get_collider_shape<class_ShapeCast2D_method_get_collider_shape>` **(** :ref:`int<class_int>` index **)** |const|                                           |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`         | :ref:`get_collision_count<class_ShapeCast2D_method_get_collision_count>` **(** **)** |const|                                                                     |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`       | :ref:`get_collision_mask_value<class_ShapeCast2D_method_get_collision_mask_value>` **(** :ref:`int<class_int>` layer_number **)** |const|                        |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector2<class_Vector2>` | :ref:`get_collision_normal<class_ShapeCast2D_method_get_collision_normal>` **(** :ref:`int<class_int>` index **)** |const|                                       |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector2<class_Vector2>` | :ref:`get_collision_point<class_ShapeCast2D_method_get_collision_point>` **(** :ref:`int<class_int>` index **)** |const|                                         |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`       | :ref:`is_colliding<class_ShapeCast2D_method_is_colliding>` **(** **)** |const|                                                                                   |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                          | :ref:`remove_exception<class_ShapeCast2D_method_remove_exception>` **(** :ref:`CollisionObject2D<class_CollisionObject2D>` node **)**                            |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                          | :ref:`remove_exception_rid<class_ShapeCast2D_method_remove_exception_rid>` **(** :ref:`RID<class_RID>` rid **)**                                                 |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                          | :ref:`set_collision_mask_value<class_ShapeCast2D_method_set_collision_mask_value>` **(** :ref:`int<class_int>` layer_number, :ref:`bool<class_bool>` value **)** |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

属性说明
--------

.. _class_ShapeCast2D_property_collide_with_areas:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **collide_with_areas** = ``false``

.. rst-class:: classref-property-setget

- void **set_collide_with_areas** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **is_collide_with_areas_enabled** **(** **)**

如果为 ``true``\ ，则会报告与 :ref:`Area2D<class_Area2D>` 的碰撞。

.. rst-class:: classref-item-separator

----

.. _class_ShapeCast2D_property_collide_with_bodies:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **collide_with_bodies** = ``true``

.. rst-class:: classref-property-setget

- void **set_collide_with_bodies** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **is_collide_with_bodies_enabled** **(** **)**

如果为 ``true``\ ，则会报告与 :ref:`PhysicsBody2D<class_PhysicsBody2D>` 的碰撞。

.. rst-class:: classref-item-separator

----

.. _class_ShapeCast2D_property_collision_mask:

.. rst-class:: classref-property

:ref:`int<class_int>` **collision_mask** = ``1``

.. rst-class:: classref-property-setget

- void **set_collision_mask** **(** :ref:`int<class_int>` value **)**
- :ref:`int<class_int>` **get_collision_mask** **(** **)**

该形状的碰撞掩码。只有至少启用了一个在该掩码中的碰撞层的对象才会被检测到。

.. rst-class:: classref-item-separator

----

.. _class_ShapeCast2D_property_collision_result:

.. rst-class:: classref-property

:ref:`Array<class_Array>` **collision_result** = ``[]``

从碰撞扫描中返回完整的碰撞信息。返回的数据与 :ref:`PhysicsDirectSpaceState2D.get_rest_info<class_PhysicsDirectSpaceState2D_method_get_rest_info>` 方法中的数据相同。

.. rst-class:: classref-item-separator

----

.. _class_ShapeCast2D_property_enabled:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **enabled** = ``true``

.. rst-class:: classref-property-setget

- void **set_enabled** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **is_enabled** **(** **)**

如果为 ``true``\ ，将报告碰撞。

.. rst-class:: classref-item-separator

----

.. _class_ShapeCast2D_property_exclude_parent:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **exclude_parent** = ``true``

.. rst-class:: classref-property-setget

- void **set_exclude_parent_body** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **get_exclude_parent_body** **(** **)**

如果为 ``true``\ ，父节点将被排除在碰撞检测之外。

.. rst-class:: classref-item-separator

----

.. _class_ShapeCast2D_property_margin:

.. rst-class:: classref-property

:ref:`float<class_float>` **margin** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_margin** **(** :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_margin** **(** **)**

该形状的碰撞边距。较大的边距有助于更一致地检测碰撞，但代价是牺牲精度。

.. rst-class:: classref-item-separator

----

.. _class_ShapeCast2D_property_max_results:

.. rst-class:: classref-property

:ref:`int<class_int>` **max_results** = ``32``

.. rst-class:: classref-property-setget

- void **set_max_results** **(** :ref:`int<class_int>` value **)**
- :ref:`int<class_int>` **get_max_results** **(** **)**

可以使用这个参数来限制相交点的数量，减少处理时间。

.. rst-class:: classref-item-separator

----

.. _class_ShapeCast2D_property_shape:

.. rst-class:: classref-property

:ref:`Shape2D<class_Shape2D>` **shape**

.. rst-class:: classref-property-setget

- void **set_shape** **(** :ref:`Shape2D<class_Shape2D>` value **)**
- :ref:`Shape2D<class_Shape2D>` **get_shape** **(** **)**

派生自 :ref:`Shape2D<class_Shape2D>` 的形状，用于碰撞查询。

.. rst-class:: classref-item-separator

----

.. _class_ShapeCast2D_property_target_position:

.. rst-class:: classref-property

:ref:`Vector2<class_Vector2>` **target_position** = ``Vector2(0, 50)``

.. rst-class:: classref-property-setget

- void **set_target_position** **(** :ref:`Vector2<class_Vector2>` value **)**
- :ref:`Vector2<class_Vector2>` **get_target_position** **(** **)**

该形状的目标点，相对于该节点的 ``position``\ 。

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

方法说明
--------

.. _class_ShapeCast2D_method_add_exception:

.. rst-class:: classref-method

void **add_exception** **(** :ref:`CollisionObject2D<class_CollisionObject2D>` node **)**

添加碰撞例外，使该形状不汇报与指定 :ref:`CollisionObject2D<class_CollisionObject2D>` 节点的碰撞。

.. rst-class:: classref-item-separator

----

.. _class_ShapeCast2D_method_add_exception_rid:

.. rst-class:: classref-method

void **add_exception_rid** **(** :ref:`RID<class_RID>` rid **)**

添加碰撞例外，使该形状不汇报与指定 :ref:`RID<class_RID>` 节点的碰撞。

.. rst-class:: classref-item-separator

----

.. _class_ShapeCast2D_method_clear_exceptions:

.. rst-class:: classref-method

void **clear_exceptions** **(** **)**

移除该形状的所有碰撞例外。

.. rst-class:: classref-item-separator

----

.. _class_ShapeCast2D_method_force_shapecast_update:

.. rst-class:: classref-method

void **force_shapecast_update** **(** **)**

立即更新形状的碰撞信息，不等待下一次的 ``_physics_process`` 调用。例如，请在形状或其父级更改状态后使用该方法。

\ **注意：**\ 不需要 ``enabled == true`` 即可生效。

.. rst-class:: classref-item-separator

----

.. _class_ShapeCast2D_method_get_closest_collision_safe_fraction:

.. rst-class:: classref-method

:ref:`float<class_float>` **get_closest_collision_safe_fraction** **(** **)** |const|

从 **ShapeCast2D** 的原点到其 :ref:`target_position<class_ShapeCast2D_property_target_position>`\ （介于 0 和 1 之间）的分数，即形状可以在不触发碰撞的情况下移动多远。

.. rst-class:: classref-item-separator

----

.. _class_ShapeCast2D_method_get_closest_collision_unsafe_fraction:

.. rst-class:: classref-method

:ref:`float<class_float>` **get_closest_collision_unsafe_fraction** **(** **)** |const|

从 **ShapeCast2D** 的原点到其 :ref:`target_position<class_ShapeCast2D_property_target_position>`\ （介于 0 和 1 之间）的分数，即形状必须移动多远才能触发碰撞。

.. rst-class:: classref-item-separator

----

.. _class_ShapeCast2D_method_get_collider:

.. rst-class:: classref-method

:ref:`Object<class_Object>` **get_collider** **(** :ref:`int<class_int>` index **)** |const|

返回 ``index`` 处多次碰撞之一的碰撞 :ref:`Object<class_Object>`\ ，如果没有对象与形状相交（即 :ref:`is_colliding<class_ShapeCast2D_method_is_colliding>` 返回 ``false``\ ），则返回 ``null``\ 。

.. rst-class:: classref-item-separator

----

.. _class_ShapeCast2D_method_get_collider_rid:

.. rst-class:: classref-method

:ref:`RID<class_RID>` **get_collider_rid** **(** :ref:`int<class_int>` index **)** |const|

返回 ``index`` 处多次碰撞之一的碰撞对象的 :ref:`RID<class_RID>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_ShapeCast2D_method_get_collider_shape:

.. rst-class:: classref-method

:ref:`int<class_int>` **get_collider_shape** **(** :ref:`int<class_int>` index **)** |const|

返回 ``index`` 处多次碰撞之一的碰撞形状的形状 ID，如果没有对象与该形状相交（即 :ref:`is_colliding<class_ShapeCast2D_method_is_colliding>` 返回 ``false``\ ），则返回 ``0``\ 。

.. rst-class:: classref-item-separator

----

.. _class_ShapeCast2D_method_get_collision_count:

.. rst-class:: classref-method

:ref:`int<class_int>` **get_collision_count** **(** **)** |const|

在撞击点检测到的碰撞次数。使用它来迭代由 :ref:`get_collider<class_ShapeCast2D_method_get_collider>`\ 、\ :ref:`get_collider_shape<class_ShapeCast2D_method_get_collider_shape>`\ 、\ :ref:`get_collision_point<class_ShapeCast2D_method_get_collision_point>`\ 、和 :ref:`get_collision_normal<class_ShapeCast2D_method_get_collision_normal>` 方法提供的多个碰撞。

.. rst-class:: classref-item-separator

----

.. _class_ShapeCast2D_method_get_collision_mask_value:

.. rst-class:: classref-method

:ref:`bool<class_bool>` **get_collision_mask_value** **(** :ref:`int<class_int>` layer_number **)** |const|

返回 :ref:`collision_mask<class_ShapeCast2D_property_collision_mask>` 中是否启用了指定的层，给定的 ``layer_number`` 应在 1 和 32 之间。

.. rst-class:: classref-item-separator

----

.. _class_ShapeCast2D_method_get_collision_normal:

.. rst-class:: classref-method

:ref:`Vector2<class_Vector2>` **get_collision_normal** **(** :ref:`int<class_int>` index **)** |const|

返回相交对象 ``index`` 处多次碰撞之一的法线。

.. rst-class:: classref-item-separator

----

.. _class_ShapeCast2D_method_get_collision_point:

.. rst-class:: classref-method

:ref:`Vector2<class_Vector2>` **get_collision_point** **(** :ref:`int<class_int>` index **)** |const|

返回形状与碰撞对象相交的 ``index`` 处多次碰撞之一的碰撞点。

\ **注意：**\ 这个点在\ **全局**\ 坐标系中。

.. rst-class:: classref-item-separator

----

.. _class_ShapeCast2D_method_is_colliding:

.. rst-class:: classref-method

:ref:`bool<class_bool>` **is_colliding** **(** **)** |const|

返回是否有任何对象与形状的向量相交（考虑向量长度）。

.. rst-class:: classref-item-separator

----

.. _class_ShapeCast2D_method_remove_exception:

.. rst-class:: classref-method

void **remove_exception** **(** :ref:`CollisionObject2D<class_CollisionObject2D>` node **)**

移除碰撞例外，使该形状能够汇报与指定 :ref:`CollisionObject2D<class_CollisionObject2D>` 节点的碰撞。

.. rst-class:: classref-item-separator

----

.. _class_ShapeCast2D_method_remove_exception_rid:

.. rst-class:: classref-method

void **remove_exception_rid** **(** :ref:`RID<class_RID>` rid **)**

移除碰撞例外，使该形状能够汇报与指定 :ref:`RID<class_RID>` 的碰撞。

.. rst-class:: classref-item-separator

----

.. _class_ShapeCast2D_method_set_collision_mask_value:

.. rst-class:: classref-method

void **set_collision_mask_value** **(** :ref:`int<class_int>` layer_number, :ref:`bool<class_bool>` value **)**

根据 ``value``\ ，启用或禁用 :ref:`collision_mask<class_ShapeCast2D_property_collision_mask>` 中指定的层，给定的 ``layer_number`` 应在 1 和 32 之间。

.. |virtual| replace:: :abbr:`virtual (本方法通常需要用户覆盖才能生效。)`
.. |const| replace:: :abbr:`const (本方法没有副作用。不会修改该实例的任何成员变量。)`
.. |vararg| replace:: :abbr:`vararg (本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。)`
.. |constructor| replace:: :abbr:`constructor (本方法用于构造某个类型。)`
.. |static| replace:: :abbr:`static (调用本方法无需实例，所以可以直接使用类名调用。)`
.. |operator| replace:: :abbr:`operator (本方法描述的是使用本类型作为左操作数的有效操作符。)`
.. |bitfield| replace:: :abbr:`BitField (这个值是由下列标志构成的位掩码整数。)`

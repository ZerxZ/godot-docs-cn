:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/AudioEffectRecord.xml.

.. _class_AudioEffectRecord:

AudioEffectRecord
=================

**继承：** :ref:`AudioEffect<class_AudioEffect>` **<** :ref:`Resource<class_Resource>` **<** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`

用于录制来自音频总线的声音的音频效果。

.. rst-class:: classref-introduction-group

描述
----

允许用户录制来自音频总线的声音。在“Master”音频总线上使用时会包含所有 Godot 输出的音频。

可以用于录制麦克风（使用 :ref:`AudioStreamMicrophone<class_AudioStreamMicrophone>`\ ）。

它设置和获取记录音频文件的格式（8位，16位或压缩）。它检查录音是否处于活动状态，如果是，则记录声音。然后返回记录的样本。

.. rst-class:: classref-introduction-group

教程
----

- :doc:`使用麦克风录音 <../tutorials/audio/recording_with_microphone>`

- `音频麦克风录音演示 <https://godotengine.org/asset-library/asset/527>`__

.. rst-class:: classref-reftable-group

属性
----

.. table::
   :widths: auto

   +-------------------------------------------+--------------------------------------------------------+-------+
   | :ref:`Format<enum_AudioStreamWAV_Format>` | :ref:`format<class_AudioEffectRecord_property_format>` | ``1`` |
   +-------------------------------------------+--------------------------------------------------------+-------+

.. rst-class:: classref-reftable-group

方法
----

.. table::
   :widths: auto

   +---------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------+
   | :ref:`AudioStreamWAV<class_AudioStreamWAV>` | :ref:`get_recording<class_AudioEffectRecord_method_get_recording>` **(** **)** |const|                                      |
   +---------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`                     | :ref:`is_recording_active<class_AudioEffectRecord_method_is_recording_active>` **(** **)** |const|                          |
   +---------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------+
   | void                                        | :ref:`set_recording_active<class_AudioEffectRecord_method_set_recording_active>` **(** :ref:`bool<class_bool>` record **)** |
   +---------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

属性说明
--------

.. _class_AudioEffectRecord_property_format:

.. rst-class:: classref-property

:ref:`Format<enum_AudioStreamWAV_Format>` **format** = ``1``

.. rst-class:: classref-property-setget

- void **set_format** **(** :ref:`Format<enum_AudioStreamWAV_Format>` value **)**
- :ref:`Format<enum_AudioStreamWAV_Format>` **get_format** **(** **)**

指定样本将被记录的格式。有关可用格式，请参阅 :ref:`Format<enum_AudioStreamWAV_Format>`\ 。

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

方法说明
--------

.. _class_AudioEffectRecord_method_get_recording:

.. rst-class:: classref-method

:ref:`AudioStreamWAV<class_AudioStreamWAV>` **get_recording** **(** **)** |const|

返回录音的样本。

.. rst-class:: classref-item-separator

----

.. _class_AudioEffectRecord_method_is_recording_active:

.. rst-class:: classref-method

:ref:`bool<class_bool>` **is_recording_active** **(** **)** |const|

返回录音是否处于激活状态。

.. rst-class:: classref-item-separator

----

.. _class_AudioEffectRecord_method_set_recording_active:

.. rst-class:: classref-method

void **set_recording_active** **(** :ref:`bool<class_bool>` record **)**

如果为 ``true``\ ，将录制声音。请注意，重新开始录音将移除先前录音的样本。

.. |virtual| replace:: :abbr:`virtual (本方法通常需要用户覆盖才能生效。)`
.. |const| replace:: :abbr:`const (本方法没有副作用。不会修改该实例的任何成员变量。)`
.. |vararg| replace:: :abbr:`vararg (本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。)`
.. |constructor| replace:: :abbr:`constructor (本方法用于构造某个类型。)`
.. |static| replace:: :abbr:`static (调用本方法无需实例，所以可以直接使用类名调用。)`
.. |operator| replace:: :abbr:`operator (本方法描述的是使用本类型作为左操作数的有效操作符。)`
.. |bitfield| replace:: :abbr:`BitField (这个值是由下列标志构成的位掩码整数。)`

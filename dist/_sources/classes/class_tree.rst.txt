:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/Tree.xml.

.. _class_Tree:

Tree
====

**继承：** :ref:`Control<class_Control>` **<** :ref:`CanvasItem<class_CanvasItem>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

用于以层级结构显示一组内部 :ref:`TreeItem<class_TreeItem>` 的控件。

.. rst-class:: classref-introduction-group

描述
----

用于以层级结构显示一组内部 :ref:`TreeItem<class_TreeItem>` 的控件。树项目可以选择、展开、折叠。该树可以有多列的自定义控件，如 :ref:`LineEdit<class_LineEdit>`\ 、按钮和弹出窗口。对于结构化显示和互动很有用。

树通过代码建立，使用 :ref:`TreeItem<class_TreeItem>` 对象来构建结构。根项目只有一个，但可以使用 :ref:`hide_root<class_Tree_property_hide_root>` 来模拟多个根项目。


.. tabs::

 .. code-tab:: gdscript

    func _ready():
        var tree = Tree.new()
        var root = tree.create_item()
        tree.hide_root = true
        var child1 = tree.create_item(root)
        var child2 = tree.create_item(root)
        var subchild1 = tree.create_item(child1)
        subchild1.set_text(0, "Subchild1")

 .. code-tab:: csharp

    public override void _Ready()
    {
        var tree = new Tree();
        TreeItem root = tree.CreateItem();
        tree.HideRoot = true;
        TreeItem child1 = tree.CreateItem(root);
        TreeItem child2 = tree.CreateItem(root);
        TreeItem subchild1 = tree.CreateItem(child1);
        subchild1.SetText(0, "Subchild1");
    }



要遍历 **Tree** 对象中的所有 :ref:`TreeItem<class_TreeItem>` 对象，请在通过 :ref:`get_root<class_Tree_method_get_root>` 获得根项目之后，使用 :ref:`TreeItem.get_next<class_TreeItem_method_get_next>` 和 :ref:`TreeItem.get_children<class_TreeItem_method_get_children>` 方法。你可以对 :ref:`TreeItem<class_TreeItem>` 使用 :ref:`Object.free<class_Object_method_free>` 来把它从 **Tree** 中移除。

\ **增量搜索：**\ 与 :ref:`ItemList<class_ItemList>` 和 :ref:`PopupMenu<class_PopupMenu>` 类似，\ **Tree** 也支持在聚焦控件时在列表中进行搜索。按下与某个条目名称首字母一致的按键，就会选中以该字母开头的第一个条目。在此之后，进行增量搜索的办法有两种：1）在超时前再次按下同一个按键，选中以该字母开头的下一个条目。2）在超时前按下剩余字母对应的按键，直接匹配并选中所需的条目。这两个动作都会在最后一次按键超时后重置回列表顶端。你可以通过 :ref:`ProjectSettings.gui/timers/incremental_search_max_interval_msec<class_ProjectSettings_property_gui/timers/incremental_search_max_interval_msec>` 修改超时时长。

.. rst-class:: classref-reftable-group

属性
----

.. table::
   :widths: auto

   +------------------------------------------+---------------------------------------------------------------------------------+---------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`                  | :ref:`allow_reselect<class_Tree_property_allow_reselect>`                       | ``false``                                                                 |
   +------------------------------------------+---------------------------------------------------------------------------------+---------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`                  | :ref:`allow_rmb_select<class_Tree_property_allow_rmb_select>`                   | ``false``                                                                 |
   +------------------------------------------+---------------------------------------------------------------------------------+---------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`                  | :ref:`allow_search<class_Tree_property_allow_search>`                           | ``true``                                                                  |
   +------------------------------------------+---------------------------------------------------------------------------------+---------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`                  | clip_contents                                                                   | ``true`` (overrides :ref:`Control<class_Control_property_clip_contents>`) |
   +------------------------------------------+---------------------------------------------------------------------------------+---------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`                  | :ref:`column_titles_visible<class_Tree_property_column_titles_visible>`         | ``false``                                                                 |
   +------------------------------------------+---------------------------------------------------------------------------------+---------------------------------------------------------------------------+
   | :ref:`int<class_int>`                    | :ref:`columns<class_Tree_property_columns>`                                     | ``1``                                                                     |
   +------------------------------------------+---------------------------------------------------------------------------------+---------------------------------------------------------------------------+
   | :ref:`int<class_int>`                    | :ref:`drop_mode_flags<class_Tree_property_drop_mode_flags>`                     | ``0``                                                                     |
   +------------------------------------------+---------------------------------------------------------------------------------+---------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`                  | :ref:`enable_recursive_folding<class_Tree_property_enable_recursive_folding>`   | ``true``                                                                  |
   +------------------------------------------+---------------------------------------------------------------------------------+---------------------------------------------------------------------------+
   | :ref:`FocusMode<enum_Control_FocusMode>` | focus_mode                                                                      | ``2`` (overrides :ref:`Control<class_Control_property_focus_mode>`)       |
   +------------------------------------------+---------------------------------------------------------------------------------+---------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`                  | :ref:`hide_folding<class_Tree_property_hide_folding>`                           | ``false``                                                                 |
   +------------------------------------------+---------------------------------------------------------------------------------+---------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`                  | :ref:`hide_root<class_Tree_property_hide_root>`                                 | ``false``                                                                 |
   +------------------------------------------+---------------------------------------------------------------------------------+---------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`                  | :ref:`scroll_horizontal_enabled<class_Tree_property_scroll_horizontal_enabled>` | ``true``                                                                  |
   +------------------------------------------+---------------------------------------------------------------------------------+---------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`                  | :ref:`scroll_vertical_enabled<class_Tree_property_scroll_vertical_enabled>`     | ``true``                                                                  |
   +------------------------------------------+---------------------------------------------------------------------------------+---------------------------------------------------------------------------+
   | :ref:`SelectMode<enum_Tree_SelectMode>`  | :ref:`select_mode<class_Tree_property_select_mode>`                             | ``0``                                                                     |
   +------------------------------------------+---------------------------------------------------------------------------------+---------------------------------------------------------------------------+

.. rst-class:: classref-reftable-group

方法
----

.. table::
   :widths: auto

   +-------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                              | :ref:`clear<class_Tree_method_clear>` **(** **)**                                                                                                                                                           |
   +-------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`TreeItem<class_TreeItem>`                                   | :ref:`create_item<class_Tree_method_create_item>` **(** :ref:`TreeItem<class_TreeItem>` parent=null, :ref:`int<class_int>` index=-1 **)**                                                                   |
   +-------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                              | :ref:`deselect_all<class_Tree_method_deselect_all>` **(** **)**                                                                                                                                             |
   +-------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`                                           | :ref:`edit_selected<class_Tree_method_edit_selected>` **(** :ref:`bool<class_bool>` force_edit=false **)**                                                                                                  |
   +-------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                              | :ref:`ensure_cursor_is_visible<class_Tree_method_ensure_cursor_is_visible>` **(** **)**                                                                                                                     |
   +-------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`                                             | :ref:`get_button_id_at_position<class_Tree_method_get_button_id_at_position>` **(** :ref:`Vector2<class_Vector2>` position **)** |const|                                                                    |
   +-------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`                                             | :ref:`get_column_at_position<class_Tree_method_get_column_at_position>` **(** :ref:`Vector2<class_Vector2>` position **)** |const|                                                                          |
   +-------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`                                             | :ref:`get_column_expand_ratio<class_Tree_method_get_column_expand_ratio>` **(** :ref:`int<class_int>` column **)** |const|                                                                                  |
   +-------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`String<class_String>`                                       | :ref:`get_column_title<class_Tree_method_get_column_title>` **(** :ref:`int<class_int>` column **)** |const|                                                                                                |
   +-------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`HorizontalAlignment<enum_@GlobalScope_HorizontalAlignment>` | :ref:`get_column_title_alignment<class_Tree_method_get_column_title_alignment>` **(** :ref:`int<class_int>` column **)** |const|                                                                            |
   +-------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`TextDirection<enum_Control_TextDirection>`                  | :ref:`get_column_title_direction<class_Tree_method_get_column_title_direction>` **(** :ref:`int<class_int>` column **)** |const|                                                                            |
   +-------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`String<class_String>`                                       | :ref:`get_column_title_language<class_Tree_method_get_column_title_language>` **(** :ref:`int<class_int>` column **)** |const|                                                                              |
   +-------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`                                             | :ref:`get_column_width<class_Tree_method_get_column_width>` **(** :ref:`int<class_int>` column **)** |const|                                                                                                |
   +-------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Rect2<class_Rect2>`                                         | :ref:`get_custom_popup_rect<class_Tree_method_get_custom_popup_rect>` **(** **)** |const|                                                                                                                   |
   +-------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`                                             | :ref:`get_drop_section_at_position<class_Tree_method_get_drop_section_at_position>` **(** :ref:`Vector2<class_Vector2>` position **)** |const|                                                              |
   +-------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`TreeItem<class_TreeItem>`                                   | :ref:`get_edited<class_Tree_method_get_edited>` **(** **)** |const|                                                                                                                                         |
   +-------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`                                             | :ref:`get_edited_column<class_Tree_method_get_edited_column>` **(** **)** |const|                                                                                                                           |
   +-------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Rect2<class_Rect2>`                                         | :ref:`get_item_area_rect<class_Tree_method_get_item_area_rect>` **(** :ref:`TreeItem<class_TreeItem>` item, :ref:`int<class_int>` column=-1, :ref:`int<class_int>` button_index=-1 **)** |const|            |
   +-------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`TreeItem<class_TreeItem>`                                   | :ref:`get_item_at_position<class_Tree_method_get_item_at_position>` **(** :ref:`Vector2<class_Vector2>` position **)** |const|                                                                              |
   +-------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`TreeItem<class_TreeItem>`                                   | :ref:`get_next_selected<class_Tree_method_get_next_selected>` **(** :ref:`TreeItem<class_TreeItem>` from **)**                                                                                              |
   +-------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`                                             | :ref:`get_pressed_button<class_Tree_method_get_pressed_button>` **(** **)** |const|                                                                                                                         |
   +-------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`TreeItem<class_TreeItem>`                                   | :ref:`get_root<class_Tree_method_get_root>` **(** **)** |const|                                                                                                                                             |
   +-------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector2<class_Vector2>`                                     | :ref:`get_scroll<class_Tree_method_get_scroll>` **(** **)** |const|                                                                                                                                         |
   +-------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`TreeItem<class_TreeItem>`                                   | :ref:`get_selected<class_Tree_method_get_selected>` **(** **)** |const|                                                                                                                                     |
   +-------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`                                             | :ref:`get_selected_column<class_Tree_method_get_selected_column>` **(** **)** |const|                                                                                                                       |
   +-------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`                                           | :ref:`is_column_clipping_content<class_Tree_method_is_column_clipping_content>` **(** :ref:`int<class_int>` column **)** |const|                                                                            |
   +-------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`                                           | :ref:`is_column_expanding<class_Tree_method_is_column_expanding>` **(** :ref:`int<class_int>` column **)** |const|                                                                                          |
   +-------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                              | :ref:`scroll_to_item<class_Tree_method_scroll_to_item>` **(** :ref:`TreeItem<class_TreeItem>` item, :ref:`bool<class_bool>` center_on_item=false **)**                                                      |
   +-------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                              | :ref:`set_column_clip_content<class_Tree_method_set_column_clip_content>` **(** :ref:`int<class_int>` column, :ref:`bool<class_bool>` enable **)**                                                          |
   +-------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                              | :ref:`set_column_custom_minimum_width<class_Tree_method_set_column_custom_minimum_width>` **(** :ref:`int<class_int>` column, :ref:`int<class_int>` min_width **)**                                         |
   +-------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                              | :ref:`set_column_expand<class_Tree_method_set_column_expand>` **(** :ref:`int<class_int>` column, :ref:`bool<class_bool>` expand **)**                                                                      |
   +-------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                              | :ref:`set_column_expand_ratio<class_Tree_method_set_column_expand_ratio>` **(** :ref:`int<class_int>` column, :ref:`int<class_int>` ratio **)**                                                             |
   +-------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                              | :ref:`set_column_title<class_Tree_method_set_column_title>` **(** :ref:`int<class_int>` column, :ref:`String<class_String>` title **)**                                                                     |
   +-------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                              | :ref:`set_column_title_alignment<class_Tree_method_set_column_title_alignment>` **(** :ref:`int<class_int>` column, :ref:`HorizontalAlignment<enum_@GlobalScope_HorizontalAlignment>` title_alignment **)** |
   +-------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                              | :ref:`set_column_title_direction<class_Tree_method_set_column_title_direction>` **(** :ref:`int<class_int>` column, :ref:`TextDirection<enum_Control_TextDirection>` direction **)**                        |
   +-------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                              | :ref:`set_column_title_language<class_Tree_method_set_column_title_language>` **(** :ref:`int<class_int>` column, :ref:`String<class_String>` language **)**                                                |
   +-------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                              | :ref:`set_selected<class_Tree_method_set_selected>` **(** :ref:`TreeItem<class_TreeItem>` item, :ref:`int<class_int>` column **)**                                                                          |
   +-------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-reftable-group

主题属性
--------

.. table::
   :widths: auto

   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`Color<class_Color>`         | :ref:`children_hl_line_color<class_Tree_theme_color_children_hl_line_color>`             | ``Color(0.27, 0.27, 0.27, 1)``    |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`Color<class_Color>`         | :ref:`custom_button_font_highlight<class_Tree_theme_color_custom_button_font_highlight>` | ``Color(0.95, 0.95, 0.95, 1)``    |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`Color<class_Color>`         | :ref:`drop_position_color<class_Tree_theme_color_drop_position_color>`                   | ``Color(1, 1, 1, 1)``             |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`Color<class_Color>`         | :ref:`font_color<class_Tree_theme_color_font_color>`                                     | ``Color(0.7, 0.7, 0.7, 1)``       |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`Color<class_Color>`         | :ref:`font_outline_color<class_Tree_theme_color_font_outline_color>`                     | ``Color(1, 1, 1, 1)``             |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`Color<class_Color>`         | :ref:`font_selected_color<class_Tree_theme_color_font_selected_color>`                   | ``Color(1, 1, 1, 1)``             |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`Color<class_Color>`         | :ref:`guide_color<class_Tree_theme_color_guide_color>`                                   | ``Color(0.7, 0.7, 0.7, 0.25)``    |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`Color<class_Color>`         | :ref:`parent_hl_line_color<class_Tree_theme_color_parent_hl_line_color>`                 | ``Color(0.27, 0.27, 0.27, 1)``    |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`Color<class_Color>`         | :ref:`relationship_line_color<class_Tree_theme_color_relationship_line_color>`           | ``Color(0.27, 0.27, 0.27, 1)``    |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`Color<class_Color>`         | :ref:`title_button_color<class_Tree_theme_color_title_button_color>`                     | ``Color(0.875, 0.875, 0.875, 1)`` |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`int<class_int>`             | :ref:`button_margin<class_Tree_theme_constant_button_margin>`                            | ``4``                             |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`int<class_int>`             | :ref:`children_hl_line_width<class_Tree_theme_constant_children_hl_line_width>`          | ``1``                             |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`int<class_int>`             | :ref:`draw_guides<class_Tree_theme_constant_draw_guides>`                                | ``1``                             |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`int<class_int>`             | :ref:`draw_relationship_lines<class_Tree_theme_constant_draw_relationship_lines>`        | ``0``                             |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`int<class_int>`             | :ref:`h_separation<class_Tree_theme_constant_h_separation>`                              | ``4``                             |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`int<class_int>`             | :ref:`icon_max_width<class_Tree_theme_constant_icon_max_width>`                          | ``0``                             |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`int<class_int>`             | :ref:`inner_item_margin_bottom<class_Tree_theme_constant_inner_item_margin_bottom>`      | ``0``                             |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`int<class_int>`             | :ref:`inner_item_margin_left<class_Tree_theme_constant_inner_item_margin_left>`          | ``0``                             |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`int<class_int>`             | :ref:`inner_item_margin_right<class_Tree_theme_constant_inner_item_margin_right>`        | ``0``                             |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`int<class_int>`             | :ref:`inner_item_margin_top<class_Tree_theme_constant_inner_item_margin_top>`            | ``0``                             |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`int<class_int>`             | :ref:`item_margin<class_Tree_theme_constant_item_margin>`                                | ``16``                            |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`int<class_int>`             | :ref:`outline_size<class_Tree_theme_constant_outline_size>`                              | ``0``                             |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`int<class_int>`             | :ref:`parent_hl_line_margin<class_Tree_theme_constant_parent_hl_line_margin>`            | ``0``                             |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`int<class_int>`             | :ref:`parent_hl_line_width<class_Tree_theme_constant_parent_hl_line_width>`              | ``1``                             |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`int<class_int>`             | :ref:`relationship_line_width<class_Tree_theme_constant_relationship_line_width>`        | ``1``                             |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`int<class_int>`             | :ref:`scroll_border<class_Tree_theme_constant_scroll_border>`                            | ``4``                             |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`int<class_int>`             | :ref:`scroll_speed<class_Tree_theme_constant_scroll_speed>`                              | ``12``                            |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`int<class_int>`             | :ref:`scrollbar_h_separation<class_Tree_theme_constant_scrollbar_h_separation>`          | ``4``                             |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`int<class_int>`             | :ref:`scrollbar_margin_bottom<class_Tree_theme_constant_scrollbar_margin_bottom>`        | ``-1``                            |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`int<class_int>`             | :ref:`scrollbar_margin_left<class_Tree_theme_constant_scrollbar_margin_left>`            | ``-1``                            |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`int<class_int>`             | :ref:`scrollbar_margin_right<class_Tree_theme_constant_scrollbar_margin_right>`          | ``-1``                            |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`int<class_int>`             | :ref:`scrollbar_margin_top<class_Tree_theme_constant_scrollbar_margin_top>`              | ``-1``                            |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`int<class_int>`             | :ref:`scrollbar_v_separation<class_Tree_theme_constant_scrollbar_v_separation>`          | ``4``                             |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`int<class_int>`             | :ref:`v_separation<class_Tree_theme_constant_v_separation>`                              | ``4``                             |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`Font<class_Font>`           | :ref:`font<class_Tree_theme_font_font>`                                                  |                                   |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`Font<class_Font>`           | :ref:`title_button_font<class_Tree_theme_font_title_button_font>`                        |                                   |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`int<class_int>`             | :ref:`font_size<class_Tree_theme_font_size_font_size>`                                   |                                   |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`int<class_int>`             | :ref:`title_button_font_size<class_Tree_theme_font_size_title_button_font_size>`         |                                   |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`Texture2D<class_Texture2D>` | :ref:`arrow<class_Tree_theme_icon_arrow>`                                                |                                   |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`Texture2D<class_Texture2D>` | :ref:`arrow_collapsed<class_Tree_theme_icon_arrow_collapsed>`                            |                                   |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`Texture2D<class_Texture2D>` | :ref:`arrow_collapsed_mirrored<class_Tree_theme_icon_arrow_collapsed_mirrored>`          |                                   |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`Texture2D<class_Texture2D>` | :ref:`checked<class_Tree_theme_icon_checked>`                                            |                                   |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`Texture2D<class_Texture2D>` | :ref:`indeterminate<class_Tree_theme_icon_indeterminate>`                                |                                   |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`Texture2D<class_Texture2D>` | :ref:`select_arrow<class_Tree_theme_icon_select_arrow>`                                  |                                   |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`Texture2D<class_Texture2D>` | :ref:`unchecked<class_Tree_theme_icon_unchecked>`                                        |                                   |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`Texture2D<class_Texture2D>` | :ref:`updown<class_Tree_theme_icon_updown>`                                              |                                   |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`StyleBox<class_StyleBox>`   | :ref:`button_pressed<class_Tree_theme_style_button_pressed>`                             |                                   |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`StyleBox<class_StyleBox>`   | :ref:`cursor<class_Tree_theme_style_cursor>`                                             |                                   |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`StyleBox<class_StyleBox>`   | :ref:`cursor_unfocused<class_Tree_theme_style_cursor_unfocused>`                         |                                   |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`StyleBox<class_StyleBox>`   | :ref:`custom_button<class_Tree_theme_style_custom_button>`                               |                                   |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`StyleBox<class_StyleBox>`   | :ref:`custom_button_hover<class_Tree_theme_style_custom_button_hover>`                   |                                   |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`StyleBox<class_StyleBox>`   | :ref:`custom_button_pressed<class_Tree_theme_style_custom_button_pressed>`               |                                   |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`StyleBox<class_StyleBox>`   | :ref:`focus<class_Tree_theme_style_focus>`                                               |                                   |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`StyleBox<class_StyleBox>`   | :ref:`panel<class_Tree_theme_style_panel>`                                               |                                   |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`StyleBox<class_StyleBox>`   | :ref:`selected<class_Tree_theme_style_selected>`                                         |                                   |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`StyleBox<class_StyleBox>`   | :ref:`selected_focus<class_Tree_theme_style_selected_focus>`                             |                                   |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`StyleBox<class_StyleBox>`   | :ref:`title_button_hover<class_Tree_theme_style_title_button_hover>`                     |                                   |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`StyleBox<class_StyleBox>`   | :ref:`title_button_normal<class_Tree_theme_style_title_button_normal>`                   |                                   |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+
   | :ref:`StyleBox<class_StyleBox>`   | :ref:`title_button_pressed<class_Tree_theme_style_title_button_pressed>`                 |                                   |
   +-----------------------------------+------------------------------------------------------------------------------------------+-----------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

信号
----

.. _class_Tree_signal_button_clicked:

.. rst-class:: classref-signal

**button_clicked** **(** :ref:`TreeItem<class_TreeItem>` item, :ref:`int<class_int>` column, :ref:`int<class_int>` id, :ref:`int<class_int>` mouse_button_index **)**

按下树中的某个按钮时发出（见 :ref:`TreeItem.add_button<class_TreeItem_method_add_button>`\ ）。

.. rst-class:: classref-item-separator

----

.. _class_Tree_signal_cell_selected:

.. rst-class:: classref-signal

**cell_selected** **(** **)**

选中某个单元格时发出。

.. rst-class:: classref-item-separator

----

.. _class_Tree_signal_check_propagated_to_item:

.. rst-class:: classref-signal

**check_propagated_to_item** **(** :ref:`TreeItem<class_TreeItem>` item, :ref:`int<class_int>` column **)**

调用 :ref:`TreeItem.propagate_check<class_TreeItem_method_propagate_check>` 时发出。连接到该信号可以处理在 :ref:`TreeItem.propagate_check<class_TreeItem_method_propagate_check>` 被调用时受影响的项。受影响项的处理顺序如下：调用该方法的项，该项的子项，最后是该项的父项。

.. rst-class:: classref-item-separator

----

.. _class_Tree_signal_column_title_clicked:

.. rst-class:: classref-signal

**column_title_clicked** **(** :ref:`int<class_int>` column, :ref:`int<class_int>` mouse_button_index **)**

使用 :ref:`@GlobalScope.MOUSE_BUTTON_LEFT<class_@GlobalScope_constant_MOUSE_BUTTON_LEFT>` 使用 :ref:`@GlobalScope.MOUSE_BUTTON_RIGHT<class_@GlobalScope_constant_MOUSE_BUTTON_RIGHT>` 点击某一列的标题时发出。

.. rst-class:: classref-item-separator

----

.. _class_Tree_signal_custom_item_clicked:

.. rst-class:: classref-signal

**custom_item_clicked** **(** :ref:`int<class_int>` mouse_button_index **)**

使用鼠标按钮点击某一 :ref:`TreeItem.CELL_MODE_CUSTOM<class_TreeItem_constant_CELL_MODE_CUSTOM>` 项时发出。

.. rst-class:: classref-item-separator

----

.. _class_Tree_signal_custom_popup_edited:

.. rst-class:: classref-signal

**custom_popup_edited** **(** :ref:`bool<class_bool>` arrow_clicked **)**

点击某一 :ref:`TreeItem.CELL_MODE_CUSTOM<class_TreeItem_constant_CELL_MODE_CUSTOM>` 项进行编辑时发出。

.. rst-class:: classref-item-separator

----

.. _class_Tree_signal_empty_clicked:

.. rst-class:: classref-signal

**empty_clicked** **(** :ref:`Vector2<class_Vector2>` position, :ref:`int<class_int>` mouse_button_index **)**

使用鼠标按钮点击该树中的空白区域时发出。

.. rst-class:: classref-item-separator

----

.. _class_Tree_signal_item_activated:

.. rst-class:: classref-signal

**item_activated** **(** **)**

双击某一项，或使用 ``ui_accept`` 输入事件（例如键盘的\ :kbd:`回车`\ 或\ :kbd:`空格`\ 键）选中某一项时发出。

.. rst-class:: classref-item-separator

----

.. _class_Tree_signal_item_collapsed:

.. rst-class:: classref-signal

**item_collapsed** **(** :ref:`TreeItem<class_TreeItem>` item **)**

点击折叠箭头折叠某一项时发出。

.. rst-class:: classref-item-separator

----

.. _class_Tree_signal_item_edited:

.. rst-class:: classref-signal

**item_edited** **(** **)**

编辑某一项时发出。

.. rst-class:: classref-item-separator

----

.. _class_Tree_signal_item_icon_double_clicked:

.. rst-class:: classref-signal

**item_icon_double_clicked** **(** **)**

双击某一项的图标时发出。双击该项的任意区域所发出的信号见 :ref:`item_activated<class_Tree_signal_item_activated>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_Tree_signal_item_mouse_selected:

.. rst-class:: classref-signal

**item_mouse_selected** **(** :ref:`Vector2<class_Vector2>` position, :ref:`int<class_int>` mouse_button_index **)**

使用鼠标按钮选中某一项时发出。

.. rst-class:: classref-item-separator

----

.. _class_Tree_signal_item_selected:

.. rst-class:: classref-signal

**item_selected** **(** **)**

选中某一项时发出。

.. rst-class:: classref-item-separator

----

.. _class_Tree_signal_multi_selected:

.. rst-class:: classref-signal

**multi_selected** **(** :ref:`TreeItem<class_TreeItem>` item, :ref:`int<class_int>` column, :ref:`bool<class_bool>` selected **)**

如果 :ref:`select_mode<class_Tree_property_select_mode>` 被设置为 :ref:`SELECT_MULTI<class_Tree_constant_SELECT_MULTI>`\ ，则代替 :ref:`item_selected<class_Tree_signal_item_selected>` 发出。

.. rst-class:: classref-item-separator

----

.. _class_Tree_signal_nothing_selected:

.. rst-class:: classref-signal

**nothing_selected** **(** **)**

鼠标左键未选中任一项时发出。

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

枚举
----

.. _enum_Tree_SelectMode:

.. rst-class:: classref-enumeration

enum **SelectMode**:

.. _class_Tree_constant_SELECT_SINGLE:

.. rst-class:: classref-enumeration-constant

:ref:`SelectMode<enum_Tree_SelectMode>` **SELECT_SINGLE** = ``0``

允许一次选择一个单元格。从项的角度看，只允许选择一个项。而且在所选项中只有一列被选中。

在这种模式下，焦点光标总被隐藏，被定位在当前的选择处，使当前的选择项成为当前的焦点项。

.. _class_Tree_constant_SELECT_ROW:

.. rst-class:: classref-enumeration-constant

:ref:`SelectMode<enum_Tree_SelectMode>` **SELECT_ROW** = ``1``

允许一次选择单行。从项的角度看，只允许选择单个项。而所有的列都被选择在所选项中。

在这种模式下，焦点光标总被隐藏，被定位在当前选择的第一列，使当前选择项成为当前焦点项。

.. _class_Tree_constant_SELECT_MULTI:

.. rst-class:: classref-enumeration-constant

:ref:`SelectMode<enum_Tree_SelectMode>` **SELECT_MULTI** = ``2``

允许同时选择多个单元格。从项的角度看，允许选择多个项。而且每个被选中的项中可以有多个列被选中。

在这种模式下，焦点光标可见，光标下的项或列不一定被选中。

.. rst-class:: classref-item-separator

----

.. _enum_Tree_DropModeFlags:

.. rst-class:: classref-enumeration

enum **DropModeFlags**:

.. _class_Tree_constant_DROP_MODE_DISABLED:

.. rst-class:: classref-enumeration-constant

:ref:`DropModeFlags<enum_Tree_DropModeFlags>` **DROP_MODE_DISABLED** = ``0``

禁用所有放置部分，但仍然允许通过 :ref:`get_drop_section_at_position<class_Tree_method_get_drop_section_at_position>` 检测“项目上”的放置部分。

\ **注意：**\ 这是默认的标志，当与其他标志结合时，它没有效果。

.. _class_Tree_constant_DROP_MODE_ON_ITEM:

.. rst-class:: classref-enumeration-constant

:ref:`DropModeFlags<enum_Tree_DropModeFlags>` **DROP_MODE_ON_ITEM** = ``1``

启用“项目上”的放置部分。这个放置部分覆盖整个项。

当与 :ref:`DROP_MODE_INBETWEEN<class_Tree_constant_DROP_MODE_INBETWEEN>` 结合使用时，这个放置部分的高度减半，并保持垂直居中。

.. _class_Tree_constant_DROP_MODE_INBETWEEN:

.. rst-class:: classref-enumeration-constant

:ref:`DropModeFlags<enum_Tree_DropModeFlags>` **DROP_MODE_INBETWEEN** = ``2``

启用“项目上方”和“项目下方”的放置部分。“项目上方”的放置部分覆盖项目的上半部分，“项目下方”的放置部分覆盖下半部分。

当与 :ref:`DROP_MODE_ON_ITEM<class_Tree_constant_DROP_MODE_ON_ITEM>` 结合时，这些放置部分的高度减半，并相应地停留在顶部或底部。

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

属性说明
--------

.. _class_Tree_property_allow_reselect:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **allow_reselect** = ``false``

.. rst-class:: classref-property-setget

- void **set_allow_reselect** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **get_allow_reselect** **(** **)**

如果为 ``true``\ ，可以再次选择当前选定的单元。

.. rst-class:: classref-item-separator

----

.. _class_Tree_property_allow_rmb_select:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **allow_rmb_select** = ``false``

.. rst-class:: classref-property-setget

- void **set_allow_rmb_select** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **get_allow_rmb_select** **(** **)**

如果为 ``true``\ ，鼠标右键点击可以选择项目。

.. rst-class:: classref-item-separator

----

.. _class_Tree_property_allow_search:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **allow_search** = ``true``

.. rst-class:: classref-property-setget

- void **set_allow_search** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **get_allow_search** **(** **)**

如果为 ``true``\ ，允许在 **Tree** 中以增量搜索的形式使用字母键导航。

.. rst-class:: classref-item-separator

----

.. _class_Tree_property_column_titles_visible:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **column_titles_visible** = ``false``

.. rst-class:: classref-property-setget

- void **set_column_titles_visible** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **are_column_titles_visible** **(** **)**

如果为 ``true``\ ，列标题可见。

.. rst-class:: classref-item-separator

----

.. _class_Tree_property_columns:

.. rst-class:: classref-property

:ref:`int<class_int>` **columns** = ``1``

.. rst-class:: classref-property-setget

- void **set_columns** **(** :ref:`int<class_int>` value **)**
- :ref:`int<class_int>` **get_columns** **(** **)**

列数。

.. rst-class:: classref-item-separator

----

.. _class_Tree_property_drop_mode_flags:

.. rst-class:: classref-property

:ref:`int<class_int>` **drop_mode_flags** = ``0``

.. rst-class:: classref-property-setget

- void **set_drop_mode_flags** **(** :ref:`int<class_int>` value **)**
- :ref:`int<class_int>` **get_drop_mode_flags** **(** **)**

放置模式是标志的按位或（OR）组合。见 :ref:`DropModeFlags<enum_Tree_DropModeFlags>` 常量。放置完成后会恢复为 :ref:`DROP_MODE_DISABLED<class_Tree_constant_DROP_MODE_DISABLED>`\ 。建议在 :ref:`Control._can_drop_data<class_Control_private_method__can_drop_data>` 期间设置。

控制的是放置区，即根据鼠标的位置决定并绘制可能的放置位置。

.. rst-class:: classref-item-separator

----

.. _class_Tree_property_enable_recursive_folding:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **enable_recursive_folding** = ``true``

.. rst-class:: classref-property-setget

- void **set_enable_recursive_folding** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **is_recursive_folding_enabled** **(** **)**

如果为 ``true``\ ，则该 **Tree** 启用了递归折叠。按住 Shift 键点击折叠箭头会折叠或展开该 :ref:`TreeItem<class_TreeItem>` 及所有子项。

.. rst-class:: classref-item-separator

----

.. _class_Tree_property_hide_folding:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **hide_folding** = ``false``

.. rst-class:: classref-property-setget

- void **set_hide_folding** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **is_folding_hidden** **(** **)**

如果为 ``true``\ ，隐藏折叠箭头。

.. rst-class:: classref-item-separator

----

.. _class_Tree_property_hide_root:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **hide_root** = ``false``

.. rst-class:: classref-property-setget

- void **set_hide_root** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **is_root_hidden** **(** **)**

如果为 ``true``\ ，则隐藏树的根节点。

.. rst-class:: classref-item-separator

----

.. _class_Tree_property_scroll_horizontal_enabled:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **scroll_horizontal_enabled** = ``true``

.. rst-class:: classref-property-setget

- void **set_h_scroll_enabled** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **is_h_scroll_enabled** **(** **)**

如果为 ``true``\ ，启用水平滚动。

.. rst-class:: classref-item-separator

----

.. _class_Tree_property_scroll_vertical_enabled:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **scroll_vertical_enabled** = ``true``

.. rst-class:: classref-property-setget

- void **set_v_scroll_enabled** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **is_v_scroll_enabled** **(** **)**

如果为 ``true``\ ，则启用垂直滚动。

.. rst-class:: classref-item-separator

----

.. _class_Tree_property_select_mode:

.. rst-class:: classref-property

:ref:`SelectMode<enum_Tree_SelectMode>` **select_mode** = ``0``

.. rst-class:: classref-property-setget

- void **set_select_mode** **(** :ref:`SelectMode<enum_Tree_SelectMode>` value **)**
- :ref:`SelectMode<enum_Tree_SelectMode>` **get_select_mode** **(** **)**

允许单选或多选。见 :ref:`SelectMode<enum_Tree_SelectMode>` 常量。

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

方法说明
--------

.. _class_Tree_method_clear:

.. rst-class:: classref-method

void **clear** **(** **)**

清除树。这将删除所有项目。

.. rst-class:: classref-item-separator

----

.. _class_Tree_method_create_item:

.. rst-class:: classref-method

:ref:`TreeItem<class_TreeItem>` **create_item** **(** :ref:`TreeItem<class_TreeItem>` parent=null, :ref:`int<class_int>` index=-1 **)**

在树中创建一个项，并将其添加为父项 ``parent`` 的子项，该父项可以是一个有效的 :ref:`TreeItem<class_TreeItem>` 或 ``null``\ 。

如果 ``parent`` 为 ``null``\ ，则根项将是父项；或者如果该树为空，则该新项将是根本身。

新项将是父项的第 ``index`` 个子项，如果没有足够的同级项，它将是最后一个子项。

.. rst-class:: classref-item-separator

----

.. _class_Tree_method_deselect_all:

.. rst-class:: classref-method

void **deselect_all** **(** **)**

取消选中树中的所有项目（行和列）。在 :ref:`SELECT_MULTI<class_Tree_constant_SELECT_MULTI>` 模式中还会移除选择光标。

.. rst-class:: classref-item-separator

----

.. _class_Tree_method_edit_selected:

.. rst-class:: classref-method

:ref:`bool<class_bool>` **edit_selected** **(** :ref:`bool<class_bool>` force_edit=false **)**

编辑选中的树项，就像它被点击一样。

该项必须通过 :ref:`TreeItem.set_editable<class_TreeItem_method_set_editable>` 设置为可编辑，否则 ``force_edit`` 必须为 ``true``\ 。

如果该项可被编辑，则返回 ``true``\ 。如果没有选中任何项则失败。

.. rst-class:: classref-item-separator

----

.. _class_Tree_method_ensure_cursor_is_visible:

.. rst-class:: classref-method

void **ensure_cursor_is_visible** **(** **)**

使当前获得焦点的单元可见。

如果有必要，将滚动树。在 :ref:`SELECT_ROW<class_Tree_constant_SELECT_ROW>` 模式下，不会做水平滚动，因为所选行中的所有单元都按逻辑获得焦点。

\ **注意：**\ 尽管这个方法的名称是这样的，但焦点光标本身只在 :ref:`SELECT_MULTI<class_Tree_constant_SELECT_MULTI>` 模式下可见。

.. rst-class:: classref-item-separator

----

.. _class_Tree_method_get_button_id_at_position:

.. rst-class:: classref-method

:ref:`int<class_int>` **get_button_id_at_position** **(** :ref:`Vector2<class_Vector2>` position **)** |const|

返回位于 ``position`` 的按钮 ID，如果没有按钮则返回 -1。

.. rst-class:: classref-item-separator

----

.. _class_Tree_method_get_column_at_position:

.. rst-class:: classref-method

:ref:`int<class_int>` **get_column_at_position** **(** :ref:`Vector2<class_Vector2>` position **)** |const|

返回位于 ``position`` 的列索引，如果没有项目则返回 -1。

.. rst-class:: classref-item-separator

----

.. _class_Tree_method_get_column_expand_ratio:

.. rst-class:: classref-method

:ref:`int<class_int>` **get_column_expand_ratio** **(** :ref:`int<class_int>` column **)** |const|

返回分配给该列的扩展比例。

.. rst-class:: classref-item-separator

----

.. _class_Tree_method_get_column_title:

.. rst-class:: classref-method

:ref:`String<class_String>` **get_column_title** **(** :ref:`int<class_int>` column **)** |const|

返回该列的标题。

.. rst-class:: classref-item-separator

----

.. _class_Tree_method_get_column_title_alignment:

.. rst-class:: classref-method

:ref:`HorizontalAlignment<enum_@GlobalScope_HorizontalAlignment>` **get_column_title_alignment** **(** :ref:`int<class_int>` column **)** |const|

返回该列的标题对齐方式。

.. rst-class:: classref-item-separator

----

.. _class_Tree_method_get_column_title_direction:

.. rst-class:: classref-method

:ref:`TextDirection<enum_Control_TextDirection>` **get_column_title_direction** **(** :ref:`int<class_int>` column **)** |const|

返回列标题的基础书写方向。

.. rst-class:: classref-item-separator

----

.. _class_Tree_method_get_column_title_language:

.. rst-class:: classref-method

:ref:`String<class_String>` **get_column_title_language** **(** :ref:`int<class_int>` column **)** |const|

返回列标题的语言代码。

.. rst-class:: classref-item-separator

----

.. _class_Tree_method_get_column_width:

.. rst-class:: classref-method

:ref:`int<class_int>` **get_column_width** **(** :ref:`int<class_int>` column **)** |const|

返回列的宽度，单位是像素。

.. rst-class:: classref-item-separator

----

.. _class_Tree_method_get_custom_popup_rect:

.. rst-class:: classref-method

:ref:`Rect2<class_Rect2>` **get_custom_popup_rect** **(** **)** |const|

返回自定义弹出窗口的矩形。帮助创建显示弹出式的自定义单元格控件。见 :ref:`TreeItem.set_cell_mode<class_TreeItem_method_set_cell_mode>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_Tree_method_get_drop_section_at_position:

.. rst-class:: classref-method

:ref:`int<class_int>` **get_drop_section_at_position** **(** :ref:`Vector2<class_Vector2>` position **)** |const|

返回位于 ``position`` 的放置部分，如果没有项目，则返回 -100。

在“项目上方”“项目之上”和“项目下方”的放置部分将分别返回 -1、0 或 1 的值。请参阅 :ref:`DropModeFlags<enum_Tree_DropModeFlags>` 以了解每个放置部分的描述。

要获得返回的放置部分相对项，请使用 :ref:`get_item_at_position<class_Tree_method_get_item_at_position>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_Tree_method_get_edited:

.. rst-class:: classref-method

:ref:`TreeItem<class_TreeItem>` **get_edited** **(** **)** |const|

返回当前编辑的项。可以与 :ref:`item_edited<class_Tree_signal_item_edited>` 一起使用以获取被修改的项。


.. tabs::

 .. code-tab:: gdscript

    func _ready():
        $Tree.item_edited.connect(on_Tree_item_edited)
    
    func on_Tree_item_edited():
        print($Tree.get_edited()) # 该项刚刚被编辑（例如被勾选）。

 .. code-tab:: csharp

    public override void _Ready()
    {
        GetNode<Tree>("Tree").ItemEdited += OnTreeItemEdited;
    }
    
    public void OnTreeItemEdited()
    {
        GD.Print(GetNode<Tree>("Tree").GetEdited()); // 该项刚刚被编辑（例如被勾选）。
    }



.. rst-class:: classref-item-separator

----

.. _class_Tree_method_get_edited_column:

.. rst-class:: classref-method

:ref:`int<class_int>` **get_edited_column** **(** **)** |const|

返回当前编辑项的列。

.. rst-class:: classref-item-separator

----

.. _class_Tree_method_get_item_area_rect:

.. rst-class:: classref-method

:ref:`Rect2<class_Rect2>` **get_item_area_rect** **(** :ref:`TreeItem<class_TreeItem>` item, :ref:`int<class_int>` column=-1, :ref:`int<class_int>` button_index=-1 **)** |const|

返回指定 :ref:`TreeItem<class_TreeItem>` 的矩形区域。如果指定了\ ``column``\ ，则只获取该列的位置和大小，否则获取包含所有列的矩形。如果指定了按钮索引，则将返回该按钮的矩形。

.. rst-class:: classref-item-separator

----

.. _class_Tree_method_get_item_at_position:

.. rst-class:: classref-method

:ref:`TreeItem<class_TreeItem>` **get_item_at_position** **(** :ref:`Vector2<class_Vector2>` position **)** |const|

返回指定位置，即相对于树的原点位置的树中项。

.. rst-class:: classref-item-separator

----

.. _class_Tree_method_get_next_selected:

.. rst-class:: classref-method

:ref:`TreeItem<class_TreeItem>` **get_next_selected** **(** :ref:`TreeItem<class_TreeItem>` from **)**

返回给定的 :ref:`TreeItem<class_TreeItem>` 之后的下一个选中项，如果到达末尾，则返回 ``null``\ 。

如果 ``from`` 为 ``null``\ ，则将返回第一个被选中的项。

.. rst-class:: classref-item-separator

----

.. _class_Tree_method_get_pressed_button:

.. rst-class:: classref-method

:ref:`int<class_int>` **get_pressed_button** **(** **)** |const|

返回最后按下的按钮的索引。

.. rst-class:: classref-item-separator

----

.. _class_Tree_method_get_root:

.. rst-class:: classref-method

:ref:`TreeItem<class_TreeItem>` **get_root** **(** **)** |const|

返回树的根项，如果树是空的，则返回 ``null``\ 。

.. rst-class:: classref-item-separator

----

.. _class_Tree_method_get_scroll:

.. rst-class:: classref-method

:ref:`Vector2<class_Vector2>` **get_scroll** **(** **)** |const|

返回当前的滚动位置。

.. rst-class:: classref-item-separator

----

.. _class_Tree_method_get_selected:

.. rst-class:: classref-method

:ref:`TreeItem<class_TreeItem>` **get_selected** **(** **)** |const|

返回当前的焦点项，如果没有焦点项，则返回 ``null``\ 。

在 :ref:`SELECT_ROW<class_Tree_constant_SELECT_ROW>` 和 :ref:`SELECT_SINGLE<class_Tree_constant_SELECT_SINGLE>` 模式下，焦点项与选择项相同。在 :ref:`SELECT_MULTI<class_Tree_constant_SELECT_MULTI>` 模式下，焦点项是焦点光标下的项目，不一定被选中。

要获得当前选中项，请使用 :ref:`get_next_selected<class_Tree_method_get_next_selected>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_Tree_method_get_selected_column:

.. rst-class:: classref-method

:ref:`int<class_int>` **get_selected_column** **(** **)** |const|

返回当前获得焦点的列，如果没有焦点列，则返回 -1。

在 :ref:`SELECT_SINGLE<class_Tree_constant_SELECT_SINGLE>` 模式下，焦点列是被选中的列。在 :ref:`SELECT_ROW<class_Tree_constant_SELECT_ROW>` 模式下，如果有任意项被选中，焦点列总是 0。在 :ref:`SELECT_MULTI<class_Tree_constant_SELECT_MULTI>` 模式下，焦点列是焦点光标下的列，但不一定有列被选中。

要判断一个项的某一列是否被选中，请使用 :ref:`TreeItem.is_selected<class_TreeItem_method_is_selected>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_Tree_method_is_column_clipping_content:

.. rst-class:: classref-method

:ref:`bool<class_bool>` **is_column_clipping_content** **(** :ref:`int<class_int>` column **)** |const|

如果该列启用了裁剪，则返回 ``true``\ （见 :ref:`set_column_clip_content<class_Tree_method_set_column_clip_content>`\ ）。

.. rst-class:: classref-item-separator

----

.. _class_Tree_method_is_column_expanding:

.. rst-class:: classref-method

:ref:`bool<class_bool>` **is_column_expanding** **(** :ref:`int<class_int>` column **)** |const|

如果该列启用了扩展，则返回 ``true``\ （见 :ref:`set_column_expand<class_Tree_method_set_column_expand>`\ ）。

.. rst-class:: classref-item-separator

----

.. _class_Tree_method_scroll_to_item:

.. rst-class:: classref-method

void **scroll_to_item** **(** :ref:`TreeItem<class_TreeItem>` item, :ref:`bool<class_bool>` center_on_item=false **)**

使 **Tree** 跳转到指定的 :ref:`TreeItem<class_TreeItem>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_Tree_method_set_column_clip_content:

.. rst-class:: classref-method

void **set_column_clip_content** **(** :ref:`int<class_int>` column, :ref:`bool<class_bool>` enable **)**

允许对列的内容进行裁剪，会忽略内容大小。

.. rst-class:: classref-item-separator

----

.. _class_Tree_method_set_column_custom_minimum_width:

.. rst-class:: classref-method

void **set_column_custom_minimum_width** **(** :ref:`int<class_int>` column, :ref:`int<class_int>` min_width **)**

覆盖某一列的计算的最小宽度。它可以被设置为 ``0`` 以恢复默认行为。具有“扩展”标志的列将以与 :ref:`Control.size_flags_stretch_ratio<class_Control_property_size_flags_stretch_ratio>` 类似的方式使用它们的最小宽度“min_width”。

.. rst-class:: classref-item-separator

----

.. _class_Tree_method_set_column_expand:

.. rst-class:: classref-method

void **set_column_expand** **(** :ref:`int<class_int>` column, :ref:`bool<class_bool>` expand **)**

如果为 ``true``\ ，该列将具有 :ref:`Control<class_Control>` 的“Expand”标志。具有“Expand”标志的列将以与 :ref:`Control.size_flags_stretch_ratio<class_Control_property_size_flags_stretch_ratio>` 类似的方式，使用它们的扩展比率（参见 :ref:`set_column_expand_ratio<class_Tree_method_set_column_expand_ratio>`\ ）。

.. rst-class:: classref-item-separator

----

.. _class_Tree_method_set_column_expand_ratio:

.. rst-class:: classref-method

void **set_column_expand_ratio** **(** :ref:`int<class_int>` column, :ref:`int<class_int>` ratio **)**

设置列的相对扩展比。见 :ref:`set_column_expand<class_Tree_method_set_column_expand>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_Tree_method_set_column_title:

.. rst-class:: classref-method

void **set_column_title** **(** :ref:`int<class_int>` column, :ref:`String<class_String>` title **)**

设置某一列的标题。

.. rst-class:: classref-item-separator

----

.. _class_Tree_method_set_column_title_alignment:

.. rst-class:: classref-method

void **set_column_title_alignment** **(** :ref:`int<class_int>` column, :ref:`HorizontalAlignment<enum_@GlobalScope_HorizontalAlignment>` title_alignment **)**

设置列标题的对齐方式。注意，列标题不支持 :ref:`@GlobalScope.HORIZONTAL_ALIGNMENT_FILL<class_@GlobalScope_constant_HORIZONTAL_ALIGNMENT_FILL>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_Tree_method_set_column_title_direction:

.. rst-class:: classref-method

void **set_column_title_direction** **(** :ref:`int<class_int>` column, :ref:`TextDirection<enum_Control_TextDirection>` direction **)**

设置列标题的基础书写方向。

.. rst-class:: classref-item-separator

----

.. _class_Tree_method_set_column_title_language:

.. rst-class:: classref-method

void **set_column_title_language** **(** :ref:`int<class_int>` column, :ref:`String<class_String>` language **)**

设置列标题的语言代码，用于断行和文本塑形算法，如果留空则使用当前区域设置。

.. rst-class:: classref-item-separator

----

.. _class_Tree_method_set_selected:

.. rst-class:: classref-method

void **set_selected** **(** :ref:`TreeItem<class_TreeItem>` item, :ref:`int<class_int>` column **)**

选中指定的 :ref:`TreeItem<class_TreeItem>` 和列。

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

主题属性说明
------------

.. _class_Tree_theme_color_children_hl_line_color:

.. rst-class:: classref-themeproperty

:ref:`Color<class_Color>` **children_hl_line_color** = ``Color(0.27, 0.27, 0.27, 1)``

被选中的 :ref:`TreeItem<class_TreeItem>` 与其子项之间的关系线的 :ref:`Color<class_Color>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_color_custom_button_font_highlight:

.. rst-class:: classref-themeproperty

:ref:`Color<class_Color>` **custom_button_font_highlight** = ``Color(0.95, 0.95, 0.95, 1)``

当 :ref:`TreeItem.CELL_MODE_CUSTOM<class_TreeItem_constant_CELL_MODE_CUSTOM>` 模式的单元格被悬停时的文本 :ref:`Color<class_Color>` 颜色。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_color_drop_position_color:

.. rst-class:: classref-themeproperty

:ref:`Color<class_Color>` **drop_position_color** = ``Color(1, 1, 1, 1)``

用于绘制可能的放置位置的 :ref:`Color<class_Color>` 颜色。有关放置位置的描述，参阅 :ref:`DropModeFlags<enum_Tree_DropModeFlags>` 常量。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_color_font_color:

.. rst-class:: classref-themeproperty

:ref:`Color<class_Color>` **font_color** = ``Color(0.7, 0.7, 0.7, 1)``

项目的默认文本颜色 :ref:`Color<class_Color>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_color_font_outline_color:

.. rst-class:: classref-themeproperty

:ref:`Color<class_Color>` **font_outline_color** = ``Color(1, 1, 1, 1)``

项目文本轮廓的色调。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_color_font_selected_color:

.. rst-class:: classref-themeproperty

:ref:`Color<class_Color>` **font_selected_color** = ``Color(1, 1, 1, 1)``

选择项目时使用的文本颜色 :ref:`Color<class_Color>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_color_guide_color:

.. rst-class:: classref-themeproperty

:ref:`Color<class_Color>` **guide_color** = ``Color(0.7, 0.7, 0.7, 0.25)``

参考线的 :ref:`Color<class_Color>` 颜色。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_color_parent_hl_line_color:

.. rst-class:: classref-themeproperty

:ref:`Color<class_Color>` **parent_hl_line_color** = ``Color(0.27, 0.27, 0.27, 1)``

被选中的 :ref:`TreeItem<class_TreeItem>` 与其父项之间的关系线的 :ref:`Color<class_Color>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_color_relationship_line_color:

.. rst-class:: classref-themeproperty

:ref:`Color<class_Color>` **relationship_line_color** = ``Color(0.27, 0.27, 0.27, 1)``

关系线的默认 :ref:`Color<class_Color>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_color_title_button_color:

.. rst-class:: classref-themeproperty

:ref:`Color<class_Color>` **title_button_color** = ``Color(0.875, 0.875, 0.875, 1)``

标题按钮的默认文本 :ref:`Color<class_Color>` 颜色。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_constant_button_margin:

.. rst-class:: classref-themeproperty

:ref:`int<class_int>` **button_margin** = ``4``

单元格中按钮之间的水平间距。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_constant_children_hl_line_width:

.. rst-class:: classref-themeproperty

:ref:`int<class_int>` **children_hl_line_width** = ``1``

被选中的 :ref:`TreeItem<class_TreeItem>` 与其子项之间的关系线的宽度。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_constant_draw_guides:

.. rst-class:: classref-themeproperty

:ref:`int<class_int>` **draw_guides** = ``1``

如果不为零就绘制参考线，行为类似于布尔值。参考线是在每个项的底部画的一条水平线。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_constant_draw_relationship_lines:

.. rst-class:: classref-themeproperty

:ref:`int<class_int>` **draw_relationship_lines** = ``0``

如果不为零就绘制关系线，行为类似于布尔值。关系线在子项的开始处绘制，以显示层次结构。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_constant_h_separation:

.. rst-class:: classref-themeproperty

:ref:`int<class_int>` **h_separation** = ``4``

项目单元之间的水平空间。这也用作禁用折叠时项目开头的边距。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_constant_icon_max_width:

.. rst-class:: classref-themeproperty

:ref:`int<class_int>` **icon_max_width** = ``0``

项目单元格所允许的最大图标宽度。这是在图标默认大小的基础上的限制，在 :ref:`TreeItem.set_icon_max_width<class_TreeItem_method_set_icon_max_width>` 所设置的值之前生效。高度会根据图标的长宽比调整。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_constant_inner_item_margin_bottom:

.. rst-class:: classref-themeproperty

:ref:`int<class_int>` **inner_item_margin_bottom** = ``0``

项目的底部内边距。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_constant_inner_item_margin_left:

.. rst-class:: classref-themeproperty

:ref:`int<class_int>` **inner_item_margin_left** = ``0``

项目的左侧内边距。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_constant_inner_item_margin_right:

.. rst-class:: classref-themeproperty

:ref:`int<class_int>` **inner_item_margin_right** = ``0``

项目的右侧内边距。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_constant_inner_item_margin_top:

.. rst-class:: classref-themeproperty

:ref:`int<class_int>` **inner_item_margin_top** = ``0``

项目的顶部内边距。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_constant_item_margin:

.. rst-class:: classref-themeproperty

:ref:`int<class_int>` **item_margin** = ``16``

项目开头的水平边距。在项目启用折叠功能时使用。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_constant_outline_size:

.. rst-class:: classref-themeproperty

:ref:`int<class_int>` **outline_size** = ``0``

文字轮廓的大小。

\ **注意：**\ 如果使用启用了 :ref:`FontFile.multichannel_signed_distance_field<class_FontFile_property_multichannel_signed_distance_field>` 的字体，其 :ref:`FontFile.msdf_pixel_range<class_FontFile_property_msdf_pixel_range>` 必须至少设置为 :ref:`outline_size<class_Tree_theme_constant_outline_size>` 的\ *两倍*\ ，轮廓渲染才能看起来正确。否则，轮廓可能会比预期的更早被切断。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_constant_parent_hl_line_margin:

.. rst-class:: classref-themeproperty

:ref:`int<class_int>` **parent_hl_line_margin** = ``0``

被选中的 :ref:`TreeItem<class_TreeItem>` 的父关系线，与其未选中的同级的关系线，两者之间的空间。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_constant_parent_hl_line_width:

.. rst-class:: classref-themeproperty

:ref:`int<class_int>` **parent_hl_line_width** = ``1``

被选中的 :ref:`TreeItem<class_TreeItem>` 与其父项之间的关系线的宽度。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_constant_relationship_line_width:

.. rst-class:: classref-themeproperty

:ref:`int<class_int>` **relationship_line_width** = ``1``

关系线的默认宽度。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_constant_scroll_border:

.. rst-class:: classref-themeproperty

:ref:`int<class_int>` **scroll_border** = ``4``

拖动时，鼠标指针与控件边框之间触发边框滚动的最大距离。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_constant_scroll_speed:

.. rst-class:: classref-themeproperty

:ref:`int<class_int>` **scroll_speed** = ``12``

边框滚动的速度。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_constant_scrollbar_h_separation:

.. rst-class:: classref-themeproperty

:ref:`int<class_int>` **scrollbar_h_separation** = ``4``

树中内容与滚动条的水平间距。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_constant_scrollbar_margin_bottom:

.. rst-class:: classref-themeproperty

:ref:`int<class_int>` **scrollbar_margin_bottom** = ``-1``

滚动条的底部边距。为负数时会使用 :ref:`panel<class_Tree_theme_style_panel>` 的底部边距。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_constant_scrollbar_margin_left:

.. rst-class:: classref-themeproperty

:ref:`int<class_int>` **scrollbar_margin_left** = ``-1``

水平滚动条的左侧边距。为负数时会使用 :ref:`panel<class_Tree_theme_style_panel>` 的左侧边距。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_constant_scrollbar_margin_right:

.. rst-class:: classref-themeproperty

:ref:`int<class_int>` **scrollbar_margin_right** = ``-1``

滚动条的右侧边距。为负数时会使用 :ref:`panel<class_Tree_theme_style_panel>` 的右侧边距。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_constant_scrollbar_margin_top:

.. rst-class:: classref-themeproperty

:ref:`int<class_int>` **scrollbar_margin_top** = ``-1``

垂直滚动条的顶部边距。为负数时会使用 :ref:`panel<class_Tree_theme_style_panel>` 的顶部边距。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_constant_scrollbar_v_separation:

.. rst-class:: classref-themeproperty

:ref:`int<class_int>` **scrollbar_v_separation** = ``4``

树中内容与滚动条的垂直间距。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_constant_v_separation:

.. rst-class:: classref-themeproperty

:ref:`int<class_int>` **v_separation** = ``4``

每个项内的垂直填充，即项内容与上或下边框之间的距离。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_font_font:

.. rst-class:: classref-themeproperty

:ref:`Font<class_Font>` **font**

项目文本的字体 :ref:`Font<class_Font>` 。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_font_title_button_font:

.. rst-class:: classref-themeproperty

:ref:`Font<class_Font>` **title_button_font**

标题按钮文本的 :ref:`Font<class_Font>` 字体。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_font_size_font_size:

.. rst-class:: classref-themeproperty

:ref:`int<class_int>` **font_size**

项目文本的字体大小。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_font_size_title_button_font_size:

.. rst-class:: classref-themeproperty

:ref:`int<class_int>` **title_button_font_size**

标题按钮文本的字体大小。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_icon_arrow:

.. rst-class:: classref-themeproperty

:ref:`Texture2D<class_Texture2D>` **arrow**

箭头图标，可折叠项未折叠时使用。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_icon_arrow_collapsed:

.. rst-class:: classref-themeproperty

:ref:`Texture2D<class_Texture2D>` **arrow_collapsed**

箭头图标，可折叠项已折叠时使用（用于从左至右布局）。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_icon_arrow_collapsed_mirrored:

.. rst-class:: classref-themeproperty

:ref:`Texture2D<class_Texture2D>` **arrow_collapsed_mirrored**

箭头图标，可折叠项已折叠时使用（用于从右至左布局）。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_icon_checked:

.. rst-class:: classref-themeproperty

:ref:`Texture2D<class_Texture2D>` **checked**

复选图标，模式为 :ref:`TreeItem.CELL_MODE_CHECK<class_TreeItem_constant_CELL_MODE_CHECK>` 的单元格处于勾选状态时显示。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_icon_indeterminate:

.. rst-class:: classref-themeproperty

:ref:`Texture2D<class_Texture2D>` **indeterminate**

复选图标，模式为 :ref:`TreeItem.CELL_MODE_CHECK<class_TreeItem_constant_CELL_MODE_CHECK>` 的单元格处于中间状态时显示。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_icon_select_arrow:

.. rst-class:: classref-themeproperty

:ref:`Texture2D<class_Texture2D>` **select_arrow**

箭头图标，模式为 :ref:`TreeItem.CELL_MODE_RANGE<class_TreeItem_constant_CELL_MODE_RANGE>` 的单元格显示。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_icon_unchecked:

.. rst-class:: classref-themeproperty

:ref:`Texture2D<class_Texture2D>` **unchecked**

复选图标，模式为 :ref:`TreeItem.CELL_MODE_CHECK<class_TreeItem_constant_CELL_MODE_CHECK>` 的单元格处于未选状态时显示。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_icon_updown:

.. rst-class:: classref-themeproperty

:ref:`Texture2D<class_Texture2D>` **updown**

上下箭头图标，模式为 :ref:`TreeItem.CELL_MODE_RANGE<class_TreeItem_constant_CELL_MODE_RANGE>` 的单元格显示。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_style_button_pressed:

.. rst-class:: classref-themeproperty

:ref:`StyleBox<class_StyleBox>` **button_pressed**

树中的按钮处于按下状态时使用的 :ref:`StyleBox<class_StyleBox>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_style_cursor:

.. rst-class:: classref-themeproperty

:ref:`StyleBox<class_StyleBox>` **cursor**

用作光标的 :ref:`StyleBox<class_StyleBox>`\ ，该 **Tree** 处于聚焦状态时使用。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_style_cursor_unfocused:

.. rst-class:: classref-themeproperty

:ref:`StyleBox<class_StyleBox>` **cursor_unfocused**

用作光标的 :ref:`StyleBox<class_StyleBox>`\ ，该 **Tree** 处于失焦状态时使用。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_style_custom_button:

.. rst-class:: classref-themeproperty

:ref:`StyleBox<class_StyleBox>` **custom_button**

模式为 :ref:`TreeItem.CELL_MODE_RANGE<class_TreeItem_constant_CELL_MODE_RANGE>` 的单元格的默认 :ref:`StyleBox<class_StyleBox>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_style_custom_button_hover:

.. rst-class:: classref-themeproperty

:ref:`StyleBox<class_StyleBox>` **custom_button_hover**

模式为 :ref:`TreeItem.CELL_MODE_RANGE<class_TreeItem_constant_CELL_MODE_RANGE>` 的单元格处于悬停状态时的 :ref:`StyleBox<class_StyleBox>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_style_custom_button_pressed:

.. rst-class:: classref-themeproperty

:ref:`StyleBox<class_StyleBox>` **custom_button_pressed**

模式为 :ref:`TreeItem.CELL_MODE_RANGE<class_TreeItem_constant_CELL_MODE_RANGE>` 的单元格处于按下状态时的 :ref:`StyleBox<class_StyleBox>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_style_focus:

.. rst-class:: classref-themeproperty

:ref:`StyleBox<class_StyleBox>` **focus**

该 **Tree** 的聚焦样式，绘制在所有东西之上。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_style_panel:

.. rst-class:: classref-themeproperty

:ref:`StyleBox<class_StyleBox>` **panel**

该 **Tree** 的背景样式。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_style_selected:

.. rst-class:: classref-themeproperty

:ref:`StyleBox<class_StyleBox>` **selected**

所选项目的 :ref:`StyleBox<class_StyleBox>`\ ，在 **Tree** 没有获得焦点时使用。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_style_selected_focus:

.. rst-class:: classref-themeproperty

:ref:`StyleBox<class_StyleBox>` **selected_focus**

所选项目的 :ref:`StyleBox<class_StyleBox>`\ ，在 **Tree** 获得焦点时使用。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_style_title_button_hover:

.. rst-class:: classref-themeproperty

:ref:`StyleBox<class_StyleBox>` **title_button_hover**

当标题按钮被悬停时使用的 :ref:`StyleBox<class_StyleBox>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_style_title_button_normal:

.. rst-class:: classref-themeproperty

:ref:`StyleBox<class_StyleBox>` **title_button_normal**

标题按钮的默认 :ref:`StyleBox<class_StyleBox>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_Tree_theme_style_title_button_pressed:

.. rst-class:: classref-themeproperty

:ref:`StyleBox<class_StyleBox>` **title_button_pressed**

当标题按钮被按下时使用的 :ref:`StyleBox<class_StyleBox>`\ 。

.. |virtual| replace:: :abbr:`virtual (本方法通常需要用户覆盖才能生效。)`
.. |const| replace:: :abbr:`const (本方法没有副作用。不会修改该实例的任何成员变量。)`
.. |vararg| replace:: :abbr:`vararg (本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。)`
.. |constructor| replace:: :abbr:`constructor (本方法用于构造某个类型。)`
.. |static| replace:: :abbr:`static (调用本方法无需实例，所以可以直接使用类名调用。)`
.. |operator| replace:: :abbr:`operator (本方法描述的是使用本类型作为左操作数的有效操作符。)`
.. |bitfield| replace:: :abbr:`BitField (这个值是由下列标志构成的位掩码整数。)`

:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/doc/classes/Vector3.xml.

.. _class_Vector3:

Vector3
=======

使用浮点数坐标的 3D 向量。

.. rst-class:: classref-introduction-group

描述
----

包含三个元素的结构体，可用于代表 3D 坐标或任何数值的三元组。

使用浮点数坐标。默认情况下，这些浮点值为 32 位精度，与始终为 64 位的 :ref:`float<class_float>` 并不相同。如果需要双精度，请在编译引擎时使用 ``precision=double`` 选项。

对应的整数版本见 :ref:`Vector3i<class_Vector3i>`\ 。

\ **注意：**\ 在布尔语境中，如果 Vector3 等于 ``Vector3(0, 0, 0)`` 则求值结果为 ``false``\ 。否则 Vector3 的求值结果始终为 ``true``\ 。

.. rst-class:: classref-introduction-group

教程
----

- :doc:`数学文档索引 <../tutorials/math/index>`

- :doc:`向量数学 <../tutorials/math/vector_math>`

- :doc:`高等向量数学 <../tutorials/math/vectors_advanced>`

- `3Blue1Brown《线性代数的本质》 <https://www.youtube.com/playlist?list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab>`__

- `矩阵变换演示 <https://godotengine.org/asset-library/asset/2787>`__

- `所有 3D 演示 <https://github.com/godotengine/godot-demo-projects/tree/master/3d>`__

.. rst-class:: classref-reftable-group

属性
----

.. table::
   :widths: auto

   +---------------------------+------------------------------------+---------+
   | :ref:`float<class_float>` | :ref:`x<class_Vector3_property_x>` | ``0.0`` |
   +---------------------------+------------------------------------+---------+
   | :ref:`float<class_float>` | :ref:`y<class_Vector3_property_y>` | ``0.0`` |
   +---------------------------+------------------------------------+---------+
   | :ref:`float<class_float>` | :ref:`z<class_Vector3_property_z>` | ``0.0`` |
   +---------------------------+------------------------------------+---------+

.. rst-class:: classref-reftable-group

构造函数
--------

.. table::
   :widths: auto

   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3<class_Vector3>` | :ref:`Vector3<class_Vector3_constructor_Vector3>`\ (\ )                                                                                              |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3<class_Vector3>` | :ref:`Vector3<class_Vector3_constructor_Vector3>`\ (\ from\: :ref:`Vector3<class_Vector3>`\ )                                                        |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3<class_Vector3>` | :ref:`Vector3<class_Vector3_constructor_Vector3>`\ (\ from\: :ref:`Vector3i<class_Vector3i>`\ )                                                      |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3<class_Vector3>` | :ref:`Vector3<class_Vector3_constructor_Vector3>`\ (\ x\: :ref:`float<class_float>`, y\: :ref:`float<class_float>`, z\: :ref:`float<class_float>`\ ) |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-reftable-group

方法
----

.. table::
   :widths: auto

   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3<class_Vector3>` | :ref:`abs<class_Vector3_method_abs>`\ (\ ) |const|                                                                                                                                                                                                                                                                                                               |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`float<class_float>`     | :ref:`angle_to<class_Vector3_method_angle_to>`\ (\ to\: :ref:`Vector3<class_Vector3>`\ ) |const|                                                                                                                                                                                                                                                                 |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3<class_Vector3>` | :ref:`bezier_derivative<class_Vector3_method_bezier_derivative>`\ (\ control_1\: :ref:`Vector3<class_Vector3>`, control_2\: :ref:`Vector3<class_Vector3>`, end\: :ref:`Vector3<class_Vector3>`, t\: :ref:`float<class_float>`\ ) |const|                                                                                                                         |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3<class_Vector3>` | :ref:`bezier_interpolate<class_Vector3_method_bezier_interpolate>`\ (\ control_1\: :ref:`Vector3<class_Vector3>`, control_2\: :ref:`Vector3<class_Vector3>`, end\: :ref:`Vector3<class_Vector3>`, t\: :ref:`float<class_float>`\ ) |const|                                                                                                                       |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3<class_Vector3>` | :ref:`bounce<class_Vector3_method_bounce>`\ (\ n\: :ref:`Vector3<class_Vector3>`\ ) |const|                                                                                                                                                                                                                                                                      |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3<class_Vector3>` | :ref:`ceil<class_Vector3_method_ceil>`\ (\ ) |const|                                                                                                                                                                                                                                                                                                             |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3<class_Vector3>` | :ref:`clamp<class_Vector3_method_clamp>`\ (\ min\: :ref:`Vector3<class_Vector3>`, max\: :ref:`Vector3<class_Vector3>`\ ) |const|                                                                                                                                                                                                                                 |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3<class_Vector3>` | :ref:`clampf<class_Vector3_method_clampf>`\ (\ min\: :ref:`float<class_float>`, max\: :ref:`float<class_float>`\ ) |const|                                                                                                                                                                                                                                       |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3<class_Vector3>` | :ref:`cross<class_Vector3_method_cross>`\ (\ with\: :ref:`Vector3<class_Vector3>`\ ) |const|                                                                                                                                                                                                                                                                     |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3<class_Vector3>` | :ref:`cubic_interpolate<class_Vector3_method_cubic_interpolate>`\ (\ b\: :ref:`Vector3<class_Vector3>`, pre_a\: :ref:`Vector3<class_Vector3>`, post_b\: :ref:`Vector3<class_Vector3>`, weight\: :ref:`float<class_float>`\ ) |const|                                                                                                                             |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3<class_Vector3>` | :ref:`cubic_interpolate_in_time<class_Vector3_method_cubic_interpolate_in_time>`\ (\ b\: :ref:`Vector3<class_Vector3>`, pre_a\: :ref:`Vector3<class_Vector3>`, post_b\: :ref:`Vector3<class_Vector3>`, weight\: :ref:`float<class_float>`, b_t\: :ref:`float<class_float>`, pre_a_t\: :ref:`float<class_float>`, post_b_t\: :ref:`float<class_float>`\ ) |const| |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3<class_Vector3>` | :ref:`direction_to<class_Vector3_method_direction_to>`\ (\ to\: :ref:`Vector3<class_Vector3>`\ ) |const|                                                                                                                                                                                                                                                         |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`float<class_float>`     | :ref:`distance_squared_to<class_Vector3_method_distance_squared_to>`\ (\ to\: :ref:`Vector3<class_Vector3>`\ ) |const|                                                                                                                                                                                                                                           |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`float<class_float>`     | :ref:`distance_to<class_Vector3_method_distance_to>`\ (\ to\: :ref:`Vector3<class_Vector3>`\ ) |const|                                                                                                                                                                                                                                                           |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`float<class_float>`     | :ref:`dot<class_Vector3_method_dot>`\ (\ with\: :ref:`Vector3<class_Vector3>`\ ) |const|                                                                                                                                                                                                                                                                         |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3<class_Vector3>` | :ref:`floor<class_Vector3_method_floor>`\ (\ ) |const|                                                                                                                                                                                                                                                                                                           |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3<class_Vector3>` | :ref:`inverse<class_Vector3_method_inverse>`\ (\ ) |const|                                                                                                                                                                                                                                                                                                       |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`       | :ref:`is_equal_approx<class_Vector3_method_is_equal_approx>`\ (\ to\: :ref:`Vector3<class_Vector3>`\ ) |const|                                                                                                                                                                                                                                                   |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`       | :ref:`is_finite<class_Vector3_method_is_finite>`\ (\ ) |const|                                                                                                                                                                                                                                                                                                   |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`       | :ref:`is_normalized<class_Vector3_method_is_normalized>`\ (\ ) |const|                                                                                                                                                                                                                                                                                           |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`       | :ref:`is_zero_approx<class_Vector3_method_is_zero_approx>`\ (\ ) |const|                                                                                                                                                                                                                                                                                         |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`float<class_float>`     | :ref:`length<class_Vector3_method_length>`\ (\ ) |const|                                                                                                                                                                                                                                                                                                         |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`float<class_float>`     | :ref:`length_squared<class_Vector3_method_length_squared>`\ (\ ) |const|                                                                                                                                                                                                                                                                                         |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3<class_Vector3>` | :ref:`lerp<class_Vector3_method_lerp>`\ (\ to\: :ref:`Vector3<class_Vector3>`, weight\: :ref:`float<class_float>`\ ) |const|                                                                                                                                                                                                                                     |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3<class_Vector3>` | :ref:`limit_length<class_Vector3_method_limit_length>`\ (\ length\: :ref:`float<class_float>` = 1.0\ ) |const|                                                                                                                                                                                                                                                   |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3<class_Vector3>` | :ref:`max<class_Vector3_method_max>`\ (\ with\: :ref:`Vector3<class_Vector3>`\ ) |const|                                                                                                                                                                                                                                                                         |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`         | :ref:`max_axis_index<class_Vector3_method_max_axis_index>`\ (\ ) |const|                                                                                                                                                                                                                                                                                         |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3<class_Vector3>` | :ref:`maxf<class_Vector3_method_maxf>`\ (\ with\: :ref:`float<class_float>`\ ) |const|                                                                                                                                                                                                                                                                           |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3<class_Vector3>` | :ref:`min<class_Vector3_method_min>`\ (\ with\: :ref:`Vector3<class_Vector3>`\ ) |const|                                                                                                                                                                                                                                                                         |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`         | :ref:`min_axis_index<class_Vector3_method_min_axis_index>`\ (\ ) |const|                                                                                                                                                                                                                                                                                         |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3<class_Vector3>` | :ref:`minf<class_Vector3_method_minf>`\ (\ with\: :ref:`float<class_float>`\ ) |const|                                                                                                                                                                                                                                                                           |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3<class_Vector3>` | :ref:`move_toward<class_Vector3_method_move_toward>`\ (\ to\: :ref:`Vector3<class_Vector3>`, delta\: :ref:`float<class_float>`\ ) |const|                                                                                                                                                                                                                        |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3<class_Vector3>` | :ref:`normalized<class_Vector3_method_normalized>`\ (\ ) |const|                                                                                                                                                                                                                                                                                                 |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3<class_Vector3>` | :ref:`octahedron_decode<class_Vector3_method_octahedron_decode>`\ (\ uv\: :ref:`Vector2<class_Vector2>`\ ) |static|                                                                                                                                                                                                                                              |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector2<class_Vector2>` | :ref:`octahedron_encode<class_Vector3_method_octahedron_encode>`\ (\ ) |const|                                                                                                                                                                                                                                                                                   |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Basis<class_Basis>`     | :ref:`outer<class_Vector3_method_outer>`\ (\ with\: :ref:`Vector3<class_Vector3>`\ ) |const|                                                                                                                                                                                                                                                                     |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3<class_Vector3>` | :ref:`posmod<class_Vector3_method_posmod>`\ (\ mod\: :ref:`float<class_float>`\ ) |const|                                                                                                                                                                                                                                                                        |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3<class_Vector3>` | :ref:`posmodv<class_Vector3_method_posmodv>`\ (\ modv\: :ref:`Vector3<class_Vector3>`\ ) |const|                                                                                                                                                                                                                                                                 |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3<class_Vector3>` | :ref:`project<class_Vector3_method_project>`\ (\ b\: :ref:`Vector3<class_Vector3>`\ ) |const|                                                                                                                                                                                                                                                                    |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3<class_Vector3>` | :ref:`reflect<class_Vector3_method_reflect>`\ (\ n\: :ref:`Vector3<class_Vector3>`\ ) |const|                                                                                                                                                                                                                                                                    |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3<class_Vector3>` | :ref:`rotated<class_Vector3_method_rotated>`\ (\ axis\: :ref:`Vector3<class_Vector3>`, angle\: :ref:`float<class_float>`\ ) |const|                                                                                                                                                                                                                              |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3<class_Vector3>` | :ref:`round<class_Vector3_method_round>`\ (\ ) |const|                                                                                                                                                                                                                                                                                                           |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3<class_Vector3>` | :ref:`sign<class_Vector3_method_sign>`\ (\ ) |const|                                                                                                                                                                                                                                                                                                             |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`float<class_float>`     | :ref:`signed_angle_to<class_Vector3_method_signed_angle_to>`\ (\ to\: :ref:`Vector3<class_Vector3>`, axis\: :ref:`Vector3<class_Vector3>`\ ) |const|                                                                                                                                                                                                             |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3<class_Vector3>` | :ref:`slerp<class_Vector3_method_slerp>`\ (\ to\: :ref:`Vector3<class_Vector3>`, weight\: :ref:`float<class_float>`\ ) |const|                                                                                                                                                                                                                                   |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3<class_Vector3>` | :ref:`slide<class_Vector3_method_slide>`\ (\ n\: :ref:`Vector3<class_Vector3>`\ ) |const|                                                                                                                                                                                                                                                                        |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3<class_Vector3>` | :ref:`snapped<class_Vector3_method_snapped>`\ (\ step\: :ref:`Vector3<class_Vector3>`\ ) |const|                                                                                                                                                                                                                                                                 |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3<class_Vector3>` | :ref:`snappedf<class_Vector3_method_snappedf>`\ (\ step\: :ref:`float<class_float>`\ ) |const|                                                                                                                                                                                                                                                                   |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-reftable-group

运算符
------

.. table::
   :widths: auto

   +-------------------------------+----------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`       | :ref:`operator !=<class_Vector3_operator_neq_Vector3>`\ (\ right\: :ref:`Vector3<class_Vector3>`\ )            |
   +-------------------------------+----------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3<class_Vector3>` | :ref:`operator *<class_Vector3_operator_mul_Basis>`\ (\ right\: :ref:`Basis<class_Basis>`\ )                   |
   +-------------------------------+----------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3<class_Vector3>` | :ref:`operator *<class_Vector3_operator_mul_Quaternion>`\ (\ right\: :ref:`Quaternion<class_Quaternion>`\ )    |
   +-------------------------------+----------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3<class_Vector3>` | :ref:`operator *<class_Vector3_operator_mul_Transform3D>`\ (\ right\: :ref:`Transform3D<class_Transform3D>`\ ) |
   +-------------------------------+----------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3<class_Vector3>` | :ref:`operator *<class_Vector3_operator_mul_Vector3>`\ (\ right\: :ref:`Vector3<class_Vector3>`\ )             |
   +-------------------------------+----------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3<class_Vector3>` | :ref:`operator *<class_Vector3_operator_mul_float>`\ (\ right\: :ref:`float<class_float>`\ )                   |
   +-------------------------------+----------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3<class_Vector3>` | :ref:`operator *<class_Vector3_operator_mul_int>`\ (\ right\: :ref:`int<class_int>`\ )                         |
   +-------------------------------+----------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3<class_Vector3>` | :ref:`operator +<class_Vector3_operator_sum_Vector3>`\ (\ right\: :ref:`Vector3<class_Vector3>`\ )             |
   +-------------------------------+----------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3<class_Vector3>` | :ref:`operator -<class_Vector3_operator_dif_Vector3>`\ (\ right\: :ref:`Vector3<class_Vector3>`\ )             |
   +-------------------------------+----------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3<class_Vector3>` | :ref:`operator /<class_Vector3_operator_div_Vector3>`\ (\ right\: :ref:`Vector3<class_Vector3>`\ )             |
   +-------------------------------+----------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3<class_Vector3>` | :ref:`operator /<class_Vector3_operator_div_float>`\ (\ right\: :ref:`float<class_float>`\ )                   |
   +-------------------------------+----------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3<class_Vector3>` | :ref:`operator /<class_Vector3_operator_div_int>`\ (\ right\: :ref:`int<class_int>`\ )                         |
   +-------------------------------+----------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`       | :ref:`operator \<<class_Vector3_operator_lt_Vector3>`\ (\ right\: :ref:`Vector3<class_Vector3>`\ )             |
   +-------------------------------+----------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`       | :ref:`operator \<=<class_Vector3_operator_lte_Vector3>`\ (\ right\: :ref:`Vector3<class_Vector3>`\ )           |
   +-------------------------------+----------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`       | :ref:`operator ==<class_Vector3_operator_eq_Vector3>`\ (\ right\: :ref:`Vector3<class_Vector3>`\ )             |
   +-------------------------------+----------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`       | :ref:`operator ><class_Vector3_operator_gt_Vector3>`\ (\ right\: :ref:`Vector3<class_Vector3>`\ )              |
   +-------------------------------+----------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`       | :ref:`operator >=<class_Vector3_operator_gte_Vector3>`\ (\ right\: :ref:`Vector3<class_Vector3>`\ )            |
   +-------------------------------+----------------------------------------------------------------------------------------------------------------+
   | :ref:`float<class_float>`     | :ref:`operator []<class_Vector3_operator_idx_int>`\ (\ index\: :ref:`int<class_int>`\ )                        |
   +-------------------------------+----------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3<class_Vector3>` | :ref:`operator unary+<class_Vector3_operator_unplus>`\ (\ )                                                    |
   +-------------------------------+----------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector3<class_Vector3>` | :ref:`operator unary-<class_Vector3_operator_unminus>`\ (\ )                                                   |
   +-------------------------------+----------------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

常量
----

.. _class_Vector3_constant_AXIS_X:

.. rst-class:: classref-constant

**AXIS_X** = ``0`` :ref:`🔗<class_Vector3_constant_AXIS_X>`

X 轴的枚举值。由 :ref:`max_axis_index<class_Vector3_method_max_axis_index>` 和 :ref:`min_axis_index<class_Vector3_method_min_axis_index>` 返回。

.. _class_Vector3_constant_AXIS_Y:

.. rst-class:: classref-constant

**AXIS_Y** = ``1`` :ref:`🔗<class_Vector3_constant_AXIS_Y>`

Y 轴的枚举值。由 :ref:`max_axis_index<class_Vector3_method_max_axis_index>` 和 :ref:`min_axis_index<class_Vector3_method_min_axis_index>` 返回。

.. _class_Vector3_constant_AXIS_Z:

.. rst-class:: classref-constant

**AXIS_Z** = ``2`` :ref:`🔗<class_Vector3_constant_AXIS_Z>`

Z 轴的枚举值。由 :ref:`max_axis_index<class_Vector3_method_max_axis_index>` 和 :ref:`min_axis_index<class_Vector3_method_min_axis_index>` 返回。

.. _class_Vector3_constant_ZERO:

.. rst-class:: classref-constant

**ZERO** = ``Vector3(0, 0, 0)`` :ref:`🔗<class_Vector3_constant_ZERO>`

零向量，所有分量都设置为 ``0`` 的向量。

.. _class_Vector3_constant_ONE:

.. rst-class:: classref-constant

**ONE** = ``Vector3(1, 1, 1)`` :ref:`🔗<class_Vector3_constant_ONE>`

一向量，所有分量都设置为 ``1`` 的向量。

.. _class_Vector3_constant_INF:

.. rst-class:: classref-constant

**INF** = ``Vector3(inf, inf, inf)`` :ref:`🔗<class_Vector3_constant_INF>`

无穷大向量，所有分量都设置为 :ref:`@GDScript.INF<class_@GDScript_constant_INF>` 的向量。

.. _class_Vector3_constant_LEFT:

.. rst-class:: classref-constant

**LEFT** = ``Vector3(-1, 0, 0)`` :ref:`🔗<class_Vector3_constant_LEFT>`

左单位向量。代表局部的左方向，全局的西方向。

.. _class_Vector3_constant_RIGHT:

.. rst-class:: classref-constant

**RIGHT** = ``Vector3(1, 0, 0)`` :ref:`🔗<class_Vector3_constant_RIGHT>`

右单位向量。代表局部的右方向，全局的东方向。

.. _class_Vector3_constant_UP:

.. rst-class:: classref-constant

**UP** = ``Vector3(0, 1, 0)`` :ref:`🔗<class_Vector3_constant_UP>`

上单位向量。

.. _class_Vector3_constant_DOWN:

.. rst-class:: classref-constant

**DOWN** = ``Vector3(0, -1, 0)`` :ref:`🔗<class_Vector3_constant_DOWN>`

下单位向量。

.. _class_Vector3_constant_FORWARD:

.. rst-class:: classref-constant

**FORWARD** = ``Vector3(0, 0, -1)`` :ref:`🔗<class_Vector3_constant_FORWARD>`

向前的单位向量。代表局部的前方，全局的北方。请注意，灯光、相机等的前方和角色等 3D 资产的前方是不同的，后者通常朝向相机。处理 3D 资产空间时，请使用 :ref:`MODEL_FRONT<class_Vector3_constant_MODEL_FRONT>` 等常量。

.. _class_Vector3_constant_BACK:

.. rst-class:: classref-constant

**BACK** = ``Vector3(0, 0, 1)`` :ref:`🔗<class_Vector3_constant_BACK>`

向后的单位向量。代表局部的后方，全局的南方。

.. _class_Vector3_constant_MODEL_LEFT:

.. rst-class:: classref-constant

**MODEL_LEFT** = ``Vector3(1, 0, 0)`` :ref:`🔗<class_Vector3_constant_MODEL_LEFT>`

指向导入后 3D 资产左侧的单位向量。

.. _class_Vector3_constant_MODEL_RIGHT:

.. rst-class:: classref-constant

**MODEL_RIGHT** = ``Vector3(-1, 0, 0)`` :ref:`🔗<class_Vector3_constant_MODEL_RIGHT>`

指向导入后 3D 资产右侧的单位向量。

.. _class_Vector3_constant_MODEL_TOP:

.. rst-class:: classref-constant

**MODEL_TOP** = ``Vector3(0, 1, 0)`` :ref:`🔗<class_Vector3_constant_MODEL_TOP>`

指向导入后 3D 资产顶部（上方）的单位向量。

.. _class_Vector3_constant_MODEL_BOTTOM:

.. rst-class:: classref-constant

**MODEL_BOTTOM** = ``Vector3(0, -1, 0)`` :ref:`🔗<class_Vector3_constant_MODEL_BOTTOM>`

指向导入后 3D 资产底部（下方）的单位向量。

.. _class_Vector3_constant_MODEL_FRONT:

.. rst-class:: classref-constant

**MODEL_FRONT** = ``Vector3(0, 0, 1)`` :ref:`🔗<class_Vector3_constant_MODEL_FRONT>`

指向导入后 3D 资产正面（前方）的单位向量。

.. _class_Vector3_constant_MODEL_REAR:

.. rst-class:: classref-constant

**MODEL_REAR** = ``Vector3(0, 0, -1)`` :ref:`🔗<class_Vector3_constant_MODEL_REAR>`

指向导入后 3D 资产背面（后方）的单位向量。

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

属性说明
--------

.. _class_Vector3_property_x:

.. rst-class:: classref-property

:ref:`float<class_float>` **x** = ``0.0`` :ref:`🔗<class_Vector3_property_x>`

向量的 X 分量。也可以通过使用索引位置 ``[0]`` 访问。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_property_y:

.. rst-class:: classref-property

:ref:`float<class_float>` **y** = ``0.0`` :ref:`🔗<class_Vector3_property_y>`

向量的 Y 分量。也可以通过使用索引位置 ``[1]`` 访问。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_property_z:

.. rst-class:: classref-property

:ref:`float<class_float>` **z** = ``0.0`` :ref:`🔗<class_Vector3_property_z>`

向量的 Z 分量。也可以通过使用索引位置 ``[2]`` 访问。

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

构造函数说明
------------

.. _class_Vector3_constructor_Vector3:

.. rst-class:: classref-constructor

:ref:`Vector3<class_Vector3>` **Vector3**\ (\ ) :ref:`🔗<class_Vector3_constructor_Vector3>`

构造默认初始化的 **Vector3**\ ，所有分量都设置为 ``0``\ 。

.. rst-class:: classref-item-separator

----

.. rst-class:: classref-constructor

:ref:`Vector3<class_Vector3>` **Vector3**\ (\ from\: :ref:`Vector3<class_Vector3>`\ )

构造给定 **Vector3** 的副本。

.. rst-class:: classref-item-separator

----

.. rst-class:: classref-constructor

:ref:`Vector3<class_Vector3>` **Vector3**\ (\ from\: :ref:`Vector3i<class_Vector3i>`\ )

从 :ref:`Vector3i<class_Vector3i>` 构造新的 **Vector3**\ 。

.. rst-class:: classref-item-separator

----

.. rst-class:: classref-constructor

:ref:`Vector3<class_Vector3>` **Vector3**\ (\ x\: :ref:`float<class_float>`, y\: :ref:`float<class_float>`, z\: :ref:`float<class_float>`\ )

返回具有给定分量的 **Vector3**\ 。

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

方法说明
--------

.. _class_Vector3_method_abs:

.. rst-class:: classref-method

:ref:`Vector3<class_Vector3>` **abs**\ (\ ) |const| :ref:`🔗<class_Vector3_method_abs>`

返回一个新向量，其所有分量都是绝对值，即正值。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_method_angle_to:

.. rst-class:: classref-method

:ref:`float<class_float>` **angle_to**\ (\ to\: :ref:`Vector3<class_Vector3>`\ ) |const| :ref:`🔗<class_Vector3_method_angle_to>`

返回与给定向量的无符号最小角度，单位为弧度。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_method_bezier_derivative:

.. rst-class:: classref-method

:ref:`Vector3<class_Vector3>` **bezier_derivative**\ (\ control_1\: :ref:`Vector3<class_Vector3>`, control_2\: :ref:`Vector3<class_Vector3>`, end\: :ref:`Vector3<class_Vector3>`, t\: :ref:`float<class_float>`\ ) |const| :ref:`🔗<class_Vector3_method_bezier_derivative>`

返回\ `贝赛尔曲线 <https://zh.wikipedia.org/zh-cn/%E8%B2%9D%E8%8C%B2%E6%9B%B2%E7%B7%9A>`__\ 上 ``t`` 处的导数，该曲线由此向量和控制点 ``control_1``\ 、\ ``control_2``\ 、终点 ``end`` 定义。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_method_bezier_interpolate:

.. rst-class:: classref-method

:ref:`Vector3<class_Vector3>` **bezier_interpolate**\ (\ control_1\: :ref:`Vector3<class_Vector3>`, control_2\: :ref:`Vector3<class_Vector3>`, end\: :ref:`Vector3<class_Vector3>`, t\: :ref:`float<class_float>`\ ) |const| :ref:`🔗<class_Vector3_method_bezier_interpolate>`

返回\ `贝赛尔曲线 <https://zh.wikipedia.org/zh-cn/%E8%B2%9D%E8%8C%B2%E6%9B%B2%E7%B7%9A>`__\ 上 ``t`` 处的点，该曲线由此向量和控制点 ``control_1``\ 、\ ``control_2``\ 、终点 ``end`` 定义。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_method_bounce:

.. rst-class:: classref-method

:ref:`Vector3<class_Vector3>` **bounce**\ (\ n\: :ref:`Vector3<class_Vector3>`\ ) |const| :ref:`🔗<class_Vector3_method_bounce>`

返回从给定法线 ``n`` 定义的平面“弹起”的向量。

\ **注意：**\ :ref:`bounce<class_Vector3_method_bounce>` 执行大多数引擎和框架调用 ``reflect()`` 的操作。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_method_ceil:

.. rst-class:: classref-method

:ref:`Vector3<class_Vector3>` **ceil**\ (\ ) |const| :ref:`🔗<class_Vector3_method_ceil>`

返回一个新向量，所有的分量都是向上舍入（正无穷大方向）。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_method_clamp:

.. rst-class:: classref-method

:ref:`Vector3<class_Vector3>` **clamp**\ (\ min\: :ref:`Vector3<class_Vector3>`, max\: :ref:`Vector3<class_Vector3>`\ ) |const| :ref:`🔗<class_Vector3_method_clamp>`

返回一个新向量，每个分量都使用 :ref:`@GlobalScope.clamp<class_@GlobalScope_method_clamp>` 限制在 ``min`` 和 ``max`` 之间。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_method_clampf:

.. rst-class:: classref-method

:ref:`Vector3<class_Vector3>` **clampf**\ (\ min\: :ref:`float<class_float>`, max\: :ref:`float<class_float>`\ ) |const| :ref:`🔗<class_Vector3_method_clampf>`

返回一个新向量，每个分量都使用 :ref:`@GlobalScope.clamp<class_@GlobalScope_method_clamp>` 限制在 ``min`` 和 ``max`` 之间。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_method_cross:

.. rst-class:: classref-method

:ref:`Vector3<class_Vector3>` **cross**\ (\ with\: :ref:`Vector3<class_Vector3>`\ ) |const| :ref:`🔗<class_Vector3_method_cross>`

返回该向量与 ``with`` 的叉积。

这将返回一个垂直于该向量和 ``with`` 的向量，它将是两个向量定义的平面的法向量。由于有两个这样的向量，方向相反，该方法返回由右手坐标系定义的向量。如果这两个向量平行，则返回一个空向量，这使其可用于测试两个向量是否平行。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_method_cubic_interpolate:

.. rst-class:: classref-method

:ref:`Vector3<class_Vector3>` **cubic_interpolate**\ (\ b\: :ref:`Vector3<class_Vector3>`, pre_a\: :ref:`Vector3<class_Vector3>`, post_b\: :ref:`Vector3<class_Vector3>`, weight\: :ref:`float<class_float>`\ ) |const| :ref:`🔗<class_Vector3_method_cubic_interpolate>`

返回该向量和 ``b`` 之间进行三次插值 ``weight`` 处的结果，使用 ``pre_a`` 和 ``post_b`` 作为控制柄。\ ``weight`` 在 0.0 到 1.0 的范围内，代表插值的量。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_method_cubic_interpolate_in_time:

.. rst-class:: classref-method

:ref:`Vector3<class_Vector3>` **cubic_interpolate_in_time**\ (\ b\: :ref:`Vector3<class_Vector3>`, pre_a\: :ref:`Vector3<class_Vector3>`, post_b\: :ref:`Vector3<class_Vector3>`, weight\: :ref:`float<class_float>`, b_t\: :ref:`float<class_float>`, pre_a_t\: :ref:`float<class_float>`, post_b_t\: :ref:`float<class_float>`\ ) |const| :ref:`🔗<class_Vector3_method_cubic_interpolate_in_time>`

返回该向量和 ``b`` 之间进行三次插值 ``weight`` 处的结果，使用 ``pre_a`` 和 ``post_b`` 作为控制柄。\ ``weight`` 在 0.0 到 1.0 的范围内，代表插值的量。

通过使用时间值，可以比 :ref:`cubic_interpolate<class_Vector3_method_cubic_interpolate>` 进行更平滑的插值。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_method_direction_to:

.. rst-class:: classref-method

:ref:`Vector3<class_Vector3>` **direction_to**\ (\ to\: :ref:`Vector3<class_Vector3>`\ ) |const| :ref:`🔗<class_Vector3_method_direction_to>`

返回从该向量指向 ``to`` 的归一化向量。相当于使用 ``(b - a).normalized()``\ 。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_method_distance_squared_to:

.. rst-class:: classref-method

:ref:`float<class_float>` **distance_squared_to**\ (\ to\: :ref:`Vector3<class_Vector3>`\ ) |const| :ref:`🔗<class_Vector3_method_distance_squared_to>`

返回该向量与 ``to`` 之间的距离的平方。

该方法比 :ref:`distance_to<class_Vector3_method_distance_to>` 运行得更快，因此请在需要比较向量或者用于某些公式的平方距离时，优先使用这个方法。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_method_distance_to:

.. rst-class:: classref-method

:ref:`float<class_float>` **distance_to**\ (\ to\: :ref:`Vector3<class_Vector3>`\ ) |const| :ref:`🔗<class_Vector3_method_distance_to>`

返回该向量与 ``to`` 之间的距离。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_method_dot:

.. rst-class:: classref-method

:ref:`float<class_float>` **dot**\ (\ with\: :ref:`Vector3<class_Vector3>`\ ) |const| :ref:`🔗<class_Vector3_method_dot>`

Returns the dot product of this vector and ``with``. This can be used to compare the angle between two vectors. For example, this can be used to determine whether an enemy is facing the player.

The dot product will be ``0`` for a right angle (90 degrees), greater than 0 for angles narrower than 90 degrees and lower than 0 for angles wider than 90 degrees.

When using unit (normalized) vectors, the result will always be between ``-1.0`` (180 degree angle) when the vectors are facing opposite directions, and ``1.0`` (0 degree angle) when the vectors are aligned.

\ **Note:** ``a.dot(b)`` is equivalent to ``b.dot(a)``.

.. rst-class:: classref-item-separator

----

.. _class_Vector3_method_floor:

.. rst-class:: classref-method

:ref:`Vector3<class_Vector3>` **floor**\ (\ ) |const| :ref:`🔗<class_Vector3_method_floor>`

返回一个新的向量，所有的向量都被四舍五入，向负无穷大。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_method_inverse:

.. rst-class:: classref-method

:ref:`Vector3<class_Vector3>` **inverse**\ (\ ) |const| :ref:`🔗<class_Vector3_method_inverse>`

返回该向量的逆向量。与 ``Vector3(1.0 / v.x, 1.0 / v.y, 1.0 / v.z)`` 相同。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_method_is_equal_approx:

.. rst-class:: classref-method

:ref:`bool<class_bool>` **is_equal_approx**\ (\ to\: :ref:`Vector3<class_Vector3>`\ ) |const| :ref:`🔗<class_Vector3_method_is_equal_approx>`

如果这个向量与 ``to`` 大致相等，则返回 ``true``\ ，判断方法是对每个分量执行 :ref:`@GlobalScope.is_equal_approx<class_@GlobalScope_method_is_equal_approx>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_method_is_finite:

.. rst-class:: classref-method

:ref:`bool<class_bool>` **is_finite**\ (\ ) |const| :ref:`🔗<class_Vector3_method_is_finite>`

如果该向量无穷，则返回 ``true``\ ，判断方法是对每个分量调用 :ref:`@GlobalScope.is_finite<class_@GlobalScope_method_is_finite>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_method_is_normalized:

.. rst-class:: classref-method

:ref:`bool<class_bool>` **is_normalized**\ (\ ) |const| :ref:`🔗<class_Vector3_method_is_normalized>`

如果该向量是归一化的，即长度约等于 1，则返回 ``true``\ 。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_method_is_zero_approx:

.. rst-class:: classref-method

:ref:`bool<class_bool>` **is_zero_approx**\ (\ ) |const| :ref:`🔗<class_Vector3_method_is_zero_approx>`

如果该向量的值大约为零，则返回 ``true``\ ，判断方法是对每个分量运行 :ref:`@GlobalScope.is_zero_approx<class_@GlobalScope_method_is_zero_approx>`\ 。

该方法比使用 :ref:`is_equal_approx<class_Vector3_method_is_equal_approx>` 和零向量比较要快。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_method_length:

.. rst-class:: classref-method

:ref:`float<class_float>` **length**\ (\ ) |const| :ref:`🔗<class_Vector3_method_length>`

返回这个向量的长度，即大小。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_method_length_squared:

.. rst-class:: classref-method

:ref:`float<class_float>` **length_squared**\ (\ ) |const| :ref:`🔗<class_Vector3_method_length_squared>`

返回这个向量的平方长度，即平方大小。

这个方法比 :ref:`length<class_Vector3_method_length>` 运行得更快，所以如果你需要比较向量或需要一些公式的平方距离时，更喜欢用它。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_method_lerp:

.. rst-class:: classref-method

:ref:`Vector3<class_Vector3>` **lerp**\ (\ to\: :ref:`Vector3<class_Vector3>`, weight\: :ref:`float<class_float>`\ ) |const| :ref:`🔗<class_Vector3_method_lerp>`

返回此向量和 ``to`` 之间，按数量 ``weight`` 线性插值结果。\ ``weight`` 在 ``0.0`` 到 ``1.0`` 的范围内，代表插值的量。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_method_limit_length:

.. rst-class:: classref-method

:ref:`Vector3<class_Vector3>` **limit_length**\ (\ length\: :ref:`float<class_float>` = 1.0\ ) |const| :ref:`🔗<class_Vector3_method_limit_length>`

返回应用了最大长度限制的向量，长度被限制到 ``length``\ 。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_method_max:

.. rst-class:: classref-method

:ref:`Vector3<class_Vector3>` **max**\ (\ with\: :ref:`Vector3<class_Vector3>`\ ) |const| :ref:`🔗<class_Vector3_method_max>`

返回自身与 ``with`` 各分量的最大值，等价于 ``Vector3(maxf(x, with.x), maxf(y, with.y), maxf(z, with.z))``\ 。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_method_max_axis_index:

.. rst-class:: classref-method

:ref:`int<class_int>` **max_axis_index**\ (\ ) |const| :ref:`🔗<class_Vector3_method_max_axis_index>`

返回该向量中最大值的轴。见 ``AXIS_*`` 常量。如果所有分量相等，则该方法返回 :ref:`AXIS_X<class_Vector3_constant_AXIS_X>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_method_maxf:

.. rst-class:: classref-method

:ref:`Vector3<class_Vector3>` **maxf**\ (\ with\: :ref:`float<class_float>`\ ) |const| :ref:`🔗<class_Vector3_method_maxf>`

返回自身与 ``with`` 各分量的最大值，等价于 ``Vector3(maxf(x, with), maxf(y, with), maxf(z, with))``\ 。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_method_min:

.. rst-class:: classref-method

:ref:`Vector3<class_Vector3>` **min**\ (\ with\: :ref:`Vector3<class_Vector3>`\ ) |const| :ref:`🔗<class_Vector3_method_min>`

返回自身与 ``with`` 各分量的最小值，等价于 ``Vector3(minf(x, with.x), minf(y, with.y), minf(z, with.z))``\ 。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_method_min_axis_index:

.. rst-class:: classref-method

:ref:`int<class_int>` **min_axis_index**\ (\ ) |const| :ref:`🔗<class_Vector3_method_min_axis_index>`

返回该向量中最小值的轴。见 ``AXIS_*`` 常量。如果所有分量相等，则该方法返回 :ref:`AXIS_Z<class_Vector3_constant_AXIS_Z>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_method_minf:

.. rst-class:: classref-method

:ref:`Vector3<class_Vector3>` **minf**\ (\ with\: :ref:`float<class_float>`\ ) |const| :ref:`🔗<class_Vector3_method_minf>`

返回自身与 ``with`` 各分量的最小值，等价于 ``Vector3(minf(x, with), minf(y, with), minf(z, with))``\ 。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_method_move_toward:

.. rst-class:: classref-method

:ref:`Vector3<class_Vector3>` **move_toward**\ (\ to\: :ref:`Vector3<class_Vector3>`, delta\: :ref:`float<class_float>`\ ) |const| :ref:`🔗<class_Vector3_method_move_toward>`

返回一个新向量，该向量朝 ``to`` 移动了固定的量 ``delta``\ 。不会超过最终值。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_method_normalized:

.. rst-class:: classref-method

:ref:`Vector3<class_Vector3>` **normalized**\ (\ ) |const| :ref:`🔗<class_Vector3_method_normalized>`

返回该向量缩放至单位长度的结果。等价于 ``v / v.length()``\ 。如果 ``v.length() == 0`` 则返回 ``(0, 0, 0)``\ 。另见 :ref:`is_normalized<class_Vector3_method_is_normalized>`\ 。

\ **注意：**\ 如果输入向量的长度接近零，则这个函数可能返回不正确的值。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_method_octahedron_decode:

.. rst-class:: classref-method

:ref:`Vector3<class_Vector3>` **octahedron_decode**\ (\ uv\: :ref:`Vector2<class_Vector2>`\ ) |static| :ref:`🔗<class_Vector3_method_octahedron_decode>`

根据使用 :ref:`octahedron_encode<class_Vector3_method_octahedron_encode>` 进行八面体压缩后的形式（存储为 :ref:`Vector2<class_Vector2>`\ ）返回 **Vector3**\ 。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_method_octahedron_encode:

.. rst-class:: classref-method

:ref:`Vector2<class_Vector2>` **octahedron_encode**\ (\ ) |const| :ref:`🔗<class_Vector3_method_octahedron_encode>`

将该 **Vector3** 的八面体编码（oct32）形式作为一个 :ref:`Vector2<class_Vector2>` 返回。由于 :ref:`Vector2<class_Vector2>` 占用的内存比 **Vector3** 少 1/3，因此这种压缩形式可用于传递更多的 :ref:`normalized<class_Vector3_method_normalized>` **Vector3**\ ，而不会增加存储或内存需求。另见 :ref:`octahedron_decode<class_Vector3_method_octahedron_decode>`\ 。

\ **注意：**\ :ref:`octahedron_encode<class_Vector3_method_octahedron_encode>` 只能用于 :ref:`normalized<class_Vector3_method_normalized>` 向量。\ :ref:`octahedron_encode<class_Vector3_method_octahedron_encode>` *不*\ 检查这个 **Vector3** 是否已归一化，如果该 **Vector3** 没有被归一化，将返回一个不解压缩到原始值的值。

\ **注意：**\ 八面体压缩是\ *有损的*\ ，尽管视觉差异在现实世界场景中很难被察觉。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_method_outer:

.. rst-class:: classref-method

:ref:`Basis<class_Basis>` **outer**\ (\ with\: :ref:`Vector3<class_Vector3>`\ ) |const| :ref:`🔗<class_Vector3_method_outer>`

返回与 ``with`` 的外积。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_method_posmod:

.. rst-class:: classref-method

:ref:`Vector3<class_Vector3>` **posmod**\ (\ mod\: :ref:`float<class_float>`\ ) |const| :ref:`🔗<class_Vector3_method_posmod>`

返回由该向量的分量与 ``mod`` 执行 :ref:`@GlobalScope.fposmod<class_@GlobalScope_method_fposmod>` 运算后组成的向量。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_method_posmodv:

.. rst-class:: classref-method

:ref:`Vector3<class_Vector3>` **posmodv**\ (\ modv\: :ref:`Vector3<class_Vector3>`\ ) |const| :ref:`🔗<class_Vector3_method_posmodv>`

返回由该向量的分量与 ``modv`` 的分量执行 :ref:`@GlobalScope.fposmod<class_@GlobalScope_method_fposmod>` 运算后组成的向量。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_method_project:

.. rst-class:: classref-method

:ref:`Vector3<class_Vector3>` **project**\ (\ b\: :ref:`Vector3<class_Vector3>`\ ) |const| :ref:`🔗<class_Vector3_method_project>`

返回将该向量投影到给定的 ``b`` 向量上所得到的新向量。得到的新向量与 ``b`` 平行。另见 :ref:`slide<class_Vector3_method_slide>`\ 。

\ **注意：**\ 如果 ``b`` 向量为零向量，得到的新向量的分量均为 :ref:`@GDScript.NAN<class_@GDScript_constant_NAN>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_method_reflect:

.. rst-class:: classref-method

:ref:`Vector3<class_Vector3>` **reflect**\ (\ n\: :ref:`Vector3<class_Vector3>`\ ) |const| :ref:`🔗<class_Vector3_method_reflect>`

返回通过给定法线向量 ``n`` 定义的平面反射向量的结果。

\ **注意：**\ :ref:`reflect<class_Vector3_method_reflect>` 与其他引擎和框架调用的 ``reflect()`` 不同。在其他引擎中，\ ``reflect()`` 返回由给定平面反射的向量的结果。因此反射穿过给定的法线。而在 Godot 中，反射穿过平面，可以被认为是从法线反弹。另请参阅 :ref:`bounce<class_Vector3_method_bounce>`\ ，它执行大多数引擎调用的 ``reflect()``\ 。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_method_rotated:

.. rst-class:: classref-method

:ref:`Vector3<class_Vector3>` **rotated**\ (\ axis\: :ref:`Vector3<class_Vector3>`, angle\: :ref:`float<class_float>`\ ) |const| :ref:`🔗<class_Vector3_method_rotated>`

返回将这个向量围绕给定的轴旋转 ``angle``\ （单位为弧度）的结果。旋转轴必须为归一化的向量。另见 :ref:`@GlobalScope.deg_to_rad<class_@GlobalScope_method_deg_to_rad>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_method_round:

.. rst-class:: classref-method

:ref:`Vector3<class_Vector3>` **round**\ (\ ) |const| :ref:`🔗<class_Vector3_method_round>`

返回所有分量都被四舍五入为最接近的整数的向量，中间情况向远离零的方向舍入。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_method_sign:

.. rst-class:: classref-method

:ref:`Vector3<class_Vector3>` **sign**\ (\ ) |const| :ref:`🔗<class_Vector3_method_sign>`

返回新的向量，分量如果为正则设为 ``1.0``\ ，如果为负则设为 ``-1.0``\ ，如果为零则设为 ``0.0``\ 。结果与对每个分量调用 :ref:`@GlobalScope.sign<class_@GlobalScope_method_sign>` 一致。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_method_signed_angle_to:

.. rst-class:: classref-method

:ref:`float<class_float>` **signed_angle_to**\ (\ to\: :ref:`Vector3<class_Vector3>`, axis\: :ref:`Vector3<class_Vector3>`\ ) |const| :ref:`🔗<class_Vector3_method_signed_angle_to>`

返回给定向量的带符号角度，单位为弧度。从 ``axis`` 指定的一侧看，该角度在逆时针方向时符号为正，在顺时针方向时符号为负。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_method_slerp:

.. rst-class:: classref-method

:ref:`Vector3<class_Vector3>` **slerp**\ (\ to\: :ref:`Vector3<class_Vector3>`, weight\: :ref:`float<class_float>`\ ) |const| :ref:`🔗<class_Vector3_method_slerp>`

返回在这个向量和 ``to`` 之间进行 ``weight`` 的球面线性插值的结果。\ ``weight`` 在 0.0 和 1.0 的范围内，代表插值的量。

如果输入向量的长度不同，这个函数也会对长度进行插值处理。对于输入向量中存在长度为零的向量的特殊情况，这个方法的行为与 :ref:`lerp<class_Vector3_method_lerp>` 一致。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_method_slide:

.. rst-class:: classref-method

:ref:`Vector3<class_Vector3>` **slide**\ (\ n\: :ref:`Vector3<class_Vector3>`\ ) |const| :ref:`🔗<class_Vector3_method_slide>`

返回将该向量沿着法线为 ``n`` 的平面滑动所得到的新向量。得到的新向量与 ``n`` 垂直，等价于将该向量减去在 ``n`` 上的投影。另见 :ref:`project<class_Vector3_method_project>`\ 。

\ **注意：**\ 向量 ``n`` 必须为归一化的向量。另见 :ref:`normalized<class_Vector3_method_normalized>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_method_snapped:

.. rst-class:: classref-method

:ref:`Vector3<class_Vector3>` **snapped**\ (\ step\: :ref:`Vector3<class_Vector3>`\ ) |const| :ref:`🔗<class_Vector3_method_snapped>`

返回新的向量，每个分量都吸附到了与 ``step`` 中对应分量最接近的倍数。也可以用于将分量四舍五入至小数点后的任意位置。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_method_snappedf:

.. rst-class:: classref-method

:ref:`Vector3<class_Vector3>` **snappedf**\ (\ step\: :ref:`float<class_float>`\ ) |const| :ref:`🔗<class_Vector3_method_snappedf>`

返回一个新向量，其中每个分量都吸附到 ``step`` 的最接近的倍数。这也可以用于将分量四舍五入为任意数位的小数。

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

运算符说明
----------

.. _class_Vector3_operator_neq_Vector3:

.. rst-class:: classref-operator

:ref:`bool<class_bool>` **operator !=**\ (\ right\: :ref:`Vector3<class_Vector3>`\ ) :ref:`🔗<class_Vector3_operator_neq_Vector3>`

如果向量不相等，则返回 ``true``\ 。

\ **注意：**\ 由于浮点数精度误差，请考虑改用 :ref:`is_equal_approx<class_Vector3_method_is_equal_approx>`\ ，会更可靠。

\ **注意：**\ 包含 :ref:`@GDScript.NAN<class_@GDScript_constant_NAN>` 元素的向量的行为与其他向量不同。因此，如果包含 NaN，则这个方法的结果可能不准确。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_operator_mul_Basis:

.. rst-class:: classref-operator

:ref:`Vector3<class_Vector3>` **operator ***\ (\ right\: :ref:`Basis<class_Basis>`\ ) :ref:`🔗<class_Vector3_operator_mul_Basis>`

假设该基是正交的（即旋转/反射可以，缩放/倾斜则不然），将 **Vector3** 逆向变换（乘以）给定的 :ref:`Basis<class_Basis>` 矩阵。

\ ``vector * basis`` 性当于 ``basis.transposed() * vector``\ 。请参阅 :ref:`Basis.transposed<class_Basis_method_transposed>`\ 。

对于通过非正交的基的逆进行的变换（例如使用缩放），可以使用 ``basis.inverse() * vector`` 代替。请参阅 :ref:`Basis.inverse<class_Basis_method_inverse>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_operator_mul_Quaternion:

.. rst-class:: classref-operator

:ref:`Vector3<class_Vector3>` **operator ***\ (\ right\: :ref:`Quaternion<class_Quaternion>`\ ) :ref:`🔗<class_Vector3_operator_mul_Quaternion>`

将 **Vector3** 与给定的 :ref:`Quaternion<class_Quaternion>` 进行逆向变换（相乘）。

\ ``vector * quaternion`` 相当于 ``quaternion.inverse() * vector``\ 。请参阅 :ref:`Quaternion.inverse<class_Quaternion_method_inverse>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_operator_mul_Transform3D:

.. rst-class:: classref-operator

:ref:`Vector3<class_Vector3>` **operator ***\ (\ right\: :ref:`Transform3D<class_Transform3D>`\ ) :ref:`🔗<class_Vector3_operator_mul_Transform3D>`

假设该变换的基是正交的（即旋转/反射可以，缩放/倾斜不行），将 **Vector3** 逆向变换（乘以）给定的 :ref:`Transform3D<class_Transform3D>` 变换矩阵。

\ ``vector * transform`` 相当于 ``transform.inverse() * vector``\ 。请参阅 :ref:`Transform3D.inverse<class_Transform3D_method_inverse>`\ 。

对于通过仿射变换的逆进行的变换（例如缩放），可以使用 ``transform.affine_inverse() * vector`` 代替。请参阅 :ref:`Transform3D.affine_inverse<class_Transform3D_method_affine_inverse>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_operator_mul_Vector3:

.. rst-class:: classref-operator

:ref:`Vector3<class_Vector3>` **operator ***\ (\ right\: :ref:`Vector3<class_Vector3>`\ ) :ref:`🔗<class_Vector3_operator_mul_Vector3>`

将该 **Vector3** 的每个分量乘以给定 **Vector3** 的对应分量。

::

    print(Vector3(10, 20, 30) * Vector3(3, 4, 5)) # 输出 "(30, 80, 150)"

.. rst-class:: classref-item-separator

----

.. _class_Vector3_operator_mul_float:

.. rst-class:: classref-operator

:ref:`Vector3<class_Vector3>` **operator ***\ (\ right\: :ref:`float<class_float>`\ ) :ref:`🔗<class_Vector3_operator_mul_float>`

将该 **Vector3** 的每个分量乘以给定的 :ref:`float<class_float>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_operator_mul_int:

.. rst-class:: classref-operator

:ref:`Vector3<class_Vector3>` **operator ***\ (\ right\: :ref:`int<class_int>`\ ) :ref:`🔗<class_Vector3_operator_mul_int>`

将该 **Vector3** 的每个分量乘以给定的 :ref:`int<class_int>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_operator_sum_Vector3:

.. rst-class:: classref-operator

:ref:`Vector3<class_Vector3>` **operator +**\ (\ right\: :ref:`Vector3<class_Vector3>`\ ) :ref:`🔗<class_Vector3_operator_sum_Vector3>`

将该 **Vector3** 的每个分量加上给定 **Vector3** 的对应分量。

::

    print(Vector3(10, 20, 30) + Vector3(3, 4, 5)) # 输出 "(13, 24, 35)"

.. rst-class:: classref-item-separator

----

.. _class_Vector3_operator_dif_Vector3:

.. rst-class:: classref-operator

:ref:`Vector3<class_Vector3>` **operator -**\ (\ right\: :ref:`Vector3<class_Vector3>`\ ) :ref:`🔗<class_Vector3_operator_dif_Vector3>`

将该 **Vector3** 的每个分量减去给定 **Vector3** 的对应分量。

::

    print(Vector3(10, 20, 30) - Vector3(3, 4, 5)) # 输出 "(7, 16, 25)"

.. rst-class:: classref-item-separator

----

.. _class_Vector3_operator_div_Vector3:

.. rst-class:: classref-operator

:ref:`Vector3<class_Vector3>` **operator /**\ (\ right\: :ref:`Vector3<class_Vector3>`\ ) :ref:`🔗<class_Vector3_operator_div_Vector3>`

将该 **Vector3** 的每个分量除以给定 **Vector3** 的对应分量。

::

    print(Vector3(10, 20, 30) / Vector3(2, 5, 3)) # 输出 "(5, 4, 10)"

.. rst-class:: classref-item-separator

----

.. _class_Vector3_operator_div_float:

.. rst-class:: classref-operator

:ref:`Vector3<class_Vector3>` **operator /**\ (\ right\: :ref:`float<class_float>`\ ) :ref:`🔗<class_Vector3_operator_div_float>`

将该 **Vector3** 的每个分量除以给定的 :ref:`float<class_float>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_operator_div_int:

.. rst-class:: classref-operator

:ref:`Vector3<class_Vector3>` **operator /**\ (\ right\: :ref:`int<class_int>`\ ) :ref:`🔗<class_Vector3_operator_div_int>`

将该 **Vector3** 的每个分量除以给定的 :ref:`int<class_int>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_operator_lt_Vector3:

.. rst-class:: classref-operator

:ref:`bool<class_bool>` **operator <**\ (\ right\: :ref:`Vector3<class_Vector3>`\ ) :ref:`🔗<class_Vector3_operator_lt_Vector3>`

比较两个 **Vector3** 向量，首先检查左向量的 X 值是否小于 ``right`` 向量的 X 值。如果 X 值完全相等，则用相同的方法检查两个向量的 Y 值、Z 值。该运算符可用于向量排序。

\ **注意：**\ 包含 :ref:`@GDScript.NAN<class_@GDScript_constant_NAN>` 元素的向量的行为与其他向量不同。因此，如果包含 NaN，则这个方法的结果可能不准确。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_operator_lte_Vector3:

.. rst-class:: classref-operator

:ref:`bool<class_bool>` **operator <=**\ (\ right\: :ref:`Vector3<class_Vector3>`\ ) :ref:`🔗<class_Vector3_operator_lte_Vector3>`

比较两个 **Vector3** 向量，首先检查左向量的 X 值是否小于等于 ``right`` 向量的 X 值。如果 X 值完全相等，则用相同的方法检查两个向量的 Y 值、Z 值。该运算符可用于向量排序。

\ **注意：**\ 包含 :ref:`@GDScript.NAN<class_@GDScript_constant_NAN>` 元素的向量的行为与其他向量不同。因此，如果包含 NaN，则这个方法的结果可能不准确。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_operator_eq_Vector3:

.. rst-class:: classref-operator

:ref:`bool<class_bool>` **operator ==**\ (\ right\: :ref:`Vector3<class_Vector3>`\ ) :ref:`🔗<class_Vector3_operator_eq_Vector3>`

如果向量完全相等，则返回 ``true``\ 。

\ **注意：**\ 由于浮点数精度误差，请考虑改用 :ref:`is_equal_approx<class_Vector3_method_is_equal_approx>`\ ，会更可靠。

\ **注意：**\ 包含 :ref:`@GDScript.NAN<class_@GDScript_constant_NAN>` 元素的向量的行为与其他向量不同。因此，如果包含 NaN，则这个方法的结果可能不准确。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_operator_gt_Vector3:

.. rst-class:: classref-operator

:ref:`bool<class_bool>` **operator >**\ (\ right\: :ref:`Vector3<class_Vector3>`\ ) :ref:`🔗<class_Vector3_operator_gt_Vector3>`

比较两个 **Vector3** 向量，首先检查左向量的 X 值是否大于 ``right`` 向量的 X 值。如果 X 值完全相等，则用相同的方法检查两个向量的 Y 值、Z 值。该运算符可用于向量排序。

\ **注意：**\ 包含 :ref:`@GDScript.NAN<class_@GDScript_constant_NAN>` 元素的向量的行为与其他向量不同。因此，如果包含 NaN，则这个方法的结果可能不准确。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_operator_gte_Vector3:

.. rst-class:: classref-operator

:ref:`bool<class_bool>` **operator >=**\ (\ right\: :ref:`Vector3<class_Vector3>`\ ) :ref:`🔗<class_Vector3_operator_gte_Vector3>`

比较两个 **Vector3** 向量，首先检查左向量的 X 值是否大于等于 ``right`` 向量的 X 值。如果 X 值完全相等，则用相同的方法检查两个向量的 Y 值、Z 值。该运算符可用于向量排序。

\ **注意：**\ 包含 :ref:`@GDScript.NAN<class_@GDScript_constant_NAN>` 元素的向量的行为与其他向量不同。因此，如果包含 NaN，则这个方法的结果可能不准确。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_operator_idx_int:

.. rst-class:: classref-operator

:ref:`float<class_float>` **operator []**\ (\ index\: :ref:`int<class_int>`\ ) :ref:`🔗<class_Vector3_operator_idx_int>`

使用向量分量的 ``index`` 来访问向量分量。\ ``v[0]`` 等价于 ``v.x``\ ，\ ``v[1]`` 等价于 ``v.y``\ ，\ ``v[2]`` 等价于 ``v.z``\ 。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_operator_unplus:

.. rst-class:: classref-operator

:ref:`Vector3<class_Vector3>` **operator unary+**\ (\ ) :ref:`🔗<class_Vector3_operator_unplus>`

返回与 ``+`` 不存在时相同的值。单目 ``+`` 没有作用，但有时可以使你的代码更具可读性。

.. rst-class:: classref-item-separator

----

.. _class_Vector3_operator_unminus:

.. rst-class:: classref-operator

:ref:`Vector3<class_Vector3>` **operator unary-**\ (\ ) :ref:`🔗<class_Vector3_operator_unminus>`

返回该 **Vector3** 的负值。和写 ``Vector3(-v.x, -v.y, -v.z)`` 是一样的。该操作在保持相同幅度的同时，翻转向量的方向。对于浮点数，零也有正负两种。

.. |virtual| replace:: :abbr:`virtual (本方法通常需要用户覆盖才能生效。)`
.. |const| replace:: :abbr:`const (本方法无副作用，不会修改该实例的任何成员变量。)`
.. |vararg| replace:: :abbr:`vararg (本方法除了能接受在此处描述的参数外，还能够继续接受任意数量的参数。)`
.. |constructor| replace:: :abbr:`constructor (本方法用于构造某个类型。)`
.. |static| replace:: :abbr:`static (调用本方法无需实例，可直接使用类名进行调用。)`
.. |operator| replace:: :abbr:`operator (本方法描述的是使用本类型作为左操作数的有效运算符。)`
.. |bitfield| replace:: :abbr:`BitField (这个值是由下列位标志构成位掩码的整数。)`
.. |void| replace:: :abbr:`void (无返回值。)`

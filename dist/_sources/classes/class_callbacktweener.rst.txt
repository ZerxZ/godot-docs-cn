:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/CallbackTweener.xml.

.. _class_CallbackTweener:

CallbackTweener
===============

**继承：** :ref:`Tweener<class_Tweener>` **<** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`

在可选的延迟之后调用指定的方法。

.. rst-class:: classref-introduction-group

描述
----

**CallbackTweener** 可用于在补间序列中调用方法。更多用法信息请参阅 :ref:`Tween.tween_callback<class_Tween_method_tween_callback>`\ 。

如果回调的目标对象被释放，该补间将自动结束。

\ **注意：**\ 创建 **CallbackTweener** 的唯一正确方法是 :ref:`Tween.tween_callback<class_Tween_method_tween_callback>`\ 。任何手动创建的 **CallbackTweener** 都无法正常工作。

.. rst-class:: classref-reftable-group

方法
----

.. table::
   :widths: auto

   +-----------------------------------------------+------------------------------------------------------------------------------------------------------+
   | :ref:`CallbackTweener<class_CallbackTweener>` | :ref:`set_delay<class_CallbackTweener_method_set_delay>` **(** :ref:`float<class_float>` delay **)** |
   +-----------------------------------------------+------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

方法说明
--------

.. _class_CallbackTweener_method_set_delay:

.. rst-class:: classref-method

:ref:`CallbackTweener<class_CallbackTweener>` **set_delay** **(** :ref:`float<class_float>` delay **)**

让该回调延迟给定的时间，单位为秒。

\ **示例：**\ 

::

    var tween = get_tree().create_tween()
    tween.tween_callback(queue_free).set_delay(2) # 会在 2 秒后调用 queue_free()

.. |virtual| replace:: :abbr:`virtual (本方法通常需要用户覆盖才能生效。)`
.. |const| replace:: :abbr:`const (本方法没有副作用。不会修改该实例的任何成员变量。)`
.. |vararg| replace:: :abbr:`vararg (本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。)`
.. |constructor| replace:: :abbr:`constructor (本方法用于构造某个类型。)`
.. |static| replace:: :abbr:`static (调用本方法无需实例，所以可以直接使用类名调用。)`
.. |operator| replace:: :abbr:`operator (本方法描述的是使用本类型作为左操作数的有效操作符。)`
.. |bitfield| replace:: :abbr:`BitField (这个值是由下列标志构成的位掩码整数。)`

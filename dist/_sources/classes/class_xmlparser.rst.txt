:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/doc/classes/XMLParser.xml.

.. _class_XMLParser:

XMLParser
=========

**ÁªßÊâøÔºö** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`

‰∏∫ÂàõÂª∫ XML Êñá‰ª∂Ëß£ÊûêÂô®Êèê‰æõ‰ΩéÈò∂Êé•Âè£„ÄÇ

.. rst-class:: classref-introduction-group

ÊèèËø∞
----

Provides a low-level interface for creating parsers for `XML <https://en.wikipedia.org/wiki/XML>`__ files. This class can serve as base to make custom XML parsers.

To parse XML, you must open a file with the :ref:`open<class_XMLParser_method_open>` method or a buffer with the :ref:`open_buffer<class_XMLParser_method_open_buffer>` method. Then, the :ref:`read<class_XMLParser_method_read>` method must be called to parse the next nodes. Most of the methods take into consideration the currently parsed node.

Here is an example of using **XMLParser** to parse an SVG file (which is based on XML), printing each element and its attributes as a dictionary:


.. tabs::

 .. code-tab:: gdscript

    var parser = XMLParser.new()
    parser.open("path/to/file.svg")
    while parser.read() != ERR_FILE_EOF:
        if parser.get_node_type() == XMLParser.NODE_ELEMENT:
            var node_name = parser.get_node_name()
            var attributes_dict = {}
            for idx in range(parser.get_attribute_count()):
                attributes_dict[parser.get_attribute_name(idx)] = parser.get_attribute_value(idx)
            print("The ", node_name, " element has the following attributes: ", attributes_dict)

 .. code-tab:: csharp

    var parser = new XmlParser();
    parser.Open("path/to/file.svg");
    while (parser.Read() != Error.FileEof)
    {
        if (parser.GetNodeType() == XmlParser.NodeType.Element)
        {
            var nodeName = parser.GetNodeName();
            var attributesDict = new Godot.Collections.Dictionary();
            for (int idx = 0; idx < parser.GetAttributeCount(); idx++)
            {
                attributesDict[parser.GetAttributeName(idx)] = parser.GetAttributeValue(idx);
            }
            GD.Print($"The {nodeName} element has the following attributes: {attributesDict}");
        }
    }



.. rst-class:: classref-reftable-group

ÊñπÊ≥ï
----

.. table::
   :widths: auto

   +------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`                    | :ref:`get_attribute_count<class_XMLParser_method_get_attribute_count>`\ (\ ) |const|                                                           |
   +------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`String<class_String>`              | :ref:`get_attribute_name<class_XMLParser_method_get_attribute_name>`\ (\ idx\: :ref:`int<class_int>`\ ) |const|                                |
   +------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`String<class_String>`              | :ref:`get_attribute_value<class_XMLParser_method_get_attribute_value>`\ (\ idx\: :ref:`int<class_int>`\ ) |const|                              |
   +------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`                    | :ref:`get_current_line<class_XMLParser_method_get_current_line>`\ (\ ) |const|                                                                 |
   +------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`String<class_String>`              | :ref:`get_named_attribute_value<class_XMLParser_method_get_named_attribute_value>`\ (\ name\: :ref:`String<class_String>`\ ) |const|           |
   +------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`String<class_String>`              | :ref:`get_named_attribute_value_safe<class_XMLParser_method_get_named_attribute_value_safe>`\ (\ name\: :ref:`String<class_String>`\ ) |const| |
   +------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`String<class_String>`              | :ref:`get_node_data<class_XMLParser_method_get_node_data>`\ (\ ) |const|                                                                       |
   +------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`String<class_String>`              | :ref:`get_node_name<class_XMLParser_method_get_node_name>`\ (\ ) |const|                                                                       |
   +------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`                    | :ref:`get_node_offset<class_XMLParser_method_get_node_offset>`\ (\ ) |const|                                                                   |
   +------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`NodeType<enum_XMLParser_NodeType>` | :ref:`get_node_type<class_XMLParser_method_get_node_type>`\ (\ )                                                                               |
   +------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`                  | :ref:`has_attribute<class_XMLParser_method_has_attribute>`\ (\ name\: :ref:`String<class_String>`\ ) |const|                                   |
   +------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`                  | :ref:`is_empty<class_XMLParser_method_is_empty>`\ (\ ) |const|                                                                                 |
   +------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Error<enum_@GlobalScope_Error>`    | :ref:`open<class_XMLParser_method_open>`\ (\ file\: :ref:`String<class_String>`\ )                                                             |
   +------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Error<enum_@GlobalScope_Error>`    | :ref:`open_buffer<class_XMLParser_method_open_buffer>`\ (\ buffer\: :ref:`PackedByteArray<class_PackedByteArray>`\ )                           |
   +------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Error<enum_@GlobalScope_Error>`    | :ref:`read<class_XMLParser_method_read>`\ (\ )                                                                                                 |
   +------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Error<enum_@GlobalScope_Error>`    | :ref:`seek<class_XMLParser_method_seek>`\ (\ position\: :ref:`int<class_int>`\ )                                                               |
   +------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------+
   | |void|                                   | :ref:`skip_section<class_XMLParser_method_skip_section>`\ (\ )                                                                                 |
   +------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Êûö‰∏æ
----

.. _enum_XMLParser_NodeType:

.. rst-class:: classref-enumeration

enum **NodeType**: :ref:`üîó<enum_XMLParser_NodeType>`

.. _class_XMLParser_constant_NODE_NONE:

.. rst-class:: classref-enumeration-constant

:ref:`NodeType<enum_XMLParser_NodeType>` **NODE_NONE** = ``0``

Ê≤°ÊúâËäÇÁÇπÔºåÊú™ÊâìÂºÄÊñá‰ª∂ÊàñÁºìÂÜ≤Âå∫„ÄÇ

.. _class_XMLParser_constant_NODE_ELEMENT:

.. rst-class:: classref-enumeration-constant

:ref:`NodeType<enum_XMLParser_NodeType>` **NODE_ELEMENT** = ``1``

ÂÖÉÁ¥†ËäÇÁÇπÁ±ªÂûãÔºå‰πüÁß∞‰ΩúÊ†áÁ≠æÔºå‰æãÂ¶Ç ``<title>``\ „ÄÇ

.. _class_XMLParser_constant_NODE_ELEMENT_END:

.. rst-class:: classref-enumeration-constant

:ref:`NodeType<enum_XMLParser_NodeType>` **NODE_ELEMENT_END** = ``2``

ÂÖÉÁ¥†ÁªìÊùüËäÇÁÇπÁ±ªÂûãÔºå‰æãÂ¶Ç ``</title>``\ „ÄÇ

.. _class_XMLParser_constant_NODE_TEXT:

.. rst-class:: classref-enumeration-constant

:ref:`NodeType<enum_XMLParser_NodeType>` **NODE_TEXT** = ``3``

ÊñáÊú¨ËäÇÁÇπÁ±ªÂûãÔºåÂç≥‰∏çÂú®ÂÖÉÁ¥†‰∏≠ÁöÑÊñáÊú¨„ÄÇÂåÖÂê´Á©∫ÁôΩÂ≠óÁ¨¶„ÄÇ

.. _class_XMLParser_constant_NODE_COMMENT:

.. rst-class:: classref-enumeration-constant

:ref:`NodeType<enum_XMLParser_NodeType>` **NODE_COMMENT** = ``4``

Ê≥®ÈáäËäÇÁÇπÁ±ªÂûãÔºå‰æãÂ¶Ç ``<!--A comment-->``\ „ÄÇ

.. _class_XMLParser_constant_NODE_CDATA:

.. rst-class:: classref-enumeration-constant

:ref:`NodeType<enum_XMLParser_NodeType>` **NODE_CDATA** = ``5``

CDATAÔºàÂ≠óÁ¨¶Êï∞ÊçÆÔºâÈÉ®ÂàÜÂØπÂ∫îÁöÑËäÇÁÇπÁ±ªÂûãÔºå‰æãÂ¶Ç ``<![CDATA[CDATA section]]>``\ „ÄÇ

.. _class_XMLParser_constant_NODE_UNKNOWN:

.. rst-class:: classref-enumeration-constant

:ref:`NodeType<enum_XMLParser_NodeType>` **NODE_UNKNOWN** = ``6``

Êú™Áü•ËäÇÁÇπÁ±ªÂûã„ÄÇ

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

ÊñπÊ≥ïËØ¥Êòé
--------

.. _class_XMLParser_method_get_attribute_count:

.. rst-class:: classref-method

:ref:`int<class_int>` **get_attribute_count**\ (\ ) |const| :ref:`üîó<class_XMLParser_method_get_attribute_count>`

ËøîÂõûÂΩìÂâçËß£ÊûêÂÖÉÁ¥†‰∏≠Â±ûÊÄßÁöÑÊï∞Èáè„ÄÇ

\ **Ê≥®ÊÑèÔºö**\ Â¶ÇÊûúÂú®ÂΩìÂâçËß£ÊûêÁöÑËäÇÁÇπ‰∏çÊòØ :ref:`NODE_ELEMENT<class_XMLParser_constant_NODE_ELEMENT>` Êàñ :ref:`NODE_ELEMENT_END<class_XMLParser_constant_NODE_ELEMENT_END>` Êó∂Ë∞ÉÁî®Ëøô‰∏™ÊñπÊ≥ïÔºåÂàôËØ•ËÆ°Êï∞‰∏ç‰ºöÊõ¥Êñ∞Ôºå‰ªçÁÑ∂ÂèçÊò†ÁöÑÊòØ‰πãÂâçÁöÑÂÖÉÁ¥†„ÄÇ

.. rst-class:: classref-item-separator

----

.. _class_XMLParser_method_get_attribute_name:

.. rst-class:: classref-method

:ref:`String<class_String>` **get_attribute_name**\ (\ idx\: :ref:`int<class_int>`\ ) |const| :ref:`üîó<class_XMLParser_method_get_attribute_name>`

ËøîÂõûÂΩìÂâçËß£ÊûêÂÖÉÁ¥†‰∏≠Êüê‰∏™Â±ûÊÄßÁöÑÂêçÁß∞ÔºåÂ±ûÊÄßÁî± ``idx`` Á¥¢ÂºïÊåáÂÆö„ÄÇ

.. rst-class:: classref-item-separator

----

.. _class_XMLParser_method_get_attribute_value:

.. rst-class:: classref-method

:ref:`String<class_String>` **get_attribute_value**\ (\ idx\: :ref:`int<class_int>`\ ) |const| :ref:`üîó<class_XMLParser_method_get_attribute_value>`

ËøîÂõûÂΩìÂâçËß£ÊûêÂÖÉÁ¥†‰∏≠Êüê‰∏™Â±ûÊÄßÁöÑÂèñÂÄºÔºåÂ±ûÊÄßÁî± ``idx`` Á¥¢ÂºïÊåáÂÆö„ÄÇ

.. rst-class:: classref-item-separator

----

.. _class_XMLParser_method_get_current_line:

.. rst-class:: classref-method

:ref:`int<class_int>` **get_current_line**\ (\ ) |const| :ref:`üîó<class_XMLParser_method_get_current_line>`

ËøîÂõûËß£ÊûêÊñá‰ª∂‰∏≠ÁöÑÂΩìÂâçË°åÔºå‰ªé 0 ÂºÄÂßãËÆ°Êï∞„ÄÇ

.. rst-class:: classref-item-separator

----

.. _class_XMLParser_method_get_named_attribute_value:

.. rst-class:: classref-method

:ref:`String<class_String>` **get_named_attribute_value**\ (\ name\: :ref:`String<class_String>`\ ) |const| :ref:`üîó<class_XMLParser_method_get_named_attribute_value>`

ËøîÂõûÂΩìÂâçËß£ÊûêÂÖÉÁ¥†‰∏≠Êüê‰∏™Â±ûÊÄßÁöÑÂèñÂÄºÔºåÂ±ûÊÄßÁî±ÂêçÁß∞ ``name`` ÊåáÂÆö„ÄÇÂ¶ÇÊûúËØ•ÂÖÉÁ¥†Ê≤°ÊúâÁ¨¶ÂêàË¶ÅÊ±ÇÁöÑÂ±ûÊÄßÔºåÂàô‰ºöÂºïÂèëÈîôËØØ„ÄÇ

.. rst-class:: classref-item-separator

----

.. _class_XMLParser_method_get_named_attribute_value_safe:

.. rst-class:: classref-method

:ref:`String<class_String>` **get_named_attribute_value_safe**\ (\ name\: :ref:`String<class_String>`\ ) |const| :ref:`üîó<class_XMLParser_method_get_named_attribute_value_safe>`

ËøîÂõûÂΩìÂâçËß£ÊûêÂÖÉÁ¥†‰∏≠Êüê‰∏™Â±ûÊÄßÁöÑÂèñÂÄºÔºåÂ±ûÊÄßÁî±ÂêçÁß∞ ``name`` ÊåáÂÆö„ÄÇÂ¶ÇÊûúËØ•ÂÖÉÁ¥†Ê≤°ÊúâÁ¨¶ÂêàË¶ÅÊ±ÇÁöÑÂ±ûÊÄßÔºåÂàô‰ºöËøîÂõûÁ©∫Â≠óÁ¨¶‰∏≤„ÄÇ

.. rst-class:: classref-item-separator

----

.. _class_XMLParser_method_get_node_data:

.. rst-class:: classref-method

:ref:`String<class_String>` **get_node_data**\ (\ ) |const| :ref:`üîó<class_XMLParser_method_get_node_data>`

ËøîÂõûÊñáÊú¨ËäÇÁÇπÁöÑÂÜÖÂÆπ„ÄÇÂ¶ÇÊûúÂΩìÂâçËß£ÊûêËäÇÁÇπÊòØÂÖ∂‰ªñÁ±ªÂûãÔºåÂàô‰ºöÂºïÂèëÈîôËØØ„ÄÇ

.. rst-class:: classref-item-separator

----

.. _class_XMLParser_method_get_node_name:

.. rst-class:: classref-method

:ref:`String<class_String>` **get_node_name**\ (\ ) |const| :ref:`üîó<class_XMLParser_method_get_node_name>`

ËøîÂõûÂÖÉÁ¥†ËäÇÁÇπÁöÑÂêçÁß∞„ÄÇÂ¶ÇÊûúÂΩìÂâçËß£ÊûêÁöÑËäÇÁÇπ‰∏∫ÊñáÊú¨ËäÇÁÇπÔºåÂàôËØ•ÊñπÊ≥ï‰ºöÂºïÂèëÈîôËØØ„ÄÇ

\ **Ê≥®ÊÑèÔºö**\ :ref:`NODE_CDATA<class_XMLParser_constant_NODE_CDATA>` ËäÇÁÇπÁöÑÂÜÖÂÆπÂíå :ref:`NODE_COMMENT<class_XMLParser_constant_NODE_COMMENT>` ËäÇÁÇπÁöÑÊ≥®ÈáäÂ≠óÁ¨¶‰∏≤‰πüÂùáË¢´ËÆ§‰∏∫ÊòØÂêçÁß∞„ÄÇ

.. rst-class:: classref-item-separator

----

.. _class_XMLParser_method_get_node_offset:

.. rst-class:: classref-method

:ref:`int<class_int>` **get_node_offset**\ (\ ) |const| :ref:`üîó<class_XMLParser_method_get_node_offset>`

ËøîÂõûÂΩìÂâçËß£ÊûêËäÇÁÇπÁõ∏ÂØπ‰∫éÊñá‰ª∂ÊàñÁºìÂÜ≤Âå∫ÂºÄÂßãÂ§ÑÁöÑÂ≠óËäÇÂÅèÁßªÈáè„ÄÇÈÄöÂ∏∏Á≠â‰ª∑‰∫éËØªÂèñ‰ΩçÁΩÆ‰πãÂâçÁöÑÂ≠óÁ¨¶Êï∞„ÄÇ

.. rst-class:: classref-item-separator

----

.. _class_XMLParser_method_get_node_type:

.. rst-class:: classref-method

:ref:`NodeType<enum_XMLParser_NodeType>` **get_node_type**\ (\ ) :ref:`üîó<class_XMLParser_method_get_node_type>`

ËøîÂõûÂΩìÂâçËäÇÁÇπÁöÑÁ±ªÂûã„ÄÇËØ∑‰ΩøÁî® :ref:`NodeType<enum_XMLParser_NodeType>` Â∏∏ÈáèËøõË°åÊØîËæÉ„ÄÇ

.. rst-class:: classref-item-separator

----

.. _class_XMLParser_method_has_attribute:

.. rst-class:: classref-method

:ref:`bool<class_bool>` **has_attribute**\ (\ name\: :ref:`String<class_String>`\ ) |const| :ref:`üîó<class_XMLParser_method_has_attribute>`

Â¶ÇÊûúÂΩìÂâçËß£ÊûêÂÖÉÁ¥†Â≠òÂú®Âêç‰∏∫ ``name`` ÁöÑÂ±ûÊÄßÔºåÂàôËøîÂõû ``true``\ „ÄÇ

.. rst-class:: classref-item-separator

----

.. _class_XMLParser_method_is_empty:

.. rst-class:: classref-method

:ref:`bool<class_bool>` **is_empty**\ (\ ) |const| :ref:`üîó<class_XMLParser_method_is_empty>`

Â¶ÇÊûúÂΩìÂâçËß£ÊûêÂÖÉÁ¥†‰∏∫Á©∫ÂàôËøîÂõû ``true``\ Ôºå‰æãÂ¶Ç ``<element />``\ „ÄÇ

.. rst-class:: classref-item-separator

----

.. _class_XMLParser_method_open:

.. rst-class:: classref-method

:ref:`Error<enum_@GlobalScope_Error>` **open**\ (\ file\: :ref:`String<class_String>`\ ) :ref:`üîó<class_XMLParser_method_open>`

ÊâìÂºÄ XML Êñá‰ª∂ ``file`` ËøõË°åËß£Êûê„ÄÇËøô‰∏™ÊñπÊ≥ïËøîÂõûÁöÑÊòØÈîôËØØÁ†Å„ÄÇ

.. rst-class:: classref-item-separator

----

.. _class_XMLParser_method_open_buffer:

.. rst-class:: classref-method

:ref:`Error<enum_@GlobalScope_Error>` **open_buffer**\ (\ buffer\: :ref:`PackedByteArray<class_PackedByteArray>`\ ) :ref:`üîó<class_XMLParser_method_open_buffer>`

ÊâìÂºÄ XML ÂéüÂßãÁºìÂÜ≤Âå∫ ``buffer`` ËøõË°åËß£Êûê„ÄÇËøô‰∏™ÊñπÊ≥ïËøîÂõûÁöÑÊòØÈîôËØØÁ†Å„ÄÇ

.. rst-class:: classref-item-separator

----

.. _class_XMLParser_method_read:

.. rst-class:: classref-method

:ref:`Error<enum_@GlobalScope_Error>` **read**\ (\ ) :ref:`üîó<class_XMLParser_method_read>`

Ëß£ÊûêÊñá‰ª∂ÁöÑ‰∏ã‰∏Ä‰∏™ËäÇÁÇπ„ÄÇËøô‰∏™ÊñπÊ≥ïËøîÂõûÁöÑÊòØÈîôËØØÁ†Å„ÄÇ

.. rst-class:: classref-item-separator

----

.. _class_XMLParser_method_seek:

.. rst-class:: classref-method

:ref:`Error<enum_@GlobalScope_Error>` **seek**\ (\ position\: :ref:`int<class_int>`\ ) :ref:`üîó<class_XMLParser_method_seek>`

Â∞ÜÁºìÂÜ≤Âå∫ÂÖâÊ†áÁßªÂä®Âà∞Êüê‰∏ÄÂÅèÁßªÈáèÔºàÁõ∏ÂØπ‰∫éÂºÄÂßã‰ΩçÁΩÆÔºâÂπ∂Âú®ÈÇ£ÈáåËØªÂèñ‰∏ã‰∏Ä‰∏™ËäÇÁÇπ„ÄÇËøô‰∏™ÊñπÊ≥ïËøîÂõûÁöÑÊòØÈîôËØØÁ†Å„ÄÇ

.. rst-class:: classref-item-separator

----

.. _class_XMLParser_method_skip_section:

.. rst-class:: classref-method

|void| **skip_section**\ (\ ) :ref:`üîó<class_XMLParser_method_skip_section>`

Ë∑≥ËøáÂΩìÂâçÈÉ®ÂàÜ„ÄÇÂ¶ÇÊûúÂΩìÂâçËß£ÊûêÁöÑËäÇÁÇπÂåÖÂê´ÂÖ∂‰ªñÂÜÖÈÉ®ËäÇÁÇπÔºåÂàô‰ºöÂøΩÁï•Ëøô‰∫õËäÇÁÇπÔºåÂÖâÊ†áÂ∞ÜË∑≥ËΩ¨Âà∞ÂΩìÂâçÂÖÉÁ¥†ÁöÑÁªìÂ∞æÂ§Ñ„ÄÇ

.. |virtual| replace:: :abbr:`virtual (Êú¨ÊñπÊ≥ïÈÄöÂ∏∏ÈúÄË¶ÅÁî®Êà∑Ë¶ÜÁõñÊâçËÉΩÁîüÊïà„ÄÇ)`
.. |const| replace:: :abbr:`const (Êú¨ÊñπÊ≥ïÊ≤°ÊúâÂâØ‰ΩúÁî®Ôºå‰∏ç‰ºö‰øÆÊîπËØ•ÂÆû‰æãÁöÑ‰ªª‰ΩïÊàêÂëòÂèòÈáè„ÄÇ)`
.. |vararg| replace:: :abbr:`vararg (Êú¨ÊñπÊ≥ïÈô§‰∫ÜËÉΩÊé•ÂèóÂú®Ê≠§Â§ÑÊèèËø∞ÁöÑÂèÇÊï∞Â§ñÔºåËøòËÉΩÂ§üÁªßÁª≠Êé•Âèó‰ªªÊÑèÊï∞ÈáèÁöÑÂèÇÊï∞„ÄÇ)`
.. |constructor| replace:: :abbr:`constructor (Êú¨ÊñπÊ≥ïÁî®‰∫éÊûÑÈÄ†Êüê‰∏™Á±ªÂûã„ÄÇ)`
.. |static| replace:: :abbr:`static (Ë∞ÉÁî®Êú¨ÊñπÊ≥ïÊó†ÈúÄÂÆû‰æãÔºåÂèØÁõ¥Êé•‰ΩøÁî®Á±ªÂêçËøõË°åË∞ÉÁî®„ÄÇ)`
.. |operator| replace:: :abbr:`operator (Êú¨ÊñπÊ≥ïÊèèËø∞ÁöÑÊòØ‰ΩøÁî®Êú¨Á±ªÂûã‰Ωú‰∏∫Â∑¶Êìç‰ΩúÊï∞ÁöÑÊúâÊïàÊìç‰ΩúÁ¨¶„ÄÇ)`
.. |bitfield| replace:: :abbr:`BitField (Ëøô‰∏™ÂÄºÊòØÁî±‰∏ãÂàóÊ†áÂøóÊûÑÊàêÁöÑ‰ΩçÊé©Á†ÅÊï¥Êï∞„ÄÇ)`
.. |void| replace:: :abbr:`void (Êó†ËøîÂõûÂÄº„ÄÇ)`

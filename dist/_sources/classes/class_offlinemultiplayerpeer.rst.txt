:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/OfflineMultiplayerPeer.xml.

.. _class_OfflineMultiplayerPeer:

OfflineMultiplayerPeer
======================

**继承：** :ref:`MultiplayerPeer<class_MultiplayerPeer>` **<** :ref:`PacketPeer<class_PacketPeer>` **<** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`

始终连接并用作服务器的 :ref:`MultiplayerPeer<class_MultiplayerPeer>`\ 。

.. rst-class:: classref-introduction-group

描述
----

这是 :ref:`Node.multiplayer<class_Node_property_multiplayer>` 的默认 :ref:`MultiplayerAPI.multiplayer_peer<class_MultiplayerAPI_property_multiplayer_peer>`\ 。会模仿未连接任何对等体的服务器的行为。

这意味着 :ref:`SceneTree<class_SceneTree>` 会默认作为多人游戏控制方。调用 :ref:`MultiplayerAPI.is_server<class_MultiplayerAPI_method_is_server>` 会返回 ``true``\ ，调用 :ref:`MultiplayerAPI.get_unique_id<class_MultiplayerAPI_method_get_unique_id>` 会返回 :ref:`MultiplayerPeer.TARGET_PEER_SERVER<class_MultiplayerPeer_constant_TARGET_PEER_SERVER>`\ 。

.. |virtual| replace:: :abbr:`virtual (本方法通常需要用户覆盖才能生效。)`
.. |const| replace:: :abbr:`const (本方法没有副作用。不会修改该实例的任何成员变量。)`
.. |vararg| replace:: :abbr:`vararg (本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。)`
.. |constructor| replace:: :abbr:`constructor (本方法用于构造某个类型。)`
.. |static| replace:: :abbr:`static (调用本方法无需实例，所以可以直接使用类名调用。)`
.. |operator| replace:: :abbr:`operator (本方法描述的是使用本类型作为左操作数的有效操作符。)`
.. |bitfield| replace:: :abbr:`BitField (这个值是由下列标志构成的位掩码整数。)`

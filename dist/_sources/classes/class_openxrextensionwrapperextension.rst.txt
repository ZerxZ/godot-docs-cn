:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/4.2/modules/openxr/doc_classes/OpenXRExtensionWrapperExtension.xml.

.. _class_OpenXRExtensionWrapperExtension:

OpenXRExtensionWrapperExtension
===============================

**继承：** :ref:`Object<class_Object>`

允许客户端使用 GDExtension 实现 OpenXR 扩展。

.. rst-class:: classref-introduction-group

描述
----

**OpenXRExtensionWrapperExtension** 允许客户端使用 GDExtension 实现 OpenXR 扩展。扩展应该使用 :ref:`register_extension_wrapper<class_OpenXRExtensionWrapperExtension_method_register_extension_wrapper>` 注册。

.. rst-class:: classref-reftable-group

方法
----

.. table::
   :widths: auto

   +-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Dictionary<class_Dictionary>`                 | :ref:`_get_requested_extensions<class_OpenXRExtensionWrapperExtension_private_method__get_requested_extensions>` **(** **)** |virtual|                                                                |
   +-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                | :ref:`_on_before_instance_created<class_OpenXRExtensionWrapperExtension_private_method__on_before_instance_created>` **(** **)** |virtual|                                                            |
   +-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`                             | :ref:`_on_event_polled<class_OpenXRExtensionWrapperExtension_private_method__on_event_polled>` **(** const void* event **)** |virtual|                                                                |
   +-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                | :ref:`_on_instance_created<class_OpenXRExtensionWrapperExtension_private_method__on_instance_created>` **(** :ref:`int<class_int>` instance **)** |virtual|                                           |
   +-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                | :ref:`_on_instance_destroyed<class_OpenXRExtensionWrapperExtension_private_method__on_instance_destroyed>` **(** **)** |virtual|                                                                      |
   +-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                | :ref:`_on_pre_render<class_OpenXRExtensionWrapperExtension_private_method__on_pre_render>` **(** **)** |virtual|                                                                                      |
   +-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                | :ref:`_on_process<class_OpenXRExtensionWrapperExtension_private_method__on_process>` **(** **)** |virtual|                                                                                            |
   +-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                | :ref:`_on_register_metadata<class_OpenXRExtensionWrapperExtension_private_method__on_register_metadata>` **(** **)** |virtual|                                                                        |
   +-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                | :ref:`_on_session_created<class_OpenXRExtensionWrapperExtension_private_method__on_session_created>` **(** :ref:`int<class_int>` session **)** |virtual|                                              |
   +-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                | :ref:`_on_session_destroyed<class_OpenXRExtensionWrapperExtension_private_method__on_session_destroyed>` **(** **)** |virtual|                                                                        |
   +-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                | :ref:`_on_state_exiting<class_OpenXRExtensionWrapperExtension_private_method__on_state_exiting>` **(** **)** |virtual|                                                                                |
   +-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                | :ref:`_on_state_focused<class_OpenXRExtensionWrapperExtension_private_method__on_state_focused>` **(** **)** |virtual|                                                                                |
   +-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                | :ref:`_on_state_idle<class_OpenXRExtensionWrapperExtension_private_method__on_state_idle>` **(** **)** |virtual|                                                                                      |
   +-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                | :ref:`_on_state_loss_pending<class_OpenXRExtensionWrapperExtension_private_method__on_state_loss_pending>` **(** **)** |virtual|                                                                      |
   +-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                | :ref:`_on_state_ready<class_OpenXRExtensionWrapperExtension_private_method__on_state_ready>` **(** **)** |virtual|                                                                                    |
   +-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                | :ref:`_on_state_stopping<class_OpenXRExtensionWrapperExtension_private_method__on_state_stopping>` **(** **)** |virtual|                                                                              |
   +-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                | :ref:`_on_state_synchronized<class_OpenXRExtensionWrapperExtension_private_method__on_state_synchronized>` **(** **)** |virtual|                                                                      |
   +-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                | :ref:`_on_state_visible<class_OpenXRExtensionWrapperExtension_private_method__on_state_visible>` **(** **)** |virtual|                                                                                |
   +-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`                               | :ref:`_set_instance_create_info_and_get_next_pointer<class_OpenXRExtensionWrapperExtension_private_method__set_instance_create_info_and_get_next_pointer>` **(** void* next_pointer **)** |virtual|   |
   +-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`                               | :ref:`_set_session_create_and_get_next_pointer<class_OpenXRExtensionWrapperExtension_private_method__set_session_create_and_get_next_pointer>` **(** void* next_pointer **)** |virtual|               |
   +-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`                               | :ref:`_set_swapchain_create_info_and_get_next_pointer<class_OpenXRExtensionWrapperExtension_private_method__set_swapchain_create_info_and_get_next_pointer>` **(** void* next_pointer **)** |virtual| |
   +-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`                               | :ref:`_set_system_properties_and_get_next_pointer<class_OpenXRExtensionWrapperExtension_private_method__set_system_properties_and_get_next_pointer>` **(** void* next_pointer **)** |virtual|         |
   +-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`OpenXRAPIExtension<class_OpenXRAPIExtension>` | :ref:`get_openxr_api<class_OpenXRExtensionWrapperExtension_method_get_openxr_api>` **(** **)**                                                                                                        |
   +-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                | :ref:`register_extension_wrapper<class_OpenXRExtensionWrapperExtension_method_register_extension_wrapper>` **(** **)**                                                                                |
   +-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

方法说明
--------

.. _class_OpenXRExtensionWrapperExtension_private_method__get_requested_extensions:

.. rst-class:: classref-method

:ref:`Dictionary<class_Dictionary>` **_get_requested_extensions** **(** **)** |virtual|

返回与该扩展相关的 OpenXR 扩展的 :ref:`Dictionary<class_Dictionary>`\ 。该 :ref:`Dictionary<class_Dictionary>` 应包含扩展名，映射到 ``bool *`` 转换为整数：

- 如果 ``bool *`` 是 ``nullptr``\ ，则该扩展是强制性的。

- 如果 ``bool *`` 指向布尔值，则在启用扩展的情况下，该布尔值将更新为 ``true``\ 。

.. rst-class:: classref-item-separator

----

.. _class_OpenXRExtensionWrapperExtension_private_method__on_before_instance_created:

.. rst-class:: classref-method

void **_on_before_instance_created** **(** **)** |virtual|

在创建 OpenXR 实例之前调用。

.. rst-class:: classref-item-separator

----

.. _class_OpenXRExtensionWrapperExtension_private_method__on_event_polled:

.. rst-class:: classref-method

:ref:`bool<class_bool>` **_on_event_polled** **(** const void* event **)** |virtual|

当有 OpenXR 事件需要处理时调用。实现时，如果事件已被处理，则返回 ``true``\ ，否则返回 ``false``\ 。

.. rst-class:: classref-item-separator

----

.. _class_OpenXRExtensionWrapperExtension_private_method__on_instance_created:

.. rst-class:: classref-method

void **_on_instance_created** **(** :ref:`int<class_int>` instance **)** |virtual|

在创建 OpenXR 实例后立即调用。

.. rst-class:: classref-item-separator

----

.. _class_OpenXRExtensionWrapperExtension_private_method__on_instance_destroyed:

.. rst-class:: classref-method

void **_on_instance_destroyed** **(** **)** |virtual|

在 OpenXR 实例被销毁之前调用。

.. rst-class:: classref-item-separator

----

.. _class_OpenXRExtensionWrapperExtension_private_method__on_pre_render:

.. rst-class:: classref-method

void **_on_pre_render** **(** **)** |virtual|

在 XR 视口开始其渲染步进之前调用。

.. rst-class:: classref-item-separator

----

.. _class_OpenXRExtensionWrapperExtension_private_method__on_process:

.. rst-class:: classref-method

void **_on_process** **(** **)** |virtual|

作为 OpenXR 进程处理的一部分调用。这发生在主循环的一般和物理处理步进之前。在该步进中，控制器数据被查询并可供游戏逻辑使用。

.. rst-class:: classref-item-separator

----

.. _class_OpenXRExtensionWrapperExtension_private_method__on_register_metadata:

.. rst-class:: classref-method

void **_on_register_metadata** **(** **)** |virtual|

允许扩展注册额外的控制器元数据。即使 OpenXR API 未被构造，也会调用该函数，因为元数据需要可供编辑器使用。

扩展还应该提供元数据，无论主机系统是否支持它们。控制器数据用于为可以访问相关硬件的用户设置动作映射。

.. rst-class:: classref-item-separator

----

.. _class_OpenXRExtensionWrapperExtension_private_method__on_session_created:

.. rst-class:: classref-method

void **_on_session_created** **(** :ref:`int<class_int>` session **)** |virtual|

在创建 OpenXR 会话后立即调用。

.. rst-class:: classref-item-separator

----

.. _class_OpenXRExtensionWrapperExtension_private_method__on_session_destroyed:

.. rst-class:: classref-method

void **_on_session_destroyed** **(** **)** |virtual|

在 OpenXR 会话被销毁之前调用。

.. rst-class:: classref-item-separator

----

.. _class_OpenXRExtensionWrapperExtension_private_method__on_state_exiting:

.. rst-class:: classref-method

void **_on_state_exiting** **(** **)** |virtual|

当 OpenXR 会话状态被更改为退出时调用。

.. rst-class:: classref-item-separator

----

.. _class_OpenXRExtensionWrapperExtension_private_method__on_state_focused:

.. rst-class:: classref-method

void **_on_state_focused** **(** **)** |virtual|

当 OpenXR 会话状态被更改为聚焦时调用。该状态是游戏运行时的活动状态。

.. rst-class:: classref-item-separator

----

.. _class_OpenXRExtensionWrapperExtension_private_method__on_state_idle:

.. rst-class:: classref-method

void **_on_state_idle** **(** **)** |virtual|

当 OpenXR 会话状态被更改为空闲时调用。

.. rst-class:: classref-item-separator

----

.. _class_OpenXRExtensionWrapperExtension_private_method__on_state_loss_pending:

.. rst-class:: classref-method

void **_on_state_loss_pending** **(** **)** |virtual|

当 OpenXR 会话状态被更改为丢失挂起时调用。

.. rst-class:: classref-item-separator

----

.. _class_OpenXRExtensionWrapperExtension_private_method__on_state_ready:

.. rst-class:: classref-method

void **_on_state_ready** **(** **)** |virtual|

当 OpenXR 会话状态被更改为就绪时调用。这意味着 OpenXR 已准备好建立会话。

.. rst-class:: classref-item-separator

----

.. _class_OpenXRExtensionWrapperExtension_private_method__on_state_stopping:

.. rst-class:: classref-method

void **_on_state_stopping** **(** **)** |virtual|

当 OpenXR 会话状态被更改为停止时调用。

.. rst-class:: classref-item-separator

----

.. _class_OpenXRExtensionWrapperExtension_private_method__on_state_synchronized:

.. rst-class:: classref-method

void **_on_state_synchronized** **(** **)** |virtual|

当 OpenXR 会话状态被更改为同步时调用。当应用程序失去焦点时，OpenXR 也会返回到该状态。

.. rst-class:: classref-item-separator

----

.. _class_OpenXRExtensionWrapperExtension_private_method__on_state_visible:

.. rst-class:: classref-method

void **_on_state_visible** **(** **)** |virtual|

当 OpenXR 会话状态被更改为可见时调用。这意味着 OpenXR 现在已准备好接收帧。

.. rst-class:: classref-item-separator

----

.. _class_OpenXRExtensionWrapperExtension_private_method__set_instance_create_info_and_get_next_pointer:

.. rst-class:: classref-method

:ref:`int<class_int>` **_set_instance_create_info_and_get_next_pointer** **(** void* next_pointer **)** |virtual|

创建 OpenXR 实例时添加额外的数据结构。

.. rst-class:: classref-item-separator

----

.. _class_OpenXRExtensionWrapperExtension_private_method__set_session_create_and_get_next_pointer:

.. rst-class:: classref-method

:ref:`int<class_int>` **_set_session_create_and_get_next_pointer** **(** void* next_pointer **)** |virtual|

创建 OpenXR 会话时添加额外的数据结构。

.. rst-class:: classref-item-separator

----

.. _class_OpenXRExtensionWrapperExtension_private_method__set_swapchain_create_info_and_get_next_pointer:

.. rst-class:: classref-method

:ref:`int<class_int>` **_set_swapchain_create_info_and_get_next_pointer** **(** void* next_pointer **)** |virtual|

创建 OpenXR 交换链时添加额外的数据结构。

.. rst-class:: classref-item-separator

----

.. _class_OpenXRExtensionWrapperExtension_private_method__set_system_properties_and_get_next_pointer:

.. rst-class:: classref-method

:ref:`int<class_int>` **_set_system_properties_and_get_next_pointer** **(** void* next_pointer **)** |virtual|

在询问 OpenXR 系统功能时添加额外的数据结构。

.. rst-class:: classref-item-separator

----

.. _class_OpenXRExtensionWrapperExtension_method_get_openxr_api:

.. rst-class:: classref-method

:ref:`OpenXRAPIExtension<class_OpenXRAPIExtension>` **get_openxr_api** **(** **)**

返回创建的 :ref:`OpenXRAPIExtension<class_OpenXRAPIExtension>`\ ，可用于访问 OpenXR API。

.. rst-class:: classref-item-separator

----

.. _class_OpenXRExtensionWrapperExtension_method_register_extension_wrapper:

.. rst-class:: classref-method

void **register_extension_wrapper** **(** **)**

注册扩展程序。这应该发生在核心模块初始化级别。

.. |virtual| replace:: :abbr:`virtual (本方法通常需要用户覆盖才能生效。)`
.. |const| replace:: :abbr:`const (本方法没有副作用。不会修改该实例的任何成员变量。)`
.. |vararg| replace:: :abbr:`vararg (本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。)`
.. |constructor| replace:: :abbr:`constructor (本方法用于构造某个类型。)`
.. |static| replace:: :abbr:`static (调用本方法无需实例，所以可以直接使用类名调用。)`
.. |operator| replace:: :abbr:`operator (本方法描述的是使用本类型作为左操作数的有效操作符。)`
.. |bitfield| replace:: :abbr:`BitField (这个值是由下列标志构成的位掩码整数。)`

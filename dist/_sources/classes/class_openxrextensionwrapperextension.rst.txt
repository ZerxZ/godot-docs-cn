:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/4.2/modules/openxr/doc_classes/OpenXRExtensionWrapperExtension.xml.

.. _class_OpenXRExtensionWrapperExtension:

OpenXRExtensionWrapperExtension
===============================

**Inherits:** :ref:`Object<class_Object>`

Allows clients to implement OpenXR extensions with GDExtension.

.. rst-class:: classref-introduction-group

Description
-----------

**OpenXRExtensionWrapperExtension** allows clients to implement OpenXR extensions with GDExtension. The extension should be registered with :ref:`register_extension_wrapper<class_OpenXRExtensionWrapperExtension_method_register_extension_wrapper>`.

.. rst-class:: classref-reftable-group

Methods
-------

.. table::
   :widths: auto

   +-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Dictionary<class_Dictionary>`                 | :ref:`_get_requested_extensions<class_OpenXRExtensionWrapperExtension_private_method__get_requested_extensions>` **(** **)** |virtual|                                                                |
   +-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                | :ref:`_on_before_instance_created<class_OpenXRExtensionWrapperExtension_private_method__on_before_instance_created>` **(** **)** |virtual|                                                            |
   +-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`                             | :ref:`_on_event_polled<class_OpenXRExtensionWrapperExtension_private_method__on_event_polled>` **(** const void* event **)** |virtual|                                                                |
   +-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                | :ref:`_on_instance_created<class_OpenXRExtensionWrapperExtension_private_method__on_instance_created>` **(** :ref:`int<class_int>` instance **)** |virtual|                                           |
   +-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                | :ref:`_on_instance_destroyed<class_OpenXRExtensionWrapperExtension_private_method__on_instance_destroyed>` **(** **)** |virtual|                                                                      |
   +-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                | :ref:`_on_pre_render<class_OpenXRExtensionWrapperExtension_private_method__on_pre_render>` **(** **)** |virtual|                                                                                      |
   +-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                | :ref:`_on_process<class_OpenXRExtensionWrapperExtension_private_method__on_process>` **(** **)** |virtual|                                                                                            |
   +-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                | :ref:`_on_register_metadata<class_OpenXRExtensionWrapperExtension_private_method__on_register_metadata>` **(** **)** |virtual|                                                                        |
   +-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                | :ref:`_on_session_created<class_OpenXRExtensionWrapperExtension_private_method__on_session_created>` **(** :ref:`int<class_int>` session **)** |virtual|                                              |
   +-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                | :ref:`_on_session_destroyed<class_OpenXRExtensionWrapperExtension_private_method__on_session_destroyed>` **(** **)** |virtual|                                                                        |
   +-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                | :ref:`_on_state_exiting<class_OpenXRExtensionWrapperExtension_private_method__on_state_exiting>` **(** **)** |virtual|                                                                                |
   +-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                | :ref:`_on_state_focused<class_OpenXRExtensionWrapperExtension_private_method__on_state_focused>` **(** **)** |virtual|                                                                                |
   +-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                | :ref:`_on_state_idle<class_OpenXRExtensionWrapperExtension_private_method__on_state_idle>` **(** **)** |virtual|                                                                                      |
   +-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                | :ref:`_on_state_loss_pending<class_OpenXRExtensionWrapperExtension_private_method__on_state_loss_pending>` **(** **)** |virtual|                                                                      |
   +-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                | :ref:`_on_state_ready<class_OpenXRExtensionWrapperExtension_private_method__on_state_ready>` **(** **)** |virtual|                                                                                    |
   +-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                | :ref:`_on_state_stopping<class_OpenXRExtensionWrapperExtension_private_method__on_state_stopping>` **(** **)** |virtual|                                                                              |
   +-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                | :ref:`_on_state_synchronized<class_OpenXRExtensionWrapperExtension_private_method__on_state_synchronized>` **(** **)** |virtual|                                                                      |
   +-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                | :ref:`_on_state_visible<class_OpenXRExtensionWrapperExtension_private_method__on_state_visible>` **(** **)** |virtual|                                                                                |
   +-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`                               | :ref:`_set_instance_create_info_and_get_next_pointer<class_OpenXRExtensionWrapperExtension_private_method__set_instance_create_info_and_get_next_pointer>` **(** void* next_pointer **)** |virtual|   |
   +-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`                               | :ref:`_set_session_create_and_get_next_pointer<class_OpenXRExtensionWrapperExtension_private_method__set_session_create_and_get_next_pointer>` **(** void* next_pointer **)** |virtual|               |
   +-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`                               | :ref:`_set_swapchain_create_info_and_get_next_pointer<class_OpenXRExtensionWrapperExtension_private_method__set_swapchain_create_info_and_get_next_pointer>` **(** void* next_pointer **)** |virtual| |
   +-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`                               | :ref:`_set_system_properties_and_get_next_pointer<class_OpenXRExtensionWrapperExtension_private_method__set_system_properties_and_get_next_pointer>` **(** void* next_pointer **)** |virtual|         |
   +-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`OpenXRAPIExtension<class_OpenXRAPIExtension>` | :ref:`get_openxr_api<class_OpenXRExtensionWrapperExtension_method_get_openxr_api>` **(** **)**                                                                                                        |
   +-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                | :ref:`register_extension_wrapper<class_OpenXRExtensionWrapperExtension_method_register_extension_wrapper>` **(** **)**                                                                                |
   +-----------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Method Descriptions
-------------------

.. _class_OpenXRExtensionWrapperExtension_private_method__get_requested_extensions:

.. rst-class:: classref-method

:ref:`Dictionary<class_Dictionary>` **_get_requested_extensions** **(** **)** |virtual|

Returns a :ref:`Dictionary<class_Dictionary>` of OpenXR extensions related to this extension. The :ref:`Dictionary<class_Dictionary>` should contain the name of the extension, mapped to a ``bool *`` cast to an integer:

- If the ``bool *`` is a ``nullptr`` this extension is mandatory.

- If the ``bool *`` points to a boolean, the boolean will be updated to ``true`` if the extension is enabled.

.. rst-class:: classref-item-separator

----

.. _class_OpenXRExtensionWrapperExtension_private_method__on_before_instance_created:

.. rst-class:: classref-method

void **_on_before_instance_created** **(** **)** |virtual|

Called before the OpenXR instance is created.

.. rst-class:: classref-item-separator

----

.. _class_OpenXRExtensionWrapperExtension_private_method__on_event_polled:

.. rst-class:: classref-method

:ref:`bool<class_bool>` **_on_event_polled** **(** const void* event **)** |virtual|

Called when there is an OpenXR event to process. When implementing, return ``true`` if the event was handled, return ``false`` otherwise.

.. rst-class:: classref-item-separator

----

.. _class_OpenXRExtensionWrapperExtension_private_method__on_instance_created:

.. rst-class:: classref-method

void **_on_instance_created** **(** :ref:`int<class_int>` instance **)** |virtual|

Called right after the OpenXR instance is created.

.. rst-class:: classref-item-separator

----

.. _class_OpenXRExtensionWrapperExtension_private_method__on_instance_destroyed:

.. rst-class:: classref-method

void **_on_instance_destroyed** **(** **)** |virtual|

Called right before the OpenXR instance is destroyed.

.. rst-class:: classref-item-separator

----

.. _class_OpenXRExtensionWrapperExtension_private_method__on_pre_render:

.. rst-class:: classref-method

void **_on_pre_render** **(** **)** |virtual|

Called right before the XR viewports begin their rendering step.

.. rst-class:: classref-item-separator

----

.. _class_OpenXRExtensionWrapperExtension_private_method__on_process:

.. rst-class:: classref-method

void **_on_process** **(** **)** |virtual|

Called as part of the OpenXR process handling. This happens right before general and physics processing steps of the main loop. During this step controller data is queried and made available to game logic.

.. rst-class:: classref-item-separator

----

.. _class_OpenXRExtensionWrapperExtension_private_method__on_register_metadata:

.. rst-class:: classref-method

void **_on_register_metadata** **(** **)** |virtual|

Allows extensions to register additional controller metadata. This function is called even when the OpenXR API is not constructed as the metadata needs to be available to the editor.

Extensions should also provide metadata regardless of whether they are supported on the host system. The controller data is used to setup action maps for users who may have access to the relevant hardware.

.. rst-class:: classref-item-separator

----

.. _class_OpenXRExtensionWrapperExtension_private_method__on_session_created:

.. rst-class:: classref-method

void **_on_session_created** **(** :ref:`int<class_int>` session **)** |virtual|

Called right after the OpenXR session is created.

.. rst-class:: classref-item-separator

----

.. _class_OpenXRExtensionWrapperExtension_private_method__on_session_destroyed:

.. rst-class:: classref-method

void **_on_session_destroyed** **(** **)** |virtual|

Called right before the OpenXR session is destroyed.

.. rst-class:: classref-item-separator

----

.. _class_OpenXRExtensionWrapperExtension_private_method__on_state_exiting:

.. rst-class:: classref-method

void **_on_state_exiting** **(** **)** |virtual|

Called when the OpenXR session state is changed to exiting.

.. rst-class:: classref-item-separator

----

.. _class_OpenXRExtensionWrapperExtension_private_method__on_state_focused:

.. rst-class:: classref-method

void **_on_state_focused** **(** **)** |virtual|

Called when the OpenXR session state is changed to focused. This state is the active state when the game runs.

.. rst-class:: classref-item-separator

----

.. _class_OpenXRExtensionWrapperExtension_private_method__on_state_idle:

.. rst-class:: classref-method

void **_on_state_idle** **(** **)** |virtual|

Called when the OpenXR session state is changed to idle.

.. rst-class:: classref-item-separator

----

.. _class_OpenXRExtensionWrapperExtension_private_method__on_state_loss_pending:

.. rst-class:: classref-method

void **_on_state_loss_pending** **(** **)** |virtual|

Called when the OpenXR session state is changed to loss pending.

.. rst-class:: classref-item-separator

----

.. _class_OpenXRExtensionWrapperExtension_private_method__on_state_ready:

.. rst-class:: classref-method

void **_on_state_ready** **(** **)** |virtual|

Called when the OpenXR session state is changed to ready. This means OpenXR is ready to set up the session.

.. rst-class:: classref-item-separator

----

.. _class_OpenXRExtensionWrapperExtension_private_method__on_state_stopping:

.. rst-class:: classref-method

void **_on_state_stopping** **(** **)** |virtual|

Called when the OpenXR session state is changed to stopping.

.. rst-class:: classref-item-separator

----

.. _class_OpenXRExtensionWrapperExtension_private_method__on_state_synchronized:

.. rst-class:: classref-method

void **_on_state_synchronized** **(** **)** |virtual|

Called when the OpenXR session state is changed to synchronized. OpenXR also returns to this state when the application loses focus.

.. rst-class:: classref-item-separator

----

.. _class_OpenXRExtensionWrapperExtension_private_method__on_state_visible:

.. rst-class:: classref-method

void **_on_state_visible** **(** **)** |virtual|

Called when the OpenXR session state is changed to visible. This means OpenXR is now ready to receive frames.

.. rst-class:: classref-item-separator

----

.. _class_OpenXRExtensionWrapperExtension_private_method__set_instance_create_info_and_get_next_pointer:

.. rst-class:: classref-method

:ref:`int<class_int>` **_set_instance_create_info_and_get_next_pointer** **(** void* next_pointer **)** |virtual|

Adds additional data structures when the OpenXR instance is created.

.. rst-class:: classref-item-separator

----

.. _class_OpenXRExtensionWrapperExtension_private_method__set_session_create_and_get_next_pointer:

.. rst-class:: classref-method

:ref:`int<class_int>` **_set_session_create_and_get_next_pointer** **(** void* next_pointer **)** |virtual|

Adds additional data structures when the OpenXR session is created.

.. rst-class:: classref-item-separator

----

.. _class_OpenXRExtensionWrapperExtension_private_method__set_swapchain_create_info_and_get_next_pointer:

.. rst-class:: classref-method

:ref:`int<class_int>` **_set_swapchain_create_info_and_get_next_pointer** **(** void* next_pointer **)** |virtual|

Adds additional data structures when creating OpenXR swapchains.

.. rst-class:: classref-item-separator

----

.. _class_OpenXRExtensionWrapperExtension_private_method__set_system_properties_and_get_next_pointer:

.. rst-class:: classref-method

:ref:`int<class_int>` **_set_system_properties_and_get_next_pointer** **(** void* next_pointer **)** |virtual|

Adds additional data structures when interogating OpenXR system abilities.

.. rst-class:: classref-item-separator

----

.. _class_OpenXRExtensionWrapperExtension_method_get_openxr_api:

.. rst-class:: classref-method

:ref:`OpenXRAPIExtension<class_OpenXRAPIExtension>` **get_openxr_api** **(** **)**

Returns the created :ref:`OpenXRAPIExtension<class_OpenXRAPIExtension>`, which can be used to access the OpenXR API.

.. rst-class:: classref-item-separator

----

.. _class_OpenXRExtensionWrapperExtension_method_register_extension_wrapper:

.. rst-class:: classref-method

void **register_extension_wrapper** **(** **)**

Registers the extension. This should happen at core module initialization level.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`

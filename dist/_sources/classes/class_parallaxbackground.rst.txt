:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/ParallaxBackground.xml.

.. _class_ParallaxBackground:

ParallaxBackground
==================

**继承：** :ref:`CanvasLayer<class_CanvasLayer>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

用于创建视差滚动背景的节点。

.. rst-class:: classref-introduction-group

描述
----

ParallaxBackground 使用一个或多个 :ref:`ParallaxLayer<class_ParallaxLayer>` 子节点来创建视差效果。每个 :ref:`ParallaxLayer<class_ParallaxLayer>` 可以使用 :ref:`ParallaxLayer.motion_offset<class_ParallaxLayer_property_motion_offset>` 以不同的速度移动。这在 2D 游戏中可以创造一种深度错觉。如果没有与 :ref:`Camera2D<class_Camera2D>` 一起使用，你必须手动计算 :ref:`scroll_offset<class_ParallaxBackground_property_scroll_offset>`\ 。

\ **注意：**\ 每个 **ParallaxBackground** 都是在各自的 :ref:`Viewport<class_Viewport>` 中绘制的，无法在不同 :ref:`Viewport<class_Viewport>` 之间共享，见 :ref:`CanvasLayer.custom_viewport<class_CanvasLayer_property_custom_viewport>`\ 。在分屏游戏等使用多个 :ref:`Viewport<class_Viewport>` 的场景下，你需要每个需要绘制的 :ref:`Viewport<class_Viewport>` 创建单独的 **ParallaxBackground**\ 。

.. rst-class:: classref-reftable-group

属性
----

.. table::
   :widths: auto

   +-------------------------------+-----------------------------------------------------------------------------------------------+---------------------------------------------------------------------------+
   | :ref:`int<class_int>`         | layer                                                                                         | ``-100`` (overrides :ref:`CanvasLayer<class_CanvasLayer_property_layer>`) |
   +-------------------------------+-----------------------------------------------------------------------------------------------+---------------------------------------------------------------------------+
   | :ref:`Vector2<class_Vector2>` | :ref:`scroll_base_offset<class_ParallaxBackground_property_scroll_base_offset>`               | ``Vector2(0, 0)``                                                         |
   +-------------------------------+-----------------------------------------------------------------------------------------------+---------------------------------------------------------------------------+
   | :ref:`Vector2<class_Vector2>` | :ref:`scroll_base_scale<class_ParallaxBackground_property_scroll_base_scale>`                 | ``Vector2(1, 1)``                                                         |
   +-------------------------------+-----------------------------------------------------------------------------------------------+---------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`       | :ref:`scroll_ignore_camera_zoom<class_ParallaxBackground_property_scroll_ignore_camera_zoom>` | ``false``                                                                 |
   +-------------------------------+-----------------------------------------------------------------------------------------------+---------------------------------------------------------------------------+
   | :ref:`Vector2<class_Vector2>` | :ref:`scroll_limit_begin<class_ParallaxBackground_property_scroll_limit_begin>`               | ``Vector2(0, 0)``                                                         |
   +-------------------------------+-----------------------------------------------------------------------------------------------+---------------------------------------------------------------------------+
   | :ref:`Vector2<class_Vector2>` | :ref:`scroll_limit_end<class_ParallaxBackground_property_scroll_limit_end>`                   | ``Vector2(0, 0)``                                                         |
   +-------------------------------+-----------------------------------------------------------------------------------------------+---------------------------------------------------------------------------+
   | :ref:`Vector2<class_Vector2>` | :ref:`scroll_offset<class_ParallaxBackground_property_scroll_offset>`                         | ``Vector2(0, 0)``                                                         |
   +-------------------------------+-----------------------------------------------------------------------------------------------+---------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

属性说明
--------

.. _class_ParallaxBackground_property_scroll_base_offset:

.. rst-class:: classref-property

:ref:`Vector2<class_Vector2>` **scroll_base_offset** = ``Vector2(0, 0)``

.. rst-class:: classref-property-setget

- void **set_scroll_base_offset** **(** :ref:`Vector2<class_Vector2>` value **)**
- :ref:`Vector2<class_Vector2>` **get_scroll_base_offset** **(** **)**

所有 :ref:`ParallaxLayer<class_ParallaxLayer>` 子元素的基本位置偏移。

.. rst-class:: classref-item-separator

----

.. _class_ParallaxBackground_property_scroll_base_scale:

.. rst-class:: classref-property

:ref:`Vector2<class_Vector2>` **scroll_base_scale** = ``Vector2(1, 1)``

.. rst-class:: classref-property-setget

- void **set_scroll_base_scale** **(** :ref:`Vector2<class_Vector2>` value **)**
- :ref:`Vector2<class_Vector2>` **get_scroll_base_scale** **(** **)**

所有 :ref:`ParallaxLayer<class_ParallaxLayer>` 子元素的基本移动比例。

.. rst-class:: classref-item-separator

----

.. _class_ParallaxBackground_property_scroll_ignore_camera_zoom:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **scroll_ignore_camera_zoom** = ``false``

.. rst-class:: classref-property-setget

- void **set_ignore_camera_zoom** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **is_ignore_camera_zoom** **(** **)**

为 ``true`` 时，\ :ref:`ParallaxLayer<class_ParallaxLayer>` 子元素将不受相机缩放级别的影响。

.. rst-class:: classref-item-separator

----

.. _class_ParallaxBackground_property_scroll_limit_begin:

.. rst-class:: classref-property

:ref:`Vector2<class_Vector2>` **scroll_limit_begin** = ``Vector2(0, 0)``

.. rst-class:: classref-property-setget

- void **set_limit_begin** **(** :ref:`Vector2<class_Vector2>` value **)**
- :ref:`Vector2<class_Vector2>` **get_limit_begin** **(** **)**

开始滚动的左上角限制。如果相机超出这个限制，背景将停止滚动。必须低于 :ref:`scroll_limit_end<class_ParallaxBackground_property_scroll_limit_end>` 才能工作。

.. rst-class:: classref-item-separator

----

.. _class_ParallaxBackground_property_scroll_limit_end:

.. rst-class:: classref-property

:ref:`Vector2<class_Vector2>` **scroll_limit_end** = ``Vector2(0, 0)``

.. rst-class:: classref-property-setget

- void **set_limit_end** **(** :ref:`Vector2<class_Vector2>` value **)**
- :ref:`Vector2<class_Vector2>` **get_limit_end** **(** **)**

右下角限制滚动结束。如果相机超出这个限制，背景将停止滚动。必须高于 :ref:`scroll_limit_begin<class_ParallaxBackground_property_scroll_limit_begin>` 才能工作。

.. rst-class:: classref-item-separator

----

.. _class_ParallaxBackground_property_scroll_offset:

.. rst-class:: classref-property

:ref:`Vector2<class_Vector2>` **scroll_offset** = ``Vector2(0, 0)``

.. rst-class:: classref-property-setget

- void **set_scroll_offset** **(** :ref:`Vector2<class_Vector2>` value **)**
- :ref:`Vector2<class_Vector2>` **get_scroll_offset** **(** **)**

视差背景的滚动值。使用 :ref:`Camera2D<class_Camera2D>` 时会自动计算，但也可用于手动管理无相机时的滚动。

.. |virtual| replace:: :abbr:`virtual (本方法通常需要用户覆盖才能生效。)`
.. |const| replace:: :abbr:`const (本方法没有副作用。不会修改该实例的任何成员变量。)`
.. |vararg| replace:: :abbr:`vararg (本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。)`
.. |constructor| replace:: :abbr:`constructor (本方法用于构造某个类型。)`
.. |static| replace:: :abbr:`static (调用本方法无需实例，所以可以直接使用类名调用。)`
.. |operator| replace:: :abbr:`operator (本方法描述的是使用本类型作为左操作数的有效操作符。)`
.. |bitfield| replace:: :abbr:`BitField (这个值是由下列标志构成的位掩码整数。)`

:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/SubViewport.xml.

.. _class_SubViewport:

SubViewport
===========

**继承：** :ref:`Viewport<class_Viewport>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

游戏世界的界面，不会创建窗口，也不会直接绘制到屏幕上。

.. rst-class:: classref-introduction-group

描述
----

**SubViewport** 会将场景中的一个矩形区域分离出来，能够独立显示。例如，可以用于在 3D 世界中显示 UI。

\ **注意：**\ **SubViewport** 是 :ref:`Viewport<class_Viewport>` 但不是 :ref:`Window<class_Window>`\ ，即它本身不绘制任何内容。要显示内容，\ **SubViewport** 的大小必须非零，并且应该被放在 :ref:`SubViewportContainer<class_SubViewportContainer>` 内，或被分配给 :ref:`ViewportTexture<class_ViewportTexture>`\ 。

.. rst-class:: classref-introduction-group

教程
----

- :doc:`使用视口 <../tutorials/rendering/viewports>`

- :doc:`Viewport 和画布变换 <../tutorials/2d/2d_transforms>`

- `3D GUI 演示 <https://godotengine.org/asset-library/asset/127>`__

- `2D 中的 3D 演示 <https://godotengine.org/asset-library/asset/128>`__

- `3D 中的 2D 演示 <https://godotengine.org/asset-library/asset/129>`__

- `屏幕捕捉演示 <https://godotengine.org/asset-library/asset/130>`__

- `动态分屏演示 <https://godotengine.org/asset-library/asset/541>`__

- `3D Viewport 缩放演示 <https://godotengine.org/asset-library/asset/586>`__

.. rst-class:: classref-reftable-group

属性
----

.. table::
   :widths: auto

   +------------------------------------------------+----------------------------------------------------------------------------------------+------------------------+
   | :ref:`ClearMode<enum_SubViewport_ClearMode>`   | :ref:`render_target_clear_mode<class_SubViewport_property_render_target_clear_mode>`   | ``0``                  |
   +------------------------------------------------+----------------------------------------------------------------------------------------+------------------------+
   | :ref:`UpdateMode<enum_SubViewport_UpdateMode>` | :ref:`render_target_update_mode<class_SubViewport_property_render_target_update_mode>` | ``2``                  |
   +------------------------------------------------+----------------------------------------------------------------------------------------+------------------------+
   | :ref:`Vector2i<class_Vector2i>`                | :ref:`size<class_SubViewport_property_size>`                                           | ``Vector2i(512, 512)`` |
   +------------------------------------------------+----------------------------------------------------------------------------------------+------------------------+
   | :ref:`Vector2i<class_Vector2i>`                | :ref:`size_2d_override<class_SubViewport_property_size_2d_override>`                   | ``Vector2i(0, 0)``     |
   +------------------------------------------------+----------------------------------------------------------------------------------------+------------------------+
   | :ref:`bool<class_bool>`                        | :ref:`size_2d_override_stretch<class_SubViewport_property_size_2d_override_stretch>`   | ``false``              |
   +------------------------------------------------+----------------------------------------------------------------------------------------+------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

枚举
----

.. _enum_SubViewport_ClearMode:

.. rst-class:: classref-enumeration

enum **ClearMode**:

.. _class_SubViewport_constant_CLEAR_MODE_ALWAYS:

.. rst-class:: classref-enumeration-constant

:ref:`ClearMode<enum_SubViewport_ClearMode>` **CLEAR_MODE_ALWAYS** = ``0``

绘制前始终清除渲染目标。

.. _class_SubViewport_constant_CLEAR_MODE_NEVER:

.. rst-class:: classref-enumeration-constant

:ref:`ClearMode<enum_SubViewport_ClearMode>` **CLEAR_MODE_NEVER** = ``1``

永不清除渲染目标。

.. _class_SubViewport_constant_CLEAR_MODE_ONCE:

.. rst-class:: classref-enumeration-constant

:ref:`ClearMode<enum_SubViewport_ClearMode>` **CLEAR_MODE_ONCE** = ``2``

在下一帧清除渲染目标，然后切换到 :ref:`CLEAR_MODE_NEVER<class_SubViewport_constant_CLEAR_MODE_NEVER>`\ 。

.. rst-class:: classref-item-separator

----

.. _enum_SubViewport_UpdateMode:

.. rst-class:: classref-enumeration

enum **UpdateMode**:

.. _class_SubViewport_constant_UPDATE_DISABLED:

.. rst-class:: classref-enumeration-constant

:ref:`UpdateMode<enum_SubViewport_UpdateMode>` **UPDATE_DISABLED** = ``0``

不要更新渲染目标。

.. _class_SubViewport_constant_UPDATE_ONCE:

.. rst-class:: classref-enumeration-constant

:ref:`UpdateMode<enum_SubViewport_UpdateMode>` **UPDATE_ONCE** = ``1``

更新渲染目标一次，然后切换到 :ref:`UPDATE_DISABLED<class_SubViewport_constant_UPDATE_DISABLED>`\ 。

.. _class_SubViewport_constant_UPDATE_WHEN_VISIBLE:

.. rst-class:: classref-enumeration-constant

:ref:`UpdateMode<enum_SubViewport_UpdateMode>` **UPDATE_WHEN_VISIBLE** = ``2``

仅在渲染目标可见时更新渲染目标。这是默认值。

.. _class_SubViewport_constant_UPDATE_WHEN_PARENT_VISIBLE:

.. rst-class:: classref-enumeration-constant

:ref:`UpdateMode<enum_SubViewport_UpdateMode>` **UPDATE_WHEN_PARENT_VISIBLE** = ``3``

仅在其父级可见时更新渲染目标。

.. _class_SubViewport_constant_UPDATE_ALWAYS:

.. rst-class:: classref-enumeration-constant

:ref:`UpdateMode<enum_SubViewport_UpdateMode>` **UPDATE_ALWAYS** = ``4``

始终更新渲染目标。

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

属性说明
--------

.. _class_SubViewport_property_render_target_clear_mode:

.. rst-class:: classref-property

:ref:`ClearMode<enum_SubViewport_ClearMode>` **render_target_clear_mode** = ``0``

.. rst-class:: classref-property-setget

- void **set_clear_mode** **(** :ref:`ClearMode<enum_SubViewport_ClearMode>` value **)**
- :ref:`ClearMode<enum_SubViewport_ClearMode>` **get_clear_mode** **(** **)**

该子视口用作渲染目标时的清除模式。

\ **注意：**\ 此属性适用于 2D 用途。

.. rst-class:: classref-item-separator

----

.. _class_SubViewport_property_render_target_update_mode:

.. rst-class:: classref-property

:ref:`UpdateMode<enum_SubViewport_UpdateMode>` **render_target_update_mode** = ``2``

.. rst-class:: classref-property-setget

- void **set_update_mode** **(** :ref:`UpdateMode<enum_SubViewport_UpdateMode>` value **)**
- :ref:`UpdateMode<enum_SubViewport_UpdateMode>` **get_update_mode** **(** **)**

该子视口用作渲染目标时的更新模式。

.. rst-class:: classref-item-separator

----

.. _class_SubViewport_property_size:

.. rst-class:: classref-property

:ref:`Vector2i<class_Vector2i>` **size** = ``Vector2i(512, 512)``

.. rst-class:: classref-property-setget

- void **set_size** **(** :ref:`Vector2i<class_Vector2i>` value **)**
- :ref:`Vector2i<class_Vector2i>` **get_size** **(** **)**

子视口的宽度和高度。必须在两个维度上设置为大于或等于 2 像素的值。否则，不会显示任何内容。

\ **注意：**\ 如果父节点是一个 :ref:`SubViewportContainer<class_SubViewportContainer>`\ ，并且它的 :ref:`SubViewportContainer.stretch<class_SubViewportContainer_property_stretch>` 为 ``true``\ ，则无法手动更改该视口大小。

.. rst-class:: classref-item-separator

----

.. _class_SubViewport_property_size_2d_override:

.. rst-class:: classref-property

:ref:`Vector2i<class_Vector2i>` **size_2d_override** = ``Vector2i(0, 0)``

.. rst-class:: classref-property-setget

- void **set_size_2d_override** **(** :ref:`Vector2i<class_Vector2i>` value **)**
- :ref:`Vector2i<class_Vector2i>` **get_size_2d_override** **(** **)**

子视口的 2D 尺寸覆盖。如果宽度或高度为 ``0``\ ，则禁用覆盖。

.. rst-class:: classref-item-separator

----

.. _class_SubViewport_property_size_2d_override_stretch:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **size_2d_override_stretch** = ``false``

.. rst-class:: classref-property-setget

- void **set_size_2d_override_stretch** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **is_size_2d_override_stretch_enabled** **(** **)**

如果为 ``true``\ ，则 2D 尺寸覆盖也会影响拉伸。

.. |virtual| replace:: :abbr:`virtual (本方法通常需要用户覆盖才能生效。)`
.. |const| replace:: :abbr:`const (本方法没有副作用。不会修改该实例的任何成员变量。)`
.. |vararg| replace:: :abbr:`vararg (本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。)`
.. |constructor| replace:: :abbr:`constructor (本方法用于构造某个类型。)`
.. |static| replace:: :abbr:`static (调用本方法无需实例，所以可以直接使用类名调用。)`
.. |operator| replace:: :abbr:`operator (本方法描述的是使用本类型作为左操作数的有效操作符。)`
.. |bitfield| replace:: :abbr:`BitField (这个值是由下列标志构成的位掩码整数。)`

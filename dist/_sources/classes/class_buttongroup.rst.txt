:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/ButtonGroup.xml.

.. _class_ButtonGroup:

ButtonGroup
===========

**继承：** :ref:`Resource<class_Resource>` **<** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`

不允许同时按下多个按钮的按钮的一个分组。

.. rst-class:: classref-introduction-group

描述
----

:ref:`BaseButton<class_BaseButton>` 派生按钮的分组。\ **ButtonGroup** 中的按钮被视为单选按钮：同一时间最多只能按下一个按钮。某些类型的按钮（例如 :ref:`CheckBox<class_CheckBox>`\ ）在该状态下可能会有特殊的外观。

\ **ButtonGroup** 的每个成员都应该将 :ref:`BaseButton.toggle_mode<class_BaseButton_property_toggle_mode>` 设置为 ``true``\ 。

.. rst-class:: classref-reftable-group

属性
----

.. table::
   :widths: auto

   +-------------------------+----------------------------------------------------------------+---------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>` | :ref:`allow_unpress<class_ButtonGroup_property_allow_unpress>` | ``false``                                                                             |
   +-------------------------+----------------------------------------------------------------+---------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>` | resource_local_to_scene                                        | ``true`` (overrides :ref:`Resource<class_Resource_property_resource_local_to_scene>`) |
   +-------------------------+----------------------------------------------------------------+---------------------------------------------------------------------------------------+

.. rst-class:: classref-reftable-group

方法
----

.. table::
   :widths: auto

   +---------------------------------------+------------------------------------------------------------------------------------+
   | :ref:`BaseButton[]<class_BaseButton>` | :ref:`get_buttons<class_ButtonGroup_method_get_buttons>` **(** **)**               |
   +---------------------------------------+------------------------------------------------------------------------------------+
   | :ref:`BaseButton<class_BaseButton>`   | :ref:`get_pressed_button<class_ButtonGroup_method_get_pressed_button>` **(** **)** |
   +---------------------------------------+------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

信号
----

.. _class_ButtonGroup_signal_pressed:

.. rst-class:: classref-signal

**pressed** **(** :ref:`BaseButton<class_BaseButton>` button **)**

当该组中的某个按钮被按下时发出。

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

属性说明
--------

.. _class_ButtonGroup_property_allow_unpress:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **allow_unpress** = ``false``

.. rst-class:: classref-property-setget

- void **set_allow_unpress** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **is_allow_unpress** **(** **)**

如果为 ``true``\ ，则可以取消按下该 **ButtonGroup** 中的所有按钮。

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

方法说明
--------

.. _class_ButtonGroup_method_get_buttons:

.. rst-class:: classref-method

:ref:`BaseButton[]<class_BaseButton>` **get_buttons** **(** **)**

返回元素类型为 :ref:`Button<class_Button>` 的 :ref:`Array<class_Array>`\ ，这些 :ref:`Button<class_Button>` 将其作为 **ButtonGroup**\ （见 :ref:`BaseButton.button_group<class_BaseButton_property_button_group>`\ ）。

.. rst-class:: classref-item-separator

----

.. _class_ButtonGroup_method_get_pressed_button:

.. rst-class:: classref-method

:ref:`BaseButton<class_BaseButton>` **get_pressed_button** **(** **)**

返回当前按下的按钮。

.. |virtual| replace:: :abbr:`virtual (本方法通常需要用户覆盖才能生效。)`
.. |const| replace:: :abbr:`const (本方法没有副作用。不会修改该实例的任何成员变量。)`
.. |vararg| replace:: :abbr:`vararg (本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。)`
.. |constructor| replace:: :abbr:`constructor (本方法用于构造某个类型。)`
.. |static| replace:: :abbr:`static (调用本方法无需实例，所以可以直接使用类名调用。)`
.. |operator| replace:: :abbr:`operator (本方法描述的是使用本类型作为左操作数的有效操作符。)`
.. |bitfield| replace:: :abbr:`BitField (这个值是由下列标志构成的位掩码整数。)`

:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/Vector2.xml.

.. _class_Vector2:

Vector2
=======

使用浮点数坐标的 2D 向量。

.. rst-class:: classref-introduction-group

描述
----

包含两个元素的结构体，可用于代表 2D 坐标或任何数值的二元组。

使用浮点数坐标。默认情况下，这些浮点值为 32 位精度，与始终为 64 位的 :ref:`float<class_float>` 并不相同。如果需要双精度，请在编译引擎时使用 ``precision=double`` 选项。

对应的整数版本见 :ref:`Vector2i<class_Vector2i>`\ 。

\ **注意：**\ 在布尔语境中，如果 Vector2 等于 ``Vector2(0, 0)`` 则求值结果为 ``false``\ 。否则 Vector2 的求值结果始终为 ``true``\ 。

.. rst-class:: classref-introduction-group

教程
----

- :doc:`数学文档索引 <../tutorials/math/index>`

- :doc:`向量数学 <../tutorials/math/vector_math>`

- :doc:`高等向量数学 <../tutorials/math/vectors_advanced>`

- `3Blue1Brown《线性代数的本质》 <https://www.youtube.com/playlist?list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab>`__

- `矩阵变换演示 <https://godotengine.org/asset-library/asset/584>`__

- `所有 2D 演示 <https://github.com/godotengine/godot-demo-projects/tree/master/2d>`__

.. rst-class:: classref-reftable-group

属性
----

.. table::
   :widths: auto

   +---------------------------+------------------------------------+---------+
   | :ref:`float<class_float>` | :ref:`x<class_Vector2_property_x>` | ``0.0`` |
   +---------------------------+------------------------------------+---------+
   | :ref:`float<class_float>` | :ref:`y<class_Vector2_property_y>` | ``0.0`` |
   +---------------------------+------------------------------------+---------+

.. rst-class:: classref-reftable-group

构造函数
--------

.. table::
   :widths: auto

   +-------------------------------+------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector2<class_Vector2>` | :ref:`Vector2<class_Vector2_constructor_Vector2>` **(** **)**                                                          |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector2<class_Vector2>` | :ref:`Vector2<class_Vector2_constructor_Vector2>` **(** :ref:`Vector2<class_Vector2>` from **)**                       |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector2<class_Vector2>` | :ref:`Vector2<class_Vector2_constructor_Vector2>` **(** :ref:`Vector2i<class_Vector2i>` from **)**                     |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector2<class_Vector2>` | :ref:`Vector2<class_Vector2_constructor_Vector2>` **(** :ref:`float<class_float>` x, :ref:`float<class_float>` y **)** |
   +-------------------------------+------------------------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-reftable-group

方法
----

.. table::
   :widths: auto

   +-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector2<class_Vector2>` | :ref:`abs<class_Vector2_method_abs>` **(** **)** |const|                                                                                                                                                                                                                                                                                                |
   +-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`float<class_float>`     | :ref:`angle<class_Vector2_method_angle>` **(** **)** |const|                                                                                                                                                                                                                                                                                            |
   +-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`float<class_float>`     | :ref:`angle_to<class_Vector2_method_angle_to>` **(** :ref:`Vector2<class_Vector2>` to **)** |const|                                                                                                                                                                                                                                                     |
   +-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`float<class_float>`     | :ref:`angle_to_point<class_Vector2_method_angle_to_point>` **(** :ref:`Vector2<class_Vector2>` to **)** |const|                                                                                                                                                                                                                                         |
   +-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`float<class_float>`     | :ref:`aspect<class_Vector2_method_aspect>` **(** **)** |const|                                                                                                                                                                                                                                                                                          |
   +-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector2<class_Vector2>` | :ref:`bezier_derivative<class_Vector2_method_bezier_derivative>` **(** :ref:`Vector2<class_Vector2>` control_1, :ref:`Vector2<class_Vector2>` control_2, :ref:`Vector2<class_Vector2>` end, :ref:`float<class_float>` t **)** |const|                                                                                                                   |
   +-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector2<class_Vector2>` | :ref:`bezier_interpolate<class_Vector2_method_bezier_interpolate>` **(** :ref:`Vector2<class_Vector2>` control_1, :ref:`Vector2<class_Vector2>` control_2, :ref:`Vector2<class_Vector2>` end, :ref:`float<class_float>` t **)** |const|                                                                                                                 |
   +-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector2<class_Vector2>` | :ref:`bounce<class_Vector2_method_bounce>` **(** :ref:`Vector2<class_Vector2>` n **)** |const|                                                                                                                                                                                                                                                          |
   +-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector2<class_Vector2>` | :ref:`ceil<class_Vector2_method_ceil>` **(** **)** |const|                                                                                                                                                                                                                                                                                              |
   +-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector2<class_Vector2>` | :ref:`clamp<class_Vector2_method_clamp>` **(** :ref:`Vector2<class_Vector2>` min, :ref:`Vector2<class_Vector2>` max **)** |const|                                                                                                                                                                                                                       |
   +-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`float<class_float>`     | :ref:`cross<class_Vector2_method_cross>` **(** :ref:`Vector2<class_Vector2>` with **)** |const|                                                                                                                                                                                                                                                         |
   +-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector2<class_Vector2>` | :ref:`cubic_interpolate<class_Vector2_method_cubic_interpolate>` **(** :ref:`Vector2<class_Vector2>` b, :ref:`Vector2<class_Vector2>` pre_a, :ref:`Vector2<class_Vector2>` post_b, :ref:`float<class_float>` weight **)** |const|                                                                                                                       |
   +-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector2<class_Vector2>` | :ref:`cubic_interpolate_in_time<class_Vector2_method_cubic_interpolate_in_time>` **(** :ref:`Vector2<class_Vector2>` b, :ref:`Vector2<class_Vector2>` pre_a, :ref:`Vector2<class_Vector2>` post_b, :ref:`float<class_float>` weight, :ref:`float<class_float>` b_t, :ref:`float<class_float>` pre_a_t, :ref:`float<class_float>` post_b_t **)** |const| |
   +-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector2<class_Vector2>` | :ref:`direction_to<class_Vector2_method_direction_to>` **(** :ref:`Vector2<class_Vector2>` to **)** |const|                                                                                                                                                                                                                                             |
   +-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`float<class_float>`     | :ref:`distance_squared_to<class_Vector2_method_distance_squared_to>` **(** :ref:`Vector2<class_Vector2>` to **)** |const|                                                                                                                                                                                                                               |
   +-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`float<class_float>`     | :ref:`distance_to<class_Vector2_method_distance_to>` **(** :ref:`Vector2<class_Vector2>` to **)** |const|                                                                                                                                                                                                                                               |
   +-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`float<class_float>`     | :ref:`dot<class_Vector2_method_dot>` **(** :ref:`Vector2<class_Vector2>` with **)** |const|                                                                                                                                                                                                                                                             |
   +-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector2<class_Vector2>` | :ref:`floor<class_Vector2_method_floor>` **(** **)** |const|                                                                                                                                                                                                                                                                                            |
   +-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector2<class_Vector2>` | :ref:`from_angle<class_Vector2_method_from_angle>` **(** :ref:`float<class_float>` angle **)** |static|                                                                                                                                                                                                                                                 |
   +-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`       | :ref:`is_equal_approx<class_Vector2_method_is_equal_approx>` **(** :ref:`Vector2<class_Vector2>` to **)** |const|                                                                                                                                                                                                                                       |
   +-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`       | :ref:`is_finite<class_Vector2_method_is_finite>` **(** **)** |const|                                                                                                                                                                                                                                                                                    |
   +-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`       | :ref:`is_normalized<class_Vector2_method_is_normalized>` **(** **)** |const|                                                                                                                                                                                                                                                                            |
   +-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`       | :ref:`is_zero_approx<class_Vector2_method_is_zero_approx>` **(** **)** |const|                                                                                                                                                                                                                                                                          |
   +-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`float<class_float>`     | :ref:`length<class_Vector2_method_length>` **(** **)** |const|                                                                                                                                                                                                                                                                                          |
   +-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`float<class_float>`     | :ref:`length_squared<class_Vector2_method_length_squared>` **(** **)** |const|                                                                                                                                                                                                                                                                          |
   +-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector2<class_Vector2>` | :ref:`lerp<class_Vector2_method_lerp>` **(** :ref:`Vector2<class_Vector2>` to, :ref:`float<class_float>` weight **)** |const|                                                                                                                                                                                                                           |
   +-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector2<class_Vector2>` | :ref:`limit_length<class_Vector2_method_limit_length>` **(** :ref:`float<class_float>` length=1.0 **)** |const|                                                                                                                                                                                                                                         |
   +-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`         | :ref:`max_axis_index<class_Vector2_method_max_axis_index>` **(** **)** |const|                                                                                                                                                                                                                                                                          |
   +-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`         | :ref:`min_axis_index<class_Vector2_method_min_axis_index>` **(** **)** |const|                                                                                                                                                                                                                                                                          |
   +-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector2<class_Vector2>` | :ref:`move_toward<class_Vector2_method_move_toward>` **(** :ref:`Vector2<class_Vector2>` to, :ref:`float<class_float>` delta **)** |const|                                                                                                                                                                                                              |
   +-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector2<class_Vector2>` | :ref:`normalized<class_Vector2_method_normalized>` **(** **)** |const|                                                                                                                                                                                                                                                                                  |
   +-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector2<class_Vector2>` | :ref:`orthogonal<class_Vector2_method_orthogonal>` **(** **)** |const|                                                                                                                                                                                                                                                                                  |
   +-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector2<class_Vector2>` | :ref:`posmod<class_Vector2_method_posmod>` **(** :ref:`float<class_float>` mod **)** |const|                                                                                                                                                                                                                                                            |
   +-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector2<class_Vector2>` | :ref:`posmodv<class_Vector2_method_posmodv>` **(** :ref:`Vector2<class_Vector2>` modv **)** |const|                                                                                                                                                                                                                                                     |
   +-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector2<class_Vector2>` | :ref:`project<class_Vector2_method_project>` **(** :ref:`Vector2<class_Vector2>` b **)** |const|                                                                                                                                                                                                                                                        |
   +-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector2<class_Vector2>` | :ref:`reflect<class_Vector2_method_reflect>` **(** :ref:`Vector2<class_Vector2>` n **)** |const|                                                                                                                                                                                                                                                        |
   +-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector2<class_Vector2>` | :ref:`rotated<class_Vector2_method_rotated>` **(** :ref:`float<class_float>` angle **)** |const|                                                                                                                                                                                                                                                        |
   +-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector2<class_Vector2>` | :ref:`round<class_Vector2_method_round>` **(** **)** |const|                                                                                                                                                                                                                                                                                            |
   +-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector2<class_Vector2>` | :ref:`sign<class_Vector2_method_sign>` **(** **)** |const|                                                                                                                                                                                                                                                                                              |
   +-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector2<class_Vector2>` | :ref:`slerp<class_Vector2_method_slerp>` **(** :ref:`Vector2<class_Vector2>` to, :ref:`float<class_float>` weight **)** |const|                                                                                                                                                                                                                         |
   +-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector2<class_Vector2>` | :ref:`slide<class_Vector2_method_slide>` **(** :ref:`Vector2<class_Vector2>` n **)** |const|                                                                                                                                                                                                                                                            |
   +-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector2<class_Vector2>` | :ref:`snapped<class_Vector2_method_snapped>` **(** :ref:`Vector2<class_Vector2>` step **)** |const|                                                                                                                                                                                                                                                     |
   +-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-reftable-group

操作符
------

.. table::
   :widths: auto

   +-------------------------------+-------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`       | :ref:`operator !=<class_Vector2_operator_neq_Vector2>` **(** :ref:`Vector2<class_Vector2>` right **)**            |
   +-------------------------------+-------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector2<class_Vector2>` | :ref:`operator *<class_Vector2_operator_mul_Transform2D>` **(** :ref:`Transform2D<class_Transform2D>` right **)** |
   +-------------------------------+-------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector2<class_Vector2>` | :ref:`operator *<class_Vector2_operator_mul_Vector2>` **(** :ref:`Vector2<class_Vector2>` right **)**             |
   +-------------------------------+-------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector2<class_Vector2>` | :ref:`operator *<class_Vector2_operator_mul_float>` **(** :ref:`float<class_float>` right **)**                   |
   +-------------------------------+-------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector2<class_Vector2>` | :ref:`operator *<class_Vector2_operator_mul_int>` **(** :ref:`int<class_int>` right **)**                         |
   +-------------------------------+-------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector2<class_Vector2>` | :ref:`operator +<class_Vector2_operator_sum_Vector2>` **(** :ref:`Vector2<class_Vector2>` right **)**             |
   +-------------------------------+-------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector2<class_Vector2>` | :ref:`operator -<class_Vector2_operator_dif_Vector2>` **(** :ref:`Vector2<class_Vector2>` right **)**             |
   +-------------------------------+-------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector2<class_Vector2>` | :ref:`operator /<class_Vector2_operator_div_Vector2>` **(** :ref:`Vector2<class_Vector2>` right **)**             |
   +-------------------------------+-------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector2<class_Vector2>` | :ref:`operator /<class_Vector2_operator_div_float>` **(** :ref:`float<class_float>` right **)**                   |
   +-------------------------------+-------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector2<class_Vector2>` | :ref:`operator /<class_Vector2_operator_div_int>` **(** :ref:`int<class_int>` right **)**                         |
   +-------------------------------+-------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`       | :ref:`operator \<<class_Vector2_operator_lt_Vector2>` **(** :ref:`Vector2<class_Vector2>` right **)**             |
   +-------------------------------+-------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`       | :ref:`operator \<=<class_Vector2_operator_lte_Vector2>` **(** :ref:`Vector2<class_Vector2>` right **)**           |
   +-------------------------------+-------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`       | :ref:`operator ==<class_Vector2_operator_eq_Vector2>` **(** :ref:`Vector2<class_Vector2>` right **)**             |
   +-------------------------------+-------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`       | :ref:`operator ><class_Vector2_operator_gt_Vector2>` **(** :ref:`Vector2<class_Vector2>` right **)**              |
   +-------------------------------+-------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`       | :ref:`operator >=<class_Vector2_operator_gte_Vector2>` **(** :ref:`Vector2<class_Vector2>` right **)**            |
   +-------------------------------+-------------------------------------------------------------------------------------------------------------------+
   | :ref:`float<class_float>`     | :ref:`operator []<class_Vector2_operator_idx_int>` **(** :ref:`int<class_int>` index **)**                        |
   +-------------------------------+-------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector2<class_Vector2>` | :ref:`operator unary+<class_Vector2_operator_unplus>` **(** **)**                                                 |
   +-------------------------------+-------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector2<class_Vector2>` | :ref:`operator unary-<class_Vector2_operator_unminus>` **(** **)**                                                |
   +-------------------------------+-------------------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

常量
----

.. _class_Vector2_constant_AXIS_X:

.. rst-class:: classref-constant

**AXIS_X** = ``0``

X 轴的枚举值。由 :ref:`max_axis_index<class_Vector2_method_max_axis_index>` 和 :ref:`min_axis_index<class_Vector2_method_min_axis_index>` 返回。

.. _class_Vector2_constant_AXIS_Y:

.. rst-class:: classref-constant

**AXIS_Y** = ``1``

Y 轴的枚举值。由 :ref:`max_axis_index<class_Vector2_method_max_axis_index>` 和 :ref:`min_axis_index<class_Vector2_method_min_axis_index>` 返回。

.. _class_Vector2_constant_ZERO:

.. rst-class:: classref-constant

**ZERO** = ``Vector2(0, 0)``

零向量，所有分量都设置为 ``0`` 的向量。

.. _class_Vector2_constant_ONE:

.. rst-class:: classref-constant

**ONE** = ``Vector2(1, 1)``

一向量，所有分量都设置为 ``1`` 的向量。

.. _class_Vector2_constant_INF:

.. rst-class:: classref-constant

**INF** = ``Vector2(inf, inf)``

无穷大向量，所有分量都设置为 :ref:`@GDScript.INF<class_@GDScript_constant_INF>` 的向量。

.. _class_Vector2_constant_LEFT:

.. rst-class:: classref-constant

**LEFT** = ``Vector2(-1, 0)``

左单位向量。代表左的方向。

.. _class_Vector2_constant_RIGHT:

.. rst-class:: classref-constant

**RIGHT** = ``Vector2(1, 0)``

右单位向量。代表右的方向。

.. _class_Vector2_constant_UP:

.. rst-class:: classref-constant

**UP** = ``Vector2(0, -1)``

上单位向量。在 2D 中 Y 是向下的，所以这个向量指向 -Y。

.. _class_Vector2_constant_DOWN:

.. rst-class:: classref-constant

**DOWN** = ``Vector2(0, 1)``

下单位向量。在 2D 中 Y 是向下的，所以这个向量指向 +Y。

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

属性说明
--------

.. _class_Vector2_property_x:

.. rst-class:: classref-property

:ref:`float<class_float>` **x** = ``0.0``

向量的 X 分量。也可以通过使用索引位置 ``[0]`` 访问。

.. rst-class:: classref-item-separator

----

.. _class_Vector2_property_y:

.. rst-class:: classref-property

:ref:`float<class_float>` **y** = ``0.0``

向量的 Y 分量。也可以通过使用索引位置 ``[1]`` 访问。

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

构造函数说明
------------

.. _class_Vector2_constructor_Vector2:

.. rst-class:: classref-constructor

:ref:`Vector2<class_Vector2>` **Vector2** **(** **)**

构造默认初始化的 **Vector2**\ ，所有分量均为 ``0``\ 。

.. rst-class:: classref-item-separator

----

.. rst-class:: classref-constructor

:ref:`Vector2<class_Vector2>` **Vector2** **(** :ref:`Vector2<class_Vector2>` from **)**

构造给定 **Vector2** 的副本。

.. rst-class:: classref-item-separator

----

.. rst-class:: classref-constructor

:ref:`Vector2<class_Vector2>` **Vector2** **(** :ref:`Vector2i<class_Vector2i>` from **)**

从 :ref:`Vector2i<class_Vector2i>` 构造新的 **Vector2**\ 。

.. rst-class:: classref-item-separator

----

.. rst-class:: classref-constructor

:ref:`Vector2<class_Vector2>` **Vector2** **(** :ref:`float<class_float>` x, :ref:`float<class_float>` y **)**

从给定的 ``x`` 和 ``y`` 构造新的 **Vector2**\ 。

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

方法说明
--------

.. _class_Vector2_method_abs:

.. rst-class:: classref-method

:ref:`Vector2<class_Vector2>` **abs** **(** **)** |const|

返回一个新向量，其所有分量都是绝对值，即正值。

.. rst-class:: classref-item-separator

----

.. _class_Vector2_method_angle:

.. rst-class:: classref-method

:ref:`float<class_float>` **angle** **(** **)** |const|

返回该向量与 X 轴正方向的夹角，单位为弧度。X 轴正方向为 ``(1, 0)`` 向量。

例如，\ ``Vector2.RIGHT.angle()`` 将返回 0，\ ``Vector2.DOWN.angle()`` 将返回 ``PI / 2``\ （四分之一圈，即 90 度），\ ``Vector2(1, -1).angle()`` 将返回 ``-PI / 4``\ （负八分之一圈，即 -45 度）。

\ `返回夹角图示。 <https://raw.githubusercontent.com/godotengine/godot-docs/master/img/vector2_angle.png>`__\ 

相当于使用该向量的 :ref:`y<class_Vector2_property_y>` 和 :ref:`x<class_Vector2_property_x>` 作为参数对 :ref:`@GlobalScope.atan2<class_@GlobalScope_method_atan2>` 进行调用的结果：\ ``atan2(y, x)``\ 。

.. rst-class:: classref-item-separator

----

.. _class_Vector2_method_angle_to:

.. rst-class:: classref-method

:ref:`float<class_float>` **angle_to** **(** :ref:`Vector2<class_Vector2>` to **)** |const|

返回与给定向量的夹角，单位为弧度。

\ `返回夹角示意图。 <https://raw.githubusercontent.com/godotengine/godot-docs/master/img/vector2_angle_to.png>`__

.. rst-class:: classref-item-separator

----

.. _class_Vector2_method_angle_to_point:

.. rst-class:: classref-method

:ref:`float<class_float>` **angle_to_point** **(** :ref:`Vector2<class_Vector2>` to **)** |const|

返回连接两点的直线与 X 轴之间的夹角，单位为弧度。

\ ``a.angle_to_point(b)`` 等价于 ``(b - a).angle()``\ 。

\ `返回夹角示意图。 <https://raw.githubusercontent.com/godotengine/godot-docs/master/img/vector2_angle_to_point.png>`__

.. rst-class:: classref-item-separator

----

.. _class_Vector2_method_aspect:

.. rst-class:: classref-method

:ref:`float<class_float>` **aspect** **(** **)** |const|

返回该向量的长宽比，即 :ref:`x<class_Vector2_property_x>` 与 :ref:`y<class_Vector2_property_y>` 的比例。

.. rst-class:: classref-item-separator

----

.. _class_Vector2_method_bezier_derivative:

.. rst-class:: classref-method

:ref:`Vector2<class_Vector2>` **bezier_derivative** **(** :ref:`Vector2<class_Vector2>` control_1, :ref:`Vector2<class_Vector2>` control_2, :ref:`Vector2<class_Vector2>` end, :ref:`float<class_float>` t **)** |const|

返回\ `贝赛尔曲线 <https://zh.wikipedia.org/zh-cn/%E8%B2%9D%E8%8C%B2%E6%9B%B2%E7%B7%9A>`__\ 上 ``t`` 处的导数，该曲线由此向量和控制点 ``control_1``\ 、\ ``control_2``\ 、终点 ``end`` 定义。

.. rst-class:: classref-item-separator

----

.. _class_Vector2_method_bezier_interpolate:

.. rst-class:: classref-method

:ref:`Vector2<class_Vector2>` **bezier_interpolate** **(** :ref:`Vector2<class_Vector2>` control_1, :ref:`Vector2<class_Vector2>` control_2, :ref:`Vector2<class_Vector2>` end, :ref:`float<class_float>` t **)** |const|

返回\ `贝赛尔曲线 <https://zh.wikipedia.org/zh-cn/%E8%B2%9D%E8%8C%B2%E6%9B%B2%E7%B7%9A>`__\ 上 ``t`` 处的点，该曲线由此向量和控制点 ``control_1``\ 、\ ``control_2``\ 、终点 ``end`` 定义。

.. rst-class:: classref-item-separator

----

.. _class_Vector2_method_bounce:

.. rst-class:: classref-method

:ref:`Vector2<class_Vector2>` **bounce** **(** :ref:`Vector2<class_Vector2>` n **)** |const|

返回从平面上“反弹”的向量，该平面由给定的法线定义。

.. rst-class:: classref-item-separator

----

.. _class_Vector2_method_ceil:

.. rst-class:: classref-method

:ref:`Vector2<class_Vector2>` **ceil** **(** **)** |const|

返回一个新向量，所有的分量都是向上舍入（正无穷大方向）。

.. rst-class:: classref-item-separator

----

.. _class_Vector2_method_clamp:

.. rst-class:: classref-method

:ref:`Vector2<class_Vector2>` **clamp** **(** :ref:`Vector2<class_Vector2>` min, :ref:`Vector2<class_Vector2>` max **)** |const|

返回一个新向量，每个分量都使用 :ref:`@GlobalScope.clamp<class_@GlobalScope_method_clamp>` 限制在 ``min`` 和 ``max`` 之间。

.. rst-class:: classref-item-separator

----

.. _class_Vector2_method_cross:

.. rst-class:: classref-method

:ref:`float<class_float>` **cross** **(** :ref:`Vector2<class_Vector2>` with **)** |const|

返回该向量和 ``with`` 的 2D 类比叉积。

这是由两个向量所形成的平行四边形的有符号面积。如果第二个向量是从第一个向量的顺时针方向出发的，则叉积为正面积。如果是逆时针方向，则叉积为负面积。

\ **注意：**\ 数学中没有定义二维空间的叉乘。此方法是将 2D 向量嵌入到 3D 空间的 XY 平面中，并使用它们的叉积的 Z 分量作为类比。

.. rst-class:: classref-item-separator

----

.. _class_Vector2_method_cubic_interpolate:

.. rst-class:: classref-method

:ref:`Vector2<class_Vector2>` **cubic_interpolate** **(** :ref:`Vector2<class_Vector2>` b, :ref:`Vector2<class_Vector2>` pre_a, :ref:`Vector2<class_Vector2>` post_b, :ref:`float<class_float>` weight **)** |const|

返回该向量和 ``b`` 之间进行三次插值 ``weight`` 处的结果，使用 ``pre_a`` 和 ``post_b`` 作为控制柄。\ ``weight`` 在 0.0 到 1.0 的范围内，代表插值的量。

.. rst-class:: classref-item-separator

----

.. _class_Vector2_method_cubic_interpolate_in_time:

.. rst-class:: classref-method

:ref:`Vector2<class_Vector2>` **cubic_interpolate_in_time** **(** :ref:`Vector2<class_Vector2>` b, :ref:`Vector2<class_Vector2>` pre_a, :ref:`Vector2<class_Vector2>` post_b, :ref:`float<class_float>` weight, :ref:`float<class_float>` b_t, :ref:`float<class_float>` pre_a_t, :ref:`float<class_float>` post_b_t **)** |const|

返回该向量和 ``b`` 之间进行三次插值 ``weight`` 处的结果，使用 ``pre_a`` 和 ``post_b`` 作为控制柄。\ ``weight`` 在 0.0 到 1.0 的范围内，代表插值的量。

通过使用时间值，可以比 :ref:`cubic_interpolate<class_Vector2_method_cubic_interpolate>` 进行更平滑的插值。

.. rst-class:: classref-item-separator

----

.. _class_Vector2_method_direction_to:

.. rst-class:: classref-method

:ref:`Vector2<class_Vector2>` **direction_to** **(** :ref:`Vector2<class_Vector2>` to **)** |const|

返回从该向量指向 ``to`` 的归一化向量。相当于使用 ``(b - a).normalized()``\ 。

.. rst-class:: classref-item-separator

----

.. _class_Vector2_method_distance_squared_to:

.. rst-class:: classref-method

:ref:`float<class_float>` **distance_squared_to** **(** :ref:`Vector2<class_Vector2>` to **)** |const|

返回该向量与 ``to`` 之间的距离的平方。

该方法比 :ref:`distance_to<class_Vector2_method_distance_to>` 运行得更快，因此请在需要比较向量或者用于某些公式的平方距离时，优先使用这个方法。

.. rst-class:: classref-item-separator

----

.. _class_Vector2_method_distance_to:

.. rst-class:: classref-method

:ref:`float<class_float>` **distance_to** **(** :ref:`Vector2<class_Vector2>` to **)** |const|

返回该向量与 ``to`` 之间的距离。

.. rst-class:: classref-item-separator

----

.. _class_Vector2_method_dot:

.. rst-class:: classref-method

:ref:`float<class_float>` **dot** **(** :ref:`Vector2<class_Vector2>` with **)** |const|

返回该向量与 ``with`` 的点积。可用于比较两个向量之间的夹角。例如，可用于确定敌人是否面向玩家。

直角（90 度）的点积为 ``0``\ ；大于 0 则夹角小于 90 度；小于 0 则夹角大于 90 度。

使用（归一化的）单位向量时，如果向量朝向相反，则结果始终为 ``-1.0``\ （180 度角）；如果向量方向一致，则结果始终为 ``1.0``\ （0 度角）。

\ **注意：**\ ``a.dot(b)`` 等价于 ``b.dot(a)``\ 。

.. rst-class:: classref-item-separator

----

.. _class_Vector2_method_floor:

.. rst-class:: classref-method

:ref:`Vector2<class_Vector2>` **floor** **(** **)** |const|

返回一个新的向量，所有的向量都被四舍五入，向负无穷大。

.. rst-class:: classref-item-separator

----

.. _class_Vector2_method_from_angle:

.. rst-class:: classref-method

:ref:`Vector2<class_Vector2>` **from_angle** **(** :ref:`float<class_float>` angle **)** |static|

创建单位 **Vector2** 并将其旋转到给定的 ``angle``\ ，单位为弧度。相当于执行 ``Vector2(cos(angle), sin(angle))`` 或 ``Vector2.RIGHT.rotated(angle)``\ 。

::

    print(Vector2.from_angle(0)) # 输出 (1, 0)。
    print(Vector2(1, 0).angle()) # 输出 0，即上一行所使用的角度。
    print(Vector2.from_angle(PI / 2)) # 输出 (0, 1)。

.. rst-class:: classref-item-separator

----

.. _class_Vector2_method_is_equal_approx:

.. rst-class:: classref-method

:ref:`bool<class_bool>` **is_equal_approx** **(** :ref:`Vector2<class_Vector2>` to **)** |const|

如果这个向量与 ``to`` 大致相等，则返回 ``true``\ ，判断方法是对每个分量执行 :ref:`@GlobalScope.is_equal_approx<class_@GlobalScope_method_is_equal_approx>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_Vector2_method_is_finite:

.. rst-class:: classref-method

:ref:`bool<class_bool>` **is_finite** **(** **)** |const|

如果该向量无穷，则返回 ``true``\ ，判断方法是对每个分量调用 :ref:`@GlobalScope.is_finite<class_@GlobalScope_method_is_finite>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_Vector2_method_is_normalized:

.. rst-class:: classref-method

:ref:`bool<class_bool>` **is_normalized** **(** **)** |const|

如果该向量是归一化的，即长度约等于 1，则返回 ``true``\ 。

.. rst-class:: classref-item-separator

----

.. _class_Vector2_method_is_zero_approx:

.. rst-class:: classref-method

:ref:`bool<class_bool>` **is_zero_approx** **(** **)** |const|

如果该向量的值大约为零，则返回 ``true``\ ，判断方法是对每个分量运行 :ref:`@GlobalScope.is_zero_approx<class_@GlobalScope_method_is_zero_approx>`\ 。

该方法比使用 :ref:`is_equal_approx<class_Vector2_method_is_equal_approx>` 和零向量比较要快。

.. rst-class:: classref-item-separator

----

.. _class_Vector2_method_length:

.. rst-class:: classref-method

:ref:`float<class_float>` **length** **(** **)** |const|

返回这个向量的长度，即大小。

.. rst-class:: classref-item-separator

----

.. _class_Vector2_method_length_squared:

.. rst-class:: classref-method

:ref:`float<class_float>` **length_squared** **(** **)** |const|

返回这个向量的平方长度，即平方大小。

这个方法比 :ref:`length<class_Vector2_method_length>` 运行得更快，所以如果你需要比较向量或需要一些公式的平方距离时，更喜欢用它。

.. rst-class:: classref-item-separator

----

.. _class_Vector2_method_lerp:

.. rst-class:: classref-method

:ref:`Vector2<class_Vector2>` **lerp** **(** :ref:`Vector2<class_Vector2>` to, :ref:`float<class_float>` weight **)** |const|

返回此向量和 ``to`` 之间，按数量 ``weight`` 线性插值结果。\ ``weight`` 在 ``0.0`` 到 ``1.0`` 的范围内，代表插值的量。

.. rst-class:: classref-item-separator

----

.. _class_Vector2_method_limit_length:

.. rst-class:: classref-method

:ref:`Vector2<class_Vector2>` **limit_length** **(** :ref:`float<class_float>` length=1.0 **)** |const|

返回应用了最大长度限制的向量，长度被限制到 ``length``\ 。

.. rst-class:: classref-item-separator

----

.. _class_Vector2_method_max_axis_index:

.. rst-class:: classref-method

:ref:`int<class_int>` **max_axis_index** **(** **)** |const|

返回该向量中最大值的轴。见 ``AXIS_*`` 常量。如果所有分量相等，则该方法返回 :ref:`AXIS_X<class_Vector2_constant_AXIS_X>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_Vector2_method_min_axis_index:

.. rst-class:: classref-method

:ref:`int<class_int>` **min_axis_index** **(** **)** |const|

返回该向量中最小值的轴。见 ``AXIS_*`` 常量。如果所有分量相等，则该方法返回 :ref:`AXIS_Y<class_Vector2_constant_AXIS_Y>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_Vector2_method_move_toward:

.. rst-class:: classref-method

:ref:`Vector2<class_Vector2>` **move_toward** **(** :ref:`Vector2<class_Vector2>` to, :ref:`float<class_float>` delta **)** |const|

返回一个新向量，该向量朝 ``to`` 移动了固定的量 ``delta``\ 。不会超过最终值。

.. rst-class:: classref-item-separator

----

.. _class_Vector2_method_normalized:

.. rst-class:: classref-method

:ref:`Vector2<class_Vector2>` **normalized** **(** **)** |const|

返回该向量缩放至单位长度的结果。等价于 ``v / v.length()``\ 。另见 :ref:`is_normalized<class_Vector2_method_is_normalized>`\ 。

\ **注意：**\ 如果输入向量的长度接近零，则这个函数可能返回不正确的值。

.. rst-class:: classref-item-separator

----

.. _class_Vector2_method_orthogonal:

.. rst-class:: classref-method

:ref:`Vector2<class_Vector2>` **orthogonal** **(** **)** |const|

返回一个与原来相比逆时针旋转 90 度的垂直向量，长度不变。

.. rst-class:: classref-item-separator

----

.. _class_Vector2_method_posmod:

.. rst-class:: classref-method

:ref:`Vector2<class_Vector2>` **posmod** **(** :ref:`float<class_float>` mod **)** |const|

返回由该向量的分量与 ``mod`` 执行 :ref:`@GlobalScope.fposmod<class_@GlobalScope_method_fposmod>` 运算后组成的向量。

.. rst-class:: classref-item-separator

----

.. _class_Vector2_method_posmodv:

.. rst-class:: classref-method

:ref:`Vector2<class_Vector2>` **posmodv** **(** :ref:`Vector2<class_Vector2>` modv **)** |const|

返回由该向量的分量与 ``modv`` 的分量执行 :ref:`@GlobalScope.fposmod<class_@GlobalScope_method_fposmod>` 运算后组成的向量。

.. rst-class:: classref-item-separator

----

.. _class_Vector2_method_project:

.. rst-class:: classref-method

:ref:`Vector2<class_Vector2>` **project** **(** :ref:`Vector2<class_Vector2>` b **)** |const|

返回将该向量投影到给定向量 ``b`` 上的结果。

.. rst-class:: classref-item-separator

----

.. _class_Vector2_method_reflect:

.. rst-class:: classref-method

:ref:`Vector2<class_Vector2>` **reflect** **(** :ref:`Vector2<class_Vector2>` n **)** |const|

返回经过直线反射后的向量，该直线由给定的方向向量 ``n`` 定义。

.. rst-class:: classref-item-separator

----

.. _class_Vector2_method_rotated:

.. rst-class:: classref-method

:ref:`Vector2<class_Vector2>` **rotated** **(** :ref:`float<class_float>` angle **)** |const|

返回将这个向量旋转 ``angle`` 的结果（单位为弧度）。另见 :ref:`@GlobalScope.deg_to_rad<class_@GlobalScope_method_deg_to_rad>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_Vector2_method_round:

.. rst-class:: classref-method

:ref:`Vector2<class_Vector2>` **round** **(** **)** |const|

返回所有分量都被四舍五入为最接近的整数的向量，中间情况向远离零的方向舍入。

.. rst-class:: classref-item-separator

----

.. _class_Vector2_method_sign:

.. rst-class:: classref-method

:ref:`Vector2<class_Vector2>` **sign** **(** **)** |const|

返回新的向量，分量如果为正则设为 ``1.0``\ ，如果为负则设为 ``-1.0``\ ，如果为零则设为 ``0.0``\ 。结果与对每个分量调用 :ref:`@GlobalScope.sign<class_@GlobalScope_method_sign>` 一致。

.. rst-class:: classref-item-separator

----

.. _class_Vector2_method_slerp:

.. rst-class:: classref-method

:ref:`Vector2<class_Vector2>` **slerp** **(** :ref:`Vector2<class_Vector2>` to, :ref:`float<class_float>` weight **)** |const|

返回在这个向量和 ``to`` 之间进行 ``weight`` 的球面线性插值的结果。\ ``weight`` 在 0.0 和 1.0 的范围内，代表插值的量。

如果输入向量的长度不同，这个函数也会对长度进行插值处理。对于输入向量中存在长度为零的向量的特殊情况，这个方法的行为与 :ref:`lerp<class_Vector2_method_lerp>` 一致。

.. rst-class:: classref-item-separator

----

.. _class_Vector2_method_slide:

.. rst-class:: classref-method

:ref:`Vector2<class_Vector2>` **slide** **(** :ref:`Vector2<class_Vector2>` n **)** |const|

返回沿着平面进行滑动后的向量，该平面由给定的法线定义。

.. rst-class:: classref-item-separator

----

.. _class_Vector2_method_snapped:

.. rst-class:: classref-method

:ref:`Vector2<class_Vector2>` **snapped** **(** :ref:`Vector2<class_Vector2>` step **)** |const|

返回新的向量，每个分量都吸附到了与 ``step`` 中对应分量最接近的倍数。也可以用于将分量四舍五入至小数点后的任意位置。

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

操作符说明
----------

.. _class_Vector2_operator_neq_Vector2:

.. rst-class:: classref-operator

:ref:`bool<class_bool>` **operator !=** **(** :ref:`Vector2<class_Vector2>` right **)**

如果向量不相等，则返回 ``true``\ 。

\ **注意：**\ 由于浮点数精度误差，请考虑改用 :ref:`is_equal_approx<class_Vector2_method_is_equal_approx>`\ ，会更可靠。

\ **注意：**\ 包含 :ref:`@GDScript.NAN<class_@GDScript_constant_NAN>` 元素的向量的行为与其他向量不同。因此，如果包含 NaN，则这个方法的结果可能不准确。

.. rst-class:: classref-item-separator

----

.. _class_Vector2_operator_mul_Transform2D:

.. rst-class:: classref-operator

:ref:`Vector2<class_Vector2>` **operator *** **(** :ref:`Transform2D<class_Transform2D>` right **)**

假设该变换的基是正交的（即旋转/反射可以，缩放/倾斜不行），将 **Vector2** 逆向变换（乘以）给定的 :ref:`Transform2D<class_Transform2D>` 变换矩阵。

\ ``vector * transform`` 相当于 ``transform.inverse() * vector``\ 。请参阅 :ref:`Transform2D.inverse<class_Transform2D_method_inverse>`\ 。

对于通过仿射变换的逆进行的变换（例如缩放），可以使用 ``transform.affine_inverse() * vector`` 代替。请参阅 :ref:`Transform2D.affine_inverse<class_Transform2D_method_affine_inverse>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_Vector2_operator_mul_Vector2:

.. rst-class:: classref-operator

:ref:`Vector2<class_Vector2>` **operator *** **(** :ref:`Vector2<class_Vector2>` right **)**

将该 **Vector2** 的每个分量乘以给定 **Vector2** 的对应分量。

::

    print(Vector2(10, 20) * Vector2(3, 4)) # 输出 "(30, 80)"

.. rst-class:: classref-item-separator

----

.. _class_Vector2_operator_mul_float:

.. rst-class:: classref-operator

:ref:`Vector2<class_Vector2>` **operator *** **(** :ref:`float<class_float>` right **)**

将该 **Vector2** 的每个分量乘以给定的 :ref:`float<class_float>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_Vector2_operator_mul_int:

.. rst-class:: classref-operator

:ref:`Vector2<class_Vector2>` **operator *** **(** :ref:`int<class_int>` right **)**

将该 **Vector2** 的每个分量乘以给定的 :ref:`int<class_int>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_Vector2_operator_sum_Vector2:

.. rst-class:: classref-operator

:ref:`Vector2<class_Vector2>` **operator +** **(** :ref:`Vector2<class_Vector2>` right **)**

将该 **Vector2** 的每个分量加上给定 **Vector2** 的对应分量。

::

    print(Vector2(10, 20) + Vector2(3, 4)) # 输出 "(13, 24)"

.. rst-class:: classref-item-separator

----

.. _class_Vector2_operator_dif_Vector2:

.. rst-class:: classref-operator

:ref:`Vector2<class_Vector2>` **operator -** **(** :ref:`Vector2<class_Vector2>` right **)**

将该 **Vector2** 的每个分量减去给定 **Vector2** 的对应分量。

::

    print(Vector2(10, 20) - Vector2(3, 4)) # 输出 "(7, 16)"

.. rst-class:: classref-item-separator

----

.. _class_Vector2_operator_div_Vector2:

.. rst-class:: classref-operator

:ref:`Vector2<class_Vector2>` **operator /** **(** :ref:`Vector2<class_Vector2>` right **)**

将该 **Vector2** 的每个分量除以给定 **Vector2** 的对应分量。

::

    print(Vector2(10, 20) / Vector2(2, 5)) # 输出 "(5, 4)"

.. rst-class:: classref-item-separator

----

.. _class_Vector2_operator_div_float:

.. rst-class:: classref-operator

:ref:`Vector2<class_Vector2>` **operator /** **(** :ref:`float<class_float>` right **)**

将该 **Vector2** 的每个分量除以给定的 :ref:`float<class_float>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_Vector2_operator_div_int:

.. rst-class:: classref-operator

:ref:`Vector2<class_Vector2>` **operator /** **(** :ref:`int<class_int>` right **)**

将该 **Vector2** 的每个分量除以给定的 :ref:`int<class_int>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_Vector2_operator_lt_Vector2:

.. rst-class:: classref-operator

:ref:`bool<class_bool>` **operator <** **(** :ref:`Vector2<class_Vector2>` right **)**

比较两个 **Vector2** 向量，首先检查左向量的 X 值是否小于 ``right`` 向量的 X 值。如果 X 值完全相等，则用相同的方法检查两个向量的 Y 值。该运算符可用于向量排序。

\ **注意：**\ 包含 :ref:`@GDScript.NAN<class_@GDScript_constant_NAN>` 元素的向量的行为与其他向量不同。因此，如果包含 NaN，则这个方法的结果可能不准确。

.. rst-class:: classref-item-separator

----

.. _class_Vector2_operator_lte_Vector2:

.. rst-class:: classref-operator

:ref:`bool<class_bool>` **operator <=** **(** :ref:`Vector2<class_Vector2>` right **)**

比较两个 **Vector2** 向量，首先检查左向量的 X 值是否小于等于 ``right`` 向量的 X 值。如果 X 值完全相等，则用相同的方法检查两个向量的 Y 值。该运算符可用于向量排序。

\ **注意：**\ 包含 :ref:`@GDScript.NAN<class_@GDScript_constant_NAN>` 元素的向量的行为与其他向量不同。因此，如果包含 NaN，则这个方法的结果可能不准确。

.. rst-class:: classref-item-separator

----

.. _class_Vector2_operator_eq_Vector2:

.. rst-class:: classref-operator

:ref:`bool<class_bool>` **operator ==** **(** :ref:`Vector2<class_Vector2>` right **)**

如果向量完全相等，则返回 ``true``\ 。

\ **注意：**\ 由于浮点数精度误差，请考虑改用 :ref:`is_equal_approx<class_Vector2_method_is_equal_approx>`\ ，会更可靠。

\ **注意：**\ 包含 :ref:`@GDScript.NAN<class_@GDScript_constant_NAN>` 元素的向量的行为与其他向量不同。因此，如果包含 NaN，则这个方法的结果可能不准确。

.. rst-class:: classref-item-separator

----

.. _class_Vector2_operator_gt_Vector2:

.. rst-class:: classref-operator

:ref:`bool<class_bool>` **operator >** **(** :ref:`Vector2<class_Vector2>` right **)**

比较两个 **Vector2** 向量，首先检查左向量的 X 值是否大于 ``right`` 向量的 X 值。如果 X 值完全相等，则用相同的方法检查两个向量的 Y 值。该运算符可用于向量排序。

\ **注意：**\ 包含 :ref:`@GDScript.NAN<class_@GDScript_constant_NAN>` 元素的向量的行为与其他向量不同。因此，如果包含 NaN，则这个方法的结果可能不准确。

.. rst-class:: classref-item-separator

----

.. _class_Vector2_operator_gte_Vector2:

.. rst-class:: classref-operator

:ref:`bool<class_bool>` **operator >=** **(** :ref:`Vector2<class_Vector2>` right **)**

比较两个 **Vector2** 向量，首先检查左向量的 X 值是否大于等于 ``right`` 向量的 X 值。如果 X 值完全相等，则用相同的方法检查两个向量的 Y 值。该运算符可用于向量排序。

\ **注意：**\ 包含 :ref:`@GDScript.NAN<class_@GDScript_constant_NAN>` 元素的向量的行为与其他向量不同。因此，如果包含 NaN，则这个方法的结果可能不准确。

.. rst-class:: classref-item-separator

----

.. _class_Vector2_operator_idx_int:

.. rst-class:: classref-operator

:ref:`float<class_float>` **operator []** **(** :ref:`int<class_int>` index **)**

使用向量分量的 ``index`` 来访问向量分量。\ ``v[0]`` 等价于 ``v.x``\ 、\ ``v[1]`` 等价于 ``v.y``\ 。

.. rst-class:: classref-item-separator

----

.. _class_Vector2_operator_unplus:

.. rst-class:: classref-operator

:ref:`Vector2<class_Vector2>` **operator unary+** **(** **)**

返回与 ``+`` 不存在时相同的值。单目 ``+`` 没有作用，但有时可以使你的代码更具可读性。

.. rst-class:: classref-item-separator

----

.. _class_Vector2_operator_unminus:

.. rst-class:: classref-operator

:ref:`Vector2<class_Vector2>` **operator unary-** **(** **)**

返回该 **Vector2** 的负值。和写 ``Vector2(-v.x, -v.y)`` 是一样的。该操作在保持相同幅度的同时，翻转向量的方向。对于浮点数，零也有正负两种。

.. |virtual| replace:: :abbr:`virtual (本方法通常需要用户覆盖才能生效。)`
.. |const| replace:: :abbr:`const (本方法没有副作用。不会修改该实例的任何成员变量。)`
.. |vararg| replace:: :abbr:`vararg (本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。)`
.. |constructor| replace:: :abbr:`constructor (本方法用于构造某个类型。)`
.. |static| replace:: :abbr:`static (调用本方法无需实例，所以可以直接使用类名调用。)`
.. |operator| replace:: :abbr:`operator (本方法描述的是使用本类型作为左操作数的有效操作符。)`
.. |bitfield| replace:: :abbr:`BitField (这个值是由下列标志构成的位掩码整数。)`

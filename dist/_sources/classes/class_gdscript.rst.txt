:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/4.2/modules/gdscript/doc_classes/GDScript.xml.

.. _class_GDScript:

GDScript
========

**继承：** :ref:`Script<class_Script>` **<** :ref:`Resource<class_Resource>` **<** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`

用 GDScript 编程语言实现的脚本。

.. rst-class:: classref-introduction-group

描述
----

用 GDScript 编程语言实现的脚本，使用 ``.gd`` 扩展名保存。该脚本扩展了将其实例化的所有对象的功能。

调用 :ref:`new<class_GDScript_method_new>` 会创建该脚本的全新实例。如果现有对象的类与该脚本的基类相匹配，那么 :ref:`Object.set_script<class_Object_method_set_script>` 就能够扩展该对象。

如果你想要查看 GDScript 的内置函数，请移步 :ref:`@GDScript<class_@GDScript>`\ 。

.. rst-class:: classref-introduction-group

教程
----

- :doc:`GDScript 文档索引 <../tutorials/scripting/gdscript/index>`

.. rst-class:: classref-reftable-group

方法
----

.. table::
   :widths: auto

   +-------------------------------+----------------------------------------------------------------+
   | :ref:`Variant<class_Variant>` | :ref:`new<class_GDScript_method_new>` **(** ... **)** |vararg| |
   +-------------------------------+----------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

方法说明
--------

.. _class_GDScript_method_new:

.. rst-class:: classref-method

:ref:`Variant<class_Variant>` **new** **(** ... **)** |vararg|

返回该脚本的一个新实例化对象。

举例：

::

    var MyClass = load("myclass.gd")
    var instance = MyClass.new()
    assert(instance.get_script() == MyClass)

.. |virtual| replace:: :abbr:`virtual (本方法通常需要用户覆盖才能生效。)`
.. |const| replace:: :abbr:`const (本方法没有副作用。不会修改该实例的任何成员变量。)`
.. |vararg| replace:: :abbr:`vararg (本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。)`
.. |constructor| replace:: :abbr:`constructor (本方法用于构造某个类型。)`
.. |static| replace:: :abbr:`static (调用本方法无需实例，所以可以直接使用类名调用。)`
.. |operator| replace:: :abbr:`operator (本方法描述的是使用本类型作为左操作数的有效操作符。)`
.. |bitfield| replace:: :abbr:`BitField (这个值是由下列标志构成的位掩码整数。)`

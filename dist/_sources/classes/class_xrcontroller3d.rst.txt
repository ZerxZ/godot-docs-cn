:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/XRController3D.xml.

.. _class_XRController3D:

XRController3D
==============

**继承：** :ref:`XRNode3D<class_XRNode3D>` **<** :ref:`Node3D<class_Node3D>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

表示空间跟踪控制器的空间节点。

.. rst-class:: classref-introduction-group

描述
----

这是一个辅助空间节点，链接到控制器的跟踪。它还为控制器上的按钮等状态，提供了几个方便的直通方式。

控制器通过其 ID 链接。可以在控制器可用之前创建控制器节点。如果游戏总是使用两个控制器（每只手一个），可以预定义 ID 为 1 和 2 的控制器；一旦控制器被识别，它们将被立即激活。如果希望使用额外的控制器，应该对这些信号做出反应并将 XRController3D 节点添加到场景中。

控制器节点的位置由 :ref:`XRServer<class_XRServer>` 自动更新。这使得该节点非常适合添加子节点以可视化控制器。

由于许多 XR 运行时现在使用可配置的动作映射，因此所有输入都被命名。

.. rst-class:: classref-introduction-group

教程
----

- :doc:`XR 文档索引 <../tutorials/xr/index>`

.. rst-class:: classref-reftable-group

方法
----

.. table::
   :widths: auto

   +----------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`float<class_float>`                                | :ref:`get_float<class_XRController3D_method_get_float>` **(** :ref:`StringName<class_StringName>` name **)** |const|                 |
   +----------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Variant<class_Variant>`                            | :ref:`get_input<class_XRController3D_method_get_input>` **(** :ref:`StringName<class_StringName>` name **)** |const|                 |
   +----------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`TrackerHand<enum_XRPositionalTracker_TrackerHand>` | :ref:`get_tracker_hand<class_XRController3D_method_get_tracker_hand>` **(** **)** |const|                                            |
   +----------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector2<class_Vector2>`                            | :ref:`get_vector2<class_XRController3D_method_get_vector2>` **(** :ref:`StringName<class_StringName>` name **)** |const|             |
   +----------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`                                  | :ref:`is_button_pressed<class_XRController3D_method_is_button_pressed>` **(** :ref:`StringName<class_StringName>` name **)** |const| |
   +----------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

信号
----

.. _class_XRController3D_signal_button_pressed:

.. rst-class:: classref-signal

**button_pressed** **(** :ref:`String<class_String>` name **)**

当该控制器上的一个按钮被按下时触发。

.. rst-class:: classref-item-separator

----

.. _class_XRController3D_signal_button_released:

.. rst-class:: classref-signal

**button_released** **(** :ref:`String<class_String>` name **)**

当该控制器上的一个按钮被释放时触发。

.. rst-class:: classref-item-separator

----

.. _class_XRController3D_signal_input_float_changed:

.. rst-class:: classref-signal

**input_float_changed** **(** :ref:`String<class_String>` name, :ref:`float<class_float>` value **)**

当该控制器上的触发器或类似输入更改值时发出。

.. rst-class:: classref-item-separator

----

.. _class_XRController3D_signal_input_vector2_changed:

.. rst-class:: classref-signal

**input_vector2_changed** **(** :ref:`String<class_String>` name, :ref:`Vector2<class_Vector2>` value **)**

当该控制器上的拇指杆或拇指板被移动时发出。

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

方法说明
--------

.. _class_XRController3D_method_get_float:

.. rst-class:: classref-method

:ref:`float<class_float>` **get_float** **(** :ref:`StringName<class_StringName>` name **)** |const|

返回具有给定 ``name`` 的输入的数值。用于触发器和抓握传感器。

.. rst-class:: classref-item-separator

----

.. _class_XRController3D_method_get_input:

.. rst-class:: classref-method

:ref:`Variant<class_Variant>` **get_input** **(** :ref:`StringName<class_StringName>` name **)** |const|

返回具有给定名称 ``name`` 的输入对应的变体 :ref:`Variant<class_Variant>`\ 。任何输入类型均可用，该变体会根据配置的动作设置类型。

.. rst-class:: classref-item-separator

----

.. _class_XRController3D_method_get_tracker_hand:

.. rst-class:: classref-method

:ref:`TrackerHand<enum_XRPositionalTracker_TrackerHand>` **get_tracker_hand** **(** **)** |const|

返回持握这个控制器的手，如果已知。见 :ref:`TrackerHand<enum_XRPositionalTracker_TrackerHand>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_XRController3D_method_get_vector2:

.. rst-class:: classref-method

:ref:`Vector2<class_Vector2>` **get_vector2** **(** :ref:`StringName<class_StringName>` name **)** |const|

返回名称为 ``name`` 的输入 :ref:`Vector2<class_Vector2>`\ 。适用于很多手柄上的摇杆和摇杆按钮。

.. rst-class:: classref-item-separator

----

.. _class_XRController3D_method_is_button_pressed:

.. rst-class:: classref-method

:ref:`bool<class_bool>` **is_button_pressed** **(** :ref:`StringName<class_StringName>` name **)** |const|

如果名称为 ``name`` 的按钮处于按下状态，则返回 ``true``\ 。

.. |virtual| replace:: :abbr:`virtual (本方法通常需要用户覆盖才能生效。)`
.. |const| replace:: :abbr:`const (本方法没有副作用。不会修改该实例的任何成员变量。)`
.. |vararg| replace:: :abbr:`vararg (本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。)`
.. |constructor| replace:: :abbr:`constructor (本方法用于构造某个类型。)`
.. |static| replace:: :abbr:`static (调用本方法无需实例，所以可以直接使用类名调用。)`
.. |operator| replace:: :abbr:`operator (本方法描述的是使用本类型作为左操作数的有效操作符。)`
.. |bitfield| replace:: :abbr:`BitField (这个值是由下列标志构成的位掩码整数。)`

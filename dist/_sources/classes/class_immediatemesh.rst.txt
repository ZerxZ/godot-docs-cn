:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/ImmediateMesh.xml.

.. _class_ImmediateMesh:

ImmediateMesh
=============

**继承：** :ref:`Mesh<class_Mesh>` **<** :ref:`Resource<class_Resource>` **<** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`

为手动创建几何体，而优化的网格。

.. rst-class:: classref-introduction-group

描述
----

针对手动创建几何体优化的网格类型，与 OpenGL 1.x 的立即模式类似。

以下是生成三角形面的示例：


.. tabs::

 .. code-tab:: gdscript

    var mesh = ImmediateMesh.new()
    mesh.surface_begin(Mesh.PRIMITIVE_TRIANGLES)
    mesh.surface_add_vertex(Vector3.LEFT)
    mesh.surface_add_vertex(Vector3.FORWARD)
    mesh.surface_add_vertex(Vector3.ZERO)
    mesh.surface_end()

 .. code-tab:: csharp

    var mesh = new ImmediateMesh();
    mesh.SurfaceBegin(Mesh.PrimitiveType.Triangles);
    mesh.SurfaceAddVertex(Vector3.Left);
    mesh.SurfaceAddVertex(Vector3.Forward);
    mesh.SurfaceAddVertex(Vector3.Zero);
    mesh.SurfaceEnd();



\ **注意：**\ 使用 **ImmediateMesh** 生成复杂的几何体极其低效。这种网格的设计目的是用来生成经常变化的简单几何体。

.. rst-class:: classref-introduction-group

教程
----

- :doc:`使用 ImmediateMesh <../tutorials/3d/procedural_geometry/immediatemesh>`

.. rst-class:: classref-reftable-group

方法
----

.. table::
   :widths: auto

   +------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void | :ref:`clear_surfaces<class_ImmediateMesh_method_clear_surfaces>` **(** **)**                                                                                                      |
   +------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void | :ref:`surface_add_vertex<class_ImmediateMesh_method_surface_add_vertex>` **(** :ref:`Vector3<class_Vector3>` vertex **)**                                                         |
   +------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void | :ref:`surface_add_vertex_2d<class_ImmediateMesh_method_surface_add_vertex_2d>` **(** :ref:`Vector2<class_Vector2>` vertex **)**                                                   |
   +------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void | :ref:`surface_begin<class_ImmediateMesh_method_surface_begin>` **(** :ref:`PrimitiveType<enum_Mesh_PrimitiveType>` primitive, :ref:`Material<class_Material>` material=null **)** |
   +------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void | :ref:`surface_end<class_ImmediateMesh_method_surface_end>` **(** **)**                                                                                                            |
   +------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void | :ref:`surface_set_color<class_ImmediateMesh_method_surface_set_color>` **(** :ref:`Color<class_Color>` color **)**                                                                |
   +------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void | :ref:`surface_set_normal<class_ImmediateMesh_method_surface_set_normal>` **(** :ref:`Vector3<class_Vector3>` normal **)**                                                         |
   +------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void | :ref:`surface_set_tangent<class_ImmediateMesh_method_surface_set_tangent>` **(** :ref:`Plane<class_Plane>` tangent **)**                                                          |
   +------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void | :ref:`surface_set_uv<class_ImmediateMesh_method_surface_set_uv>` **(** :ref:`Vector2<class_Vector2>` uv **)**                                                                     |
   +------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void | :ref:`surface_set_uv2<class_ImmediateMesh_method_surface_set_uv2>` **(** :ref:`Vector2<class_Vector2>` uv2 **)**                                                                  |
   +------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

方法说明
--------

.. _class_ImmediateMesh_method_clear_surfaces:

.. rst-class:: classref-method

void **clear_surfaces** **(** **)**

清除所有表面。

.. rst-class:: classref-item-separator

----

.. _class_ImmediateMesh_method_surface_add_vertex:

.. rst-class:: classref-method

void **surface_add_vertex** **(** :ref:`Vector3<class_Vector3>` vertex **)**

使用先前设置的当前属性，添加一个 3D 顶点。

.. rst-class:: classref-item-separator

----

.. _class_ImmediateMesh_method_surface_add_vertex_2d:

.. rst-class:: classref-method

void **surface_add_vertex_2d** **(** :ref:`Vector2<class_Vector2>` vertex **)**

使用先前设置的当前属性，添加一个 2D 顶点。

.. rst-class:: classref-item-separator

----

.. _class_ImmediateMesh_method_surface_begin:

.. rst-class:: classref-method

void **surface_begin** **(** :ref:`PrimitiveType<enum_Mesh_PrimitiveType>` primitive, :ref:`Material<class_Material>` material=null **)**

开始一个新的表面。

.. rst-class:: classref-item-separator

----

.. _class_ImmediateMesh_method_surface_end:

.. rst-class:: classref-method

void **surface_end** **(** **)**

结束并提交当前表面。请注意，在该函数被调用之前，创建的表面将不可见。

.. rst-class:: classref-item-separator

----

.. _class_ImmediateMesh_method_surface_set_color:

.. rst-class:: classref-method

void **surface_set_color** **(** :ref:`Color<class_Color>` color **)**

设置将与下一个顶点一起推送的颜色属性。

.. rst-class:: classref-item-separator

----

.. _class_ImmediateMesh_method_surface_set_normal:

.. rst-class:: classref-method

void **surface_set_normal** **(** :ref:`Vector3<class_Vector3>` normal **)**

设置将与下一个顶点一起推送的法线属性。

.. rst-class:: classref-item-separator

----

.. _class_ImmediateMesh_method_surface_set_tangent:

.. rst-class:: classref-method

void **surface_set_tangent** **(** :ref:`Plane<class_Plane>` tangent **)**

设置将与下一个顶点一起推送的切线属性。

.. rst-class:: classref-item-separator

----

.. _class_ImmediateMesh_method_surface_set_uv:

.. rst-class:: classref-method

void **surface_set_uv** **(** :ref:`Vector2<class_Vector2>` uv **)**

设置将与下一个顶点一起推送的 UV 属性。

.. rst-class:: classref-item-separator

----

.. _class_ImmediateMesh_method_surface_set_uv2:

.. rst-class:: classref-method

void **surface_set_uv2** **(** :ref:`Vector2<class_Vector2>` uv2 **)**

设置将与下一个顶点一起推送的 UV2 属性。

.. |virtual| replace:: :abbr:`virtual (本方法通常需要用户覆盖才能生效。)`
.. |const| replace:: :abbr:`const (本方法没有副作用。不会修改该实例的任何成员变量。)`
.. |vararg| replace:: :abbr:`vararg (本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。)`
.. |constructor| replace:: :abbr:`constructor (本方法用于构造某个类型。)`
.. |static| replace:: :abbr:`static (调用本方法无需实例，所以可以直接使用类名调用。)`
.. |operator| replace:: :abbr:`operator (本方法描述的是使用本类型作为左操作数的有效操作符。)`
.. |bitfield| replace:: :abbr:`BitField (这个值是由下列标志构成的位掩码整数。)`

:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/Viewport.xml.

.. _class_Viewport:

Viewport
========

**继承：** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

**派生：** :ref:`SubViewport<class_SubViewport>`, :ref:`Window<class_Window>`

视口的抽象基类。对绘图以及与游戏世界的交互进行了封装。

.. rst-class:: classref-introduction-group

描述
----

Viewport（视口）会在屏幕中创建不同的视图，或是在其他视口中创建子视图。视口上会显示 2D 子节点，也会渲染 Camera3D 3D 子节点。

视口也可以拥有自己的 2D 或 3D 世界，这样就不会与其他视口共享绘制的内容。

视口也可以选择作为音频监听器，这样就可以根据 2D 或 3D 相机子节点生成位置音频。

另外，在设备有多个屏幕的情况下，可以将视口分配给不同的屏幕。

最后，视口也可以充当渲染目标，在这种情况下，除非使用与其相关联的纹理进行绘制，否则它们将不可见。

.. rst-class:: classref-introduction-group

教程
----

- :doc:`使用视口 <../tutorials/rendering/viewports>`

- :doc:`Viewport 和画布变换 <../tutorials/2d/2d_transforms>`

- `3D GUI 演示 <https://godotengine.org/asset-library/asset/127>`__

- `2D 中的 3D 演示 <https://godotengine.org/asset-library/asset/128>`__

- `3D 中的 2D 演示 <https://godotengine.org/asset-library/asset/129>`__

- `屏幕捕捉演示 <https://godotengine.org/asset-library/asset/130>`__

- `动态分屏演示 <https://godotengine.org/asset-library/asset/541>`__

- `3D Viewport 缩放演示 <https://godotengine.org/asset-library/asset/586>`__

.. rst-class:: classref-reftable-group

属性
----

.. table::
   :widths: auto

   +-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------+----------------+
   | :ref:`bool<class_bool>`                                                                       | :ref:`audio_listener_enable_2d<class_Viewport_property_audio_listener_enable_2d>`                     | ``false``      |
   +-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------+----------------+
   | :ref:`bool<class_bool>`                                                                       | :ref:`audio_listener_enable_3d<class_Viewport_property_audio_listener_enable_3d>`                     | ``false``      |
   +-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------+----------------+
   | :ref:`int<class_int>`                                                                         | :ref:`canvas_cull_mask<class_Viewport_property_canvas_cull_mask>`                                     | ``4294967295`` |
   +-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------+----------------+
   | :ref:`DefaultCanvasItemTextureFilter<enum_Viewport_DefaultCanvasItemTextureFilter>`           | :ref:`canvas_item_default_texture_filter<class_Viewport_property_canvas_item_default_texture_filter>` | ``1``          |
   +-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------+----------------+
   | :ref:`DefaultCanvasItemTextureRepeat<enum_Viewport_DefaultCanvasItemTextureRepeat>`           | :ref:`canvas_item_default_texture_repeat<class_Viewport_property_canvas_item_default_texture_repeat>` | ``0``          |
   +-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------+----------------+
   | :ref:`Transform2D<class_Transform2D>`                                                         | :ref:`canvas_transform<class_Viewport_property_canvas_transform>`                                     |                |
   +-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------+----------------+
   | :ref:`DebugDraw<enum_Viewport_DebugDraw>`                                                     | :ref:`debug_draw<class_Viewport_property_debug_draw>`                                                 | ``0``          |
   +-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------+----------------+
   | :ref:`bool<class_bool>`                                                                       | :ref:`disable_3d<class_Viewport_property_disable_3d>`                                                 | ``false``      |
   +-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------+----------------+
   | :ref:`float<class_float>`                                                                     | :ref:`fsr_sharpness<class_Viewport_property_fsr_sharpness>`                                           | ``0.2``        |
   +-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------+----------------+
   | :ref:`Transform2D<class_Transform2D>`                                                         | :ref:`global_canvas_transform<class_Viewport_property_global_canvas_transform>`                       |                |
   +-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------+----------------+
   | :ref:`bool<class_bool>`                                                                       | :ref:`gui_disable_input<class_Viewport_property_gui_disable_input>`                                   | ``false``      |
   +-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------+----------------+
   | :ref:`bool<class_bool>`                                                                       | :ref:`gui_embed_subwindows<class_Viewport_property_gui_embed_subwindows>`                             | ``false``      |
   +-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------+----------------+
   | :ref:`bool<class_bool>`                                                                       | :ref:`gui_snap_controls_to_pixels<class_Viewport_property_gui_snap_controls_to_pixels>`               | ``true``       |
   +-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------+----------------+
   | :ref:`bool<class_bool>`                                                                       | :ref:`handle_input_locally<class_Viewport_property_handle_input_locally>`                             | ``true``       |
   +-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------+----------------+
   | :ref:`float<class_float>`                                                                     | :ref:`mesh_lod_threshold<class_Viewport_property_mesh_lod_threshold>`                                 | ``1.0``        |
   +-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------+----------------+
   | :ref:`MSAA<enum_Viewport_MSAA>`                                                               | :ref:`msaa_2d<class_Viewport_property_msaa_2d>`                                                       | ``0``          |
   +-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------+----------------+
   | :ref:`MSAA<enum_Viewport_MSAA>`                                                               | :ref:`msaa_3d<class_Viewport_property_msaa_3d>`                                                       | ``0``          |
   +-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------+----------------+
   | :ref:`bool<class_bool>`                                                                       | :ref:`own_world_3d<class_Viewport_property_own_world_3d>`                                             | ``false``      |
   +-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------+----------------+
   | :ref:`bool<class_bool>`                                                                       | :ref:`physics_object_picking<class_Viewport_property_physics_object_picking>`                         | ``false``      |
   +-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------+----------------+
   | :ref:`bool<class_bool>`                                                                       | :ref:`physics_object_picking_sort<class_Viewport_property_physics_object_picking_sort>`               | ``false``      |
   +-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------+----------------+
   | :ref:`bool<class_bool>`                                                                       | :ref:`positional_shadow_atlas_16_bits<class_Viewport_property_positional_shadow_atlas_16_bits>`       | ``true``       |
   +-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------+----------------+
   | :ref:`PositionalShadowAtlasQuadrantSubdiv<enum_Viewport_PositionalShadowAtlasQuadrantSubdiv>` | :ref:`positional_shadow_atlas_quad_0<class_Viewport_property_positional_shadow_atlas_quad_0>`         | ``2``          |
   +-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------+----------------+
   | :ref:`PositionalShadowAtlasQuadrantSubdiv<enum_Viewport_PositionalShadowAtlasQuadrantSubdiv>` | :ref:`positional_shadow_atlas_quad_1<class_Viewport_property_positional_shadow_atlas_quad_1>`         | ``2``          |
   +-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------+----------------+
   | :ref:`PositionalShadowAtlasQuadrantSubdiv<enum_Viewport_PositionalShadowAtlasQuadrantSubdiv>` | :ref:`positional_shadow_atlas_quad_2<class_Viewport_property_positional_shadow_atlas_quad_2>`         | ``3``          |
   +-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------+----------------+
   | :ref:`PositionalShadowAtlasQuadrantSubdiv<enum_Viewport_PositionalShadowAtlasQuadrantSubdiv>` | :ref:`positional_shadow_atlas_quad_3<class_Viewport_property_positional_shadow_atlas_quad_3>`         | ``4``          |
   +-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------+----------------+
   | :ref:`int<class_int>`                                                                         | :ref:`positional_shadow_atlas_size<class_Viewport_property_positional_shadow_atlas_size>`             | ``2048``       |
   +-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------+----------------+
   | :ref:`Scaling3DMode<enum_Viewport_Scaling3DMode>`                                             | :ref:`scaling_3d_mode<class_Viewport_property_scaling_3d_mode>`                                       | ``0``          |
   +-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------+----------------+
   | :ref:`float<class_float>`                                                                     | :ref:`scaling_3d_scale<class_Viewport_property_scaling_3d_scale>`                                     | ``1.0``        |
   +-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------+----------------+
   | :ref:`ScreenSpaceAA<enum_Viewport_ScreenSpaceAA>`                                             | :ref:`screen_space_aa<class_Viewport_property_screen_space_aa>`                                       | ``0``          |
   +-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------+----------------+
   | :ref:`SDFOversize<enum_Viewport_SDFOversize>`                                                 | :ref:`sdf_oversize<class_Viewport_property_sdf_oversize>`                                             | ``1``          |
   +-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------+----------------+
   | :ref:`SDFScale<enum_Viewport_SDFScale>`                                                       | :ref:`sdf_scale<class_Viewport_property_sdf_scale>`                                                   | ``1``          |
   +-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------+----------------+
   | :ref:`bool<class_bool>`                                                                       | :ref:`snap_2d_transforms_to_pixel<class_Viewport_property_snap_2d_transforms_to_pixel>`               | ``false``      |
   +-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------+----------------+
   | :ref:`bool<class_bool>`                                                                       | :ref:`snap_2d_vertices_to_pixel<class_Viewport_property_snap_2d_vertices_to_pixel>`                   | ``false``      |
   +-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------+----------------+
   | :ref:`float<class_float>`                                                                     | :ref:`texture_mipmap_bias<class_Viewport_property_texture_mipmap_bias>`                               | ``0.0``        |
   +-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------+----------------+
   | :ref:`bool<class_bool>`                                                                       | :ref:`transparent_bg<class_Viewport_property_transparent_bg>`                                         | ``false``      |
   +-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------+----------------+
   | :ref:`bool<class_bool>`                                                                       | :ref:`use_debanding<class_Viewport_property_use_debanding>`                                           | ``false``      |
   +-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------+----------------+
   | :ref:`bool<class_bool>`                                                                       | :ref:`use_hdr_2d<class_Viewport_property_use_hdr_2d>`                                                 | ``false``      |
   +-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------+----------------+
   | :ref:`bool<class_bool>`                                                                       | :ref:`use_occlusion_culling<class_Viewport_property_use_occlusion_culling>`                           | ``false``      |
   +-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------+----------------+
   | :ref:`bool<class_bool>`                                                                       | :ref:`use_taa<class_Viewport_property_use_taa>`                                                       | ``false``      |
   +-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------+----------------+
   | :ref:`bool<class_bool>`                                                                       | :ref:`use_xr<class_Viewport_property_use_xr>`                                                         | ``false``      |
   +-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------+----------------+
   | :ref:`VRSMode<enum_Viewport_VRSMode>`                                                         | :ref:`vrs_mode<class_Viewport_property_vrs_mode>`                                                     | ``0``          |
   +-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------+----------------+
   | :ref:`Texture2D<class_Texture2D>`                                                             | :ref:`vrs_texture<class_Viewport_property_vrs_texture>`                                               |                |
   +-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------+----------------+
   | :ref:`World2D<class_World2D>`                                                                 | :ref:`world_2d<class_Viewport_property_world_2d>`                                                     |                |
   +-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------+----------------+
   | :ref:`World3D<class_World3D>`                                                                 | :ref:`world_3d<class_Viewport_property_world_3d>`                                                     |                |
   +-----------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------+----------------+

.. rst-class:: classref-reftable-group

方法
----

.. table::
   :widths: auto

   +-----------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`World2D<class_World2D>`                                                                 | :ref:`find_world_2d<class_Viewport_method_find_world_2d>` **(** **)** |const|                                                                                                                                                                                          |
   +-----------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`World3D<class_World3D>`                                                                 | :ref:`find_world_3d<class_Viewport_method_find_world_3d>` **(** **)** |const|                                                                                                                                                                                          |
   +-----------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Camera2D<class_Camera2D>`                                                               | :ref:`get_camera_2d<class_Viewport_method_get_camera_2d>` **(** **)** |const|                                                                                                                                                                                          |
   +-----------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Camera3D<class_Camera3D>`                                                               | :ref:`get_camera_3d<class_Viewport_method_get_camera_3d>` **(** **)** |const|                                                                                                                                                                                          |
   +-----------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`                                                                       | :ref:`get_canvas_cull_mask_bit<class_Viewport_method_get_canvas_cull_mask_bit>` **(** :ref:`int<class_int>` layer **)** |const|                                                                                                                                        |
   +-----------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Window[]<class_Window>`                                                                 | :ref:`get_embedded_subwindows<class_Viewport_method_get_embedded_subwindows>` **(** **)** |const|                                                                                                                                                                      |
   +-----------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Transform2D<class_Transform2D>`                                                         | :ref:`get_final_transform<class_Viewport_method_get_final_transform>` **(** **)** |const|                                                                                                                                                                              |
   +-----------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Vector2<class_Vector2>`                                                                 | :ref:`get_mouse_position<class_Viewport_method_get_mouse_position>` **(** **)** |const|                                                                                                                                                                                |
   +-----------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`PositionalShadowAtlasQuadrantSubdiv<enum_Viewport_PositionalShadowAtlasQuadrantSubdiv>` | :ref:`get_positional_shadow_atlas_quadrant_subdiv<class_Viewport_method_get_positional_shadow_atlas_quadrant_subdiv>` **(** :ref:`int<class_int>` quadrant **)** |const|                                                                                               |
   +-----------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`int<class_int>`                                                                         | :ref:`get_render_info<class_Viewport_method_get_render_info>` **(** :ref:`RenderInfoType<enum_Viewport_RenderInfoType>` type, :ref:`RenderInfo<enum_Viewport_RenderInfo>` info **)**                                                                                   |
   +-----------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Transform2D<class_Transform2D>`                                                         | :ref:`get_screen_transform<class_Viewport_method_get_screen_transform>` **(** **)** |const|                                                                                                                                                                            |
   +-----------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`ViewportTexture<class_ViewportTexture>`                                                 | :ref:`get_texture<class_Viewport_method_get_texture>` **(** **)** |const|                                                                                                                                                                                              |
   +-----------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`RID<class_RID>`                                                                         | :ref:`get_viewport_rid<class_Viewport_method_get_viewport_rid>` **(** **)** |const|                                                                                                                                                                                    |
   +-----------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Rect2<class_Rect2>`                                                                     | :ref:`get_visible_rect<class_Viewport_method_get_visible_rect>` **(** **)** |const|                                                                                                                                                                                    |
   +-----------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Variant<class_Variant>`                                                                 | :ref:`gui_get_drag_data<class_Viewport_method_gui_get_drag_data>` **(** **)** |const|                                                                                                                                                                                  |
   +-----------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`Control<class_Control>`                                                                 | :ref:`gui_get_focus_owner<class_Viewport_method_gui_get_focus_owner>` **(** **)** |const|                                                                                                                                                                              |
   +-----------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`                                                                       | :ref:`gui_is_drag_successful<class_Viewport_method_gui_is_drag_successful>` **(** **)** |const|                                                                                                                                                                        |
   +-----------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`                                                                       | :ref:`gui_is_dragging<class_Viewport_method_gui_is_dragging>` **(** **)** |const|                                                                                                                                                                                      |
   +-----------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                                                          | :ref:`gui_release_focus<class_Viewport_method_gui_release_focus>` **(** **)**                                                                                                                                                                                          |
   +-----------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`                                                                       | :ref:`is_input_handled<class_Viewport_method_is_input_handled>` **(** **)** |const|                                                                                                                                                                                    |
   +-----------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                                                          | :ref:`push_input<class_Viewport_method_push_input>` **(** :ref:`InputEvent<class_InputEvent>` event, :ref:`bool<class_bool>` in_local_coords=false **)**                                                                                                               |
   +-----------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                                                          | :ref:`push_text_input<class_Viewport_method_push_text_input>` **(** :ref:`String<class_String>` text **)**                                                                                                                                                             |
   +-----------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                                                          | :ref:`push_unhandled_input<class_Viewport_method_push_unhandled_input>` **(** :ref:`InputEvent<class_InputEvent>` event, :ref:`bool<class_bool>` in_local_coords=false **)**                                                                                           |
   +-----------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                                                          | :ref:`set_canvas_cull_mask_bit<class_Viewport_method_set_canvas_cull_mask_bit>` **(** :ref:`int<class_int>` layer, :ref:`bool<class_bool>` enable **)**                                                                                                                |
   +-----------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                                                          | :ref:`set_input_as_handled<class_Viewport_method_set_input_as_handled>` **(** **)**                                                                                                                                                                                    |
   +-----------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                                                          | :ref:`set_positional_shadow_atlas_quadrant_subdiv<class_Viewport_method_set_positional_shadow_atlas_quadrant_subdiv>` **(** :ref:`int<class_int>` quadrant, :ref:`PositionalShadowAtlasQuadrantSubdiv<enum_Viewport_PositionalShadowAtlasQuadrantSubdiv>` subdiv **)** |
   +-----------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                                                          | :ref:`update_mouse_cursor_state<class_Viewport_method_update_mouse_cursor_state>` **(** **)**                                                                                                                                                                          |
   +-----------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                                                                          | :ref:`warp_mouse<class_Viewport_method_warp_mouse>` **(** :ref:`Vector2<class_Vector2>` position **)**                                                                                                                                                                 |
   +-----------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

信号
----

.. _class_Viewport_signal_gui_focus_changed:

.. rst-class:: classref-signal

**gui_focus_changed** **(** :ref:`Control<class_Control>` node **)**

当控件节点获取键盘焦点时触发。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_signal_size_changed:

.. rst-class:: classref-signal

**size_changed** **(** **)**

当视口的大小被改变时发出，无论是通过调整窗口大小，还是通过其他方式改变的大小。

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

枚举
----

.. _enum_Viewport_PositionalShadowAtlasQuadrantSubdiv:

.. rst-class:: classref-enumeration

enum **PositionalShadowAtlasQuadrantSubdiv**:

.. _class_Viewport_constant_SHADOW_ATLAS_QUADRANT_SUBDIV_DISABLED:

.. rst-class:: classref-enumeration-constant

:ref:`PositionalShadowAtlasQuadrantSubdiv<enum_Viewport_PositionalShadowAtlasQuadrantSubdiv>` **SHADOW_ATLAS_QUADRANT_SUBDIV_DISABLED** = ``0``

不使用该象限。

.. _class_Viewport_constant_SHADOW_ATLAS_QUADRANT_SUBDIV_1:

.. rst-class:: classref-enumeration-constant

:ref:`PositionalShadowAtlasQuadrantSubdiv<enum_Viewport_PositionalShadowAtlasQuadrantSubdiv>` **SHADOW_ATLAS_QUADRANT_SUBDIV_1** = ``1``

该象限仅由一张阴影贴图使用。

.. _class_Viewport_constant_SHADOW_ATLAS_QUADRANT_SUBDIV_4:

.. rst-class:: classref-enumeration-constant

:ref:`PositionalShadowAtlasQuadrantSubdiv<enum_Viewport_PositionalShadowAtlasQuadrantSubdiv>` **SHADOW_ATLAS_QUADRANT_SUBDIV_4** = ``2``

该象限将被分为 4 份，最多被 4 张阴影贴图使用。

.. _class_Viewport_constant_SHADOW_ATLAS_QUADRANT_SUBDIV_16:

.. rst-class:: classref-enumeration-constant

:ref:`PositionalShadowAtlasQuadrantSubdiv<enum_Viewport_PositionalShadowAtlasQuadrantSubdiv>` **SHADOW_ATLAS_QUADRANT_SUBDIV_16** = ``3``

该象限将被分为 16 份，最多被 16 张阴影贴图使用。

.. _class_Viewport_constant_SHADOW_ATLAS_QUADRANT_SUBDIV_64:

.. rst-class:: classref-enumeration-constant

:ref:`PositionalShadowAtlasQuadrantSubdiv<enum_Viewport_PositionalShadowAtlasQuadrantSubdiv>` **SHADOW_ATLAS_QUADRANT_SUBDIV_64** = ``4``

该象限将被分为 64 份，最多被 64 张阴影贴图使用。

.. _class_Viewport_constant_SHADOW_ATLAS_QUADRANT_SUBDIV_256:

.. rst-class:: classref-enumeration-constant

:ref:`PositionalShadowAtlasQuadrantSubdiv<enum_Viewport_PositionalShadowAtlasQuadrantSubdiv>` **SHADOW_ATLAS_QUADRANT_SUBDIV_256** = ``5``

该象限将被分为 256 份，最多被 256 张阴影贴图使用。除非 :ref:`positional_shadow_atlas_size<class_Viewport_property_positional_shadow_atlas_size>` 非常高，否则该象限中的阴影分辨率将非常低。

.. _class_Viewport_constant_SHADOW_ATLAS_QUADRANT_SUBDIV_1024:

.. rst-class:: classref-enumeration-constant

:ref:`PositionalShadowAtlasQuadrantSubdiv<enum_Viewport_PositionalShadowAtlasQuadrantSubdiv>` **SHADOW_ATLAS_QUADRANT_SUBDIV_1024** = ``6``

该象限将被分为 1024 份，最多被 1024 张阴影贴图使用。除非 :ref:`positional_shadow_atlas_size<class_Viewport_property_positional_shadow_atlas_size>` 非常高，否则该象限中的阴影分辨率将非常低。

.. _class_Viewport_constant_SHADOW_ATLAS_QUADRANT_SUBDIV_MAX:

.. rst-class:: classref-enumeration-constant

:ref:`PositionalShadowAtlasQuadrantSubdiv<enum_Viewport_PositionalShadowAtlasQuadrantSubdiv>` **SHADOW_ATLAS_QUADRANT_SUBDIV_MAX** = ``7``

代表 :ref:`PositionalShadowAtlasQuadrantSubdiv<enum_Viewport_PositionalShadowAtlasQuadrantSubdiv>` 枚举的大小。

.. rst-class:: classref-item-separator

----

.. _enum_Viewport_Scaling3DMode:

.. rst-class:: classref-enumeration

enum **Scaling3DMode**:

.. _class_Viewport_constant_SCALING_3D_MODE_BILINEAR:

.. rst-class:: classref-enumeration-constant

:ref:`Scaling3DMode<enum_Viewport_Scaling3DMode>` **SCALING_3D_MODE_BILINEAR** = ``0``

对该视口的 3D 缓冲区使用双线性缩放。缩放的程度可以使用 :ref:`scaling_3d_scale<class_Viewport_property_scaling_3d_scale>` 设置。小于 ``1.0`` 的值会产生欠采样的效果，大于 ``1.0`` 会产生超采样的效果。值为 ``1.0`` 时禁用缩放。

.. _class_Viewport_constant_SCALING_3D_MODE_FSR:

.. rst-class:: classref-enumeration-constant

:ref:`Scaling3DMode<enum_Viewport_Scaling3DMode>` **SCALING_3D_MODE_FSR** = ``1``

对该视口的 3D 缓冲区使用 AMD FidelityFX 超分辨率 1.0 升采样技术。缩放的程度可以使用 :ref:`scaling_3d_scale<class_Viewport_property_scaling_3d_scale>` 设置。小于 ``1.0`` 的值会使用 FSR 进行放大。不支持大于 ``1.0`` 的值，会改用双线性降采样。值为 ``1.0`` 时禁用缩放。

.. _class_Viewport_constant_SCALING_3D_MODE_FSR2:

.. rst-class:: classref-enumeration-constant

:ref:`Scaling3DMode<enum_Viewport_Scaling3DMode>` **SCALING_3D_MODE_FSR2** = ``2``

对视口的 3D 缓冲区使用 AMD FidelityFX 超分辨率 2.2 放大。可以使用 :ref:`scaling_3d_scale<class_Viewport_property_scaling_3d_scale>` 设置缩放量。小于 ``1.0`` 的值将导致使用 FSR2 放大视口。不支持大于 ``1.0`` 的值，将改用双线性降采样。\ ``1.0`` 的值将使用原生分辨率下的 FSR2 作为 TAA 解决方案。

.. _class_Viewport_constant_SCALING_3D_MODE_MAX:

.. rst-class:: classref-enumeration-constant

:ref:`Scaling3DMode<enum_Viewport_Scaling3DMode>` **SCALING_3D_MODE_MAX** = ``3``

代表 :ref:`Scaling3DMode<enum_Viewport_Scaling3DMode>` 枚举的大小。

.. rst-class:: classref-item-separator

----

.. _enum_Viewport_MSAA:

.. rst-class:: classref-enumeration

enum **MSAA**:

.. _class_Viewport_constant_MSAA_DISABLED:

.. rst-class:: classref-enumeration-constant

:ref:`MSAA<enum_Viewport_MSAA>` **MSAA_DISABLED** = ``0``

禁用多重采样抗锯齿模式。这是默认值，也是最快的设置。

.. _class_Viewport_constant_MSAA_2X:

.. rst-class:: classref-enumeration-constant

:ref:`MSAA<enum_Viewport_MSAA>` **MSAA_2X** = ``1``

使用 2 倍多重采样抗锯齿。性能成本中等。有助于显着减少锯齿，但 4× MSAA 看起来仍然要好得多。

.. _class_Viewport_constant_MSAA_4X:

.. rst-class:: classref-enumeration-constant

:ref:`MSAA<enum_Viewport_MSAA>` **MSAA_4X** = ``2``

使用 4 倍多重采样抗锯齿。性能成本显著，通常是性能和质量之间的良好折衷。

.. _class_Viewport_constant_MSAA_8X:

.. rst-class:: classref-enumeration-constant

:ref:`MSAA<enum_Viewport_MSAA>` **MSAA_8X** = ``3``

使用 8 倍多重采样抗锯齿。性能成本极高。在实际游戏条件下，4× 和 8× MSAA 之间的差异可能并不总是可见的。可能在低端和较旧的硬件上不受支持。

.. _class_Viewport_constant_MSAA_MAX:

.. rst-class:: classref-enumeration-constant

:ref:`MSAA<enum_Viewport_MSAA>` **MSAA_MAX** = ``4``

代表 :ref:`MSAA<enum_Viewport_MSAA>` 枚举的大小。

.. rst-class:: classref-item-separator

----

.. _enum_Viewport_ScreenSpaceAA:

.. rst-class:: classref-enumeration

enum **ScreenSpaceAA**:

.. _class_Viewport_constant_SCREEN_SPACE_AA_DISABLED:

.. rst-class:: classref-enumeration-constant

:ref:`ScreenSpaceAA<enum_Viewport_ScreenSpaceAA>` **SCREEN_SPACE_AA_DISABLED** = ``0``

不要在全屏后处理中执行抗锯齿。

.. _class_Viewport_constant_SCREEN_SPACE_AA_FXAA:

.. rst-class:: classref-enumeration-constant

:ref:`ScreenSpaceAA<enum_Viewport_ScreenSpaceAA>` **SCREEN_SPACE_AA_FXAA** = ``1``

使用快速近似抗锯齿（Fast Approximate Anti-Aliasing）。FXAA 是一种流行的屏幕空间抗锯齿方法，速度很快，但会让图像变模糊，使用较低分辨率时尤为显著。1440p 和 4K 等较高分辨率下效果仍然不错。

.. _class_Viewport_constant_SCREEN_SPACE_AA_MAX:

.. rst-class:: classref-enumeration-constant

:ref:`ScreenSpaceAA<enum_Viewport_ScreenSpaceAA>` **SCREEN_SPACE_AA_MAX** = ``2``

代表 :ref:`ScreenSpaceAA<enum_Viewport_ScreenSpaceAA>` 枚举的大小。

.. rst-class:: classref-item-separator

----

.. _enum_Viewport_RenderInfo:

.. rst-class:: classref-enumeration

enum **RenderInfo**:

.. _class_Viewport_constant_RENDER_INFO_OBJECTS_IN_FRAME:

.. rst-class:: classref-enumeration-constant

:ref:`RenderInfo<enum_Viewport_RenderInfo>` **RENDER_INFO_OBJECTS_IN_FRAME** = ``0``

帧中对象的数量。

.. _class_Viewport_constant_RENDER_INFO_PRIMITIVES_IN_FRAME:

.. rst-class:: classref-enumeration-constant

:ref:`RenderInfo<enum_Viewport_RenderInfo>` **RENDER_INFO_PRIMITIVES_IN_FRAME** = ``1``

帧中的顶点数量。

.. _class_Viewport_constant_RENDER_INFO_DRAW_CALLS_IN_FRAME:

.. rst-class:: classref-enumeration-constant

:ref:`RenderInfo<enum_Viewport_RenderInfo>` **RENDER_INFO_DRAW_CALLS_IN_FRAME** = ``2``

帧中的绘制调用量。

.. _class_Viewport_constant_RENDER_INFO_MAX:

.. rst-class:: classref-enumeration-constant

:ref:`RenderInfo<enum_Viewport_RenderInfo>` **RENDER_INFO_MAX** = ``3``

代表 :ref:`RenderInfo<enum_Viewport_RenderInfo>` 枚举的大小。

.. rst-class:: classref-item-separator

----

.. _enum_Viewport_RenderInfoType:

.. rst-class:: classref-enumeration

enum **RenderInfoType**:

.. _class_Viewport_constant_RENDER_INFO_TYPE_VISIBLE:

.. rst-class:: classref-enumeration-constant

:ref:`RenderInfoType<enum_Viewport_RenderInfoType>` **RENDER_INFO_TYPE_VISIBLE** = ``0``



.. _class_Viewport_constant_RENDER_INFO_TYPE_SHADOW:

.. rst-class:: classref-enumeration-constant

:ref:`RenderInfoType<enum_Viewport_RenderInfoType>` **RENDER_INFO_TYPE_SHADOW** = ``1``



.. _class_Viewport_constant_RENDER_INFO_TYPE_MAX:

.. rst-class:: classref-enumeration-constant

:ref:`RenderInfoType<enum_Viewport_RenderInfoType>` **RENDER_INFO_TYPE_MAX** = ``2``



.. rst-class:: classref-item-separator

----

.. _enum_Viewport_DebugDraw:

.. rst-class:: classref-enumeration

enum **DebugDraw**:

.. _class_Viewport_constant_DEBUG_DRAW_DISABLED:

.. rst-class:: classref-enumeration-constant

:ref:`DebugDraw<enum_Viewport_DebugDraw>` **DEBUG_DRAW_DISABLED** = ``0``

对象正常显示。

.. _class_Viewport_constant_DEBUG_DRAW_UNSHADED:

.. rst-class:: classref-enumeration-constant

:ref:`DebugDraw<enum_Viewport_DebugDraw>` **DEBUG_DRAW_UNSHADED** = ``1``

显示的对象没有光照信息。

.. _class_Viewport_constant_DEBUG_DRAW_LIGHTING:

.. rst-class:: classref-enumeration-constant

:ref:`DebugDraw<enum_Viewport_DebugDraw>` **DEBUG_DRAW_LIGHTING** = ``2``



.. _class_Viewport_constant_DEBUG_DRAW_OVERDRAW:

.. rst-class:: classref-enumeration-constant

:ref:`DebugDraw<enum_Viewport_DebugDraw>` **DEBUG_DRAW_OVERDRAW** = ``3``

对象通过加法混合显示为半透明，因此可以看到它们在彼此之上绘制的位置。更高的过度绘制意味着在绘制隐藏在其他像素后面的像素时浪费了性能。

.. _class_Viewport_constant_DEBUG_DRAW_WIREFRAME:

.. rst-class:: classref-enumeration-constant

:ref:`DebugDraw<enum_Viewport_DebugDraw>` **DEBUG_DRAW_WIREFRAME** = ``4``

对象以线框风格显示。

.. _class_Viewport_constant_DEBUG_DRAW_NORMAL_BUFFER:

.. rst-class:: classref-enumeration-constant

:ref:`DebugDraw<enum_Viewport_DebugDraw>` **DEBUG_DRAW_NORMAL_BUFFER** = ``5``



.. _class_Viewport_constant_DEBUG_DRAW_VOXEL_GI_ALBEDO:

.. rst-class:: classref-enumeration-constant

:ref:`DebugDraw<enum_Viewport_DebugDraw>` **DEBUG_DRAW_VOXEL_GI_ALBEDO** = ``6``

仅使用来自 :ref:`VoxelGI<class_VoxelGI>` 的反照率值显示对象。

.. _class_Viewport_constant_DEBUG_DRAW_VOXEL_GI_LIGHTING:

.. rst-class:: classref-enumeration-constant

:ref:`DebugDraw<enum_Viewport_DebugDraw>` **DEBUG_DRAW_VOXEL_GI_LIGHTING** = ``7``

仅使用来自 :ref:`VoxelGI<class_VoxelGI>` 的照明值显示对象。

.. _class_Viewport_constant_DEBUG_DRAW_VOXEL_GI_EMISSION:

.. rst-class:: classref-enumeration-constant

:ref:`DebugDraw<enum_Viewport_DebugDraw>` **DEBUG_DRAW_VOXEL_GI_EMISSION** = ``8``

仅使用来自 :ref:`VoxelGI<class_VoxelGI>` 的自发光颜色显示对象。

.. _class_Viewport_constant_DEBUG_DRAW_SHADOW_ATLAS:

.. rst-class:: classref-enumeration-constant

:ref:`DebugDraw<enum_Viewport_DebugDraw>` **DEBUG_DRAW_SHADOW_ATLAS** = ``9``

在 **Viewport** 的左上象限中绘制存储来自 :ref:`OmniLight3D<class_OmniLight3D>` 和 :ref:`SpotLight3D<class_SpotLight3D>` 的阴影的阴影图集。

.. _class_Viewport_constant_DEBUG_DRAW_DIRECTIONAL_SHADOW_ATLAS:

.. rst-class:: classref-enumeration-constant

:ref:`DebugDraw<enum_Viewport_DebugDraw>` **DEBUG_DRAW_DIRECTIONAL_SHADOW_ATLAS** = ``10``

在 **Viewport** 的左上象限中绘制存储来自 :ref:`DirectionalLight3D<class_DirectionalLight3D>` 的阴影的阴影图集。

.. _class_Viewport_constant_DEBUG_DRAW_SCENE_LUMINANCE:

.. rst-class:: classref-enumeration-constant

:ref:`DebugDraw<enum_Viewport_DebugDraw>` **DEBUG_DRAW_SCENE_LUMINANCE** = ``11``



.. _class_Viewport_constant_DEBUG_DRAW_SSAO:

.. rst-class:: classref-enumeration-constant

:ref:`DebugDraw<enum_Viewport_DebugDraw>` **DEBUG_DRAW_SSAO** = ``12``

绘制屏幕空间环境光遮蔽纹理而不是场景，以便可以清楚地看到它是如何影响对象的。为了使该显示模式起作用，必须在 :ref:`WorldEnvironment<class_WorldEnvironment>` 中设置 :ref:`Environment.ssao_enabled<class_Environment_property_ssao_enabled>`\ 。

.. _class_Viewport_constant_DEBUG_DRAW_SSIL:

.. rst-class:: classref-enumeration-constant

:ref:`DebugDraw<enum_Viewport_DebugDraw>` **DEBUG_DRAW_SSIL** = ``13``

绘制屏幕空间间接照明纹理而不是场景，以便可以清楚地看到它是如何影响对象的。为了使该显示模式起作用，必须在 :ref:`WorldEnvironment<class_WorldEnvironment>` 中设置 :ref:`Environment.ssil_enabled<class_Environment_property_ssil_enabled>`\ 。

.. _class_Viewport_constant_DEBUG_DRAW_PSSM_SPLITS:

.. rst-class:: classref-enumeration-constant

:ref:`DebugDraw<enum_Viewport_DebugDraw>` **DEBUG_DRAW_PSSM_SPLITS** = ``14``

为场景中的 :ref:`DirectionalLight3D<class_DirectionalLight3D>` 的每个 PSSM 分割着色不同的颜色，以便可以看到分割的位置。按顺序，它们将被着色为红色、绿色、蓝色、和黄色。

.. _class_Viewport_constant_DEBUG_DRAW_DECAL_ATLAS:

.. rst-class:: classref-enumeration-constant

:ref:`DebugDraw<enum_Viewport_DebugDraw>` **DEBUG_DRAW_DECAL_ATLAS** = ``15``

在 **Viewport** 的左上象限中绘制 :ref:`Decal<class_Decal>` 使用的贴花和光投影仪的纹理。

.. _class_Viewport_constant_DEBUG_DRAW_SDFGI:

.. rst-class:: classref-enumeration-constant

:ref:`DebugDraw<enum_Viewport_DebugDraw>` **DEBUG_DRAW_SDFGI** = ``16``



.. _class_Viewport_constant_DEBUG_DRAW_SDFGI_PROBES:

.. rst-class:: classref-enumeration-constant

:ref:`DebugDraw<enum_Viewport_DebugDraw>` **DEBUG_DRAW_SDFGI_PROBES** = ``17``



.. _class_Viewport_constant_DEBUG_DRAW_GI_BUFFER:

.. rst-class:: classref-enumeration-constant

:ref:`DebugDraw<enum_Viewport_DebugDraw>` **DEBUG_DRAW_GI_BUFFER** = ``18``



.. _class_Viewport_constant_DEBUG_DRAW_DISABLE_LOD:

.. rst-class:: classref-enumeration-constant

:ref:`DebugDraw<enum_Viewport_DebugDraw>` **DEBUG_DRAW_DISABLE_LOD** = ``19``



.. _class_Viewport_constant_DEBUG_DRAW_CLUSTER_OMNI_LIGHTS:

.. rst-class:: classref-enumeration-constant

:ref:`DebugDraw<enum_Viewport_DebugDraw>` **DEBUG_DRAW_CLUSTER_OMNI_LIGHTS** = ``20``



.. _class_Viewport_constant_DEBUG_DRAW_CLUSTER_SPOT_LIGHTS:

.. rst-class:: classref-enumeration-constant

:ref:`DebugDraw<enum_Viewport_DebugDraw>` **DEBUG_DRAW_CLUSTER_SPOT_LIGHTS** = ``21``



.. _class_Viewport_constant_DEBUG_DRAW_CLUSTER_DECALS:

.. rst-class:: classref-enumeration-constant

:ref:`DebugDraw<enum_Viewport_DebugDraw>` **DEBUG_DRAW_CLUSTER_DECALS** = ``22``



.. _class_Viewport_constant_DEBUG_DRAW_CLUSTER_REFLECTION_PROBES:

.. rst-class:: classref-enumeration-constant

:ref:`DebugDraw<enum_Viewport_DebugDraw>` **DEBUG_DRAW_CLUSTER_REFLECTION_PROBES** = ``23``



.. _class_Viewport_constant_DEBUG_DRAW_OCCLUDERS:

.. rst-class:: classref-enumeration-constant

:ref:`DebugDraw<enum_Viewport_DebugDraw>` **DEBUG_DRAW_OCCLUDERS** = ``24``



.. _class_Viewport_constant_DEBUG_DRAW_MOTION_VECTORS:

.. rst-class:: classref-enumeration-constant

:ref:`DebugDraw<enum_Viewport_DebugDraw>` **DEBUG_DRAW_MOTION_VECTORS** = ``25``



.. _class_Viewport_constant_DEBUG_DRAW_INTERNAL_BUFFER:

.. rst-class:: classref-enumeration-constant

:ref:`DebugDraw<enum_Viewport_DebugDraw>` **DEBUG_DRAW_INTERNAL_BUFFER** = ``26``

在应用后处理之前绘制场景的内部分辨率缓冲区。

.. rst-class:: classref-item-separator

----

.. _enum_Viewport_DefaultCanvasItemTextureFilter:

.. rst-class:: classref-enumeration

enum **DefaultCanvasItemTextureFilter**:

.. _class_Viewport_constant_DEFAULT_CANVAS_ITEM_TEXTURE_FILTER_NEAREST:

.. rst-class:: classref-enumeration-constant

:ref:`DefaultCanvasItemTextureFilter<enum_Viewport_DefaultCanvasItemTextureFilter>` **DEFAULT_CANVAS_ITEM_TEXTURE_FILTER_NEAREST** = ``0``

纹理过滤仅从最近的像素读取。这使得纹理从近距离看是像素化的，从远处看是颗粒状的（由于多级渐远纹理没有被采样）。

.. _class_Viewport_constant_DEFAULT_CANVAS_ITEM_TEXTURE_FILTER_LINEAR:

.. rst-class:: classref-enumeration-constant

:ref:`DefaultCanvasItemTextureFilter<enum_Viewport_DefaultCanvasItemTextureFilter>` **DEFAULT_CANVAS_ITEM_TEXTURE_FILTER_LINEAR** = ``1``

纹理过滤在最近的 4 个像素之间进行混合。这使得纹理从近处看起来很平滑，从远处看起来却有颗粒感（由于多级渐远纹理没有被采样）。

.. _class_Viewport_constant_DEFAULT_CANVAS_ITEM_TEXTURE_FILTER_LINEAR_WITH_MIPMAPS:

.. rst-class:: classref-enumeration-constant

:ref:`DefaultCanvasItemTextureFilter<enum_Viewport_DefaultCanvasItemTextureFilter>` **DEFAULT_CANVAS_ITEM_TEXTURE_FILTER_LINEAR_WITH_MIPMAPS** = ``2``

纹理过滤在最近的 4 个像素和最近的 2 个多级渐远纹理之间进行混合（或者如果 :ref:`ProjectSettings.rendering/textures/default_filters/use_nearest_mipmap_filter<class_ProjectSettings_property_rendering/textures/default_filters/use_nearest_mipmap_filter>` 为 ``true``\ ，则使用最近的多级渐远纹理）。这使得纹理从近处看起来平滑，从远处看起来也平滑。

将此用于可能以低缩放查看的非像素艺术纹理（例如，由于 :ref:`Camera2D<class_Camera2D>` 缩放或精灵缩放），因为多级渐远纹理对于平滑小于屏幕像素的像素很重要。

.. _class_Viewport_constant_DEFAULT_CANVAS_ITEM_TEXTURE_FILTER_NEAREST_WITH_MIPMAPS:

.. rst-class:: classref-enumeration-constant

:ref:`DefaultCanvasItemTextureFilter<enum_Viewport_DefaultCanvasItemTextureFilter>` **DEFAULT_CANVAS_ITEM_TEXTURE_FILTER_NEAREST_WITH_MIPMAPS** = ``3``

纹理过滤从最近的像素读取并在最近的 2 个多级渐远纹理之间进行混合（或者如果 :ref:`ProjectSettings.rendering/textures/default_filters/use_nearest_mipmap_filter<class_ProjectSettings_property_rendering/textures/default_filters/use_nearest_mipmap_filter>` 为 ``true``\ ，则使用最近的多级渐远纹理）。这使得纹理从近处看起来像素化，从远处看起来平滑。

将此用于可能以低缩放查看的非像素艺术纹理（例如，由于 :ref:`Camera2D<class_Camera2D>` 缩放或精灵缩放），因为多级渐远纹理对于平滑小于屏幕像素的像素很重要。

.. _class_Viewport_constant_DEFAULT_CANVAS_ITEM_TEXTURE_FILTER_MAX:

.. rst-class:: classref-enumeration-constant

:ref:`DefaultCanvasItemTextureFilter<enum_Viewport_DefaultCanvasItemTextureFilter>` **DEFAULT_CANVAS_ITEM_TEXTURE_FILTER_MAX** = ``4``

:ref:`DefaultCanvasItemTextureFilter<enum_Viewport_DefaultCanvasItemTextureFilter>` 枚举的最大值。

.. rst-class:: classref-item-separator

----

.. _enum_Viewport_DefaultCanvasItemTextureRepeat:

.. rst-class:: classref-enumeration

enum **DefaultCanvasItemTextureRepeat**:

.. _class_Viewport_constant_DEFAULT_CANVAS_ITEM_TEXTURE_REPEAT_DISABLED:

.. rst-class:: classref-enumeration-constant

:ref:`DefaultCanvasItemTextureRepeat<enum_Viewport_DefaultCanvasItemTextureRepeat>` **DEFAULT_CANVAS_ITEM_TEXTURE_REPEAT_DISABLED** = ``0``

禁用纹理重复。相反，当读取 0-1 范围之外的 UV 时，该值将被钳制在纹理的边缘，从而导致纹理的边界看起来被拉长。

.. _class_Viewport_constant_DEFAULT_CANVAS_ITEM_TEXTURE_REPEAT_ENABLED:

.. rst-class:: classref-enumeration-constant

:ref:`DefaultCanvasItemTextureRepeat<enum_Viewport_DefaultCanvasItemTextureRepeat>` **DEFAULT_CANVAS_ITEM_TEXTURE_REPEAT_ENABLED** = ``1``

当 UV 坐标超出 0-1 范围时，使纹理能够重复。如果使用其中一种线性过滤模式，则当采样器过滤纹理边缘时，这可能会导致纹理边缘出现伪影。

.. _class_Viewport_constant_DEFAULT_CANVAS_ITEM_TEXTURE_REPEAT_MIRROR:

.. rst-class:: classref-enumeration-constant

:ref:`DefaultCanvasItemTextureRepeat<enum_Viewport_DefaultCanvasItemTextureRepeat>` **DEFAULT_CANVAS_ITEM_TEXTURE_REPEAT_MIRROR** = ``2``

重复时翻转该纹理，使边缘对齐而不是突然改变。

.. _class_Viewport_constant_DEFAULT_CANVAS_ITEM_TEXTURE_REPEAT_MAX:

.. rst-class:: classref-enumeration-constant

:ref:`DefaultCanvasItemTextureRepeat<enum_Viewport_DefaultCanvasItemTextureRepeat>` **DEFAULT_CANVAS_ITEM_TEXTURE_REPEAT_MAX** = ``3``

:ref:`DefaultCanvasItemTextureRepeat<enum_Viewport_DefaultCanvasItemTextureRepeat>` 枚举的最大值。

.. rst-class:: classref-item-separator

----

.. _enum_Viewport_SDFOversize:

.. rst-class:: classref-enumeration

enum **SDFOversize**:

.. _class_Viewport_constant_SDF_OVERSIZE_100_PERCENT:

.. rst-class:: classref-enumeration-constant

:ref:`SDFOversize<enum_Viewport_SDFOversize>` **SDF_OVERSIZE_100_PERCENT** = ``0``



.. _class_Viewport_constant_SDF_OVERSIZE_120_PERCENT:

.. rst-class:: classref-enumeration-constant

:ref:`SDFOversize<enum_Viewport_SDFOversize>` **SDF_OVERSIZE_120_PERCENT** = ``1``



.. _class_Viewport_constant_SDF_OVERSIZE_150_PERCENT:

.. rst-class:: classref-enumeration-constant

:ref:`SDFOversize<enum_Viewport_SDFOversize>` **SDF_OVERSIZE_150_PERCENT** = ``2``



.. _class_Viewport_constant_SDF_OVERSIZE_200_PERCENT:

.. rst-class:: classref-enumeration-constant

:ref:`SDFOversize<enum_Viewport_SDFOversize>` **SDF_OVERSIZE_200_PERCENT** = ``3``



.. _class_Viewport_constant_SDF_OVERSIZE_MAX:

.. rst-class:: classref-enumeration-constant

:ref:`SDFOversize<enum_Viewport_SDFOversize>` **SDF_OVERSIZE_MAX** = ``4``



.. rst-class:: classref-item-separator

----

.. _enum_Viewport_SDFScale:

.. rst-class:: classref-enumeration

enum **SDFScale**:

.. _class_Viewport_constant_SDF_SCALE_100_PERCENT:

.. rst-class:: classref-enumeration-constant

:ref:`SDFScale<enum_Viewport_SDFScale>` **SDF_SCALE_100_PERCENT** = ``0``



.. _class_Viewport_constant_SDF_SCALE_50_PERCENT:

.. rst-class:: classref-enumeration-constant

:ref:`SDFScale<enum_Viewport_SDFScale>` **SDF_SCALE_50_PERCENT** = ``1``



.. _class_Viewport_constant_SDF_SCALE_25_PERCENT:

.. rst-class:: classref-enumeration-constant

:ref:`SDFScale<enum_Viewport_SDFScale>` **SDF_SCALE_25_PERCENT** = ``2``



.. _class_Viewport_constant_SDF_SCALE_MAX:

.. rst-class:: classref-enumeration-constant

:ref:`SDFScale<enum_Viewport_SDFScale>` **SDF_SCALE_MAX** = ``3``



.. rst-class:: classref-item-separator

----

.. _enum_Viewport_VRSMode:

.. rst-class:: classref-enumeration

enum **VRSMode**:

.. _class_Viewport_constant_VRS_DISABLED:

.. rst-class:: classref-enumeration-constant

:ref:`VRSMode<enum_Viewport_VRSMode>` **VRS_DISABLED** = ``0``

VRS 已禁用。

.. _class_Viewport_constant_VRS_TEXTURE:

.. rst-class:: classref-enumeration-constant

:ref:`VRSMode<enum_Viewport_VRSMode>` **VRS_TEXTURE** = ``1``

VRS 使用一个纹理。请注意，对于立体视觉，请为每个视图使用带有纹理的纹理图集。

.. _class_Viewport_constant_VRS_XR:

.. rst-class:: classref-enumeration-constant

:ref:`VRSMode<enum_Viewport_VRSMode>` **VRS_XR** = ``2``

VRS 纹理由主 :ref:`XRInterface<class_XRInterface>` 提供。

.. _class_Viewport_constant_VRS_MAX:

.. rst-class:: classref-enumeration-constant

:ref:`VRSMode<enum_Viewport_VRSMode>` **VRS_MAX** = ``3``

代表 :ref:`VRSMode<enum_Viewport_VRSMode>` 枚举的大小。

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

属性说明
--------

.. _class_Viewport_property_audio_listener_enable_2d:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **audio_listener_enable_2d** = ``false``

.. rst-class:: classref-property-setget

- void **set_as_audio_listener_2d** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **is_audio_listener_2d** **(** **)**

如果为 ``true``\ ，该视口将处理 2D 音频流。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_property_audio_listener_enable_3d:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **audio_listener_enable_3d** = ``false``

.. rst-class:: classref-property-setget

- void **set_as_audio_listener_3d** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **is_audio_listener_3d** **(** **)**

如果为 ``true``\ ，该视口将处理 3D 音频流。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_property_canvas_cull_mask:

.. rst-class:: classref-property

:ref:`int<class_int>` **canvas_cull_mask** = ``4294967295``

.. rst-class:: classref-property-setget

- void **set_canvas_cull_mask** **(** :ref:`int<class_int>` value **)**
- :ref:`int<class_int>` **get_canvas_cull_mask** **(** **)**

渲染层，该 **Viewport** 会渲染位于这些层中的 :ref:`CanvasItem<class_CanvasItem>` 节点。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_property_canvas_item_default_texture_filter:

.. rst-class:: classref-property

:ref:`DefaultCanvasItemTextureFilter<enum_Viewport_DefaultCanvasItemTextureFilter>` **canvas_item_default_texture_filter** = ``1``

.. rst-class:: classref-property-setget

- void **set_default_canvas_item_texture_filter** **(** :ref:`DefaultCanvasItemTextureFilter<enum_Viewport_DefaultCanvasItemTextureFilter>` value **)**
- :ref:`DefaultCanvasItemTextureFilter<enum_Viewport_DefaultCanvasItemTextureFilter>` **get_default_canvas_item_texture_filter** **(** **)**

设置该 Viewport 中 :ref:`CanvasItem<class_CanvasItem>` 所使用的默认过滤模式。选项见 :ref:`DefaultCanvasItemTextureFilter<enum_Viewport_DefaultCanvasItemTextureFilter>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_property_canvas_item_default_texture_repeat:

.. rst-class:: classref-property

:ref:`DefaultCanvasItemTextureRepeat<enum_Viewport_DefaultCanvasItemTextureRepeat>` **canvas_item_default_texture_repeat** = ``0``

.. rst-class:: classref-property-setget

- void **set_default_canvas_item_texture_repeat** **(** :ref:`DefaultCanvasItemTextureRepeat<enum_Viewport_DefaultCanvasItemTextureRepeat>` value **)**
- :ref:`DefaultCanvasItemTextureRepeat<enum_Viewport_DefaultCanvasItemTextureRepeat>` **get_default_canvas_item_texture_repeat** **(** **)**

设置该 Viewport 中 :ref:`CanvasItem<class_CanvasItem>` 所使用的默认重复模式。选项见 :ref:`DefaultCanvasItemTextureRepeat<enum_Viewport_DefaultCanvasItemTextureRepeat>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_property_canvas_transform:

.. rst-class:: classref-property

:ref:`Transform2D<class_Transform2D>` **canvas_transform**

.. rst-class:: classref-property-setget

- void **set_canvas_transform** **(** :ref:`Transform2D<class_Transform2D>` value **)**
- :ref:`Transform2D<class_Transform2D>` **get_canvas_transform** **(** **)**

该视口的画布变换，对改变所有子 :ref:`CanvasItem<class_CanvasItem>` 的屏幕位置很有用。相对于该视口的全局画布变换。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_property_debug_draw:

.. rst-class:: classref-property

:ref:`DebugDraw<enum_Viewport_DebugDraw>` **debug_draw** = ``0``

.. rst-class:: classref-property-setget

- void **set_debug_draw** **(** :ref:`DebugDraw<enum_Viewport_DebugDraw>` value **)**
- :ref:`DebugDraw<enum_Viewport_DebugDraw>` **get_debug_draw** **(** **)**

在调试时，用于测试渲染的几何图形的叠加模式。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_property_disable_3d:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **disable_3d** = ``false``

.. rst-class:: classref-property-setget

- void **set_disable_3d** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **is_3d_disabled** **(** **)**

禁用 3D 渲染（但保留 2D 渲染）。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_property_fsr_sharpness:

.. rst-class:: classref-property

:ref:`float<class_float>` **fsr_sharpness** = ``0.2``

.. rst-class:: classref-property-setget

- void **set_fsr_sharpness** **(** :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_fsr_sharpness** **(** **)**

确定使用 FSR 放大模式时，放大后的图像的锐度。每个整数的锐度减半。值从 0.0（最锐利）到 2.0。高于 2.0 的值不会产生明显的差异。

要在根视口上控制此属性，请设置 :ref:`ProjectSettings.rendering/scaling_3d/fsr_sharpness<class_ProjectSettings_property_rendering/scaling_3d/fsr_sharpness>` 项目设置。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_property_global_canvas_transform:

.. rst-class:: classref-property

:ref:`Transform2D<class_Transform2D>` **global_canvas_transform**

.. rst-class:: classref-property-setget

- void **set_global_canvas_transform** **(** :ref:`Transform2D<class_Transform2D>` value **)**
- :ref:`Transform2D<class_Transform2D>` **get_global_canvas_transform** **(** **)**

该视口的全局画布变换。画布变换是相对于这个的。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_property_gui_disable_input:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **gui_disable_input** = ``false``

.. rst-class:: classref-property-setget

- void **set_disable_input** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **is_input_disabled** **(** **)**

如果为 ``true``\ ，该视口将不接收输入事件。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_property_gui_embed_subwindows:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **gui_embed_subwindows** = ``false``

.. rst-class:: classref-property-setget

- void **set_embedding_subwindows** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **is_embedding_subwindows** **(** **)**

如果为 ``true``\ ，子窗口（弹出窗口和对话框）将和控件等节点一样嵌入到应用程序窗口中。如果为 ``false``\ ，它们将显示为操作系统处理的独立窗口。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_property_gui_snap_controls_to_pixels:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **gui_snap_controls_to_pixels** = ``true``

.. rst-class:: classref-property-setget

- void **set_snap_controls_to_pixels** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **is_snap_controls_to_pixels_enabled** **(** **)**

如果为 ``true``\ ，该视口上的 GUI 控件将完美地放置像素。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_property_handle_input_locally:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **handle_input_locally** = ``true``

.. rst-class:: classref-property-setget

- void **set_handle_input_locally** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **is_handling_input_locally** **(** **)**

如果为 ``true``\ ，则这个视口会把收到的输入事件标记为已被自身处理。如果为 ``false``\ ，则由第一个设置本地处理输入的父级视口进行这样的操作。

\ :ref:`SubViewportContainer<class_SubViewportContainer>` 会自动将其包含的 **Viewport** 的这个属性设置为 ``false``\ 。

另见 :ref:`set_input_as_handled<class_Viewport_method_set_input_as_handled>` 和 :ref:`is_input_handled<class_Viewport_method_is_input_handled>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_property_mesh_lod_threshold:

.. rst-class:: classref-property

:ref:`float<class_float>` **mesh_lod_threshold** = ``1.0``

.. rst-class:: classref-property-setget

- void **set_mesh_lod_threshold** **(** :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_mesh_lod_threshold** **(** **)**

用于在 **Viewport** 中渲染的网格的自动 LOD 偏置（类似于 :ref:`ReflectionProbe.mesh_lod_threshold<class_ReflectionProbe_property_mesh_lod_threshold>`\ ）。较高的值将使用生成了 LOD 变化的网格的较不详细版本。如果被设置为 ``0.0``\ ，则自动 LOD 将被禁用。增加 :ref:`mesh_lod_threshold<class_Viewport_property_mesh_lod_threshold>`\ ，以牺牲几何细节为代价提高性能。

要在根视口上控制该属性，请设置 :ref:`ProjectSettings.rendering/mesh_lod/lod_change/threshold_pixels<class_ProjectSettings_property_rendering/mesh_lod/lod_change/threshold_pixels>` 项目设置。

\ **注意：**\ :ref:`mesh_lod_threshold<class_Viewport_property_mesh_lod_threshold>` 不影响 :ref:`GeometryInstance3D<class_GeometryInstance3D>` 可见性范围（也称为“手动”LOD 或分层 LOD）。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_property_msaa_2d:

.. rst-class:: classref-property

:ref:`MSAA<enum_Viewport_MSAA>` **msaa_2d** = ``0``

.. rst-class:: classref-property-setget

- void **set_msaa_2d** **(** :ref:`MSAA<enum_Viewport_MSAA>` value **)**
- :ref:`MSAA<enum_Viewport_MSAA>` **get_msaa_2d** **(** **)**

2D/画布渲染的多重采样抗锯齿模式。数字越高，得到的边缘越平滑，代价是性能也会显著降低。设为 2 或 4 为佳，除非目标是非常高端的系统。对由着色器或纹理导致的锯齿无效。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_property_msaa_3d:

.. rst-class:: classref-property

:ref:`MSAA<enum_Viewport_MSAA>` **msaa_3d** = ``0``

.. rst-class:: classref-property-setget

- void **set_msaa_3d** **(** :ref:`MSAA<enum_Viewport_MSAA>` value **)**
- :ref:`MSAA<enum_Viewport_MSAA>` **get_msaa_3d** **(** **)**

3D 渲染的多重采样抗锯齿模式。数字越高，得到的边缘越平滑，代价是性能也会显著降低。设为 2 或 4 为佳，除非目标是非常高端的系统。另请参阅 3D 的双线性缩放 :ref:`scaling_3d_mode<class_Viewport_property_scaling_3d_mode>` 实现超采样，能够提供更高的质量，但消耗也更高。对由着色器或纹理导致的锯齿无效。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_property_own_world_3d:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **own_world_3d** = ``false``

.. rst-class:: classref-property-setget

- void **set_use_own_world_3d** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **is_using_own_world_3d** **(** **)**

如果为 ``true``\ ，则该视口会使用 :ref:`world_3d<class_Viewport_property_world_3d>` 中定义的 :ref:`World3D<class_World3D>` 的唯一副本。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_property_physics_object_picking:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **physics_object_picking** = ``false``

.. rst-class:: classref-property-setget

- void **set_physics_object_picking** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **get_physics_object_picking** **(** **)**

如果为 ``true``\ ，则视口中渲染的对象会成为鼠标拾取过程中的候选。

\ **注意：**\ 同时能够被拾取的对象最多只有 64 个，选择的顺序是不确定的，每次拾取可能都不相同。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_property_physics_object_picking_sort:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **physics_object_picking_sort** = ``false``

.. rst-class:: classref-property-setget

- void **set_physics_object_picking_sort** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **get_physics_object_picking_sort** **(** **)**

如果为 ``true``\ ，则对象会按照固定的顺序接收鼠标拾取事件，首先会按各自的 :ref:`CanvasItem.z_index<class_CanvasItem_property_z_index>` 排序，然后按它们在场景树中的位置排序。如果为 ``false``\ ，则顺序不确定。

\ **注意：**\ 默认情况下禁用此设置，因为它可能会产生昂贵的计算成本。

\ **注意：**\ 排序发生在选择可拾取对象之后。因为同时能够被拾取的对象最多只有 64 个，所以无法保证 :ref:`CanvasItem.z_index<class_CanvasItem_property_z_index>` 最大的对象能够接收到拾取事件。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_property_positional_shadow_atlas_16_bits:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **positional_shadow_atlas_16_bits** = ``true``

.. rst-class:: classref-property-setget

- void **set_positional_shadow_atlas_16_bits** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **get_positional_shadow_atlas_16_bits** **(** **)**

使用 16 位的全向灯/聚光灯阴影深度贴图。启用后，阴影的精度会降低，可能造成阴影失真，但能够在部分设备上提升性能。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_property_positional_shadow_atlas_quad_0:

.. rst-class:: classref-property

:ref:`PositionalShadowAtlasQuadrantSubdiv<enum_Viewport_PositionalShadowAtlasQuadrantSubdiv>` **positional_shadow_atlas_quad_0** = ``2``

.. rst-class:: classref-property-setget

- void **set_positional_shadow_atlas_quadrant_subdiv** **(** :ref:`int<class_int>` quadrant, :ref:`PositionalShadowAtlasQuadrantSubdiv<enum_Viewport_PositionalShadowAtlasQuadrantSubdiv>` subdiv **)**
- :ref:`PositionalShadowAtlasQuadrantSubdiv<enum_Viewport_PositionalShadowAtlasQuadrantSubdiv>` **get_positional_shadow_atlas_quadrant_subdiv** **(** :ref:`int<class_int>` quadrant **)** |const|

阴影图集上第一象限的细分量。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_property_positional_shadow_atlas_quad_1:

.. rst-class:: classref-property

:ref:`PositionalShadowAtlasQuadrantSubdiv<enum_Viewport_PositionalShadowAtlasQuadrantSubdiv>` **positional_shadow_atlas_quad_1** = ``2``

.. rst-class:: classref-property-setget

- void **set_positional_shadow_atlas_quadrant_subdiv** **(** :ref:`int<class_int>` quadrant, :ref:`PositionalShadowAtlasQuadrantSubdiv<enum_Viewport_PositionalShadowAtlasQuadrantSubdiv>` subdiv **)**
- :ref:`PositionalShadowAtlasQuadrantSubdiv<enum_Viewport_PositionalShadowAtlasQuadrantSubdiv>` **get_positional_shadow_atlas_quadrant_subdiv** **(** :ref:`int<class_int>` quadrant **)** |const|

阴影图集上第二象限的细分量。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_property_positional_shadow_atlas_quad_2:

.. rst-class:: classref-property

:ref:`PositionalShadowAtlasQuadrantSubdiv<enum_Viewport_PositionalShadowAtlasQuadrantSubdiv>` **positional_shadow_atlas_quad_2** = ``3``

.. rst-class:: classref-property-setget

- void **set_positional_shadow_atlas_quadrant_subdiv** **(** :ref:`int<class_int>` quadrant, :ref:`PositionalShadowAtlasQuadrantSubdiv<enum_Viewport_PositionalShadowAtlasQuadrantSubdiv>` subdiv **)**
- :ref:`PositionalShadowAtlasQuadrantSubdiv<enum_Viewport_PositionalShadowAtlasQuadrantSubdiv>` **get_positional_shadow_atlas_quadrant_subdiv** **(** :ref:`int<class_int>` quadrant **)** |const|

阴影图集上第三象限的细分量。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_property_positional_shadow_atlas_quad_3:

.. rst-class:: classref-property

:ref:`PositionalShadowAtlasQuadrantSubdiv<enum_Viewport_PositionalShadowAtlasQuadrantSubdiv>` **positional_shadow_atlas_quad_3** = ``4``

.. rst-class:: classref-property-setget

- void **set_positional_shadow_atlas_quadrant_subdiv** **(** :ref:`int<class_int>` quadrant, :ref:`PositionalShadowAtlasQuadrantSubdiv<enum_Viewport_PositionalShadowAtlasQuadrantSubdiv>` subdiv **)**
- :ref:`PositionalShadowAtlasQuadrantSubdiv<enum_Viewport_PositionalShadowAtlasQuadrantSubdiv>` **get_positional_shadow_atlas_quadrant_subdiv** **(** :ref:`int<class_int>` quadrant **)** |const|

阴影图集上第四象限的细分量。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_property_positional_shadow_atlas_size:

.. rst-class:: classref-property

:ref:`int<class_int>` **positional_shadow_atlas_size** = ``2048``

.. rst-class:: classref-property-setget

- void **set_positional_shadow_atlas_size** **(** :ref:`int<class_int>` value **)**
- :ref:`int<class_int>` **get_positional_shadow_atlas_size** **(** **)**

阴影图集的分辨率（用于全向灯和聚光灯）。该值将向上舍入到最接近的 2 次幂。

\ **注意：**\ 如果设置为 ``0``\ ，将根本看不到任何阴影（包括定向阴影）。可以通过降低 CPU 和 GPU 负载来显著提升在低端系统上的性能（因为绘制不带阴影的场景需要的绘制调用更少）。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_property_scaling_3d_mode:

.. rst-class:: classref-property

:ref:`Scaling3DMode<enum_Viewport_Scaling3DMode>` **scaling_3d_mode** = ``0``

.. rst-class:: classref-property-setget

- void **set_scaling_3d_mode** **(** :ref:`Scaling3DMode<enum_Viewport_Scaling3DMode>` value **)**
- :ref:`Scaling3DMode<enum_Viewport_Scaling3DMode>` **get_scaling_3d_mode** **(** **)**

设置缩放 3D 模式。双线性缩放会以不同的分辨率进行渲染，对视口进行欠采样或超采样。FidelityFX Super Resolution 1.0，缩写为 FSR，是一种放大技术，通过使用一种空间感知放大算法，以快速帧速率生成高质量图像。FSR 比双线性的性能消耗略高一些，但产生的图像质量却高得多。应尽可能使用 FSR。

要在根视口上控制这个属性，请使用项目设置 :ref:`ProjectSettings.rendering/scaling_3d/mode<class_ProjectSettings_property_rendering/scaling_3d/mode>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_property_scaling_3d_scale:

.. rst-class:: classref-property

:ref:`float<class_float>` **scaling_3d_scale** = ``1.0``

.. rst-class:: classref-property-setget

- void **set_scaling_3d_scale** **(** :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_scaling_3d_scale** **(** **)**

根据视口大小缩放 3D 渲染缓冲区，使用 :ref:`ProjectSettings.rendering/scaling_3d/mode<class_ProjectSettings_property_rendering/scaling_3d/mode>` 中指定的图像过滤器将输出图像缩放到完整的视口大小。比 ``1.0`` 小的值可以牺牲质量加速 3D 渲染（欠采样）。比 ``1.0`` 大的值仅在双线性模式下可用，可以提升 3D 渲染质量，但性能消耗较高（超采样）。另见多重采样抗锯齿 :ref:`ProjectSettings.rendering/anti_aliasing/quality/msaa_3d<class_ProjectSettings_property_rendering/anti_aliasing/quality/msaa_3d>`\ ，性能消耗明显更低，但只会对多边形的边缘进行平滑。

使用 FSR 放大时，AMD 推荐将以下值作为预设选项暴露给用户“极致质量：0.77”“质量：0.67”“平衡：0.59”“性能：0.5”，不暴露特定的缩放值。

要在根视口上控制这个属性，请使用项目设置 :ref:`ProjectSettings.rendering/scaling_3d/scale<class_ProjectSettings_property_rendering/scaling_3d/scale>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_property_screen_space_aa:

.. rst-class:: classref-property

:ref:`ScreenSpaceAA<enum_Viewport_ScreenSpaceAA>` **screen_space_aa** = ``0``

.. rst-class:: classref-property-setget

- void **set_screen_space_aa** **(** :ref:`ScreenSpaceAA<enum_Viewport_ScreenSpaceAA>` value **)**
- :ref:`ScreenSpaceAA<enum_Viewport_ScreenSpaceAA>` **get_screen_space_aa** **(** **)**

设置使用的屏幕空间抗锯齿方法。屏幕空间抗锯齿的原理是在后期处理着色器中选择性地模糊边缘。它与 MSAA 不同，后者在渲染对象时采用多个覆盖样本。屏幕空间抗锯齿方法通常比 MSAA 更快，并且会平滑高光锯齿，但往往会使场景显得模糊。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_property_sdf_oversize:

.. rst-class:: classref-property

:ref:`SDFOversize<enum_Viewport_SDFOversize>` **sdf_oversize** = ``1``

.. rst-class:: classref-property-setget

- void **set_sdf_oversize** **(** :ref:`SDFOversize<enum_Viewport_SDFOversize>` value **)**
- :ref:`SDFOversize<enum_Viewport_SDFOversize>` **get_sdf_oversize** **(** **)**

.. container:: contribute

	目前没有这个属性的描述。请帮我们\ :ref:`贡献一个 <doc_updating_the_class_reference>`\ ！

.. rst-class:: classref-item-separator

----

.. _class_Viewport_property_sdf_scale:

.. rst-class:: classref-property

:ref:`SDFScale<enum_Viewport_SDFScale>` **sdf_scale** = ``1``

.. rst-class:: classref-property-setget

- void **set_sdf_scale** **(** :ref:`SDFScale<enum_Viewport_SDFScale>` value **)**
- :ref:`SDFScale<enum_Viewport_SDFScale>` **get_sdf_scale** **(** **)**

.. container:: contribute

	目前没有这个属性的描述。请帮我们\ :ref:`贡献一个 <doc_updating_the_class_reference>`\ ！

.. rst-class:: classref-item-separator

----

.. _class_Viewport_property_snap_2d_transforms_to_pixel:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **snap_2d_transforms_to_pixel** = ``false``

.. rst-class:: classref-property-setget

- void **set_snap_2d_transforms_to_pixel** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **is_snap_2d_transforms_to_pixel_enabled** **(** **)**

.. container:: contribute

	目前没有这个属性的描述。请帮我们\ :ref:`贡献一个 <doc_updating_the_class_reference>`\ ！

.. rst-class:: classref-item-separator

----

.. _class_Viewport_property_snap_2d_vertices_to_pixel:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **snap_2d_vertices_to_pixel** = ``false``

.. rst-class:: classref-property-setget

- void **set_snap_2d_vertices_to_pixel** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **is_snap_2d_vertices_to_pixel_enabled** **(** **)**

.. container:: contribute

	目前没有这个属性的描述。请帮我们\ :ref:`贡献一个 <doc_updating_the_class_reference>`\ ！

.. rst-class:: classref-item-separator

----

.. _class_Viewport_property_texture_mipmap_bias:

.. rst-class:: classref-property

:ref:`float<class_float>` **texture_mipmap_bias** = ``0.0``

.. rst-class:: classref-property-setget

- void **set_texture_mipmap_bias** **(** :ref:`float<class_float>` value **)**
- :ref:`float<class_float>` **get_texture_mipmap_bias** **(** **)**

通过从更低或更高的 mipmap 中读取数据影响最终纹理的锐度（也叫“纹理 LOD 偏置”）。负值会让 mipmap 纹理更锐利，但从较远处观察时颗粒更明显，而正值会让 mipmap 纹理更模糊（即便凑近看也一样）。

启用时间抗锯齿（\ :ref:`use_taa<class_Viewport_property_use_taa>`\ ）会对这个值应用 ``-0.5`` 的偏移量，而启用 FXAA（\ :ref:`screen_space_aa<class_Viewport_property_screen_space_aa>`\ ）则会对这个值应用 ``-0.25`` 的偏移量。如果同时启用 TAA 和 FXAA，则会对这个值应用 ``-0.75`` 的偏移量。

\ **注意：**\ 如果 :ref:`scaling_3d_scale<class_Viewport_property_scaling_3d_scale>` 比 ``1.0`` 小（包含），则会使用 :ref:`texture_mipmap_bias<class_Viewport_property_texture_mipmap_bias>` 自动调整 mipmap 偏置，内部会根据缩放系数进行计算。公式为 ``log2(scaling_3d_scale) + mipmap_bias``\ 。

要在根视口上控制这个属性，请使用项目设置 :ref:`ProjectSettings.rendering/textures/default_filters/texture_mipmap_bias<class_ProjectSettings_property_rendering/textures/default_filters/texture_mipmap_bias>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_property_transparent_bg:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **transparent_bg** = ``false``

.. rst-class:: classref-property-setget

- void **set_transparent_background** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **has_transparent_background** **(** **)**

如果为 ``true``\ ，该视口应使其背景渲染为透明。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_property_use_debanding:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **use_debanding** = ``false``

.. rst-class:: classref-property-setget

- void **set_use_debanding** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **is_using_debanding** **(** **)**

如果为 ``true``\ ，则使用一个快速的后期处理滤镜，使 3D 的带状现象明显减少。除非 :ref:`Environment.background_mode<class_Environment_property_background_mode>` 为 :ref:`Environment.BG_CANVAS<class_Environment_constant_BG_CANVAS>`\ ，否则 2D 渲染\ *不会*\ 受到去条带的影响。另见 :ref:`ProjectSettings.rendering/anti_aliasing/quality/use_debanding<class_ProjectSettings_property_rendering/anti_aliasing/quality/use_debanding>`\ 。

在某些情况下，去条带可能会引入稍微明显的抖动图案。建议仅在实际需要时才启用去条带，因为抖动图案会使无损压缩的屏幕截图变大。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_property_use_hdr_2d:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **use_hdr_2d** = ``false``

.. rst-class:: classref-property-setget

- void **set_use_hdr_2d** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **is_using_hdr_2d** **(** **)**

如果为 ``true``\ ，则 2D 渲染会使用高动态范围格式的帧缓冲，与 3D 帧缓冲的位深度一致。使用 Forward+ 渲染器时为 ``RGBA16`` 帧缓冲，而使用 Mobile 渲染器时为 ``RGB10_A2`` 帧缓冲。另外，2D 渲染是发生在线性色彩空间的，会在传输至屏幕前转换至 sRGB 空间（如果 Viewport 与屏幕进行了关联）。这意味着在实际情况下，Viewport 的最终效果不会被限制在 ``0-1`` 的范围内，无需色彩空间调整就能够用于 3D 渲染。这样 2D 渲染就能够利用到需要高动态范围的效果（例如 2D 辉光），并且能够大幅提升需要大量细节内容的效果。

\ **注意：**\ 使用 GL Compatibility 渲染器时无效，因为 GL Compatibility 渲染器出于性能的原因始终使用低动态范围。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_property_use_occlusion_culling:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **use_occlusion_culling** = ``false``

.. rst-class:: classref-property-setget

- void **set_use_occlusion_culling** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **is_using_occlusion_culling** **(** **)**

如果为 ``true``\ ，\ :ref:`OccluderInstance3D<class_OccluderInstance3D>` 节点将被用于该视口中的 3D 遮挡剔除。对于根视口，\ :ref:`ProjectSettings.rendering/occlusion_culling/use_occlusion_culling<class_ProjectSettings_property_rendering/occlusion_culling/use_occlusion_culling>` 必须改为被设置为 ``true``\ 。

\ **注意：**\ 启用遮挡剔除会消耗一定的 CPU。仅当确实打算使用遮挡剔除时才启用它，并考虑场景是否真的可以从遮挡剔除中受益。具有很少或没有对象阻挡视图的大型开放场景，通常不会从遮挡剔除中受益更多。与遮挡剔除相比，大型开放场景通常从网格 LOD 和可见性范围（\ :ref:`GeometryInstance3D.visibility_range_begin<class_GeometryInstance3D_property_visibility_range_begin>` 和 :ref:`GeometryInstance3D.visibility_range_end<class_GeometryInstance3D_property_visibility_range_end>`\ ）中受益更多。

\ **注意：**\ 由于内存限制，Web 导出模板中默认不支持遮挡剔除。编译自定义 Web 导出模板时使用 ``module_raycast_enabled=yes`` 可以启用。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_property_use_taa:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **use_taa** = ``false``

.. rst-class:: classref-property-setget

- void **set_use_taa** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **is_using_taa** **(** **)**

为该视口启用时间抗锯齿。TAA 通过抖动相机并累积最后渲染帧的图像来工作，运动向量渲染被用于解释相机和对象的运动。

\ **注意：**\ 实现尚未完成，一些可视实例，如粒子和蒙皮网格可能会出现伪影。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_property_use_xr:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **use_xr** = ``false``

.. rst-class:: classref-property-setget

- void **set_use_xr** **(** :ref:`bool<class_bool>` value **)**
- :ref:`bool<class_bool>` **is_using_xr** **(** **)**

如果为 ``true``\ ，则视口将使用主 XR 接口来渲染 XR 输出。如果适用，这可以得到立体图像，渲染结果会输出到头戴设备。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_property_vrs_mode:

.. rst-class:: classref-property

:ref:`VRSMode<enum_Viewport_VRSMode>` **vrs_mode** = ``0``

.. rst-class:: classref-property-setget

- void **set_vrs_mode** **(** :ref:`VRSMode<enum_Viewport_VRSMode>` value **)**
- :ref:`VRSMode<enum_Viewport_VRSMode>` **get_vrs_mode** **(** **)**

用于这个视口的可变速率着色（Variable Rate Shading，VRS）模式。请注意，如果硬件不支持 VRS，则会忽略此属性。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_property_vrs_texture:

.. rst-class:: classref-property

:ref:`Texture2D<class_Texture2D>` **vrs_texture**

.. rst-class:: classref-property-setget

- void **set_vrs_texture** **(** :ref:`Texture2D<class_Texture2D>` value **)**
- :ref:`Texture2D<class_Texture2D>` **get_vrs_texture** **(** **)**

:ref:`vrs_mode<class_Viewport_property_vrs_mode>` 为 :ref:`VRS_TEXTURE<class_Viewport_constant_VRS_TEXTURE>` 时使用的纹理。

该纹理\ *必须*\ 使用无损压缩格式，以便可以精确匹配颜色。以下 VRS 密度会映射为各种颜色，较亮的颜色代表较低的着色精度。

::

    - 1x1 = rgb(0, 0, 0) - #000000
    - 1x2 = rgb(0, 85, 0) - #005500
    - 2x1 = rgb(85, 0, 0) - #550000
    - 2x2 = rgb(85, 85, 0) - #555500
    - 2x4 = rgb(85, 170, 0) - #55aa00
    - 4x2 = rgb(170, 85, 0) - #aa5500
    - 4x4 = rgb(170, 170, 0) - #aaaa00
    - 4x8 = rgb(170, 255, 0) - #aaff00 - 大多数硬件不支持
    - 8x4 = rgb(255, 170, 0) - #ffaa00 - 大多数硬件不支持
    - 8x8 = rgb(255, 255, 0) - #ffff00 - 大多数硬件不支持

.. rst-class:: classref-item-separator

----

.. _class_Viewport_property_world_2d:

.. rst-class:: classref-property

:ref:`World2D<class_World2D>` **world_2d**

.. rst-class:: classref-property-setget

- void **set_world_2d** **(** :ref:`World2D<class_World2D>` value **)**
- :ref:`World2D<class_World2D>` **get_world_2d** **(** **)**

自定义的 :ref:`World2D<class_World2D>`\ ，可以作为 2D 环境源。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_property_world_3d:

.. rst-class:: classref-property

:ref:`World3D<class_World3D>` **world_3d**

.. rst-class:: classref-property-setget

- void **set_world_3d** **(** :ref:`World3D<class_World3D>` value **)**
- :ref:`World3D<class_World3D>` **get_world_3d** **(** **)**

自定义的 :ref:`World3D<class_World3D>`\ ，可以作为 3D 环境源。

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

方法说明
--------

.. _class_Viewport_method_find_world_2d:

.. rst-class:: classref-method

:ref:`World2D<class_World2D>` **find_world_2d** **(** **)** |const|

返回该视口的首个有效 :ref:`World2D<class_World2D>`\ ，在它自身及任何 Viewport 祖先节点的 :ref:`world_2d<class_Viewport_property_world_2d>` 属性中查找。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_method_find_world_3d:

.. rst-class:: classref-method

:ref:`World3D<class_World3D>` **find_world_3d** **(** **)** |const|

返回这个视口的第一个有效 :ref:`World3D<class_World3D>`\ ，会在自身和 Viewport 祖先的 :ref:`world_3d<class_Viewport_property_world_3d>` 属性中搜索。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_method_get_camera_2d:

.. rst-class:: classref-method

:ref:`Camera2D<class_Camera2D>` **get_camera_2d** **(** **)** |const|

返回当前活动的 2D 相机。如果没有活动的相机，则返回 null。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_method_get_camera_3d:

.. rst-class:: classref-method

:ref:`Camera3D<class_Camera3D>` **get_camera_3d** **(** **)** |const|

返回当前活动的 3D 相机。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_method_get_canvas_cull_mask_bit:

.. rst-class:: classref-method

:ref:`bool<class_bool>` **get_canvas_cull_mask_bit** **(** :ref:`int<class_int>` layer **)** |const|

返回渲染层遮罩上的某个比特位。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_method_get_embedded_subwindows:

.. rst-class:: classref-method

:ref:`Window[]<class_Window>` **get_embedded_subwindows** **(** **)** |const|

返回该视口内可见的嵌入 :ref:`Window<class_Window>` 的列表。

\ **注意：**\ 其他视口内的 :ref:`Window<class_Window>` 不会被列出。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_method_get_final_transform:

.. rst-class:: classref-method

:ref:`Transform2D<class_Transform2D>` **get_final_transform** **(** **)** |const|

返回从该视口的坐标系到嵌入器坐标系统的变换。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_method_get_mouse_position:

.. rst-class:: classref-method

:ref:`Vector2<class_Vector2>` **get_mouse_position** **(** **)** |const|

返回该 **Viewport** 中鼠标的位置，使用该 **Viewport** 的坐标系。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_method_get_positional_shadow_atlas_quadrant_subdiv:

.. rst-class:: classref-method

:ref:`PositionalShadowAtlasQuadrantSubdiv<enum_Viewport_PositionalShadowAtlasQuadrantSubdiv>` **get_positional_shadow_atlas_quadrant_subdiv** **(** :ref:`int<class_int>` quadrant **)** |const|

返回指定象限的 :ref:`PositionalShadowAtlasQuadrantSubdiv<enum_Viewport_PositionalShadowAtlasQuadrantSubdiv>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_method_get_render_info:

.. rst-class:: classref-method

:ref:`int<class_int>` **get_render_info** **(** :ref:`RenderInfoType<enum_Viewport_RenderInfoType>` type, :ref:`RenderInfo<enum_Viewport_RenderInfo>` info **)**

返回给定类型的渲染统计。选项见 :ref:`RenderInfoType<enum_Viewport_RenderInfoType>` 和 :ref:`RenderInfo<enum_Viewport_RenderInfo>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_method_get_screen_transform:

.. rst-class:: classref-method

:ref:`Transform2D<class_Transform2D>` **get_screen_transform** **(** **)** |const|

返回从视口的坐标到包含窗口管理器窗口的屏幕坐标的变换。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_method_get_texture:

.. rst-class:: classref-method

:ref:`ViewportTexture<class_ViewportTexture>` **get_texture** **(** **)** |const|

返回该视口的纹理

\ **注意：**\ 保存当前纹理时（例如保存到文件中），如果时机过早则可能是全黑或过时的图片，尤其是在 :ref:`Node._ready<class_Node_private_method__ready>` 等函数中使用时。要确保获得正确的纹理，你可以等待 :ref:`RenderingServer.frame_post_draw<class_RenderingServer_signal_frame_post_draw>` 信号。

::

    func _ready():
        await RenderingServer.frame_post_draw
        $Viewport.get_texture().get_image().save_png("user://Screenshot.png")

.. rst-class:: classref-item-separator

----

.. _class_Viewport_method_get_viewport_rid:

.. rst-class:: classref-method

:ref:`RID<class_RID>` **get_viewport_rid** **(** **)** |const|

返回该视口在 :ref:`RenderingServer<class_RenderingServer>` 的 RID。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_method_get_visible_rect:

.. rst-class:: classref-method

:ref:`Rect2<class_Rect2>` **get_visible_rect** **(** **)** |const|

返回全局屏幕坐标中的可见矩形。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_method_gui_get_drag_data:

.. rst-class:: classref-method

:ref:`Variant<class_Variant>` **gui_get_drag_data** **(** **)** |const|

返回 GUI 的拖动数据，该数据先前由 :ref:`Control._get_drag_data<class_Control_private_method__get_drag_data>` 返回。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_method_gui_get_focus_owner:

.. rst-class:: classref-method

:ref:`Control<class_Control>` **gui_get_focus_owner** **(** **)** |const|

返回这个视口中聚焦的 :ref:`Control<class_Control>`\ 。如果没有聚焦任何 :ref:`Control<class_Control>` 则返回 null。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_method_gui_is_drag_successful:

.. rst-class:: classref-method

:ref:`bool<class_bool>` **gui_is_drag_successful** **(** **)** |const|

如果拖拽操作成功，则返回 ``true``\ 。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_method_gui_is_dragging:

.. rst-class:: classref-method

:ref:`bool<class_bool>` **gui_is_dragging** **(** **)** |const|

如果该视口目前正在执行拖拽操作，则返回 ``true``\ 。

如果你更倾向于对其进行轮询，那么就可以作为 :ref:`Node.NOTIFICATION_DRAG_BEGIN<class_Node_constant_NOTIFICATION_DRAG_BEGIN>` 和 :ref:`Node.NOTIFICATION_DRAG_END<class_Node_constant_NOTIFICATION_DRAG_END>` 的替代品。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_method_gui_release_focus:

.. rst-class:: classref-method

void **gui_release_focus** **(** **)**

移除这个视口中当前聚焦 :ref:`Control<class_Control>` 的焦点。如果没有聚焦任何 :ref:`Control<class_Control>`\ ，则什么都不做。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_method_is_input_handled:

.. rst-class:: classref-method

:ref:`bool<class_bool>` **is_input_handled** **(** **)** |const|

返回当前的 :ref:`InputEvent<class_InputEvent>` 是否已被处理。在 :ref:`InputEvent<class_InputEvent>` 生命周期中调用 :ref:`set_input_as_handled<class_Viewport_method_set_input_as_handled>` 前，输入事件都处于未处理状态。

通常作为 :ref:`Node._input<class_Node_private_method__input>`\ 、\ :ref:`Control._gui_input<class_Control_private_method__gui_input>` 等输入处理方法以及对应的信号处理函数的一部分来实现。

如果 :ref:`handle_input_locally<class_Viewport_property_handle_input_locally>` 为 ``false``\ ，则这个方法会尝试查找第一个本地处理输入的父级视口，并返回该视口的 :ref:`is_input_handled<class_Viewport_method_is_input_handled>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_method_push_input:

.. rst-class:: classref-method

void **push_input** **(** :ref:`InputEvent<class_InputEvent>` event, :ref:`bool<class_bool>` in_local_coords=false **)**

在该 **Viewport** 中触发给定的 ``event`` 事件。可用于在不同视口之间传递 :ref:`InputEvent<class_InputEvent>`\ ，或者在本地应用通过网络传输或保存在文件中的事件。

如果 ``in_local_coords`` 为 ``false``\ ，则该事件中的位置使用的是嵌入器坐标系，会被转换至视口坐标系。如果 ``in_local_coords`` 为 ``true``\ ，则该事件的位置使用的是视口坐标系。

虽然这个方法的用途和 :ref:`Input.parse_input_event<class_Input_method_parse_input_event>` 类似，但不会根据 :ref:`ProjectSettings.input_devices/pointing/emulate_touch_from_mouse<class_ProjectSettings_property_input_devices/pointing/emulate_touch_from_mouse>` 等项目设置对指定的 ``event`` 进行重映射。

调用这个方法会将调用传播至子节点，按照以下顺序调用：

- :ref:`Node._input<class_Node_private_method__input>`\ 

- :ref:`Control._gui_input<class_Control_private_method__gui_input>` 仅用于 :ref:`Control<class_Control>` 节点

- :ref:`Node._shortcut_input<class_Node_private_method__shortcut_input>`\ 

- :ref:`Node._unhandled_key_input<class_Node_private_method__unhandled_key_input>`\ 

- :ref:`Node._unhandled_input<class_Node_private_method__unhandled_input>`\ 

如果某个方法使用 :ref:`set_input_as_handled<class_Viewport_method_set_input_as_handled>` 将输入标记为已处理，则列表中的后续方法均不会被调用。

如果没有任何方法处理该事件，并且 :ref:`physics_object_picking<class_Viewport_property_physics_object_picking>` 为 ``true``\ ，则该事件将用于物理对象的拾取。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_method_push_text_input:

.. rst-class:: classref-method

void **push_text_input** **(** :ref:`String<class_String>` text **)**

辅助方法，会调用当前聚焦 :ref:`Control<class_Control>` 的 ``set_text()`` 方法，前提是该控件上定义了这个方法（例如聚焦 Control 为 :ref:`Button<class_Button>` 或 :ref:`LineEdit<class_LineEdit>`\ ）。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_method_push_unhandled_input:

.. rst-class:: classref-method

void **push_unhandled_input** **(** :ref:`InputEvent<class_InputEvent>` event, :ref:`bool<class_bool>` in_local_coords=false **)**

在该 **Viewport** 中触发给定的 ``event`` 事件。可用于在不同视口之间传递 :ref:`InputEvent<class_InputEvent>`\ ，或者在本地应用通过网络传输或保存在文件中的事件。

如果 ``in_local_coords`` 为 ``false``\ ，则该事件中的位置使用的是嵌入器坐标系，会被转换至视口坐标系。如果 ``in_local_coords`` 为 ``true``\ ，则该事件的位置使用的是视口坐标系。

虽然这个方法的用途和 :ref:`Input.parse_input_event<class_Input_method_parse_input_event>` 类似，但不会根据 :ref:`ProjectSettings.input_devices/pointing/emulate_touch_from_mouse<class_ProjectSettings_property_input_devices/pointing/emulate_touch_from_mouse>` 等项目设置对指定的 ``event`` 进行重映射。

调用这个方法会将调用传播至子节点，按照以下顺序调用：

- :ref:`Node._shortcut_input<class_Node_private_method__shortcut_input>`\ 

- :ref:`Node._unhandled_key_input<class_Node_private_method__unhandled_key_input>`\ 

- :ref:`Node._unhandled_input<class_Node_private_method__unhandled_input>`\ 

如果某个方法使用 :ref:`set_input_as_handled<class_Viewport_method_set_input_as_handled>` 将输入标记为已处理，则列表中的后续方法均不会被调用。

如果上述方法均未处理事件，并且 :ref:`physics_object_picking<class_Viewport_property_physics_object_picking>` 为 ``true``\ ，则该事件将用于物理对象的拾取。

\ **注意：**\ 这个方法不会将输入事件传播至嵌入的 :ref:`Window<class_Window>` 和 :ref:`SubViewport<class_SubViewport>`\ 。

\ *已弃用。*\ 请改用 :ref:`push_input<class_Viewport_method_push_input>`\ 。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_method_set_canvas_cull_mask_bit:

.. rst-class:: classref-method

void **set_canvas_cull_mask_bit** **(** :ref:`int<class_int>` layer, :ref:`bool<class_bool>` enable **)**

设置或清除碰撞掩码上的比特位。可以简化 **Viewport** 层的编辑。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_method_set_input_as_handled:

.. rst-class:: classref-method

void **set_input_as_handled** **(** **)**

让输入停止继续沿着 :ref:`SceneTree<class_SceneTree>` 向下传播。

\ **注意：**\ 不会影响 :ref:`Input<class_Input>` 中的方法，只会影响事件的传播。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_method_set_positional_shadow_atlas_quadrant_subdiv:

.. rst-class:: classref-method

void **set_positional_shadow_atlas_quadrant_subdiv** **(** :ref:`int<class_int>` quadrant, :ref:`PositionalShadowAtlasQuadrantSubdiv<enum_Viewport_PositionalShadowAtlasQuadrantSubdiv>` subdiv **)**

设置在指定象限内使用的细分数。较多的细分数可以让你在场景中一次拥有更多的阴影，但是会降低阴影的质量。一个好的做法是让象限具有不同数量的细分，并尽可能地减少细分。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_method_update_mouse_cursor_state:

.. rst-class:: classref-method

void **update_mouse_cursor_state** **(** **)**

根据当前鼠标光标的位置强制立即更新显示。包括更新鼠标光标的形状以及发送必要的 :ref:`Control.mouse_entered<class_Control_signal_mouse_entered>`\ 、\ :ref:`CollisionObject2D.mouse_entered<class_CollisionObject2D_signal_mouse_entered>`\ 、\ :ref:`CollisionObject3D.mouse_entered<class_CollisionObject3D_signal_mouse_entered>`\ 、\ :ref:`Window.mouse_entered<class_Window_signal_mouse_entered>` 等信号，以及这些信号对应的 ``mouse_exited`` 版本。

.. rst-class:: classref-item-separator

----

.. _class_Viewport_method_warp_mouse:

.. rst-class:: classref-method

void **warp_mouse** **(** :ref:`Vector2<class_Vector2>` position **)**

使用该 **Viewport** 的坐标系，将鼠标指针移动到该 **Viewport** 中的指定位置。

\ **注意：**\ :ref:`warp_mouse<class_Viewport_method_warp_mouse>` 仅支持 Windows、macOS 和 Linux。它对 Android、iOS 和 Web 没有影响。

.. |virtual| replace:: :abbr:`virtual (本方法通常需要用户覆盖才能生效。)`
.. |const| replace:: :abbr:`const (本方法没有副作用。不会修改该实例的任何成员变量。)`
.. |vararg| replace:: :abbr:`vararg (本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。)`
.. |constructor| replace:: :abbr:`constructor (本方法用于构造某个类型。)`
.. |static| replace:: :abbr:`static (调用本方法无需实例，所以可以直接使用类名调用。)`
.. |operator| replace:: :abbr:`operator (本方法描述的是使用本类型作为左操作数的有效操作符。)`
.. |bitfield| replace:: :abbr:`BitField (这个值是由下列标志构成的位掩码整数。)`

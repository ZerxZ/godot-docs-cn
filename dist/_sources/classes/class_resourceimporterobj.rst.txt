:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/4.2/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/4.2/doc/classes/ResourceImporterOBJ.xml.

.. _class_ResourceImporterOBJ:

ResourceImporterOBJ
===================

**继承：** :ref:`ResourceImporter<class_ResourceImporter>` **<** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`

将 OBJ 3D 模型导入为独立的 :ref:`Mesh<class_Mesh>` 或场景。

.. rst-class:: classref-introduction-group

描述
----

与 :ref:`ResourceImporterScene<class_ResourceImporterScene>` 不同，\ **ResourceImporterOBJ** 默认情况下会导入单个 :ref:`Mesh<class_Mesh>` 资源，而不是导入一个 :ref:`PackedScene<class_PackedScene>`\ 。这使得在需要直接 :ref:`Mesh<class_Mesh>` 资源的节点（例如 :ref:`GridMap<class_GridMap>`\ 、\ :ref:`GPUParticles3D<class_GPUParticles3D>` 或 :ref:`CPUParticles3D<class_CPUParticles3D>`\ ）中使用 :ref:`Mesh<class_Mesh>` 资源变得更加容易。请注意，无论源格式如何，仍然可以使用\ **高级导入设置**\ 对话框保存 3D 场景中的网格资源。

另请参见 :ref:`ResourceImporterScene<class_ResourceImporterScene>`\ ，它被用于更高级的 3D 格式，例如 glTF。

.. rst-class:: classref-introduction-group

教程
----

- :doc:`导入 3D 场景 <../tutorials/assets_pipeline/importing_3d_scenes/index>`

.. rst-class:: classref-reftable-group

属性
----

.. table::
   :widths: auto

   +-------------------------------+----------------------------------------------------------------------------------------------------------+----------------------+
   | :ref:`bool<class_bool>`       | :ref:`force_disable_mesh_compression<class_ResourceImporterOBJ_property_force_disable_mesh_compression>` | ``false``            |
   +-------------------------------+----------------------------------------------------------------------------------------------------------+----------------------+
   | :ref:`bool<class_bool>`       | :ref:`generate_tangents<class_ResourceImporterOBJ_property_generate_tangents>`                           | ``true``             |
   +-------------------------------+----------------------------------------------------------------------------------------------------------+----------------------+
   | :ref:`Vector3<class_Vector3>` | :ref:`offset_mesh<class_ResourceImporterOBJ_property_offset_mesh>`                                       | ``Vector3(0, 0, 0)`` |
   +-------------------------------+----------------------------------------------------------------------------------------------------------+----------------------+
   | :ref:`bool<class_bool>`       | :ref:`optimize_mesh<class_ResourceImporterOBJ_property_optimize_mesh>`                                   | ``true``             |
   +-------------------------------+----------------------------------------------------------------------------------------------------------+----------------------+
   | :ref:`Vector3<class_Vector3>` | :ref:`scale_mesh<class_ResourceImporterOBJ_property_scale_mesh>`                                         | ``Vector3(1, 1, 1)`` |
   +-------------------------------+----------------------------------------------------------------------------------------------------------+----------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

属性说明
--------

.. _class_ResourceImporterOBJ_property_force_disable_mesh_compression:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **force_disable_mesh_compression** = ``false``

如果为 ``true``\ ，则不会使用网格压缩。如果你在网格法线或 UV 中发现块状伪影，或者如果你的网格在每个方向都大于几千米，请考虑启用。

.. rst-class:: classref-item-separator

----

.. _class_ResourceImporterOBJ_property_generate_tangents:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **generate_tangents** = ``true``

如果为 ``true``\ ，如果源网格没有切线数据，则使用 `Mikktspace <http://www.mikktspace.com/>`__ 生成顶点切线。如果可能，建议让 3D 建模软件在导出时生成切线，而不是依赖该选项。正确显示法线和高度贴图，以及任何需要切线的材质/着色器功能都需要切线。

如果你不需要那些需要切线的材质特性，则禁用该功能可以减少输出文件大小，并在源 3D 文件不包含切线的情况下加快导入速度。

.. rst-class:: classref-item-separator

----

.. _class_ResourceImporterOBJ_property_offset_mesh:

.. rst-class:: classref-property

:ref:`Vector3<class_Vector3>` **offset_mesh** = ``Vector3(0, 0, 0)``

将网格数据偏移指定值。这可被用于解决未对齐的网格，而无需修改源文件。

.. rst-class:: classref-item-separator

----

.. _class_ResourceImporterOBJ_property_optimize_mesh:

.. rst-class:: classref-property

:ref:`bool<class_bool>` **optimize_mesh** = ``true``

未使用的参数。这目前没有效果。

.. rst-class:: classref-item-separator

----

.. _class_ResourceImporterOBJ_property_scale_mesh:

.. rst-class:: classref-property

:ref:`Vector3<class_Vector3>` **scale_mesh** = ``Vector3(1, 1, 1)``

按指定值缩放网格数据。这可被用于解决缩放错误的网格，而无需修改源文件。

.. |virtual| replace:: :abbr:`virtual (本方法通常需要用户覆盖才能生效。)`
.. |const| replace:: :abbr:`const (本方法没有副作用。不会修改该实例的任何成员变量。)`
.. |vararg| replace:: :abbr:`vararg (本方法除了在此处描述的参数外，还能够继续接受任意数量的参数。)`
.. |constructor| replace:: :abbr:`constructor (本方法用于构造某个类型。)`
.. |static| replace:: :abbr:`static (调用本方法无需实例，所以可以直接使用类名调用。)`
.. |operator| replace:: :abbr:`operator (本方法描述的是使用本类型作为左操作数的有效操作符。)`
.. |bitfield| replace:: :abbr:`BitField (这个值是由下列标志构成的位掩码整数。)`
